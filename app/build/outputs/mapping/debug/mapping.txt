# compiler: R8
# compiler_version: 2.1.75
# min_api: 21
# pg_map_id: b30b0ca
# common_typos_disable
XI.CA.XI.K0 -> XI.CA.XI.K0:
    1:4:boolean K0() -> K0
XI.CA.XI.K0$XI -> XI.CA.XI.K0$XI:
    1:6:void handleMessage(android.os.Message) -> handleMessage
XI.K0.XI.XI$K0 -> XI.K0.XI.XI$K0:
    1:3:java.lang.String K0(android.content.Context,java.lang.String) -> K0
    0:2:java.lang.String XI(android.content.Context,java.lang.String) -> XI
XI.K0.XI.XI$K0$XI -> XI.K0.XI.XI$K0$XI:
    1:2:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
XI.XI.K0.K0$XI -> XI.XI.K0.K0$XI:
    1:5:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    1:1:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
XI.XI.K0.XI -> XI.XI.K0.XI:
    1:1:java.lang.String K0(android.content.Context) -> K0
    2:2:java.lang.String K0(android.content.Context,java.lang.String) -> K0
    1:1:java.lang.String XI(android.content.Context,java.lang.String) -> XI
    0:2:java.lang.String XI(android.content.Context) -> XI
    0:1:java.lang.String kM(android.content.Context) -> kM
    1:2:void xo(android.content.Context) -> xo
XI.kM.XI.XI.XI.XI$XI -> XI.kM.XI.XI.XI.XI$XI:
    1:2:void run() -> run
XI.xo.XI.XI.CA -> XI.xo.XI.XI.CA:
    1:8:java.lang.String XI(android.content.Context,XI.xo.XI.XI.XI) -> XI
    9:24:boolean XI(android.content.Context,boolean) -> XI
XI.xo.XI.XI.xo -> XI.xo.XI.XI.xo:
    1:2:void onReceive(android.content.Context,android.content.Intent) -> onReceive
android.support.v4.app.INotificationSideChannel$Stub -> android.support.v4.app.INotificationSideChannel$Stub:
    20:22:void <init>() -> <init>
    40:40:android.os.IBinder asBinder() -> asBinder
    29:36:android.support.v4.app.INotificationSideChannel asInterface(android.os.IBinder) -> asInterface
    44:91:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.app.INotificationSideChannel$Stub$Proxy -> android.support.v4.app.INotificationSideChannel$Stub$Proxy:
    android.os.IBinder mRemote -> a
    97:99:void <init>(android.os.IBinder) -> <init>
    102:102:android.os.IBinder asBinder() -> asBinder
    137:148:void cancel(java.lang.String,int,java.lang.String) -> cancel
    154:163:void cancelAll(java.lang.String) -> cancelAll
    106:106:java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    113:131:void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
android.support.v4.graphics.drawable.IconCompatParcelizer -> android.support.v4.graphics.drawable.IconCompatParcelizer:
    10:10:void <init>() -> <init>
    12:12:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    16:17:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.media.MediaBrowserCompat -> android.support.v4.media.MediaBrowserCompat:
    boolean DEBUG -> b
    android.support.v4.media.MediaBrowserCompat$MediaBrowserImpl mImpl -> a
    109:109:void <clinit>() -> <clinit>
    187:199:void <init>(android.content.Context,android.content.ComponentName,android.support.v4.media.MediaBrowserCompat$ConnectionCallback,android.os.Bundle) -> <init>
    209:210:void connect() -> a
    217:218:void disconnect() -> b
    270:270:android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> c
android.support.v4.media.MediaBrowserCompat$CallbackHandler -> android.support.v4.media.MediaBrowserCompat$a:
    java.lang.ref.WeakReference mCallbacksMessengerRef -> b
    java.lang.ref.WeakReference mCallbackImplRef -> a
    2080:2082:void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserServiceCallbackImpl) -> <init>
    2141:2142:void setCallbacksMessenger(android.os.Messenger) -> a
    2086:2138:void handleMessage(android.os.Message) -> handleMessage
android.support.v4.media.MediaBrowserCompat$ConnectionCallback -> android.support.v4.media.MediaBrowserCompat$b:
    622:629:void <init>() -> <init>
    651:652:void setInternalConnectionCallback(android.support.v4.media.MediaBrowserCompat$ConnectionCallback$ConnectionCallbackInternal) -> setInternalConnectionCallback
android.support.v4.media.MediaBrowserCompat$ConnectionCallback$ConnectionCallbackInternal -> android.support.v4.media.MediaBrowserCompat$b$a:
    void onConnectionSuspended() -> a
    void onConnected() -> b
    void onConnectionFailed() -> c
android.support.v4.media.MediaBrowserCompat$ConnectionCallback$StubApi21 -> android.support.v4.media.MediaBrowserCompat$b$b:
    android.support.v4.media.MediaBrowserCompat$ConnectionCallback this$0 -> a
    661:662:void <init>(android.support.v4.media.MediaBrowserCompat$ConnectionCallback) -> <init>
    674:678:void onConnectionSuspended() -> a
    666:670:void onConnected() -> b
    682:686:void onConnectionFailed() -> c
android.support.v4.media.MediaBrowserCompat$CustomActionCallback -> android.support.v4.media.MediaBrowserCompat$c:
    void onError(java.lang.String,android.os.Bundle,android.os.Bundle) -> a
    void onProgressUpdate(java.lang.String,android.os.Bundle,android.os.Bundle) -> b
    void onResult(java.lang.String,android.os.Bundle,android.os.Bundle) -> c
android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver -> android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver:
    android.os.Bundle mExtras -> e
    android.support.v4.media.MediaBrowserCompat$CustomActionCallback mCallback -> f
    java.lang.String mAction -> d
    2310:2329:void onReceiveResult(int,android.os.Bundle) -> a
android.support.v4.media.MediaBrowserCompat$ItemCallback -> android.support.v4.media.MediaBrowserCompat$d:
    void onError(java.lang.String) -> a
    void onItemLoaded(android.support.v4.media.MediaBrowserCompat$MediaItem) -> b
android.support.v4.media.MediaBrowserCompat$ItemReceiver -> android.support.v4.media.MediaBrowserCompat$ItemReceiver:
    android.support.v4.media.MediaBrowserCompat$ItemCallback mCallback -> e
    java.lang.String mMediaId -> d
    2246:2258:void onReceiveResult(int,android.os.Bundle) -> a
android.support.v4.media.MediaBrowserCompat$MediaBrowserImpl -> android.support.v4.media.MediaBrowserCompat$e:
    android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> d
    void disconnect() -> g
    void connect() -> h
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi21 -> android.support.v4.media.MediaBrowserCompat$f:
    android.content.Context mContext -> a
    android.support.v4.media.MediaBrowserCompat$CallbackHandler mHandler -> d
    android.os.Messenger mCallbacksMessenger -> g
    android.os.Bundle mRootHints -> c
    android.support.v4.media.session.MediaSessionCompat$Token mMediaSessionToken -> h
    android.support.v4.media.MediaBrowserCompat$ServiceBinderWrapper mServiceBinderWrapper -> f
    java.lang.Object mBrowserObj -> b
    androidx.collection.ArrayMap mSubscriptions -> e
    1613:1630:void <init>(android.content.Context,android.content.ComponentName,android.support.v4.media.MediaBrowserCompat$ConnectionCallback,android.os.Bundle) -> <init>
    1906:1910:void onConnectionSuspended() -> a
    1880:1902:void onConnected() -> b
    1915:1915:void onConnectionFailed() -> c
    1674:1678:android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> d
    1921:1921:void onServiceConnected(android.os.Messenger,java.lang.String,android.support.v4.media.session.MediaSessionCompat$Token,android.os.Bundle) -> e
    1932:1966:void onLoadChildren(android.os.Messenger,java.lang.String,java.util.List,android.os.Bundle,android.os.Bundle) -> f
    1639:1647:void disconnect() -> g
    1634:1635:void connect() -> h
    1926:1926:void onConnectionFailed(android.os.Messenger) -> i
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi23 -> android.support.v4.media.MediaBrowserCompat$g:
    1978:1979:void <init>(android.content.Context,android.content.ComponentName,android.support.v4.media.MediaBrowserCompat$ConnectionCallback,android.os.Bundle) -> <init>
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplApi26 -> android.support.v4.media.MediaBrowserCompat$h:
    1995:1996:void <init>(android.content.Context,android.content.ComponentName,android.support.v4.media.MediaBrowserCompat$ConnectionCallback,android.os.Bundle) -> <init>
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase -> android.support.v4.media.MediaBrowserCompat$i:
    android.content.Context mContext -> a
    android.content.ComponentName mServiceComponent -> b
    android.support.v4.media.session.MediaSessionCompat$Token mMediaSessionToken -> l
    android.support.v4.media.MediaBrowserCompat$ConnectionCallback mCallback -> c
    android.support.v4.media.MediaBrowserCompat$CallbackHandler mHandler -> e
    java.lang.String mRootId -> k
    android.os.Bundle mRootHints -> d
    android.support.v4.media.MediaBrowserCompat$ServiceBinderWrapper mServiceBinderWrapper -> i
    androidx.collection.ArrayMap mSubscriptions -> f
    int mState -> g
    android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$MediaServiceConnection mServiceConnection -> h
    android.os.Messenger mCallbacksMessenger -> j
    993:1020:void <init>(android.content.Context,android.content.ComponentName,android.support.v4.media.MediaBrowserCompat$ConnectionCallback,android.os.Bundle) -> <init>
    1481:1491:void dump() -> a
    1125:1135:void forceCloseConnection() -> b
    1445:1457:java.lang.String getStateLabel(int) -> c
    1171:1175:android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> d
    1329:1368:void onServiceConnected(android.os.Messenger,java.lang.String,android.support.v4.media.session.MediaSessionCompat$Token,android.os.Bundle) -> e
    1396:1434:void onLoadChildren(android.os.Messenger,java.lang.String,java.util.List,android.os.Bundle,android.os.Bundle) -> f
    1085:1112:void disconnect() -> g
    1024:1078:void connect() -> h
    1372:1390:void onConnectionFailed(android.os.Messenger) -> i
    1139:1139:boolean isConnected() -> j
    1466:1474:boolean isCurrent(android.os.Messenger,java.lang.String) -> k
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$1 -> android.support.v4.media.MediaBrowserCompat$i$a:
    android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase this$0 -> a
    1030:1030:void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase) -> <init>
    1034:1076:void run() -> run
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$2 -> android.support.v4.media.MediaBrowserCompat$i$b:
    android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase this$0 -> a
    1086:1086:void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase) -> <init>
    1090:1110:void run() -> run
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$MediaServiceConnection -> android.support.v4.media.MediaBrowserCompat$i$c:
    android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase this$0 -> a
    1497:1498:void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase) -> <init>
    1592:1602:boolean isCurrent(java.lang.String) -> a
    1581:1586:void postOrRun(java.lang.Runnable) -> b
    1502:1548:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    1552:1578:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$MediaServiceConnection$1 -> android.support.v4.media.MediaBrowserCompat$i$c$a:
    android.os.IBinder val$binder -> b
    android.content.ComponentName val$name -> a
    android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$MediaServiceConnection this$1 -> c
    1502:1502:void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$MediaServiceConnection,android.content.ComponentName,android.os.IBinder) -> <init>
    1505:1546:void run() -> run
android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$MediaServiceConnection$2 -> android.support.v4.media.MediaBrowserCompat$i$c$b:
    android.content.ComponentName val$name -> a
    android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$MediaServiceConnection this$1 -> b
    1552:1552:void <init>(android.support.v4.media.MediaBrowserCompat$MediaBrowserImplBase$MediaServiceConnection,android.content.ComponentName) -> <init>
    1555:1576:void run() -> run
android.support.v4.media.MediaBrowserCompat$MediaBrowserServiceCallbackImpl -> android.support.v4.media.MediaBrowserCompat$j:
    void onServiceConnected(android.os.Messenger,java.lang.String,android.support.v4.media.session.MediaSessionCompat$Token,android.os.Bundle) -> e
    void onLoadChildren(android.os.Messenger,java.lang.String,java.util.List,android.os.Bundle,android.os.Bundle) -> f
    void onConnectionFailed(android.os.Messenger) -> i
android.support.v4.media.MediaBrowserCompat$MediaItem -> android.support.v4.media.MediaBrowserCompat$MediaItem:
    android.support.v4.media.MediaDescriptionCompat mDescription -> b
    int mFlags -> a
    563:563:void <clinit>() -> <clinit>
    524:533:void <init>(android.support.v4.media.MediaDescriptionCompat,int) -> <init>
    538:541:void <init>(android.os.Parcel) -> <init>
    487:494:android.support.v4.media.MediaBrowserCompat$MediaItem fromMediaItem(java.lang.Object) -> a
    508:515:java.util.List fromMediaItemList(java.util.List) -> b
    545:545:int describeContents() -> describeContents
    556:560:java.lang.String toString() -> toString
    550:552:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.MediaBrowserCompat$MediaItem$1 -> android.support.v4.media.MediaBrowserCompat$MediaItem$a:
    564:564:void <init>() -> <init>
    567:567:android.support.v4.media.MediaBrowserCompat$MediaItem createFromParcel(android.os.Parcel) -> a
    572:572:android.support.v4.media.MediaBrowserCompat$MediaItem[] newArray(int) -> b
    564:564:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    564:564:java.lang.Object[] newArray(int) -> newArray
android.support.v4.media.MediaBrowserCompat$SearchCallback -> android.support.v4.media.MediaBrowserCompat$k:
    void onError(java.lang.String,android.os.Bundle) -> a
    void onSearchResult(java.lang.String,android.os.Bundle,java.util.List) -> b
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver -> android.support.v4.media.MediaBrowserCompat$SearchResultReceiver:
    android.os.Bundle mExtras -> e
    android.support.v4.media.MediaBrowserCompat$SearchCallback mCallback -> f
    java.lang.String mQuery -> d
    2276:2292:void onReceiveResult(int,android.os.Bundle) -> a
android.support.v4.media.MediaBrowserCompat$ServiceBinderWrapper -> android.support.v4.media.MediaBrowserCompat$l:
    android.os.Messenger mMessenger -> a
    android.os.Bundle mRootHints -> b
    2149:2152:void <init>(android.os.IBinder,android.os.Bundle) -> <init>
    2169:2174:void addSubscription(java.lang.String,android.os.IBinder,android.os.Bundle,android.os.Messenger) -> a
    2156:2160:void connect(android.content.Context,android.os.Messenger) -> b
    2163:2164:void disconnect(android.os.Messenger) -> c
    2195:2199:void registerCallbackMessenger(android.content.Context,android.os.Messenger) -> d
    2225:2231:void sendRequest(int,android.os.Bundle,android.os.Messenger) -> e
    2202:2203:void unregisterCallbackMessenger(android.os.Messenger) -> f
android.support.v4.media.MediaBrowserCompat$Subscription -> android.support.v4.media.MediaBrowserCompat$m:
    java.util.List mOptionsList -> b
    java.util.List mCallbacks -> a
    2037:2040:void <init>() -> <init>
    2055:2060:android.support.v4.media.MediaBrowserCompat$SubscriptionCallback getCallback(android.os.Bundle) -> a
    2051:2051:java.util.List getCallbacks() -> b
    2047:2047:java.util.List getOptionsList() -> c
android.support.v4.media.MediaBrowserCompat$SubscriptionCallback -> android.support.v4.media.MediaBrowserCompat$n:
    android.os.IBinder mToken -> b
    java.lang.ref.WeakReference mSubscriptionRef -> c
    java.lang.Object mSubscriptionCallbackObj -> a
    698:709:void <init>() -> <init>
    718:718:void onChildrenLoaded(java.lang.String,java.util.List) -> a
    731:731:void onChildrenLoaded(java.lang.String,java.util.List,android.os.Bundle) -> b
    743:743:void onError(java.lang.String) -> c
    758:758:void onError(java.lang.String,android.os.Bundle) -> d
android.support.v4.media.MediaBrowserCompat$SubscriptionCallback$StubApi21 -> android.support.v4.media.MediaBrowserCompat$n$a:
    android.support.v4.media.MediaBrowserCompat$SubscriptionCallback this$0 -> a
    765:766:void <init>(android.support.v4.media.MediaBrowserCompat$SubscriptionCallback) -> <init>
    770:789:void onChildrenLoaded(java.lang.String,java.util.List) -> c
    798:814:java.util.List applyOptions(java.util.List,android.os.Bundle) -> d
    793:794:void onError(java.lang.String) -> onError
android.support.v4.media.MediaBrowserCompat$SubscriptionCallback$StubApi26 -> android.support.v4.media.MediaBrowserCompat$n$b:
    android.support.v4.media.MediaBrowserCompat$SubscriptionCallback this$0 -> b
    821:822:void <init>(android.support.v4.media.MediaBrowserCompat$SubscriptionCallback) -> <init>
    833:834:void onError(java.lang.String,android.os.Bundle) -> a
    827:829:void onChildrenLoaded(java.lang.String,java.util.List,android.os.Bundle) -> b
android.support.v4.media.MediaBrowserCompatApi21 -> android.support.v4.media.a:
    45:46:void connect(java.lang.Object) -> a
    40:40:java.lang.Object createBrowser(android.content.Context,android.content.ComponentName,java.lang.Object,android.os.Bundle) -> b
    35:35:java.lang.Object createConnectionCallback(android.support.v4.media.MediaBrowserCompatApi21$ConnectionCallback) -> c
    74:74:java.lang.Object createSubscriptionCallback(android.support.v4.media.MediaBrowserCompatApi21$SubscriptionCallback) -> d
    49:51:void disconnect(java.lang.Object) -> e
    66:66:android.os.Bundle getExtras(java.lang.Object) -> f
    70:70:java.lang.Object getSessionToken(java.lang.Object) -> g
android.support.v4.media.MediaBrowserCompatApi21$ConnectionCallback -> android.support.v4.media.a$a:
    void onConnectionSuspended() -> a
    void onConnected() -> b
    void onConnectionFailed() -> c
android.support.v4.media.MediaBrowserCompatApi21$ConnectionCallbackProxy -> android.support.v4.media.a$b:
    android.support.v4.media.MediaBrowserCompatApi21$ConnectionCallback mConnectionCallback -> a
    97:99:void <init>(android.support.v4.media.MediaBrowserCompatApi21$ConnectionCallback) -> <init>
    103:104:void onConnected() -> onConnected
    113:114:void onConnectionFailed() -> onConnectionFailed
    108:109:void onConnectionSuspended() -> onConnectionSuspended
android.support.v4.media.MediaBrowserCompatApi21$MediaItem -> android.support.v4.media.a$c:
    149:149:java.lang.Object getDescription(java.lang.Object) -> a
    145:145:int getFlags(java.lang.Object) -> b
android.support.v4.media.MediaBrowserCompatApi21$SubscriptionCallback -> android.support.v4.media.a$d:
    void onChildrenLoaded(java.lang.String,java.util.List) -> c
android.support.v4.media.MediaBrowserCompatApi21$SubscriptionCallbackProxy -> android.support.v4.media.a$e:
    android.support.v4.media.MediaBrowserCompatApi21$SubscriptionCallback mSubscriptionCallback -> a
    126:128:void <init>(android.support.v4.media.MediaBrowserCompatApi21$SubscriptionCallback) -> <init>
    133:134:void onChildrenLoaded(java.lang.String,java.util.List) -> onChildrenLoaded
    138:139:void onError(java.lang.String) -> onError
android.support.v4.media.MediaBrowserCompatApi26 -> android.support.v4.media.b:
    31:31:java.lang.Object createSubscriptionCallback(android.support.v4.media.MediaBrowserCompatApi26$SubscriptionCallback) -> a
android.support.v4.media.MediaBrowserCompatApi26$SubscriptionCallback -> android.support.v4.media.b$a:
    void onError(java.lang.String,android.os.Bundle) -> a
    void onChildrenLoaded(java.lang.String,java.util.List,android.os.Bundle) -> b
android.support.v4.media.MediaBrowserCompatApi26$SubscriptionCallbackProxy -> android.support.v4.media.b$b:
    54:55:void <init>(android.support.v4.media.MediaBrowserCompatApi26$SubscriptionCallback) -> <init>
    60:62:void onChildrenLoaded(java.lang.String,java.util.List,android.os.Bundle) -> onChildrenLoaded
    66:68:void onError(java.lang.String,android.os.Bundle) -> onError
android.support.v4.media.MediaDescriptionCompat -> android.support.v4.media.MediaDescriptionCompat:
    android.net.Uri mMediaUri -> h
    android.net.Uri mIconUri -> f
    java.lang.Object mDescriptionObj -> i
    java.lang.CharSequence mTitle -> b
    java.lang.CharSequence mSubtitle -> c
    java.lang.CharSequence mDescription -> d
    android.os.Bundle mExtras -> g
    java.lang.String mMediaId -> a
    android.graphics.Bitmap mIcon -> e
    418:418:void <clinit>() -> <clinit>
    190:199:void <init>(java.lang.String,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,android.graphics.Bitmap,android.net.Uri,android.os.Bundle,android.net.Uri) -> <init>
    201:212:void <init>(android.os.Parcel) -> <init>
    375:414:android.support.v4.media.MediaDescriptionCompat fromMediaDescription(java.lang.Object) -> a
    331:359:java.lang.Object getMediaDescription() -> b
    220:220:java.lang.String getMediaId() -> c
    295:295:int describeContents() -> describeContents
    316:316:java.lang.String toString() -> toString
    300:312:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.MediaDescriptionCompat$1 -> android.support.v4.media.MediaDescriptionCompat$a:
    419:419:void <init>() -> <init>
    422:425:android.support.v4.media.MediaDescriptionCompat createFromParcel(android.os.Parcel) -> a
    431:431:android.support.v4.media.MediaDescriptionCompat[] newArray(int) -> b
    419:419:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    419:419:java.lang.Object[] newArray(int) -> newArray
android.support.v4.media.MediaDescriptionCompat$Builder -> android.support.v4.media.MediaDescriptionCompat$b:
    android.net.Uri mMediaUri -> h
    android.net.Uri mIconUri -> f
    java.lang.CharSequence mTitle -> b
    java.lang.CharSequence mSubtitle -> c
    java.lang.CharSequence mDescription -> d
    android.os.Bundle mExtras -> g
    java.lang.String mMediaId -> a
    android.graphics.Bitmap mIcon -> e
    451:452:void <init>() -> <init>
    552:552:android.support.v4.media.MediaDescriptionCompat build() -> a
    495:496:android.support.v4.media.MediaDescriptionCompat$Builder setDescription(java.lang.CharSequence) -> b
    530:531:android.support.v4.media.MediaDescriptionCompat$Builder setExtras(android.os.Bundle) -> c
    507:508:android.support.v4.media.MediaDescriptionCompat$Builder setIconBitmap(android.graphics.Bitmap) -> d
    519:520:android.support.v4.media.MediaDescriptionCompat$Builder setIconUri(android.net.Uri) -> e
    461:462:android.support.v4.media.MediaDescriptionCompat$Builder setMediaId(java.lang.String) -> f
    541:542:android.support.v4.media.MediaDescriptionCompat$Builder setMediaUri(android.net.Uri) -> g
    483:484:android.support.v4.media.MediaDescriptionCompat$Builder setSubtitle(java.lang.CharSequence) -> h
    472:473:android.support.v4.media.MediaDescriptionCompat$Builder setTitle(java.lang.CharSequence) -> i
android.support.v4.media.MediaDescriptionCompatApi21 -> android.support.v4.media.c:
    62:62:java.lang.Object fromParcel(android.os.Parcel) -> a
    42:42:java.lang.CharSequence getDescription(java.lang.Object) -> b
    54:54:android.os.Bundle getExtras(java.lang.Object) -> c
    46:46:android.graphics.Bitmap getIconBitmap(java.lang.Object) -> d
    50:50:android.net.Uri getIconUri(java.lang.Object) -> e
    30:30:java.lang.String getMediaId(java.lang.Object) -> f
    38:38:java.lang.CharSequence getSubtitle(java.lang.Object) -> g
    34:34:java.lang.CharSequence getTitle(java.lang.Object) -> h
    58:59:void writeToParcel(java.lang.Object,android.os.Parcel,int) -> i
android.support.v4.media.MediaDescriptionCompatApi21$Builder -> android.support.v4.media.c$a:
    100:100:java.lang.Object build(java.lang.Object) -> a
    67:67:java.lang.Object newInstance() -> b
    84:85:void setDescription(java.lang.Object,java.lang.CharSequence) -> c
    96:97:void setExtras(java.lang.Object,android.os.Bundle) -> d
    88:89:void setIconBitmap(java.lang.Object,android.graphics.Bitmap) -> e
    92:93:void setIconUri(java.lang.Object,android.net.Uri) -> f
    72:73:void setMediaId(java.lang.Object,java.lang.String) -> g
    80:81:void setSubtitle(java.lang.Object,java.lang.CharSequence) -> h
    76:77:void setTitle(java.lang.Object,java.lang.CharSequence) -> i
android.support.v4.media.MediaDescriptionCompatApi23 -> android.support.v4.media.d:
    26:26:android.net.Uri getMediaUri(java.lang.Object) -> a
android.support.v4.media.MediaDescriptionCompatApi23$Builder -> android.support.v4.media.d$a:
    31:32:void setMediaUri(java.lang.Object,android.net.Uri) -> a
android.support.v4.media.MediaMetadataCompat -> android.support.v4.media.MediaMetadataCompat:
    android.os.Bundle mBundle -> a
    java.lang.Object mMetadataObj -> b
    androidx.collection.ArrayMap METADATA_KEYS_TYPE -> c
    308:641:void <clinit>() -> <clinit>
    373:375:void <init>(android.os.Parcel) -> <init>
    384:384:boolean containsKey(java.lang.String) -> a
    607:616:android.support.v4.media.MediaMetadataCompat fromMediaMetadata(java.lang.Object) -> b
    423:423:long getLong(java.lang.String) -> c
    557:557:int describeContents() -> describeContents
    562:563:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.MediaMetadataCompat$1 -> android.support.v4.media.MediaMetadataCompat$a:
    642:642:void <init>() -> <init>
    645:645:android.support.v4.media.MediaMetadataCompat createFromParcel(android.os.Parcel) -> a
    650:650:android.support.v4.media.MediaMetadataCompat[] newArray(int) -> b
    642:642:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    642:642:java.lang.Object[] newArray(int) -> newArray
android.support.v4.media.MediaMetadataCompatApi21 -> android.support.v4.media.e:
    51:52:void writeToParcel(java.lang.Object,android.os.Parcel,int) -> a
android.support.v4.media.RatingCompat -> android.support.v4.media.RatingCompat:
    float mRatingValue -> b
    int mRatingStyle -> a
    128:128:void <clinit>() -> <clinit>
    106:109:void <init>(int,float) -> <init>
    119:119:int describeContents() -> describeContents
    113:114:java.lang.String toString() -> toString
    124:126:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.RatingCompat$1 -> android.support.v4.media.RatingCompat$a:
    129:129:void <init>() -> <init>
    137:137:android.support.v4.media.RatingCompat createFromParcel(android.os.Parcel) -> a
    142:142:android.support.v4.media.RatingCompat[] newArray(int) -> b
    129:129:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    129:129:java.lang.Object[] newArray(int) -> newArray
android.support.v4.media.session.IMediaControllerCallback$Stub -> android.support.v4.media.session.IMediaControllerCallback$Stub:
    19:21:void <init>() -> <init>
    39:39:android.os.IBinder asBinder() -> asBinder
    28:35:android.support.v4.media.session.IMediaControllerCallback asInterface(android.os.IBinder) -> asInterface
    43:183:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy -> android.support.v4.media.session.IMediaControllerCallback$Stub$Proxy:
    android.os.IBinder mRemote -> a
    189:191:void <init>(android.os.IBinder) -> <init>
    194:194:android.os.IBinder asBinder() -> asBinder
    198:198:java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    360:369:void onCaptioningEnabledChanged(boolean) -> onCaptioningEnabledChanged
    202:218:void onEvent(java.lang.String,android.os.Bundle) -> onEvent
    300:315:void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    252:267:void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
    234:249:void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat) -> onPlaybackStateChanged
    270:279:void onQueueChanged(java.util.List) -> onQueueChanged
    282:297:void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    336:345:void onRepeatModeChanged(int) -> onRepeatModeChanged
    221:229:void onSessionDestroyed() -> onSessionDestroyed
    384:392:void onSessionReady() -> onSessionReady
    372:381:void onShuffleModeChanged(int) -> onShuffleModeChanged
    348:357:void onShuffleModeChangedRemoved(boolean) -> onShuffleModeChangedRemoved
    318:333:void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) -> onVolumeInfoChanged
android.support.v4.media.session.IMediaSession$Stub -> android.support.v4.media.session.IMediaSession$Stub:
    18:20:void <init>() -> <init>
    38:38:android.os.IBinder asBinder() -> asBinder
    27:34:android.support.v4.media.session.IMediaSession asInterface(android.os.IBinder) -> asInterface
    42:616:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.media.session.IMediaSession$Stub$Proxy -> android.support.v4.media.session.IMediaSession$Stub$Proxy:
    android.os.IBinder mRemote -> a
    622:624:void <init>(android.os.IBinder) -> <init>
    1056:1074:void addQueueItem(android.support.v4.media.MediaDescriptionCompat) -> addQueueItem
    1077:1096:void addQueueItemAt(android.support.v4.media.MediaDescriptionCompat,int) -> addQueueItemAt
    832:846:void adjustVolume(int,int,java.lang.String) -> adjustVolume
    627:627:android.os.IBinder asBinder() -> asBinder
    1380:1391:void fastForward() -> fastForward
    949:967:android.os.Bundle getExtras() -> getExtras
    793:806:long getFlags() -> getFlags
    631:631:java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    771:789:android.app.PendingIntent getLaunchPendingIntent() -> getLaunchPendingIntent
    866:884:android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    737:750:java.lang.String getPackageName() -> getPackageName
    888:906:android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    910:923:java.util.List getQueue() -> getQueue
    927:945:java.lang.CharSequence getQueueTitle() -> getQueueTitle
    971:984:int getRatingType() -> getRatingType
    1005:1018:int getRepeatMode() -> getRepeatMode
    1039:1052:int getShuffleMode() -> getShuffleMode
    754:767:java.lang.String getTag() -> getTag
    810:828:android.support.v4.media.session.ParcelableVolumeInfo getVolumeAttributes() -> getVolumeAttributes
    988:1001:boolean isCaptioningEnabled() -> isCaptioningEnabled
    1022:1035:boolean isShuffleModeEnabledRemoved() -> isShuffleModeEnabledRemoved
    720:733:boolean isTransportControlEnabled() -> isTransportControlEnabled
    1352:1363:void next() -> next
    1324:1335:void pause() -> pause
    1223:1234:void play() -> play
    1237:1256:void playFromMediaId(java.lang.String,android.os.Bundle) -> playFromMediaId
    1259:1278:void playFromSearch(java.lang.String,android.os.Bundle) -> playFromSearch
    1281:1306:void playFromUri(android.net.Uri,android.os.Bundle) -> playFromUri
    1137:1148:void prepare() -> prepare
    1151:1170:void prepareFromMediaId(java.lang.String,android.os.Bundle) -> prepareFromMediaId
    1173:1192:void prepareFromSearch(java.lang.String,android.os.Bundle) -> prepareFromSearch
    1195:1220:void prepareFromUri(android.net.Uri,android.os.Bundle) -> prepareFromUri
    1366:1377:void previous() -> previous
    1423:1441:void rate(android.support.v4.media.RatingCompat) -> rate
    1444:1469:void rateWithExtras(android.support.v4.media.RatingCompat,android.os.Bundle) -> rateWithExtras
    690:702:void registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> registerCallbackListener
    1099:1117:void removeQueueItem(android.support.v4.media.MediaDescriptionCompat) -> removeQueueItem
    1120:1132:void removeQueueItemAt(int) -> removeQueueItemAt
    1394:1405:void rewind() -> rewind
    1408:1420:void seekTo(long) -> seekTo
    637:663:void sendCommand(java.lang.String,android.os.Bundle,android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper) -> sendCommand
    1532:1551:void sendCustomAction(java.lang.String,android.os.Bundle) -> sendCustomAction
    666:686:boolean sendMediaButton(android.view.KeyEvent) -> sendMediaButton
    1472:1484:void setCaptioningEnabled(boolean) -> setCaptioningEnabled
    1487:1499:void setRepeatMode(int) -> setRepeatMode
    1517:1529:void setShuffleMode(int) -> setShuffleMode
    1502:1514:void setShuffleModeEnabledRemoved(boolean) -> setShuffleModeEnabledRemoved
    849:863:void setVolumeTo(int,int,java.lang.String) -> setVolumeTo
    1309:1321:void skipToQueueItem(long) -> skipToQueueItem
    1338:1349:void stop() -> stop
    705:717:void unregisterCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> unregisterCallbackListener
android.support.v4.media.session.MediaControllerCompat -> android.support.v4.media.session.MediaControllerCompat:
    android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl mImpl -> a
    235:288:void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token) -> <init>
    307:310:boolean dispatchMediaButtonEvent(android.view.KeyEvent) -> a
android.support.v4.media.session.MediaControllerCompat$Callback -> android.support.v4.media.session.MediaControllerCompat$Callback:
    android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler mHandler -> b
    android.support.v4.media.session.IMediaControllerCallback mIControllerCallback -> c
    java.lang.Object mCallbackObj -> a
    693:699:void <init>() -> <init>
    780:780:void onAudioInfoChanged(android.support.v4.media.session.MediaControllerCompat$PlaybackInfo) -> a
    772:772:void onExtrasChanged(android.os.Bundle) -> b
    823:824:void binderDied() -> binderDied
    742:742:void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> c
    733:733:void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat) -> d
    753:753:void onQueueChanged(java.util.List) -> e
    763:763:void onQueueTitleChanged(java.lang.CharSequence) -> f
    714:714:void onSessionDestroyed() -> g
    725:725:void onSessionEvent(java.lang.String,android.os.Bundle) -> h
    843:848:void postToHandler(int,java.lang.Object,android.os.Bundle) -> i
android.support.v4.media.session.MediaControllerCompat$Callback$MessageHandler -> android.support.v4.media.session.MediaControllerCompat$Callback$a:
android.support.v4.media.session.MediaControllerCompat$Callback$StubApi21 -> android.support.v4.media.session.MediaControllerCompat$Callback$b:
    java.lang.ref.WeakReference mCallback -> a
    854:856:void <init>(android.support.v4.media.session.MediaControllerCompat$Callback) -> <init>
    894:898:void onMetadataChanged(java.lang.Object) -> a
    927:932:void onAudioInfoChanged(int,int,int,int,int) -> b
    881:890:void onPlaybackStateChanged(java.lang.Object) -> c
    868:877:void onSessionEvent(java.lang.String,android.os.Bundle) -> d
    918:922:void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    902:906:void onQueueChanged(java.util.List) -> onQueueChanged
    910:914:void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    860:864:void onSessionDestroyed() -> onSessionDestroyed
android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat -> android.support.v4.media.session.MediaControllerCompat$Callback$StubCompat:
    java.lang.ref.WeakReference mCallback -> a
    938:940:void <init>(android.support.v4.media.session.MediaControllerCompat$Callback) -> <init>
    992:997:void onCaptioningEnabledChanged(boolean) -> onCaptioningEnabledChanged
    944:948:void onEvent(java.lang.String,android.os.Bundle) -> onEvent
    1023:1027:void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    968:972:void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
    960:964:void onPlaybackStateChanged(android.support.v4.media.session.PlaybackStateCompat) -> onPlaybackStateChanged
    976:980:void onQueueChanged(java.util.List) -> onQueueChanged
    984:988:void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    1001:1005:void onRepeatModeChanged(int) -> onRepeatModeChanged
    952:956:void onSessionDestroyed() -> onSessionDestroyed
    1044:1048:void onSessionReady() -> onSessionReady
    1014:1019:void onShuffleModeChanged(int) -> onShuffleModeChanged
    1010:1010:void onShuffleModeChangedRemoved(boolean) -> onShuffleModeChangedRemoved
    1031:1040:void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) -> onVolumeInfoChanged
android.support.v4.media.session.MediaControllerCompat$MediaControllerImpl -> android.support.v4.media.session.MediaControllerCompat$a:
    boolean dispatchMediaButtonEvent(android.view.KeyEvent) -> a
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21 -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21:
    java.util.List mPendingCallbacks -> c
    java.lang.Object mLock -> b
    android.support.v4.media.session.MediaSessionCompat$Token mSessionToken -> e
    java.lang.Object mControllerObj -> a
    java.util.HashMap mCallbackMap -> d
    1951:1969:void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token) -> <init>
    2017:2017:boolean dispatchMediaButtonEvent(android.view.KeyEvent) -> a
    2203:2219:void processPendingCallbacksLocked() -> b
    2198:2199:void requestExtraBinder() -> c
    2179:2180:void sendCommand(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> d
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver:
    java.lang.ref.WeakReference mMediaControllerImpl -> a
    2225:2227:void <init>(android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21) -> <init>
    2231:2244:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraCallback -> android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraCallback:
    2249:2250:void <init>(android.support.v4.media.session.MediaControllerCompat$Callback) -> <init>
    2279:2279:void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    2261:2261:void onMetadataChanged(android.support.v4.media.MediaMetadataCompat) -> onMetadataChanged
    2267:2267:void onQueueChanged(java.util.List) -> onQueueChanged
    2273:2273:void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    2255:2255:void onSessionDestroyed() -> onSessionDestroyed
    2285:2285:void onVolumeInfoChanged(android.support.v4.media.session.ParcelableVolumeInfo) -> onVolumeInfoChanged
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi23 -> android.support.v4.media.session.MediaControllerCompat$b:
    2450:2451:void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token) -> <init>
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi24 -> android.support.v4.media.session.MediaControllerCompat$c:
    2479:2480:void <init>(android.content.Context,android.support.v4.media.session.MediaSessionCompat$Token) -> <init>
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplBase -> android.support.v4.media.session.MediaControllerCompat$d:
    android.support.v4.media.session.IMediaSession mBinder -> a
    1466:1468:void <init>(android.support.v4.media.session.MediaSessionCompat$Token) -> <init>
    1501:1509:boolean dispatchMediaButtonEvent(android.view.KeyEvent) -> a
android.support.v4.media.session.MediaControllerCompat$PlaybackInfo -> android.support.v4.media.session.MediaControllerCompat$e:
    1363:1369:void <init>(int,int,int,int,int) -> <init>
android.support.v4.media.session.MediaControllerCompatApi21 -> android.support.v4.media.session.a:
    46:46:java.lang.Object createCallback(android.support.v4.media.session.MediaControllerCompatApi21$Callback) -> a
    117:117:boolean dispatchMediaButtonEvent(java.lang.Object,android.view.KeyEvent) -> b
    42:42:java.lang.Object fromToken(android.content.Context,java.lang.Object) -> c
    130:131:void sendCommand(java.lang.Object,java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> d
android.support.v4.media.session.MediaControllerCompatApi21$Callback -> android.support.v4.media.session.a$a:
    void onMetadataChanged(java.lang.Object) -> a
    void onAudioInfoChanged(int,int,int,int,int) -> b
    void onPlaybackStateChanged(java.lang.Object) -> c
    void onSessionEvent(java.lang.String,android.os.Bundle) -> d
android.support.v4.media.session.MediaControllerCompatApi21$CallbackProxy -> android.support.v4.media.session.a$b:
    android.support.v4.media.session.MediaControllerCompatApi21$Callback mCallback -> a
    283:285:void <init>(android.support.v4.media.session.MediaControllerCompatApi21$Callback) -> <init>
    326:329:void onAudioInfoChanged(android.media.session.MediaController$PlaybackInfo) -> onAudioInfoChanged
    320:322:void onExtrasChanged(android.os.Bundle) -> onExtrasChanged
    305:306:void onMetadataChanged(android.media.MediaMetadata) -> onMetadataChanged
    300:301:void onPlaybackStateChanged(android.media.session.PlaybackState) -> onPlaybackStateChanged
    310:311:void onQueueChanged(java.util.List) -> onQueueChanged
    315:316:void onQueueTitleChanged(java.lang.CharSequence) -> onQueueTitleChanged
    289:290:void onSessionDestroyed() -> onSessionDestroyed
    294:296:void onSessionEvent(java.lang.String,android.os.Bundle) -> onSessionEvent
android.support.v4.media.session.MediaControllerCompatApi21$PlaybackInfo -> android.support.v4.media.session.a$c:
    200:200:android.media.AudioAttributes getAudioAttributes(java.lang.Object) -> a
    204:205:int getLegacyAudioStream(java.lang.Object) -> b
    228:261:int toLegacyStreamType(android.media.AudioAttributes) -> c
android.support.v4.media.session.MediaSessionCompat -> android.support.v4.media.session.MediaSessionCompat:
    android.support.v4.media.session.MediaControllerCompat mController -> a
    928:931:void ensureClassLoader(android.os.Bundle) -> a
    706:706:android.support.v4.media.session.MediaControllerCompat getController() -> b
    936:964:android.support.v4.media.session.PlaybackStateCompat getStateWithUpdatedPosition(android.support.v4.media.session.PlaybackStateCompat,android.support.v4.media.MediaMetadataCompat) -> c
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21 -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21:
    int mShuffleMode -> h
    boolean mCaptioningEnabled -> f
    int mRepeatMode -> g
    android.support.v4.media.session.PlaybackStateCompat mPlaybackState -> c
    int mRatingType -> e
    boolean mDestroyed -> a
    android.os.RemoteCallbackList mExtraControllerCallbacks -> b
    android.support.v4.media.MediaMetadataCompat mMetadata -> d
    java.lang.String getCallingPackage() -> a
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21$ExtraSession -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21$ExtraSession:
    android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21 this$0 -> a
    3603:3603:void <init>(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplApi21) -> <init>
    3834:3834:void addQueueItem(android.support.v4.media.MediaDescriptionCompat) -> addQueueItem
    3840:3840:void addQueueItemAt(android.support.v4.media.MediaDescriptionCompat,int) -> addQueueItemAt
    3668:3668:void adjustVolume(int,int,java.lang.String) -> adjustVolume
    3758:3758:void fastForward() -> fastForward
    3864:3864:android.os.Bundle getExtras() -> getExtras
    3656:3656:long getFlags() -> getFlags
    3649:3649:android.app.PendingIntent getLaunchPendingIntent() -> getLaunchPendingIntent
    3817:3817:android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    3637:3637:java.lang.String getPackageName() -> getPackageName
    3822:3822:android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    3828:3828:java.util.List getQueue() -> getQueue
    3858:3858:java.lang.CharSequence getQueueTitle() -> getQueueTitle
    3870:3870:int getRatingType() -> getRatingType
    3881:3881:int getRepeatMode() -> getRepeatMode
    3892:3892:int getShuffleMode() -> getShuffleMode
    3643:3643:java.lang.String getTag() -> getTag
    3662:3662:android.support.v4.media.session.ParcelableVolumeInfo getVolumeAttributes() -> getVolumeAttributes
    3875:3875:boolean isCaptioningEnabled() -> isCaptioningEnabled
    3886:3886:boolean isShuffleModeEnabledRemoved() -> isShuffleModeEnabledRemoved
    3898:3898:boolean isTransportControlEnabled() -> isTransportControlEnabled
    3746:3746:void next() -> next
    3734:3734:void pause() -> pause
    3704:3704:void play() -> play
    3710:3710:void playFromMediaId(java.lang.String,android.os.Bundle) -> playFromMediaId
    3716:3716:void playFromSearch(java.lang.String,android.os.Bundle) -> playFromSearch
    3722:3722:void playFromUri(android.net.Uri,android.os.Bundle) -> playFromUri
    3680:3680:void prepare() -> prepare
    3686:3686:void prepareFromMediaId(java.lang.String,android.os.Bundle) -> prepareFromMediaId
    3692:3692:void prepareFromSearch(java.lang.String,android.os.Bundle) -> prepareFromSearch
    3698:3698:void prepareFromUri(android.net.Uri,android.os.Bundle) -> prepareFromUri
    3752:3752:void previous() -> previous
    3776:3776:void rate(android.support.v4.media.RatingCompat) -> rate
    3782:3782:void rateWithExtras(android.support.v4.media.RatingCompat,android.os.Bundle) -> rateWithExtras
    3618:3627:void registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> registerCallbackListener
    3846:3846:void removeQueueItem(android.support.v4.media.MediaDescriptionCompat) -> removeQueueItem
    3852:3852:void removeQueueItemAt(int) -> removeQueueItemAt
    3764:3764:void rewind() -> rewind
    3770:3770:void seekTo(long) -> seekTo
    3607:3607:void sendCommand(java.lang.String,android.os.Bundle,android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper) -> sendCommand
    3811:3811:void sendCustomAction(java.lang.String,android.os.Bundle) -> sendCustomAction
    3613:3613:boolean sendMediaButton(android.view.KeyEvent) -> sendMediaButton
    3788:3788:void setCaptioningEnabled(boolean) -> setCaptioningEnabled
    3794:3794:void setRepeatMode(int) -> setRepeatMode
    3805:3805:void setShuffleMode(int) -> setShuffleMode
    3800:3800:void setShuffleModeEnabledRemoved(boolean) -> setShuffleModeEnabledRemoved
    3674:3674:void setVolumeTo(int,int,java.lang.String) -> setVolumeTo
    3728:3728:void skipToQueueItem(long) -> skipToQueueItem
    3740:3740:void stop() -> stop
    3631:3632:void unregisterCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> unregisterCallbackListener
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase:
    android.support.v4.media.session.PlaybackStateCompat mState -> i
    boolean mCaptioningEnabled -> n
    int mRepeatMode -> o
    int mRatingType -> m
    androidx.media.VolumeProviderCompat mVolumeProvider -> t
    java.lang.Object mLock -> d
    int mFlags -> g
    java.lang.CharSequence mQueueTitle -> l
    android.os.RemoteCallbackList mControllerCallbacks -> e
    android.app.PendingIntent mSessionActivity -> j
    android.media.AudioManager mAudioManager -> c
    android.os.Bundle mExtras -> q
    boolean mDestroyed -> f
    java.lang.String mPackageName -> a
    android.support.v4.media.MediaMetadataCompat mMetadata -> h
    int mVolumeType -> r
    java.lang.String mTag -> b
    int mLocalStream -> s
    int mShuffleMode -> p
    java.util.List mQueue -> k
    void adjustVolume(int,int) -> a
    void postToHandler(int,int,int,java.lang.Object,android.os.Bundle) -> b
    void setVolumeTo(int,int) -> c
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$Command -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$a:
    2983:2987:void <init>(java.lang.String,android.os.Bundle,android.os.ResultReceiver) -> <init>
android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub -> android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase$MediaSessionStub:
    android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase this$0 -> a
    2653:2653:void <init>(android.support.v4.media.session.MediaSessionCompat$MediaSessionImplBase) -> <init>
    2894:2895:void addQueueItem(android.support.v4.media.MediaDescriptionCompat) -> addQueueItem
    2899:2900:void addQueueItemAt(android.support.v4.media.MediaDescriptionCompat,int) -> addQueueItemAt
    2745:2745:void adjustVolume(int,int,java.lang.String) -> adjustVolume
    2820:2821:void fastForward() -> fastForward
    2919:2921:android.os.Bundle getExtras() -> getExtras
    2714:2716:long getFlags() -> getFlags
    2706:2708:android.app.PendingIntent getLaunchPendingIntent() -> getLaunchPendingIntent
    2871:2871:android.support.v4.media.MediaMetadataCompat getMetadata() -> getMetadata
    2695:2695:java.lang.String getPackageName() -> getPackageName
    2878:2882:android.support.v4.media.session.PlaybackStateCompat getPlaybackState() -> getPlaybackState
    2887:2889:java.util.List getQueue() -> getQueue
    2914:2914:java.lang.CharSequence getQueueTitle() -> getQueueTitle
    2927:2927:int getRatingType() -> getRatingType
    2938:2938:int getRepeatMode() -> getRepeatMode
    2949:2949:int getShuffleMode() -> getShuffleMode
    2701:2701:java.lang.String getTag() -> getTag
    2726:2740:android.support.v4.media.session.ParcelableVolumeInfo getVolumeAttributes() -> getVolumeAttributes
    2932:2932:boolean isCaptioningEnabled() -> isCaptioningEnabled
    2943:2943:boolean isShuffleModeEnabledRemoved() -> isShuffleModeEnabledRemoved
    2954:2954:boolean isTransportControlEnabled() -> isTransportControlEnabled
    2810:2811:void next() -> next
    2800:2801:void pause() -> pause
    2775:2776:void play() -> play
    2780:2781:void playFromMediaId(java.lang.String,android.os.Bundle) -> playFromMediaId
    2785:2786:void playFromSearch(java.lang.String,android.os.Bundle) -> playFromSearch
    2790:2791:void playFromUri(android.net.Uri,android.os.Bundle) -> playFromUri
    2958:2958:void postToHandler(int) -> postToHandler
    2962:2962:void postToHandler(int,int) -> postToHandler
    2966:2966:void postToHandler(int,java.lang.Object) -> postToHandler
    2970:2970:void postToHandler(int,java.lang.Object,int) -> postToHandler
    2974:2974:void postToHandler(int,java.lang.Object,android.os.Bundle) -> postToHandler
    2755:2756:void prepare() -> prepare
    2760:2761:void prepareFromMediaId(java.lang.String,android.os.Bundle) -> prepareFromMediaId
    2765:2766:void prepareFromSearch(java.lang.String,android.os.Bundle) -> prepareFromSearch
    2770:2771:void prepareFromUri(android.net.Uri,android.os.Bundle) -> prepareFromUri
    2815:2816:void previous() -> previous
    2835:2836:void rate(android.support.v4.media.RatingCompat) -> rate
    2840:2841:void rateWithExtras(android.support.v4.media.RatingCompat,android.os.Bundle) -> rateWithExtras
    2674:2685:void registerCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> registerCallbackListener
    2904:2905:void removeQueueItem(android.support.v4.media.MediaDescriptionCompat) -> removeQueueItem
    2909:2910:void removeQueueItemAt(int) -> removeQueueItemAt
    2825:2826:void rewind() -> rewind
    2830:2831:void seekTo(long) -> seekTo
    2656:2658:void sendCommand(java.lang.String,android.os.Bundle,android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper) -> sendCommand
    2866:2867:void sendCustomAction(java.lang.String,android.os.Bundle) -> sendCustomAction
    2662:2667:boolean sendMediaButton(android.view.KeyEvent) -> sendMediaButton
    2845:2846:void setCaptioningEnabled(boolean) -> setCaptioningEnabled
    2850:2851:void setRepeatMode(int) -> setRepeatMode
    2860:2861:void setShuffleMode(int) -> setShuffleMode
    2856:2856:void setShuffleModeEnabledRemoved(boolean) -> setShuffleModeEnabledRemoved
    2750:2750:void setVolumeTo(int,int,java.lang.String) -> setVolumeTo
    2795:2796:void skipToQueueItem(long) -> skipToQueueItem
    2805:2806:void stop() -> stop
    2689:2690:void unregisterCallbackListener(android.support.v4.media.session.IMediaControllerCallback) -> unregisterCallbackListener
android.support.v4.media.session.MediaSessionCompat$QueueItem -> android.support.v4.media.session.MediaSessionCompat$QueueItem:
    android.support.v4.media.MediaDescriptionCompat mDescription -> a
    long mId -> b
    java.lang.Object mItem -> c
    1875:1875:void <clinit>() -> <clinit>
    1772:1782:void <init>(java.lang.Object,android.support.v4.media.MediaDescriptionCompat,long) -> <init>
    1784:1787:void <init>(android.os.Parcel) -> <init>
    1844:1851:android.support.v4.media.session.MediaSessionCompat$QueueItem fromQueueItem(java.lang.Object) -> a
    1865:1872:java.util.List fromQueueItemList(java.util.List) -> b
    1811:1811:int describeContents() -> describeContents
    1891:1891:java.lang.String toString() -> toString
    1805:1807:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.MediaSessionCompat$QueueItem$1 -> android.support.v4.media.session.MediaSessionCompat$QueueItem$a:
    1876:1876:void <init>() -> <init>
    1880:1880:android.support.v4.media.session.MediaSessionCompat$QueueItem createFromParcel(android.os.Parcel) -> a
    1885:1885:android.support.v4.media.session.MediaSessionCompat$QueueItem[] newArray(int) -> b
    1876:1876:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1876:1876:java.lang.Object[] newArray(int) -> newArray
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper -> android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper:
    android.os.ResultReceiver mResultReceiver -> a
    1917:1917:void <clinit>() -> <clinit>
    1912:1914:void <init>(android.os.Parcel) -> <init>
    1931:1931:int describeContents() -> describeContents
    1936:1937:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$1 -> android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper$a:
    1917:1917:void <init>() -> <init>
    1920:1920:android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper createFromParcel(android.os.Parcel) -> a
    1925:1925:android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper[] newArray(int) -> b
    1917:1917:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1917:1917:java.lang.Object[] newArray(int) -> newArray
android.support.v4.media.session.MediaSessionCompat$Token -> android.support.v4.media.session.MediaSessionCompat$Token:
    android.support.v4.media.session.IMediaSession mExtraBinder -> b
    java.lang.Object mInner -> a
    1726:1726:void <clinit>() -> <clinit>
    1556:1557:void <init>(java.lang.Object) -> <init>
    1560:1561:void <init>(java.lang.Object,android.support.v4.media.session.IMediaSession) -> <init>
    1563:1567:void <init>(java.lang.Object,android.support.v4.media.session.IMediaSession,android.os.Bundle) -> <init>
    1581:1581:android.support.v4.media.session.MediaSessionCompat$Token fromToken(java.lang.Object) -> a
    1599:1602:android.support.v4.media.session.MediaSessionCompat$Token fromToken(java.lang.Object,android.support.v4.media.session.IMediaSession) -> b
    1664:1664:android.support.v4.media.session.IMediaSession getExtraBinder() -> c
    1656:1656:java.lang.Object getToken() -> d
    1607:1607:int describeContents() -> describeContents
    1672:1673:void setExtraBinder(android.support.v4.media.session.IMediaSession) -> e
    1629:1643:boolean equals(java.lang.Object) -> equals
    1688:1689:void setSessionToken2Bundle(android.os.Bundle) -> f
    1621:1624:int hashCode() -> hashCode
    1612:1617:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.MediaSessionCompat$Token$1 -> android.support.v4.media.session.MediaSessionCompat$Token$a:
    1727:1727:void <init>() -> <init>
    1731:1736:android.support.v4.media.session.MediaSessionCompat$Token createFromParcel(android.os.Parcel) -> a
    1741:1741:android.support.v4.media.session.MediaSessionCompat$Token[] newArray(int) -> b
    1727:1727:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1727:1727:java.lang.Object[] newArray(int) -> newArray
android.support.v4.media.session.MediaSessionCompatApi21 -> android.support.v4.media.session.b:
    57:60:java.lang.Object verifyToken(java.lang.Object) -> a
android.support.v4.media.session.MediaSessionCompatApi21$QueueItem -> android.support.v4.media.session.b$a:
    270:270:java.lang.Object getDescription(java.lang.Object) -> a
    274:274:long getQueueId(java.lang.Object) -> b
android.support.v4.media.session.ParcelableVolumeInfo -> android.support.v4.media.session.ParcelableVolumeInfo:
    int maxVolume -> d
    int currentVolume -> e
    int audioStream -> b
    int controlType -> c
    int volumeType -> a
    65:65:void <clinit>() -> <clinit>
    34:40:void <init>(int,int,int,int,int) -> <init>
    42:48:void <init>(android.os.Parcel) -> <init>
    52:52:int describeContents() -> describeContents
    57:62:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.ParcelableVolumeInfo$1 -> android.support.v4.media.session.ParcelableVolumeInfo$a:
    66:66:void <init>() -> <init>
    69:69:android.support.v4.media.session.ParcelableVolumeInfo createFromParcel(android.os.Parcel) -> a
    74:74:android.support.v4.media.session.ParcelableVolumeInfo[] newArray(int) -> b
    66:66:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    66:66:java.lang.Object[] newArray(int) -> newArray
android.support.v4.media.session.PlaybackStateCompat -> android.support.v4.media.session.PlaybackStateCompat:
    long mActiveItemId -> j
    long mActions -> e
    long mUpdateTime -> h
    long mPosition -> b
    float mSpeed -> d
    int mErrorCode -> f
    java.util.List mCustomActions -> i
    long mBufferedPosition -> c
    java.lang.CharSequence mErrorMessage -> g
    android.os.Bundle mExtras -> k
    java.lang.Object mStateObj -> l
    int mState -> a
    864:864:void <clinit>() -> <clinit>
    556:568:void <init>(int,long,long,float,long,int,java.lang.CharSequence,long,java.util.List,long,android.os.Bundle) -> <init>
    570:583:void <init>(android.os.Parcel) -> <init>
    798:828:android.support.v4.media.session.PlaybackStateCompat fromPlaybackState(java.lang.Object) -> a
    658:658:long getLastPositionUpdateTime() -> b
    692:692:float getPlaybackSpeed() -> c
    648:648:long getPosition() -> d
    604:604:int describeContents() -> describeContents
    641:641:int getState() -> e
    519:536:int toKeyCode(long) -> f
    587:599:java.lang.String toString() -> toString
    609:621:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.PlaybackStateCompat$1 -> android.support.v4.media.session.PlaybackStateCompat$a:
    865:865:void <init>() -> <init>
    868:868:android.support.v4.media.session.PlaybackStateCompat createFromParcel(android.os.Parcel) -> a
    873:873:android.support.v4.media.session.PlaybackStateCompat[] newArray(int) -> b
    865:865:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    865:865:java.lang.Object[] newArray(int) -> newArray
android.support.v4.media.session.PlaybackStateCompat$Builder -> android.support.v4.media.session.PlaybackStateCompat$b:
    long mActiveItemId -> j
    java.util.List mCustomActions -> a
    long mUpdateTime -> i
    long mActions -> f
    float mRate -> e
    int mErrorCode -> g
    long mBufferedPosition -> d
    long mPosition -> c
    int mState -> b
    java.lang.CharSequence mErrorMessage -> h
    android.os.Bundle mExtras -> k
    1098:1137:void <init>(android.support.v4.media.session.PlaybackStateCompat) -> <init>
    1360:1360:android.support.v4.media.session.PlaybackStateCompat build() -> a
    1210:1214:android.support.v4.media.session.PlaybackStateCompat$Builder setState(int,long,float,long) -> b
android.support.v4.media.session.PlaybackStateCompat$CustomAction -> android.support.v4.media.session.PlaybackStateCompat$CustomAction:
    java.lang.CharSequence mName -> b
    android.os.Bundle mExtras -> d
    java.lang.Object mCustomActionObj -> e
    java.lang.String mAction -> a
    int mIcon -> c
    965:965:void <clinit>() -> <clinit>
    893:898:void <init>(java.lang.String,java.lang.CharSequence,int,android.os.Bundle) -> <init>
    900:905:void <init>(android.os.Parcel) -> <init>
    932:942:android.support.v4.media.session.PlaybackStateCompat$CustomAction fromCustomAction(java.lang.Object) -> a
    917:917:int describeContents() -> describeContents
    1022:1022:java.lang.String toString() -> toString
    909:913:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.media.session.PlaybackStateCompat$CustomAction$1 -> android.support.v4.media.session.PlaybackStateCompat$CustomAction$a:
    966:966:void <init>() -> <init>
    970:970:android.support.v4.media.session.PlaybackStateCompat$CustomAction createFromParcel(android.os.Parcel) -> a
    975:975:android.support.v4.media.session.PlaybackStateCompat$CustomAction[] newArray(int) -> b
    966:966:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    966:966:java.lang.Object[] newArray(int) -> newArray
android.support.v4.media.session.PlaybackStateCompatApi21 -> android.support.v4.media.session.c:
    45:45:long getActions(java.lang.Object) -> a
    61:61:long getActiveQueueItemId(java.lang.Object) -> b
    37:37:long getBufferedPosition(java.lang.Object) -> c
    57:57:java.util.List getCustomActions(java.lang.Object) -> d
    49:49:java.lang.CharSequence getErrorMessage(java.lang.Object) -> e
    53:53:long getLastPositionUpdateTime(java.lang.Object) -> f
    41:41:float getPlaybackSpeed(java.lang.Object) -> g
    33:33:long getPosition(java.lang.Object) -> h
    29:29:int getState(java.lang.Object) -> i
android.support.v4.media.session.PlaybackStateCompatApi21$CustomAction -> android.support.v4.media.session.c$a:
    82:82:java.lang.String getAction(java.lang.Object) -> a
    93:93:android.os.Bundle getExtras(java.lang.Object) -> b
    90:90:int getIcon(java.lang.Object) -> c
    86:86:java.lang.CharSequence getName(java.lang.Object) -> d
android.support.v4.media.session.PlaybackStateCompatApi22 -> android.support.v4.media.session.d:
    29:29:android.os.Bundle getExtras(java.lang.Object) -> a
android.support.v4.os.IResultReceiver$Stub -> android.support.v4.os.IResultReceiver$Stub:
    15:17:void <init>() -> <init>
    35:35:android.os.IBinder asBinder() -> asBinder
    24:31:android.support.v4.os.IResultReceiver asInterface(android.os.IBinder) -> asInterface
    39:62:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.os.IResultReceiver$Stub$Proxy -> android.support.v4.os.IResultReceiver$Stub$Proxy:
    android.os.IBinder mRemote -> a
    68:70:void <init>(android.os.IBinder) -> <init>
    73:73:android.os.IBinder asBinder() -> asBinder
    77:77:java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    81:97:void send(int,android.os.Bundle) -> send
android.support.v4.os.ResultReceiver -> android.support.v4.os.ResultReceiver:
    android.os.Handler mHandler -> b
    android.support.v4.os.IResultReceiver mReceiver -> c
    boolean mLocal -> a
    142:142:void <clinit>() -> <clinit>
    136:140:void <init>(android.os.Parcel) -> <init>
    119:119:void onReceiveResult(int,android.os.Bundle) -> a
    94:109:void send(int,android.os.Bundle) -> b
    123:123:int describeContents() -> describeContents
    128:134:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.os.ResultReceiver$1 -> android.support.v4.os.ResultReceiver$a:
    143:143:void <init>() -> <init>
    146:146:android.support.v4.os.ResultReceiver createFromParcel(android.os.Parcel) -> a
    150:150:android.support.v4.os.ResultReceiver[] newArray(int) -> b
    143:143:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    143:143:java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ResultReceiver$MyResultReceiver -> android.support.v4.os.ResultReceiver$MyResultReceiver:
    android.support.v4.os.ResultReceiver this$0 -> a
    65:65:void <init>(android.support.v4.os.ResultReceiver) -> <init>
    68:73:void send(int,android.os.Bundle) -> send
android.support.v4.os.ResultReceiver$MyRunnable -> android.support.v4.os.ResultReceiver$b:
    android.os.Bundle mResultData -> b
    android.support.v4.os.ResultReceiver this$0 -> c
    int mResultCode -> a
    54:57:void <init>(android.support.v4.os.ResultReceiver,int,android.os.Bundle) -> <init>
    61:62:void run() -> run
androidtranscoder.MediaTranscoder -> androidtranscoder.MediaTranscoder:
    1:2:void <init>() -> <init>
    1:8:androidtranscoder.MediaTranscoder getInstance() -> getInstance
    1:1:java.util.concurrent.Future transcodeVideo(java.io.FileDescriptor,java.lang.String,androidtranscoder.MediaTranscoder$Listener) -> transcodeVideo
    2:21:java.util.concurrent.Future transcodeVideo(java.lang.String,java.lang.String,androidtranscoder.format.MediaFormatStrategy,androidtranscoder.MediaTranscoder$Listener) -> transcodeVideo
    22:78:java.util.concurrent.Future transcodeVideo(java.io.FileDescriptor,java.lang.String,androidtranscoder.format.MediaFormatStrategy,androidtranscoder.MediaTranscoder$Listener) -> transcodeVideo
androidtranscoder.MediaTranscoder$1 -> androidtranscoder.MediaTranscoder$1:
    1:1:void <init>(androidtranscoder.MediaTranscoder) -> <init>
    1:1:java.lang.Thread newThread(java.lang.Runnable) -> newThread
androidtranscoder.MediaTranscoder$2 -> androidtranscoder.MediaTranscoder$2:
    1:1:void <init>(androidtranscoder.MediaTranscoder) -> <init>
    1:1:android.media.MediaFormat createVideoOutputFormat(android.media.MediaFormat) -> createVideoOutputFormat
androidtranscoder.MediaTranscoder$3 -> androidtranscoder.MediaTranscoder$3:
    1:1:void <init>(androidtranscoder.MediaTranscoder,androidtranscoder.MediaTranscoder$Listener,java.io.FileInputStream) -> <init>
    1:3:void closeStream() -> closeStream
    1:2:void onTranscodeCanceled() -> onTranscodeCanceled
    1:2:void onTranscodeCompleted() -> onTranscodeCompleted
    1:2:void onTranscodeFailed(java.lang.Exception) -> onTranscodeFailed
    1:1:void onTranscodeProgress(double) -> onTranscodeProgress
androidtranscoder.MediaTranscoder$4 -> androidtranscoder.MediaTranscoder$4:
    1:1:void <init>(androidtranscoder.MediaTranscoder,android.os.Handler,androidtranscoder.MediaTranscoder$Listener,java.io.FileDescriptor,java.lang.String,androidtranscoder.format.MediaFormatStrategy,java.util.concurrent.atomic.AtomicReference) -> <init>
    1:1:java.lang.Object call() -> call
    2:54:java.lang.Void call() -> call
androidtranscoder.MediaTranscoder$4$1 -> androidtranscoder.MediaTranscoder$4$1:
    1:1:void <init>(androidtranscoder.MediaTranscoder$4) -> <init>
    1:1:void onProgress(double) -> onProgress
androidtranscoder.MediaTranscoder$4$1$1 -> androidtranscoder.MediaTranscoder$4$1$1:
    1:1:void <init>(androidtranscoder.MediaTranscoder$4$1,double) -> <init>
    1:1:void run() -> run
androidtranscoder.MediaTranscoder$4$2 -> androidtranscoder.MediaTranscoder$4$2:
    1:1:void <init>(androidtranscoder.MediaTranscoder$4,java.lang.Exception) -> <init>
    1:8:void run() -> run
androidtranscoder.VideoCompressor -> androidtranscoder.VideoCompressor:
    1:1:void <init>() -> <init>
    1:2:void callBackError(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String,int) -> callBackError
    1:1:void callBackSuccess(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String) -> callBackSuccess
    1:118:void compressVideo(io.dcloud.common.DHInterface.IWebview,java.lang.String[]) -> compressVideo
    1:9:androidtranscoder.VideoCompressor getInstance() -> getInstance
androidtranscoder.VideoCompressor$1 -> androidtranscoder.VideoCompressor$1:
    1:1:void <init>(androidtranscoder.VideoCompressor,java.lang.String,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> <init>
    1:1:void onTranscodeCanceled() -> onTranscodeCanceled
    1:12:void onTranscodeCompleted() -> onTranscodeCompleted
    1:1:void onTranscodeFailed(java.lang.Exception) -> onTranscodeFailed
androidtranscoder.engine.InputSurface -> androidtranscoder.engine.InputSurface:
    1:14:void <init>(android.view.Surface) -> <init>
    1:2:void checkEglError(java.lang.String) -> checkEglError
    1:50:void eglSetup() -> eglSetup
    1:3:int getHeight() -> getHeight
    1:1:android.view.Surface getSurface() -> getSurface
    1:3:int getWidth() -> getWidth
    1:2:void makeCurrent() -> makeCurrent
    1:3:void makeUnCurrent() -> makeUnCurrent
    1:11:void release() -> release
    1:1:void setPresentationTime(long) -> setPresentationTime
    1:1:boolean swapBuffers() -> swapBuffers
androidtranscoder.engine.InvalidOutputFormatException -> androidtranscoder.engine.InvalidOutputFormatException:
    1:1:void <init>(java.lang.String) -> <init>
androidtranscoder.engine.MediaFormatValidator -> androidtranscoder.engine.MediaFormatValidator:
    1:1:void <init>() -> <init>
    1:3:void validateAudioOutputFormat(android.media.MediaFormat) -> validateAudioOutputFormat
    1:5:void validateVideoOutputFormat(android.media.MediaFormat) -> validateVideoOutputFormat
androidtranscoder.engine.MediaTranscoderEngine -> androidtranscoder.engine.MediaTranscoderEngine:
    1:1:void <init>() -> <init>
    1:1:androidtranscoder.engine.TrackTranscoder access$000(androidtranscoder.engine.MediaTranscoderEngine) -> access$000
    1:1:androidtranscoder.engine.TrackTranscoder access$100(androidtranscoder.engine.MediaTranscoderEngine) -> access$100
    1:1:double getProgress() -> getProgress
    1:1:androidtranscoder.engine.MediaTranscoderEngine$ProgressCallback getProgressCallback() -> getProgressCallback
    1:18:void runPipelines() -> runPipelines
    1:1:void setDataSource(java.io.FileDescriptor) -> setDataSource
    1:1:void setProgressCallback(androidtranscoder.engine.MediaTranscoderEngine$ProgressCallback) -> setProgressCallback
    1:28:void setupMetadata() -> setupMetadata
    1:25:void setupTrackTranscoders(androidtranscoder.format.MediaFormatStrategy) -> setupTrackTranscoders
    1:67:void transcodeVideo(java.lang.String,androidtranscoder.format.MediaFormatStrategy) -> transcodeVideo
androidtranscoder.engine.MediaTranscoderEngine$1 -> androidtranscoder.engine.MediaTranscoderEngine$1:
    1:1:void <init>(androidtranscoder.engine.MediaTranscoderEngine) -> <init>
    1:2:void onDetermineOutputFormat() -> onDetermineOutputFormat
androidtranscoder.engine.OutputSurface -> androidtranscoder.engine.OutputSurface:
    1:22:void <init>(int,int) -> <init>
    23:50:void <init>() -> <init>
    1:21:void awaitNewImage() -> awaitNewImage
    1:1:void changeFragmentShader(java.lang.String) -> changeFragmentShader
    1:2:void checkEglError(java.lang.String) -> checkEglError
    1:20:boolean checkForNewImage(int) -> checkForNewImage
    1:1:void drawImage() -> drawImage
    1:52:void eglSetup(int,int) -> eglSetup
    1:1:android.view.Surface getSurface() -> getSurface
    1:2:void makeCurrent() -> makeCurrent
    1:12:void onFrameAvailable(android.graphics.SurfaceTexture) -> onFrameAvailable
    1:16:void release() -> release
    1:21:void setup() -> setup
androidtranscoder.engine.PassThroughTrackTranscoder -> androidtranscoder.engine.PassThroughTrackTranscoder:
    1:1:void <clinit>() -> <clinit>
    1:19:void <init>(android.media.MediaExtractor,int,androidtranscoder.engine.QueuedMuxer,androidtranscoder.engine.QueuedMuxer$SampleType) -> <init>
    1:1:android.media.MediaFormat getDeterminedFormat() -> getDeterminedFormat
    1:1:long getWrittenPresentationTimeUs() -> getWrittenPresentationTimeUs
    1:1:boolean isFinished() -> isFinished
    1:21:boolean stepPipeline() -> stepPipeline
androidtranscoder.engine.QueuedMuxer -> androidtranscoder.engine.QueuedMuxer:
    1:4:void <init>(android.media.MediaMuxer,androidtranscoder.engine.QueuedMuxer$Listener) -> <init>
    1:8:int getTrackIndexForSampleType(androidtranscoder.engine.QueuedMuxer$SampleType) -> getTrackIndexForSampleType
    1:27:void onSetOutputFormat() -> onSetOutputFormat
    1:18:void setOutputFormat(androidtranscoder.engine.QueuedMuxer$SampleType,android.media.MediaFormat) -> setOutputFormat
    1:11:void writeSampleData(androidtranscoder.engine.QueuedMuxer$SampleType,java.nio.ByteBuffer,android.media.MediaCodec$BufferInfo) -> writeSampleData
androidtranscoder.engine.QueuedMuxer$1 -> androidtranscoder.engine.QueuedMuxer$1:
    1:1:void <clinit>() -> <clinit>
androidtranscoder.engine.QueuedMuxer$SampleInfo -> androidtranscoder.engine.QueuedMuxer$SampleInfo:
    1:1:void <init>(androidtranscoder.engine.QueuedMuxer$SampleType,int,android.media.MediaCodec$BufferInfo,androidtranscoder.engine.QueuedMuxer$1) -> <init>
    2:6:void <init>(androidtranscoder.engine.QueuedMuxer$SampleType,int,android.media.MediaCodec$BufferInfo) -> <init>
    1:1:void access$000(androidtranscoder.engine.QueuedMuxer$SampleInfo,android.media.MediaCodec$BufferInfo,int) -> access$000
    1:1:androidtranscoder.engine.QueuedMuxer$SampleType access$100(androidtranscoder.engine.QueuedMuxer$SampleInfo) -> access$100
    1:1:int access$200(androidtranscoder.engine.QueuedMuxer$SampleInfo) -> access$200
    1:1:void writeToBufferInfo(android.media.MediaCodec$BufferInfo,int) -> writeToBufferInfo
androidtranscoder.engine.QueuedMuxer$SampleType -> androidtranscoder.engine.QueuedMuxer$SampleType:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>(java.lang.String,int) -> <init>
    1:1:androidtranscoder.engine.QueuedMuxer$SampleType valueOf(java.lang.String) -> valueOf
    1:1:androidtranscoder.engine.QueuedMuxer$SampleType[] values() -> values
androidtranscoder.engine.TextureRender -> androidtranscoder.engine.TextureRender:
    1:41:void <init>() -> <init>
    1:1:void changeFragmentShader(java.lang.String) -> changeFragmentShader
    1:3:void checkGlError(java.lang.String) -> checkGlError
    1:24:int createProgram(java.lang.String,java.lang.String) -> createProgram
    1:26:void drawFrame(android.graphics.SurfaceTexture) -> drawFrame
    1:1:int getTextureId() -> getTextureId
    1:10:int loadShader(int,java.lang.String) -> loadShader
    1:1:void saveFrame(java.lang.String,int,int) -> saveFrame
    1:43:void surfaceCreated() -> surfaceCreated
androidtranscoder.engine.VideoTrackTranscoder -> androidtranscoder.engine.VideoTrackTranscoder:
    1:152:void <init>(android.media.MediaExtractor,int,android.media.MediaFormat,androidtranscoder.engine.QueuedMuxer) -> <init>
    1:59:int drainDecoder(long) -> drainDecoder
    1:51:int drainEncoder(long) -> drainEncoder
    1:16:int drainExtractor(long) -> drainExtractor
    1:1:android.media.MediaFormat getDeterminedFormat() -> getDeterminedFormat
    1:1:long getWrittenPresentationTimeUs() -> getWrittenPresentationTimeUs
    1:1:boolean isFinished() -> isFinished
    1:17:void release() -> release
    1:40:void setup() -> setup
    1:7:boolean stepPipeline() -> stepPipeline
androidtranscoder.format.Android720pFormatStrategy -> androidtranscoder.format.Android720pFormatStrategy:
    1:1:void <init>() -> <init>
    2:14:void <init>(int) -> <init>
    1:9:android.media.MediaFormat createAudioOutputFormat(android.media.MediaFormat) -> createAudioOutputFormat
    1:24:android.media.MediaFormat createVideoOutputFormat(android.media.MediaFormat) -> createVideoOutputFormat
androidtranscoder.format.ExportPreset960x540Strategy -> androidtranscoder.format.ExportPreset960x540Strategy:
    1:1:void <init>() -> <init>
    1:6:android.media.MediaFormat createVideoOutputFormat(android.media.MediaFormat) -> createVideoOutputFormat
androidtranscoder.format.MediaFormatExtraConstants -> androidtranscoder.format.MediaFormatExtraConstants:
    1:2:void <init>() -> <init>
androidtranscoder.format.MediaFormatPresets -> androidtranscoder.format.MediaFormatPresets:
    1:1:void <init>() -> <init>
    1:5:android.media.MediaFormat getExportPreset960x540() -> getExportPreset960x540
    6:37:android.media.MediaFormat getExportPreset960x540(int,int) -> getExportPreset960x540
androidtranscoder.format.MediaFormatStrategyPresets -> androidtranscoder.format.MediaFormatStrategyPresets:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:1:androidtranscoder.format.MediaFormatStrategy createAndroid720pStrategy() -> createAndroid720pStrategy
    2:2:androidtranscoder.format.MediaFormatStrategy createAndroid720pStrategy(int) -> createAndroid720pStrategy
    1:1:androidtranscoder.format.MediaFormatStrategy createExportPreset960x540Strategy() -> createExportPreset960x540Strategy
androidtranscoder.format.OutputFormatUnavailableException -> androidtranscoder.format.OutputFormatUnavailableException:
    1:1:void <init>(java.lang.String) -> <init>
androidtranscoder.utils.ISO6709LocationParser -> androidtranscoder.utils.ISO6709LocationParser:
    1:2:void <init>() -> <init>
    1:8:float[] parse(java.lang.String) -> parse
androidtranscoder.utils.MediaExtractorUtils -> androidtranscoder.utils.MediaExtractorUtils:
    1:1:void <init>() -> <init>
    1:20:androidtranscoder.utils.MediaExtractorUtils$TrackResult getFirstVideoAndAudioTrack(android.media.MediaExtractor) -> getFirstVideoAndAudioTrack
androidtranscoder.utils.MediaExtractorUtils$TrackResult -> androidtranscoder.utils.MediaExtractorUtils$TrackResult:
    1:1:void <init>(androidtranscoder.utils.MediaExtractorUtils$1) -> <init>
    2:2:void <init>() -> <init>
androidx.annotation.RestrictTo$Scope -> androidx.annotation.RestrictTo$Scope:
    58:91:void <clinit>() -> <clinit>
    58:58:void <init>(java.lang.String,int) -> <init>
    58:58:androidx.annotation.RestrictTo$Scope valueOf(java.lang.String) -> valueOf
    58:58:androidx.annotation.RestrictTo$Scope[] values() -> values
androidx.appcompat.app.ActionBar -> androidx.appcompat.app.ActionBar:
    92:1368:void <init>() -> <init>
    1074:1074:boolean closeOptionsMenu() -> closeOptionsMenu
    1098:1098:boolean collapseActionView() -> collapseActionView
    1057:1057:void dispatchMenuVisibilityChanged(boolean) -> dispatchMenuVisibilityChanged
    1036:1036:float getElevation() -> getElevation
    993:993:int getHideOffset() -> getHideOffset
    859:859:android.content.Context getThemedContext() -> getThemedContext
    1080:1080:boolean invalidateOptionsMenu() -> invalidateOptionsMenu
    980:980:boolean isHideOnContentScrollEnabled() -> isHideOnContentScrollEnabled
    870:870:boolean isTitleTruncated() -> isTitleTruncated
    1052:1052:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    1121:1121:void onDestroy() -> onDestroy
    1092:1092:boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    1086:1086:boolean onMenuKeyEvent(android.view.KeyEvent) -> onMenuKeyEvent
    1068:1068:boolean openOptionsMenu() -> openOptionsMenu
    1114:1114:boolean requestFocus() -> requestFocus
    1042:1042:void setDefaultDisplayHomeAsUpEnabled(boolean) -> setDefaultDisplayHomeAsUpEnabled
    1021:1025:void setElevation(float) -> setElevation
    1006:1010:void setHideOffset(int) -> setHideOffset
    966:970:void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    930:930:void setHomeActionContentDescription(java.lang.CharSequence) -> setHomeActionContentDescription
    950:950:void setHomeActionContentDescription(int) -> setHomeActionContentDescription
    890:890:void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> setHomeAsUpIndicator
    911:911:void setHomeAsUpIndicator(int) -> setHomeAsUpIndicator
    847:847:void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    1047:1047:void setShowHideAnimationEnabled(boolean) -> setShowHideAnimationEnabled
    540:540:void setSplitBackgroundDrawable(android.graphics.drawable.Drawable) -> setSplitBackgroundDrawable
    530:530:void setStackedBackgroundDrawable(android.graphics.drawable.Drawable) -> setStackedBackgroundDrawable
    1104:1104:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    1062:1062:androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback) -> startActionMode
androidx.appcompat.app.ActionBar$LayoutParams -> androidx.appcompat.app.ActionBar$LayoutParams:
    1374:1382:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1374:1387:void <init>(int,int) -> <init>
    1374:1392:void <init>(int,int,int) -> <init>
    1395:1396:void <init>(int) -> <init>
    1374:1402:void <init>(androidx.appcompat.app.ActionBar$LayoutParams) -> <init>
    1374:1406:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
androidx.appcompat.app.ActionBar$Tab -> androidx.appcompat.app.ActionBar$Tab:
    1171:1171:void <init>() -> <init>
androidx.appcompat.app.ActionBarDrawerToggle -> androidx.appcompat.app.ActionBarDrawerToggle:
    153:155:void <init>(android.app.Activity,androidx.drawerlayout.widget.DrawerLayout,int,int) -> <init>
    184:186:void <init>(android.app.Activity,androidx.drawerlayout.widget.DrawerLayout,androidx.appcompat.widget.Toolbar,int,int) -> <init>
    120:224:void <init>(android.app.Activity,androidx.appcompat.widget.Toolbar,androidx.drawerlayout.widget.DrawerLayout,androidx.appcompat.graphics.drawable.DrawerArrowDrawable,int,int) -> <init>
    371:371:androidx.appcompat.graphics.drawable.DrawerArrowDrawable getDrawerArrowDrawable() -> getDrawerArrowDrawable
    503:503:android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    471:471:android.view.View$OnClickListener getToolbarNavigationClickListener() -> getToolbarNavigationClickListener
    340:340:boolean isDrawerIndicatorEnabled() -> isDrawerIndicatorEnabled
    400:400:boolean isDrawerSlideAnimationEnabled() -> isDrawerSlideAnimationEnabled
    258:262:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    444:448:void onDrawerClosed(android.view.View) -> onDrawerClosed
    429:433:void onDrawerOpened(android.view.View) -> onDrawerOpened
    413:418:void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    459:459:void onDrawerStateChanged(int) -> onDrawerStateChanged
    274:278:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    499:500:void setActionBarDescription(int) -> setActionBarDescription
    489:496:void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    380:382:void setDrawerArrowDrawable(androidx.appcompat.graphics.drawable.DrawerArrowDrawable) -> setDrawerArrowDrawable
    354:364:void setDrawerIndicatorEnabled(boolean) -> setDrawerIndicatorEnabled
    390:394:void setDrawerSlideAnimationEnabled(boolean) -> setDrawerSlideAnimationEnabled
    303:314:void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> setHomeAsUpIndicator
    328:333:void setHomeAsUpIndicator(int) -> setHomeAsUpIndicator
    507:513:void setPosition(float) -> setPosition
    485:486:void setToolbarNavigationClickListener(android.view.View$OnClickListener) -> setToolbarNavigationClickListener
    236:246:void syncState() -> syncState
    282:289:void toggle() -> toggle
androidx.appcompat.app.ActionBarDrawerToggle$1 -> androidx.appcompat.app.ActionBarDrawerToggle$1:
    198:198:void <init>(androidx.appcompat.app.ActionBarDrawerToggle) -> <init>
    201:206:void onClick(android.view.View) -> onClick
androidx.appcompat.app.ActionBarDrawerToggle$FrameworkActionBarDelegate -> androidx.appcompat.app.ActionBarDrawerToggle$FrameworkActionBarDelegate:
    519:521:void <init>(android.app.Activity) -> <init>
    538:542:android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    525:533:android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    547:549:boolean isNavigationVisible() -> isNavigationVisible
    570:579:void setActionBarDescription(int) -> setActionBarDescription
    554:566:void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
androidx.appcompat.app.ActionBarDrawerToggle$ToolbarCompatDelegate -> androidx.appcompat.app.ActionBarDrawerToggle$ToolbarCompatDelegate:
    591:595:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    619:619:android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    614:614:android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    624:624:boolean isNavigationVisible() -> isNavigationVisible
    605:610:void setActionBarDescription(int) -> setActionBarDescription
    599:601:void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
androidx.appcompat.app.ActionBarDrawerToggleHoneycomb -> androidx.appcompat.app.ActionBarDrawerToggleHoneycomb:
    45:45:void <clinit>() -> <clinit>
    140:141:void <init>() -> <init>
    92:95:android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    72:88:androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo setActionBarDescription(androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo,android.app.Activity,int) -> setActionBarDescription
    52:67:androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo setActionBarUpIndicator(androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo,android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo -> androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo:
    103:137:void <init>(android.app.Activity) -> <init>
androidx.appcompat.app.AlertController -> androidx.appcompat.app.AlertController:
    82:206:void <init>(android.content.Context,androidx.appcompat.app.AppCompatDialog,android.view.Window) -> <init>
    209:227:boolean canTextInput(android.view.View) -> canTextInput
    829:833:void centerButton(android.widget.Button) -> centerButton
    408:416:android.widget.Button getButton(int) -> getButton
    398:400:int getIconAttributeResId(int) -> getIconAttributeResId
    404:404:android.widget.ListView getListView() -> getListView
    231:234:void installContent() -> installContent
    748:756:void manageScrollIndicators(android.view.View,android.view.View,android.view.View) -> manageScrollIndicators
    422:422:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    427:427:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    441:463:android.view.ViewGroup resolvePanel(android.view.View,android.view.View) -> resolvePanel
    237:243:int selectContentView() -> selectContentView
    323:350:void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message,android.graphics.drawable.Drawable) -> setButton
    303:304:void setButtonPanelLayoutHint(int) -> setButtonPanelLayoutHint
    257:258:void setCustomTitle(android.view.View) -> setCustomTitle
    359:370:void setIcon(int) -> setIcon
    378:389:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    261:265:void setMessage(java.lang.CharSequence) -> setMessage
    560:636:void setScrollIndicators(android.view.ViewGroup,android.view.View,int,int) -> setScrollIndicators
    247:251:void setTitle(java.lang.CharSequence) -> setTitle
    271:274:void setView(int) -> setView
    280:283:void setView(android.view.View) -> setView
    290:297:void setView(android.view.View,int,int,int,int) -> setView
    759:826:void setupButtons(android.view.ViewGroup) -> setupButtons
    719:745:void setupContent(android.view.ViewGroup) -> setupContent
    640:670:void setupCustomContent(android.view.ViewGroup) -> setupCustomContent
    673:716:void setupTitle(android.view.ViewGroup) -> setupTitle
    467:555:void setupView() -> setupView
    177:179:boolean shouldCenterSingleButton(android.content.Context) -> shouldCenterSingleButton
androidx.appcompat.app.AlertController$1 -> androidx.appcompat.app.AlertController$1:
    126:126:void <init>(androidx.appcompat.app.AlertController) -> <init>
    130:147:void onClick(android.view.View) -> onClick
androidx.appcompat.app.AlertController$2 -> androidx.appcompat.app.AlertController$2:
    591:591:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    596:597:void onScrollChange(androidx.core.widget.NestedScrollView,int,int,int,int) -> onScrollChange
androidx.appcompat.app.AlertController$3 -> androidx.appcompat.app.AlertController$3:
    600:600:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    603:604:void run() -> run
androidx.appcompat.app.AlertController$4 -> androidx.appcompat.app.AlertController$4:
    608:608:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    615:616:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    610:610:void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
androidx.appcompat.app.AlertController$5 -> androidx.appcompat.app.AlertController$5:
    619:619:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    622:623:void run() -> run
androidx.appcompat.app.AlertController$AlertParams -> androidx.appcompat.app.AlertController$AlertParams:
    869:928:void <init>(android.content.Context) -> <init>
    931:985:void apply(androidx.appcompat.app.AlertController) -> apply
    988:1098:void createListView(androidx.appcompat.app.AlertController) -> createListView
androidx.appcompat.app.AlertController$AlertParams$1 -> androidx.appcompat.app.AlertController$AlertParams$1:
    995:995:void <init>(androidx.appcompat.app.AlertController$AlertParams,android.content.Context,int,int,java.lang.CharSequence[],androidx.appcompat.app.AlertController$RecycleListView) -> <init>
    998:1005:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
androidx.appcompat.app.AlertController$AlertParams$2 -> androidx.appcompat.app.AlertController$AlertParams$2:
    1009:1017:void <init>(androidx.appcompat.app.AlertController$AlertParams,android.content.Context,android.database.Cursor,boolean,androidx.appcompat.app.AlertController$RecycleListView,androidx.appcompat.app.AlertController) -> <init>
    1021:1026:void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    1030:1030:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
androidx.appcompat.app.AlertController$AlertParams$3 -> androidx.appcompat.app.AlertController$AlertParams$3:
    1065:1065:void <init>(androidx.appcompat.app.AlertController$AlertParams,androidx.appcompat.app.AlertController) -> <init>
    1068:1072:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.app.AlertController$AlertParams$4 -> androidx.appcompat.app.AlertController$AlertParams$4:
    1075:1075:void <init>(androidx.appcompat.app.AlertController$AlertParams,androidx.appcompat.app.AlertController$RecycleListView,androidx.appcompat.app.AlertController) -> <init>
    1078:1083:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.app.AlertController$ButtonHandler -> androidx.appcompat.app.AlertController$ButtonHandler:
    156:158:void <init>(android.content.DialogInterface) -> <init>
    162:173:void handleMessage(android.os.Message) -> handleMessage
androidx.appcompat.app.AlertController$CheckedItemAdapter -> androidx.appcompat.app.AlertController$CheckedItemAdapter:
    1104:1105:void <init>(android.content.Context,int,int,java.lang.CharSequence[]) -> <init>
    1114:1114:long getItemId(int) -> getItemId
    1109:1109:boolean hasStableIds() -> hasStableIds
androidx.appcompat.app.AlertController$RecycleListView -> androidx.appcompat.app.AlertController$RecycleListView:
    840:841:void <init>(android.content.Context) -> <init>
    844:852:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    855:862:void setHasDecor(boolean,boolean) -> setHasDecor
androidx.appcompat.app.AlertDialog -> androidx.appcompat.app.AlertDialog:
    88:89:void <init>(android.content.Context) -> <init>
    98:100:void <init>(android.content.Context,int) -> <init>
    104:107:void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener) -> <init>
    131:131:android.widget.Button getButton(int) -> getButton
    140:140:android.widget.ListView getListView() -> getListView
    278:280:void onCreate(android.os.Bundle) -> onCreate
    284:287:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    292:295:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    111:116:int resolveDialogTheme(android.content.Context,int) -> resolveDialogTheme
    211:212:void setButton(int,java.lang.CharSequence,android.os.Message) -> setButton
    226:227:void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setButton
    244:245:void setButton(int,java.lang.CharSequence,android.graphics.drawable.Drawable,android.content.DialogInterface$OnClickListener) -> setButton
    196:197:void setButtonPanelLayoutHint(int) -> setButtonPanelLayoutHint
    155:156:void setCustomTitle(android.view.View) -> setCustomTitle
    253:254:void setIcon(int) -> setIcon
    262:263:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    271:274:void setIconAttribute(int) -> setIconAttribute
    164:165:void setMessage(java.lang.CharSequence) -> setMessage
    145:147:void setTitle(java.lang.CharSequence) -> setTitle
    172:173:void setView(android.view.View) -> setView
    187:188:void setView(android.view.View,int,int,int,int) -> setView
androidx.appcompat.app.AlertDialog$Builder -> androidx.appcompat.app.AlertDialog$Builder:
    313:314:void <init>(android.content.Context) -> <init>
    342:346:void <init>(android.content.Context,int) -> <init>
    981:992:androidx.appcompat.app.AlertDialog create() -> create
    358:358:android.content.Context getContext() -> getContext
    659:661:androidx.appcompat.app.AlertDialog$Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener) -> setAdapter
    579:580:androidx.appcompat.app.AlertDialog$Builder setCancelable(boolean) -> setCancelable
    678:681:androidx.appcompat.app.AlertDialog$Builder setCursor(android.database.Cursor,android.content.DialogInterface$OnClickListener,java.lang.String) -> setCursor
    398:399:androidx.appcompat.app.AlertDialog$Builder setCustomTitle(android.view.View) -> setCustomTitle
    430:431:androidx.appcompat.app.AlertDialog$Builder setIcon(int) -> setIcon
    445:446:androidx.appcompat.app.AlertDialog$Builder setIcon(android.graphics.drawable.Drawable) -> setIcon
    459:462:androidx.appcompat.app.AlertDialog$Builder setIconAttribute(int) -> setIconAttribute
    956:957:androidx.appcompat.app.AlertDialog$Builder setInverseBackgroundForced(boolean) -> setInverseBackgroundForced
    631:633:androidx.appcompat.app.AlertDialog$Builder setItems(int,android.content.DialogInterface$OnClickListener) -> setItems
    643:645:androidx.appcompat.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener) -> setItems
    408:409:androidx.appcompat.app.AlertDialog$Builder setMessage(int) -> setMessage
    418:419:androidx.appcompat.app.AlertDialog$Builder setMessage(java.lang.CharSequence) -> setMessage
    704:708:androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(int,boolean[],android.content.DialogInterface$OnMultiChoiceClickListener) -> setMultiChoiceItems
    730:734:androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(java.lang.CharSequence[],boolean[],android.content.DialogInterface$OnMultiChoiceClickListener) -> setMultiChoiceItems
    758:763:androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(android.database.Cursor,java.lang.String,java.lang.String,android.content.DialogInterface$OnMultiChoiceClickListener) -> setMultiChoiceItems
    509:511:androidx.appcompat.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener) -> setNegativeButton
    522:524:androidx.appcompat.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setNegativeButton
    533:534:androidx.appcompat.app.AlertDialog$Builder setNegativeButtonIcon(android.graphics.drawable.Drawable) -> setNegativeButtonIcon
    545:547:androidx.appcompat.app.AlertDialog$Builder setNeutralButton(int,android.content.DialogInterface$OnClickListener) -> setNeutralButton
    558:560:androidx.appcompat.app.AlertDialog$Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setNeutralButton
    569:570:androidx.appcompat.app.AlertDialog$Builder setNeutralButtonIcon(android.graphics.drawable.Drawable) -> setNeutralButtonIcon
    600:601:androidx.appcompat.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener) -> setOnCancelListener
    610:611:androidx.appcompat.app.AlertDialog$Builder setOnDismissListener(android.content.DialogInterface$OnDismissListener) -> setOnDismissListener
    868:869:androidx.appcompat.app.AlertDialog$Builder setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
    620:621:androidx.appcompat.app.AlertDialog$Builder setOnKeyListener(android.content.DialogInterface$OnKeyListener) -> setOnKeyListener
    473:475:androidx.appcompat.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener) -> setPositiveButton
    486:488:androidx.appcompat.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setPositiveButton
    497:498:androidx.appcompat.app.AlertDialog$Builder setPositiveButtonIcon(android.graphics.drawable.Drawable) -> setPositiveButtonIcon
    965:966:androidx.appcompat.app.AlertDialog$Builder setRecycleOnMeasureEnabled(boolean) -> setRecycleOnMeasureEnabled
    783:787:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(int,int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    808:813:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(android.database.Cursor,int,java.lang.String,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    831:835:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    853:857:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    367:368:androidx.appcompat.app.AlertDialog$Builder setTitle(int) -> setTitle
    377:378:androidx.appcompat.app.AlertDialog$Builder setTitle(java.lang.CharSequence) -> setTitle
    881:884:androidx.appcompat.app.AlertDialog$Builder setView(int) -> setView
    902:905:androidx.appcompat.app.AlertDialog$Builder setView(android.view.View) -> setView
    934:941:androidx.appcompat.app.AlertDialog$Builder setView(android.view.View,int,int,int,int) -> setView
    1006:1008:androidx.appcompat.app.AlertDialog show() -> show
androidx.appcompat.app.AppCompatActivity -> androidx.appcompat.app.AppCompatActivity:
    62:66:void <init>() -> <init>
    155:156:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    586:591:void closeOptionsMenu() -> closeOptionsMenu
    529:535:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    191:191:android.view.View findViewById(int) -> findViewById
    519:522:androidx.appcompat.app.AppCompatDelegate getDelegate() -> getDelegate
    483:483:androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
    135:135:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    540:543:android.content.res.Resources getResources() -> getResources
    110:110:androidx.appcompat.app.ActionBar getSupportActionBar() -> getSupportActionBar
    431:431:android.content.Intent getSupportParentActivityIntent() -> getSupportParentActivityIntent
    245:246:void invalidateOptionsMenu() -> invalidateOptionsMenu
    160:168:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    470:471:void onContentChanged() -> onContentChanged
    71:86:void onCreate(android.os.Bundle) -> onCreate
    348:349:void onCreateSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder) -> onCreateSupportNavigateUpTaskStack
    210:212:void onDestroy() -> onDestroy
    569:572:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    196:205:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    494:494:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    505:506:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    97:99:void onPostCreate(android.os.Bundle) -> onPostCreate
    172:174:void onPostResume() -> onPostResume
    367:367:void onPrepareSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder) -> onPrepareSupportNavigateUpTaskStack
    510:512:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    178:180:void onStart() -> onStart
    184:186:void onStop() -> onStop
    268:268:void onSupportActionModeFinished(androidx.appcompat.view.ActionMode) -> onSupportActionModeFinished
    257:257:void onSupportActionModeStarted(androidx.appcompat.view.ActionMode) -> onSupportActionModeStarted
    478:478:void onSupportContentChanged() -> onSupportContentChanged
    393:416:boolean onSupportNavigateUp() -> onSupportNavigateUp
    216:218:void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    282:282:androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> onWindowStartingSupportActionMode
    577:582:void openOptionsMenu() -> openOptionsMenu
    552:564:boolean performMenuItemShortcut(int,android.view.KeyEvent) -> performMenuItemShortcut
    140:141:void setContentView(int) -> setContentView
    145:146:void setContentView(android.view.View) -> setContentView
    150:151:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    130:131:void setSupportActionBar(androidx.appcompat.widget.Toolbar) -> setSupportActionBar
    322:322:void setSupportProgress(int) -> setSupportProgress
    315:315:void setSupportProgressBarIndeterminate(boolean) -> setSupportProgressBarIndeterminate
    308:308:void setSupportProgressBarIndeterminateVisibility(boolean) -> setSupportProgressBarIndeterminateVisibility
    301:301:void setSupportProgressBarVisibility(boolean) -> setSupportProgressBarVisibility
    90:93:void setTheme(int) -> setTheme
    293:293:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> startSupportActionMode
    240:241:void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    464:465:void supportNavigateUpTo(android.content.Intent) -> supportNavigateUpTo
    235:235:boolean supportRequestWindowFeature(int) -> supportRequestWindowFeature
    448:448:boolean supportShouldUpRecreateTask(android.content.Intent) -> supportShouldUpRecreateTask
androidx.appcompat.app.AppCompatDelegate -> androidx.appcompat.app.AppCompatDelegate:
    130:130:void <clinit>() -> <clinit>
    208:208:void <init>() -> <init>
    182:182:androidx.appcompat.app.AppCompatDelegate create(android.app.Activity,androidx.appcompat.app.AppCompatCallback) -> create
    191:191:androidx.appcompat.app.AppCompatDelegate create(android.app.Dialog,androidx.appcompat.app.AppCompatCallback) -> create
    202:202:androidx.appcompat.app.AppCompatDelegate create(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback) -> create
    486:486:int getDefaultNightMode() -> getDefaultNightMode
    533:533:boolean isCompatVectorFromResourcesEnabled() -> isCompatVectorFromResourcesEnabled
    523:524:void setCompatVectorFromResourcesEnabled(boolean) -> setCompatVectorFromResourcesEnabled
    466:477:void setDefaultNightMode(int) -> setDefaultNightMode
androidx.appcompat.app.AppCompatDelegateImpl -> androidx.appcompat.app.AppCompatDelegateImpl:
    116:159:void <clinit>() -> <clinit>
    180:265:void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback) -> <init>
    484:488:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    2002:2017:boolean applyDayNight() -> applyDayNight
    731:765:void applyFixedSizeWindow() -> applyFixedSizeWindow
    1758:1782:void callOnPanelClosed(int,androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.Menu) -> callOnPanelClosed
    1643:1654:void checkCloseActionMenu(androidx.appcompat.view.menu.MenuBuilder) -> checkCloseActionMenu
    1657:1658:void closePanel(int) -> closePanel
    1661:1690:void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean) -> closePanel
    551:725:android.view.ViewGroup createSubDecor() -> createSubDecor
    1234:1269:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> createView
    1976:1998:void dismissPopups() -> dismissPopups
    1165:1184:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    1848:1872:void doInvalidatePanelMenu(int) -> doInvalidatePanelMenu
    1104:1107:void endOnGoingFadeAnimation() -> endOnGoingFadeAnimation
    2117:2120:void ensureAutoNightModeManager() -> ensureAutoNightModeManager
    517:548:void ensureSubDecor() -> ensureSubDecor
    1785:1793:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState findMenuPanel(android.view.Menu) -> findMenuPanel
    403:404:android.view.View findViewById(int) -> findViewById
    374:385:android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    2124:2125:androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoNightModeManager() -> getAutoNightModeManager
    2728:2728:androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
    391:396:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    2066:2066:int getNightMode() -> getNightMode
    1798:1810:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean) -> getPanelState
    1972:1972:android.view.ViewGroup getSubDecor() -> getSubDecor
    306:307:androidx.appcompat.app.ActionBar getSupportActionBar() -> getSupportActionBar
    850:854:java.lang.CharSequence getTitle() -> getTitle
    315:315:android.view.Window$Callback getWindowCallback() -> getWindowCallback
    811:832:boolean hasWindowFeature(int) -> hasWindowFeature
    319:334:void initWindowDecorActionBar() -> initWindowDecorActionBar
    1518:1535:boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> initializePanelContent
    1424:1427:boolean initializePanelDecor(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> initializePanelDecor
    1475:1514:boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> initializePanelMenu
    1300:1309:void installViewFactory() -> installViewFactory
    929:933:void invalidateOptionsMenu() -> invalidateOptionsMenu
    1839:1845:void invalidatePanelMenu(int) -> invalidatePanelMenu
    1100:1100:boolean isHandleNativeActionModesEnabled() -> isHandleNativeActionModesEnabled
    2044:2060:int mapNightMode(int) -> mapNightMode
    1111:1123:boolean onBackPressed() -> onBackPressed
    411:425:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    269:294:void onCreate(android.os.Bundle) -> onCreate
    1316:1316:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    1324:1324:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    500:514:void onDestroy() -> onDestroy
    1215:1228:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    1693:1700:boolean onKeyDownPanel(int,android.view.KeyEvent) -> onKeyDownPanel
    1128:1159:boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    1188:1211:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    1704:1753:boolean onKeyUpPanel(int,android.view.KeyEvent) -> onKeyUpPanel
    884:891:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    896:897:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
    874:880:void onMenuOpened(int) -> onMenuOpened
    858:871:void onPanelClosed(int) -> onPanelClosed
    299:300:void onPostCreate(android.os.Bundle) -> onPostCreate
    449:453:void onPostResume() -> onPostResume
    492:496:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    431:432:void onStart() -> onStart
    436:445:void onStop() -> onStop
    728:728:void onSubDecorInstalled(android.view.ViewGroup) -> onSubDecorInstalled
    1329:1421:void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent) -> openPanel
    311:311:androidx.appcompat.app.ActionBar peekSupportActionBar() -> peekSupportActionBar
    1815:1835:boolean performPanelShortcut(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,int,android.view.KeyEvent,int) -> performPanelShortcut
    1539:1639:boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent) -> preparePanel
    1431:1472:void reopenMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> reopenMenu
    769:806:boolean requestWindowFeature(int) -> requestWindowFeature
    1958:1968:int sanitizeWindowFeatureId(int) -> sanitizeWindowFeatureId
    457:462:void setContentView(android.view.View) -> setContentView
    466:471:void setContentView(int) -> setContentView
    475:480:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    1095:1096:void setHandleNativeActionModesEnabled(boolean) -> setHandleNativeActionModesEnabled
    2022:2040:void setLocalNightMode(int) -> setLocalNightMode
    338:371:void setSupportActionBar(androidx.appcompat.widget.Toolbar) -> setSupportActionBar
    837:846:void setTitle(java.lang.CharSequence) -> setTitle
    1090:1090:boolean shouldAnimateActionModeView() -> shouldAnimateActionModeView
    1274:1294:boolean shouldInheritContext(android.view.ViewParent) -> shouldInheritContext
    2129:2146:boolean shouldRecreateOnNightModeChange() -> shouldRecreateOnNightModeChange
    901:924:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> startSupportActionMode
    936:1084:androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback) -> startSupportActionModeFromWindow
    1951:1955:void throwFeatureRequestIfSubDecorInstalled() -> throwFeatureRequestIfSubDecorInstalled
    2074:2113:boolean updateForNightMode(int) -> updateForNightMode
    1881:1947:int updateStatusGuard(int) -> updateStatusGuard
androidx.appcompat.app.AppCompatDelegateImpl$1 -> androidx.appcompat.app.AppCompatDelegateImpl$1:
    132:132:void <init>(java.lang.Thread$UncaughtExceptionHandler) -> <init>
    148:153:boolean shouldWrapException(java.lang.Throwable) -> shouldWrapException
    135:145:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
androidx.appcompat.app.AppCompatDelegateImpl$2 -> androidx.appcompat.app.AppCompatDelegateImpl$2:
    223:223:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    226:234:void run() -> run
androidx.appcompat.app.AppCompatDelegateImpl$3 -> androidx.appcompat.app.AppCompatDelegateImpl$3:
    638:638:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    642:654:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
androidx.appcompat.app.AppCompatDelegateImpl$4 -> androidx.appcompat.app.AppCompatDelegateImpl$4:
    660:660:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    663:664:void onFitSystemWindows(android.graphics.Rect) -> onFitSystemWindows
androidx.appcompat.app.AppCompatDelegateImpl$5 -> androidx.appcompat.app.AppCompatDelegateImpl$5:
    715:715:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    717:717:void onAttachedFromWindow() -> onAttachedFromWindow
    721:722:void onDetachedFromWindow() -> onDetachedFromWindow
androidx.appcompat.app.AppCompatDelegateImpl$6 -> androidx.appcompat.app.AppCompatDelegateImpl$6:
    991:991:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    994:1019:void run() -> run
androidx.appcompat.app.AppCompatDelegateImpl$6$1 -> androidx.appcompat.app.AppCompatDelegateImpl$6$1:
    1002:1002:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$6) -> <init>
    1010:1013:void onAnimationEnd(android.view.View) -> onAnimationEnd
    1005:1006:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.appcompat.app.AppCompatDelegateImpl$7 -> androidx.appcompat.app.AppCompatDelegateImpl$7:
    1045:1045:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    1058:1061:void onAnimationEnd(android.view.View) -> onAnimationEnd
    1048:1054:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl -> androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl:
    2732:2733:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    2746:2746:android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    2737:2741:android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    2751:2752:boolean isNavigationVisible() -> isNavigationVisible
    2766:2770:void setActionBarDescription(int) -> setActionBarDescription
    2757:2762:void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback -> androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback:
    2240:2241:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    2254:2255:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    2245:2249:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 -> androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9:
    2155:2157:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.view.ActionMode$Callback) -> <init>
    2171:2171:boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    2161:2161:boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onCreateActionMode
    2176:2203:void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> onDestroyActionMode
    2166:2166:boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onPrepareActionMode
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1 -> androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1:
    2184:2184:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9) -> <init>
    2187:2196:void onAnimationEnd(android.view.View) -> onAnimationEnd
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback -> androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback:
    2526:2528:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.view.Window$Callback) -> <init>
    2532:2533:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    2538:2539:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    2556:2556:void onContentChanged() -> onContentChanged
    2544:2549:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    2587:2589:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    2594:2596:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    2560:2582:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    2653:2662:void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int) -> onProvideKeyboardShortcuts
    2601:2610:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    2638:2646:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int) -> onWindowStartingActionMode
    2620:2631:android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback) -> startAsSupportActionMode
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager -> androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager:
    2673:2676:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.app.TwilightManager) -> <init>
    2719:2723:void cleanup() -> cleanup
    2685:2690:void dispatchTimeChanged() -> dispatchTimeChanged
    2680:2681:int getApplyableNightMode() -> getApplyableNightMode
    2693:2716:void setup() -> setup
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1 -> androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1:
    2699:2699:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager) -> <init>
    2705:2706:void onReceive(android.content.Context,android.content.Intent) -> onReceive
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView -> androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView:
    2490:2492:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context) -> <init>
    2496:2497:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    2520:2520:boolean isOutOfBounds(int,int) -> isOutOfBounds
    2502:2511:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    2516:2517:void setBackgroundResource(int) -> setBackgroundResource
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState -> androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState:
    2323:2327:void <init>(int) -> <init>
    2429:2433:void applyFrozenState() -> applyFrozenState
    2340:2344:void clearMenuPresenters() -> clearMenuPresenters
    2391:2402:androidx.appcompat.view.menu.MenuView getListMenuView(androidx.appcompat.view.menu.MenuPresenter$Callback) -> getListMenuView
    2330:2333:boolean hasPanelItems() -> hasPanelItems
    2419:2426:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    2406:2415:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    2379:2388:void setMenu(androidx.appcompat.view.menu.MenuBuilder) -> setMenu
    2347:2376:void setStyle(android.content.Context) -> setStyle
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState -> androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState:
    2470:2470:void <clinit>() -> <clinit>
    2440:2441:void <init>() -> <init>
    2445:2445:int describeContents() -> describeContents
    2459:2467:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState readFromParcel(android.os.Parcel,java.lang.ClassLoader) -> readFromParcel
    2450:2456:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1 -> androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1:
    2470:2470:void <init>() -> <init>
    2470:2470:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2470:2470:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2473:2473:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2478:2478:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2470:2470:java.lang.Object[] newArray(int) -> newArray
    2483:2483:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState[] newArray(int) -> newArray
androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback -> androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback:
    2207:2208:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    2212:2225:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    2229:2235:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.app.AppCompatDialog -> androidx.appcompat.app.AppCompatDialog:
    53:54:void <init>(android.content.Context) -> <init>
    45:67:void <init>(android.content.Context,int) -> <init>
    45:72:void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener) -> <init>
    128:129:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    205:206:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    111:111:android.view.View findViewById(int) -> findViewById
    168:171:androidx.appcompat.app.AppCompatDelegate getDelegate() -> getDelegate
    89:89:androidx.appcompat.app.ActionBar getSupportActionBar() -> getSupportActionBar
    175:181:int getThemeResId(android.content.Context,int) -> getThemeResId
    161:162:void invalidateOptionsMenu() -> invalidateOptionsMenu
    76:79:void onCreate(android.os.Bundle) -> onCreate
    133:135:void onStop() -> onStop
    190:190:void onSupportActionModeFinished(androidx.appcompat.view.ActionMode) -> onSupportActionModeFinished
    186:186:void onSupportActionModeStarted(androidx.appcompat.view.ActionMode) -> onSupportActionModeStarted
    195:195:androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> onWindowStartingSupportActionMode
    94:95:void setContentView(int) -> setContentView
    99:100:void setContentView(android.view.View) -> setContentView
    104:105:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    116:118:void setTitle(java.lang.CharSequence) -> setTitle
    122:124:void setTitle(int) -> setTitle
    200:200:boolean superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
    152:152:boolean supportRequestWindowFeature(int) -> supportRequestWindowFeature
androidx.appcompat.app.AppCompatDialog$1 -> androidx.appcompat.app.AppCompatDialog$1:
    45:45:void <init>(androidx.appcompat.app.AppCompatDialog) -> <init>
    48:48:boolean superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
androidx.appcompat.app.AppCompatDialogFragment -> androidx.appcompat.app.AppCompatDialogFragment:
    36:36:void <init>() -> <init>
    40:40:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    47:64:void setupDialog(android.app.Dialog,int) -> setupDialog
androidx.appcompat.app.AppCompatViewInflater -> androidx.appcompat.app.AppCompatViewInflater:
    62:74:void <clinit>() -> <clinit>
    60:366:void <init>() -> <init>
    291:307:void checkOnClickListener(android.view.View,android.util.AttributeSet) -> checkOnClickListener
    223:223:androidx.appcompat.widget.AppCompatAutoCompleteTextView createAutoCompleteTextView(android.content.Context,android.util.AttributeSet) -> createAutoCompleteTextView
    187:187:androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet) -> createButton
    207:207:androidx.appcompat.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet) -> createCheckBox
    217:217:androidx.appcompat.widget.AppCompatCheckedTextView createCheckedTextView(android.content.Context,android.util.AttributeSet) -> createCheckedTextView
    192:192:androidx.appcompat.widget.AppCompatEditText createEditText(android.content.Context,android.util.AttributeSet) -> createEditText
    202:202:androidx.appcompat.widget.AppCompatImageButton createImageButton(android.content.Context,android.util.AttributeSet) -> createImageButton
    182:182:androidx.appcompat.widget.AppCompatImageView createImageView(android.content.Context,android.util.AttributeSet) -> createImageView
    229:229:androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView createMultiAutoCompleteTextView(android.content.Context,android.util.AttributeSet) -> createMultiAutoCompleteTextView
    212:212:androidx.appcompat.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet) -> createRadioButton
    234:234:androidx.appcompat.widget.AppCompatRatingBar createRatingBar(android.content.Context,android.util.AttributeSet) -> createRatingBar
    239:239:androidx.appcompat.widget.AppCompatSeekBar createSeekBar(android.content.Context,android.util.AttributeSet) -> createSeekBar
    197:197:androidx.appcompat.widget.AppCompatSpinner createSpinner(android.content.Context,android.util.AttributeSet) -> createSpinner
    177:177:androidx.appcompat.widget.AppCompatTextView createTextView(android.content.Context,android.util.AttributeSet) -> createTextView
    82:172:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean) -> createView
    251:251:android.view.View createView(android.content.Context,java.lang.String,android.util.AttributeSet) -> createView
    311:327:android.view.View createViewByPrefix(android.content.Context,java.lang.String,java.lang.String) -> createViewByPrefix
    255:281:android.view.View createViewFromTag(android.content.Context,java.lang.String,android.util.AttributeSet) -> createViewFromTag
    336:359:android.content.Context themifyContext(android.content.Context,android.util.AttributeSet,boolean,boolean) -> themifyContext
    243:247:void verifyNotNull(android.view.View,java.lang.String) -> verifyNotNull
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener -> androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener:
    373:376:void <init>(android.view.View,java.lang.String) -> <init>
    380:393:void onClick(android.view.View) -> onClick
    397:424:void resolveMethod(android.content.Context,java.lang.String) -> resolveMethod
androidx.appcompat.app.NavItemSelectedListener -> androidx.appcompat.app.NavItemSelectedListener:
    30:32:void <init>(androidx.appcompat.app.ActionBar$OnNavigationListener) -> <init>
    36:39:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    44:44:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
androidx.appcompat.app.ResourcesFlusher -> androidx.appcompat.app.ResourcesFlusher:
    209:210:void <init>() -> <init>
    46:56:void flush(android.content.res.Resources) -> flush
    60:80:void flushLollipops(android.content.res.Resources) -> flushLollipops
    84:109:void flushMarshmallows(android.content.res.Resources) -> flushMarshmallows
    113:162:void flushNougats(android.content.res.Resources) -> flushNougats
    166:207:void flushThemedResourcesCache(java.lang.Object) -> flushThemedResourcesCache
androidx.appcompat.app.ToolbarActionBar -> androidx.appcompat.app.ToolbarActionBar:
    51:74:void <init>(androidx.appcompat.widget.Toolbar,java.lang.CharSequence,android.view.Window$Callback) -> <init>
    494:495:void addOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener) -> addOnMenuVisibilityListener
    334:334:void addTab(androidx.appcompat.app.ActionBar$Tab) -> addTab
    340:340:void addTab(androidx.appcompat.app.ActionBar$Tab,boolean) -> addTab
    346:346:void addTab(androidx.appcompat.app.ActionBar$Tab,int) -> addTab
    352:352:void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean) -> addTab
    428:428:boolean closeOptionsMenu() -> closeOptionsMenu
    440:444:boolean collapseActionView() -> collapseActionView
    504:513:void dispatchMenuVisibilityChanged(boolean) -> dispatchMenuVisibilityChanged
    295:295:android.view.View getCustomView() -> getCustomView
    323:323:int getDisplayOptions() -> getDisplayOptions
    141:141:float getElevation() -> getElevation
    399:399:int getHeight() -> getHeight
    543:548:android.view.Menu getMenu() -> getMenu
    213:213:int getNavigationItemCount() -> getNavigationItemCount
    310:310:int getNavigationMode() -> getNavigationMode
    208:208:int getSelectedNavigationIndex() -> getSelectedNavigationIndex
    382:382:androidx.appcompat.app.ActionBar$Tab getSelectedTab() -> getSelectedTab
    305:305:java.lang.CharSequence getSubtitle() -> getSubtitle
    388:388:androidx.appcompat.app.ActionBar$Tab getTabAt(int) -> getTabAt
    394:394:int getTabCount() -> getTabCount
    146:146:android.content.Context getThemedContext() -> getThemedContext
    300:300:java.lang.CharSequence getTitle() -> getTitle
    77:77:android.view.Window$Callback getWrappedWindowCallback() -> getWrappedWindowCallback
    413:414:void hide() -> hide
    433:435:boolean invalidateOptionsMenu() -> invalidateOptionsMenu
    418:418:boolean isShowing() -> isShowing
    151:151:boolean isTitleTruncated() -> isTitleTruncated
    328:328:androidx.appcompat.app.ActionBar$Tab newTab() -> newTab
    186:187:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    489:490:void onDestroy() -> onDestroy
    476:483:boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    468:471:boolean onMenuKeyEvent(android.view.KeyEvent) -> onMenuKeyEvent
    423:423:boolean openOptionsMenu() -> openOptionsMenu
    448:464:void populateOptionsMenu() -> populateOptionsMenu
    370:370:void removeAllTabs() -> removeAllTabs
    499:500:void removeOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener) -> removeOnMenuVisibilityListener
    358:358:void removeTab(androidx.appcompat.app.ActionBar$Tab) -> removeTab
    364:364:void removeTabAt(int) -> removeTabAt
    233:238:boolean requestFocus() -> requestFocus
    376:376:void selectTab(androidx.appcompat.app.ActionBar$Tab) -> selectTab
    290:291:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    82:83:void setCustomView(android.view.View) -> setCustomView
    87:91:void setCustomView(android.view.View,androidx.appcompat.app.ActionBar$LayoutParams) -> setCustomView
    95:97:void setCustomView(int) -> setCustomView
    172:172:void setDefaultDisplayHomeAsUpEnabled(boolean) -> setDefaultDisplayHomeAsUpEnabled
    275:276:void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    254:255:void setDisplayOptions(int) -> setDisplayOptions
    259:261:void setDisplayOptions(int,int) -> setDisplayOptions
    285:286:void setDisplayShowCustomEnabled(boolean) -> setDisplayShowCustomEnabled
    270:271:void setDisplayShowHomeEnabled(boolean) -> setDisplayShowHomeEnabled
    280:281:void setDisplayShowTitleEnabled(boolean) -> setDisplayShowTitleEnabled
    265:266:void setDisplayUseLogoEnabled(boolean) -> setDisplayUseLogoEnabled
    136:137:void setElevation(float) -> setElevation
    166:167:void setHomeActionContentDescription(java.lang.CharSequence) -> setHomeActionContentDescription
    176:177:void setHomeActionContentDescription(int) -> setHomeActionContentDescription
    156:157:void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> setHomeAsUpIndicator
    161:162:void setHomeAsUpIndicator(int) -> setHomeAsUpIndicator
    132:132:void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    101:102:void setIcon(int) -> setIcon
    106:107:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    191:192:void setListNavigationCallbacks(android.widget.SpinnerAdapter,androidx.appcompat.app.ActionBar$OnNavigationListener) -> setListNavigationCallbacks
    111:112:void setLogo(int) -> setLogo
    116:117:void setLogo(android.graphics.drawable.Drawable) -> setLogo
    315:319:void setNavigationMode(int) -> setNavigationMode
    196:204:void setSelectedNavigationItem(int) -> setSelectedNavigationItem
    182:182:void setShowHideAnimationEnabled(boolean) -> setShowHideAnimationEnabled
    127:127:void setSplitBackgroundDrawable(android.graphics.drawable.Drawable) -> setSplitBackgroundDrawable
    122:122:void setStackedBackgroundDrawable(android.graphics.drawable.Drawable) -> setStackedBackgroundDrawable
    243:244:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    248:249:void setSubtitle(int) -> setSubtitle
    218:219:void setTitle(java.lang.CharSequence) -> setTitle
    223:224:void setTitle(int) -> setTitle
    228:229:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    406:407:void show() -> show
androidx.appcompat.app.ToolbarActionBar$1 -> androidx.appcompat.app.ToolbarActionBar$1:
    53:53:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    56:57:void run() -> run
androidx.appcompat.app.ToolbarActionBar$2 -> androidx.appcompat.app.ToolbarActionBar$2:
    61:61:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    64:64:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.app.ToolbarActionBar$ActionMenuPresenterCallback -> androidx.appcompat.app.ToolbarActionBar$ActionMenuPresenterCallback:
    554:555:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    568:578:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    559:563:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.app.ToolbarActionBar$MenuBuilderCallback -> androidx.appcompat.app.ToolbarActionBar$MenuBuilderCallback:
    583:584:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    588:588:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    593:601:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
androidx.appcompat.app.ToolbarActionBar$ToolbarCallbackWrapper -> androidx.appcompat.app.ToolbarActionBar$ToolbarCallbackWrapper:
    516:518:void <init>(androidx.appcompat.app.ToolbarActionBar,android.view.Window$Callback) -> <init>
    532:538:android.view.View onCreatePanelView(int) -> onCreatePanelView
    522:527:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
androidx.appcompat.app.TwilightCalculator -> androidx.appcompat.app.TwilightCalculator:
    26:26:void <init>() -> <init>
    89:138:void calculateTwilight(long,double,double) -> calculateTwilight
    31:34:androidx.appcompat.app.TwilightCalculator getInstance() -> getInstance
androidx.appcompat.app.TwilightManager -> androidx.appcompat.app.TwilightManager:
    66:72:void <init>(android.content.Context,android.location.LocationManager) -> <init>
    50:55:androidx.appcompat.app.TwilightManager getInstance(android.content.Context) -> getInstance
    107:127:android.location.Location getLastKnownLocation() -> getLastKnownLocation
    134:140:android.location.Location getLastKnownLocationForProvider(java.lang.String) -> getLastKnownLocationForProvider
    80:102:boolean isNight() -> isNight
    144:144:boolean isStateValid() -> isStateValid
    60:61:void setInstance(androidx.appcompat.app.TwilightManager) -> setInstance
    148:192:void updateState(android.location.Location) -> updateState
androidx.appcompat.app.TwilightManager$TwilightState -> androidx.appcompat.app.TwilightManager$TwilightState:
    205:206:void <init>() -> <init>
androidx.appcompat.app.WindowDecorActionBar -> androidx.appcompat.app.WindowDecorActionBar:
    79:85:void <clinit>() -> <clinit>
    99:177:void <init>(android.app.Activity,boolean) -> <init>
    99:182:void <init>(android.app.Dialog) -> <init>
    99:192:void <init>(android.view.View) -> <init>
    341:342:void addOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener) -> addOnMenuVisibilityListener
    562:563:void addTab(androidx.appcompat.app.ActionBar$Tab) -> addTab
    567:568:void addTab(androidx.appcompat.app.ActionBar$Tab,int) -> addTab
    572:578:void addTab(androidx.appcompat.app.ActionBar$Tab,boolean) -> addTab
    582:588:void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean) -> addTab
    875:911:void animateToMode(boolean) -> animateToMode
    760:765:boolean checkShowingFlags(boolean,boolean,boolean) -> checkShowingFlags
    429:437:void cleanupTabs() -> cleanupTabs
    975:979:boolean collapseActionView() -> collapseActionView
    312:317:void completeDeferredDestroyActionMode() -> completeDeferredDestroyActionMode
    544:558:void configureTab(androidx.appcompat.app.ActionBar$Tab,int) -> configureTab
    351:360:void dispatchMenuVisibilityChanged(boolean) -> dispatchMenuVisibilityChanged
    837:865:void doHide(boolean) -> doHide
    788:834:void doShow(boolean) -> doShow
    674:675:void enableContentAnimations(boolean) -> enableContentAnimations
    288:309:void ensureTabsExist() -> ensureTabsExist
    498:498:android.view.View getCustomView() -> getCustomView
    237:243:androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View) -> getDecorToolbar
    518:518:int getDisplayOptions() -> getDisplayOptions
    254:254:float getElevation() -> getElevation
    669:669:int getHeight() -> getHeight
    746:746:int getHideOffset() -> getHideOffset
    1314:1320:int getNavigationItemCount() -> getNavigationItemCount
    513:513:int getNavigationMode() -> getNavigationMode
    1302:1308:int getSelectedNavigationIndex() -> getSelectedNavigationIndex
    664:664:androidx.appcompat.app.ActionBar$Tab getSelectedTab() -> getSelectedTab
    508:508:java.lang.CharSequence getSubtitle() -> getSubtitle
    1361:1361:androidx.appcompat.app.ActionBar$Tab getTabAt(int) -> getTabAt
    1326:1326:int getTabCount() -> getTabCount
    921:933:android.content.Context getThemedContext() -> getThemedContext
    503:503:java.lang.CharSequence getTitle() -> getTitle
    1376:1376:boolean hasIcon() -> hasIcon
    1390:1390:boolean hasLogo() -> hasLogo
    705:709:void hide() -> hide
    712:719:void hideForActionMode() -> hideForActionMode
    723:727:void hideForSystem() -> hideForSystem
    195:234:void init(android.view.View) -> init
    741:741:boolean isHideOnContentScrollEnabled() -> isHideOnContentScrollEnabled
    869:871:boolean isShowing() -> isShowing
    938:938:boolean isTitleTruncated() -> isTitleTruncated
    592:592:androidx.appcompat.app.ActionBar$Tab newTab() -> newTab
    259:260:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    963:967:void onContentScrollStarted() -> onContentScrollStarted
    971:971:void onContentScrollStopped() -> onContentScrollStopped
    1402:1412:boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    321:322:void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    425:426:void removeAllTabs() -> removeAllTabs
    346:347:void removeOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener) -> removeOnMenuVisibilityListener
    597:598:void removeTab(androidx.appcompat.app.ActionBar$Tab) -> removeTab
    602:623:void removeTabAt(int) -> removeTabAt
    451:456:boolean requestFocus() -> requestFocus
    627:660:void selectTab(androidx.appcompat.app.ActionBar$Tab) -> selectTab
    483:484:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    364:366:void setCustomView(int) -> setCustomView
    1286:1287:void setCustomView(android.view.View) -> setCustomView
    1291:1293:void setCustomView(android.view.View,androidx.appcompat.app.ActionBar$LayoutParams) -> setCustomView
    1395:1398:void setDefaultDisplayHomeAsUpEnabled(boolean) -> setDefaultDisplayHomeAsUpEnabled
    380:381:void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    466:470:void setDisplayOptions(int) -> setDisplayOptions
    474:479:void setDisplayOptions(int,int) -> setDisplayOptions
    390:391:void setDisplayShowCustomEnabled(boolean) -> setDisplayShowCustomEnabled
    375:376:void setDisplayShowHomeEnabled(boolean) -> setDisplayShowHomeEnabled
    385:386:void setDisplayShowTitleEnabled(boolean) -> setDisplayShowTitleEnabled
    370:371:void setDisplayUseLogoEnabled(boolean) -> setDisplayUseLogoEnabled
    249:250:void setElevation(float) -> setElevation
    263:285:void setHasEmbeddedTabs(boolean) -> setHasEmbeddedTabs
    751:756:void setHideOffset(int) -> setHideOffset
    731:737:void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    953:954:void setHomeActionContentDescription(java.lang.CharSequence) -> setHomeActionContentDescription
    958:959:void setHomeActionContentDescription(int) -> setHomeActionContentDescription
    943:944:void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> setHomeAsUpIndicator
    948:949:void setHomeAsUpIndicator(int) -> setHomeAsUpIndicator
    395:396:void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    1367:1368:void setIcon(int) -> setIcon
    1372:1373:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    1297:1298:void setListNavigationCallbacks(android.widget.SpinnerAdapter,androidx.appcompat.app.ActionBar$OnNavigationListener) -> setListNavigationCallbacks
    1381:1382:void setLogo(int) -> setLogo
    1386:1387:void setLogo(android.graphics.drawable.Drawable) -> setLogo
    1331:1357:void setNavigationMode(int) -> setNavigationMode
    410:421:void setSelectedNavigationItem(int) -> setSelectedNavigationItem
    333:337:void setShowHideAnimationEnabled(boolean) -> setShowHideAnimationEnabled
    494:494:void setSplitBackgroundDrawable(android.graphics.drawable.Drawable) -> setSplitBackgroundDrawable
    488:489:void setStackedBackgroundDrawable(android.graphics.drawable.Drawable) -> setStackedBackgroundDrawable
    405:406:void setSubtitle(int) -> setSubtitle
    461:462:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    400:401:void setTitle(int) -> setTitle
    441:442:void setTitle(java.lang.CharSequence) -> setTitle
    446:447:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    916:916:boolean shouldAnimateContextView() -> shouldAnimateContextView
    679:683:void show() -> show
    686:693:void showForActionMode() -> showForActionMode
    697:701:void showForSystem() -> showForSystem
    523:540:androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback) -> startActionMode
    771:785:void updateVisibility(boolean) -> updateVisibility
androidx.appcompat.app.WindowDecorActionBar$1 -> androidx.appcompat.app.WindowDecorActionBar$1:
    135:135:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    138:149:void onAnimationEnd(android.view.View) -> onAnimationEnd
androidx.appcompat.app.WindowDecorActionBar$2 -> androidx.appcompat.app.WindowDecorActionBar$2:
    152:152:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    155:157:void onAnimationEnd(android.view.View) -> onAnimationEnd
androidx.appcompat.app.WindowDecorActionBar$3 -> androidx.appcompat.app.WindowDecorActionBar$3:
    161:161:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    164:166:void onAnimationUpdate(android.view.View) -> onAnimationUpdate
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl -> androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl:
    993:999:void <init>(androidx.appcompat.app.WindowDecorActionBar,android.content.Context,androidx.appcompat.view.ActionMode$Callback) -> <init>
    1060:1064:boolean dispatchOnCreate() -> dispatchOnCreate
    1013:1040:void finish() -> finish
    1117:1117:android.view.View getCustomView() -> getCustomView
    1008:1008:android.view.Menu getMenu() -> getMenu
    1003:1003:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    1101:1101:java.lang.CharSequence getSubtitle() -> getSubtitle
    1096:1096:java.lang.CharSequence getTitle() -> getTitle
    1044:1057:void invalidate() -> invalidate
    1112:1112:boolean isTitleOptional() -> isTitleOptional
    1130:1130:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    1146:1146:void onCloseSubMenu(androidx.appcompat.view.menu.SubMenuBuilder) -> onCloseSubMenu
    1122:1125:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    1150:1155:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
    1133:1142:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    1070:1072:void setCustomView(android.view.View) -> setCustomView
    1076:1077:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    1091:1092:void setSubtitle(int) -> setSubtitle
    1081:1082:void setTitle(java.lang.CharSequence) -> setTitle
    1086:1087:void setTitle(int) -> setTitle
    1106:1108:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.app.WindowDecorActionBar$TabImpl -> androidx.appcompat.app.WindowDecorActionBar$TabImpl:
    1162:1168:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    1183:1183:androidx.appcompat.app.ActionBar$TabListener getCallback() -> getCallback
    1280:1280:java.lang.CharSequence getContentDescription() -> getContentDescription
    1194:1194:android.view.View getCustomView() -> getCustomView
    1214:1214:android.graphics.drawable.Drawable getIcon() -> getIcon
    1219:1219:int getPosition() -> getPosition
    1173:1173:java.lang.Object getTag() -> getTag
    1228:1228:java.lang.CharSequence getText() -> getText
    1261:1262:void select() -> select
    1266:1266:androidx.appcompat.app.ActionBar$Tab setContentDescription(int) -> setContentDescription
    1271:1275:androidx.appcompat.app.ActionBar$Tab setContentDescription(java.lang.CharSequence) -> setContentDescription
    1199:1203:androidx.appcompat.app.ActionBar$Tab setCustomView(android.view.View) -> setCustomView
    1208:1209:androidx.appcompat.app.ActionBar$Tab setCustomView(int) -> setCustomView
    1233:1237:androidx.appcompat.app.ActionBar$Tab setIcon(android.graphics.drawable.Drawable) -> setIcon
    1242:1242:androidx.appcompat.app.ActionBar$Tab setIcon(int) -> setIcon
    1223:1224:void setPosition(int) -> setPosition
    1188:1189:androidx.appcompat.app.ActionBar$Tab setTabListener(androidx.appcompat.app.ActionBar$TabListener) -> setTabListener
    1178:1179:androidx.appcompat.app.ActionBar$Tab setTag(java.lang.Object) -> setTag
    1247:1251:androidx.appcompat.app.ActionBar$Tab setText(java.lang.CharSequence) -> setText
    1256:1256:androidx.appcompat.app.ActionBar$Tab setText(int) -> setText
androidx.appcompat.content.res.AppCompatResources -> androidx.appcompat.content.res.AppCompatResources:
    48:53:void <clinit>() -> <clinit>
    55:55:void <init>() -> <init>
    148:157:void addColorStateListToCache(android.content.Context,int,android.content.res.ColorStateList) -> addColorStateListToCache
    128:143:android.content.res.ColorStateList getCachedColorStateList(android.content.Context,int) -> getCachedColorStateList
    65:84:android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> getColorStateList
    102:102:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    171:176:android.util.TypedValue getTypedValue() -> getTypedValue
    110:122:android.content.res.ColorStateList inflateColorStateList(android.content.Context,int) -> inflateColorStateList
    160:165:boolean isColorInt(android.content.Context,int) -> isColorInt
androidx.appcompat.content.res.AppCompatResources$ColorStateListCacheEntry -> androidx.appcompat.content.res.AppCompatResources$ColorStateListCacheEntry:
    184:187:void <init>(android.content.res.ColorStateList,android.content.res.Configuration) -> <init>
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat:
    90:90:void <clinit>() -> <clinit>
    109:110:void <init>() -> <init>
    103:120:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.content.res.Resources) -> <init>
    89:89:void addState(int[],android.graphics.drawable.Drawable) -> addState
    233:238:void addState(int[],android.graphics.drawable.Drawable,int) -> addState
    250:254:void addTransition(int,int,android.graphics.drawable.Drawable,boolean) -> addTransition
    89:89:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    89:89:boolean canApplyTheme() -> canApplyTheme
    618:620:void clearMutated() -> clearMutated
    89:89:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState() -> cloneConstantState
    89:89:androidx.appcompat.graphics.drawable.StateListDrawable$StateListState cloneConstantState() -> cloneConstantState
    613:613:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState cloneConstantState() -> cloneConstantState
    137:155:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat create(android.content.Context,int,android.content.res.Resources$Theme) -> create
    170:177:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    89:89:void draw(android.graphics.Canvas) -> draw
    89:89:int getAlpha() -> getAlpha
    89:89:int getChangingConfigurations() -> getChangingConfigurations
    89:89:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    89:89:void getHotspotBounds(android.graphics.Rect) -> getHotspotBounds
    89:89:int getIntrinsicHeight() -> getIntrinsicHeight
    89:89:int getIntrinsicWidth() -> getIntrinsicWidth
    89:89:int getMinimumHeight() -> getMinimumHeight
    89:89:int getMinimumWidth() -> getMinimumWidth
    89:89:int getOpacity() -> getOpacity
    89:89:void getOutline(android.graphics.Outline) -> getOutline
    89:89:boolean getPadding(android.graphics.Rect) -> getPadding
    200:209:void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    482:499:void inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflateChildElements
    471:472:void init() -> init
    89:89:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    89:89:boolean isAutoMirrored() -> isAutoMirrored
    258:258:boolean isStateful() -> isStateful
    263:271:void jumpToCurrentState() -> jumpToCurrentState
    604:608:android.graphics.drawable.Drawable mutate() -> mutate
    89:89:boolean onLayoutDirectionChanged(int) -> onLayoutDirectionChanged
    277:287:boolean onStateChange(int[]) -> onStateChange
    563:599:int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> parseItem
    509:553:int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> parseTransition
    89:89:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    292:349:boolean selectTransition(int) -> selectTransition
    89:89:void setAlpha(int) -> setAlpha
    89:89:void setAutoMirrored(boolean) -> setAutoMirrored
    89:89:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    717:721:void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) -> setConstantState
    89:89:void setDither(boolean) -> setDither
    89:89:void setEnterFadeDuration(int) -> setEnterFadeDuration
    89:89:void setExitFadeDuration(int) -> setExitFadeDuration
    89:89:void setHotspot(float,float) -> setHotspot
    89:89:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    89:89:void setTintList(android.content.res.ColorStateList) -> setTintList
    89:89:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    213:222:boolean setVisible(boolean,boolean) -> setVisible
    89:89:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    448:468:void updateStateFromTypedArray(android.content.res.TypedArray) -> updateStateFromTypedArray
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition:
    369:371:void <init>(android.graphics.drawable.Animatable) -> <init>
    375:376:void start() -> start
    380:381:void stop() -> stop
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState:
    633:642:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat,android.content.res.Resources) -> <init>
    666:668:int addStateSet(int[],android.graphics.drawable.Drawable,int) -> addStateSet
    651:662:int addTransition(int,int,android.graphics.drawable.Drawable,boolean) -> addTransition
    711:711:long generateTransitionKey(int,int) -> generateTransitionKey
    680:680:int getKeyframeIdAt(int) -> getKeyframeIdAt
    672:676:int indexOfKeyframe(int[]) -> indexOfKeyframe
    684:685:int indexOfTransition(int,int) -> indexOfTransition
    689:690:boolean isTransitionReversed(int,int) -> isTransitionReversed
    646:648:void mutate() -> mutate
    701:701:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    707:707:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    694:695:boolean transitionHasReversibleFlag(int,int) -> transitionHasReversibleFlag
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition:
    432:434:void <init>(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) -> <init>
    438:439:void start() -> start
    443:444:void stop() -> stop
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition:
    391:406:void <init>(android.graphics.drawable.AnimationDrawable,boolean,boolean) -> <init>
    410:410:boolean canReverse() -> canReverse
    420:421:void reverse() -> reverse
    415:416:void start() -> start
    425:426:void stop() -> stop
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator:
    731:733:void <init>(android.graphics.drawable.AnimationDrawable,boolean) -> <init>
    758:775:float getInterpolation(float) -> getInterpolation
    753:753:int getTotalDuration() -> getTotalDuration
    736:749:int updateFrames(android.graphics.drawable.AnimationDrawable,boolean) -> updateFrames
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition:
    352:352:void <init>() -> <init>
    352:352:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$1) -> <init>
    362:362:boolean canReverse() -> canReverse
    359:359:void reverse() -> reverse
androidx.appcompat.graphics.drawable.DrawableContainer -> androidx.appcompat.graphics.drawable.DrawableContainer:
    55:1172:void <init>() -> <init>
    538:576:void animate(boolean) -> animate
    598:599:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    604:604:boolean canApplyTheme() -> canApplyTheme
    639:641:void clearMutated() -> clearMutated
    635:635:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState() -> cloneConstantState
    89:95:void draw(android.graphics.Canvas) -> draw
    157:157:int getAlpha() -> getAlpha
    99:100:int getChangingConfigurations() -> getChangingConfigurations
    609:613:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    581:581:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    417:417:int getCurrentIndex() -> getCurrentIndex
    299:304:void getHotspotBounds(android.graphics.Rect) -> getHotspotBounds
    345:348:int getIntrinsicHeight() -> getIntrinsicHeight
    337:340:int getIntrinsicWidth() -> getIntrinsicWidth
    361:364:int getMinimumHeight() -> getMinimumHeight
    353:356:int getMinimumWidth() -> getMinimumWidth
    408:409:int getOpacity() -> getOpacity
    135:138:void getOutline(android.graphics.Outline) -> getOutline
    111:129:boolean getPadding(android.graphics.Rect) -> getPadding
    494:535:void initializeDrawableForDisplay(android.graphics.drawable.Drawable) -> initializeDrawableForDisplay
    372:378:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    247:247:boolean isAutoMirrored() -> isAutoMirrored
    231:231:boolean isStateful() -> isStateful
    252:276:void jumpToCurrentState() -> jumpToCurrentState
    619:625:android.graphics.drawable.Drawable mutate() -> mutate
    106:106:boolean needsMirroring() -> needsMirroring
    221:227:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    332:332:boolean onLayoutDirectionChanged(int) -> onLayoutDirectionChanged
    319:325:boolean onLevelChange(int) -> onLevelChange
    308:314:boolean onStateChange(int[]) -> onStateChange
    1207:1208:int resolveDensity(android.content.res.Resources,int) -> resolveDensity
    382:385:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    430:485:boolean selectDrawable(int) -> selectDrawable
    142:153:void setAlpha(int) -> setAlpha
    236:243:void setAutoMirrored(boolean) -> setAutoMirrored
    172:179:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    1155:1167:void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) -> setConstantState
    413:414:void setCurrentIndex(int) -> setCurrentIndex
    162:168:void setDither(boolean) -> setDither
    206:207:void setEnterFadeDuration(int) -> setEnterFadeDuration
    216:217:void setExitFadeDuration(int) -> setExitFadeDuration
    280:283:void setHotspot(float,float) -> setHotspot
    287:295:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    183:188:void setTintList(android.content.res.ColorStateList) -> setTintList
    192:197:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    396:403:boolean setVisible(boolean,boolean) -> setVisible
    389:392:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    592:593:void updateDensity(android.content.res.Resources) -> updateDensity
androidx.appcompat.graphics.drawable.DrawableContainer$1 -> androidx.appcompat.graphics.drawable.DrawableContainer$1:
    471:471:void <init>(androidx.appcompat.graphics.drawable.DrawableContainer) -> <init>
    474:476:void run() -> run
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback -> androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback:
    1172:1172:void <init>() -> <init>
    1189:1189:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    1193:1196:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    1200:1203:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    1181:1183:android.graphics.drawable.Drawable$Callback unwrap() -> unwrap
    1176:1177:androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback wrap(android.graphics.drawable.Drawable$Callback) -> wrap
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState -> androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState:
    652:760:void <init>(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState,androidx.appcompat.graphics.drawable.DrawableContainer,android.content.res.Resources) -> <init>
    774:789:int addChild(android.graphics.drawable.Drawable) -> addChild
    898:911:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    916:931:boolean canApplyTheme() -> canApplyTheme
    1135:1150:boolean canConstantState() -> canConstantState
    955:956:void clearMutated() -> clearMutated
    1047:1064:void computeConstantSize() -> computeConstantSize
    805:814:void createAllFutures() -> createAllFutures
    801:801:int getCapacity() -> getCapacity
    764:764:int getChangingConfigurations() -> getChangingConfigurations
    833:851:android.graphics.drawable.Drawable getChild(int) -> getChild
    826:826:int getChildCount() -> getChildCount
    1020:1023:int getConstantHeight() -> getConstantHeight
    1040:1043:int getConstantMinimumHeight() -> getConstantMinimumHeight
    1030:1033:int getConstantMinimumWidth() -> getConstantMinimumWidth
    971:992:android.graphics.Rect getConstantPadding() -> getConstantPadding
    1010:1013:int getConstantWidth() -> getConstantWidth
    1071:1071:int getEnterFadeDuration() -> getEnterFadeDuration
    1079:1079:int getExitFadeDuration() -> getExitFadeDuration
    1086:1098:int getOpacity() -> getOpacity
    1127:1130:void growArray(int,int) -> growArray
    796:798:void invalidateCache() -> invalidateCache
    1003:1003:boolean isConstantSize() -> isConstantSize
    1105:1120:boolean isStateful() -> isStateful
    937:945:void mutate() -> mutate
    817:822:android.graphics.drawable.Drawable prepareDrawable(android.graphics.drawable.Drawable) -> prepareDrawable
    996:997:void setConstantSize(boolean) -> setConstantSize
    1067:1068:void setEnterFadeDuration(int) -> setEnterFadeDuration
    1075:1076:void setExitFadeDuration(int) -> setExitFadeDuration
    855:872:boolean setLayoutDirection(int,int) -> setLayoutDirection
    964:965:void setVariablePadding(boolean) -> setVariablePadding
    882:894:void updateDensity(android.content.res.Resources) -> updateDensity
androidx.appcompat.graphics.drawable.DrawableWrapper -> androidx.appcompat.graphics.drawable.DrawableWrapper:
    46:48:void <init>(android.graphics.drawable.Drawable) -> <init>
    52:53:void draw(android.graphics.Canvas) -> draw
    67:67:int getChangingConfigurations() -> getChangingConfigurations
    112:112:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    137:137:int getIntrinsicHeight() -> getIntrinsicHeight
    132:132:int getIntrinsicWidth() -> getIntrinsicWidth
    147:147:int getMinimumHeight() -> getMinimumHeight
    142:142:int getMinimumWidth() -> getMinimumWidth
    122:122:int getOpacity() -> getOpacity
    152:152:boolean getPadding(android.graphics.Rect) -> getPadding
    102:102:int[] getState() -> getState
    127:127:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    220:220:android.graphics.drawable.Drawable getWrappedDrawable() -> getWrappedDrawable
    160:161:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    191:191:boolean isAutoMirrored() -> isAutoMirrored
    92:92:boolean isStateful() -> isStateful
    107:108:void jumpToCurrentState() -> jumpToCurrentState
    57:58:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    181:181:boolean onLevelChange(int) -> onLevelChange
    168:169:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    82:83:void setAlpha(int) -> setAlpha
    186:187:void setAutoMirrored(boolean) -> setAutoMirrored
    62:63:void setChangingConfigurations(int) -> setChangingConfigurations
    87:88:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    72:73:void setDither(boolean) -> setDither
    77:78:void setFilterBitmap(boolean) -> setFilterBitmap
    211:212:void setHotspot(float,float) -> setHotspot
    216:217:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    97:97:boolean setState(int[]) -> setState
    196:197:void setTint(int) -> setTint
    201:202:void setTintList(android.content.res.ColorStateList) -> setTintList
    206:207:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    117:117:boolean setVisible(boolean,boolean) -> setVisible
    224:233:void setWrappedDrawable(android.graphics.drawable.Drawable) -> setWrappedDrawable
    176:177:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
androidx.appcompat.graphics.drawable.DrawerArrowDrawable -> androidx.appcompat.graphics.drawable.DrawerArrowDrawable:
    100:100:void <clinit>() -> <clinit>
    97:152:void <init>(android.content.Context) -> <init>
    326:401:void draw(android.graphics.Canvas) -> draw
    171:171:float getArrowHeadLength() -> getArrowHeadLength
    190:190:float getArrowShaftLength() -> getArrowShaftLength
    197:197:float getBarLength() -> getBarLength
    247:247:float getBarThickness() -> getBarThickness
    227:227:int getColor() -> getColor
    311:311:int getDirection() -> getDirection
    256:256:float getGapSize() -> getGapSize
    419:419:int getIntrinsicHeight() -> getIntrinsicHeight
    424:424:int getIntrinsicWidth() -> getIntrinsicWidth
    429:429:int getOpacity() -> getOpacity
    458:458:android.graphics.Paint getPaint() -> getPaint
    437:437:float getProgress() -> getProgress
    289:289:boolean isSpinEnabled() -> isSpinEnabled
    465:465:float lerp(float,float,float) -> lerp
    405:409:void setAlpha(int) -> setAlpha
    160:164:void setArrowHeadLength(float) -> setArrowHeadLength
    180:184:void setArrowShaftLength(float) -> setArrowShaftLength
    206:210:void setBarLength(float) -> setBarLength
    236:241:void setBarThickness(float) -> setBarThickness
    216:220:void setColor(int) -> setColor
    413:415:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    277:281:void setDirection(int) -> setDirection
    267:271:void setGapSize(float) -> setGapSize
    448:452:void setProgress(float) -> setProgress
    300:304:void setSpinEnabled(boolean) -> setSpinEnabled
    318:322:void setVerticalMirror(boolean) -> setVerticalMirror
androidx.appcompat.graphics.drawable.StateListDrawable -> androidx.appcompat.graphics.drawable.StateListDrawable:
    86:87:void <init>() -> <init>
    401:406:void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState,android.content.res.Resources) -> <init>
    412:416:void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState) -> <init>
    97:102:void addState(int[],android.graphics.drawable.Drawable) -> addState
    389:391:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    322:324:void clearMutated() -> clearMutated
    78:78:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState() -> cloneConstantState
    317:317:androidx.appcompat.graphics.drawable.StateListDrawable$StateListState cloneConstantState() -> cloneConstantState
    232:251:int[] extractStateSet(android.util.AttributeSet) -> extractStateSet
    266:266:int getStateCount() -> getStateCount
    290:290:android.graphics.drawable.Drawable getStateDrawable(int) -> getStateDrawable
    302:302:int getStateDrawableIndex(int[]) -> getStateDrawableIndex
    255:255:androidx.appcompat.graphics.drawable.StateListDrawable$StateListState getStateListState() -> getStateListState
    278:278:int[] getStateSet(int) -> getStateSet
    141:148:void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    177:223:void inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflateChildElements
    106:106:boolean isStateful() -> isStateful
    308:312:android.graphics.drawable.Drawable mutate() -> mutate
    111:120:boolean onStateChange(int[]) -> onStateChange
    395:399:void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) -> setConstantState
    154:169:void updateStateFromTypedArray(android.content.res.TypedArray) -> updateStateFromTypedArray
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState -> androidx.appcompat.graphics.drawable.StateListDrawable$StateListState:
    330:337:void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState,androidx.appcompat.graphics.drawable.StateListDrawable,android.content.res.Resources) -> <init>
    349:351:int addStateSet(int[],android.graphics.drawable.Drawable) -> addStateSet
    379:383:void growArray(int,int) -> growArray
    355:362:int indexOfStateSet(int[]) -> indexOfStateSet
    341:346:void mutate() -> mutate
    368:368:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    374:374:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
androidx.appcompat.text.AllCapsTransformationMethod -> androidx.appcompat.text.AllCapsTransformationMethod:
    37:39:void <init>(android.content.Context) -> <init>
    43:43:java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
    49:49:void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect) -> onFocusChanged
androidx.appcompat.view.ActionBarPolicy -> androidx.appcompat.view.ActionBarPolicy:
    46:48:void <init>(android.content.Context) -> <init>
    110:110:boolean enableHomeButtonByDefault() -> enableHomeButtonByDefault
    43:43:androidx.appcompat.view.ActionBarPolicy get(android.content.Context) -> get
    86:86:int getEmbeddedMenuWidthLimit() -> getEmbeddedMenuWidthLimit
    56:73:int getMaxActionButtons() -> getMaxActionButtons
    115:115:int getStackedTabMaxWidth() -> getStackedTabMaxWidth
    94:104:int getTabContainerHeight() -> getTabContainerHeight
    90:90:boolean hasEmbeddedTabs() -> hasEmbeddedTabs
    78:81:boolean showsOverflowMenuButton() -> showsOverflowMenuButton
androidx.appcompat.view.ActionMode -> androidx.appcompat.view.ActionMode:
    41:245:void <init>() -> <init>
    71:71:java.lang.Object getTag() -> getTag
    145:145:boolean getTitleOptionalHint() -> getTitleOptionalHint
    153:153:boolean isTitleOptional() -> isTitleOptional
    225:225:boolean isUiFocusable() -> isUiFocusable
    57:58:void setTag(java.lang.Object) -> setTag
    134:135:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.view.ContextThemeWrapper -> androidx.appcompat.view.ContextThemeWrapper:
    48:49:void <init>() -> <init>
    63:65:void <init>(android.content.Context,int) -> <init>
    77:79:void <init>(android.content.Context,android.content.res.Resources$Theme) -> <init>
    97:105:void applyOverrideConfiguration(android.content.res.Configuration) -> applyOverrideConfiguration
    83:84:void attachBaseContext(android.content.Context) -> attachBaseContext
    195:195:android.content.res.AssetManager getAssets() -> getAssets
    109:109:android.content.res.Resources getResources() -> getResources
    113:121:android.content.res.Resources getResourcesInternal() -> getResourcesInternal
    156:162:java.lang.Object getSystemService(java.lang.String) -> getSystemService
    142:151:android.content.res.Resources$Theme getTheme() -> getTheme
    137:137:int getThemeResId() -> getThemeResId
    181:190:void initializeTheme() -> initializeTheme
    177:178:void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean) -> onApplyThemeResource
    126:130:void setTheme(int) -> setTheme
androidx.appcompat.view.StandaloneActionMode -> androidx.appcompat.view.StandaloneActionMode:
    50:59:void <init>(android.content.Context,androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode$Callback,boolean) -> <init>
    105:112:void finish() -> finish
    131:131:android.view.View getCustomView() -> getCustomView
    116:116:android.view.Menu getMenu() -> getMenu
    136:136:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    126:126:java.lang.CharSequence getSubtitle() -> getSubtitle
    121:121:java.lang.CharSequence getTitle() -> getTitle
    100:101:void invalidate() -> invalidate
    89:89:boolean isTitleOptional() -> isTitleOptional
    167:167:boolean isUiFocusable() -> isUiFocusable
    145:145:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    157:157:void onCloseSubMenu(androidx.appcompat.view.menu.SubMenuBuilder) -> onCloseSubMenu
    141:141:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    161:163:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
    148:153:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    94:96:void setCustomView(android.view.View) -> setCustomView
    68:69:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    78:79:void setSubtitle(int) -> setSubtitle
    63:64:void setTitle(java.lang.CharSequence) -> setTitle
    73:74:void setTitle(int) -> setTitle
    83:85:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.view.SupportActionModeWrapper -> androidx.appcompat.view.SupportActionModeWrapper:
    48:51:void <init>(android.content.Context,androidx.appcompat.view.ActionMode) -> <init>
    80:81:void finish() -> finish
    110:110:android.view.View getCustomView() -> getCustomView
    85:85:android.view.Menu getMenu() -> getMenu
    120:120:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    100:100:java.lang.CharSequence getSubtitle() -> getSubtitle
    55:55:java.lang.Object getTag() -> getTag
    90:90:java.lang.CharSequence getTitle() -> getTitle
    125:125:boolean getTitleOptionalHint() -> getTitleOptionalHint
    75:76:void invalidate() -> invalidate
    135:135:boolean isTitleOptional() -> isTitleOptional
    115:116:void setCustomView(android.view.View) -> setCustomView
    70:71:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    105:106:void setSubtitle(int) -> setSubtitle
    60:61:void setTag(java.lang.Object) -> setTag
    65:66:void setTitle(java.lang.CharSequence) -> setTitle
    95:96:void setTitle(int) -> setTitle
    130:131:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper -> androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper:
    149:154:void <init>(android.content.Context,android.view.ActionMode$Callback) -> <init>
    191:203:android.view.ActionMode getActionModeWrapper(androidx.appcompat.view.ActionMode) -> getActionModeWrapper
    181:186:android.view.Menu getMenuWrapper(android.view.Menu) -> getMenuWrapper
    171:172:boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    158:159:boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onCreateActionMode
    177:178:void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> onDestroyActionMode
    164:165:boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onPrepareActionMode
androidx.appcompat.view.SupportMenuInflater -> androidx.appcompat.view.SupportMenuInflater:
    82:84:void <clinit>() -> <clinit>
    100:104:void <init>(android.content.Context) -> <init>
    230:236:java.lang.Object findRealOwner(java.lang.Object) -> findRealOwner
    223:226:java.lang.Object getRealOwner() -> getRealOwner
    118:136:void inflate(int,android.view.Menu) -> inflate
    144:220:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu) -> parseMenu
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener -> androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener:
    241:241:void <clinit>() -> <clinit>
    246:258:void <init>(java.lang.Object,java.lang.String) -> <init>
    263:270:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.view.SupportMenuInflater$MenuState -> androidx.appcompat.view.SupportMenuInflater$MenuState:
    336:352:void <init>(androidx.appcompat.view.SupportMenuInflater,android.view.Menu) -> <init>
    529:531:void addItem() -> addItem
    534:537:android.view.SubMenu addSubMenuItem() -> addSubMenuItem
    457:460:char getShortcut(java.lang.String) -> getShortcut
    541:541:boolean hasAddedItem() -> hasAddedItem
    548:555:java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]) -> newInstance
    367:379:void readGroup(android.util.AttributeSet) -> readGroup
    385:454:void readItem(android.util.AttributeSet) -> readItem
    355:361:void resetGroup() -> resetGroup
    465:526:void setItem(android.view.MenuItem) -> setItem
androidx.appcompat.view.ViewPropertyAnimatorCompatSet -> androidx.appcompat.view.ViewPropertyAnimatorCompatSet:
    42:120:void <init>() -> <init>
    90:97:void cancel() -> cancel
    86:87:void onAnimationsEnded() -> onAnimationsEnded
    53:56:androidx.appcompat.view.ViewPropertyAnimatorCompatSet play(androidx.core.view.ViewPropertyAnimatorCompat) -> play
    61:64:androidx.appcompat.view.ViewPropertyAnimatorCompatSet playSequentially(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorCompat) -> playSequentially
    100:103:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setDuration(long) -> setDuration
    107:110:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    114:117:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setListener(androidx.core.view.ViewPropertyAnimatorListener) -> setListener
    68:83:void start() -> start
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1 -> androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1:
    121:123:void <init>(androidx.appcompat.view.ViewPropertyAnimatorCompatSet) -> <init>
    144:150:void onAnimationEnd(android.view.View) -> onAnimationEnd
    127:134:void onAnimationStart(android.view.View) -> onAnimationStart
    137:140:void onEnd() -> onEnd
androidx.appcompat.view.WindowCallbackWrapper -> androidx.appcompat.view.WindowCallbackWrapper:
    50:55:void <init>(android.view.Window$Callback) -> <init>
    79:79:boolean dispatchGenericMotionEvent(android.view.MotionEvent) -> dispatchGenericMotionEvent
    59:59:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    64:64:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    84:84:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    69:69:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    74:74:boolean dispatchTrackballEvent(android.view.MotionEvent) -> dispatchTrackballEvent
    171:172:void onActionModeFinished(android.view.ActionMode) -> onActionModeFinished
    166:167:void onActionModeStarted(android.view.ActionMode) -> onActionModeStarted
    129:130:void onAttachedToWindow() -> onAttachedToWindow
    119:120:void onContentChanged() -> onContentChanged
    94:94:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    89:89:android.view.View onCreatePanelView(int) -> onCreatePanelView
    134:135:void onDetachedFromWindow() -> onDetachedFromWindow
    109:109:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    104:104:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    139:140:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    184:185:void onPointerCaptureChanged(boolean) -> onPointerCaptureChanged
    99:99:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    178:179:void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int) -> onProvideKeyboardShortcuts
    145:145:boolean onSearchRequested(android.view.SearchEvent) -> onSearchRequested
    150:150:boolean onSearchRequested() -> onSearchRequested
    114:115:void onWindowAttributesChanged(android.view.WindowManager$LayoutParams) -> onWindowAttributesChanged
    124:125:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    155:155:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    161:161:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int) -> onWindowStartingActionMode
androidx.appcompat.view.menu.ActionMenuItem -> androidx.appcompat.view.menu.ActionMenuItem:
    54:90:void <init>(android.content.Context,int,int,int,int,java.lang.CharSequence) -> <init>
    434:446:void applyIconTint() -> applyIconTint
    368:368:boolean collapseActionView() -> collapseActionView
    363:363:boolean expandActionView() -> expandActionView
    337:337:android.view.ActionProvider getActionProvider() -> getActionProvider
    327:327:android.view.View getActionView() -> getActionView
    99:99:int getAlphabeticModifiers() -> getAlphabeticModifiers
    94:94:char getAlphabeticShortcut() -> getAlphabeticShortcut
    389:389:java.lang.CharSequence getContentDescription() -> getContentDescription
    104:104:int getGroupId() -> getGroupId
    109:109:android.graphics.drawable.Drawable getIcon() -> getIcon
    415:415:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    430:430:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    114:114:android.content.Intent getIntent() -> getIntent
    119:119:int getItemId() -> getItemId
    124:124:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    134:134:int getNumericModifiers() -> getNumericModifiers
    129:129:char getNumericShortcut() -> getNumericShortcut
    139:139:int getOrder() -> getOrder
    144:144:android.view.SubMenu getSubMenu() -> getSubMenu
    347:347:androidx.core.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    149:149:java.lang.CharSequence getTitle() -> getTitle
    154:154:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    400:400:java.lang.CharSequence getTooltipText() -> getTooltipText
    159:159:boolean hasSubMenu() -> hasSubMenu
    303:312:boolean invoke() -> invoke
    373:373:boolean isActionViewExpanded() -> isActionViewExpanded
    164:164:boolean isCheckable() -> isCheckable
    169:169:boolean isChecked() -> isChecked
    174:174:boolean isEnabled() -> isEnabled
    179:179:boolean isVisible() -> isVisible
    332:332:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    42:42:android.view.MenuItem setActionView(int) -> setActionView
    42:42:android.view.MenuItem setActionView(android.view.View) -> setActionView
    322:322:androidx.core.internal.view.SupportMenuItem setActionView(android.view.View) -> setActionView
    342:342:androidx.core.internal.view.SupportMenuItem setActionView(int) -> setActionView
    184:185:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    190:192:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    197:198:android.view.MenuItem setCheckable(boolean) -> setCheckable
    208:209:android.view.MenuItem setChecked(boolean) -> setChecked
    42:42:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    383:384:androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    214:215:android.view.MenuItem setEnabled(boolean) -> setEnabled
    202:203:androidx.appcompat.view.menu.ActionMenuItem setExclusiveCheckable(boolean) -> setExclusiveCheckable
    220:224:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    229:233:android.view.MenuItem setIcon(int) -> setIcon
    405:410:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    420:425:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    238:239:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    244:245:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    250:252:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    378:378:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    257:258:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    263:265:android.view.MenuItem setShortcut(char,char) -> setShortcut
    271:275:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    318:318:void setShowAsAction(int) -> setShowAsAction
    42:42:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    357:358:androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    352:352:androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider) -> setSupportActionProvider
    280:281:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    286:287:android.view.MenuItem setTitle(int) -> setTitle
    292:293:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    42:42:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    394:395:androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    298:299:android.view.MenuItem setVisible(boolean) -> setVisible
androidx.appcompat.view.menu.ActionMenuItemView -> androidx.appcompat.view.menu.ActionMenuItemView:
    64:65:void <init>(android.content.Context) -> <init>
    68:69:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    72:88:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    119:119:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    237:237:boolean hasText() -> hasText
    124:137:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> initialize
    264:264:boolean needsDividerAfter() -> needsDividerAfter
    259:259:boolean needsDividerBefore() -> needsDividerBefore
    150:153:void onClick(android.view.View) -> onClick
    92:96:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    269:296:void onMeasure(int,int) -> onMeasure
    333:334:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    141:145:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    165:165:boolean prefersCondensedTitle() -> prefersCondensedTitle
    171:171:void setCheckable(boolean) -> setCheckable
    176:176:void setChecked(boolean) -> setChecked
    179:185:void setExpandedFormat(boolean) -> setExpandedFormat
    215:234:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    156:157:void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker) -> setItemInvoker
    113:115:void setPadding(int,int,int,int) -> setPadding
    160:161:void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback) -> setPopupCallback
    243:243:void setShortcut(boolean,char) -> setShortcut
    247:250:void setTitle(java.lang.CharSequence) -> setTitle
    103:107:boolean shouldAllowTextWithIcon() -> shouldAllowTextWithIcon
    254:254:boolean showsIcon() -> showsIcon
    188:211:void updateTextButtonVisibility() -> updateTextButtonVisibility
androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener -> androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener:
    299:301:void <init>(androidx.appcompat.view.menu.ActionMenuItemView) -> <init>
    305:308:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    314:318:boolean onForwardingStarted() -> onForwardingStarted
androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback -> androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback:
    336:336:void <init>() -> <init>
androidx.appcompat.view.menu.BaseMenuPresenter -> androidx.appcompat.view.menu.BaseMenuPresenter:
    61:66:void <init>(android.content.Context,int,int) -> <init>
    134:139:void addItemView(android.view.View,int) -> addItemView
    238:238:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    167:167:androidx.appcompat.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup) -> createItemView
    233:233:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    148:149:boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    228:228:boolean flagActionItems() -> flagActionItems
    158:158:androidx.appcompat.view.menu.MenuPresenter$Callback getCallback() -> getCallback
    243:243:int getId() -> getId
    183:189:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    77:83:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    70:73:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    213:216:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    220:223:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    154:155:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    247:248:void setId(int) -> setId
    208:208:boolean shouldIncludeItem(int,androidx.appcompat.view.menu.MenuItemImpl) -> shouldIncludeItem
    91:125:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.BaseMenuWrapper -> androidx.appcompat.view.menu.BaseMenuWrapper:
    38:40:void <init>(android.content.Context,java.lang.Object) -> <init>
    43:62:android.view.MenuItem getMenuItemWrapper(android.view.MenuItem) -> getMenuItemWrapper
    66:82:android.view.SubMenu getSubMenuWrapper(android.view.SubMenu) -> getSubMenuWrapper
    87:93:void internalClear() -> internalClear
    96:109:void internalRemoveGroup(int) -> internalRemoveGroup
    112:126:void internalRemoveItem(int) -> internalRemoveItem
androidx.appcompat.view.menu.BaseWrapper -> androidx.appcompat.view.menu.BaseWrapper:
    23:28:void <init>(java.lang.Object) -> <init>
    31:31:java.lang.Object getWrappedObject() -> getWrappedObject
androidx.appcompat.view.menu.CascadingMenuPopup -> androidx.appcompat.view.menu.CascadingMenuPopup:
    66:66:void <clinit>() -> <clinit>
    89:237:void <init>(android.content.Context,android.view.View,int,int,boolean) -> <init>
    354:361:void addMenu(androidx.appcompat.view.menu.MenuBuilder) -> addMenu
    791:791:boolean closeMenuOnSubMenuOpened() -> closeMenuOnSubMenuOpened
    245:254:androidx.appcompat.widget.MenuPopupWindow createPopupWindow() -> createPopupWindow
    287:298:void dismiss() -> dismiss
    655:662:int findIndexOfAddedMenu(androidx.appcompat.view.menu.MenuBuilder) -> findIndexOfAddedMenu
    516:523:android.view.MenuItem findMenuItemForSubmenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuBuilder) -> findMenuItemForSubmenu
    537:580:android.view.View findParentViewForSubmenu(androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,androidx.appcompat.view.menu.MenuBuilder) -> findParentViewForSubmenu
    726:726:boolean flagActionItems() -> flagActionItems
    315:316:int getInitialMenuPosition() -> getInitialMenuPosition
    765:767:android.widget.ListView getListView() -> getListView
    329:348:int getNextMenuPosition(int) -> getNextMenuPosition
    588:588:boolean isShowing() -> isShowing
    667:722:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    598:612:void onDismiss() -> onDismiss
    302:306:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    736:736:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    731:731:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    629:645:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    749:756:void setAnchorView(android.view.View) -> setAnchorView
    623:624:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    241:242:void setForceShowIcon(boolean) -> setForceShowIcon
    740:745:void setGravity(int) -> setGravity
    772:774:void setHorizontalOffset(int) -> setHorizontalOffset
    760:761:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    784:785:void setShowTitle(boolean) -> setShowTitle
    778:780:void setVerticalOffset(int) -> setVerticalOffset
    259:279:void show() -> show
    369:503:void showMenu(androidx.appcompat.view.menu.MenuBuilder) -> showMenu
    616:619:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.CascadingMenuPopup$1 -> androidx.appcompat.view.menu.CascadingMenuPopup$1:
    98:98:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    104:116:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.view.menu.CascadingMenuPopup$2 -> androidx.appcompat.view.menu.CascadingMenuPopup$2:
    120:120:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    123:123:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    127:134:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.appcompat.view.menu.CascadingMenuPopup$3 -> androidx.appcompat.view.menu.CascadingMenuPopup$3:
    137:137:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    150:194:void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverEnter
    143:144:void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverExit
androidx.appcompat.view.menu.CascadingMenuPopup$3$1 -> androidx.appcompat.view.menu.CascadingMenuPopup$3$1:
    173:173:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup$3,androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,android.view.MenuItem,androidx.appcompat.view.menu.MenuBuilder) -> <init>
    178:190:void run() -> run
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo -> androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo:
    800:804:void <init>(androidx.appcompat.widget.MenuPopupWindow,androidx.appcompat.view.menu.MenuBuilder,int) -> <init>
    807:807:android.widget.ListView getListView() -> getListView
androidx.appcompat.view.menu.ExpandedMenuView -> androidx.appcompat.view.menu.ExpandedMenuView:
    42:42:void <clinit>() -> <clinit>
    53:54:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    57:69:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    97:97:int getWindowAnimations() -> getWindowAnimations
    73:74:void initialize(androidx.appcompat.view.menu.MenuBuilder) -> initialize
    86:86:boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl) -> invokeItem
    78:82:void onDetachedFromWindow() -> onDetachedFromWindow
    92:93:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.view.menu.ListMenuItemView -> androidx.appcompat.view.menu.ListMenuItemView:
    76:77:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    80:100:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    141:142:void addContentView(android.view.View) -> addContentView
    145:150:void addContentView(android.view.View,int) -> addContentView
    350:358:void adjustListItemSelectionBounds(android.graphics.Rect) -> adjustListItemSelectionBounds
    330:333:android.view.LayoutInflater getInflater() -> getInflater
    169:169:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    126:138:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> initialize
    312:317:void insertCheckBox() -> insertCheckBox
    297:301:void insertIconView() -> insertIconView
    304:309:void insertRadioButton() -> insertRadioButton
    104:122:void onFinishInflate() -> onFinishInflate
    285:294:void onMeasure(int,int) -> onMeasure
    321:321:boolean prefersCondensedTitle() -> prefersCondensedTitle
    174:216:void setCheckable(boolean) -> setCheckable
    222:235:void setChecked(boolean) -> setChecked
    153:154:void setForceShowIcon(boolean) -> setForceShowIcon
    342:346:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    259:281:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    245:255:void setShortcut(boolean,char) -> setShortcut
    238:241:void setSubMenuArrowVisible(boolean) -> setSubMenuArrowVisible
    158:165:void setTitle(java.lang.CharSequence) -> setTitle
    326:326:boolean showsIcon() -> showsIcon
androidx.appcompat.view.menu.ListMenuPresenter -> androidx.appcompat.view.menu.ListMenuPresenter:
    71:74:void <init>(android.content.Context,int) -> <init>
    81:84:void <init>(int,int) -> <init>
    188:188:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    183:183:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    178:178:boolean flagActionItems() -> flagActionItems
    125:128:android.widget.ListAdapter getAdapter() -> getAdapter
    212:212:int getId() -> getId
    161:161:int getItemIndexOffset() -> getItemIndexOffset
    105:114:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    88:101:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    155:158:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    173:174:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    228:229:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    217:223:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    143:150:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    200:204:void restoreHierarchyState(android.os.Bundle) -> restoreHierarchyState
    192:197:void saveHierarchyState(android.os.Bundle) -> saveHierarchyState
    138:139:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    207:208:void setId(int) -> setId
    165:169:void setItemIndexOffset(int) -> setItemIndexOffset
    133:134:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter -> androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter:
    232:236:void <init>(androidx.appcompat.view.menu.ListMenuPresenter) -> <init>
    277:290:void findExpandedIndex() -> findExpandedIndex
    240:245:int getCount() -> getCount
    231:231:java.lang.Object getItem(int) -> getItem
    250:255:androidx.appcompat.view.menu.MenuItemImpl getItem(int) -> getItem
    262:262:long getItemId(int) -> getItemId
    267:273:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    294:296:void notifyDataSetChanged() -> notifyDataSetChanged
androidx.appcompat.view.menu.MenuAdapter -> androidx.appcompat.view.menu.MenuAdapter:
    36:50:void <init>(androidx.appcompat.view.menu.MenuBuilder,android.view.LayoutInflater,boolean,int) -> <init>
    114:127:void findExpandedIndex() -> findExpandedIndex
    71:71:androidx.appcompat.view.menu.MenuBuilder getAdapterMenu() -> getAdapterMenu
    62:67:int getCount() -> getCount
    53:53:boolean getForceShowIcon() -> getForceShowIcon
    32:32:java.lang.Object getItem(int) -> getItem
    76:81:androidx.appcompat.view.menu.MenuItemImpl getItem(int) -> getItem
    88:88:long getItemId(int) -> getItemId
    93:110:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    131:133:void notifyDataSetChanged() -> notifyDataSetChanged
    57:58:void setForceShowIcon(boolean) -> setForceShowIcon
androidx.appcompat.view.menu.MenuBuilder -> androidx.appcompat.view.menu.MenuBuilder:
    68:68:void <clinit>() -> <clinit>
    134:242:void <init>(android.content.Context) -> <init>
    472:472:android.view.MenuItem add(java.lang.CharSequence) -> add
    477:477:android.view.MenuItem add(int) -> add
    482:482:android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    487:487:android.view.MenuItem add(int,int,int,int) -> add
    526:550:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    447:460:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence) -> addInternal
    256:257:void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter) -> addMenuPresenter
    269:272:void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter,android.content.Context) -> addMenuPresenter
    492:492:android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    497:497:android.view.SubMenu addSubMenu(int) -> addSubMenu
    502:506:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    511:511:android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    847:850:void changeMenuMode() -> changeMenuMode
    610:616:void clear() -> clear
    598:606:void clearAll() -> clearAll
    1219:1224:void clearHeader() -> clearHeader
    1036:1048:void close(boolean) -> close
    1052:1053:void close() -> close
    1379:1397:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    466:466:androidx.appcompat.view.menu.MenuItemImpl createNewMenuItem(int,int,int,int,java.lang.CharSequence,int) -> createNewMenuItem
    840:840:boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> dispatchMenuItemSelected
    290:302:void dispatchPresenterUpdate(boolean) -> dispatchPresenterUpdate
    350:368:void dispatchRestoreInstanceState(android.os.Bundle) -> dispatchRestoreInstanceState
    327:347:void dispatchSaveInstanceState(android.os.Bundle) -> dispatchSaveInstanceState
    306:323:boolean dispatchSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder,androidx.appcompat.view.menu.MenuPresenter) -> dispatchSubMenuSelected
    1357:1375:boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    730:730:int findGroupIndex(int) -> findGroupIndex
    734:748:int findGroupIndex(int,int) -> findGroupIndex
    853:860:int findInsertIndex(java.util.ArrayList,int) -> findInsertIndex
    699:713:android.view.MenuItem findItem(int) -> findItem
    717:726:int findItemIndex(int) -> findItemIndex
    936:971:androidx.appcompat.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent) -> findItemWithShortcutForKey
    888:920:void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent) -> findItemsWithShortcutForKey
    1169:1206:void flagActionItems() -> flagActionItems
    1209:1210:java.util.ArrayList getActionItems() -> getActionItems
    436:436:java.lang.String getActionViewStatesKey() -> getActionViewStatesKey
    836:836:android.content.Context getContext() -> getContext
    1401:1401:androidx.appcompat.view.menu.MenuItemImpl getExpandedItem() -> getExpandedItem
    1322:1322:android.graphics.drawable.Drawable getHeaderIcon() -> getHeaderIcon
    1318:1318:java.lang.CharSequence getHeaderTitle() -> getHeaderTitle
    1326:1326:android.view.View getHeaderView() -> getHeaderView
    758:758:android.view.MenuItem getItem(int) -> getItem
    1214:1215:java.util.ArrayList getNonActionItems() -> getNonActionItems
    1353:1353:boolean getOptionalIconsVisible() -> getOptionalIconsVisible
    785:791:int getOrdering(int) -> getOrdering
    832:832:android.content.res.Resources getResources() -> getResources
    1334:1334:androidx.appcompat.view.menu.MenuBuilder getRootMenu() -> getRootMenu
    1124:1139:java.util.ArrayList getVisibleItems() -> getVisibleItems
    681:694:boolean hasVisibleItems() -> hasVisibleItems
    520:520:boolean isGroupDividerEnabled() -> isGroupDividerEnabled
    798:798:boolean isQwertyMode() -> isQwertyMode
    763:763:boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    828:828:boolean isShortcutsVisible() -> isShortcutsVisible
    1118:1120:void onItemActionRequestChanged(androidx.appcompat.view.menu.MenuItemImpl) -> onItemActionRequestChanged
    1107:1109:void onItemVisibleChanged(androidx.appcompat.view.menu.MenuItemImpl) -> onItemVisibleChanged
    1063:1076:void onItemsChanged(boolean) -> onItemsChanged
    977:977:boolean performIdentifierAction(int,int) -> performIdentifierAction
    981:981:boolean performItemAction(android.view.MenuItem,int) -> performItemAction
    985:1024:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int) -> performItemAction
    865:877:boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    560:573:void removeGroup(int) -> removeGroup
    555:556:void removeItem(int) -> removeItem
    594:595:void removeItemAt(int) -> removeItemAt
    586:591:void removeItemAtInt(int,boolean) -> removeItemAtInt
    281:287:void removeMenuPresenter(androidx.appcompat.view.menu.MenuPresenter) -> removeMenuPresenter
    406:433:void restoreActionViewStates(android.os.Bundle) -> restoreActionViewStates
    375:376:void restorePresenterStates(android.os.Bundle) -> restorePresenterStates
    379:403:void saveActionViewStates(android.os.Bundle) -> saveActionViewStates
    371:372:void savePresenterStates(android.os.Bundle) -> savePresenterStates
    440:441:void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback) -> setCallback
    1345:1346:void setCurrentMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> setCurrentMenuInfo
    245:246:androidx.appcompat.view.menu.MenuBuilder setDefaultShowAsAction(int) -> setDefaultShowAsAction
    619:634:void setExclusiveItemChecked(android.view.MenuItem) -> setExclusiveItemChecked
    638:647:void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    516:517:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    669:677:void setGroupEnabled(int,boolean) -> setGroupEnabled
    651:665:void setGroupVisible(int,boolean) -> setGroupVisible
    1289:1290:androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable) -> setHeaderIconInt
    1301:1302:androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(int) -> setHeaderIconInt
    1228:1255:void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View) -> setHeaderInternal
    1265:1266:androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence) -> setHeaderTitleInt
    1277:1278:androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(int) -> setHeaderTitleInt
    1313:1314:androidx.appcompat.view.menu.MenuBuilder setHeaderViewInt(android.view.View) -> setHeaderViewInt
    1349:1350:void setOptionalIconsVisible(boolean) -> setOptionalIconsVisible
    1410:1411:void setOverrideVisibleItems(boolean) -> setOverrideVisibleItems
    768:771:void setQwertyMode(boolean) -> setQwertyMode
    809:815:void setShortcutsVisible(boolean) -> setShortcutsVisible
    818:822:void setShortcutsVisibleInner(boolean) -> setShortcutsVisibleInner
    753:753:int size() -> size
    1092:1098:void startDispatchingItemsChanged() -> startDispatchingItemsChanged
    1084:1089:void stopDispatchingItemsChanged() -> stopDispatchingItemsChanged
androidx.appcompat.view.menu.MenuDialogHelper -> androidx.appcompat.view.menu.MenuDialogHelper:
    42:44:void <init>(androidx.appcompat.view.menu.MenuBuilder) -> <init>
    139:142:void dismiss() -> dismiss
    169:170:void onClick(android.content.DialogInterface,int) -> onClick
    151:157:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    146:147:void onDismiss(android.content.DialogInterface) -> onDismiss
    94:125:boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
    161:164:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
    130:131:void setPresenterCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setPresenterCallback
    53:90:void show(android.os.IBinder) -> show
androidx.appcompat.view.menu.MenuItemImpl -> androidx.appcompat.view.menu.MenuItemImpl:
    68:146:void <init>(androidx.appcompat.view.menu.MenuBuilder,int,int,int,int,java.lang.CharSequence,int) -> <init>
    691:692:void actionFormatChanged() -> actionFormatChanged
    402:405:void appendModifier(java.lang.StringBuilder,int,int,java.lang.String) -> appendModifier
    570:585:android.graphics.drawable.Drawable applyIconTintIfNecessary(android.graphics.drawable.Drawable) -> applyIconTintIfNecessary
    832:845:boolean collapseActionView() -> collapseActionView
    818:827:boolean expandActionView() -> expandActionView
    782:782:android.view.ActionProvider getActionProvider() -> getActionProvider
    764:770:android.view.View getActionView() -> getActionView
    275:275:int getAlphabeticModifiers() -> getAlphabeticModifiers
    243:243:char getAlphabeticShortcut() -> getAlphabeticShortcut
    233:233:java.lang.Runnable getCallback() -> getCallback
    885:885:java.lang.CharSequence getContentDescription() -> getContentDescription
    203:203:int getGroupId() -> getGroupId
    500:511:android.graphics.drawable.Drawable getIcon() -> getIcon
    550:550:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    566:566:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    223:223:android.content.Intent getIntent() -> getIntent
    209:209:int getItemId() -> getItemId
    687:687:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    285:285:int getNumericModifiers() -> getNumericModifiers
    280:280:char getNumericShortcut() -> getNumericShortcut
    214:214:int getOrder() -> getOrder
    218:218:int getOrdering() -> getOrdering
    342:342:char getShortcut() -> getShortcut
    352:398:java.lang.String getShortcutLabel() -> getShortcutLabel
    419:419:android.view.SubMenu getSubMenu() -> getSubMenu
    788:788:androidx.core.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    436:436:java.lang.CharSequence getTitle() -> getTitle
    471:480:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    446:448:java.lang.CharSequence getTitleForItemView(androidx.appcompat.view.menu.MenuView$ItemView) -> getTitleForItemView
    899:899:java.lang.CharSequence getTooltipText() -> getTooltipText
    849:855:boolean hasCollapsibleActionView() -> hasCollapsibleActionView
    424:424:boolean hasSubMenu() -> hasSubMenu
    154:180:boolean invoke() -> invoke
    702:702:boolean isActionButton() -> isActionButton
    865:865:boolean isActionViewExpanded() -> isActionViewExpanded
    590:590:boolean isCheckable() -> isCheckable
    614:614:boolean isChecked() -> isChecked
    185:185:boolean isEnabled() -> isEnabled
    609:609:boolean isExclusiveCheckable() -> isExclusiveCheckable
    640:643:boolean isVisible() -> isVisible
    706:706:boolean requestsActionButton() -> requestsActionButton
    710:710:boolean requiresActionButton() -> requiresActionButton
    776:776:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    51:51:android.view.MenuItem setActionView(int) -> setActionView
    51:51:android.view.MenuItem setActionView(android.view.View) -> setActionView
    745:751:androidx.core.internal.view.SupportMenuItem setActionView(android.view.View) -> setActionView
    756:759:androidx.core.internal.view.SupportMenuItem setActionView(int) -> setActionView
    859:861:void setActionViewExpanded(boolean) -> setActionViewExpanded
    248:256:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    261:270:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    237:238:android.view.MenuItem setCallback(java.lang.Runnable) -> setCallback
    595:601:android.view.MenuItem setCheckable(boolean) -> setCheckable
    619:627:android.view.MenuItem setChecked(boolean) -> setChecked
    631:636:void setCheckedInt(boolean) -> setCheckedInt
    51:51:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    876:880:androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    190:198:android.view.MenuItem setEnabled(boolean) -> setEnabled
    605:606:void setExclusiveCheckable(boolean) -> setExclusiveCheckable
    516:521:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    526:533:android.view.MenuItem setIcon(int) -> setIcon
    539:545:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    555:561:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    228:229:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    714:719:void setIsActionButton(boolean) -> setIsActionButton
    682:683:void setMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> setMenuInfo
    290:298:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    303:312:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    870:871:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    672:673:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    317:322:android.view.MenuItem setShortcut(char,char) -> setShortcut
    328:335:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    727:741:void setShowAsAction(int) -> setShowAsAction
    51:51:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    812:813:androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    428:431:void setSubMenu(androidx.appcompat.view.menu.SubMenuBuilder) -> setSubMenu
    793:807:androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider) -> setSupportActionProvider
    453:461:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    466:466:android.view.MenuItem setTitle(int) -> setTitle
    486:495:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    51:51:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    890:894:androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    665:667:android.view.MenuItem setVisible(boolean) -> setVisible
    655:657:boolean setVisibleInt(boolean) -> setVisibleInt
    698:698:boolean shouldShowIcon() -> shouldShowIcon
    414:414:boolean shouldShowShortcut() -> shouldShowShortcut
    722:722:boolean showsTextAsAction() -> showsTextAsAction
    678:678:java.lang.String toString() -> toString
androidx.appcompat.view.menu.MenuItemImpl$1 -> androidx.appcompat.view.menu.MenuItemImpl$1:
    800:800:void <init>(androidx.appcompat.view.menu.MenuItemImpl) -> <init>
    803:804:void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
androidx.appcompat.view.menu.MenuItemWrapperICS -> androidx.appcompat.view.menu.MenuItemWrapperICS:
    52:53:void <init>(android.content.Context,androidx.core.internal.view.SupportMenuItem) -> <init>
    313:313:boolean collapseActionView() -> collapseActionView
    385:385:androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper createActionProviderWrapper(android.view.ActionProvider) -> createActionProviderWrapper
    308:308:boolean expandActionView() -> expandActionView
    299:303:android.view.ActionProvider getActionProvider() -> getActionProvider
    283:287:android.view.View getActionView() -> getActionView
    180:180:int getAlphabeticModifiers() -> getAlphabeticModifiers
    175:175:char getAlphabeticShortcut() -> getAlphabeticShortcut
    336:336:java.lang.CharSequence getContentDescription() -> getContentDescription
    62:62:int getGroupId() -> getGroupId
    112:112:android.graphics.drawable.Drawable getIcon() -> getIcon
    358:358:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    369:369:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    123:123:android.content.Intent getIntent() -> getIntent
    57:57:int getItemId() -> getItemId
    245:245:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    158:158:int getNumericModifiers() -> getNumericModifiers
    153:153:char getNumericShortcut() -> getNumericShortcut
    67:67:int getOrder() -> getOrder
    233:233:android.view.SubMenu getSubMenu() -> getSubMenu
    84:84:java.lang.CharSequence getTitle() -> getTitle
    95:95:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    347:347:java.lang.CharSequence getTooltipText() -> getTooltipText
    228:228:boolean hasSubMenu() -> hasSubMenu
    318:318:boolean isActionViewExpanded() -> isActionViewExpanded
    191:191:boolean isCheckable() -> isCheckable
    202:202:boolean isChecked() -> isChecked
    223:223:boolean isEnabled() -> isEnabled
    212:212:boolean isVisible() -> isVisible
    292:294:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    261:265:android.view.MenuItem setActionView(android.view.View) -> setActionView
    271:278:android.view.MenuItem setActionView(int) -> setActionView
    163:164:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    169:170:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    185:186:android.view.MenuItem setCheckable(boolean) -> setCheckable
    196:197:android.view.MenuItem setChecked(boolean) -> setChecked
    330:331:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    217:218:android.view.MenuItem setEnabled(boolean) -> setEnabled
    374:382:void setExclusiveCheckable(boolean) -> setExclusiveCheckable
    100:101:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    106:107:android.view.MenuItem setIcon(int) -> setIcon
    352:353:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    363:364:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    117:118:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    141:142:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    147:148:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    323:325:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    238:240:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    128:129:android.view.MenuItem setShortcut(char,char) -> setShortcut
    135:136:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    250:251:void setShowAsAction(int) -> setShowAsAction
    255:256:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    72:73:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    78:79:android.view.MenuItem setTitle(int) -> setTitle
    89:90:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    341:342:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    207:207:android.view.MenuItem setVisible(boolean) -> setVisible
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper:
    422:425:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider) -> <init>
    439:439:boolean hasSubMenu() -> hasSubMenu
    429:429:android.view.View onCreateActionView() -> onCreateActionView
    434:434:boolean onPerformDefaultAction() -> onPerformDefaultAction
    444:445:void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper:
    458:461:void <init>(android.view.View) -> <init>
    474:474:android.view.View getWrappedView() -> getWrappedView
    470:471:void onActionViewCollapsed() -> onActionViewCollapsed
    465:466:void onActionViewExpanded() -> onActionViewExpanded
androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper:
    404:406:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnActionExpandListener) -> <init>
    415:415:boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
    410:410:boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper:
    391:393:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnMenuItemClickListener) -> <init>
    397:397:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.view.menu.MenuItemWrapperJB -> androidx.appcompat.view.menu.MenuItemWrapperJB:
    39:40:void <init>(android.content.Context,androidx.core.internal.view.SupportMenuItem) -> <init>
    44:44:androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper createActionProviderWrapper(android.view.ActionProvider) -> createActionProviderWrapper
androidx.appcompat.view.menu.MenuItemWrapperJB$ActionProviderWrapperJB -> androidx.appcompat.view.menu.MenuItemWrapperJB$ActionProviderWrapperJB:
    51:53:void <init>(androidx.appcompat.view.menu.MenuItemWrapperJB,android.content.Context,android.view.ActionProvider) -> <init>
    67:67:boolean isVisible() -> isVisible
    83:86:void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
    57:57:android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    62:62:boolean overridesItemVisibility() -> overridesItemVisibility
    72:73:void refreshVisibility() -> refreshVisibility
    77:79:void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener) -> setVisibilityListener
androidx.appcompat.view.menu.MenuPopup -> androidx.appcompat.view.menu.MenuPopup:
    39:39:void <init>() -> <init>
    217:217:boolean closeMenuOnSubMenuOpened() -> closeMenuOnSubMenuOpened
    113:113:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    108:108:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    78:78:android.graphics.Rect getEpicenterBounds() -> getEpicenterBounds
    118:118:int getId() -> getId
    103:103:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    99:99:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    143:172:int measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int) -> measureIndividualMenuWidth
    123:132:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    71:72:void setEpicenterBounds(android.graphics.Rect) -> setEpicenterBounds
    202:213:boolean shouldPreserveIconSpacing(androidx.appcompat.view.menu.MenuBuilder) -> shouldPreserveIconSpacing
    184:187:androidx.appcompat.view.menu.MenuAdapter toMenuAdapter(android.widget.ListAdapter) -> toMenuAdapter
androidx.appcompat.view.menu.MenuPopupHelper -> androidx.appcompat.view.menu.MenuPopupHelper:
    68:69:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> <init>
    73:74:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View) -> <init>
    79:80:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int) -> <init>
    60:334:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int,int) -> <init>
    224:259:androidx.appcompat.view.menu.MenuPopup createPopup() -> createPopup
    298:301:void dismiss() -> dismiss
    139:139:int getGravity() -> getGravity
    345:345:android.widget.ListView getListView() -> getListView
    156:159:androidx.appcompat.view.menu.MenuPopup getPopup() -> getPopup
    320:320:boolean isShowing() -> isShowing
    312:317:void onDismiss() -> onDismiss
    105:106:void setAnchorView(android.view.View) -> setAnchorView
    118:122:void setForceShowIcon(boolean) -> setForceShowIcon
    132:133:void setGravity(int) -> setGravity
    94:95:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    325:329:void setPresenterCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setPresenterCallback
    143:146:void show() -> show
    149:152:void show(int,int) -> show
    263:291:void showPopup(int,int,boolean,boolean) -> showPopup
    169:178:boolean tryShow() -> tryShow
    205:214:boolean tryShow(int,int) -> tryShow
androidx.appcompat.view.menu.MenuPopupHelper$1 -> androidx.appcompat.view.menu.MenuPopupHelper$1:
    334:334:void <init>(androidx.appcompat.view.menu.MenuPopupHelper) -> <init>
    337:338:void onDismiss() -> onDismiss
androidx.appcompat.view.menu.MenuWrapperFactory -> androidx.appcompat.view.menu.MenuWrapperFactory:
    37:38:void <init>() -> <init>
    41:41:android.view.Menu wrapSupportMenu(android.content.Context,androidx.core.internal.view.SupportMenu) -> wrapSupportMenu
    45:48:android.view.MenuItem wrapSupportMenuItem(android.content.Context,androidx.core.internal.view.SupportMenuItem) -> wrapSupportMenuItem
    53:53:android.view.SubMenu wrapSupportSubMenu(android.content.Context,androidx.core.internal.view.SupportSubMenu) -> wrapSupportSubMenu
androidx.appcompat.view.menu.MenuWrapperICS -> androidx.appcompat.view.menu.MenuWrapperICS:
    35:36:void <init>(android.content.Context,androidx.core.internal.view.SupportMenu) -> <init>
    40:40:android.view.MenuItem add(java.lang.CharSequence) -> add
    45:45:android.view.MenuItem add(int) -> add
    50:50:android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    55:55:android.view.MenuItem add(int,int,int,int) -> add
    82:96:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    60:60:android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    65:65:android.view.SubMenu addSubMenu(int) -> addSubMenu
    70:70:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    75:76:android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    113:115:void clear() -> clear
    154:155:void close() -> close
    139:139:android.view.MenuItem findItem(int) -> findItem
    149:149:android.view.MenuItem getItem(int) -> getItem
    134:134:boolean hasVisibleItems() -> hasVisibleItems
    164:164:boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    169:169:boolean performIdentifierAction(int,int) -> performIdentifierAction
    159:159:boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    107:109:void removeGroup(int) -> removeGroup
    101:103:void removeItem(int) -> removeItem
    119:120:void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    129:130:void setGroupEnabled(int,boolean) -> setGroupEnabled
    124:125:void setGroupVisible(int,boolean) -> setGroupVisible
    174:175:void setQwertyMode(boolean) -> setQwertyMode
    144:144:int size() -> size
androidx.appcompat.view.menu.StandardMenuPopup -> androidx.appcompat.view.menu.StandardMenuPopup:
    46:46:void <clinit>() -> <clinit>
    60:136:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,int,int,boolean) -> <init>
    223:223:void addMenu(androidx.appcompat.view.menu.MenuBuilder) -> addMenu
    215:218:void dismiss() -> dismiss
    311:311:boolean flagActionItems() -> flagActionItems
    344:344:android.widget.ListView getListView() -> getListView
    227:227:boolean isShowing() -> isShowing
    301:307:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    232:245:void onDismiss() -> onDismiss
    330:334:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    321:321:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    316:316:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    263:295:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    325:326:void setAnchorView(android.view.View) -> setAnchorView
    258:259:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    140:141:void setForceShowIcon(boolean) -> setForceShowIcon
    145:146:void setGravity(int) -> setGravity
    350:351:void setHorizontalOffset(int) -> setHorizontalOffset
    339:340:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    360:361:void setShowTitle(boolean) -> setShowTitle
    355:356:void setVerticalOffset(int) -> setVerticalOffset
    208:211:void show() -> show
    149:203:boolean tryShow() -> tryShow
    249:254:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.StandardMenuPopup$1 -> androidx.appcompat.view.menu.StandardMenuPopup$1:
    61:61:void <init>(androidx.appcompat.view.menu.StandardMenuPopup) -> <init>
    67:76:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.view.menu.StandardMenuPopup$2 -> androidx.appcompat.view.menu.StandardMenuPopup$2:
    80:80:void <init>(androidx.appcompat.view.menu.StandardMenuPopup) -> <init>
    83:83:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    87:92:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.appcompat.view.menu.SubMenuBuilder -> androidx.appcompat.view.menu.SubMenuBuilder:
    42:46:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> <init>
    137:137:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    89:90:boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> dispatchMenuItemSelected
    132:132:boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    142:146:java.lang.String getActionViewStatesKey() -> getActionViewStatesKey
    74:74:android.view.MenuItem getItem() -> getItem
    69:69:android.view.Menu getParentMenu() -> getParentMenu
    84:84:androidx.appcompat.view.menu.MenuBuilder getRootMenu() -> getRootMenu
    156:156:boolean isGroupDividerEnabled() -> isGroupDividerEnabled
    55:55:boolean isQwertyMode() -> isQwertyMode
    65:65:boolean isShortcutsVisible() -> isShortcutsVisible
    79:80:void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback) -> setCallback
    151:152:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    107:107:android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    112:112:android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    117:117:android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    122:122:android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    127:127:android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    95:96:android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    101:102:android.view.SubMenu setIcon(int) -> setIcon
    50:51:void setQwertyMode(boolean) -> setQwertyMode
    60:61:void setShortcutsVisible(boolean) -> setShortcutsVisible
androidx.appcompat.view.menu.SubMenuWrapperICS -> androidx.appcompat.view.menu.SubMenuWrapperICS:
    38:39:void <init>(android.content.Context,androidx.core.internal.view.SupportSubMenu) -> <init>
    78:79:void clearHeader() -> clearHeader
    95:95:android.view.MenuItem getItem() -> getItem
    34:34:java.lang.Object getWrappedObject() -> getWrappedObject
    43:43:androidx.core.internal.view.SupportSubMenu getWrappedObject() -> getWrappedObject
    60:61:android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    66:67:android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    48:49:android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    54:55:android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    72:73:android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    83:84:android.view.SubMenu setIcon(int) -> setIcon
    89:90:android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
androidx.appcompat.widget.AbsActionBarView -> androidx.appcompat.widget.AbsActionBarView:
    52:53:void <init>(android.content.Context) -> <init>
    56:57:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    37:69:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    34:34:void access$001(androidx.appcompat.widget.AbsActionBarView,int) -> access$001
    34:34:void access$101(androidx.appcompat.widget.AbsActionBarView,int) -> access$101
    179:181:void animateToVisibility(int) -> animateToVisibility
    235:235:boolean canShowOverflowMenu() -> canShowOverflowMenu
    239:242:void dismissPopupMenus() -> dismissPopupMenus
    151:154:int getAnimatedVisibility() -> getAnimatedVisibility
    144:144:int getContentHeight() -> getContentHeight
    210:213:boolean hideOverflowMenu() -> hideOverflowMenu
    224:227:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    217:220:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    231:231:boolean isOverflowReserved() -> isOverflowReserved
    246:252:int measureChildView(android.view.View,int,int,int) -> measureChildView
    256:256:int next(int,int,boolean) -> next
    73:85:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    118:135:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    94:110:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    260:270:int positionChild(android.view.View,int,int,int,boolean) -> positionChild
    201:207:void postShowOverflowMenu() -> postShowOverflowMenu
    139:141:void setContentHeight(int) -> setContentHeight
    185:191:void setVisibility(int) -> setVisibility
    158:174:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
    194:197:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.AbsActionBarView$1 -> androidx.appcompat.widget.AbsActionBarView$1:
    201:201:void <init>(androidx.appcompat.widget.AbsActionBarView) -> <init>
    204:205:void run() -> run
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener -> androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener:
    273:274:void <init>(androidx.appcompat.widget.AbsActionBarView) -> <init>
    300:301:void onAnimationCancel(android.view.View) -> onAnimationCancel
    292:296:void onAnimationEnd(android.view.View) -> onAnimationEnd
    286:288:void onAnimationStart(android.view.View) -> onAnimationStart
    279:281:androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(androidx.core.view.ViewPropertyAnimatorCompat,int) -> withFinalVisibility
androidx.appcompat.widget.ActionBarBackgroundDrawable -> androidx.appcompat.widget.ActionBarBackgroundDrawable:
    32:34:void <init>(androidx.appcompat.widget.ActionBarContainer) -> <init>
    38:50:void draw(android.graphics.Canvas) -> draw
    62:62:int getOpacity() -> getOpacity
    68:78:void getOutline(android.graphics.Outline) -> getOutline
    54:54:void setAlpha(int) -> setAlpha
    58:58:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
androidx.appcompat.widget.ActionBarContainer -> androidx.appcompat.widget.ActionBarContainer:
    54:55:void <init>(android.content.Context) -> <init>
    58:79:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    158:168:void drawableStateChanged() -> drawableStateChanged
    257:258:int getMeasuredHeightWithMargins(android.view.View) -> getMeasuredHeightWithMargins
    233:233:android.view.View getTabContainer() -> getTabContainer
    253:253:boolean isCollapsed(android.view.View) -> isCollapsed
    172:182:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    83:86:void onFinishInflate() -> onFinishInflate
    212:215:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    199:199:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    293:337:void onLayout(boolean,int,int,int,int) -> onLayout
    263:289:void onMeasure(int,int) -> onMeasure
    204:207:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    89:104:void setPrimaryBackground(android.graphics.drawable.Drawable) -> setPrimaryBackground
    125:139:void setSplitBackground(android.graphics.drawable.Drawable) -> setSplitBackground
    107:122:void setStackedBackground(android.graphics.drawable.Drawable) -> setStackedBackground
    219:230:void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView) -> setTabContainer
    192:195:void setTransitioning(boolean) -> setTransitioning
    143:148:void setVisibility(int) -> setVisibility
    240:240:android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback) -> startActionModeForChild
    246:249:android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback,int) -> startActionModeForChild
    152:153:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.appcompat.widget.ActionBarContextView -> androidx.appcompat.widget.ActionBarContextView:
    58:59:void <init>(android.content.Context) -> <init>
    62:63:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    66:84:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    40:40:void animateToVisibility(int) -> animateToVisibility
    40:40:boolean canShowOverflowMenu() -> canShowOverflowMenu
    193:197:void closeMode() -> closeMode
    40:40:void dismissPopupMenus() -> dismissPopupMenus
    233:233:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    238:238:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    40:40:int getAnimatedVisibility() -> getAnimatedVisibility
    40:40:int getContentHeight() -> getContentHeight
    130:130:java.lang.CharSequence getSubtitle() -> getSubtitle
    126:126:java.lang.CharSequence getTitle() -> getTitle
    215:218:boolean hideOverflowMenu() -> hideOverflowMenu
    161:190:void initForMode(androidx.appcompat.view.ActionMode) -> initForMode
    134:158:void initTitle() -> initTitle
    40:40:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    223:226:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    40:40:boolean isOverflowReserved() -> isOverflowReserved
    378:378:boolean isTitleOptional() -> isTitleOptional
    200:203:void killMode() -> killMode
    88:93:void onDetachedFromWindow() -> onDetachedFromWindow
    40:40:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    359:368:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    323:350:void onLayout(boolean,int,int,int,int) -> onLayout
    243:319:void onMeasure(int,int) -> onMeasure
    40:40:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    40:40:void postShowOverflowMenu() -> postShowOverflowMenu
    97:98:void setContentHeight(int) -> setContentHeight
    101:113:void setCustomView(android.view.View) -> setCustomView
    121:123:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    116:118:void setTitle(java.lang.CharSequence) -> setTitle
    371:375:void setTitleOptional(boolean) -> setTitleOptional
    40:40:void setVisibility(int) -> setVisibility
    40:40:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
    354:354:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    207:210:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.ActionBarContextView$1 -> androidx.appcompat.widget.ActionBarContextView$1:
    170:170:void <init>(androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode) -> <init>
    173:174:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ActionBarOverlayLayout -> androidx.appcompat.widget.ActionBarOverlayLayout:
    129:129:void <clinit>() -> <clinit>
    137:138:void <init>(android.content.Context) -> <init>
    61:145:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    603:605:void addActionBarHideOffset() -> addActionBarHideOffset
    264:282:boolean applyInsets(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean) -> applyInsets
    684:685:boolean canShowOverflowMenu() -> canShowOverflowMenu
    335:335:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    738:740:void dismissPopups() -> dismissPopups
    451:460:void draw(android.graphics.Canvas) -> draw
    287:315:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    54:54:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    320:320:androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    54:54:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    325:325:androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    330:330:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    569:569:int getActionBarHideOffset() -> getActionBarHideOffset
    544:550:androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View) -> getDecorToolbar
    532:532:int getNestedScrollAxes() -> getNestedScrollAxes
    627:628:java.lang.CharSequence getTitle() -> getTitle
    580:585:void haltActionBarHideOffsetAnimations() -> haltActionBarHideOffsetAnimations
    654:655:boolean hasIcon() -> hasIcon
    660:661:boolean hasLogo() -> hasLogo
    708:709:boolean hideOverflowMenu() -> hideOverflowMenu
    148:158:void init(android.content.Context) -> init
    633:645:void initFeature(int) -> initFeature
    565:565:boolean isHideOnContentScrollEnabled() -> isHideOnContentScrollEnabled
    193:193:boolean isInOverlayMode() -> isInOverlayMode
    696:697:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    690:691:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    223:226:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    162:164:void onDetachedFromWindow() -> onDetachedFromWindow
    425:447:void onLayout(boolean,int,int,int,int) -> onLayout
    340:421:void onMeasure(int,int) -> onMeasure
    508:517:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    527:527:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    523:523:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    488:490:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    477:483:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    469:472:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    494:504:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    230:251:void onWindowSystemUiVisibilityChanged(int) -> onWindowSystemUiVisibilityChanged
    255:260:void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    593:595:void postAddActionBarHideOffset() -> postAddActionBarHideOffset
    588:590:void postRemoveActionBarHideOffset() -> postRemoveActionBarHideOffset
    536:541:void pullChildren() -> pullChildren
    598:600:void removeActionBarHideOffset() -> removeActionBarHideOffset
    732:734:void restoreToolbarHierarchyState(android.util.SparseArray) -> restoreToolbarHierarchyState
    726:728:void saveToolbarHierarchyState(android.util.SparseArray) -> saveToolbarHierarchyState
    573:577:void setActionBarHideOffset(int) -> setActionBarHideOffset
    167:178:void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback) -> setActionBarVisibilityCallback
    197:198:void setHasNonEmbeddedTabs(boolean) -> setHasNonEmbeddedTabs
    555:562:void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    666:668:void setIcon(int) -> setIcon
    672:674:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    678:680:void setLogo(int) -> setLogo
    720:722:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback) -> setMenu
    714:716:void setMenuPrepared() -> setMenuPrepared
    181:190:void setOverlayMode(boolean) -> setOverlayMode
    219:219:void setShowingForActionMode(boolean) -> setShowingForActionMode
    650:650:void setUiOptions(int) -> setUiOptions
    615:617:void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    621:623:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    464:464:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    608:610:boolean shouldHideActionBarOnFling(float,float) -> shouldHideActionBarOnFling
    702:703:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.ActionBarOverlayLayout$1 -> androidx.appcompat.widget.ActionBarOverlayLayout$1:
    96:96:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    105:107:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    99:101:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.appcompat.widget.ActionBarOverlayLayout$2 -> androidx.appcompat.widget.ActionBarOverlayLayout$2:
    110:110:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    113:116:void run() -> run
androidx.appcompat.widget.ActionBarOverlayLayout$3 -> androidx.appcompat.widget.ActionBarOverlayLayout$3:
    119:119:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    122:126:void run() -> run
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams -> androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams:
    744:745:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    748:749:void <init>(int,int) -> <init>
    752:753:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    756:757:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
androidx.appcompat.widget.ActionMenuPresenter -> androidx.appcompat.widget.ActionMenuPresenter:
    74:89:void <init>(android.content.Context) -> <init>
    53:53:androidx.appcompat.view.menu.MenuBuilder access$000(androidx.appcompat.widget.ActionMenuPresenter) -> access$000
    53:53:androidx.appcompat.view.menu.MenuBuilder access$100(androidx.appcompat.widget.ActionMenuPresenter) -> access$100
    53:53:androidx.appcompat.view.menu.MenuView access$200(androidx.appcompat.widget.ActionMenuPresenter) -> access$200
    53:53:androidx.appcompat.view.menu.MenuBuilder access$300(androidx.appcompat.widget.ActionMenuPresenter) -> access$300
    53:53:androidx.appcompat.view.menu.MenuBuilder access$400(androidx.appcompat.widget.ActionMenuPresenter) -> access$400
    53:53:androidx.appcompat.view.menu.MenuView access$500(androidx.appcompat.widget.ActionMenuPresenter) -> access$500
    211:221:void bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView) -> bindItemView
    381:383:boolean dismissPopupMenus() -> dismissPopupMenus
    279:280:boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    321:332:android.view.View findViewForItem(android.view.MenuItem) -> findViewForItem
    421:557:boolean flagActionItems() -> flagActionItems
    195:206:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    185:190:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    175:180:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    362:373:boolean hideOverflowMenu() -> hideOverflowMenu
    392:396:boolean hideSubMenus() -> hideSubMenus
    93:134:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    407:407:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    403:403:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    414:414:boolean isOverflowReserved() -> isOverflowReserved
    562:564:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    137:143:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    575:587:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    568:570:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    285:317:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    591:597:void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
    162:163:void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    157:159:void setItemLimit(int) -> setItemLimit
    600:602:void setMenuView(androidx.appcompat.widget.ActionMenuView) -> setMenuView
    166:172:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    152:154:void setReserveOverflow(boolean) -> setReserveOverflow
    146:149:void setWidthLimit(int,boolean) -> setWidthLimit
    225:225:boolean shouldIncludeItem(int,androidx.appcompat.view.menu.MenuItemImpl) -> shouldIncludeItem
    340:353:boolean showOverflowMenu() -> showOverflowMenu
    230:275:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu -> androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu:
    747:757:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.SubMenuBuilder,android.view.View) -> <init>
    761:765:void onDismiss() -> onDismiss
androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback -> androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback:
    814:815:void <init>(androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    819:819:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable -> androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable:
    796:798:void <init>(androidx.appcompat.widget.ActionMenuPresenter,androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup) -> <init>
    802:810:void run() -> run
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton -> androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton:
    640:681:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context) -> <init>
    701:701:boolean needsDividerAfter() -> needsDividerAfter
    696:696:boolean needsDividerBefore() -> needsDividerBefore
    685:691:boolean performClick() -> performClick
    706:723:boolean setFrame(int,int,int,int) -> setFrame
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1 -> androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1:
    652:652:void <init>(androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton,android.view.View,androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    655:659:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    664:665:boolean onForwardingStarted() -> onForwardingStarted
    673:678:boolean onForwardingStopped() -> onForwardingStopped
androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup -> androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup:
    729:733:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean) -> <init>
    737:743:void onDismiss() -> onDismiss
androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback -> androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback:
    769:770:void <init>(androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    783:790:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    774:778:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.widget.ActionMenuPresenter$SavedState -> androidx.appcompat.widget.ActionMenuPresenter$SavedState:
    624:624:void <clinit>() -> <clinit>
    607:608:void <init>() -> <init>
    610:612:void <init>(android.os.Parcel) -> <init>
    616:616:int describeContents() -> describeContents
    621:622:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.ActionMenuPresenter$SavedState$1 -> androidx.appcompat.widget.ActionMenuPresenter$SavedState$1:
    625:625:void <init>() -> <init>
    625:625:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    628:628:androidx.appcompat.widget.ActionMenuPresenter$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    625:625:java.lang.Object[] newArray(int) -> newArray
    633:633:androidx.appcompat.widget.ActionMenuPresenter$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.ActionMenuView -> androidx.appcompat.widget.ActionMenuView:
    76:77:void <init>(android.content.Context) -> <init>
    80:87:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    610:610:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    723:726:void dismissPopupMenus() -> dismissPopupMenus
    750:750:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    48:48:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    48:48:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    583:586:androidx.appcompat.widget.ActionMenuView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    48:48:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    48:48:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    48:48:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    48:48:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    591:591:androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    596:605:androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    616:618:androidx.appcompat.widget.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams() -> generateOverflowButtonLayoutParams
    651:663:android.view.Menu getMenu() -> getMenu
    565:566:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    113:113:int getPopupTheme() -> getPopupTheme
    632:632:int getWindowAnimations() -> getWindowAnimations
    733:745:boolean hasSupportDividerBeforeChildAt(int) -> hasSupportDividerBeforeChildAt
    700:700:boolean hideOverflowMenu() -> hideOverflowMenu
    639:640:void initialize(androidx.appcompat.view.menu.MenuBuilder) -> initialize
    625:625:boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl) -> invokeItem
    716:716:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    710:710:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    572:572:boolean isOverflowReserved() -> isOverflowReserved
    404:434:int measureChildForCells(android.view.View,int,int,int,int) -> measureChildForCells
    128:138:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    544:546:void onDetachedFromWindow() -> onDetachedFromWindow
    439:540:void onLayout(boolean,int,int,int,int) -> onLayout
    147:174:void onMeasure(int,int) -> onMeasure
    178:387:void onMeasureExactFormat(int,int) -> onMeasureExactFormat
    682:682:androidx.appcompat.view.menu.MenuBuilder peekMenu() -> peekMenu
    756:757:void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    672:674:void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    141:142:void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener) -> setOnMenuItemClickListener
    554:556:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    578:579:void setOverflowReserved(boolean) -> setOverflowReserved
    97:105:void setPopupTheme(int) -> setPopupTheme
    122:124:void setPresenter(androidx.appcompat.widget.ActionMenuPresenter) -> setPresenter
    691:691:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback -> androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback:
    793:794:void <init>() -> <init>
    798:798:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    802:802:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.widget.ActionMenuView$LayoutParams -> androidx.appcompat.widget.ActionMenuView$LayoutParams:
    833:834:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    837:838:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    841:843:void <init>(androidx.appcompat.widget.ActionMenuView$LayoutParams) -> <init>
    846:848:void <init>(int,int) -> <init>
    851:853:void <init>(int,int,boolean) -> <init>
androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback -> androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback:
    775:776:void <init>(androidx.appcompat.widget.ActionMenuView) -> <init>
    780:781:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    786:789:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
androidx.appcompat.widget.ActivityChooserModel -> androidx.appcompat.widget.ActivityChooserModel:
    157:223:void <clinit>() -> <clinit>
    229:354:void <init>(android.content.Context,java.lang.String) -> <init>
    727:735:boolean addHistoricalRecord(androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord) -> addHistoricalRecord
    457:488:android.content.Intent chooseActivity(int) -> chooseActivity
    654:661:void ensureConsistentState() -> ensureConsistentState
    330:337:androidx.appcompat.widget.ActivityChooserModel get(android.content.Context,java.lang.String) -> get
    410:413:android.content.pm.ResolveInfo getActivity(int) -> getActivity
    395:398:int getActivityCount() -> getActivityCount
    424:435:int getActivityIndex(android.content.pm.ResolveInfo) -> getActivityIndex
    512:518:android.content.pm.ResolveInfo getDefaultActivity() -> getDefaultActivity
    630:632:int getHistoryMaxSize() -> getHistoryMaxSize
    641:644:int getHistorySize() -> getHistorySize
    382:384:android.content.Intent getIntent() -> getIntent
    687:699:boolean loadActivitiesIfNeeded() -> loadActivitiesIfNeeded
    566:577:void persistHistoricalDataIfNeeded() -> persistHistoricalDataIfNeeded
    742:753:void pruneExcessiveHistoricalRecordsIfNeeded() -> pruneExcessiveHistoricalRecordsIfNeeded
    710:717:boolean readHistoricalDataIfNeeded() -> readHistoricalDataIfNeeded
    964:1032:void readHistoricalDataImpl() -> readHistoricalDataImpl
    587:596:void setActivitySorter(androidx.appcompat.widget.ActivityChooserModel$ActivitySorter) -> setActivitySorter
    532:554:void setDefaultActivity(int) -> setDefaultActivity
    612:622:void setHistoryMaxSize(int) -> setHistoryMaxSize
    366:374:void setIntent(android.content.Intent) -> setIntent
    497:500:void setOnChooseActivityListener(androidx.appcompat.widget.ActivityChooserModel$OnChooseActivityListener) -> setOnChooseActivityListener
    671:677:boolean sortActivitiesIfNeeded() -> sortActivitiesIfNeeded
androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo -> androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo:
    869:871:void <init>(android.content.pm.ResolveInfo) -> <init>
    852:852:int compareTo(java.lang.Object) -> compareTo
    898:898:int compareTo(androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo) -> compareTo
    880:893:boolean equals(java.lang.Object) -> equals
    875:875:int hashCode() -> hashCode
    903:908:java.lang.String toString() -> toString
androidx.appcompat.widget.ActivityChooserModel$DefaultSorter -> androidx.appcompat.widget.ActivityChooserModel$DefaultSorter:
    918:922:void <init>() -> <init>
    927:960:void sort(android.content.Intent,java.util.List,java.util.List) -> sort
androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord -> androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord:
    783:784:void <init>(java.lang.String,long,float) -> <init>
    793:797:void <init>(android.content.ComponentName,long,float) -> <init>
    811:834:boolean equals(java.lang.Object) -> equals
    801:806:int hashCode() -> hashCode
    839:845:java.lang.String toString() -> toString
androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask -> androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask:
    1039:1040:void <init>(androidx.appcompat.widget.ActivityChooserModel) -> <init>
    1037:1037:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    1045:1100:java.lang.Void doInBackground(java.lang.Object[]) -> doInBackground
androidx.appcompat.widget.ActivityChooserView -> androidx.appcompat.widget.ActivityChooserView:
    200:201:void <init>(android.content.Context) -> <init>
    210:211:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    134:292:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    410:417:boolean dismissPopup() -> dismissPopup
    479:479:androidx.appcompat.widget.ActivityChooserModel getDataModel() -> getDataModel
    523:531:androidx.appcompat.widget.ListPopupWindow getListPopupWindow() -> getListPopupWindow
    426:426:boolean isShowingPopup() -> isShowingPopup
    431:437:void onAttachedToWindow() -> onAttachedToWindow
    441:454:void onDetachedFromWindow() -> onDetachedFromWindow
    472:476:void onLayout(boolean,int,int,int,int) -> onLayout
    458:468:void onMeasure(int,int) -> onMeasure
    299:304:void setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel) -> setActivityChooserModel
    514:515:void setDefaultActionButtonContentDescription(int) -> setDefaultActionButtonContentDescription
    332:334:void setExpandActivityOverflowButtonContentDescription(int) -> setExpandActivityOverflowButtonContentDescription
    318:319:void setExpandActivityOverflowButtonDrawable(android.graphics.drawable.Drawable) -> setExpandActivityOverflowButtonDrawable
    500:501:void setInitialActivityCount(int) -> setInitialActivityCount
    488:489:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    342:343:void setProvider(androidx.core.view.ActionProvider) -> setProvider
    351:356:boolean showPopup() -> showPopup
    365:402:void showPopupUnchecked(int) -> showPopupUnchecked
    539:567:void updateAppearance() -> updateAppearance
androidx.appcompat.widget.ActivityChooserView$1 -> androidx.appcompat.widget.ActivityChooserView$1:
    134:134:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    138:140:void onChanged() -> onChanged
    143:145:void onInvalidated() -> onInvalidated
androidx.appcompat.widget.ActivityChooserView$2 -> androidx.appcompat.widget.ActivityChooserView$2:
    148:148:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    151:161:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.widget.ActivityChooserView$3 -> androidx.appcompat.widget.ActivityChooserView$3:
    250:250:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    253:255:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
androidx.appcompat.widget.ActivityChooserView$4 -> androidx.appcompat.widget.ActivityChooserView$4:
    257:257:void <init>(androidx.appcompat.widget.ActivityChooserView,android.view.View) -> <init>
    260:260:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    265:266:boolean onForwardingStarted() -> onForwardingStarted
    271:272:boolean onForwardingStopped() -> onForwardingStopped
androidx.appcompat.widget.ActivityChooserView$5 -> androidx.appcompat.widget.ActivityChooserView$5:
    281:281:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    284:286:void onChanged() -> onChanged
androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter -> androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter:
    677:686:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    831:831:int getActivityCount() -> getActivityCount
    716:725:int getCount() -> getCount
    839:839:androidx.appcompat.widget.ActivityChooserModel getDataModel() -> getDataModel
    820:820:android.content.pm.ResolveInfo getDefaultActivity() -> getDefaultActivity
    835:835:int getHistorySize() -> getHistorySize
    730:740:java.lang.Object getItem(int) -> getItem
    746:746:long getItemId(int) -> getItemId
    702:705:int getItemViewType(int) -> getItemViewType
    853:853:boolean getShowDefaultActivity() -> getShowDefaultActivity
    751:784:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    711:711:int getViewTypeCount() -> getViewTypeCount
    791:809:int measureContentWidth() -> measureContentWidth
    689:698:void setDataModel(androidx.appcompat.widget.ActivityChooserModel) -> setDataModel
    813:817:void setMaxActivityCount(int) -> setMaxActivityCount
    844:850:void setShowDefaultActivity(boolean,boolean) -> setShowDefaultActivity
    824:828:void setShowFooterView(boolean) -> setShowFooterView
androidx.appcompat.widget.ActivityChooserView$Callbacks -> androidx.appcompat.widget.ActivityChooserView$Callbacks:
    575:576:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    654:657:void notifyOnDismissListener() -> notifyOnDismissListener
    613:628:void onClick(android.view.View) -> onClick
    647:651:void onDismiss() -> onDismiss
    581:608:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    633:641:boolean onLongClick(android.view.View) -> onLongClick
androidx.appcompat.widget.ActivityChooserView$InnerLayout -> androidx.appcompat.widget.ActivityChooserView$InnerLayout:
    864:864:void <clinit>() -> <clinit>
    869:873:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.appcompat.widget.AlertDialogLayout -> androidx.appcompat.widget.AlertDialogLayout:
    55:56:void <init>(android.content.Context) -> <init>
    59:60:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    217:236:void forceUniformWidth(int,int) -> forceUniformWidth
    265:345:void onLayout(boolean,int,int,int,int) -> onLayout
    64:68:void onMeasure(int,int) -> onMeasure
    248:260:int resolveMinimumHeight(android.view.View) -> resolveMinimumHeight
    348:349:void setChildFrame(android.view.View,int,int,int,int) -> setChildFrame
    71:206:boolean tryOnMeasure(int,int) -> tryOnMeasure
androidx.appcompat.widget.AppCompatAutoCompleteTextView -> androidx.appcompat.widget.AppCompatAutoCompleteTextView:
    58:58:void <clinit>() -> <clinit>
    66:67:void <init>(android.content.Context) -> <init>
    70:71:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    74:89:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    170:177:void drawableStateChanged() -> drawableStateChanged
    136:137:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    164:165:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    189:189:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    106:110:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    98:102:void setBackgroundResource(int) -> setBackgroundResource
    199:201:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    93:94:void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    121:124:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    149:152:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    181:185:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatBackgroundHelper -> androidx.appcompat.widget.AppCompatBackgroundHelper:
    35:44:void <init>(android.view.View) -> <init>
    173:195:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable) -> applyFrameworkTintUsingColorFilter
    118:135:void applySupportBackgroundTint() -> applySupportBackgroundTint
    100:100:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    114:114:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    47:72:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    84:88:void onSetBackgroundDrawable(android.graphics.drawable.Drawable) -> onSetBackgroundDrawable
    75:81:void onSetBackgroundResource(int) -> onSetBackgroundResource
    138:148:void setInternalBackgroundTint(android.content.res.ColorStateList) -> setInternalBackgroundTint
    91:97:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    104:111:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    151:163:boolean shouldApplyFrameworkTintUsingColorFilter() -> shouldApplyFrameworkTintUsingColorFilter
androidx.appcompat.widget.AppCompatButton -> androidx.appcompat.widget.AppCompatButton:
    63:64:void <init>(android.content.Context) -> <init>
    67:68:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    71:79:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    155:162:void drawableStateChanged() -> drawableStateChanged
    321:328:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    305:312:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    289:296:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    337:344:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    271:280:int getAutoSizeTextType() -> getAutoSizeTextType
    121:122:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    149:150:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    174:176:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    180:182:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    186:190:void onLayout(boolean,int,int,int,int) -> onLayout
    205:209:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    237:246:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    255:262:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    218:225:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    91:95:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    83:87:void setBackgroundResource(int) -> setBackgroundResource
    368:370:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    357:360:void setSupportAllCaps(boolean) -> setSupportAllCaps
    106:109:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    134:137:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    166:170:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    194:201:void setTextSize(int,float) -> setTextSize
androidx.appcompat.widget.AppCompatCheckBox -> androidx.appcompat.widget.AppCompatCheckBox:
    55:56:void <init>(android.content.Context) -> <init>
    59:60:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    63:66:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    83:85:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    109:110:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    134:135:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
    70:74:void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    78:79:void setButtonDrawable(int) -> setButtonDrawable
    96:99:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    121:124:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
androidx.appcompat.widget.AppCompatCheckedTextView -> androidx.appcompat.widget.AppCompatCheckedTextView:
    40:40:void <clinit>() -> <clinit>
    47:48:void <init>(android.content.Context) -> <init>
    51:52:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    55:65:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    82:86:void drawableStateChanged() -> drawableStateChanged
    90:90:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    69:70:void setCheckMarkDrawable(int) -> setCheckMarkDrawable
    100:102:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    74:78:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatCompoundButtonHelper -> androidx.appcompat.widget.AppCompatCompoundButtonHelper:
    37:53:void <init>(android.widget.CompoundButton) -> <init>
    115:133:void applyButtonTint() -> applyButtonTint
    136:144:int getCompoundPaddingLeft(int) -> getCompoundPaddingLeft
    90:90:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    101:101:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
    56:80:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    105:112:void onSetButtonDrawable() -> onSetButtonDrawable
    83:87:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    94:98:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
androidx.appcompat.widget.AppCompatDrawableManager -> androidx.appcompat.widget.AppCompatDrawableManager:
    78:174:void <clinit>() -> <clinit>
    69:800:void <init>() -> <init>
    489:493:void addDelegate(java.lang.String,androidx.appcompat.widget.AppCompatDrawableManager$InflateDelegate) -> addDelegate
    414:425:boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable) -> addDrawableToCache
    568:577:void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList) -> addTintListToCache
    502:507:boolean arrayContains(int[],int) -> arrayContains
    746:759:void checkVectorDrawableSetup(android.content.Context) -> checkVectorDrawableSetup
    586:586:android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context) -> createBorderlessButtonColorStateList
    596:621:android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int) -> createButtonColorStateList
    226:226:long createCacheKey(android.util.TypedValue) -> createCacheKey
    590:591:android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context) -> createColoredButtonColorStateList
    580:581:android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context) -> createDefaultButtonColorStateList
    231:258:android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int) -> createDrawableIfNeeded
    625:667:android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context) -> createSwitchThumbColorStateList
    717:721:android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[]) -> createTintFilter
    88:93:androidx.appcompat.widget.AppCompatDrawableManager get() -> get
    393:410:android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long) -> getCachedDrawable
    191:191:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    195:214:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean) -> getDrawable
    726:735:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode) -> getPorterDuffColorFilter
    521:555:android.content.res.ColorStateList getTintList(android.content.Context,int) -> getTintList
    559:563:android.content.res.ColorStateList getTintListFromCache(android.content.Context,int) -> getTintListFromCache
    511:517:android.graphics.PorterDuff$Mode getTintMode(int) -> getTintMode
    100:105:void installDefaultInflateDelegates(androidx.appcompat.widget.AppCompatDrawableManager) -> installDefaultInflateDelegates
    762:763:boolean isVectorDrawable(android.graphics.drawable.Drawable) -> isVectorDrawable
    308:389:android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int) -> loadDrawableFromDelegates
    217:223:void onConfigurationChanged(android.content.Context) -> onConfigurationChanged
    429:437:android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,androidx.appcompat.widget.VectorEnabledTintResources,int) -> onDrawableLoadedFromResources
    496:499:void removeDelegate(java.lang.String,androidx.appcompat.widget.AppCompatDrawableManager$InflateDelegate) -> removeDelegate
    739:743:void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode) -> setPorterDuffColorFilter
    263:304:android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable) -> tintDrawable
    693:713:void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]) -> tintDrawable
    442:485:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable) -> tintDrawableUsingColorFilter
androidx.appcompat.widget.AppCompatDrawableManager$AsldcInflateDelegate -> androidx.appcompat.widget.AppCompatDrawableManager$AsldcInflateDelegate:
    801:801:void <init>() -> <init>
    806:810:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
androidx.appcompat.widget.AppCompatDrawableManager$AvdcInflateDelegate -> androidx.appcompat.widget.AppCompatDrawableManager$AvdcInflateDelegate:
    784:785:void <init>() -> <init>
    791:795:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
androidx.appcompat.widget.AppCompatDrawableManager$ColorFilterLruCache -> androidx.appcompat.widget.AppCompatDrawableManager$ColorFilterLruCache:
    673:674:void <init>(int) -> <init>
    685:688:int generateCacheKey(int,android.graphics.PorterDuff$Mode) -> generateCacheKey
    677:677:android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode) -> get
    681:681:android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter) -> put
androidx.appcompat.widget.AppCompatDrawableManager$VdcInflateDelegate -> androidx.appcompat.widget.AppCompatDrawableManager$VdcInflateDelegate:
    767:768:void <init>() -> <init>
    774:778:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
androidx.appcompat.widget.AppCompatEditText -> androidx.appcompat.widget.AppCompatEditText:
    61:62:void <init>(android.content.Context) -> <init>
    65:66:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    69:77:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    167:174:void drawableStateChanged() -> drawableStateChanged
    133:134:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    161:162:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    55:55:java.lang.CharSequence getText() -> getText
    85:90:android.text.Editable getText() -> getText
    186:186:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    103:107:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    95:99:void setBackgroundResource(int) -> setBackgroundResource
    196:198:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    118:121:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    146:149:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    178:182:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatHintHelper -> androidx.appcompat.widget.AppCompatHintHelper:
    43:44:void <init>() -> <init>
    28:40:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,android.view.View) -> onCreateInputConnection
androidx.appcompat.widget.AppCompatImageButton -> androidx.appcompat.widget.AppCompatImageButton:
    65:66:void <init>(android.content.Context) -> <init>
    69:70:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    73:80:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    241:248:void drawableStateChanged() -> drawableStateChanged
    152:153:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    180:181:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    207:208:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    235:236:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    252:252:boolean hasOverlappingRendering() -> hasOverlappingRendering
    122:126:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    114:118:void setBackgroundResource(int) -> setBackgroundResource
    98:102:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    90:94:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    85:86:void setImageResource(int) -> setImageResource
    106:110:void setImageURI(android.net.Uri) -> setImageURI
    137:140:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    165:168:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    192:195:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    220:223:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
androidx.appcompat.widget.AppCompatImageHelper -> androidx.appcompat.widget.AppCompatImageHelper:
    45:47:void <init>(android.widget.ImageView) -> <init>
    196:218:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable) -> applyFrameworkTintUsingColorFilter
    137:158:void applySupportImageTint() -> applySupportImageTint
    119:119:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    133:133:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    99:106:boolean hasOverlappingRendering() -> hasOverlappingRendering
    50:82:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    85:96:void setImageResource(int) -> setImageResource
    161:171:void setInternalImageTint(android.content.res.ColorStateList) -> setInternalImageTint
    110:116:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    123:130:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
    174:186:boolean shouldApplyFrameworkTintUsingColorFilter() -> shouldApplyFrameworkTintUsingColorFilter
androidx.appcompat.widget.AppCompatImageView -> androidx.appcompat.widget.AppCompatImageView:
    64:65:void <init>(android.content.Context) -> <init>
    68:69:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    72:79:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    252:259:void drawableStateChanged() -> drawableStateChanged
    162:163:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    190:191:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    218:219:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    246:247:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    263:263:boolean hasOverlappingRendering() -> hasOverlappingRendering
    132:136:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    124:128:void setBackgroundResource(int) -> setBackgroundResource
    108:112:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    100:104:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    92:96:void setImageResource(int) -> setImageResource
    116:120:void setImageURI(android.net.Uri) -> setImageURI
    147:150:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    175:178:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    203:206:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    231:234:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView -> androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView:
    55:55:void <clinit>() -> <clinit>
    63:64:void <init>(android.content.Context) -> <init>
    67:68:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    71:86:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    167:174:void drawableStateChanged() -> drawableStateChanged
    133:134:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    161:162:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    186:186:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    103:107:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    95:99:void setBackgroundResource(int) -> setBackgroundResource
    90:91:void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    118:121:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    146:149:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    178:182:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatPopupWindow -> androidx.appcompat.widget.AppCompatPopupWindow:
    34:34:void <clinit>() -> <clinit>
    40:42:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    46:48:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    51:60:void init(android.content.Context,android.util.AttributeSet,int,int) -> init
    90:95:void setSupportOverlapAnchor(boolean) -> setSupportOverlapAnchor
    64:69:void showAsDropDown(android.view.View,int,int) -> showAsDropDown
    73:78:void showAsDropDown(android.view.View,int,int,int) -> showAsDropDown
    82:87:void update(android.view.View,int,int,int,int) -> update
androidx.appcompat.widget.AppCompatProgressBarHelper -> androidx.appcompat.widget.AppCompatProgressBarHelper:
    38:38:void <clinit>() -> <clinit>
    47:49:void <init>(android.widget.ProgressBar) -> <init>
    140:141:android.graphics.drawable.shapes.Shape getDrawableShape() -> getDrawableShape
    145:145:android.graphics.Bitmap getSampleTime() -> getSampleTime
    52:66:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    73:113:android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean) -> tileify
    122:136:android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable) -> tileifyIndeterminate
androidx.appcompat.widget.AppCompatRadioButton -> androidx.appcompat.widget.AppCompatRadioButton:
    56:57:void <init>(android.content.Context) -> <init>
    60:61:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    64:69:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    86:88:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    112:113:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    137:138:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
    73:77:void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    81:82:void setButtonDrawable(int) -> setButtonDrawable
    99:102:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    124:127:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
androidx.appcompat.widget.AppCompatRatingBar -> androidx.appcompat.widget.AppCompatRatingBar:
    40:41:void <init>(android.content.Context) -> <init>
    44:45:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    48:52:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    55:64:void onMeasure(int,int) -> onMeasure
androidx.appcompat.widget.AppCompatSeekBar -> androidx.appcompat.widget.AppCompatSeekBar:
    39:40:void <init>(android.content.Context) -> <init>
    43:44:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    47:51:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    61:63:void drawableStateChanged() -> drawableStateChanged
    67:69:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    54:57:void onDraw(android.graphics.Canvas) -> onDraw
androidx.appcompat.widget.AppCompatSeekBarHelper -> androidx.appcompat.widget.AppCompatSeekBarHelper:
    36:44:void <init>(android.widget.SeekBar) -> <init>
    125:142:void applyTickMarkTint() -> applyTickMarkTint
    162:182:void drawTickMarks(android.graphics.Canvas) -> drawTickMarks
    151:156:void drawableStateChanged() -> drawableStateChanged
    97:97:android.graphics.drawable.Drawable getTickMark() -> getTickMark
    109:109:android.content.res.ColorStateList getTickMarkTintList() -> getTickMarkTintList
    121:121:android.graphics.PorterDuff$Mode getTickMarkTintMode() -> getTickMarkTintMode
    145:148:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    48:74:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    77:93:void setTickMark(android.graphics.drawable.Drawable) -> setTickMark
    101:105:void setTickMarkTintList(android.content.res.ColorStateList) -> setTickMarkTintList
    113:117:void setTickMarkTintMode(android.graphics.PorterDuff$Mode) -> setTickMarkTintMode
androidx.appcompat.widget.AppCompatSpinner -> androidx.appcompat.widget.AppCompatSpinner:
    71:71:void <clinit>() -> <clinit>
    107:108:void <init>(android.content.Context) -> <init>
    122:123:void <init>(android.content.Context,int) -> <init>
    133:134:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    148:149:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    167:168:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    98:283:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme) -> <init>
    543:583:int compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable) -> compatMeasureContentWidth
    536:540:void drawableStateChanged() -> drawableStateChanged
    358:363:int getDropDownHorizontalOffset() -> getDropDownHorizontalOffset
    333:338:int getDropDownVerticalOffset() -> getDropDownVerticalOffset
    377:382:int getDropDownWidth() -> getDropDownWidth
    314:319:android.graphics.drawable.Drawable getPopupBackground() -> getPopupBackground
    290:295:android.content.Context getPopupContext() -> getPopupContext
    457:457:java.lang.CharSequence getPrompt() -> getPrompt
    501:502:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    530:531:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    404:409:void onDetachedFromWindow() -> onDetachedFromWindow
    421:430:void onMeasure(int,int) -> onMeasure
    413:416:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    434:443:boolean performClick() -> performClick
    69:69:void setAdapter(android.widget.Adapter) -> setAdapter
    389:400:void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    470:474:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    462:466:void setBackgroundResource(int) -> setBackgroundResource
    343:348:void setDropDownHorizontalOffset(int) -> setDropDownHorizontalOffset
    324:329:void setDropDownVerticalOffset(int) -> setDropDownVerticalOffset
    368:373:void setDropDownWidth(int) -> setDropDownWidth
    300:305:void setPopupBackgroundDrawable(android.graphics.drawable.Drawable) -> setPopupBackgroundDrawable
    309:310:void setPopupBackgroundResource(int) -> setPopupBackgroundResource
    448:453:void setPrompt(java.lang.CharSequence) -> setPrompt
    486:489:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    515:518:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
androidx.appcompat.widget.AppCompatSpinner$1 -> androidx.appcompat.widget.AppCompatSpinner$1:
    246:246:void <init>(androidx.appcompat.widget.AppCompatSpinner,android.view.View,androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> <init>
    249:249:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    254:257:boolean onForwardingStarted() -> onForwardingStarted
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter -> androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter:
    604:626:void <init>(android.widget.SpinnerAdapter,android.content.res.Resources$Theme) -> <init>
    679:683:boolean areAllItemsEnabled() -> areAllItemsEnabled
    630:630:int getCount() -> getCount
    650:651:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    635:635:java.lang.Object getItem(int) -> getItem
    640:640:long getItemId(int) -> getItemId
    703:703:int getItemViewType(int) -> getItemViewType
    645:645:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    708:708:int getViewTypeCount() -> getViewTypeCount
    656:656:boolean hasStableIds() -> hasStableIds
    713:713:boolean isEmpty() -> isEmpty
    693:697:boolean isEnabled(int) -> isEnabled
    661:664:void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    668:671:void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup:
    720:740:void <init>(androidx.appcompat.widget.AppCompatSpinner,android.content.Context,android.util.AttributeSet,int) -> <init>
    717:717:void access$001(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> access$001
    758:792:void computeContentWidth() -> computeContentWidth
    749:749:java.lang.CharSequence getHintText() -> getHintText
    849:849:boolean isVisibleToUser(android.view.View) -> isVisibleToUser
    744:746:void setAdapter(android.widget.ListAdapter) -> setAdapter
    754:755:void setPromptText(java.lang.CharSequence) -> setPromptText
    796:843:void show() -> show
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1 -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1:
    729:729:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup,androidx.appcompat.widget.AppCompatSpinner) -> <init>
    732:738:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2 -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2:
    818:818:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> <init>
    821:830:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3 -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3:
    833:833:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> <init>
    836:840:void onDismiss() -> onDismiss
androidx.appcompat.widget.AppCompatTextHelper -> androidx.appcompat.widget.AppCompatTextHelper:
    60:67:void <init>(android.widget.TextView) -> <init>
    370:373:void applyCompoundDrawableTint(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo) -> applyCompoundDrawableTint
    352:367:void applyCompoundDrawablesTints() -> applyCompoundDrawablesTints
    408:409:void autoSizeText() -> autoSizeText
    377:384:androidx.appcompat.widget.TintInfo createTintInfo(android.content.Context,androidx.appcompat.widget.AppCompatDrawableManager,int) -> createTintInfo
    453:453:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    449:449:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    445:445:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    457:457:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    441:441:int getAutoSizeTextType() -> getAutoSizeTextType
    414:414:boolean isAutoSizeEnabled() -> isAutoSizeEnabled
    71:239:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    304:311:void onAsyncTypefaceReceived(java.lang.ref.WeakReference,android.graphics.Typeface) -> onAsyncTypefaceReceived
    390:393:void onLayout(boolean,int,int,int,int) -> onLayout
    314:345:void onSetTextAppearance(android.content.Context,int) -> onSetTextAppearance
    348:349:void setAllCaps(boolean) -> setAllCaps
    430:432:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    436:437:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    422:423:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    398:403:void setTextSize(int,float) -> setTextSize
    418:419:void setTextSizeInternal(int,float) -> setTextSizeInternal
    242:300:void updateTypefaceAndStyle(android.content.Context,androidx.appcompat.widget.TintTypedArray) -> updateTypefaceAndStyle
androidx.appcompat.widget.AppCompatTextHelper$1 -> androidx.appcompat.widget.AppCompatTextHelper$1:
    252:252:void <init>(androidx.appcompat.widget.AppCompatTextHelper,java.lang.ref.WeakReference) -> <init>
    261:261:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    255:256:void onFontRetrieved(android.graphics.Typeface) -> onFontRetrieved
androidx.appcompat.widget.AppCompatTextView -> androidx.appcompat.widget.AppCompatTextView:
    79:80:void <init>(android.content.Context) -> <init>
    83:84:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    87:95:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    464:473:void consumeTextFutureAndSetBlocking() -> consumeTextFutureAndSetBlocking
    179:186:void drawableStateChanged() -> drawableStateChanged
    349:356:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    330:337:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    311:318:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    368:375:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    290:299:int getAutoSizeTextType() -> getAutoSizeTextType
    406:406:int getFirstBaselineToTopHeight() -> getFirstBaselineToTopHeight
    411:411:int getLastBaselineToBottomHeight() -> getLastBaselineToBottomHeight
    137:138:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    165:166:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    477:478:java.lang.CharSequence getText() -> getText
    437:437:androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat() -> getTextMetricsParamsCompat
    380:380:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    190:194:void onLayout(boolean,int,int,int,int) -> onLayout
    500:502:void onMeasure(int,int) -> onMeasure
    209:213:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    249:258:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    271:278:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    226:233:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    107:111:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    99:103:void setBackgroundResource(int) -> setBackgroundResource
    425:427:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    386:391:void setFirstBaselineToTopHeight(int) -> setFirstBaselineToTopHeight
    396:402:void setLastBaselineToBottomHeight(int) -> setLastBaselineToBottomHeight
    416:417:void setLineHeight(int) -> setLineHeight
    460:461:void setPrecomputedText(androidx.core.text.PrecomputedTextCompat) -> setPrecomputedText
    122:125:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    150:153:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    171:175:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    494:496:void setTextFuture(java.util.concurrent.Future) -> setTextFuture
    447:448:void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params) -> setTextMetricsParamsCompat
    198:205:void setTextSize(int,float) -> setTextSize
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper:
    61:70:void <clinit>() -> <clinit>
    78:102:void <init>(android.widget.TextView) -> <init>
    547:582:void autoSizeText() -> autoSizeText
    447:471:int[] cleanupAutoSizePresetSizes(int[]) -> cleanupAutoSizePresetSizes
    585:591:void clearAutoSizeConfiguration() -> clearAutoSizeConfiguration
    711:727:android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int) -> createStaticLayoutForMeasuring
    733:755:android.text.StaticLayout createStaticLayoutForMeasuringPre23(java.lang.CharSequence,android.text.Layout$Alignment,int) -> createStaticLayoutForMeasuringPre23
    642:662:int findLargestTextSizeWhichFits(android.graphics.RectF) -> findLargestTextSizeWhichFits
    404:404:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    388:388:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    372:372:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    417:417:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    358:358:int getAutoSizeTextType() -> getAutoSizeTextType
    786:799:java.lang.reflect.Method getTextViewMethod(java.lang.String) -> getTextViewMethod
    764:780:java.lang.Object invokeAndReturnWithDefault(java.lang.Object,java.lang.String,java.lang.Object) -> invokeAndReturnWithDefault
    811:811:boolean isAutoSizeEnabled() -> isAutoSizeEnabled
    105:180:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    265:281:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    308:338:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    198:228:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    604:635:void setRawTextSize(float) -> setRawTextSize
    596:601:void setTextSizeInternal(int,float) -> setTextSizeInternal
    510:537:boolean setupAutoSizeText() -> setupAutoSizeText
    421:431:void setupAutoSizeUniformPresetSizes(android.content.res.TypedArray) -> setupAutoSizeUniformPresetSizes
    434:442:boolean setupAutoSizeUniformPresetSizesConfiguration() -> setupAutoSizeUniformPresetSizesConfiguration
    666:703:boolean suggestedSizeFitsInSpace(int,android.graphics.RectF) -> suggestedSizeFitsInSpace
    820:820:boolean supportsAutoSizeText() -> supportsAutoSizeText
    485:507:void validateAndSetAutoSizeTextTypeUniformConfiguration(float,float,float) -> validateAndSetAutoSizeTextTypeUniformConfiguration
androidx.appcompat.widget.ButtonBarLayout -> androidx.appcompat.widget.ButtonBarLayout:
    45:54:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    150:150:int getMinimumHeight() -> getMinimumHeight
    140:145:int getNextVisibleChildIndex(int) -> getNextVisibleChildIndex
    171:171:boolean isStacked() -> isStacked
    68:137:void onMeasure(int,int) -> onMeasure
    57:64:void setAllowStacking(boolean) -> setAllowStacking
    154:168:void setStacked(boolean) -> setStacked
androidx.appcompat.widget.ContentFrameLayout -> androidx.appcompat.widget.ContentFrameLayout:
    59:60:void <init>(android.content.Context) -> <init>
    63:64:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    67:69:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    76:77:void dispatchFitSystemWindows(android.graphics.Rect) -> dispatchFitSystemWindows
    195:196:android.util.TypedValue getFixedHeightMajor() -> getFixedHeightMajor
    200:201:android.util.TypedValue getFixedHeightMinor() -> getFixedHeightMinor
    185:186:android.util.TypedValue getFixedWidthMajor() -> getFixedWidthMajor
    190:191:android.util.TypedValue getFixedWidthMinor() -> getFixedWidthMinor
    175:176:android.util.TypedValue getMinWidthMajor() -> getMinWidthMajor
    180:181:android.util.TypedValue getMinWidthMinor() -> getMinWidthMinor
    206:210:void onAttachedToWindow() -> onAttachedToWindow
    214:218:void onDetachedFromWindow() -> onDetachedFromWindow
    99:172:void onMeasure(int,int) -> onMeasure
    80:81:void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener) -> setAttachListener
    91:95:void setDecorPadding(int,int,int,int) -> setDecorPadding
androidx.appcompat.widget.DialogTitle -> androidx.appcompat.widget.DialogTitle:
    43:44:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    47:48:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    51:52:void <init>(android.content.Context) -> <init>
    56:83:void onMeasure(int,int) -> onMeasure
    91:93:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
androidx.appcompat.widget.DrawableUtils -> androidx.appcompat.widget.DrawableUtils:
    46:60:void <clinit>() -> <clinit>
    62:62:void <init>() -> <init>
    129:163:boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable) -> canSafelyMutateDrawable
    118:122:void fixDrawable(android.graphics.drawable.Drawable) -> fixDrawable
    171:181:void fixVectorDrawableTinting(android.graphics.drawable.Drawable) -> fixVectorDrawableTinting
    69:109:android.graphics.Rect getOpticalBounds(android.graphics.drawable.Drawable) -> getOpticalBounds
    187:194:android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode) -> parseTintMode
androidx.appcompat.widget.DropDownListView -> androidx.appcompat.widget.DropDownListView:
    50:128:void <init>(android.content.Context,boolean) -> <init>
    629:643:void clearPressedItem() -> clearPressedItem
    542:544:void clickPressedItem(android.view.View,int) -> clickPressedItem
    198:204:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    565:572:void drawSelectorCompat(android.graphics.Canvas) -> drawSelectorCompat
    186:194:void drawableStateChanged() -> drawableStateChanged
    164:164:boolean hasFocus() -> hasFocus
    144:144:boolean hasWindowFocus() -> hasWindowFocus
    154:154:boolean isFocused() -> isFocused
    134:134:boolean isInTouchMode() -> isInTouchMode
    229:256:int lookForSelectablePosition(int,boolean) -> lookForSelectablePosition
    290:369:int measureHeightOfChildrenCompat(int,int,int,int,int) -> measureHeightOfChildrenCompat
    471:473:void onDetachedFromWindow() -> onDetachedFromWindow
    482:534:boolean onForwardedEvent(android.view.MotionEvent,int) -> onForwardedEvent
    430:466:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    208:217:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    604:626:void positionSelectorCompat(int,android.view.View) -> positionSelectorCompat
    586:601:void positionSelectorLikeFocusCompat(int,android.view.View) -> positionSelectorLikeFocusCompat
    575:581:void positionSelectorLikeTouchCompat(int,android.view.View,float,float) -> positionSelectorLikeTouchCompat
    554:555:void setListSelectionHidden(boolean) -> setListSelectionHidden
    646:690:void setPressedItem(android.view.View,int,float,float) -> setPressedItem
    169:181:void setSelector(android.graphics.drawable.Drawable) -> setSelector
    373:376:void setSelectorEnabled(boolean) -> setSelectorEnabled
    693:693:boolean touchModeDrawsInPressedStateCompat() -> touchModeDrawsInPressedStateCompat
    558:562:void updateSelectorStateCompat() -> updateSelectorStateCompat
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable -> androidx.appcompat.widget.DropDownListView$GateKeeperDrawable:
    382:384:void <init>(android.graphics.drawable.Drawable) -> <init>
    400:403:void draw(android.graphics.Canvas) -> draw
    387:388:void setEnabled(boolean) -> setEnabled
    407:410:void setHotspot(float,float) -> setHotspot
    414:417:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    392:395:boolean setState(int[]) -> setState
    421:424:boolean setVisible(boolean,boolean) -> setVisible
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable -> androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable:
    700:701:void <init>(androidx.appcompat.widget.DropDownListView) -> <init>
    711:713:void cancel() -> cancel
    716:717:void post() -> post
    706:708:void run() -> run
androidx.appcompat.widget.FitWindowsFrameLayout -> androidx.appcompat.widget.FitWindowsFrameLayout:
    37:38:void <init>(android.content.Context) -> <init>
    41:42:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    51:54:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    46:47:void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
androidx.appcompat.widget.FitWindowsLinearLayout -> androidx.appcompat.widget.FitWindowsLinearLayout:
    37:38:void <init>(android.content.Context) -> <init>
    41:42:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    51:54:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    46:47:void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
androidx.appcompat.widget.ForwardingListener -> androidx.appcompat.widget.ForwardingListener:
    66:78:void <init>(android.view.View) -> <init>
    216:223:void clearCallbacks() -> clearCallbacks
    139:143:boolean onForwardingStarted() -> onForwardingStarted
    156:160:boolean onForwardingStopped() -> onForwardingStopped
    226:249:void onLongPress() -> onLongPress
    94:112:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    259:284:boolean onTouchForwarded(android.view.MotionEvent) -> onTouchForwarded
    170:212:boolean onTouchObserved(android.view.MotionEvent) -> onTouchObserved
    117:117:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    121:127:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    288:290:boolean pointInView(android.view.View,float,float,float) -> pointInView
    309:312:boolean toGlobalMotionEvent(android.view.View,android.view.MotionEvent) -> toGlobalMotionEvent
    298:301:boolean toLocalMotionEvent(android.view.View,android.view.MotionEvent) -> toLocalMotionEvent
androidx.appcompat.widget.ForwardingListener$DisallowIntercept -> androidx.appcompat.widget.ForwardingListener$DisallowIntercept:
    316:317:void <init>(androidx.appcompat.widget.ForwardingListener) -> <init>
    321:325:void run() -> run
androidx.appcompat.widget.ForwardingListener$TriggerLongPress -> androidx.appcompat.widget.ForwardingListener$TriggerLongPress:
    329:330:void <init>(androidx.appcompat.widget.ForwardingListener) -> <init>
    334:335:void run() -> run
androidx.appcompat.widget.LinearLayoutCompat -> androidx.appcompat.widget.LinearLayoutCompat:
    145:146:void <init>(android.content.Context) -> <init>
    149:150:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    100:185:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1751:1751:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    322:360:void drawDividersHorizontal(android.graphics.Canvas) -> drawDividersHorizontal
    295:319:void drawDividersVertical(android.graphics.Canvas) -> drawDividersVertical
    363:366:void drawHorizontalDivider(android.graphics.Canvas,int) -> drawHorizontalDivider
    369:372:void drawVerticalDivider(android.graphics.Canvas,int) -> drawVerticalDivider
    1317:1336:void forceUniformHeight(int,int) -> forceUniformHeight
    895:914:void forceUniformWidth(int,int) -> forceUniformWidth
    57:57:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1734:1739:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    57:57:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    57:57:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1721:1721:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1744:1744:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    423:471:int getBaseline() -> getBaseline
    480:480:int getBaselineAlignedChildIndex() -> getBaselineAlignedChildIndex
    1347:1347:int getChildrenSkipCount(android.view.View,int) -> getChildrenSkipCount
    221:221:android.graphics.drawable.Drawable getDividerDrawable() -> getDividerDrawable
    268:268:int getDividerPadding() -> getDividerPadding
    278:278:int getDividerWidth() -> getDividerWidth
    1700:1700:int getGravity() -> getGravity
    1389:1389:int getLocationOffset(android.view.View) -> getLocationOffset
    1401:1401:int getNextLocationOffset(android.view.View) -> getNextLocationOffset
    1667:1667:int getOrientation() -> getOrientation
    212:212:int getShowDividers() -> getShowDividers
    505:505:android.view.View getVirtualChildAt(int) -> getVirtualChildAt
    518:518:int getVirtualChildCount() -> getVirtualChildCount
    529:529:float getWeightSum() -> getWeightSum
    566:580:boolean hasDividerBeforeChildAt(int) -> hasDividerBeforeChildAt
    381:381:boolean isBaselineAligned() -> isBaselineAligned
    404:404:boolean isMeasureWithLargestChildEnabled() -> isMeasureWithLargestChildEnabled
    1521:1642:void layoutHorizontal(int,int,int,int) -> layoutHorizontal
    1426:1506:void layoutVertical(int,int,int,int) -> layoutVertical
    1377:1379:void measureChildBeforeLayout(android.view.View,int,int,int,int,int) -> measureChildBeforeLayout
    928:1311:void measureHorizontal(int,int) -> measureHorizontal
    1358:1358:int measureNullChild(int) -> measureNullChild
    595:891:void measureVertical(int,int) -> measureVertical
    283:292:void onDraw(android.graphics.Canvas) -> onDraw
    1756:1758:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1762:1764:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    1406:1411:void onLayout(boolean,int,int,int,int) -> onLayout
    550:555:void onMeasure(int,int) -> onMeasure
    392:393:void setBaselineAligned(boolean) -> setBaselineAligned
    488:493:void setBaselineAlignedChildIndex(int) -> setBaselineAlignedChildIndex
    1645:1646:void setChildFrame(android.view.View,int,int,int,int) -> setChildFrame
    232:245:void setDividerDrawable(android.graphics.drawable.Drawable) -> setDividerDrawable
    257:258:void setDividerPadding(int) -> setDividerPadding
    1679:1691:void setGravity(int) -> setGravity
    1704:1709:void setHorizontalGravity(int) -> setHorizontalGravity
    418:419:void setMeasureWithLargestChildEnabled(boolean) -> setMeasureWithLargestChildEnabled
    1654:1658:void setOrientation(int) -> setOrientation
    195:199:void setShowDividers(int) -> setShowDividers
    1712:1717:void setVerticalGravity(int) -> setVerticalGravity
    545:546:void setWeightSum(float) -> setWeightSum
    203:203:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams -> androidx.appcompat.widget.LinearLayoutCompat$LayoutParams:
    1783:1797:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1783:1805:void <init>(int,int) -> <init>
    1783:1820:void <init>(int,int,float) -> <init>
    1783:1827:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    1783:1834:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    1783:1847:void <init>(androidx.appcompat.widget.LinearLayoutCompat$LayoutParams) -> <init>
androidx.appcompat.widget.ListPopupWindow -> androidx.appcompat.widget.ListPopupWindow:
    84:102:void <clinit>() -> <clinit>
    218:219:void <init>(android.content.Context) -> <init>
    229:230:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    242:243:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    108:272:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1136:1309:int buildDropDown() -> buildDropDown
    826:833:void clearListSelection() -> clearListSelection
    1120:1120:android.view.View$OnTouchListener createDragToOpenListener(android.view.View) -> createDragToOpenListener
    930:930:androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> createDropDownListView
    752:757:void dismiss() -> dismiss
    454:454:android.view.View getAnchorView() -> getAnchorView
    445:445:int getAnimationStyle() -> getAnimationStyle
    417:417:android.graphics.drawable.Drawable getBackground() -> getBackground
    562:562:int getHeight() -> getHeight
    471:471:int getHorizontalOffset() -> getHorizontalOffset
    800:800:int getInputMethodMode() -> getInputMethodMode
    926:926:android.widget.ListView getListView() -> getListView
    1421:1430:int getMaxAvailableHeight(android.view.View,int,boolean) -> getMaxAvailableHeight
    316:316:int getPromptPosition() -> getPromptPosition
    875:878:java.lang.Object getSelectedItem() -> getSelectedItem
    901:904:long getSelectedItemId() -> getSelectedItemId
    888:891:int getSelectedItemPosition() -> getSelectedItemPosition
    914:917:android.view.View getSelectedView() -> getSelectedView
    401:401:int getSoftInputMode() -> getSoftInputMode
    487:490:int getVerticalOffset() -> getVerticalOffset
    529:529:int getWidth() -> getWidth
    1407:1407:boolean isConfirmKey(int) -> isConfirmKey
    377:377:boolean isDropDownAlwaysVisible() -> isDropDownAlwaysVisible
    848:848:boolean isInputMethodNotNeeded() -> isInputMethodNotNeeded
    339:339:boolean isModal() -> isModal
    840:840:boolean isShowing() -> isShowing
    956:1036:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    1075:1096:boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    1051:1060:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    859:868:boolean performItemClick(int) -> performItemClick
    638:639:void postShow() -> postShow
    769:776:void removePromptView() -> removePromptView
    281:294:void setAdapter(android.widget.ListAdapter) -> setAdapter
    464:465:void setAnchorView(android.view.View) -> setAnchorView
    435:436:void setAnimationStyle(int) -> setAnimationStyle
    426:427:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    549:556:void setContentWidth(int) -> setContentWidth
    367:368:void setDropDownAlwaysVisible(boolean) -> setDropDownAlwaysVisible
    522:523:void setDropDownGravity(int) -> setDropDownGravity
    512:513:void setEpicenterBounds(android.graphics.Rect) -> setEpicenterBounds
    351:352:void setForceIgnoreOutsideTouch(boolean) -> setForceIgnoreOutsideTouch
    574:580:void setHeight(int) -> setHeight
    480:481:void setHorizontalOffset(int) -> setHorizontalOffset
    791:792:void setInputMethodMode(int) -> setInputMethodMode
    940:941:void setListItemExpandMax(int) -> setListItemExpandMax
    410:411:void setListSelector(android.graphics.drawable.Drawable) -> setListSelector
    329:331:void setModal(boolean) -> setModal
    765:766:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    603:604:void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    614:615:void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
    1318:1320:void setOverlapAnchor(boolean) -> setOverlapAnchor
    1411:1418:void setPopupClipToScreenEnabled(boolean) -> setPopupClipToScreenEnabled
    306:307:void setPromptPosition(int) -> setPromptPosition
    624:632:void setPromptView(android.view.View) -> setPromptView
    810:819:void setSelection(int) -> setSelection
    391:392:void setSoftInputMode(int) -> setSoftInputMode
    499:501:void setVerticalOffset(int) -> setVerticalOffset
    539:540:void setWidth(int) -> setWidth
    592:593:void setWindowLayoutType(int) -> setWindowLayoutType
    647:745:void show() -> show
androidx.appcompat.widget.ListPopupWindow$1 -> androidx.appcompat.widget.ListPopupWindow$1:
    1120:1120:void <init>(androidx.appcompat.widget.ListPopupWindow,android.view.View) -> <init>
    1120:1120:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    1123:1123:androidx.appcompat.widget.ListPopupWindow getPopup() -> getPopup
androidx.appcompat.widget.ListPopupWindow$2 -> androidx.appcompat.widget.ListPopupWindow$2:
    1147:1147:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1151:1155:void run() -> run
androidx.appcompat.widget.ListPopupWindow$3 -> androidx.appcompat.widget.ListPopupWindow$3:
    1166:1166:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1171:1178:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    1182:1182:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
androidx.appcompat.widget.ListPopupWindow$ListSelectorHider -> androidx.appcompat.widget.ListPopupWindow$ListSelectorHider:
    1341:1342:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1346:1347:void run() -> run
androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver -> androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver:
    1323:1324:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1328:1332:void onChanged() -> onChanged
    1336:1337:void onInvalidated() -> onInvalidated
androidx.appcompat.widget.ListPopupWindow$PopupScrollListener -> androidx.appcompat.widget.ListPopupWindow$PopupScrollListener:
    1387:1388:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1394:1394:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    1398:1403:void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor -> androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor:
    1366:1367:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1371:1382:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable -> androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable:
    1351:1352:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1356:1362:void run() -> run
androidx.appcompat.widget.MenuPopupWindow -> androidx.appcompat.widget.MenuPopupWindow:
    60:65:void <clinit>() -> <clinit>
    70:71:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    75:77:androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> createDropDownListView
    113:116:void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverEnter
    121:124:void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverExit
    81:84:void setEnterTransition(java.lang.Object) -> setEnterTransition
    87:90:void setExitTransition(java.lang.Object) -> setExitTransition
    93:94:void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener) -> setHoverListener
    101:108:void setTouchModal(boolean) -> setTouchModal
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView -> androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView:
    138:150:void <init>(android.content.Context,boolean) -> <init>
    157:158:void clearSelection() -> clearSelection
    129:129:boolean hasFocus() -> hasFocus
    129:129:boolean hasWindowFocus() -> hasWindowFocus
    129:129:boolean isFocused() -> isFocused
    129:129:boolean isInTouchMode() -> isInTouchMode
    129:129:int lookForSelectablePosition(int,boolean) -> lookForSelectablePosition
    129:129:int measureHeightOfChildrenCompat(int,int,int,int,int) -> measureHeightOfChildrenCompat
    129:129:boolean onForwardedEvent(android.view.MotionEvent,int) -> onForwardedEvent
    184:225:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    162:178:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    129:129:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    153:154:void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener) -> setHoverListener
    129:129:void setSelector(android.graphics.drawable.Drawable) -> setSelector
androidx.appcompat.widget.PopupMenu -> androidx.appcompat.widget.PopupMenu:
    68:69:void <init>(android.content.Context,android.view.View) -> <init>
    83:84:void <init>(android.content.Context,android.view.View,int) -> <init>
    104:133:void <init>(android.content.Context,android.view.View,int,int,int) -> <init>
    247:248:void dismiss() -> dismiss
    174:196:android.view.View$OnTouchListener getDragToOpenListener() -> getDragToOpenListener
    153:153:int getGravity() -> getGravity
    209:209:android.view.Menu getMenu() -> getMenu
    219:219:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    306:309:android.widget.ListView getMenuListView() -> getMenuListView
    229:230:void inflate(int) -> inflate
    145:146:void setGravity(int) -> setGravity
    266:267:void setOnDismissListener(androidx.appcompat.widget.PopupMenu$OnDismissListener) -> setOnDismissListener
    257:258:void setOnMenuItemClickListener(androidx.appcompat.widget.PopupMenu$OnMenuItemClickListener) -> setOnMenuItemClickListener
    238:239:void show() -> show
androidx.appcompat.widget.PopupMenu$1 -> androidx.appcompat.widget.PopupMenu$1:
    109:109:void <init>(androidx.appcompat.widget.PopupMenu) -> <init>
    112:115:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    120:120:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
androidx.appcompat.widget.PopupMenu$2 -> androidx.appcompat.widget.PopupMenu$2:
    125:125:void <init>(androidx.appcompat.widget.PopupMenu) -> <init>
    128:131:void onDismiss() -> onDismiss
androidx.appcompat.widget.PopupMenu$3 -> androidx.appcompat.widget.PopupMenu$3:
    175:175:void <init>(androidx.appcompat.widget.PopupMenu,android.view.View) -> <init>
    191:191:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    178:179:boolean onForwardingStarted() -> onForwardingStarted
    184:185:boolean onForwardingStopped() -> onForwardingStopped
androidx.appcompat.widget.ResourcesWrapper -> androidx.appcompat.widget.ResourcesWrapper:
    48:50:void <init>(android.content.res.Resources) -> <init>
    183:183:android.content.res.XmlResourceParser getAnimation(int) -> getAnimation
    168:168:boolean getBoolean(int) -> getBoolean
    158:158:int getColor(int) -> getColor
    163:163:android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    245:245:android.content.res.Configuration getConfiguration() -> getConfiguration
    110:110:float getDimension(int) -> getDimension
    115:115:int getDimensionPixelOffset(int) -> getDimensionPixelOffset
    120:120:int getDimensionPixelSize(int) -> getDimensionPixelSize
    240:240:android.util.DisplayMetrics getDisplayMetrics() -> getDisplayMetrics
    130:130:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    136:136:android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme) -> getDrawable
    142:142:android.graphics.drawable.Drawable getDrawableForDensity(int,int) -> getDrawableForDensity
    148:148:android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
    125:125:float getFraction(int,int,int) -> getFraction
    250:250:int getIdentifier(java.lang.String,java.lang.String,java.lang.String) -> getIdentifier
    100:100:int[] getIntArray(int) -> getIntArray
    173:173:int getInteger(int) -> getInteger
    178:178:android.content.res.XmlResourceParser getLayout(int) -> getLayout
    153:153:android.graphics.Movie getMovie(int) -> getMovie
    75:75:java.lang.String getQuantityString(int,int,java.lang.Object[]) -> getQuantityString
    80:80:java.lang.String getQuantityString(int,int) -> getQuantityString
    59:59:java.lang.CharSequence getQuantityText(int,int) -> getQuantityText
    270:270:java.lang.String getResourceEntryName(int) -> getResourceEntryName
    255:255:java.lang.String getResourceName(int) -> getResourceName
    260:260:java.lang.String getResourcePackageName(int) -> getResourcePackageName
    265:265:java.lang.String getResourceTypeName(int) -> getResourceTypeName
    64:64:java.lang.String getString(int) -> getString
    69:69:java.lang.String getString(int,java.lang.Object[]) -> getString
    95:95:java.lang.String[] getStringArray(int) -> getStringArray
    54:54:java.lang.CharSequence getText(int) -> getText
    85:85:java.lang.CharSequence getText(int,java.lang.CharSequence) -> getText
    90:90:java.lang.CharSequence[] getTextArray(int) -> getTextArray
    209:210:void getValue(int,android.util.TypedValue,boolean) -> getValue
    222:223:void getValue(java.lang.String,android.util.TypedValue,boolean) -> getValue
    216:217:void getValueForDensity(int,int,android.util.TypedValue,boolean) -> getValueForDensity
    188:188:android.content.res.XmlResourceParser getXml(int) -> getXml
    227:227:android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[]) -> obtainAttributes
    105:105:android.content.res.TypedArray obtainTypedArray(int) -> obtainTypedArray
    193:193:java.io.InputStream openRawResource(int) -> openRawResource
    198:198:java.io.InputStream openRawResource(int,android.util.TypedValue) -> openRawResource
    203:203:android.content.res.AssetFileDescriptor openRawResourceFd(int) -> openRawResourceFd
    282:283:void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle) -> parseBundleExtra
    276:277:void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle) -> parseBundleExtras
    232:236:void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics) -> updateConfiguration
androidx.appcompat.widget.RtlSpacingHelper -> androidx.appcompat.widget.RtlSpacingHelper:
    25:36:void <init>() -> <init>
    51:51:int getEnd() -> getEnd
    39:39:int getLeft() -> getLeft
    43:43:int getRight() -> getRight
    47:47:int getStart() -> getStart
    68:71:void setAbsolute(int,int) -> setAbsolute
    74:90:void setDirection(boolean) -> setDirection
    55:65:void setRelative(int,int) -> setRelative
androidx.appcompat.widget.ScrollingTabContainerView -> androidx.appcompat.widget.ScrollingTabContainerView:
    77:77:void <clinit>() -> <clinit>
    75:93:void <init>(android.content.Context) -> <init>
    310:322:void addTab(androidx.appcompat.app.ActionBar$Tab,boolean) -> addTab
    325:337:void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean) -> addTab
    260:273:void animateToTab(int) -> animateToTab
    235:257:void animateToVisibility(int) -> animateToVisibility
    214:220:android.widget.Spinner createSpinner() -> createSpinner
    204:210:androidx.appcompat.widget.LinearLayoutCompat createTabLayout() -> createTabLayout
    293:306:androidx.appcompat.widget.ScrollingTabContainerView$TabView createTabView(androidx.appcompat.app.ActionBar$Tab,boolean) -> createTabView
    146:146:boolean isCollapsed() -> isCollapsed
    277:282:void onAttachedToWindow() -> onAttachedToWindow
    225:232:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    286:290:void onDetachedFromWindow() -> onDetachedFromWindow
    371:373:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    97:138:void onMeasure(int,int) -> onMeasure
    378:378:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
    154:170:void performCollapse() -> performCollapse
    173:179:boolean performExpand() -> performExpand
    360:367:void removeAllTabs() -> removeAllTabs
    350:357:void removeTabAt(int) -> removeTabAt
    150:151:void setAllowCollapse(boolean) -> setAllowCollapse
    199:201:void setContentHeight(int) -> setContentHeight
    183:196:void setTabSelected(int) -> setTabSelected
    340:347:void updateTab(int) -> updateTab
androidx.appcompat.widget.ScrollingTabContainerView$1 -> androidx.appcompat.widget.ScrollingTabContainerView$1:
    264:264:void <init>(androidx.appcompat.widget.ScrollingTabContainerView,android.view.View) -> <init>
    267:270:void run() -> run
androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter -> androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter:
    522:523:void <init>(androidx.appcompat.widget.ScrollingTabContainerView) -> <init>
    527:527:int getCount() -> getCount
    532:532:java.lang.Object getItem(int) -> getItem
    537:537:long getItemId(int) -> getItemId
    542:547:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener -> androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener:
    552:553:void <init>(androidx.appcompat.widget.ScrollingTabContainerView) -> <init>
    557:564:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ScrollingTabContainerView$TabView -> androidx.appcompat.widget.ScrollingTabContainerView$TabView:
    381:406:void <init>(androidx.appcompat.widget.ScrollingTabContainerView,android.content.Context,androidx.appcompat.app.ActionBar$Tab,boolean) -> <init>
    409:411:void bindTab(androidx.appcompat.app.ActionBar$Tab) -> bindTab
    517:517:androidx.appcompat.app.ActionBar$Tab getTab() -> getTab
    424:427:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    431:435:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    439:446:void onMeasure(int,int) -> onMeasure
    415:420:void setSelected(boolean) -> setSelected
    449:514:void update() -> update
androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener -> androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener:
    567:568:void <init>(androidx.appcompat.widget.ScrollingTabContainerView) -> <init>
    594:595:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    586:590:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    580:582:void onAnimationStart(android.animation.Animator) -> onAnimationStart
    573:575:androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener withFinalVisibility(android.view.ViewPropertyAnimator,int) -> withFinalVisibility
androidx.appcompat.widget.SearchView -> androidx.appcompat.widget.SearchView:
    175:175:void <clinit>() -> <clinit>
    266:267:void <init>(android.content.Context) -> <init>
    270:271:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    131:1708:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1363:1384:void adjustDropDownSizeAndPosition() -> adjustDropDownSizeAndPosition
    496:501:void clearFocus() -> clearFocus
    1536:1559:android.content.Intent createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String) -> createIntent
    1655:1691:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String) -> createIntentFromSuggestion
    1581:1636:android.content.Intent createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo) -> createVoiceAppSearchIntent
    1566:1570:android.content.Intent createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo) -> createVoiceWebSearchIntent
    1201:1202:void dismissSuggestions() -> dismissSuggestions
    1696:1698:void forceSuggestionQuery() -> forceSuggestionQuery
    850:855:void getChildBoundsWithinSearchView(android.view.View,android.graphics.Rect) -> getChildBoundsWithinSearchView
    1087:1097:java.lang.CharSequence getDecoratedHint(java.lang.CharSequence) -> getDecoratedHint
    451:451:int getImeOptions() -> getImeOptions
    473:473:int getInputType() -> getInputType
    776:776:int getMaxWidth() -> getMaxWidth
    863:864:int getPreferredHeight() -> getPreferredHeight
    858:859:int getPreferredWidth() -> getPreferredWidth
    558:558:java.lang.CharSequence getQuery() -> getQuery
    618:625:java.lang.CharSequence getQueryHint() -> getQueryHint
    393:393:int getSuggestionCommitIconResId() -> getSuggestionCommitIconResId
    389:389:int getSuggestionRowLayout() -> getSuggestionRowLayout
    754:754:androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter() -> getSuggestionsAdapter
    892:905:boolean hasVoiceSearch() -> hasVoiceSearch
    654:654:boolean isIconfiedByDefault() -> isIconfiedByDefault
    682:682:boolean isIconified() -> isIconified
    1701:1701:boolean isLandscapeMode(android.content.Context) -> isLandscapeMode
    734:734:boolean isQueryRefinementEnabled() -> isQueryRefinementEnabled
    909:909:boolean isSubmitAreaEnabled() -> isSubmitAreaEnabled
    704:704:boolean isSubmitButtonEnabled() -> isSubmitButtonEnabled
    1493:1503:void launchIntent(android.content.Intent) -> launchIntent
    1515:1518:void launchQuerySearch(int,java.lang.String,java.lang.String) -> launchQuerySearch
    1476:1486:boolean launchSuggestion(int,int,java.lang.String) -> launchSuggestion
    1278:1283:void onActionViewCollapsed() -> onActionViewCollapsed
    1290:1297:void onActionViewExpanded() -> onActionViewExpanded
    1205:1222:void onCloseClicked() -> onCloseClicked
    963:966:void onDetachedFromWindow() -> onDetachedFromWindow
    1387:1394:boolean onItemClicked(int,int,java.lang.String) -> onItemClicked
    1398:1403:boolean onItemSelected(int) -> onItemSelected
    831:847:void onLayout(boolean,int,int,int,int) -> onLayout
    782:827:void onMeasure(int,int) -> onMeasure
    972:973:void onQueryRefine(java.lang.CharSequence) -> onQueryRefine
    1352:1360:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1344:1347:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1225:1231:void onSearchClicked() -> onSearchClicked
    1187:1198:void onSubmitQuery() -> onSubmitQuery
    1042:1081:boolean onSuggestionsKey(android.view.View,int,android.view.KeyEvent) -> onSuggestionsKey
    1173:1184:void onTextChanged(java.lang.CharSequence) -> onTextChanged
    1257:1264:void onTextFocusChanged() -> onTextFocusChanged
    1235:1254:void onVoiceClicked() -> onVoiceClicked
    1268:1271:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    944:945:void postUpdateFocusedState() -> postUpdateFocusedState
    479:490:boolean requestFocus(int,android.graphics.Rect) -> requestFocus
    1443:1463:void rewriteQueryFromSuggestion(int) -> rewriteQueryFromSuggestion
    428:429:void setAppSearchData(android.os.Bundle) -> setAppSearchData
    668:673:void setIconified(boolean) -> setIconified
    641:645:void setIconifiedByDefault(boolean) -> setIconifiedByDefault
    440:441:void setImeOptions(int) -> setImeOptions
    463:464:void setInputType(int) -> setInputType
    763:766:void setMaxWidth(int) -> setMaxWidth
    519:520:void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener) -> setOnCloseListener
    528:529:void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener) -> setOnQueryTextFocusChangeListener
    510:511:void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener) -> setOnQueryTextListener
    549:550:void setOnSearchClickListener(android.view.View$OnClickListener) -> setOnSearchClickListener
    537:538:void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener) -> setOnSuggestionListener
    570:580:void setQuery(java.lang.CharSequence,boolean) -> setQuery
    1509:1512:void setQuery(java.lang.CharSequence) -> setQuery
    593:595:void setQueryHint(java.lang.CharSequence) -> setQueryHint
    722:727:void setQueryRefinementEnabled(boolean) -> setQueryRefinementEnabled
    405:419:void setSearchableInfo(android.app.SearchableInfo) -> setSearchableInfo
    694:696:void setSubmitButtonEnabled(boolean) -> setSubmitButtonEnabled
    744:747:void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter) -> setSuggestionsAdapter
    932:941:void updateCloseButton() -> updateCloseButton
    948:959:void updateFocusedState() -> updateFocusedState
    1101:1103:void updateQueryHint() -> updateQueryHint
    1109:1143:void updateSearchAutoComplete() -> updateSearchAutoComplete
    922:929:void updateSubmitArea() -> updateSubmitArea
    913:919:void updateSubmitButton(boolean) -> updateSubmitButton
    868:889:void updateViewsVisibility(boolean) -> updateViewsVisibility
    1152:1158:void updateVoiceButton(boolean) -> updateVoiceButton
androidx.appcompat.widget.SearchView$1 -> androidx.appcompat.widget.SearchView$1:
    177:177:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    180:181:void run() -> run
androidx.appcompat.widget.SearchView$10 -> androidx.appcompat.widget.SearchView$10:
    1708:1708:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1720:1720:void afterTextChanged(android.text.Editable) -> afterTextChanged
    1710:1710:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    1715:1716:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
androidx.appcompat.widget.SearchView$2 -> androidx.appcompat.widget.SearchView$2:
    184:184:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    187:190:void run() -> run
androidx.appcompat.widget.SearchView$3 -> androidx.appcompat.widget.SearchView$3:
    330:330:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    333:336:void onFocusChange(android.view.View,boolean) -> onFocusChange
androidx.appcompat.widget.SearchView$4 -> androidx.appcompat.widget.SearchView$4:
    375:375:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    379:380:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
androidx.appcompat.widget.SearchView$5 -> androidx.appcompat.widget.SearchView$5:
    975:975:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    978:989:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.SearchView$6 -> androidx.appcompat.widget.SearchView$6:
    997:997:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1001:1031:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
androidx.appcompat.widget.SearchView$7 -> androidx.appcompat.widget.SearchView$7:
    1160:1160:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1167:1168:boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
androidx.appcompat.widget.SearchView$8 -> androidx.appcompat.widget.SearchView$8:
    1406:1406:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1414:1415:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.widget.SearchView$9 -> androidx.appcompat.widget.SearchView$9:
    1418:1418:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1426:1427:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    1436:1436:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector -> androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector:
    2025:2047:void <init>() -> <init>
    2059:2065:void doAfterTextChanged(android.widget.AutoCompleteTextView) -> doAfterTextChanged
    2050:2056:void doBeforeTextChanged(android.widget.AutoCompleteTextView) -> doBeforeTextChanged
    2068:2074:void ensureImeVisible(android.widget.AutoCompleteTextView,boolean) -> ensureImeVisible
androidx.appcompat.widget.SearchView$SavedState -> androidx.appcompat.widget.SearchView$SavedState:
    1324:1324:void <clinit>() -> <clinit>
    1303:1304:void <init>(android.os.Parcelable) -> <init>
    1307:1309:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1319:1320:java.lang.String toString() -> toString
    1313:1315:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.SearchView$SavedState$1 -> androidx.appcompat.widget.SearchView$SavedState$1:
    1324:1324:void <init>() -> <init>
    1324:1324:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1324:1324:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1327:1327:androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1332:1332:androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1324:1324:java.lang.Object[] newArray(int) -> newArray
    1337:1337:androidx.appcompat.widget.SearchView$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.SearchView$SearchAutoComplete -> androidx.appcompat.widget.SearchView$SearchAutoComplete:
    1837:1838:void <init>(android.content.Context) -> <init>
    1841:1842:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1829:1847:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1926:1926:boolean enoughToFilter() -> enoughToFilter
    1959:1969:int getSearchViewTextMinWidthDp() -> getSearchViewTextMinWidthDp
    1871:1871:boolean isEmpty() -> isEmpty
    1978:1983:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    1851:1855:void onFinishInflate() -> onFinishInflate
    1916:1918:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    1931:1952:boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    1898:1912:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    1890:1890:void performCompletion() -> performCompletion
    1880:1880:void replaceText(java.lang.CharSequence) -> replaceText
    1996:2017:void setImeVisibility(boolean) -> setImeVisibility
    1858:1859:void setSearchView(androidx.appcompat.widget.SearchView) -> setSearchView
    1863:1865:void setThreshold(int) -> setThreshold
    1987:1993:void showSoftInputIfNecessary() -> showSoftInputIfNecessary
androidx.appcompat.widget.SearchView$SearchAutoComplete$1 -> androidx.appcompat.widget.SearchView$SearchAutoComplete$1:
    1829:1829:void <init>(androidx.appcompat.widget.SearchView$SearchAutoComplete) -> <init>
    1832:1833:void run() -> run
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate -> androidx.appcompat.widget.SearchView$UpdatableTouchDelegate:
    1755:1762:void <init>(android.graphics.Rect,android.graphics.Rect,android.view.View) -> <init>
    1773:1814:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1765:1769:void setBounds(android.graphics.Rect,android.graphics.Rect) -> setBounds
androidx.appcompat.widget.ShareActionProvider -> androidx.appcompat.widget.ShareActionProvider:
    164:199:void <init>(android.content.Context) -> <init>
    249:249:boolean hasSubMenu() -> hasSubMenu
    222:241:android.view.View onCreateActionView() -> onCreateActionView
    258:286:void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
    383:391:void setActivityChooserPolicyIfNeeded() -> setActivityChooserPolicyIfNeeded
    212:214:void setOnShareTargetSelectedListener(androidx.appcompat.widget.ShareActionProvider$OnShareTargetSelectedListener) -> setOnShareTargetSelectedListener
    321:323:void setShareHistoryFileName(java.lang.String) -> setShareHistoryFileName
    342:351:void setShareIntent(android.content.Intent) -> setShareIntent
    411:419:void updateIntent(android.content.Intent) -> updateIntent
androidx.appcompat.widget.ShareActionProvider$ShareActivityChooserModelPolicy -> androidx.appcompat.widget.ShareActionProvider$ShareActivityChooserModelPolicy:
    397:398:void <init>(androidx.appcompat.widget.ShareActionProvider) -> <init>
    402:406:boolean onChooseActivity(androidx.appcompat.widget.ActivityChooserModel,android.content.Intent) -> onChooseActivity
androidx.appcompat.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener -> androidx.appcompat.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener:
    357:358:void <init>(androidx.appcompat.widget.ShareActionProvider) -> <init>
    362:374:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.widget.SuggestionsAdapter -> androidx.appcompat.widget.SuggestionsAdapter:
    74:106:void <init>(android.content.Context,androidx.appcompat.widget.SearchView,android.app.SearchableInfo,java.util.WeakHashMap) -> <init>
    275:325:void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    217:237:void changeCursor(android.database.Cursor) -> changeCursor
    583:588:android.graphics.drawable.Drawable checkIconCache(java.lang.String) -> checkIconCache
    174:176:void close() -> close
    415:438:java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    336:347:java.lang.CharSequence formatUrl(java.lang.CharSequence) -> formatUrl
    647:664:android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName) -> getActivityIcon
    625:636:android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName) -> getActivityIconWithCache
    676:677:java.lang.String getColumnString(android.database.Cursor,java.lang.String) -> getColumnString
    606:612:android.graphics.drawable.Drawable getDefaultIcon1(android.database.Cursor) -> getDefaultIcon1
    550:576:android.graphics.drawable.Drawable getDrawable(android.net.Uri) -> getDrawable
    699:730:android.graphics.drawable.Drawable getDrawableFromResourceUri(android.net.Uri) -> getDrawableFromResourceUri
    507:539:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String) -> getDrawableFromResourceValue
    473:483:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    362:370:android.graphics.drawable.Drawable getIcon1(android.database.Cursor) -> getIcon1
    374:378:android.graphics.drawable.Drawable getIcon2(android.database.Cursor) -> getIcon2
    126:126:int getQueryRefinement() -> getQueryRefinement
    737:778:android.database.Cursor getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int) -> getSearchManagerSuggestions
    681:690:java.lang.String getStringOrNull(android.database.Cursor,int) -> getStringOrNull
    450:460:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    135:135:boolean hasStableIds() -> hasStableIds
    244:250:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    181:184:void notifyDataSetChanged() -> notifyDataSetChanged
    189:192:void notifyDataSetInvalidated() -> notifyDataSetInvalidated
    329:333:void onClick(android.view.View) -> onClick
    146:169:android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    118:119:void setQueryRefinement(int) -> setQueryRefinement
    388:403:void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int) -> setViewDrawable
    352:359:void setViewText(android.widget.TextView,java.lang.CharSequence) -> setViewText
    592:595:void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable) -> storeInIconCache
    195:208:void updateSpinnerState(android.database.Cursor) -> updateSpinnerState
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache -> androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache:
    264:270:void <init>(android.view.View) -> <init>
androidx.appcompat.widget.SwitchCompat -> androidx.appcompat.widget.SwitchCompat:
    101:183:void <clinit>() -> <clinit>
    193:194:void <init>(android.content.Context) -> <init>
    204:205:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    115:291:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1024:1031:void animateThumbToCheckedState(boolean) -> animateThumbToCheckedState
    694:711:void applyThumbTint() -> applyThumbTint
    571:588:void applyTrackTint() -> applyTrackTint
    1034:1037:void cancelPositionAnimator() -> cancelPositionAnimator
    984:988:void cancelSuperTouch(android.view.MotionEvent) -> cancelSuperTouch
    1426:1426:float constrain(float,float,float) -> constrain
    1133:1194:void draw(android.graphics.Canvas) -> draw
    1353:1364:void drawableHotspotChanged(float,float) -> drawableHotspotChanged
    1331:1349:void drawableStateChanged() -> drawableStateChanged
    1263:1270:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    1275:1282:int getCompoundPaddingRight() -> getCompoundPaddingRight
    792:792:boolean getShowText() -> getShowText
    733:733:boolean getSplitTrack() -> getSplitTrack
    446:446:int getSwitchMinWidth() -> getSwitchMinWidth
    421:421:int getSwitchPadding() -> getSwitchPadding
    1040:1040:boolean getTargetCheckedState() -> getTargetCheckedState
    761:761:java.lang.CharSequence getTextOff() -> getTextOff
    742:742:java.lang.CharSequence getTextOn() -> getTextOn
    630:630:android.graphics.drawable.Drawable getThumbDrawable() -> getThumbDrawable
    1293:1298:int getThumbOffset() -> getThumbOffset
    1302:1316:int getThumbScrollRange() -> getThumbScrollRange
    469:469:int getThumbTextPadding() -> getThumbTextPadding
    661:661:android.content.res.ColorStateList getThumbTintList() -> getThumbTintList
    690:690:android.graphics.PorterDuff$Mode getThumbTintMode() -> getThumbTintMode
    509:509:android.graphics.drawable.Drawable getTrackDrawable() -> getTrackDrawable
    539:539:android.content.res.ColorStateList getTrackTintList() -> getTrackTintList
    567:567:android.graphics.PorterDuff$Mode getTrackTintMode() -> getTrackTintMode
    888:901:boolean hitThumb(float,float) -> hitThumb
    1373:1387:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    874:880:android.text.Layout makeLayout(java.lang.CharSequence) -> makeLayout
    1322:1326:int[] onCreateDrawableState(int) -> onCreateDrawableState
    1198:1259:void onDraw(android.graphics.Canvas) -> onDraw
    1391:1393:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1397:1410:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    1077:1129:void onLayout(boolean,int,int,int,int) -> onLayout
    797:861:void onMeasure(int,int) -> onMeasure
    865:871:void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    906:980:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1060:1073:void setChecked(boolean) -> setChecked
    1418:1420:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    781:785:void setShowText(boolean) -> setShowText
    723:725:void setSplitTrack(boolean) -> setSplitTrack
    433:435:void setSwitchMinWidth(int) -> setSwitchMinWidth
    409:411:void setSwitchPadding(int) -> setSwitchPadding
    300:336:void setSwitchTextAppearance(android.content.Context,int) -> setSwitchTextAppearance
    364:382:void setSwitchTypeface(android.graphics.Typeface,int) -> setSwitchTypeface
    392:399:void setSwitchTypeface(android.graphics.Typeface) -> setSwitchTypeface
    339:355:void setSwitchTypefaceByIndex(int,int) -> setSwitchTypefaceByIndex
    770:772:void setTextOff(java.lang.CharSequence) -> setTextOff
    751:753:void setTextOn(java.lang.CharSequence) -> setTextOn
    599:607:void setThumbDrawable(android.graphics.drawable.Drawable) -> setThumbDrawable
    1049:1051:void setThumbPosition(float) -> setThumbPosition
    618:619:void setThumbResource(int) -> setThumbResource
    457:459:void setThumbTextPadding(int) -> setThumbTextPadding
    648:652:void setThumbTintList(android.content.res.ColorStateList) -> setThumbTintList
    676:680:void setThumbTintMode(android.graphics.PorterDuff$Mode) -> setThumbTintMode
    480:488:void setTrackDrawable(android.graphics.drawable.Drawable) -> setTrackDrawable
    498:499:void setTrackResource(int) -> setTrackResource
    526:530:void setTrackTintList(android.content.res.ColorStateList) -> setTrackTintList
    553:557:void setTrackTintMode(android.graphics.PorterDuff$Mode) -> setTrackTintMode
    996:1021:void stopDrag(android.view.MotionEvent) -> stopDrag
    1055:1056:void toggle() -> toggle
    1368:1368:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.appcompat.widget.SwitchCompat$1 -> androidx.appcompat.widget.SwitchCompat$1:
    102:102:void <init>(java.lang.Class,java.lang.String) -> <init>
    102:102:java.lang.Object get(java.lang.Object) -> get
    105:105:java.lang.Float get(androidx.appcompat.widget.SwitchCompat) -> get
    102:102:void set(java.lang.Object,java.lang.Object) -> set
    110:111:void set(androidx.appcompat.widget.SwitchCompat,java.lang.Float) -> set
androidx.appcompat.widget.ThemeUtils -> androidx.appcompat.widget.ThemeUtils:
    28:40:void <clinit>() -> <clinit>
    114:115:void <init>() -> <init>
    45:59:android.content.res.ColorStateList createDisabledStateList(int,int) -> createDisabledStateList
    83:95:int getDisabledThemeAttrColor(android.content.Context,int) -> getDisabledThemeAttrColor
    63:68:int getThemeAttrColor(android.content.Context,int) -> getThemeAttrColor
    109:111:int getThemeAttrColor(android.content.Context,int,float) -> getThemeAttrColor
    73:78:android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int) -> getThemeAttrColorStateList
    100:105:android.util.TypedValue getTypedValue() -> getTypedValue
androidx.appcompat.widget.ThemedSpinnerAdapter$Helper -> androidx.appcompat.widget.ThemedSpinnerAdapter$Helper:
    111:114:void <init>(android.content.Context) -> <init>
    152:152:android.view.LayoutInflater getDropDownViewInflater() -> getDropDownViewInflater
    140:140:android.content.res.Resources$Theme getDropDownViewTheme() -> getDropDownViewTheme
    124:132:void setDropDownViewTheme(android.content.res.Resources$Theme) -> setDropDownViewTheme
androidx.appcompat.widget.TintContextWrapper -> androidx.appcompat.widget.TintContextWrapper:
    42:42:void <clinit>() -> <clinit>
    92:104:void <init>(android.content.Context) -> <init>
    128:128:android.content.res.AssetManager getAssets() -> getAssets
    122:122:android.content.res.Resources getResources() -> getResources
    108:108:android.content.res.Resources$Theme getTheme() -> getTheme
    113:118:void setTheme(int) -> setTheme
    78:85:boolean shouldWrap(android.content.Context) -> shouldWrap
    46:74:android.content.Context wrap(android.content.Context) -> wrap
androidx.appcompat.widget.TintInfo -> androidx.appcompat.widget.TintInfo:
    22:22:void <init>() -> <init>
    29:33:void clear() -> clear
androidx.appcompat.widget.TintResources -> androidx.appcompat.widget.TintResources:
    35:37:void <init>(android.content.Context,android.content.res.Resources) -> <init>
    46:51:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
androidx.appcompat.widget.TintTypedArray -> androidx.appcompat.widget.TintTypedArray:
    67:70:void <init>(android.content.Context,android.content.res.TypedArray) -> <init>
    151:151:boolean getBoolean(int,boolean) -> getBoolean
    250:250:int getChangingConfigurations() -> getChangingConfigurations
    163:163:int getColor(int,int) -> getColor
    167:177:android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    185:185:float getDimension(int,float) -> getDimension
    189:189:int getDimensionPixelOffset(int,int) -> getDimensionPixelOffset
    193:193:int getDimensionPixelSize(int,int) -> getDimensionPixelSize
    73:79:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    83:89:android.graphics.drawable.Drawable getDrawableIfKnown(int) -> getDrawableIfKnown
    159:159:float getFloat(int,float) -> getFloat
    112:119:android.graphics.Typeface getFont(int,int,androidx.core.content.res.ResourcesCompat$FontCallback) -> getFont
    205:205:float getFraction(int,int,int,float) -> getFraction
    131:131:int getIndex(int) -> getIndex
    127:127:int getIndexCount() -> getIndexCount
    155:155:int getInt(int,int) -> getInt
    181:181:int getInteger(int,int) -> getInteger
    197:197:int getLayoutDimension(int,java.lang.String) -> getLayoutDimension
    201:201:int getLayoutDimension(int,int) -> getLayoutDimension
    147:147:java.lang.String getNonResourceString(int) -> getNonResourceString
    241:241:java.lang.String getPositionDescription() -> getPositionDescription
    209:209:int getResourceId(int,int) -> getResourceId
    135:135:android.content.res.Resources getResources() -> getResources
    143:143:java.lang.String getString(int) -> getString
    139:139:java.lang.CharSequence getText(int) -> getText
    213:213:java.lang.CharSequence[] getTextArray(int) -> getTextArray
    221:228:int getType(int) -> getType
    217:217:boolean getValue(int,android.util.TypedValue) -> getValue
    233:233:boolean hasValue(int) -> hasValue
    123:123:int length() -> length
    54:54:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[]) -> obtainStyledAttributes
    59:60:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int) -> obtainStyledAttributes
    64:64:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,int,int[]) -> obtainStyledAttributes
    237:237:android.util.TypedValue peekValue(int) -> peekValue
    245:246:void recycle() -> recycle
androidx.appcompat.widget.Toolbar -> androidx.appcompat.widget.Toolbar:
    225:226:void <init>(android.content.Context) -> <init>
    229:230:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    178:343:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    2131:2137:void addChildrenForExpandedActionView() -> addChildrenForExpandedActionView
    2019:2045:void addCustomViewsWithGravity(java.util.List,int) -> addCustomViewsWithGravity
    1390:1407:void addSystemView(android.view.View,boolean) -> addSystemView
    507:507:boolean canShowOverflowMenu() -> canShowOverflowMenu
    2101:2101:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    715:720:void collapseActionView() -> collapseActionView
    585:588:void dismissPopupMenus() -> dismissPopupMenus
    1371:1387:void ensureCollapseButtonView() -> ensureCollapseButtonView
    2168:2171:void ensureContentInsets() -> ensureContentInsets
    685:688:void ensureLogoView() -> ensureLogoView
    1033:1043:void ensureMenu() -> ensureMenu
    1046:1056:void ensureMenuView() -> ensureMenuView
    1361:1368:void ensureNavButtonView() -> ensureNavButtonView
    142:142:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    2096:2096:androidx.appcompat.widget.Toolbar$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    142:142:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    142:142:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2078:2078:androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    2083:2090:androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2048:2057:int getChildHorizontalGravity(int) -> getChildHorizontalGravity
    1968:1995:int getChildTop(android.view.View,int) -> getChildTop
    2000:2007:int getChildVerticalGravity(int) -> getChildVerticalGravity
    1146:1146:int getContentInsetEnd() -> getContentInsetEnd
    1268:1270:int getContentInsetEndWithActions() -> getContentInsetEndWithActions
    1189:1189:int getContentInsetLeft() -> getContentInsetLeft
    1209:1209:int getContentInsetRight() -> getContentInsetRight
    1126:1126:int getContentInsetStart() -> getContentInsetStart
    1225:1227:int getContentInsetStartWithNavigation() -> getContentInsetStartWithNavigation
    1320:1327:int getCurrentContentInsetEnd() -> getCurrentContentInsetEnd
    1340:1342:int getCurrentContentInsetLeft() -> getCurrentContentInsetLeft
    1355:1357:int getCurrentContentInsetRight() -> getCurrentContentInsetRight
    1306:1308:int getCurrentContentInsetStart() -> getCurrentContentInsetStart
    2066:2068:int getHorizontalMargins(android.view.View) -> getHorizontalMargins
    643:643:android.graphics.drawable.Drawable getLogo() -> getLogo
    681:681:java.lang.CharSequence getLogoDescription() -> getLogoDescription
    1007:1008:android.view.Menu getMenu() -> getMenu
    1059:1059:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    889:889:java.lang.CharSequence getNavigationContentDescription() -> getNavigationContentDescription
    981:981:android.graphics.drawable.Drawable getNavigationIcon() -> getNavigationIcon
    2177:2177:androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter() -> getOuterActionMenuPresenter
    1028:1029:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    2181:2181:android.content.Context getPopupContext() -> getPopupContext
    369:369:int getPopupTheme() -> getPopupTheme
    784:784:java.lang.CharSequence getSubtitle() -> getSubtitle
    728:728:java.lang.CharSequence getTitle() -> getTitle
    466:466:int getTitleMarginBottom() -> getTitleMarginBottom
    444:444:int getTitleMarginEnd() -> getTitleMarginEnd
    400:400:int getTitleMarginStart() -> getTitleMarginStart
    422:422:int getTitleMarginTop() -> getTitleMarginTop
    2072:2073:int getVerticalMargins(android.view.View) -> getVerticalMargins
    1923:1938:int getViewListMeasuredWidth(java.util.List,int[]) -> getViewListMeasuredWidth
    2111:2114:androidx.appcompat.widget.DecorToolbar getWrapper() -> getWrapper
    701:701:boolean hasExpandedActionView() -> hasExpandedActionView
    541:541:boolean hideOverflowMenu() -> hideOverflowMenu
    1071:1072:void inflateMenu(int) -> inflateMenu
    2140:2140:boolean isChildOrHidden(android.view.View) -> isChildOrHidden
    2105:2105:boolean isCustomView(android.view.View) -> isCustomView
    523:523:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    517:517:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    593:608:boolean isTitleTruncated() -> isTitleTruncated
    1943:1951:int layoutChildLeft(android.view.View,int,int[],int) -> layoutChildLeft
    1956:1964:int layoutChildRight(android.view.View,int,int[],int) -> layoutChildRight
    1532:1549:int measureChildCollapseMargins(android.view.View,int,int,int,int,int[]) -> measureChildCollapseMargins
    1507:1524:void measureChildConstrained(android.view.View,int,int,int,int,int) -> measureChildConstrained
    1451:1453:void onDetachedFromWindow() -> onDetachedFromWindow
    1486:1502:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    1705:1920:void onLayout(boolean,int,int,int,int) -> onLayout
    1571:1701:void onMeasure(int,int) -> onMeasure
    1423:1442:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    483:489:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    1411:1418:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1462:1478:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1445:1447:void postShowOverflowMenu() -> postShowOverflowMenu
    2118:2128:void removeChildrenForExpandedActionView() -> removeChildrenForExpandedActionView
    2150:2152:void setCollapsible(boolean) -> setCollapsible
    1286:1295:void setContentInsetEndWithActions(int) -> setContentInsetEndWithActions
    1244:1253:void setContentInsetStartWithNavigation(int) -> setContentInsetStartWithNavigation
    1168:1170:void setContentInsetsAbsolute(int,int) -> setContentInsetsAbsolute
    1105:1107:void setContentInsetsRelative(int,int) -> setContentInsetsRelative
    501:502:void setLogo(int) -> setLogo
    621:633:void setLogo(android.graphics.drawable.Drawable) -> setLogo
    655:656:void setLogoDescription(int) -> setLogoDescription
    667:673:void setLogoDescription(java.lang.CharSequence) -> setLogoDescription
    547:579:void setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter) -> setMenu
    2160:2165:void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    903:904:void setNavigationContentDescription(int) -> setNavigationContentDescription
    917:923:void setNavigationContentDescription(java.lang.CharSequence) -> setNavigationContentDescription
    940:941:void setNavigationIcon(int) -> setNavigationIcon
    958:970:void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    994:996:void setNavigationOnClickListener(android.view.View$OnClickListener) -> setNavigationOnClickListener
    1083:1084:void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener) -> setOnMenuItemClickListener
    1017:1019:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    353:361:void setPopupTheme(int) -> setPopupTheme
    795:796:void setSubtitle(int) -> setSubtitle
    806:830:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    848:852:void setSubtitleTextAppearance(android.content.Context,int) -> setSubtitleTextAppearance
    872:876:void setSubtitleTextColor(int) -> setSubtitleTextColor
    740:741:void setTitle(int) -> setTitle
    752:776:void setTitle(java.lang.CharSequence) -> setTitle
    386:392:void setTitleMargin(int,int,int,int) -> setTitleMargin
    477:479:void setTitleMarginBottom(int) -> setTitleMarginBottom
    455:458:void setTitleMarginEnd(int) -> setTitleMarginEnd
    411:414:void setTitleMarginStart(int) -> setTitleMarginStart
    433:436:void setTitleMarginTop(int) -> setTitleMarginTop
    837:841:void setTitleTextAppearance(android.content.Context,int) -> setTitleTextAppearance
    860:864:void setTitleTextColor(int) -> setTitleTextColor
    1556:1566:boolean shouldCollapse() -> shouldCollapse
    2062:2062:boolean shouldLayout(android.view.View) -> shouldLayout
    532:532:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.Toolbar$1 -> androidx.appcompat.widget.Toolbar$1:
    200:200:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    203:206:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.widget.Toolbar$2 -> androidx.appcompat.widget.Toolbar$2:
    218:218:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    220:221:void run() -> run
androidx.appcompat.widget.Toolbar$3 -> androidx.appcompat.widget.Toolbar$3:
    1380:1380:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    1383:1384:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter -> androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter:
    2309:2310:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    2407:2420:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    2370:2400:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    2365:2365:boolean flagActionItems() -> flagActionItems
    2425:2425:int getId() -> getId
    2323:2323:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    2315:2319:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    2361:2361:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    2435:2435:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    2430:2430:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    2356:2356:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    2352:2352:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    2329:2348:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.widget.Toolbar$LayoutParams -> androidx.appcompat.widget.Toolbar$LayoutParams:
    2213:2217:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2213:2222:void <init>(int,int) -> <init>
    2213:2227:void <init>(int,int,int) -> <init>
    2230:2231:void <init>(int) -> <init>
    2213:2237:void <init>(androidx.appcompat.widget.Toolbar$LayoutParams) -> <init>
    2213:2241:void <init>(androidx.appcompat.app.ActionBar$LayoutParams) -> <init>
    2213:2248:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2213:2252:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2255:2259:void copyMarginsFromCompat(android.view.ViewGroup$MarginLayoutParams) -> copyMarginsFromCompat
androidx.appcompat.widget.Toolbar$SavedState -> androidx.appcompat.widget.Toolbar$SavedState:
    2287:2287:void <clinit>() -> <clinit>
    2267:2268:void <init>(android.os.Parcel) -> <init>
    2271:2274:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2277:2278:void <init>(android.os.Parcelable) -> <init>
    2282:2285:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.Toolbar$SavedState$1 -> androidx.appcompat.widget.Toolbar$SavedState$1:
    2287:2287:void <init>() -> <init>
    2287:2287:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2287:2287:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2290:2290:androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2295:2295:androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2287:2287:java.lang.Object[] newArray(int) -> newArray
    2300:2300:androidx.appcompat.widget.Toolbar$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.ToolbarWidgetWrapper -> androidx.appcompat.widget.ToolbarWidgetWrapper:
    96:98:void <init>(androidx.appcompat.widget.Toolbar,boolean) -> <init>
    90:192:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int) -> <init>
    556:561:void animateToVisibility(int) -> animateToVisibility
    335:335:boolean canShowOverflowMenu() -> canShowOverflowMenu
    232:233:void collapseActionView() -> collapseActionView
    206:212:int detectDisplayOptions() -> detectDisplayOptions
    375:376:void dismissPopupMenus() -> dismissPopupMenus
    503:509:void ensureSpinner() -> ensureSpinner
    222:222:android.content.Context getContext() -> getContext
    551:551:android.view.View getCustomView() -> getCustomView
    380:380:int getDisplayOptions() -> getDisplayOptions
    535:535:int getDropdownItemCount() -> getDropdownItemCount
    530:530:int getDropdownSelectedPosition() -> getDropdownSelectedPosition
    656:656:int getHeight() -> getHeight
    677:677:android.view.Menu getMenu() -> getMenu
    458:458:int getNavigationMode() -> getNavigationMode
    268:268:java.lang.CharSequence getSubtitle() -> getSubtitle
    250:250:java.lang.CharSequence getTitle() -> getTitle
    217:217:android.view.ViewGroup getViewGroup() -> getViewGroup
    666:666:int getVisibility() -> getVisibility
    438:438:boolean hasEmbeddedTabs() -> hasEmbeddedTabs
    227:227:boolean hasExpandedActionView() -> hasExpandedActionView
    291:291:boolean hasIcon() -> hasIcon
    296:296:boolean hasLogo() -> hasLogo
    355:355:boolean hideOverflowMenu() -> hideOverflowMenu
    286:287:void initIndeterminateProgress() -> initIndeterminateProgress
    281:282:void initProgress() -> initProgress
    345:345:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    340:340:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    443:443:boolean isTitleTruncated() -> isTitleTruncated
    646:647:void restoreHierarchyState(android.util.SparseArray) -> restoreHierarchyState
    641:642:void saveHierarchyState(android.util.SparseArray) -> saveHierarchyState
    651:652:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    448:449:void setCollapsible(boolean) -> setCollapsible
    540:547:void setCustomView(android.view.View) -> setCustomView
    196:203:void setDefaultNavigationContentDescription(int) -> setDefaultNavigationContentDescription
    604:608:void setDefaultNavigationIcon(android.graphics.drawable.Drawable) -> setDefaultNavigationIcon
    385:418:void setDisplayOptions(int) -> setDisplayOptions
    514:517:void setDropdownParams(android.widget.SpinnerAdapter,android.widget.AdapterView$OnItemSelectedListener) -> setDropdownParams
    521:526:void setDropdownSelectedPosition(int) -> setDropdownSelectedPosition
    422:434:void setEmbeddedTabView(androidx.appcompat.widget.ScrollingTabContainerView) -> setEmbeddedTabView
    454:454:void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    301:302:void setIcon(int) -> setIcon
    306:308:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    312:313:void setLogo(int) -> setLogo
    317:319:void setLogo(android.graphics.drawable.Drawable) -> setLogo
    365:371:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback) -> setMenu
    672:673:void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    360:361:void setMenuPrepared() -> setMenuPrepared
    620:622:void setNavigationContentDescription(java.lang.CharSequence) -> setNavigationContentDescription
    626:627:void setNavigationContentDescription(int) -> setNavigationContentDescription
    593:595:void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    599:600:void setNavigationIcon(int) -> setNavigationIcon
    463:500:void setNavigationMode(int) -> setNavigationMode
    273:277:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    255:257:void setTitle(java.lang.CharSequence) -> setTitle
    260:264:void setTitleInt(java.lang.CharSequence) -> setTitleInt
    661:662:void setVisibility(int) -> setVisibility
    237:238:void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    243:246:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    566:569:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
    350:350:boolean showOverflowMenu() -> showOverflowMenu
    630:637:void updateHomeAccessibility() -> updateHomeAccessibility
    611:616:void updateNavigationIcon() -> updateNavigationIcon
    322:331:void updateToolbarLogo() -> updateToolbarLogo
androidx.appcompat.widget.ToolbarWidgetWrapper$1 -> androidx.appcompat.widget.ToolbarWidgetWrapper$1:
    182:183:void <init>(androidx.appcompat.widget.ToolbarWidgetWrapper) -> <init>
    187:190:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ToolbarWidgetWrapper$2 -> androidx.appcompat.widget.ToolbarWidgetWrapper$2:
    569:570:void <init>(androidx.appcompat.widget.ToolbarWidgetWrapper,int) -> <init>
    586:587:void onAnimationCancel(android.view.View) -> onAnimationCancel
    579:582:void onAnimationEnd(android.view.View) -> onAnimationEnd
    574:575:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.appcompat.widget.TooltipCompat -> androidx.appcompat.widget.TooltipCompat:
    48:48:void <init>() -> <init>
    41:46:void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
androidx.appcompat.widget.TooltipCompatHandler -> androidx.appcompat.widget.TooltipCompatHandler:
    54:117:void <init>(android.view.View,java.lang.CharSequence) -> <init>
    224:225:void cancelPendingShow() -> cancelPendingShow
    250:252:void clearAnchorPos() -> clearAnchorPos
    192:207:void hide() -> hide
    129:149:boolean onHover(android.view.View,android.view.MotionEvent) -> onHover
    121:124:boolean onLongClick(android.view.View) -> onLongClick
    155:155:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    159:160:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    220:221:void scheduleShow() -> scheduleShow
    210:217:void setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler) -> setPendingHandler
    93:106:void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
    163:189:void show(boolean) -> show
    235:243:boolean updateAnchorPos(android.view.MotionEvent) -> updateAnchorPos
androidx.appcompat.widget.TooltipCompatHandler$1 -> androidx.appcompat.widget.TooltipCompatHandler$1:
    54:54:void <init>(androidx.appcompat.widget.TooltipCompatHandler) -> <init>
    57:58:void run() -> run
androidx.appcompat.widget.TooltipCompatHandler$2 -> androidx.appcompat.widget.TooltipCompatHandler$2:
    60:60:void <init>(androidx.appcompat.widget.TooltipCompatHandler) -> <init>
    63:64:void run() -> run
androidx.appcompat.widget.TooltipPopup -> androidx.appcompat.widget.TooltipPopup:
    53:73:void <init>(android.content.Context) -> <init>
    104:184:void computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams) -> computePosition
    187:207:android.view.View getAppRootView(android.view.View) -> getAppRootView
    90:96:void hide() -> hide
    99:99:boolean isShowing() -> isShowing
    77:87:void show(android.view.View,int,int,boolean,java.lang.CharSequence) -> show
androidx.appcompat.widget.VectorEnabledTintResources -> androidx.appcompat.widget.VectorEnabledTintResources:
    39:39:void <clinit>() -> <clinit>
    55:57:void <init>(android.content.Context,android.content.res.Resources) -> <init>
    66:70:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    93:93:boolean isCompatVectorFromResourcesEnabled() -> isCompatVectorFromResourcesEnabled
    83:84:void setCompatVectorFromResourcesEnabled(boolean) -> setCompatVectorFromResourcesEnabled
    42:42:boolean shouldBeUsed() -> shouldBeUsed
    75:75:android.graphics.drawable.Drawable superGetDrawable(int) -> superGetDrawable
androidx.appcompat.widget.ViewStubCompat -> androidx.appcompat.widget.ViewStubCompat:
    53:54:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    44:70:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    159:159:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    155:155:void draw(android.graphics.Canvas) -> draw
    83:83:int getInflatedId() -> getInflatedId
    144:144:android.view.LayoutInflater getLayoutInflater() -> getLayoutInflater
    113:113:int getLayoutResource() -> getLayoutResource
    196:235:android.view.View inflate() -> inflate
    149:150:void onMeasure(int,int) -> onMeasure
    97:98:void setInflatedId(int) -> setInflatedId
    137:138:void setLayoutInflater(android.view.LayoutInflater) -> setLayoutInflater
    129:130:void setLayoutResource(int) -> setLayoutResource
    248:249:void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener) -> setOnInflateListener
    173:186:void setVisibility(int) -> setVisibility
androidx.appcompat.widget.ViewUtils -> androidx.appcompat.widget.ViewUtils:
    42:53:void <clinit>() -> <clinit>
    55:55:void <init>() -> <init>
    66:73:void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect) -> computeFitSystemWindows
    58:58:boolean isLayoutRtl(android.view.View) -> isLayoutRtl
    80:97:void makeOptionalFitsSystemWindows(android.view.View) -> makeOptionalFitsSystemWindows
androidx.arch.core.executor.ArchTaskExecutor -> androidx.arch.core.executor.ArchTaskExecutor:
    42:50:void <clinit>() -> <clinit>
    57:60:void <init>() -> <init>
    96:97:void executeOnDiskIO(java.lang.Runnable) -> executeOnDiskIO
    111:111:java.util.concurrent.Executor getIOThreadExecutor() -> getIOThreadExecutor
    69:77:androidx.arch.core.executor.ArchTaskExecutor getInstance() -> getInstance
    106:106:java.util.concurrent.Executor getMainThreadExecutor() -> getMainThreadExecutor
    116:116:boolean isMainThread() -> isMainThread
    101:102:void postToMainThread(java.lang.Runnable) -> postToMainThread
    91:92:void setDelegate(androidx.arch.core.executor.TaskExecutor) -> setDelegate
androidx.arch.core.executor.ArchTaskExecutor$1 -> androidx.arch.core.executor.ArchTaskExecutor$1:
    42:42:void <init>() -> <init>
    45:46:void execute(java.lang.Runnable) -> execute
androidx.arch.core.executor.ArchTaskExecutor$2 -> androidx.arch.core.executor.ArchTaskExecutor$2:
    50:50:void <init>() -> <init>
    53:54:void execute(java.lang.Runnable) -> execute
androidx.arch.core.executor.DefaultTaskExecutor -> androidx.arch.core.executor.DefaultTaskExecutor:
    34:38:void <init>() -> <init>
    56:57:void executeOnDiskIO(java.lang.Runnable) -> executeOnDiskIO
    74:74:boolean isMainThread() -> isMainThread
    61:70:void postToMainThread(java.lang.Runnable) -> postToMainThread
androidx.arch.core.executor.DefaultTaskExecutor$1 -> androidx.arch.core.executor.DefaultTaskExecutor$1:
    38:41:void <init>(androidx.arch.core.executor.DefaultTaskExecutor) -> <init>
    45:47:java.lang.Thread newThread(java.lang.Runnable) -> newThread
androidx.arch.core.executor.TaskExecutor -> androidx.arch.core.executor.TaskExecutor:
    31:31:void <init>() -> <init>
    54:59:void executeOnMainThread(java.lang.Runnable) -> executeOnMainThread
androidx.arch.core.internal.FastSafeIterableMap -> androidx.arch.core.internal.FastSafeIterableMap:
    35:37:void <init>() -> <init>
    75:78:java.util.Map$Entry ceil(java.lang.Object) -> ceil
    66:66:boolean contains(java.lang.Object) -> contains
    41:41:androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object) -> get
    46:51:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    56:58:java.lang.Object remove(java.lang.Object) -> remove
androidx.arch.core.internal.SafeIterableMap -> androidx.arch.core.internal.SafeIterableMap:
    35:354:void <init>() -> <init>
    150:152:java.util.Iterator descendingIterator() -> descendingIterator
    169:169:java.util.Map$Entry eldest() -> eldest
    181:201:boolean equals(java.lang.Object) -> equals
    46:53:androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object) -> get
    206:211:int hashCode() -> hashCode
    140:142:java.util.Iterator iterator() -> iterator
    160:162:androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions() -> iteratorWithAdditions
    176:176:java.util.Map$Entry newest() -> newest
    75:86:androidx.arch.core.internal.SafeIterableMap$Entry put(java.lang.Object,java.lang.Object) -> put
    66:71:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    98:123:java.lang.Object remove(java.lang.Object) -> remove
    130:130:int size() -> size
    216:226:java.lang.String toString() -> toString
androidx.arch.core.internal.SafeIterableMap$AscendingIterator -> androidx.arch.core.internal.SafeIterableMap$AscendingIterator:
    283:284:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    293:293:androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> backward
    288:288:androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> forward
androidx.arch.core.internal.SafeIterableMap$DescendingIterator -> androidx.arch.core.internal.SafeIterableMap$DescendingIterator:
    300:301:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    310:310:androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> backward
    305:305:androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> forward
androidx.arch.core.internal.SafeIterableMap$Entry -> androidx.arch.core.internal.SafeIterableMap$Entry:
    362:365:void <init>(java.lang.Object,java.lang.Object) -> <init>
    392:399:boolean equals(java.lang.Object) -> equals
    370:370:java.lang.Object getKey() -> getKey
    376:376:java.lang.Object getValue() -> getValue
    404:404:int hashCode() -> hashCode
    381:381:java.lang.Object setValue(java.lang.Object) -> setValue
    386:386:java.lang.String toString() -> toString
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions -> androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions:
    316:319:void <init>(androidx.arch.core.internal.SafeIterableMap) -> <init>
    332:335:boolean hasNext() -> hasNext
    314:314:java.lang.Object next() -> next
    340:346:java.util.Map$Entry next() -> next
    324:328:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> supportRemove
androidx.arch.core.internal.SafeIterableMap$ListIterator -> androidx.arch.core.internal.SafeIterableMap$ListIterator:
    234:237:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    241:241:boolean hasNext() -> hasNext
    229:229:java.lang.Object next() -> next
    271:273:java.util.Map$Entry next() -> next
    263:266:androidx.arch.core.internal.SafeIterableMap$Entry nextNode() -> nextNode
    247:259:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> supportRemove
androidx.asynclayoutinflater.view.AsyncLayoutInflater -> androidx.asynclayoutinflater.view.AsyncLayoutInflater:
    75:95:void <init>(android.content.Context) -> <init>
    84:93:void inflate(int,android.view.ViewGroup,androidx.asynclayoutinflater.view.AsyncLayoutInflater$OnInflateFinishedListener) -> inflate
androidx.asynclayoutinflater.view.AsyncLayoutInflater$1 -> androidx.asynclayoutinflater.view.AsyncLayoutInflater$1:
    95:95:void <init>(androidx.asynclayoutinflater.view.AsyncLayoutInflater) -> <init>
    98:106:boolean handleMessage(android.os.Message) -> handleMessage
androidx.asynclayoutinflater.view.AsyncLayoutInflater$BasicInflater -> androidx.asynclayoutinflater.view.AsyncLayoutInflater$BasicInflater:
    127:127:void <clinit>() -> <clinit>
    134:135:void <init>(android.content.Context) -> <init>
    139:139:android.view.LayoutInflater cloneInContext(android.content.Context) -> cloneInContext
    144:156:android.view.View onCreateView(java.lang.String,android.util.AttributeSet) -> onCreateView
androidx.asynclayoutinflater.view.AsyncLayoutInflater$InflateRequest -> androidx.asynclayoutinflater.view.AsyncLayoutInflater$InflateRequest:
    122:123:void <init>() -> <init>
androidx.asynclayoutinflater.view.AsyncLayoutInflater$InflateThread -> androidx.asynclayoutinflater.view.AsyncLayoutInflater$InflateThread:
    163:165:void <clinit>() -> <clinit>
    160:172:void <init>() -> <init>
    225:230:void enqueue(androidx.asynclayoutinflater.view.AsyncLayoutInflater$InflateRequest) -> enqueue
    168:168:androidx.asynclayoutinflater.view.AsyncLayoutInflater$InflateThread getInstance() -> getInstance
    207:211:androidx.asynclayoutinflater.view.AsyncLayoutInflater$InflateRequest obtainRequest() -> obtainRequest
    215:221:void releaseRequest(androidx.asynclayoutinflater.view.AsyncLayoutInflater$InflateRequest) -> releaseRequest
    202:202:void run() -> run
    180:197:void runInner() -> runInner
androidx.collection.ArrayMap -> androidx.collection.ArrayMap:
    57:58:void <init>() -> <init>
    64:65:void <init>(int) -> <init>
    71:72:void <init>(androidx.collection.SimpleArrayMap) -> <init>
    133:133:boolean containsAll(java.util.Collection) -> containsAll
    182:182:java.util.Set entrySet() -> entrySet
    75:123:androidx.collection.MapCollections getCollection() -> getCollection
    194:194:java.util.Set keySet() -> keySet
    142:146:void putAll(java.util.Map) -> putAll
    154:154:boolean removeAll(java.util.Collection) -> removeAll
    164:164:boolean retainAll(java.util.Collection) -> retainAll
    206:206:java.util.Collection values() -> values
androidx.collection.ArrayMap$1 -> androidx.collection.ArrayMap$1:
    76:76:void <init>(androidx.collection.ArrayMap) -> <init>
    119:120:void colClear() -> colClear
    84:84:java.lang.Object colGetEntry(int,int) -> colGetEntry
    99:99:java.util.Map colGetMap() -> colGetMap
    79:79:int colGetSize() -> colGetSize
    89:89:int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    94:94:int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    104:105:void colPut(java.lang.Object,java.lang.Object) -> colPut
    114:115:void colRemoveAt(int) -> colRemoveAt
    109:109:java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
androidx.collection.ArraySet -> androidx.collection.ArraySet:
    53:54:void <clinit>() -> <clinit>
    243:244:void <init>() -> <init>
    250:258:void <init>(int) -> <init>
    264:268:void <init>(androidx.collection.ArraySet) -> <init>
    274:278:void <init>(java.util.Collection) -> <init>
    362:405:boolean add(java.lang.Object) -> add
    442:455:void addAll(androidx.collection.ArraySet) -> addAll
    752:757:boolean addAll(java.util.Collection) -> addAll
    163:199:void allocArrays(int) -> allocArrays
    415:435:void append(java.lang.Object) -> append
    285:291:void clear() -> clear
    318:318:boolean contains(java.lang.Object) -> contains
    737:743:boolean containsAll(java.util.Collection) -> containsAll
    298:308:void ensureCapacity(int) -> ensureCapacity
    591:614:boolean equals(java.lang.Object) -> equals
    203:236:void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    666:714:androidx.collection.MapCollections getCollection() -> getCollection
    622:627:int hashCode() -> hashCode
    86:120:int indexOf(java.lang.Object,int) -> indexOf
    328:328:int indexOf(java.lang.Object) -> indexOf
    124:158:int indexOfNull() -> indexOfNull
    346:346:boolean isEmpty() -> isEmpty
    726:726:java.util.Iterator iterator() -> iterator
    465:470:boolean remove(java.lang.Object) -> remove
    538:546:boolean removeAll(androidx.collection.ArraySet) -> removeAll
    767:771:boolean removeAll(java.util.Collection) -> removeAll
    479:526:java.lang.Object removeAt(int) -> removeAt
    782:789:boolean retainAll(java.util.Collection) -> retainAll
    554:554:int size() -> size
    560:562:java.lang.Object[] toArray() -> toArray
    568:577:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    639:657:java.lang.String toString() -> toString
    338:338:java.lang.Object valueAt(int) -> valueAt
androidx.collection.ArraySet$1 -> androidx.collection.ArraySet$1:
    667:667:void <init>(androidx.collection.ArraySet) -> <init>
    710:711:void colClear() -> colClear
    675:675:java.lang.Object colGetEntry(int,int) -> colGetEntry
    690:690:java.util.Map colGetMap() -> colGetMap
    670:670:int colGetSize() -> colGetSize
    680:680:int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    685:685:int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    695:696:void colPut(java.lang.Object,java.lang.Object) -> colPut
    705:706:void colRemoveAt(int) -> colRemoveAt
    700:700:java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
androidx.collection.CircularArray -> androidx.collection.CircularArray:
    49:50:void <init>() -> <init>
    58:77:void <init>(int) -> <init>
    84:89:void addFirst(java.lang.Object) -> addFirst
    96:101:void addLast(java.lang.Object) -> addLast
    138:139:void clear() -> clear
    30:43:void doubleCapacity() -> doubleCapacity
    240:243:java.lang.Object get(int) -> get
    215:218:java.lang.Object getFirst() -> getFirst
    227:230:java.lang.Object getLast() -> getLast
    259:259:boolean isEmpty() -> isEmpty
    109:115:java.lang.Object popFirst() -> popFirst
    124:131:java.lang.Object popLast() -> popLast
    182:207:void removeFromEnd(int) -> removeFromEnd
    149:172:void removeFromStart(int) -> removeFromStart
    251:251:int size() -> size
androidx.collection.CircularIntArray -> androidx.collection.CircularIntArray:
    50:51:void <init>() -> <init>
    59:78:void <init>(int) -> <init>
    85:90:void addFirst(int) -> addFirst
    97:102:void addLast(int) -> addLast
    133:134:void clear() -> clear
    31:44:void doubleCapacity() -> doubleCapacity
    197:198:int get(int) -> get
    176:177:int getFirst() -> getFirst
    186:187:int getLast() -> getLast
    214:214:boolean isEmpty() -> isEmpty
    110:113:int popFirst() -> popFirst
    122:126:int popLast() -> popLast
    161:168:void removeFromEnd(int) -> removeFromEnd
    144:151:void removeFromStart(int) -> removeFromStart
    206:206:int size() -> size
androidx.collection.ContainerHelpers -> androidx.collection.ContainerHelpers:
    20:22:void <clinit>() -> <clinit>
    83:84:void <init>() -> <init>
    46:61:int binarySearch(int[],int,int) -> binarySearch
    65:80:int binarySearch(long[],int,long) -> binarySearch
    41:41:boolean equal(java.lang.Object,java.lang.Object) -> equal
    33:37:int idealByteArraySize(int) -> idealByteArraySize
    25:25:int idealIntArraySize(int) -> idealIntArraySize
    29:29:int idealLongArraySize(int) -> idealLongArraySize
androidx.collection.LongSparseArray -> androidx.collection.LongSparseArray:
    47:47:void <clinit>() -> <clinit>
    58:59:void <init>() -> <init>
    48:78:void <init>(int) -> <init>
    369:396:void append(long,java.lang.Object) -> append
    353:362:void clear() -> clear
    46:46:java.lang.Object clone() -> clone
    85:91:androidx.collection.LongSparseArray clone() -> clone
    341:341:boolean containsKey(long) -> containsKey
    346:346:boolean containsValue(java.lang.Object) -> containsValue
    128:136:void delete(long) -> delete
    158:181:void gc() -> gc
    106:106:java.lang.Object get(long) -> get
    115:120:java.lang.Object get(long,java.lang.Object) -> get
    312:316:int indexOfKey(long) -> indexOfKey
    328:336:int indexOfValue(java.lang.Object) -> indexOfValue
    263:263:boolean isEmpty() -> isEmpty
    272:276:long keyAt(int) -> keyAt
    189:233:void put(long,java.lang.Object) -> put
    241:244:void putAll(androidx.collection.LongSparseArray) -> putAll
    142:143:void remove(long) -> remove
    149:153:void removeAt(int) -> removeAt
    299:304:void setValueAt(int,java.lang.Object) -> setValueAt
    251:255:int size() -> size
    407:428:java.lang.String toString() -> toString
    286:290:java.lang.Object valueAt(int) -> valueAt
androidx.collection.LruCache -> androidx.collection.LruCache:
    51:57:void <init>(int) -> <init>
    255:255:java.lang.Object create(java.lang.Object) -> create
    322:322:int createCount() -> createCount
    236:236:void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    281:282:void evictAll() -> evictAll
    336:336:int evictionCount() -> evictionCount
    83:126:java.lang.Object get(java.lang.Object) -> get
    307:307:int hitCount() -> hitCount
    299:299:int maxSize() -> maxSize
    315:315:int missCount() -> missCount
    138:157:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    329:329:int putCount() -> putCount
    200:216:java.lang.Object remove(java.lang.Object) -> remove
    65:73:void resize(int) -> resize
    259:263:int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    290:290:int size() -> size
    274:274:int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    344:344:java.util.Map snapshot() -> snapshot
    347:351:java.lang.String toString() -> toString
    171:191:void trimToSize(int) -> trimToSize
androidx.collection.MapCollections -> androidx.collection.MapCollections:
    32:357:void <init>() -> <init>
    459:465:boolean containsAllHelper(java.util.Map,java.util.Collection) -> containsAllHelper
    515:529:boolean equalsSetHelper(java.util.Set,java.lang.Object) -> equalsSetHelper
    533:536:java.util.Set getEntrySet() -> getEntrySet
    540:543:java.util.Set getKeySet() -> getKeySet
    547:550:java.util.Collection getValues() -> getValues
    469:474:boolean removeAllHelper(java.util.Map,java.util.Collection) -> removeAllHelper
    478:485:boolean retainAllHelper(java.util.Map,java.util.Collection) -> retainAllHelper
    490:495:java.lang.Object[] toArrayHelper(int) -> toArrayHelper
    499:511:java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> toArrayHelper
androidx.collection.MapCollections$ArrayIterator -> androidx.collection.MapCollections$ArrayIterator:
    41:46:void <init>(androidx.collection.MapCollections,int) -> <init>
    50:50:boolean hasNext() -> hasNext
    55:59:java.lang.Object next() -> next
    64:71:void remove() -> remove
androidx.collection.MapCollections$EntrySet -> androidx.collection.MapCollections$EntrySet:
    167:167:void <init>(androidx.collection.MapCollections) -> <init>
    167:167:boolean add(java.lang.Object) -> add
    170:170:boolean add(java.util.Map$Entry) -> add
    175:179:boolean addAll(java.util.Collection) -> addAll
    184:185:void clear() -> clear
    189:197:boolean contains(java.lang.Object) -> contains
    202:208:boolean containsAll(java.util.Collection) -> containsAll
    253:253:boolean equals(java.lang.Object) -> equals
    258:265:int hashCode() -> hashCode
    213:213:boolean isEmpty() -> isEmpty
    218:218:java.util.Iterator iterator() -> iterator
    223:223:boolean remove(java.lang.Object) -> remove
    228:228:boolean removeAll(java.util.Collection) -> removeAll
    233:233:boolean retainAll(java.util.Collection) -> retainAll
    238:238:int size() -> size
    243:243:java.lang.Object[] toArray() -> toArray
    248:248:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.MapCollections$KeySet -> androidx.collection.MapCollections$KeySet:
    269:269:void <init>(androidx.collection.MapCollections) -> <init>
    273:273:boolean add(java.lang.Object) -> add
    278:278:boolean addAll(java.util.Collection) -> addAll
    283:284:void clear() -> clear
    288:288:boolean contains(java.lang.Object) -> contains
    293:293:boolean containsAll(java.util.Collection) -> containsAll
    343:343:boolean equals(java.lang.Object) -> equals
    348:353:int hashCode() -> hashCode
    298:298:boolean isEmpty() -> isEmpty
    303:303:java.util.Iterator iterator() -> iterator
    308:313:boolean remove(java.lang.Object) -> remove
    318:318:boolean removeAll(java.util.Collection) -> removeAll
    323:323:boolean retainAll(java.util.Collection) -> retainAll
    328:328:int size() -> size
    333:333:java.lang.Object[] toArray() -> toArray
    338:338:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.MapCollections$MapIterator -> androidx.collection.MapCollections$MapIterator:
    77:82:void <init>(androidx.collection.MapCollections) -> <init>
    137:146:boolean equals(java.lang.Object) -> equals
    110:114:java.lang.Object getKey() -> getKey
    119:123:java.lang.Object getValue() -> getValue
    86:86:boolean hasNext() -> hasNext
    151:158:int hashCode() -> hashCode
    74:74:java.lang.Object next() -> next
    91:94:java.util.Map$Entry next() -> next
    99:106:void remove() -> remove
    128:132:java.lang.Object setValue(java.lang.Object) -> setValue
    163:163:java.lang.String toString() -> toString
androidx.collection.MapCollections$ValuesCollection -> androidx.collection.MapCollections$ValuesCollection:
    357:357:void <init>(androidx.collection.MapCollections) -> <init>
    361:361:boolean add(java.lang.Object) -> add
    366:366:boolean addAll(java.util.Collection) -> addAll
    371:372:void clear() -> clear
    376:376:boolean contains(java.lang.Object) -> contains
    381:387:boolean containsAll(java.util.Collection) -> containsAll
    392:392:boolean isEmpty() -> isEmpty
    397:397:java.util.Iterator iterator() -> iterator
    402:407:boolean remove(java.lang.Object) -> remove
    412:423:boolean removeAll(java.util.Collection) -> removeAll
    428:439:boolean retainAll(java.util.Collection) -> retainAll
    444:444:int size() -> size
    449:449:java.lang.Object[] toArray() -> toArray
    454:454:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.SimpleArrayMap -> androidx.collection.SimpleArrayMap:
    236:240:void <init>() -> <init>
    246:254:void <init>(int) -> <init>
    260:264:void <init>(androidx.collection.SimpleArrayMap) -> <init>
    165:197:void allocArrays(int) -> allocArrays
    77:80:int binarySearchHashes(int[],int,int) -> binarySearchHashes
    270:282:void clear() -> clear
    312:312:boolean containsKey(java.lang.Object) -> containsKey
    352:352:boolean containsValue(java.lang.Object) -> containsValue
    289:303:void ensureCapacity(int) -> ensureCapacity
    594:648:boolean equals(java.lang.Object) -> equals
    201:230:void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    363:364:java.lang.Object get(java.lang.Object) -> get
    656:663:int hashCode() -> hashCode
    88:122:int indexOf(java.lang.Object,int) -> indexOf
    322:322:int indexOfKey(java.lang.Object) -> indexOfKey
    126:160:int indexOfNull() -> indexOfNull
    326:341:int indexOfValue(java.lang.Object) -> indexOfValue
    402:402:boolean isEmpty() -> isEmpty
    373:373:java.lang.Object keyAt(int) -> keyAt
    415:473:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    481:494:void putAll(androidx.collection.SimpleArrayMap) -> putAll
    504:509:java.lang.Object remove(java.lang.Object) -> remove
    518:574:java.lang.Object removeAt(int) -> removeAt
    392:395:java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
    581:581:int size() -> size
    675:700:java.lang.String toString() -> toString
    382:382:java.lang.Object valueAt(int) -> valueAt
androidx.collection.SparseArrayCompat -> androidx.collection.SparseArrayCompat:
    51:51:void <clinit>() -> <clinit>
    62:63:void <init>() -> <init>
    52:82:void <init>(int) -> <init>
    388:415:void append(int,java.lang.Object) -> append
    372:381:void clear() -> clear
    50:50:java.lang.Object clone() -> clone
    89:95:androidx.collection.SparseArrayCompat clone() -> clone
    360:360:boolean containsKey(int) -> containsKey
    365:365:boolean containsValue(java.lang.Object) -> containsValue
    132:140:void delete(int) -> delete
    175:198:void gc() -> gc
    110:110:java.lang.Object get(int) -> get
    119:124:java.lang.Object get(int,java.lang.Object) -> get
    329:333:int indexOfKey(int) -> indexOfKey
    347:355:int indexOfValue(java.lang.Object) -> indexOfValue
    280:280:boolean isEmpty() -> isEmpty
    289:293:int keyAt(int) -> keyAt
    206:250:void put(int,java.lang.Object) -> put
    258:261:void putAll(androidx.collection.SparseArrayCompat) -> putAll
    146:147:void remove(int) -> remove
    153:157:void removeAt(int) -> removeAt
    166:170:void removeAtRange(int,int) -> removeAtRange
    316:321:void setValueAt(int,java.lang.Object) -> setValueAt
    268:272:int size() -> size
    426:447:java.lang.String toString() -> toString
    303:307:java.lang.Object valueAt(int) -> valueAt
androidx.coordinatorlayout.widget.CoordinatorLayout -> androidx.coordinatorlayout.widget.CoordinatorLayout:
    116:150:void <clinit>() -> <clinit>
    197:198:void <init>(android.content.Context) -> <init>
    201:202:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    166:228:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    154:158:android.graphics.Rect acquireTempRect() -> acquireTempRect
    1580:1592:void addPreDrawListener() -> addPreDrawListener
    1724:1724:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    1250:1255:int clamp(int,int,int) -> clamp
    1036:1048:void constrainChildRect(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams,android.graphics.Rect,int,int) -> constrainChildRect
    825:846:androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsetsToBehaviors(androidx.core.view.WindowInsetsCompat) -> dispatchApplyWindowInsetsToBehaviors
    1489:1501:void dispatchDependentViewsChanged(android.view.View) -> dispatchDependentViewsChanged
    1686:1699:boolean doViewsOverlap(android.view.View,android.view.View) -> doViewsOverlap
    1222:1246:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    305:318:void drawableStateChanged() -> drawableStateChanged
    1549:1566:void ensurePreDrawListener() -> ensurePreDrawListener
    111:111:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1719:1719:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    111:111:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    111:111:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1704:1704:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1709:1714:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    949:958:void getChildRect(android.view.View,boolean,android.graphics.Rect) -> getChildRect
    1513:1518:java.util.List getDependencies(android.view.View) -> getDependencies
    1541:1542:java.util.List getDependencySortedChildren() -> getDependencySortedChildren
    1531:1536:java.util.List getDependents(android.view.View) -> getDependents
    705:706:void getDescendantRect(android.view.View,android.graphics.Rect) -> getDescendantRect
    1060:1066:void getDesiredAnchoredChildRect(android.view.View,int,android.graphics.Rect,android.graphics.Rect) -> getDesiredAnchoredChildRect
    962:1033:void getDesiredAnchoredChildRectWithoutConstraints(android.view.View,int,android.graphics.Rect,android.graphics.Rect,androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams,int,int) -> getDesiredAnchoredChildRectWithoutConstraints
    574:584:int getKeyline(int) -> getKeyline
    935:937:void getLastChildRect(android.view.View,android.graphics.Rect) -> getLastChildRect
    374:374:androidx.core.view.WindowInsetsCompat getLastWindowInsets() -> getLastWindowInsets
    1950:1950:int getNestedScrollAxes() -> getNestedScrollAxes
    627:658:androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams getResolvedLayoutParams(android.view.View) -> getResolvedLayoutParams
    300:300:android.graphics.drawable.Drawable getStatusBarBackground() -> getStatusBarBackground
    715:715:int getSuggestedMinimumHeight() -> getSuggestedMinimumHeight
    710:710:int getSuggestedMinimumWidth() -> getSuggestedMinimumWidth
    416:429:void getTopSortedChildren(java.util.List) -> getTopSortedChildren
    1572:1572:boolean hasDependencies(android.view.View) -> hasDependencies
    1668:1673:boolean isPointInChildBounds(android.view.View,int,int) -> isPointInChildBounds
    1163:1187:void layoutChild(android.view.View,int) -> layoutChild
    1076:1086:void layoutChildWithAnchor(android.view.View,android.view.View,int) -> layoutChildWithAnchor
    1100:1153:void layoutChildWithKeyline(android.view.View,int,int) -> layoutChildWithKeyline
    1380:1458:void offsetChildByInset(android.view.View,android.graphics.Rect,int) -> offsetChildByInset
    1617:1656:void offsetChildToAnchor(android.view.View,int) -> offsetChildToAnchor
    237:252:void onAttachedToWindow() -> onAttachedToWindow
    1275:1377:void onChildViewsChanged(int) -> onChildViewsChanged
    256:266:void onDetachedFromWindow() -> onDetachedFromWindow
    896:904:void onDraw(android.graphics.Canvas) -> onDraw
    503:516:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    876:892:void onLayout(boolean,int,int,int,int) -> onLayout
    860:872:void onLayoutChild(android.view.View,int) -> onLayoutChild
    739:822:void onMeasure(int,int) -> onMeasure
    733:735:void onMeasureChild(android.view.View,int,int,int,int) -> onMeasureChild
    1896:1920:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    1925:1945:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    1850:1851:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    1855:1892:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    1813:1815:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    1820:1846:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    1759:1760:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    1764:1781:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    3147:3170:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    3174:3192:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1729:1729:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    1734:1754:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    1785:1786:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    1790:1808:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    521:561:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    588:622:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior parseBehavior(android.content.Context,android.util.AttributeSet,java.lang.String) -> parseBehavior
    432:498:boolean performIntercept(android.view.MotionEvent,int) -> performIntercept
    662:695:void prepareChildren() -> prepareChildren
    923:925:void recordLastChildRect(android.view.View,android.graphics.Rect) -> recordLastChildRect
    162:164:void releaseTempRect(android.graphics.Rect) -> releaseTempRect
    1599:1606:void removePreDrawListener() -> removePreDrawListener
    3197:3205:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    566:571:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    384:409:void resetTouchBehaviors(boolean) -> resetTouchBehaviors
    1217:1217:int resolveAnchoredChildGravity(int) -> resolveAnchoredChildGravity
    1195:1201:int resolveGravity(int) -> resolveGravity
    1209:1209:int resolveKeylineGravity(int) -> resolveKeylineGravity
    908:910:void setFitsSystemWindows(boolean) -> setFitsSystemWindows
    1461:1467:void setInsetOffsetX(android.view.View,int) -> setInsetOffsetX
    1470:1476:void setInsetOffsetY(android.view.View,int) -> setInsetOffsetY
    232:233:void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener) -> setOnHierarchyChangeListener
    275:291:void setStatusBarBackground(android.graphics.drawable.Drawable) -> setStatusBarBackground
    353:354:void setStatusBarBackgroundColor(int) -> setStatusBarBackgroundColor
    342:343:void setStatusBarBackgroundResource(int) -> setStatusBarBackgroundResource
    327:333:void setVisibility(int) -> setVisibility
    357:366:androidx.core.view.WindowInsetsCompat setWindowInsets(androidx.core.view.WindowInsetsCompat) -> setWindowInsets
    3209:3233:void setupForInsets() -> setupForInsets
    322:322:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.coordinatorlayout.widget.CoordinatorLayout$1 -> androidx.coordinatorlayout.widget.CoordinatorLayout$1:
    3216:3216:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout) -> <init>
    3220:3220:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior -> androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior:
    2024:2025:void <init>() -> <init>
    2035:2036:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2162:2162:boolean blocksInteractionBelow(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> blocksInteractionBelow
    2705:2705:boolean getInsetDodgeRect(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect) -> getInsetDodgeRect
    2128:2128:int getScrimColor(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> getScrimColor
    2146:2146:float getScrimOpacity(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> getScrimOpacity
    2318:2319:java.lang.Object getTag(android.view.View) -> getTag
    2189:2189:boolean layoutDependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> layoutDependsOn
    2625:2625:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
    2047:2047:void onAttachedToLayoutParams(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> onAttachedToLayoutParams
    2219:2219:boolean onDependentViewChanged(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewChanged
    2238:2238:void onDependentViewRemoved(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onDependentViewRemoved
    2057:2057:void onDetachedFromLayoutParams() -> onDetachedFromLayoutParams
    2084:2084:boolean onInterceptTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onInterceptTouchEvent
    2292:2292:boolean onLayoutChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int) -> onLayoutChild
    2263:2263:boolean onMeasureChild(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,int,int,int,int) -> onMeasureChild
    2577:2577:boolean onNestedFling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float,boolean) -> onNestedFling
    2605:2605:boolean onNestedPreFling(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,float,float) -> onNestedPreFling
    2508:2508:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[]) -> onNestedPreScroll
    2542:2545:void onNestedPreScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int[],int) -> onNestedPreScroll
    2458:2458:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int) -> onNestedScroll
    2492:2496:void onNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int,int,int,int,int) -> onNestedScroll
    2376:2376:void onNestedScrollAccepted(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int) -> onNestedScrollAccepted
    2402:2406:void onNestedScrollAccepted(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    2647:2647:boolean onRequestChildRectangleOnScreen(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.graphics.Rect,boolean) -> onRequestChildRectangleOnScreen
    2665:2665:void onRestoreInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.os.Parcelable) -> onRestoreInstanceState
    2687:2687:android.os.Parcelable onSaveInstanceState(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> onSaveInstanceState
    2331:2331:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int) -> onStartNestedScroll
    2359:2363:boolean onStartNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    2417:2417:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> onStopNestedScroll
    2442:2445:void onStopNestedScroll(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View,int) -> onStopNestedScroll
    2108:2108:boolean onTouchEvent(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.MotionEvent) -> onTouchEvent
    2305:2307:void setTag(android.view.View,java.lang.Object) -> setTag
androidx.coordinatorlayout.widget.CoordinatorLayout$HierarchyChangeListener -> androidx.coordinatorlayout.widget.CoordinatorLayout$HierarchyChangeListener:
    3125:3126:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout) -> <init>
    3130:3133:void onChildViewAdded(android.view.View,android.view.View) -> onChildViewAdded
    3137:3142:void onChildViewRemoved(android.view.View,android.view.View) -> onChildViewRemoved
androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams -> androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams:
    2718:2779:void <init>(int,int) -> <init>
    2718:2814:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2718:2818:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout$LayoutParams) -> <init>
    2718:2822:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2718:2826:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2912:2912:boolean checkAnchorChanged() -> checkAnchorChanged
    3007:3009:boolean dependsOn(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View,android.view.View) -> dependsOn
    2923:2926:boolean didBlockInteraction() -> didBlockInteraction
    3032:3040:android.view.View findAnchorView(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> findAnchorView
    2835:2835:int getAnchorId() -> getAnchorId
    2861:2861:androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior() -> getBehavior
    2987:2987:boolean getChangedAfterNestedScroll() -> getChangedAfterNestedScroll
    2904:2904:android.graphics.Rect getLastChildRect() -> getLastChildRect
    3019:3020:void invalidateAnchor() -> invalidateAnchor
    2941:2946:boolean isBlockingInteractionBelow(androidx.coordinatorlayout.widget.CoordinatorLayout,android.view.View) -> isBlockingInteractionBelow
    2977:2983:boolean isNestedScrollAccepted(int) -> isNestedScrollAccepted
    2995:2996:void resetChangedAfterNestedScroll() -> resetChangedAfterNestedScroll
    2962:2963:void resetNestedScroll(int) -> resetNestedScroll
    2958:2959:void resetTouchBehaviorTracking() -> resetTouchBehaviorTracking
    3048:3085:void resolveAnchorView(android.view.View,androidx.coordinatorlayout.widget.CoordinatorLayout) -> resolveAnchorView
    2849:2851:void setAnchorId(int) -> setAnchorId
    2874:2889:void setBehavior(androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior) -> setBehavior
    2991:2992:void setChangedAfterNestedScroll(boolean) -> setChangedAfterNestedScroll
    2896:2897:void setLastChildRect(android.graphics.Rect) -> setLastChildRect
    2966:2974:void setNestedScrollAccepted(int,boolean) -> setNestedScrollAccepted
    3117:3120:boolean shouldDodge(android.view.View,int) -> shouldDodge
    3093:3110:boolean verifyAnchorView(android.view.View,androidx.coordinatorlayout.widget.CoordinatorLayout) -> verifyAnchorView
androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener -> androidx.coordinatorlayout.widget.CoordinatorLayout$OnPreDrawListener:
    1953:1953:void <init>(androidx.coordinatorlayout.widget.CoordinatorLayout) -> <init>
    1956:1957:boolean onPreDraw() -> onPreDraw
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState -> androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState:
    3277:3277:void <clinit>() -> <clinit>
    3239:3252:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    3255:3256:void <init>(android.os.Parcelable) -> <init>
    3260:3275:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState$1 -> androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState$1:
    3278:3278:void <init>() -> <init>
    3278:3278:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3278:3278:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    3281:3281:androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    3286:3286:androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    3278:3278:java.lang.Object[] newArray(int) -> newArray
    3291:3291:androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState[] newArray(int) -> newArray
androidx.coordinatorlayout.widget.CoordinatorLayout$ViewElevationComparator -> androidx.coordinatorlayout.widget.CoordinatorLayout$ViewElevationComparator:
    1964:1964:void <init>() -> <init>
    1964:1964:int compare(java.lang.Object,java.lang.Object) -> compare
    1967:1974:int compare(android.view.View,android.view.View) -> compare
androidx.coordinatorlayout.widget.DirectedAcyclicGraph -> androidx.coordinatorlayout.widget.DirectedAcyclicGraph:
    39:44:void <init>() -> <init>
    76:89:void addEdge(java.lang.Object,java.lang.Object) -> addEdge
    54:57:void addNode(java.lang.Object) -> addNode
    143:150:void clear() -> clear
    63:63:boolean contains(java.lang.Object) -> contains
    174:194:void dfs(java.lang.Object,java.util.ArrayList,java.util.HashSet) -> dfs
    205:209:java.util.ArrayList getEmptyList() -> getEmptyList
    98:98:java.util.List getIncomingEdges(java.lang.Object) -> getIncomingEdges
    109:119:java.util.List getOutgoingEdges(java.lang.Object) -> getOutgoingEdges
    162:170:java.util.ArrayList getSortedList() -> getSortedList
    130:136:boolean hasOutgoingEdges(java.lang.Object) -> hasOutgoingEdges
    213:215:void poolList(java.util.ArrayList) -> poolList
    200:200:int size() -> size
androidx.coordinatorlayout.widget.ViewGroupUtils -> androidx.coordinatorlayout.widget.ViewGroupUtils:
    35:36:void <clinit>() -> <clinit>
    96:97:void <init>() -> <init>
    77:79:void getDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> getDescendantRect
    82:94:void offsetDescendantMatrix(android.view.ViewParent,android.view.View,android.graphics.Matrix) -> offsetDescendantMatrix
    48:67:void offsetDescendantRect(android.view.ViewGroup,android.view.View,android.graphics.Rect) -> offsetDescendantRect
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat -> androidx.core.accessibilityservice.AccessibilityServiceInfoCompat:
    181:181:void <init>() -> <init>
    307:317:java.lang.String capabilityToString(int) -> capabilityToString
    215:242:java.lang.String feedbackTypeToString(int) -> feedbackTypeToString
    255:269:java.lang.String flagToString(int) -> flagToString
    286:293:int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
    197:201:java.lang.String loadDescription(android.accessibilityservice.AccessibilityServiceInfo,android.content.pm.PackageManager) -> loadDescription
androidx.core.app.ActivityCompat -> androidx.core.app.ActivityCompat:
    149:151:void <init>() -> <init>
    287:292:void finishAffinity(android.app.Activity) -> finishAffinity
    304:309:void finishAfterTransition(android.app.Activity) -> finishAfterTransition
    169:169:androidx.core.app.ActivityCompat$PermissionCompatDelegate getPermissionCompatDelegate() -> getPermissionCompatDelegate
    329:341:android.net.Uri getReferrer(android.app.Activity) -> getReferrer
    207:208:boolean invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    411:414:void postponeEnterTransition(android.app.Activity) -> postponeEnterTransition
    565:565:androidx.core.view.DragAndDropPermissionsCompat requestDragAndDropPermissions(android.app.Activity,android.view.DragEvent) -> requestDragAndDropPermissions
    491:524:void requestPermissions(android.app.Activity,java.lang.String[],int) -> requestPermissions
    362:370:android.view.View requireViewById(android.app.Activity,int) -> requireViewById
    383:389:void setEnterSharedElementCallback(android.app.Activity,androidx.core.app.SharedElementCallback) -> setEnterSharedElementCallback
    402:408:void setExitSharedElementCallback(android.app.Activity,androidx.core.app.SharedElementCallback) -> setExitSharedElementCallback
    161:162:void setPermissionCompatDelegate(androidx.core.app.ActivityCompat$PermissionCompatDelegate) -> setPermissionCompatDelegate
    548:551:boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String) -> shouldShowRequestPermissionRationale
    233:238:void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    270:277:void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
    417:420:void startPostponedEnterTransition(android.app.Activity) -> startPostponedEnterTransition
androidx.core.app.ActivityCompat$1 -> androidx.core.app.ActivityCompat$1:
    505:505:void <init>(java.lang.String[],android.app.Activity,int) -> <init>
    508:521:void run() -> run
androidx.core.app.ActivityCompat$SharedElementCallback21Impl -> androidx.core.app.ActivityCompat$SharedElementCallback21Impl:
    572:574:void <init>(androidx.core.app.SharedElementCallback) -> <init>
    603:603:android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    609:609:android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
    597:598:void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    592:593:void onRejectSharedElements(java.util.List) -> onRejectSharedElements
    586:588:void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    579:581:void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
    616:623:void onSharedElementsArrived(java.util.List,java.util.List,android.app.SharedElementCallback$OnSharedElementsReadyListener) -> onSharedElementsArrived
androidx.core.app.ActivityCompat$SharedElementCallback21Impl$1 -> androidx.core.app.ActivityCompat$SharedElementCallback21Impl$1:
    617:617:void <init>(androidx.core.app.ActivityCompat$SharedElementCallback21Impl,android.app.SharedElementCallback$OnSharedElementsReadyListener) -> <init>
    620:621:void onSharedElementsReady() -> onSharedElementsReady
androidx.core.app.ActivityManagerCompat -> androidx.core.app.ActivityManagerCompat:
    30:30:void <init>() -> <init>
    40:43:boolean isLowRamDevice(android.app.ActivityManager) -> isLowRamDevice
androidx.core.app.ActivityOptionsCompat -> androidx.core.app.ActivityOptionsCompat:
    299:300:void <init>() -> <init>
    324:324:android.graphics.Rect getLaunchBounds() -> getLaunchBounds
    246:249:androidx.core.app.ActivityOptionsCompat makeBasic() -> makeBasic
    122:126:androidx.core.app.ActivityOptionsCompat makeClipRevealAnimation(android.view.View,int,int,int,int) -> makeClipRevealAnimation
    68:72:androidx.core.app.ActivityOptionsCompat makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    98:102:androidx.core.app.ActivityOptionsCompat makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    179:183:androidx.core.app.ActivityOptionsCompat makeSceneTransitionAnimation(android.app.Activity,android.view.View,java.lang.String) -> makeSceneTransitionAnimation
    207:219:androidx.core.app.ActivityOptionsCompat makeSceneTransitionAnimation(android.app.Activity,androidx.core.util.Pair[]) -> makeSceneTransitionAnimation
    234:237:androidx.core.app.ActivityOptionsCompat makeTaskLaunchBehind() -> makeTaskLaunchBehind
    151:155:androidx.core.app.ActivityOptionsCompat makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    374:374:void requestUsageTimeReport(android.app.PendingIntent) -> requestUsageTimeReport
    314:314:androidx.core.app.ActivityOptionsCompat setLaunchBounds(android.graphics.Rect) -> setLaunchBounds
    336:336:android.os.Bundle toBundle() -> toBundle
    346:346:void update(androidx.core.app.ActivityOptionsCompat) -> update
androidx.core.app.ActivityOptionsCompat$ActivityOptionsCompatImpl -> androidx.core.app.ActivityOptionsCompat$ActivityOptionsCompatImpl:
    256:258:void <init>(android.app.ActivityOptions) -> <init>
    292:295:android.graphics.Rect getLaunchBounds() -> getLaunchBounds
    276:279:void requestUsageTimeReport(android.app.PendingIntent) -> requestUsageTimeReport
    283:287:androidx.core.app.ActivityOptionsCompat setLaunchBounds(android.graphics.Rect) -> setLaunchBounds
    262:262:android.os.Bundle toBundle() -> toBundle
    267:272:void update(androidx.core.app.ActivityOptionsCompat) -> update
androidx.core.app.AlarmManagerCompat -> androidx.core.app.AlarmManagerCompat:
    229:230:void <init>() -> <init>
    59:66:void setAlarmClock(android.app.AlarmManager,long,android.app.PendingIntent,android.app.PendingIntent) -> setAlarmClock
    117:122:void setAndAllowWhileIdle(android.app.AlarmManager,int,long,android.app.PendingIntent) -> setAndAllowWhileIdle
    162:167:void setExact(android.app.AlarmManager,int,long,android.app.PendingIntent) -> setExact
    222:227:void setExactAndAllowWhileIdle(android.app.AlarmManager,int,long,android.app.PendingIntent) -> setExactAndAllowWhileIdle
androidx.core.app.AppComponentFactory -> androidx.core.app.AppComponentFactory:
    40:40:void <init>() -> <init>
    48:48:android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateActivity
    127:129:android.app.Activity instantiateActivityCompat(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateActivityCompat
    57:57:android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String) -> instantiateApplication
    104:106:android.app.Application instantiateApplicationCompat(java.lang.ClassLoader,java.lang.String) -> instantiateApplicationCompat
    76:76:android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String) -> instantiateProvider
    192:194:android.content.ContentProvider instantiateProviderCompat(java.lang.ClassLoader,java.lang.String) -> instantiateProviderCompat
    67:67:android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateReceiver
    146:149:android.content.BroadcastReceiver instantiateReceiverCompat(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateReceiverCompat
    85:85:android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateService
    170:172:android.app.Service instantiateServiceCompat(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateServiceCompat
androidx.core.app.AppLaunchChecker -> androidx.core.app.AppLaunchChecker:
    87:88:void <init>() -> <init>
    51:52:boolean hasStartedFromLauncher(android.content.Context) -> hasStartedFromLauncher
    67:82:void onActivityCreate(android.app.Activity) -> onActivityCreate
androidx.core.app.AppOpsManagerCompat -> androidx.core.app.AppOpsManagerCompat:
    60:60:void <init>() -> <init>
    104:109:int noteOp(android.content.Context,java.lang.String,int,java.lang.String) -> noteOp
    124:129:int noteOpNoThrow(android.content.Context,java.lang.String,int,java.lang.String) -> noteOpNoThrow
    156:160:int noteProxyOp(android.content.Context,java.lang.String,java.lang.String) -> noteProxyOp
    175:179:int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String) -> noteProxyOpNoThrow
    75:78:java.lang.String permissionToOp(java.lang.String) -> permissionToOp
androidx.core.app.BundleCompat -> androidx.core.app.BundleCompat:
    94:94:void <init>() -> <init>
    105:108:android.os.IBinder getBinder(android.os.Bundle,java.lang.String) -> getBinder
    121:126:void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder) -> putBinder
androidx.core.app.BundleCompat$BundleCompatBaseImpl -> androidx.core.app.BundleCompat$BundleCompatBaseImpl:
    44:45:void <init>() -> <init>
    48:67:android.os.IBinder getBinder(android.os.Bundle,java.lang.String) -> getBinder
    71:91:void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder) -> putBinder
androidx.core.app.ComponentActivity -> androidx.core.app.ComponentActivity:
    46:132:void <init>() -> <init>
    122:126:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    113:117:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    94:94:androidx.core.app.ComponentActivity$ExtraData getExtraData(java.lang.Class) -> getExtraData
    99:99:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    75:77:void onCreate(android.os.Bundle) -> onCreate
    82:84:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    69:70:void putExtraData(androidx.core.app.ComponentActivity$ExtraData) -> putExtraData
    108:108:boolean superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
androidx.core.app.ComponentActivity$ExtraData -> androidx.core.app.ComponentActivity$ExtraData:
    133:133:void <init>() -> <init>
androidx.core.app.CoreComponentFactory -> androidx.core.app.CoreComponentFactory:
    37:86:void <init>() -> <init>
    72:78:java.lang.Object checkCompatWrapper(java.lang.Object) -> checkCompatWrapper
    43:43:android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateActivity
    49:49:android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String) -> instantiateApplication
    62:62:android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String) -> instantiateProvider
    56:56:android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateReceiver
    68:68:android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateService
androidx.core.app.FrameMetricsAggregator -> androidx.core.app.FrameMetricsAggregator:
    202:203:void <init>() -> <init>
    215:221:void <init>(int) -> <init>
    229:230:void add(android.app.Activity) -> add
    304:304:android.util.SparseIntArray[] getMetrics() -> getMetrics
    246:246:android.util.SparseIntArray[] remove(android.app.Activity) -> remove
    276:276:android.util.SparseIntArray[] reset() -> reset
    263:263:android.util.SparseIntArray[] stop() -> stop
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl -> androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl:
    344:345:void <clinit>() -> <clinit>
    342:351:void <init>(int) -> <init>
    414:426:void add(android.app.Activity) -> add
    402:410:void addDurationItem(android.util.SparseIntArray,long) -> addDurationItem
    456:456:android.util.SparseIntArray[] getMetrics() -> getMetrics
    430:437:android.util.SparseIntArray[] remove(android.app.Activity) -> remove
    461:463:android.util.SparseIntArray[] reset() -> reset
    442:451:android.util.SparseIntArray[] stop() -> stop
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl$1 -> androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl$1:
    352:352:void <init>(androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl) -> <init>
    356:398:void onFrameMetricsAvailable(android.view.Window,android.view.FrameMetrics,int) -> onFrameMetricsAvailable
androidx.core.app.FrameMetricsAggregator$FrameMetricsBaseImpl -> androidx.core.app.FrameMetricsAggregator$FrameMetricsBaseImpl:
    312:313:void <init>() -> <init>
    316:316:void add(android.app.Activity) -> add
    327:327:android.util.SparseIntArray[] getMetrics() -> getMetrics
    319:319:android.util.SparseIntArray[] remove(android.app.Activity) -> remove
    331:331:android.util.SparseIntArray[] reset() -> reset
    323:323:android.util.SparseIntArray[] stop() -> stop
androidx.core.app.JobIntentService -> androidx.core.app.JobIntentService:
    105:106:void <clinit>() -> <clinit>
    99:422:void <init>() -> <init>
    639:648:androidx.core.app.JobIntentService$GenericWorkItem dequeueWork() -> dequeueWork
    599:603:boolean doStopCurrentWork() -> doStopCurrentWork
    501:502:void enqueueWork(android.content.Context,java.lang.Class,int,android.content.Intent) -> enqueueWork
    517:525:void enqueueWork(android.content.Context,android.content.ComponentName,int,android.content.Intent) -> enqueueWork
    607:615:void ensureProcessorRunningLocked(boolean) -> ensureProcessorRunningLocked
    529:541:androidx.core.app.JobIntentService$WorkEnqueuer getWorkEnqueuer(android.content.Context,android.content.ComponentName,boolean,int) -> getWorkEnqueuer
    580:580:boolean isStopped() -> isStopped
    465:470:android.os.IBinder onBind(android.content.Intent) -> onBind
    426:436:void onCreate() -> onCreate
    476:483:void onDestroy() -> onDestroy
    444:455:int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    595:595:boolean onStopCurrentWork() -> onStopCurrentWork
    618:636:void processorFinished() -> processorFinished
    572:573:void setInterruptIfStopped(boolean) -> setInterruptIfStopped
androidx.core.app.JobIntentService$CommandProcessor -> androidx.core.app.JobIntentService$CommandProcessor:
    383:383:void <init>(androidx.core.app.JobIntentService) -> <init>
    383:383:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    390:399:java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    383:383:void onCancelled(java.lang.Object) -> onCancelled
    404:405:void onCancelled(java.lang.Void) -> onCancelled
    383:383:void onPostExecute(java.lang.Object) -> onPostExecute
    409:410:void onPostExecute(java.lang.Void) -> onPostExecute
androidx.core.app.JobIntentService$CompatWorkEnqueuer -> androidx.core.app.JobIntentService$CompatWorkEnqueuer:
    163:175:void <init>(android.content.Context,android.content.ComponentName) -> <init>
    179:197:void enqueueWork(android.content.Intent) -> enqueueWork
    224:235:void serviceProcessingFinished() -> serviceProcessingFinished
    210:220:void serviceProcessingStarted() -> serviceProcessingStarted
    201:206:void serviceStartReceived() -> serviceStartReceived
androidx.core.app.JobIntentService$CompatWorkItem -> androidx.core.app.JobIntentService$CompatWorkItem:
    363:366:void <init>(androidx.core.app.JobIntentService,android.content.Intent,int) -> <init>
    376:377:void complete() -> complete
    370:370:android.content.Intent getIntent() -> getIntent
androidx.core.app.JobIntentService$JobServiceEngineImpl -> androidx.core.app.JobIntentService$JobServiceEngineImpl:
    249:277:void <init>(androidx.core.app.JobIntentService) -> <init>
    281:281:android.os.IBinder compatGetBinder() -> compatGetBinder
    311:321:androidx.core.app.JobIntentService$GenericWorkItem dequeueWork() -> dequeueWork
    287:290:boolean onStartJob(android.app.job.JobParameters) -> onStartJob
    296:302:boolean onStopJob(android.app.job.JobParameters) -> onStopJob
androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem -> androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem:
    255:257:void <init>(androidx.core.app.JobIntentService$JobServiceEngineImpl,android.app.job.JobWorkItem) -> <init>
    266:271:void complete() -> complete
    261:261:android.content.Intent getIntent() -> getIntent
androidx.core.app.JobIntentService$JobWorkEnqueuer -> androidx.core.app.JobIntentService$JobWorkEnqueuer:
    332:338:void <init>(android.content.Context,android.content.ComponentName,int) -> <init>
    343:344:void enqueueWork(android.content.Intent) -> enqueueWork
androidx.core.app.JobIntentService$WorkEnqueuer -> androidx.core.app.JobIntentService$WorkEnqueuer:
    118:120:void <init>(android.content.Context,android.content.ComponentName) -> <init>
    123:130:void ensureJobId(int) -> ensureJobId
    141:141:void serviceProcessingFinished() -> serviceProcessingFinished
    138:138:void serviceProcessingStarted() -> serviceProcessingStarted
    135:135:void serviceStartReceived() -> serviceStartReceived
androidx.core.app.NavUtils -> androidx.core.app.NavUtils:
    262:263:void <init>() -> <init>
    129:150:android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    168:178:android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class) -> getParentActivityIntent
    195:205:android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    220:223:java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    240:258:java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
    81:92:void navigateUpFromSameTask(android.app.Activity) -> navigateUpFromSameTask
    108:115:void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    60:64:boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
androidx.core.app.NotificationCompat -> androidx.core.app.NotificationCompat:
    5315:5316:void <init>() -> <init>
    5071:5086:androidx.core.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    5093:5127:androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action) -> getActionCompatFromAction
    5055:5060:int getActionCount(android.app.Notification) -> getActionCount
    5279:5282:int getBadgeIconType(android.app.Notification) -> getBadgeIconType
    5163:5166:java.lang.String getCategory(android.app.Notification) -> getCategory
    5254:5257:java.lang.String getChannelId(android.app.Notification) -> getChannelId
    5154:5154:java.lang.CharSequence getContentTitle(android.app.Notification) -> getContentTitle
    5041:5046:android.os.Bundle getExtras(android.app.Notification) -> getExtras
    5194:5202:java.lang.String getGroup(android.app.Notification) -> getGroup
    5305:5308:int getGroupAlertBehavior(android.app.Notification) -> getGroupAlertBehavior
    5134:5148:java.util.List getInvisibleActions(android.app.Notification) -> getInvisibleActions
    5177:5185:boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    5022:5031:android.app.Notification[] getNotificationArrayFromBundle(android.os.Bundle,java.lang.String) -> getNotificationArrayFromBundle
    5291:5294:java.lang.String getShortcutId(android.app.Notification) -> getShortcutId
    5238:5246:java.lang.String getSortKey(android.app.Notification) -> getSortKey
    5266:5269:long getTimeoutAfter(android.app.Notification) -> getTimeoutAfter
    5213:5221:boolean isGroupSummary(android.app.Notification) -> isGroupSummary
androidx.core.app.NotificationCompat$Action -> androidx.core.app.NotificationCompat$Action:
    3157:3158:void <init>(int,java.lang.CharSequence,android.app.PendingIntent) -> <init>
    3138:3173:void <init>(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,androidx.core.app.RemoteInput[],androidx.core.app.RemoteInput[],boolean,int,boolean) -> <init>
    3184:3184:android.app.PendingIntent getActionIntent() -> getActionIntent
    3199:3199:boolean getAllowGeneratedReplies() -> getAllowGeneratedReplies
    3233:3233:androidx.core.app.RemoteInput[] getDataOnlyRemoteInputs() -> getDataOnlyRemoteInputs
    3191:3191:android.os.Bundle getExtras() -> getExtras
    3176:3176:int getIcon() -> getIcon
    3208:3208:androidx.core.app.RemoteInput[] getRemoteInputs() -> getRemoteInputs
    3219:3219:int getSemanticAction() -> getSemanticAction
    3241:3241:boolean getShowsUserInterface() -> getShowsUserInterface
    3180:3180:java.lang.CharSequence getTitle() -> getTitle
androidx.core.app.NotificationCompat$Action$Builder -> androidx.core.app.NotificationCompat$Action$Builder:
    3264:3265:void <init>(int,java.lang.CharSequence,android.app.PendingIntent) -> <init>
    3273:3276:void <init>(androidx.core.app.NotificationCompat$Action) -> <init>
    3251:3290:void <init>(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,androidx.core.app.RemoteInput[],boolean,int,boolean) -> <init>
    3300:3303:androidx.core.app.NotificationCompat$Action$Builder addExtras(android.os.Bundle) -> addExtras
    3323:3327:androidx.core.app.NotificationCompat$Action$Builder addRemoteInput(androidx.core.app.RemoteInput) -> addRemoteInput
    3385:3400:androidx.core.app.NotificationCompat$Action build() -> build
    3375:3376:androidx.core.app.NotificationCompat$Action$Builder extend(androidx.core.app.NotificationCompat$Action$Extender) -> extend
    3312:3312:android.os.Bundle getExtras() -> getExtras
    3340:3341:androidx.core.app.NotificationCompat$Action$Builder setAllowGeneratedReplies(boolean) -> setAllowGeneratedReplies
    3353:3354:androidx.core.app.NotificationCompat$Action$Builder setSemanticAction(int) -> setSemanticAction
    3366:3367:androidx.core.app.NotificationCompat$Action$Builder setShowsUserInterface(boolean) -> setShowsUserInterface
androidx.core.app.NotificationCompat$Action$WearableExtender -> androidx.core.app.NotificationCompat$Action$WearableExtender:
    3452:3463:void <init>() -> <init>
    3452:3478:void <init>(androidx.core.app.NotificationCompat$Action) -> <init>
    3434:3434:java.lang.Object clone() -> clone
    3508:3513:androidx.core.app.NotificationCompat$Action$WearableExtender clone() -> clone
    3487:3503:androidx.core.app.NotificationCompat$Action$Builder extend(androidx.core.app.NotificationCompat$Action$Builder) -> extend
    3614:3614:java.lang.CharSequence getCancelLabel() -> getCancelLabel
    3590:3590:java.lang.CharSequence getConfirmLabel() -> getConfirmLabel
    3665:3665:boolean getHintDisplayActionInline() -> getHintDisplayActionInline
    3638:3638:boolean getHintLaunchesActivity() -> getHintLaunchesActivity
    3566:3566:java.lang.CharSequence getInProgressLabel() -> getInProgressLabel
    3534:3534:boolean isAvailableOffline() -> isAvailableOffline
    3523:3524:androidx.core.app.NotificationCompat$Action$WearableExtender setAvailableOffline(boolean) -> setAvailableOffline
    3602:3603:androidx.core.app.NotificationCompat$Action$WearableExtender setCancelLabel(java.lang.CharSequence) -> setCancelLabel
    3578:3579:androidx.core.app.NotificationCompat$Action$WearableExtender setConfirmLabel(java.lang.CharSequence) -> setConfirmLabel
    3538:3543:void setFlag(int,boolean) -> setFlag
    3652:3653:androidx.core.app.NotificationCompat$Action$WearableExtender setHintDisplayActionInline(boolean) -> setHintDisplayActionInline
    3626:3627:androidx.core.app.NotificationCompat$Action$WearableExtender setHintLaunchesActivity(boolean) -> setHintLaunchesActivity
    3554:3555:androidx.core.app.NotificationCompat$Action$WearableExtender setInProgressLabel(java.lang.CharSequence) -> setInProgressLabel
androidx.core.app.NotificationCompat$BigPictureStyle -> androidx.core.app.NotificationCompat$BigPictureStyle:
    1989:1990:void <init>() -> <init>
    1992:1994:void <init>(androidx.core.app.NotificationCompat$Builder) -> <init>
    2037:2049:void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> apply
    2026:2028:androidx.core.app.NotificationCompat$BigPictureStyle bigLargeIcon(android.graphics.Bitmap) -> bigLargeIcon
    2018:2019:androidx.core.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> bigPicture
    2001:2002:androidx.core.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    2009:2011:androidx.core.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
androidx.core.app.NotificationCompat$BigTextStyle -> androidx.core.app.NotificationCompat$BigTextStyle:
    2076:2077:void <init>() -> <init>
    2079:2081:void <init>(androidx.core.app.NotificationCompat$Builder) -> <init>
    2116:2125:void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> apply
    2106:2107:androidx.core.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> bigText
    2088:2089:androidx.core.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    2096:2098:androidx.core.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
androidx.core.app.NotificationCompat$Builder -> androidx.core.app.NotificationCompat$Builder:
    669:743:void <init>(android.content.Context,java.lang.String) -> <init>
    751:752:void <init>(android.content.Context) -> <init>
    1355:1356:androidx.core.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    1374:1375:androidx.core.app.NotificationCompat$Builder addAction(androidx.core.app.NotificationCompat$Action) -> addAction
    1294:1301:androidx.core.app.NotificationCompat$Builder addExtras(android.os.Bundle) -> addExtras
    1390:1390:androidx.core.app.NotificationCompat$Builder addInvisibleAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addInvisibleAction
    1403:1404:androidx.core.app.NotificationCompat$Builder addInvisibleAction(androidx.core.app.NotificationCompat$Action) -> addInvisibleAction
    1237:1238:androidx.core.app.NotificationCompat$Builder addPerson(java.lang.String) -> addPerson
    1585:1585:android.app.Notification build() -> build
    1568:1569:androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender) -> extend
    1609:1609:android.widget.RemoteViews getBigContentView() -> getBigContentView
    1647:1647:int getColor() -> getColor
    1601:1601:android.widget.RemoteViews getContentView() -> getContentView
    1332:1335:android.os.Bundle getExtras() -> getExtras
    1617:1617:android.widget.RemoteViews getHeadsUpContentView() -> getHeadsUpContentView
    1577:1577:android.app.Notification getNotification() -> getNotification
    1637:1637:int getPriority() -> getPriority
    1627:1627:long getWhenIfShowing() -> getWhenIfShowing
    1589:1593:java.lang.CharSequence limitCharSequenceLength(java.lang.CharSequence) -> limitCharSequenceLength
    986:1005:android.graphics.Bitmap reduceLargeIconSize(android.graphics.Bitmap) -> reduceLargeIconSize
    1139:1140:androidx.core.app.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    1544:1545:androidx.core.app.NotificationCompat$Builder setBadgeIconType(int) -> setBadgeIconType
    1162:1163:androidx.core.app.NotificationCompat$Builder setCategory(java.lang.String) -> setCategory
    1505:1506:androidx.core.app.NotificationCompat$Builder setChannelId(java.lang.String) -> setChannelId
    1433:1434:androidx.core.app.NotificationCompat$Builder setColor(int) -> setColor
    1118:1120:androidx.core.app.NotificationCompat$Builder setColorized(boolean) -> setColorized
    898:899:androidx.core.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    879:880:androidx.core.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> setContentInfo
    911:912:androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    828:829:androidx.core.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    820:821:androidx.core.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    1482:1483:androidx.core.app.NotificationCompat$Builder setCustomBigContentView(android.widget.RemoteViews) -> setCustomBigContentView
    1469:1470:androidx.core.app.NotificationCompat$Builder setCustomContentView(android.widget.RemoteViews) -> setCustomContentView
    1495:1496:androidx.core.app.NotificationCompat$Builder setCustomHeadsUpContentView(android.widget.RemoteViews) -> setCustomHeadsUpContentView
    1177:1181:androidx.core.app.NotificationCompat$Builder setDefaults(int) -> setDefaults
    923:924:androidx.core.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    1317:1318:androidx.core.app.NotificationCompat$Builder setExtras(android.os.Bundle) -> setExtras
    1185:1190:void setFlag(int,boolean) -> setFlag
    946:948:androidx.core.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> setFullScreenIntent
    1253:1254:androidx.core.app.NotificationCompat$Builder setGroup(java.lang.String) -> setGroup
    1559:1560:androidx.core.app.NotificationCompat$Builder setGroupAlertBehavior(int) -> setGroupAlertBehavior
    1265:1266:androidx.core.app.NotificationCompat$Builder setGroupSummary(boolean) -> setGroupSummary
    977:978:androidx.core.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    1074:1080:androidx.core.app.NotificationCompat$Builder setLights(int,int,int) -> setLights
    1150:1151:androidx.core.app.NotificationCompat$Builder setLocalOnly(boolean) -> setLocalOnly
    871:872:androidx.core.app.NotificationCompat$Builder setNumber(int) -> setNumber
    1095:1096:androidx.core.app.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    1128:1129:androidx.core.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    1210:1211:androidx.core.app.NotificationCompat$Builder setPriority(int) -> setPriority
    888:891:androidx.core.app.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    1458:1459:androidx.core.app.NotificationCompat$Builder setPublicVersion(android.app.Notification) -> setPublicVersion
    861:862:androidx.core.app.NotificationCompat$Builder setRemoteInputHistory(java.lang.CharSequence[]) -> setRemoteInputHistory
    1530:1531:androidx.core.app.NotificationCompat$Builder setShortcutId(java.lang.String) -> setShortcutId
    768:769:androidx.core.app.NotificationCompat$Builder setShowWhen(boolean) -> setShowWhen
    796:797:androidx.core.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    811:813:androidx.core.app.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    1282:1283:androidx.core.app.NotificationCompat$Builder setSortKey(java.lang.String) -> setSortKey
    1018:1026:androidx.core.app.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    1041:1049:androidx.core.app.NotificationCompat$Builder setSound(android.net.Uri,int) -> setSound
    1416:1422:androidx.core.app.NotificationCompat$Builder setStyle(androidx.core.app.NotificationCompat$Style) -> setStyle
    842:843:androidx.core.app.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> setSubText
    957:958:androidx.core.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    968:970:androidx.core.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> setTicker
    1514:1515:androidx.core.app.NotificationCompat$Builder setTimeoutAfter(long) -> setTimeoutAfter
    784:785:androidx.core.app.NotificationCompat$Builder setUsesChronometer(boolean) -> setUsesChronometer
    1064:1065:androidx.core.app.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    1445:1446:androidx.core.app.NotificationCompat$Builder setVisibility(int) -> setVisibility
    759:760:androidx.core.app.NotificationCompat$Builder setWhen(long) -> setWhen
androidx.core.app.NotificationCompat$CarExtender -> androidx.core.app.NotificationCompat$CarExtender:
    4638:4644:void <init>() -> <init>
    4638:4665:void <init>(android.app.Notification) -> <init>
    4758:4777:androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder) -> extend
    4720:4748:android.os.Bundle getBundleForUnreadConversation(androidx.core.app.NotificationCompat$CarExtender$UnreadConversation) -> getBundleForUnreadConversation
    4800:4800:int getColor() -> getColor
    4824:4824:android.graphics.Bitmap getLargeIcon() -> getLargeIcon
    4843:4843:androidx.core.app.NotificationCompat$CarExtender$UnreadConversation getUnreadConversation() -> getUnreadConversation
    4669:4715:androidx.core.app.NotificationCompat$CarExtender$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle) -> getUnreadConversationFromBundle
    4789:4790:androidx.core.app.NotificationCompat$CarExtender setColor(int) -> setColor
    4813:4814:androidx.core.app.NotificationCompat$CarExtender setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    4834:4835:androidx.core.app.NotificationCompat$CarExtender setUnreadConversation(androidx.core.app.NotificationCompat$CarExtender$UnreadConversation) -> setUnreadConversation
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation -> androidx.core.app.NotificationCompat$CarExtender$UnreadConversation:
    4859:4866:void <init>(java.lang.String[],androidx.core.app.RemoteInput,android.app.PendingIntent,android.app.PendingIntent,java.lang.String[],long) -> <init>
    4917:4917:long getLatestTimestamp() -> getLatestTimestamp
    4872:4872:java.lang.String[] getMessages() -> getMessages
    4910:4910:java.lang.String getParticipant() -> getParticipant
    4903:4903:java.lang.String[] getParticipants() -> getParticipants
    4896:4896:android.app.PendingIntent getReadPendingIntent() -> getReadPendingIntent
    4880:4880:androidx.core.app.RemoteInput getRemoteInput() -> getRemoteInput
    4888:4888:android.app.PendingIntent getReplyPendingIntent() -> getReplyPendingIntent
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder -> androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder:
    4924:4938:void <init>(java.lang.String) -> <init>
    4949:4950:androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder addMessage(java.lang.String) -> addMessage
    5006:5008:androidx.core.app.NotificationCompat$CarExtender$UnreadConversation build() -> build
    4996:4997:androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder setLatestTimestamp(long) -> setLatestTimestamp
    4980:4981:androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder setReadPendingIntent(android.app.PendingIntent) -> setReadPendingIntent
    4966:4969:androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder setReplyAction(android.app.PendingIntent,androidx.core.app.RemoteInput) -> setReplyAction
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle -> androidx.core.app.NotificationCompat$DecoratedCustomViewStyle:
    2935:2936:void <init>() -> <init>
    2944:2947:void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> apply
    3007:3025:android.widget.RemoteViews createRemoteViews(android.widget.RemoteViews,boolean) -> createRemoteViews
    3029:3043:android.widget.RemoteViews generateActionButton(androidx.core.app.NotificationCompat$Action) -> generateActionButton
    2972:2984:android.widget.RemoteViews makeBigContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> makeBigContentView
    2955:2963:android.widget.RemoteViews makeContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> makeContentView
    2993:3003:android.widget.RemoteViews makeHeadsUpContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> makeHeadsUpContentView
androidx.core.app.NotificationCompat$InboxStyle -> androidx.core.app.NotificationCompat$InboxStyle:
    2848:2851:void <init>() -> <init>
    2848:2855:void <init>(androidx.core.app.NotificationCompat$Builder) -> <init>
    2879:2880:androidx.core.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence) -> addLine
    2889:2900:void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> apply
    2862:2863:androidx.core.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    2870:2872:androidx.core.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
androidx.core.app.NotificationCompat$MessagingStyle -> androidx.core.app.NotificationCompat$MessagingStyle:
    2168:2174:void <init>() -> <init>
    2168:2186:void <init>(java.lang.CharSequence) -> <init>
    2168:2201:void <init>(androidx.core.app.Person) -> <init>
    2537:2552:void addCompatExtras(android.os.Bundle) -> addCompatExtras
    2264:2269:androidx.core.app.NotificationCompat$MessagingStyle addMessage(java.lang.CharSequence,long,java.lang.CharSequence) -> addMessage
    2281:2282:androidx.core.app.NotificationCompat$MessagingStyle addMessage(java.lang.CharSequence,long,androidx.core.app.Person) -> addMessage
    2293:2297:androidx.core.app.NotificationCompat$MessagingStyle addMessage(androidx.core.app.NotificationCompat$MessagingStyle$Message) -> addMessage
    2385:2477:void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> apply
    2359:2371:androidx.core.app.NotificationCompat$MessagingStyle extractMessagingStyleFromNotification(android.app.Notification) -> extractMessagingStyleFromNotification
    2481:2493:androidx.core.app.NotificationCompat$MessagingStyle$Message findLatestIncomingMessage() -> findLatestIncomingMessage
    2241:2241:java.lang.CharSequence getConversationTitle() -> getConversationTitle
    2304:2304:java.util.List getMessages() -> getMessages
    2215:2215:androidx.core.app.Person getUser() -> getUser
    2210:2210:java.lang.CharSequence getUserDisplayName() -> getUserDisplayName
    2497:2503:boolean hasMessagesWithoutSender() -> hasMessagesWithoutSender
    2336:2344:boolean isGroupConversation() -> isGroupConversation
    2532:2532:android.text.style.TextAppearanceSpan makeFontColorSpan(int) -> makeFontColorSpan
    2507:2527:java.lang.CharSequence makeMessageLine(androidx.core.app.NotificationCompat$MessagingStyle$Message) -> makeMessageLine
    2560:2583:void restoreFromCompatExtras(android.os.Bundle) -> restoreFromCompatExtras
    2232:2233:androidx.core.app.NotificationCompat$MessagingStyle setConversationTitle(java.lang.CharSequence) -> setConversationTitle
    2314:2315:androidx.core.app.NotificationCompat$MessagingStyle setGroupConversation(boolean) -> setGroupConversation
androidx.core.app.NotificationCompat$MessagingStyle$Message -> androidx.core.app.NotificationCompat$MessagingStyle$Message:
    2599:2618:void <init>(java.lang.CharSequence,long,androidx.core.app.Person) -> <init>
    2635:2636:void <init>(java.lang.CharSequence,long,java.lang.CharSequence) -> <init>
    2757:2762:android.os.Bundle[] getBundleArrayForMessages(java.util.List) -> getBundleArrayForMessages
    2713:2713:java.lang.String getDataMimeType() -> getDataMimeType
    2722:2722:android.net.Uri getDataUri() -> getDataUri
    2690:2690:android.os.Bundle getExtras() -> getExtras
    2782:2817:androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle) -> getMessageFromBundle
    2767:2776:java.util.List getMessagesFromBundleArray(android.os.Parcelable[]) -> getMessagesFromBundleArray
    2707:2707:androidx.core.app.Person getPerson() -> getPerson
    2701:2701:java.lang.CharSequence getSender() -> getSender
    2679:2679:java.lang.CharSequence getText() -> getText
    2684:2684:long getTimestamp() -> getTimestamp
    2668:2670:androidx.core.app.NotificationCompat$MessagingStyle$Message setData(java.lang.String,android.net.Uri) -> setData
    2726:2752:android.os.Bundle toBundle() -> toBundle
androidx.core.app.NotificationCompat$Style -> androidx.core.app.NotificationCompat$Style:
    1658:1666:void <init>() -> <init>
    1726:1726:void addCompatExtras(android.os.Bundle) -> addCompatExtras
    1694:1694:void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> apply
    1742:1881:android.widget.RemoteViews applyStandardTemplate(boolean,int,boolean) -> applyStandardTemplate
    1678:1682:android.app.Notification build() -> build
    1929:1938:void buildIntoRemoteViews(android.widget.RemoteViews,android.widget.RemoteViews) -> buildIntoRemoteViews
    1947:1956:int calculateTopPadding() -> calculateTopPadding
    1960:1960:float constrain(float,float,float) -> constrain
    1889:1889:android.graphics.Bitmap createColoredBitmap(int,int) -> createColoredBitmap
    1893:1904:android.graphics.Bitmap createColoredBitmap(int,int,int) -> createColoredBitmap
    1909:1918:android.graphics.Bitmap createIconWithBackground(int,int,int,int) -> createIconWithBackground
    1941:1944:void hideNormalContent(android.widget.RemoteViews) -> hideNormalContent
    1709:1709:android.widget.RemoteViews makeBigContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> makeBigContentView
    1701:1701:android.widget.RemoteViews makeContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> makeContentView
    1717:1717:android.widget.RemoteViews makeHeadsUpContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> makeHeadsUpContentView
    1734:1734:void restoreFromCompatExtras(android.os.Bundle) -> restoreFromCompatExtras
    1669:1675:void setBuilder(androidx.core.app.NotificationCompat$Builder) -> setBuilder
androidx.core.app.NotificationCompat$WearableExtender -> androidx.core.app.NotificationCompat$WearableExtender:
    3847:3867:void <init>() -> <init>
    3847:3913:void <init>(android.app.Notification) -> <init>
    4046:4047:androidx.core.app.NotificationCompat$WearableExtender addAction(androidx.core.app.NotificationCompat$Action) -> addAction
    4063:4064:androidx.core.app.NotificationCompat$WearableExtender addActions(java.util.List) -> addActions
    4138:4139:androidx.core.app.NotificationCompat$WearableExtender addPage(android.app.Notification) -> addPage
    4153:4154:androidx.core.app.NotificationCompat$WearableExtender addPages(java.util.List) -> addPages
    4073:4074:androidx.core.app.NotificationCompat$WearableExtender clearActions() -> clearActions
    4163:4164:androidx.core.app.NotificationCompat$WearableExtender clearPages() -> clearPages
    3745:3745:java.lang.Object clone() -> clone
    4015:4030:androidx.core.app.NotificationCompat$WearableExtender clone() -> clone
    3922:3983:androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder) -> extend
    3988:4010:android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action) -> getActionFromActionCompat
    4081:4081:java.util.List getActions() -> getActions
    4201:4201:android.graphics.Bitmap getBackground() -> getBackground
    4575:4575:java.lang.String getBridgeTag() -> getBridgeTag
    4278:4278:int getContentAction() -> getContentAction
    4218:4218:int getContentIcon() -> getContentIcon
    4241:4241:int getContentIconGravity() -> getContentIconGravity
    4394:4394:boolean getContentIntentAvailableOffline() -> getContentIntentAvailableOffline
    4353:4353:int getCustomContentHeight() -> getCustomContentHeight
    4329:4329:int getCustomSizePreset() -> getCustomSizePreset
    4554:4554:java.lang.String getDismissalId() -> getDismissalId
    4124:4124:android.app.PendingIntent getDisplayIntent() -> getDisplayIntent
    4301:4301:int getGravity() -> getGravity
    4509:4509:boolean getHintAmbientBigPicture() -> getHintAmbientBigPicture
    4462:4462:boolean getHintAvoidBackgroundClipping() -> getHintAvoidBackgroundClipping
    4532:4532:boolean getHintContentIntentLaunchesActivity() -> getHintContentIntentLaunchesActivity
    4415:4415:boolean getHintHideIcon() -> getHintHideIcon
    4486:4486:int getHintScreenTimeout() -> getHintScreenTimeout
    4436:4436:boolean getHintShowBackgroundOnly() -> getHintShowBackgroundOnly
    4175:4175:java.util.List getPages() -> getPages
    4372:4372:boolean getStartScrollBottom() -> getStartScrollBottom
    4188:4189:androidx.core.app.NotificationCompat$WearableExtender setBackground(android.graphics.Bitmap) -> setBackground
    4566:4567:androidx.core.app.NotificationCompat$WearableExtender setBridgeTag(java.lang.String) -> setBridgeTag
    4259:4260:androidx.core.app.NotificationCompat$WearableExtender setContentAction(int) -> setContentAction
    4209:4210:androidx.core.app.NotificationCompat$WearableExtender setContentIcon(int) -> setContentIcon
    4229:4230:androidx.core.app.NotificationCompat$WearableExtender setContentIconGravity(int) -> setContentIconGravity
    4383:4384:androidx.core.app.NotificationCompat$WearableExtender setContentIntentAvailableOffline(boolean) -> setContentIntentAvailableOffline
    4341:4342:androidx.core.app.NotificationCompat$WearableExtender setCustomContentHeight(int) -> setCustomContentHeight
    4315:4316:androidx.core.app.NotificationCompat$WearableExtender setCustomSizePreset(int) -> setCustomSizePreset
    4545:4546:androidx.core.app.NotificationCompat$WearableExtender setDismissalId(java.lang.String) -> setDismissalId
    4115:4116:androidx.core.app.NotificationCompat$WearableExtender setDisplayIntent(android.app.PendingIntent) -> setDisplayIntent
    4579:4584:void setFlag(int,boolean) -> setFlag
    4289:4290:androidx.core.app.NotificationCompat$WearableExtender setGravity(int) -> setGravity
    4497:4498:androidx.core.app.NotificationCompat$WearableExtender setHintAmbientBigPicture(boolean) -> setHintAmbientBigPicture
    4449:4450:androidx.core.app.NotificationCompat$WearableExtender setHintAvoidBackgroundClipping(boolean) -> setHintAvoidBackgroundClipping
    4521:4522:androidx.core.app.NotificationCompat$WearableExtender setHintContentIntentLaunchesActivity(boolean) -> setHintContentIntentLaunchesActivity
    4404:4405:androidx.core.app.NotificationCompat$WearableExtender setHintHideIcon(boolean) -> setHintHideIcon
    4474:4475:androidx.core.app.NotificationCompat$WearableExtender setHintScreenTimeout(int) -> setHintScreenTimeout
    4425:4426:androidx.core.app.NotificationCompat$WearableExtender setHintShowBackgroundOnly(boolean) -> setHintShowBackgroundOnly
    4362:4363:androidx.core.app.NotificationCompat$WearableExtender setStartScrollBottom(boolean) -> setStartScrollBottom
androidx.core.app.NotificationCompatBuilder -> androidx.core.app.NotificationCompatBuilder:
    54:208:void <init>(androidx.core.app.NotificationCompat$Builder) -> <init>
    255:290:void addAction(androidx.core.app.NotificationCompat$Action) -> addAction
    216:251:android.app.Notification build() -> build
    293:413:android.app.Notification buildInternal() -> buildInternal
    212:212:android.app.Notification$Builder getBuilder() -> getBuilder
    418:422:void removeSoundAndVibration(android.app.Notification) -> removeSoundAndVibration
androidx.core.app.NotificationCompatExtras -> androidx.core.app.NotificationCompatExtras:
    66:66:void <init>() -> <init>
androidx.core.app.NotificationCompatJellybean -> androidx.core.app.NotificationCompatJellybean:
    58:62:void <clinit>() -> <clinit>
    342:343:void <init>() -> <init>
    72:82:android.util.SparseArray buildActionExtrasMap(java.util.List) -> buildActionExtrasMap
    208:227:boolean ensureActionReflectionReadyLocked() -> ensureActionReflectionReadyLocked
    270:281:androidx.core.app.RemoteInput fromBundle(android.os.Bundle) -> fromBundle
    305:312:androidx.core.app.RemoteInput[] fromBundleArray(android.os.Bundle[]) -> fromBundleArray
    164:188:androidx.core.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    157:160:int getActionCount(android.app.Notification) -> getActionCount
    231:245:androidx.core.app.NotificationCompat$Action getActionFromBundle(android.os.Bundle) -> getActionFromBundle
    192:203:java.lang.Object[] getActionObjectsLocked(android.app.Notification) -> getActionObjectsLocked
    332:339:android.os.Bundle[] getBundleArrayFromBundle(android.os.Bundle,java.lang.String) -> getBundleArrayFromBundle
    249:265:android.os.Bundle getBundleForAction(androidx.core.app.NotificationCompat$Action) -> getBundleForAction
    90:118:android.os.Bundle getExtras(android.app.Notification) -> getExtras
    123:134:androidx.core.app.NotificationCompat$Action readAction(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle) -> readAction
    286:301:android.os.Bundle toBundle(androidx.core.app.RemoteInput) -> toBundle
    316:323:android.os.Bundle[] toBundleArray(androidx.core.app.RemoteInput[]) -> toBundleArray
    141:153:android.os.Bundle writeActionAndGetExtras(android.app.Notification$Builder,androidx.core.app.NotificationCompat$Action) -> writeActionAndGetExtras
androidx.core.app.NotificationCompatSideChannelService -> androidx.core.app.NotificationCompatSideChannelService:
    45:74:void <init>() -> <init>
    114:119:void checkPermission(int,java.lang.String) -> checkPermission
    48:56:android.os.IBinder onBind(android.content.Intent) -> onBind
androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub -> androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub:
    75:76:void <init>(androidx.core.app.NotificationCompatSideChannelService) -> <init>
    92:99:void cancel(java.lang.String,int,java.lang.String) -> cancel
    103:110:void cancelAll(java.lang.String) -> cancelAll
    81:88:void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
androidx.core.app.NotificationManagerCompat -> androidx.core.app.NotificationManagerCompat:
    97:106:void <clinit>() -> <clinit>
    156:160:void <init>(android.content.Context) -> <init>
    220:241:boolean areNotificationsEnabled() -> areNotificationsEnabled
    167:168:void cancel(int) -> cancel
    176:180:void cancel(java.lang.String,int) -> cancel
    184:188:void cancelAll() -> cancelAll
    153:153:androidx.core.app.NotificationManagerCompat from(android.content.Context) -> from
    263:282:java.util.Set getEnabledListenerPackages(android.content.Context) -> getEnabledListenerPackages
    251:254:int getImportance() -> getImportance
    196:197:void notify(int,android.app.Notification) -> notify
    206:214:void notify(java.lang.String,int,android.app.Notification) -> notify
    297:303:void pushSideChannelQueue(androidx.core.app.NotificationManagerCompat$Task) -> pushSideChannelQueue
    289:290:boolean useSideChannelForNotification(android.app.Notification) -> useSideChannelForNotification
androidx.core.app.NotificationManagerCompat$CancelTask -> androidx.core.app.NotificationManagerCompat$CancelTask:
    625:630:void <init>(java.lang.String) -> <init>
    632:637:void <init>(java.lang.String,int,java.lang.String) -> <init>
    641:646:void send(android.support.v4.app.INotificationSideChannel) -> send
    650:656:java.lang.String toString() -> toString
androidx.core.app.NotificationManagerCompat$NotifyTask -> androidx.core.app.NotificationManagerCompat$NotifyTask:
    596:601:void <init>(java.lang.String,int,java.lang.String,android.app.Notification) -> <init>
    605:606:void send(android.support.v4.app.INotificationSideChannel) -> send
    610:615:java.lang.String toString() -> toString
androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent -> androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent:
    580:583:void <init>(android.content.ComponentName,android.os.IBinder) -> <init>
androidx.core.app.NotificationManagerCompat$SideChannelManager -> androidx.core.app.NotificationManagerCompat$SideChannelManager:
    318:327:void <init>(android.content.Context) -> <init>
    462:474:boolean ensureServiceBound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> ensureServiceBound
    481:486:void ensureServiceUnbound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> ensureServiceUnbound
    339:354:boolean handleMessage(android.os.Message) -> handleMessage
    358:363:void handleQueueTask(androidx.core.app.NotificationManagerCompat$Task) -> handleQueueTask
    382:386:void handleRetryListenerQueue(android.content.ComponentName) -> handleRetryListenerQueue
    366:372:void handleServiceConnected(android.content.ComponentName,android.os.IBinder) -> handleServiceConnected
    375:379:void handleServiceDisconnected(android.content.ComponentName) -> handleServiceDisconnected
    390:396:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    400:404:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    517:555:void processListenerQueue(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> processListenerQueue
    334:335:void queueTask(androidx.core.app.NotificationManagerCompat$Task) -> queueTask
    494:510:void scheduleListenerRetry(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> scheduleListenerRetry
    411:455:void updateListenerMap() -> updateListenerMap
androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord -> androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord:
    561:571:void <init>(android.content.ComponentName) -> <init>
androidx.core.app.Person -> androidx.core.app.Person:
    95:102:void <init>(androidx.core.app.Person$Builder) -> <init>
    68:78:androidx.core.app.Person fromAndroidPerson(android.app.Person) -> fromAndroidPerson
    47:55:androidx.core.app.Person fromBundle(android.os.Bundle) -> fromBundle
    157:157:androidx.core.graphics.drawable.IconCompat getIcon() -> getIcon
    184:184:java.lang.String getKey() -> getKey
    151:151:java.lang.CharSequence getName() -> getName
    175:175:java.lang.String getUri() -> getUri
    192:192:boolean isBot() -> isBot
    200:200:boolean isImportant() -> isImportant
    135:142:android.app.Person toAndroidPerson() -> toAndroidPerson
    123:123:androidx.core.app.Person$Builder toBuilder() -> toBuilder
    110:117:android.os.Bundle toBundle() -> toBundle
androidx.core.app.Person$Builder -> androidx.core.app.Person$Builder:
    213:213:void <init>() -> <init>
    215:222:void <init>(androidx.core.app.Person) -> <init>
    300:300:androidx.core.app.Person build() -> build
    281:282:androidx.core.app.Person$Builder setBot(boolean) -> setBot
    242:243:androidx.core.app.Person$Builder setIcon(androidx.core.graphics.drawable.IconCompat) -> setIcon
    293:294:androidx.core.app.Person$Builder setImportant(boolean) -> setImportant
    271:272:androidx.core.app.Person$Builder setKey(java.lang.String) -> setKey
    230:231:androidx.core.app.Person$Builder setName(java.lang.CharSequence) -> setName
    260:261:androidx.core.app.Person$Builder setUri(java.lang.String) -> setUri
androidx.core.app.RemoteInput -> androidx.core.app.RemoteInput:
    60:67:void <init>(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,android.os.Bundle,java.util.Set) -> <init>
    397:422:void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map) -> addDataResultToIntent
    338:385:void addResultsToIntent(androidx.core.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
    430:437:android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[]) -> fromCompat
    442:447:android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput) -> fromCompat
    114:114:boolean getAllowFreeFormInput() -> getAllowFreeFormInput
    92:92:java.util.Set getAllowedDataTypes() -> getAllowedDataTypes
    88:88:java.lang.CharSequence[] getChoices() -> getChoices
    452:463:android.content.Intent getClipDataIntentFromIntent(android.content.Intent) -> getClipDataIntentFromIntent
    272:298:java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String) -> getDataResultsFromIntent
    425:425:java.lang.String getExtraResultsKeyForData(java.lang.String) -> getExtraResultsKeyForData
    121:121:android.os.Bundle getExtras() -> getExtras
    81:81:java.lang.CharSequence getLabel() -> getLabel
    74:74:java.lang.String getResultKey() -> getResultKey
    311:321:android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    101:104:boolean isDataOnly() -> isDataOnly
androidx.core.app.RemoteInput$Builder -> androidx.core.app.RemoteInput$Builder:
    129:145:void <init>(java.lang.String) -> <init>
    222:225:androidx.core.app.RemoteInput$Builder addExtras(android.os.Bundle) -> addExtras
    244:244:androidx.core.app.RemoteInput build() -> build
    235:235:android.os.Bundle getExtras() -> getExtras
    189:194:androidx.core.app.RemoteInput$Builder setAllowDataType(java.lang.String,boolean) -> setAllowDataType
    209:210:androidx.core.app.RemoteInput$Builder setAllowFreeFormInput(boolean) -> setAllowFreeFormInput
    173:174:androidx.core.app.RemoteInput$Builder setChoices(java.lang.CharSequence[]) -> setChoices
    155:156:androidx.core.app.RemoteInput$Builder setLabel(java.lang.CharSequence) -> setLabel
androidx.core.app.ServiceCompat -> androidx.core.app.ServiceCompat:
    37:39:void <init>() -> <init>
    98:103:void stopForeground(android.app.Service,int) -> stopForeground
androidx.core.app.ShareCompat -> androidx.core.app.ShareCompat:
    83:83:void <init>() -> <init>
    152:169:void configureMenuItem(android.view.MenuItem,androidx.core.app.ShareCompat$IntentBuilder) -> configureMenuItem
    180:186:void configureMenuItem(android.view.Menu,int,androidx.core.app.ShareCompat$IntentBuilder) -> configureMenuItem
    118:122:android.content.ComponentName getCallingActivity(android.app.Activity) -> getCallingActivity
    98:102:java.lang.String getCallingPackage(android.app.Activity) -> getCallingPackage
androidx.core.app.ShareCompat$IntentBuilder -> androidx.core.app.ShareCompat$IntentBuilder:
    214:220:void <init>(android.app.Activity) -> <init>
    541:545:androidx.core.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String) -> addEmailBcc
    556:557:androidx.core.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[]) -> addEmailBcc
    501:505:androidx.core.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String) -> addEmailCc
    516:517:androidx.core.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[]) -> addEmailCc
    461:465:androidx.core.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String) -> addEmailTo
    476:477:androidx.core.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[]) -> addEmailTo
    422:434:androidx.core.app.ShareCompat$IntentBuilder addStream(android.net.Uri) -> addStream
    280:288:void combineArrayExtra(java.lang.String,java.util.ArrayList) -> combineArrayExtra
    292:299:void combineArrayExtra(java.lang.String,java.lang.String[]) -> combineArrayExtra
    309:309:android.content.Intent createChooserIntent() -> createChooserIntent
    211:211:androidx.core.app.ShareCompat$IntentBuilder from(android.app.Activity) -> from
    276:276:android.app.Activity getActivity() -> getActivity
    232:272:android.content.Intent getIntent() -> getIntent
    332:333:androidx.core.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence) -> setChooserTitle
    343:343:androidx.core.app.ShareCompat$IntentBuilder setChooserTitle(int) -> setChooserTitle
    529:530:androidx.core.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[]) -> setEmailBcc
    489:490:androidx.core.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[]) -> setEmailCc
    446:450:androidx.core.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[]) -> setEmailTo
    383:388:androidx.core.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String) -> setHtmlText
    402:407:androidx.core.app.ShareCompat$IntentBuilder setStream(android.net.Uri) -> setStream
    568:569:androidx.core.app.ShareCompat$IntentBuilder setSubject(java.lang.String) -> setSubject
    367:368:androidx.core.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence) -> setText
    354:355:androidx.core.app.ShareCompat$IntentBuilder setType(java.lang.String) -> setType
    322:323:void startChooser() -> startChooser
androidx.core.app.ShareCompat$IntentReader -> androidx.core.app.ShareCompat$IntentReader:
    611:616:void <init>(android.app.Activity) -> <init>
    608:608:androidx.core.app.ShareCompat$IntentReader from(android.app.Activity) -> from
    855:855:android.content.ComponentName getCallingActivity() -> getCallingActivity
    869:877:android.graphics.drawable.Drawable getCallingActivityIcon() -> getCallingActivityIcon
    891:899:android.graphics.drawable.Drawable getCallingApplicationIcon() -> getCallingApplicationIcon
    913:921:java.lang.CharSequence getCallingApplicationLabel() -> getCallingApplicationLabel
    838:838:java.lang.String getCallingPackage() -> getCallingPackage
    811:811:java.lang.String[] getEmailBcc() -> getEmailBcc
    801:801:java.lang.String[] getEmailCc() -> getEmailCc
    791:791:java.lang.String[] getEmailTo() -> getEmailTo
    685:700:java.lang.String getHtmlText() -> getHtmlText
    741:741:android.net.Uri getStream() -> getStream
    754:763:android.net.Uri getStream(int) -> getStream
    775:781:int getStreamCount() -> getStreamCount
    821:821:java.lang.String getSubject() -> getSubject
    671:671:java.lang.CharSequence getText() -> getText
    661:661:java.lang.String getType() -> getType
    651:651:boolean isMultipleShare() -> isMultipleShare
    627:628:boolean isShareIntent() -> isShareIntent
    640:640:boolean isSingleShare() -> isSingleShare
    705:727:void withinStyle(java.lang.StringBuilder,java.lang.CharSequence,int,int) -> withinStyle
androidx.core.app.SharedElementCallback -> androidx.core.app.SharedElementCallback:
    42:310:void <init>() -> <init>
    214:236:android.graphics.Bitmap createDrawableBitmap(android.graphics.drawable.Drawable) -> createDrawableBitmap
    168:207:android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    257:280:android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
    144:144:void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    133:133:void onRejectSharedElements(java.util.List) -> onRejectSharedElements
    109:109:void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    78:78:void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
    301:302:void onSharedElementsArrived(java.util.List,java.util.List,androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener) -> onSharedElementsArrived
androidx.core.app.TaskStackBuilder -> androidx.core.app.TaskStackBuilder:
    79:84:void <init>(android.content.Context) -> <init>
    121:122:androidx.core.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    139:147:androidx.core.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent) -> addNextIntentWithParentStack
    159:177:androidx.core.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    189:189:androidx.core.app.TaskStackBuilder addParentStack(java.lang.Class) -> addParentStack
    201:212:androidx.core.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    95:95:androidx.core.app.TaskStackBuilder create(android.content.Context) -> create
    247:247:android.content.Intent editIntentAt(int) -> editIntentAt
    109:109:androidx.core.app.TaskStackBuilder from(android.content.Context) -> from
    234:234:android.content.Intent getIntent(int) -> getIntent
    219:219:int getIntentCount() -> getIntentCount
    357:365:android.content.Intent[] getIntents() -> getIntents
    312:312:android.app.PendingIntent getPendingIntent(int,int) -> getPendingIntent
    331:344:android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle) -> getPendingIntent
    256:256:java.util.Iterator iterator() -> iterator
    268:269:void startActivities() -> startActivities
    283:296:void startActivities(android.os.Bundle) -> startActivities
androidx.core.content.ContentResolverCompat -> androidx.core.content.ContentResolverCompat:
    33:35:void <init>() -> <init>
    74:99:android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,androidx.core.os.CancellationSignal) -> query
androidx.core.content.ContextCompat -> androidx.core.content.ContextCompat:
    150:150:void <clinit>() -> <clinit>
    158:160:void <init>() -> <init>
    438:446:java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
    540:544:int checkSelfPermission(android.content.Context,java.lang.String) -> checkSelfPermission
    642:645:android.content.Context createDeviceProtectedStorageContext(android.content.Context) -> createDeviceProtectedStorageContext
    595:606:java.io.File createFilesDir(java.io.File) -> createFilesDir
    587:591:java.io.File getCodeCacheDir(android.content.Context) -> getCodeCacheDir
    522:525:int getColor(android.content.Context,int) -> getColor
    500:503:android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> getColorStateList
    271:275:java.io.File getDataDir(android.content.Context) -> getDataDir
    462:479:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    430:433:java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    377:380:java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    563:567:java.io.File getNoBackupFilesDir(android.content.Context) -> getNoBackupFilesDir
    324:327:java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
    694:699:java.lang.Object getSystemService(android.content.Context,java.lang.Class) -> getSystemService
    714:717:java.lang.String getSystemServiceName(android.content.Context,java.lang.Class) -> getSystemServiceName
    656:659:boolean isDeviceProtectedStorage(android.content.Context) -> isDeviceProtectedStorage
    188:188:boolean startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    220:225:boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
    247:252:void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> startActivity
    674:680:void startForegroundService(android.content.Context,android.content.Intent) -> startForegroundService
androidx.core.content.ContextCompat$LegacyServiceMapHolder -> androidx.core.content.ContextCompat$LegacyServiceMapHolder:
    722:788:void <clinit>() -> <clinit>
    721:721:void <init>() -> <init>
androidx.core.content.FileProvider -> androidx.core.content.FileProvider:
    340:360:void <clinit>() -> <clinit>
    339:691:void <init>() -> <init>
    382:393:void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    814:820:java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
    824:826:java.lang.String[] copyOf(java.lang.String[],int) -> copyOf
    830:832:java.lang.Object[] copyOf(java.lang.Object[],int) -> copyOf
    541:542:int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    575:590:androidx.core.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> getPathStrategy
    493:504:java.lang.String getType(android.net.Uri) -> getType
    417:418:android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File) -> getUriForFile
    513:513:android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    790:810:int modeToMode(java.lang.String) -> modeToMode
    370:370:boolean onCreate() -> onCreate
    564:566:android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    601:653:androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String) -> parsePathStrategy
    454:478:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    523:523:int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
androidx.core.content.FileProvider$SimplePathStrategy -> androidx.core.content.FileProvider$SimplePathStrategy:
    693:697:void <init>(java.lang.String) -> <init>
    704:717:void addRoot(java.lang.String,java.io.File) -> addRoot
    759:781:java.io.File getFileForUri(android.net.Uri) -> getFileForUri
    723:754:android.net.Uri getUriForFile(java.io.File) -> getUriForFile
androidx.core.content.IntentCompat -> androidx.core.content.IntentCompat:
    28:30:void <init>() -> <init>
    77:85:android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
androidx.core.content.MimeTypeFilter -> androidx.core.content.MimeTypeFilter:
    43:44:void <init>() -> <init>
    76:83:boolean matches(java.lang.String,java.lang.String) -> matches
    93:105:java.lang.String matches(java.lang.String,java.lang.String[]) -> matches
    115:127:java.lang.String matches(java.lang.String[],java.lang.String) -> matches
    137:150:java.lang.String[] matchesMany(java.lang.String[],java.lang.String) -> matchesMany
    48:68:boolean mimeTypeAgainstFilter(java.lang.String[],java.lang.String[]) -> mimeTypeAgainstFilter
androidx.core.content.PermissionChecker -> androidx.core.content.PermissionChecker:
    77:79:void <init>() -> <init>
    171:174:int checkCallingOrSelfPermission(android.content.Context,java.lang.String) -> checkCallingOrSelfPermission
    152:156:int checkCallingPermission(android.content.Context,java.lang.String,java.lang.String) -> checkCallingPermission
    97:119:int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String) -> checkPermission
    134:135:int checkSelfPermission(android.content.Context,java.lang.String) -> checkSelfPermission
androidx.core.content.SharedPreferencesCompat -> androidx.core.content.SharedPreferencesCompat:
    84:84:void <init>() -> <init>
androidx.core.content.SharedPreferencesCompat$EditorCompat -> androidx.core.content.SharedPreferencesCompat$EditorCompat:
    57:59:void <init>() -> <init>
    80:81:void apply(android.content.SharedPreferences$Editor) -> apply
    66:69:androidx.core.content.SharedPreferencesCompat$EditorCompat getInstance() -> getInstance
androidx.core.content.SharedPreferencesCompat$EditorCompat$Helper -> androidx.core.content.SharedPreferencesCompat$EditorCompat$Helper:
    40:41:void <init>() -> <init>
    45:52:void apply(android.content.SharedPreferences$Editor) -> apply
androidx.core.content.pm.ActivityInfoCompat -> androidx.core.content.pm.ActivityInfoCompat:
    27:29:void <init>() -> <init>
androidx.core.content.pm.PackageInfoCompat -> androidx.core.content.pm.PackageInfoCompat:
    41:42:void <init>() -> <init>
    34:38:long getLongVersionCode(android.content.pm.PackageInfo) -> getLongVersionCode
androidx.core.content.pm.PermissionInfoCompat -> androidx.core.content.pm.PermissionInfoCompat:
    34:35:void <init>() -> <init>
    73:77:int getProtection(android.content.pm.PermissionInfo) -> getProtection
    87:91:int getProtectionFlags(android.content.pm.PermissionInfo) -> getProtectionFlags
androidx.core.content.pm.ShortcutInfoCompat -> androidx.core.content.pm.ShortcutInfoCompat:
    51:51:void <init>() -> <init>
    77:96:android.content.Intent addToIntent(android.content.Intent) -> addToIntent
    122:122:android.content.ComponentName getActivity() -> getActivity
    153:153:java.lang.CharSequence getDisabledMessage() -> getDisabledMessage
    108:108:java.lang.String getId() -> getId
    164:164:android.content.Intent getIntent() -> getIntent
    174:174:android.content.Intent[] getIntents() -> getIntents
    142:142:java.lang.CharSequence getLongLabel() -> getLongLabel
    132:132:java.lang.CharSequence getShortLabel() -> getShortLabel
    58:73:android.content.pm.ShortcutInfo toShortcutInfo() -> toShortcutInfo
androidx.core.content.pm.ShortcutInfoCompat$Builder -> androidx.core.content.pm.ShortcutInfoCompat$Builder:
    184:188:void <init>(android.content.Context,java.lang.String) -> <init>
    302:308:androidx.core.content.pm.ShortcutInfoCompat build() -> build
    275:276:androidx.core.content.pm.ShortcutInfoCompat$Builder setActivity(android.content.ComponentName) -> setActivity
    292:293:androidx.core.content.pm.ShortcutInfoCompat$Builder setAlwaysBadged() -> setAlwaysBadged
    227:228:androidx.core.content.pm.ShortcutInfoCompat$Builder setDisabledMessage(java.lang.CharSequence) -> setDisabledMessage
    262:263:androidx.core.content.pm.ShortcutInfoCompat$Builder setIcon(androidx.core.graphics.drawable.IconCompat) -> setIcon
    242:242:androidx.core.content.pm.ShortcutInfoCompat$Builder setIntent(android.content.Intent) -> setIntent
    253:254:androidx.core.content.pm.ShortcutInfoCompat$Builder setIntents(android.content.Intent[]) -> setIntents
    215:216:androidx.core.content.pm.ShortcutInfoCompat$Builder setLongLabel(java.lang.CharSequence) -> setLongLabel
    201:202:androidx.core.content.pm.ShortcutInfoCompat$Builder setShortLabel(java.lang.CharSequence) -> setShortLabel
androidx.core.content.pm.ShortcutManagerCompat -> androidx.core.content.pm.ShortcutManagerCompat:
    45:47:void <init>() -> <init>
    134:142:android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat) -> createShortcutResultIntent
    54:69:boolean isRequestPinShortcutSupported(android.content.Context) -> isRequestPinShortcutSupported
    91:118:boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender) -> requestPinShortcut
androidx.core.content.pm.ShortcutManagerCompat$1 -> androidx.core.content.pm.ShortcutManagerCompat$1:
    108:108:void <init>(android.content.IntentSender) -> <init>
    112:116:void onReceive(android.content.Context,android.content.Intent) -> onReceive
androidx.core.content.res.ColorStateListInflaterCompat -> androidx.core.content.res.ColorStateListInflaterCompat:
    49:50:void <init>() -> <init>
    65:77:android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> createFromXml
    92:98:android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    107:169:android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    181:182:int modulateColorAlpha(int,float) -> modulateColorAlpha
    174:175:android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]) -> obtainAttributes
androidx.core.content.res.ComplexColorCompat -> androidx.core.content.res.ComplexColorCompat:
    61:65:void <init>(android.graphics.Shader,android.content.res.ColorStateList,int) -> <init>
    152:171:androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme) -> createFromXml
    68:68:androidx.core.content.res.ComplexColorCompat from(android.graphics.Shader) -> from
    72:72:androidx.core.content.res.ComplexColorCompat from(android.content.res.ColorStateList) -> from
    76:76:androidx.core.content.res.ComplexColorCompat from(int) -> from
    86:86:int getColor() -> getColor
    81:81:android.graphics.Shader getShader() -> getShader
    140:144:androidx.core.content.res.ComplexColorCompat inflate(android.content.res.Resources,int,android.content.res.Resources$Theme) -> inflate
    94:94:boolean isGradient() -> isGradient
    98:98:boolean isStateful() -> isStateful
    108:117:boolean onStateChanged(int[]) -> onStateChanged
    90:91:void setColor(int) -> setColor
    124:124:boolean willDraw() -> willDraw
androidx.core.content.res.ConfigurationHelper -> androidx.core.content.res.ConfigurationHelper:
    31:32:void <init>() -> <init>
    41:44:int getDensityDpi(android.content.res.Resources) -> getDensityDpi
androidx.core.content.res.FontResourcesParserCompat -> androidx.core.content.res.FontResourcesParserCompat:
    331:332:void <init>() -> <init>
    230:235:int getType(android.content.res.TypedArray,int) -> getType
    168:176:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> parse
    246:270:java.util.List readCerts(android.content.res.Resources,int) -> readCerts
    181:187:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFamilies
    193:226:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFamily
    285:313:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry readFont(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFont
    318:329:void skip(org.xmlpull.v1.XmlPullParser) -> skip
    276:280:java.util.List toByteArrayList(java.lang.String[]) -> toByteArrayList
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry -> androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry:
    153:155:void <init>(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[]) -> <init>
    158:158:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] getEntries() -> getEntries
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry -> androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry:
    113:120:void <init>(java.lang.String,int,boolean,java.lang.String,int,int) -> <init>
    123:123:java.lang.String getFileName() -> getFileName
    143:143:int getResourceId() -> getResourceId
    139:139:int getTtcIndex() -> getTtcIndex
    135:135:java.lang.String getVariationSettings() -> getVariationSettings
    127:127:int getWeight() -> getWeight
    131:131:boolean isItalic() -> isItalic
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry -> androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry:
    82:86:void <init>(androidx.core.provider.FontRequest,int,int) -> <init>
    93:93:int getFetchStrategy() -> getFetchStrategy
    89:89:androidx.core.provider.FontRequest getRequest() -> getRequest
    97:97:int getTimeout() -> getTimeout
androidx.core.content.res.GradientColorInflaterCompat -> androidx.core.content.res.GradientColorInflaterCompat:
    66:67:void <init>() -> <init>
    192:197:androidx.core.content.res.GradientColorInflaterCompat$ColorStops checkColors(androidx.core.content.res.GradientColorInflaterCompat$ColorStops,int,int,boolean,int) -> checkColors
    71:83:android.graphics.Shader createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> createFromXml
    90:142:android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    150:186:androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflateChildElements
    202:209:android.graphics.Shader$TileMode parseTileMode(int) -> parseTileMode
androidx.core.content.res.GradientColorInflaterCompat$ColorStops -> androidx.core.content.res.GradientColorInflaterCompat$ColorStops:
    217:225:void <init>(java.util.List,java.util.List) -> <init>
    227:230:void <init>(int,int) -> <init>
    232:235:void <init>(int,int,int) -> <init>
androidx.core.content.res.GrowingArrayUtils -> androidx.core.content.res.GrowingArrayUtils:
    29:29:void <clinit>() -> <clinit>
    193:193:void <init>() -> <init>
    41:50:java.lang.Object[] append(java.lang.Object[],int,java.lang.Object) -> append
    57:65:int[] append(int[],int,int) -> append
    72:80:long[] append(long[],int,long) -> append
    87:95:boolean[] append(boolean[],int,boolean) -> append
    189:189:int growSize(int) -> growSize
    110:123:java.lang.Object[] insert(java.lang.Object[],int,int,java.lang.Object) -> insert
    130:142:int[] insert(int[],int,int,int) -> insert
    149:161:long[] insert(long[],int,int,long) -> insert
    168:180:boolean[] insert(boolean[],int,int,boolean) -> insert
androidx.core.content.res.ResourcesCompat -> androidx.core.content.res.ResourcesCompat:
    418:418:void <init>() -> <init>
    144:147:int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getColor
    174:177:android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getColorStateList
    81:84:android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getDrawable
    114:119:android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
    204:207:android.graphics.Typeface getFont(android.content.Context,int) -> getFont
    295:303:void getFont(android.content.Context,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler) -> getFont
    313:316:android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback) -> getFont
    336:344:android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean) -> loadFont
    356:415:android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean) -> loadFont
androidx.core.content.res.ResourcesCompat$FontCallback -> androidx.core.content.res.ResourcesCompat$FontCallback:
    214:214:void <init>() -> <init>
    263:272:void callbackFailAsync(int,android.os.Handler) -> callbackFailAsync
    244:253:void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler) -> callbackSuccessAsync
androidx.core.content.res.ResourcesCompat$FontCallback$1 -> androidx.core.content.res.ResourcesCompat$FontCallback$1:
    247:247:void <init>(androidx.core.content.res.ResourcesCompat$FontCallback,android.graphics.Typeface) -> <init>
    250:251:void run() -> run
androidx.core.content.res.ResourcesCompat$FontCallback$2 -> androidx.core.content.res.ResourcesCompat$FontCallback$2:
    266:266:void <init>(androidx.core.content.res.ResourcesCompat$FontCallback,int) -> <init>
    269:270:void run() -> run
androidx.core.content.res.TypedArrayUtils -> androidx.core.content.res.TypedArrayUtils:
    325:326:void <init>() -> <init>
    317:322:int getAttr(android.content.Context,int,int) -> getAttr
    227:228:boolean getBoolean(android.content.res.TypedArray,int,int,boolean) -> getBoolean
    238:242:android.graphics.drawable.Drawable getDrawable(android.content.res.TypedArray,int,int) -> getDrawable
    251:252:int getInt(android.content.res.TypedArray,int,int,int) -> getInt
    86:90:boolean getNamedBoolean(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,boolean) -> getNamedBoolean
    121:125:int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> getNamedColor
    139:153:androidx.core.content.res.ComplexColorCompat getNamedComplexColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int,int) -> getNamedComplexColor
    69:73:float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float) -> getNamedFloat
    103:107:int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> getNamedInt
    166:170:int getNamedResourceId(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> getNamedResourceId
    184:188:java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> getNamedString
    262:263:int getResourceId(android.content.res.TypedArray,int,int,int) -> getResourceId
    273:277:java.lang.String getString(android.content.res.TypedArray,int,int) -> getString
    289:293:java.lang.CharSequence getText(android.content.res.TypedArray,int,int) -> getText
    305:309:java.lang.CharSequence[] getTextArray(android.content.res.TypedArray,int,int) -> getTextArray
    57:57:boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String) -> hasAttribute
    215:218:android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]) -> obtainAttributes
    200:204:android.util.TypedValue peekNamedValue(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> peekNamedValue
androidx.core.database.CursorWindowCompat -> androidx.core.database.CursorWindowCompat:
    30:32:void <init>() -> <init>
    41:47:android.database.CursorWindow create(java.lang.String,long) -> create
androidx.core.database.DatabaseUtilsCompat -> androidx.core.database.DatabaseUtilsCompat:
    29:31:void <init>() -> <init>
    60:66:java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[]) -> appendSelectionArgs
    41:48:java.lang.String concatenateWhere(java.lang.String,java.lang.String) -> concatenateWhere
androidx.core.database.sqlite.SQLiteCursorCompat -> androidx.core.database.sqlite.SQLiteCursorCompat:
    29:31:void <init>() -> <init>
    45:48:void setFillWindowForwardOnly(android.database.sqlite.SQLiteCursor,boolean) -> setFillWindowForwardOnly
androidx.core.graphics.BitmapCompat -> androidx.core.graphics.BitmapCompat:
    54:54:void <init>() -> <init>
    48:51:int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
    28:31:boolean hasMipMap(android.graphics.Bitmap) -> hasMipMap
    35:38:void setHasMipMap(android.graphics.Bitmap,boolean) -> setHasMipMap
androidx.core.graphics.ColorUtils -> androidx.core.graphics.ColorUtils:
    45:45:void <clinit>() -> <clinit>
    47:47:void <init>() -> <init>
    306:356:int HSLToColor(float[]) -> HSLToColor
    570:572:int LABToColor(double,double,double) -> LABToColor
    513:527:void LABToXYZ(double,double,double,double[]) -> LABToXYZ
    241:275:void RGBToHSL(int,int,int,float[]) -> RGBToHSL
    399:403:void RGBToLAB(int,int,int,double[]) -> RGBToLAB
    444:458:void RGBToXYZ(int,int,int,double[]) -> RGBToXYZ
    544:555:int XYZToColor(double,double,double) -> XYZToColor
    481:490:void XYZToLAB(double,double,double,double[]) -> XYZToLAB
    611:616:int blendARGB(int,int,float) -> blendARGB
    633:641:void blendHSL(float[],float[],float,float[]) -> blendHSL
    656:663:void blendLAB(double[],double[],double,double[]) -> blendLAB
    159:172:double calculateContrast(int,int) -> calculateContrast
    145:148:double calculateLuminance(int) -> calculateLuminance
    187:222:int calculateMinimumAlpha(int,int,float) -> calculateMinimumAlpha
    667:674:float circularInterpolate(float,float,float) -> circularInterpolate
    289:290:void colorToHSL(int,float[]) -> colorToHSL
    378:379:void colorToLAB(int,double[]) -> colorToLAB
    421:422:void colorToXYZ(int,double[]) -> colorToXYZ
    131:131:int compositeAlpha(int,int) -> compositeAlpha
    53:64:int compositeColors(int,int) -> compositeColors
    92:127:android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color) -> compositeColors
    135:136:int compositeComponent(int,int,int,int,int) -> compositeComponent
    585:585:float constrain(float,float,float) -> constrain
    589:589:int constrain(int,int,int) -> constrain
    579:581:double distanceEuclidean(double[],double[]) -> distanceEuclidean
    678:683:double[] getTempDouble3Array() -> getTempDouble3Array
    593:594:double pivotXyzComponent(double) -> pivotXyzComponent
    365:368:int setAlphaComponent(int,int) -> setAlphaComponent
androidx.core.graphics.PaintCompat -> androidx.core.graphics.PaintCompat:
    34:34:void <clinit>() -> <clinit>
    119:119:void <init>() -> <init>
    45:104:boolean hasGlyph(android.graphics.Paint,java.lang.String) -> hasGlyph
    108:116:androidx.core.util.Pair obtainEmptyRects() -> obtainEmptyRects
androidx.core.graphics.PathParser -> androidx.core.graphics.PathParser:
    762:763:void <init>() -> <init>
    189:190:void addNode(java.util.ArrayList,char,float[]) -> addNode
    137:151:boolean canMorph(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]) -> canMorph
    55:66:float[] copyOfRange(float[],int,int) -> copyOfRange
    92:113:androidx.core.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String) -> createNodesFromPathData
    74:84:android.graphics.Path createPathFromPathData(java.lang.String) -> createPathFromPathData
    121:128:androidx.core.graphics.PathParser$PathDataNode[] deepCopyNodes(androidx.core.graphics.PathParser$PathDataNode[]) -> deepCopyNodes
    257:299:void extract(java.lang.String,int,androidx.core.graphics.PathParser$ExtractFloatResult) -> extract
    210:243:float[] getFloats(java.lang.String) -> getFloats
    173:185:int nextStart(java.lang.String,int) -> nextStart
    162:168:void updateNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]) -> updateNodes
androidx.core.graphics.PathParser$ExtractFloatResult -> androidx.core.graphics.PathParser$ExtractFloatResult:
    198:199:void <init>() -> <init>
androidx.core.graphics.PathParser$PathDataNode -> androidx.core.graphics.PathParser$PathDataNode:
    320:323:void <init>(char,float[]) -> <init>
    325:328:void <init>(androidx.core.graphics.PathParser$PathDataNode) -> <init>
    365:610:void addCommand(android.graphics.Path,float[],char,char,float[]) -> addCommand
    717:759:void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double) -> arcToBezier
    624:687:void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean) -> drawArc
    356:360:void interpolatePathDataNode(androidx.core.graphics.PathParser$PathDataNode,androidx.core.graphics.PathParser$PathDataNode,float) -> interpolatePathDataNode
    337:343:void nodesToPath(androidx.core.graphics.PathParser$PathDataNode[],android.graphics.Path) -> nodesToPath
androidx.core.graphics.PathSegment -> androidx.core.graphics.PathSegment:
    37:42:void <init>(android.graphics.PointF,float,android.graphics.PointF,float) -> <init>
    72:78:boolean equals(java.lang.Object) -> equals
    60:60:android.graphics.PointF getEnd() -> getEnd
    67:67:float getEndFraction() -> getEndFraction
    47:47:android.graphics.PointF getStart() -> getStart
    54:54:float getStartFraction() -> getStartFraction
    83:87:int hashCode() -> hashCode
    92:92:java.lang.String toString() -> toString
androidx.core.graphics.PathUtils -> androidx.core.graphics.PathUtils:
    82:83:void <init>() -> <init>
    43:43:java.util.Collection flatten(android.graphics.Path) -> flatten
    60:79:java.util.Collection flatten(android.graphics.Path,float) -> flatten
androidx.core.graphics.TypefaceCompat -> androidx.core.graphics.TypefaceCompat:
    49:66:void <clinit>() -> <clinit>
    68:68:void <init>() -> <init>
    155:155:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    104:130:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean) -> createFromResourcesFamilyXml
    140:146:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    89:89:java.lang.String createResourceUid(android.content.res.Resources,int,int) -> createResourceUid
    77:77:android.graphics.Typeface findFromCache(android.content.res.Resources,int,int) -> findFromCache
androidx.core.graphics.TypefaceCompatApi21Impl -> androidx.core.graphics.TypefaceCompatApi21Impl:
    46:46:void <init>() -> <init>
    66:83:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    51:59:java.io.File getFile(android.os.ParcelFileDescriptor) -> getFile
androidx.core.graphics.TypefaceCompatApi24Impl -> androidx.core.graphics.TypefaceCompatApi24Impl:
    69:88:void <clinit>() -> <clinit>
    51:51:void <init>() -> <init>
    112:116:boolean addFontWeightStyle(java.lang.Object,java.nio.ByteBuffer,int,int,boolean) -> addFontWeightStyle
    122:127:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    156:167:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    134:150:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    94:98:boolean isUsable() -> isUsable
    103:105:java.lang.Object newFamily() -> newFamily
androidx.core.graphics.TypefaceCompatApi26Impl -> androidx.core.graphics.TypefaceCompatApi26Impl:
    75:109:void <init>() -> <init>
    196:200:void abortCreation(java.lang.Object) -> abortCreation
    140:145:boolean addFontFromAssetManager(android.content.Context,java.lang.Object,java.lang.String,int,int,int,android.graphics.fonts.FontVariationAxis[]) -> addFontFromAssetManager
    156:160:boolean addFontFromBuffer(java.lang.Object,java.nio.ByteBuffer,int,int,int) -> addFontFromBuffer
    170:175:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    206:221:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    228:274:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    284:297:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    184:187:boolean freeze(java.lang.Object) -> freeze
    115:119:boolean isFontFamilyPrivateAPIAvailable() -> isFontFamilyPrivateAPIAvailable
    127:129:java.lang.Object newFamily() -> newFamily
    331:331:java.lang.reflect.Method obtainAbortCreationMethod(java.lang.Class) -> obtainAbortCreationMethod
    315:315:java.lang.reflect.Method obtainAddFontFromAssetManagerMethod(java.lang.Class) -> obtainAddFontFromAssetManagerMethod
    321:321:java.lang.reflect.Method obtainAddFontFromBufferMethod(java.lang.Class) -> obtainAddFontFromBufferMethod
    336:340:java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class) -> obtainCreateFromFamiliesWithDefaultMethod
    306:306:java.lang.Class obtainFontFamily() -> obtainFontFamily
    310:310:java.lang.reflect.Constructor obtainFontFamilyCtor(java.lang.Class) -> obtainFontFamilyCtor
    327:327:java.lang.reflect.Method obtainFreezeMethod(java.lang.Class) -> obtainFreezeMethod
androidx.core.graphics.TypefaceCompatApi28Impl -> androidx.core.graphics.TypefaceCompatApi28Impl:
    36:36:void <init>() -> <init>
    51:56:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    63:67:java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class) -> obtainCreateFromFamiliesWithDefaultMethod
androidx.core.graphics.TypefaceCompatBaseImpl -> androidx.core.graphics.TypefaceCompatBaseImpl:
    42:46:void <init>() -> <init>
    140:145:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    108:119:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    86:101:android.graphics.Typeface createFromInputStream(android.content.Context,java.io.InputStream) -> createFromInputStream
    154:169:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    124:124:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry findBestEntry(androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,int) -> findBestEntry
    52:67:java.lang.Object findBestFont(java.lang.Object[],int,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor) -> findBestFont
    71:71:androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int) -> findBestInfo
androidx.core.graphics.TypefaceCompatBaseImpl$1 -> androidx.core.graphics.TypefaceCompatBaseImpl$1:
    71:71:void <init>(androidx.core.graphics.TypefaceCompatBaseImpl) -> <init>
    71:71:int getWeight(java.lang.Object) -> getWeight
    74:74:int getWeight(androidx.core.provider.FontsContractCompat$FontInfo) -> getWeight
    71:71:boolean isItalic(java.lang.Object) -> isItalic
    79:79:boolean isItalic(androidx.core.provider.FontsContractCompat$FontInfo) -> isItalic
androidx.core.graphics.TypefaceCompatBaseImpl$2 -> androidx.core.graphics.TypefaceCompatBaseImpl$2:
    124:124:void <init>(androidx.core.graphics.TypefaceCompatBaseImpl) -> <init>
    124:124:int getWeight(java.lang.Object) -> getWeight
    127:127:int getWeight(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry) -> getWeight
    124:124:boolean isItalic(java.lang.Object) -> isItalic
    132:132:boolean isItalic(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry) -> isItalic
androidx.core.graphics.TypefaceCompatUtil -> androidx.core.graphics.TypefaceCompatUtil:
    52:52:void <init>() -> <init>
    170:176:void closeQuietly(java.io.Closeable) -> closeQuietly
    119:129:java.nio.ByteBuffer copyToDirectBuffer(android.content.Context,android.content.res.Resources,int) -> copyToDirectBuffer
    137:152:boolean copyToFile(java.io.File,java.io.InputStream) -> copyToFile
    160:165:boolean copyToFile(java.io.File,android.content.res.Resources,int) -> copyToFile
    63:74:java.io.File getTempFile(android.content.Context) -> getTempFile
    83:88:java.nio.ByteBuffer mmap(java.io.File) -> mmap
    98:109:java.nio.ByteBuffer mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri) -> mmap
androidx.core.graphics.drawable.DrawableCompat -> androidx.core.graphics.drawable.DrawableCompat:
    419:419:void <init>() -> <init>
    188:191:void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme) -> applyTheme
    197:200:boolean canApplyTheme(android.graphics.drawable.Drawable) -> canApplyTheme
    221:252:void clearColorFilter(android.graphics.drawable.Drawable) -> clearColorFilter
    177:180:int getAlpha(android.graphics.drawable.Drawable) -> getAlpha
    210:213:android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable) -> getColorFilter
    391:415:int getLayoutDirection(android.graphics.drawable.Drawable) -> getLayoutDirection
    268:273:void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    95:98:boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    62:63:void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    78:81:void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    110:113:void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    123:126:void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    354:379:boolean setLayoutDirection(android.graphics.drawable.Drawable,int) -> setLayoutDirection
    135:140:void setTint(android.graphics.drawable.Drawable,int) -> setTint
    149:154:void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    163:168:void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
    334:337:android.graphics.drawable.Drawable unwrap(android.graphics.drawable.Drawable) -> unwrap
    307:318:android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
androidx.core.graphics.drawable.IconCompat -> androidx.core.graphics.drawable.IconCompat:
    176:176:void <clinit>() -> <clinit>
    172:308:void <init>() -> <init>
    172:312:void <init>(int) -> <init>
    590:639:void addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable,android.content.Context) -> addToShortcutIntent
    461:478:void checkResource(android.content.Context) -> checkResource
    803:831:androidx.core.graphics.drawable.IconCompat createFromBundle(android.os.Bundle) -> createFromBundle
    840:855:androidx.core.graphics.drawable.IconCompat createFromIcon(android.content.Context,android.graphics.drawable.Icon) -> createFromIcon
    866:875:androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon) -> createFromIcon
    999:1034:android.graphics.Bitmap createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean) -> createLegacyIconFromAdaptiveIcon
    246:251:androidx.core.graphics.drawable.IconCompat createWithAdaptiveBitmap(android.graphics.Bitmap) -> createWithAdaptiveBitmap
    231:236:androidx.core.graphics.drawable.IconCompat createWithBitmap(android.graphics.Bitmap) -> createWithBitmap
    281:286:androidx.core.graphics.drawable.IconCompat createWithContentUri(java.lang.String) -> createWithContentUri
    296:299:androidx.core.graphics.drawable.IconCompat createWithContentUri(android.net.Uri) -> createWithContentUri
    264:271:androidx.core.graphics.drawable.IconCompat createWithData(byte[],int,int) -> createWithData
    194:197:androidx.core.graphics.drawable.IconCompat createWithResource(android.content.Context,int) -> createWithResource
    205:222:androidx.core.graphics.drawable.IconCompat createWithResource(android.content.res.Resources,java.lang.String,int) -> createWithResource
    356:362:int getResId() -> getResId
    945:958:int getResId(android.graphics.drawable.Icon) -> getResId
    338:344:java.lang.String getResPackage() -> getResPackage
    916:929:java.lang.String getResPackage(android.graphics.drawable.Icon) -> getResPackage
    562:577:android.content.res.Resources getResources(android.content.Context,java.lang.String) -> getResources
    323:326:int getType() -> getType
    888:901:int getType(android.graphics.drawable.Icon) -> getType
    374:377:android.net.Uri getUri() -> getUri
    973:986:android.net.Uri getUri(android.graphics.drawable.Icon) -> getUri
    489:499:android.graphics.drawable.Drawable loadDrawable(android.content.Context) -> loadDrawable
    507:558:android.graphics.drawable.Drawable loadDrawableInner(android.content.Context) -> loadDrawableInner
    757:786:void onPostParceling() -> onPostParceling
    721:753:void onPreParceling(boolean) -> onPreParceling
    387:387:androidx.core.graphics.drawable.IconCompat setTint(int) -> setTint
    397:398:androidx.core.graphics.drawable.IconCompat setTintList(android.content.res.ColorStateList) -> setTintList
    408:409:androidx.core.graphics.drawable.IconCompat setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    646:675:android.os.Bundle toBundle() -> toBundle
    420:453:android.graphics.drawable.Icon toIcon() -> toIcon
    680:716:java.lang.String toString() -> toString
    789:795:java.lang.String typeToString(int) -> typeToString
androidx.core.graphics.drawable.IconCompatParcelizer -> androidx.core.graphics.drawable.IconCompatParcelizer:
    9:9:void <init>() -> <init>
    11:20:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    24:33:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.core.graphics.drawable.RoundedBitmapDrawable -> androidx.core.graphics.drawable.RoundedBitmapDrawable:
    50:395:void <init>(android.content.res.Resources,android.graphics.Bitmap) -> <init>
    84:86:void computeBitmapSize() -> computeBitmapSize
    260:271:void draw(android.graphics.Canvas) -> draw
    284:284:int getAlpha() -> getAlpha
    80:80:android.graphics.Bitmap getBitmap() -> getBitmap
    295:295:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    356:356:float getCornerRadius() -> getCornerRadius
    140:140:int getGravity() -> getGravity
    366:366:int getIntrinsicHeight() -> getIntrinsicHeight
    361:361:int getIntrinsicWidth() -> getIntrinsicWidth
    371:378:int getOpacity() -> getOpacity
    72:72:android.graphics.Paint getPaint() -> getPaint
    223:223:void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect) -> gravityCompatApply
    206:206:boolean hasAntiAlias() -> hasAntiAlias
    182:182:boolean hasMipMap() -> hasMipMap
    323:323:boolean isCircular() -> isCircular
    398:398:boolean isGreaterThanZero(float) -> isGreaterThanZero
    345:350:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    275:280:void setAlpha(int) -> setAlpha
    194:196:void setAntiAlias(boolean) -> setAntiAlias
    303:312:void setCircular(boolean) -> setCircular
    289:291:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    330:341:void setCornerRadius(float) -> setCornerRadius
    217:219:void setDither(boolean) -> setDither
    211:213:void setFilterBitmap(boolean) -> setFilterBitmap
    151:156:void setGravity(int) -> setGravity
    170:170:void setMipMap(boolean) -> setMipMap
    99:100:void setTargetDensity(android.graphics.Canvas) -> setTargetDensity
    111:112:void setTargetDensity(android.util.DisplayMetrics) -> setTargetDensity
    123:130:void setTargetDensity(int) -> setTargetDensity
    315:317:void updateCircularCornerRadius() -> updateCircularCornerRadius
    227:256:void updateDstRect() -> updateDstRect
androidx.core.graphics.drawable.RoundedBitmapDrawable21 -> androidx.core.graphics.drawable.RoundedBitmapDrawable21:
    31:32:void <init>(android.content.res.Resources,android.graphics.Bitmap) -> <init>
    36:38:void getOutline(android.graphics.Outline) -> getOutline
    56:58:void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect) -> gravityCompatApply
    50:50:boolean hasMipMap() -> hasMipMap
    42:46:void setMipMap(boolean) -> setMipMap
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory -> androidx.core.graphics.drawable.RoundedBitmapDrawableFactory:
    104:104:void <init>() -> <init>
    73:76:androidx.core.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,android.graphics.Bitmap) -> create
    84:88:androidx.core.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,java.lang.String) -> create
    97:101:androidx.core.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,java.io.InputStream) -> create
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable -> androidx.core.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable:
    43:44:void <init>(android.content.res.Resources,android.graphics.Bitmap) -> <init>
    62:64:void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect) -> gravityCompatApply
    56:56:boolean hasMipMap() -> hasMipMap
    48:52:void setMipMap(boolean) -> setMipMap
androidx.core.graphics.drawable.WrappedDrawableApi14 -> androidx.core.graphics.drawable.WrappedDrawableApi14:
    41:41:void <clinit>() -> <clinit>
    52:55:void <init>(androidx.core.graphics.drawable.WrappedDrawableApi14$DrawableWrapperState,android.content.res.Resources) -> <init>
    62:66:void <init>(android.graphics.drawable.Drawable) -> <init>
    86:87:void draw(android.graphics.Canvas) -> draw
    103:105:int getChangingConfigurations() -> getChangingConfigurations
    210:214:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    152:152:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    177:177:int getIntrinsicHeight() -> getIntrinsicHeight
    172:172:int getIntrinsicWidth() -> getIntrinsicWidth
    187:187:int getMinimumHeight() -> getMinimumHeight
    182:182:int getMinimumWidth() -> getMinimumWidth
    162:162:int getOpacity() -> getOpacity
    192:192:boolean getPadding(android.graphics.Rect) -> getPadding
    146:146:int[] getState() -> getState
    167:167:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    322:322:android.graphics.drawable.Drawable getWrappedDrawable() -> getWrappedDrawable
    251:252:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    204:204:boolean isAutoMirrored() -> isAutoMirrored
    353:353:boolean isCompatTintEnabled() -> isCompatTintEnabled
    130:133:boolean isStateful() -> isStateful
    81:82:void jumpToCurrentState() -> jumpToCurrentState
    220:230:android.graphics.drawable.Drawable mutate() -> mutate
    243:243:androidx.core.graphics.drawable.WrappedDrawableApi14$DrawableWrapperState mutateConstantState() -> mutateConstantState
    91:94:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    272:272:boolean onLevelChange(int) -> onLevelChange
    259:260:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    120:121:void setAlpha(int) -> setAlpha
    198:199:void setAutoMirrored(boolean) -> setAutoMirrored
    98:99:void setChangingConfigurations(int) -> setChangingConfigurations
    125:126:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    110:111:void setDither(boolean) -> setDither
    115:116:void setFilterBitmap(boolean) -> setFilterBitmap
    138:140:boolean setState(int[]) -> setState
    277:278:void setTint(int) -> setTint
    282:284:void setTintList(android.content.res.ColorStateList) -> setTintList
    288:290:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    157:157:boolean setVisible(boolean,boolean) -> setVisible
    330:349:void setWrappedDrawable(android.graphics.drawable.Drawable) -> setWrappedDrawable
    267:268:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    74:77:void updateLocalState(android.content.res.Resources) -> updateLocalState
    293:314:boolean updateTint(int[]) -> updateTint
androidx.core.graphics.drawable.WrappedDrawableApi14$DrawableWrapperState -> androidx.core.graphics.drawable.WrappedDrawableApi14$DrawableWrapperState:
    360:370:void <init>(androidx.core.graphics.drawable.WrappedDrawableApi14$DrawableWrapperState,android.content.res.Resources) -> <init>
    389:389:boolean canConstantState() -> canConstantState
    384:385:int getChangingConfigurations() -> getChangingConfigurations
    375:375:android.graphics.drawable.Drawable newDrawable() -> newDrawable
androidx.core.graphics.drawable.WrappedDrawableApi14$DrawableWrapperStateBase -> androidx.core.graphics.drawable.WrappedDrawableApi14$DrawableWrapperStateBase:
    396:397:void <init>(androidx.core.graphics.drawable.WrappedDrawableApi14$DrawableWrapperState,android.content.res.Resources) -> <init>
    402:402:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
androidx.core.graphics.drawable.WrappedDrawableApi21 -> androidx.core.graphics.drawable.WrappedDrawableApi21:
    44:46:void <init>(android.graphics.drawable.Drawable) -> <init>
    49:51:void <init>(androidx.core.graphics.drawable.WrappedDrawableApi14$DrawableWrapperState,android.content.res.Resources) -> <init>
    160:167:void findAndCacheIsProjectedDrawableMethod() -> findAndCacheIsProjectedDrawableMethod
    71:71:android.graphics.Rect getDirtyBounds() -> getDirtyBounds
    65:66:void getOutline(android.graphics.Outline) -> getOutline
    114:121:boolean isCompatTintEnabled() -> isCompatTintEnabled
    129:137:boolean isProjected() -> isProjected
    143:143:androidx.core.graphics.drawable.WrappedDrawableApi14$DrawableWrapperState mutateConstantState() -> mutateConstantState
    55:56:void setHotspot(float,float) -> setHotspot
    60:61:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    103:109:boolean setState(int[]) -> setState
    85:90:void setTint(int) -> setTint
    76:81:void setTintList(android.content.res.ColorStateList) -> setTintList
    94:99:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
androidx.core.graphics.drawable.WrappedDrawableApi21$DrawableWrapperStateLollipop -> androidx.core.graphics.drawable.WrappedDrawableApi21$DrawableWrapperStateLollipop:
    149:150:void <init>(androidx.core.graphics.drawable.WrappedDrawableApi14$DrawableWrapperState,android.content.res.Resources) -> <init>
    155:155:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
androidx.core.hardware.display.DisplayManagerCompat -> androidx.core.hardware.display.DisplayManagerCompat:
    34:34:void <clinit>() -> <clinit>
    53:55:void <init>(android.content.Context) -> <init>
    83:93:android.view.Display getDisplay(int) -> getDisplay
    103:110:android.view.Display[] getDisplays() -> getDisplays
    131:141:android.view.Display[] getDisplays(java.lang.String) -> getDisplays
    62:69:androidx.core.hardware.display.DisplayManagerCompat getInstance(android.content.Context) -> getInstance
androidx.core.hardware.fingerprint.FingerprintManagerCompat -> androidx.core.hardware.fingerprint.FingerprintManagerCompat:
    52:54:void <init>(android.content.Context) -> <init>
    104:118:void authenticate(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject,int,androidx.core.os.CancellationSignal,androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback,android.os.Handler) -> authenticate
    49:49:androidx.core.hardware.fingerprint.FingerprintManagerCompat from(android.content.Context) -> from
    123:126:android.hardware.fingerprint.FingerprintManager getFingerprintManagerOrNull(android.content.Context) -> getFingerprintManagerOrNull
    63:67:boolean hasEnrolledFingerprints() -> hasEnrolledFingerprints
    78:82:boolean isHardwareDetected() -> isHardwareDetected
    147:156:androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject unwrapCryptoObject(android.hardware.fingerprint.FingerprintManager$CryptoObject) -> unwrapCryptoObject
    163:163:android.hardware.fingerprint.FingerprintManager$AuthenticationCallback wrapCallback(androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback) -> wrapCallback
    132:141:android.hardware.fingerprint.FingerprintManager$CryptoObject wrapCryptoObject(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject) -> wrapCryptoObject
androidx.core.hardware.fingerprint.FingerprintManagerCompat$1 -> androidx.core.hardware.fingerprint.FingerprintManagerCompat$1:
    163:163:void <init>(androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback) -> <init>
    166:167:void onAuthenticationError(int,java.lang.CharSequence) -> onAuthenticationError
    182:183:void onAuthenticationFailed() -> onAuthenticationFailed
    171:172:void onAuthenticationHelp(int,java.lang.CharSequence) -> onAuthenticationHelp
    176:178:void onAuthenticationSucceeded(android.hardware.fingerprint.FingerprintManager$AuthenticationResult) -> onAuthenticationSucceeded
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback -> androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback:
    264:264:void <init>() -> <init>
    271:271:void onAuthenticationError(int,java.lang.CharSequence) -> onAuthenticationError
    291:291:void onAuthenticationFailed() -> onAuthenticationFailed
    280:280:void onAuthenticationHelp(int,java.lang.CharSequence) -> onAuthenticationHelp
    286:286:void onAuthenticationSucceeded(androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult) -> onAuthenticationSucceeded
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult -> androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult:
    245:247:void <init>(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject) -> <init>
    254:254:androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject getCryptoObject() -> getCryptoObject
androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject -> androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject:
    197:202:void <init>(java.security.Signature) -> <init>
    204:208:void <init>(javax.crypto.Cipher) -> <init>
    210:214:void <init>(javax.crypto.Mac) -> <init>
    228:228:javax.crypto.Cipher getCipher() -> getCipher
    235:235:javax.crypto.Mac getMac() -> getMac
    221:221:java.security.Signature getSignature() -> getSignature
androidx.core.math.MathUtils -> androidx.core.math.MathUtils:
    24:24:void <init>() -> <init>
    39:44:float clamp(float,float,float) -> clamp
    60:65:double clamp(double,double,double) -> clamp
    81:86:int clamp(int,int,int) -> clamp
androidx.core.net.ConnectivityManagerCompat -> androidx.core.net.ConnectivityManagerCompat:
    164:164:void <init>() -> <init>
    139:143:android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent) -> getNetworkInfoFromBroadcast
    157:160:int getRestrictBackgroundStatus(android.net.ConnectivityManager) -> getRestrictBackgroundStatus
    99:123:boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
androidx.core.net.DatagramSocketWrapper -> androidx.core.net.DatagramSocketWrapper:
    32:33:void <init>(java.net.DatagramSocket,java.io.FileDescriptor) -> <init>
androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper -> androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper:
    40:43:void <init>(java.net.DatagramSocket,java.io.FileDescriptor) -> <init>
    47:47:void accept(java.net.SocketImpl) -> accept
    52:52:int available() -> available
    57:57:void bind(java.net.InetAddress,int) -> bind
    62:62:void close() -> close
    67:67:void connect(java.lang.String,int) -> connect
    72:72:void connect(java.net.InetAddress,int) -> connect
    97:97:void connect(java.net.SocketAddress,int) -> connect
    77:77:void create(boolean) -> create
    82:82:java.io.InputStream getInputStream() -> getInputStream
    107:107:java.lang.Object getOption(int) -> getOption
    87:87:java.io.OutputStream getOutputStream() -> getOutputStream
    92:92:void listen(int) -> listen
    102:102:void sendUrgentData(int) -> sendUrgentData
    112:112:void setOption(int,java.lang.Object) -> setOption
androidx.core.net.TrafficStatsCompat -> androidx.core.net.TrafficStatsCompat:
    167:167:void <init>() -> <init>
    41:42:void clearThreadStatsTag() -> clearThreadStatsTag
    53:53:int getThreadStatsTag() -> getThreadStatsTag
    67:68:void incrementOperationCount(int) -> incrementOperationCount
    81:82:void incrementOperationCount(int,int) -> incrementOperationCount
    99:100:void setThreadStatsTag(int) -> setThreadStatsTag
    137:148:void tagDatagramSocket(java.net.DatagramSocket) -> tagDatagramSocket
    114:115:void tagSocket(java.net.Socket) -> tagSocket
    154:165:void untagDatagramSocket(java.net.DatagramSocket) -> untagDatagramSocket
    124:125:void untagSocket(java.net.Socket) -> untagSocket
androidx.core.os.BuildCompat -> androidx.core.os.BuildCompat:
    26:27:void <init>() -> <init>
    39:39:boolean isAtLeastN() -> isAtLeastN
    52:52:boolean isAtLeastNMR1() -> isAtLeastNMR1
    65:65:boolean isAtLeastO() -> isAtLeastO
    78:78:boolean isAtLeastOMR1() -> isAtLeastOMR1
    91:91:boolean isAtLeastP() -> isAtLeastP
    104:106:boolean isAtLeastQ() -> isAtLeastQ
androidx.core.os.CancellationSignal -> androidx.core.os.CancellationSignal:
    35:36:void <init>() -> <init>
    67:90:void cancel() -> cancel
    135:146:java.lang.Object getCancellationSignalObject() -> getCancellationSignalObject
    44:46:boolean isCanceled() -> isCanceled
    109:121:void setOnCancelListener(androidx.core.os.CancellationSignal$OnCancelListener) -> setOnCancelListener
    55:58:void throwIfCanceled() -> throwIfCanceled
    150:156:void waitForCancelFinishedLocked() -> waitForCancelFinishedLocked
androidx.core.os.ConfigurationCompat -> androidx.core.os.ConfigurationCompat:
    28:29:void <init>() -> <init>
    37:40:androidx.core.os.LocaleListCompat getLocales(android.content.res.Configuration) -> getLocales
androidx.core.os.EnvironmentCompat -> androidx.core.os.EnvironmentCompat:
    74:74:void <init>() -> <init>
    55:71:java.lang.String getStorageState(java.io.File) -> getStorageState
androidx.core.os.HandlerCompat -> androidx.core.os.HandlerCompat:
    64:65:void <init>() -> <init>
    55:61:boolean postDelayed(android.os.Handler,java.lang.Runnable,java.lang.Object,long) -> postDelayed
androidx.core.os.LocaleHelper -> androidx.core.os.LocaleHelper:
    73:74:void <init>() -> <init>
    35:57:java.util.Locale forLanguageTag(java.lang.String) -> forLanguageTag
    62:70:java.lang.String toLanguageTag(java.util.Locale) -> toLanguageTag
androidx.core.os.LocaleListCompat -> androidx.core.os.LocaleListCompat:
    35:175:void <clinit>() -> <clinit>
    177:177:void <init>() -> <init>
    206:208:androidx.core.os.LocaleListCompat create(java.util.Locale[]) -> create
    340:340:boolean equals(java.lang.Object) -> equals
    289:301:androidx.core.os.LocaleListCompat forLanguageTags(java.lang.String) -> forLanguageTags
    218:218:java.util.Locale get(int) -> get
    311:314:androidx.core.os.LocaleListCompat getAdjustedDefault() -> getAdjustedDefault
    331:334:androidx.core.os.LocaleListCompat getDefault() -> getDefault
    276:276:androidx.core.os.LocaleListCompat getEmptyLocaleList() -> getEmptyLocaleList
    268:268:java.util.Locale getFirstMatch(java.lang.String[]) -> getFirstMatch
    345:345:int hashCode() -> hashCode
    249:249:int indexOf(java.util.Locale) -> indexOf
    228:228:boolean isEmpty() -> isEmpty
    355:363:void setLocaleList(android.os.LocaleList) -> setLocaleList
    366:367:void setLocaleListArray(java.util.Locale[]) -> setLocaleListArray
    236:236:int size() -> size
    257:257:java.lang.String toLanguageTags() -> toLanguageTags
    350:350:java.lang.String toString() -> toString
    199:199:java.lang.Object unwrap() -> unwrap
    184:189:androidx.core.os.LocaleListCompat wrap(java.lang.Object) -> wrap
androidx.core.os.LocaleListCompat$LocaleListCompatApi24Impl -> androidx.core.os.LocaleListCompat$LocaleListCompatApi24Impl:
    104:105:void <init>() -> <init>
    141:141:boolean equals(java.lang.Object) -> equals
    119:119:java.util.Locale get(int) -> get
    162:165:java.util.Locale getFirstMatch(java.lang.String[]) -> getFirstMatch
    114:114:java.lang.Object getLocaleList() -> getLocaleList
    146:146:int hashCode() -> hashCode
    136:136:int indexOf(java.util.Locale) -> indexOf
    124:124:boolean isEmpty() -> isEmpty
    109:110:void setLocaleList(java.util.Locale[]) -> setLocaleList
    130:130:int size() -> size
    156:156:java.lang.String toLanguageTags() -> toLanguageTags
    151:151:java.lang.String toString() -> toString
androidx.core.os.LocaleListCompat$LocaleListCompatBaseImpl -> androidx.core.os.LocaleListCompat$LocaleListCompatBaseImpl:
    38:39:void <init>() -> <init>
    75:75:boolean equals(java.lang.Object) -> equals
    53:53:java.util.Locale get(int) -> get
    96:99:java.util.Locale getFirstMatch(java.lang.String[]) -> getFirstMatch
    48:48:java.lang.Object getLocaleList() -> getLocaleList
    80:80:int hashCode() -> hashCode
    70:70:int indexOf(java.util.Locale) -> indexOf
    58:58:boolean isEmpty() -> isEmpty
    43:44:void setLocaleList(java.util.Locale[]) -> setLocaleList
    64:64:int size() -> size
    90:90:java.lang.String toLanguageTags() -> toLanguageTags
    85:85:java.lang.String toString() -> toString
androidx.core.os.LocaleListHelper -> androidx.core.os.LocaleListHelper:
    50:484:void <clinit>() -> <clinit>
    172:199:void <init>(java.util.Locale[]) -> <init>
    208:250:void <init>(java.util.Locale,androidx.core.os.LocaleListHelper) -> <init>
    392:393:java.util.Locale computeFirstMatch(java.util.Collection,boolean) -> computeFirstMatch
    354:386:int computeFirstMatchIndex(java.util.Collection,boolean) -> computeFirstMatchIndex
    109:124:boolean equals(java.lang.Object) -> equals
    341:347:int findFirstMatchIndex(java.util.Locale) -> findFirstMatchIndex
    273:281:androidx.core.os.LocaleListHelper forLanguageTags(java.lang.String) -> forLanguageTags
    62:62:java.util.Locale get(int) -> get
    533:536:androidx.core.os.LocaleListHelper getAdjustedDefault() -> getAdjustedDefault
    502:524:androidx.core.os.LocaleListHelper getDefault() -> getDefault
    259:259:androidx.core.os.LocaleListHelper getEmptyLocaleList() -> getEmptyLocaleList
    408:408:java.util.Locale getFirstMatch(java.lang.String[]) -> getFirstMatch
    417:417:int getFirstMatchIndex(java.lang.String[]) -> getFirstMatchIndex
    437:437:int getFirstMatchIndexWithEnglishSupported(java.util.Collection) -> getFirstMatchIndexWithEnglishSupported
    445:445:int getFirstMatchIndexWithEnglishSupported(java.lang.String[]) -> getFirstMatchIndexWithEnglishSupported
    428:428:java.util.Locale getFirstMatchWithEnglishSupported(java.lang.String[]) -> getFirstMatchWithEnglishSupported
    286:294:java.lang.String getLikelyScript(java.util.Locale) -> getLikelyScript
    129:133:int hashCode() -> hashCode
    99:104:int indexOf(java.util.Locale) -> indexOf
    74:74:boolean isEmpty() -> isEmpty
    304:304:boolean isPseudoLocale(java.lang.String) -> isPseudoLocale
    308:308:boolean isPseudoLocale(java.util.Locale) -> isPseudoLocale
    455:471:boolean isPseudoLocalesOnly(java.lang.String[]) -> isPseudoLocalesOnly
    313:337:int matchScore(java.util.Locale,java.util.Locale) -> matchScore
    550:551:void setDefault(androidx.core.os.LocaleListHelper) -> setDefault
    564:582:void setDefault(androidx.core.os.LocaleListHelper,int) -> setDefault
    84:84:int size() -> size
    157:157:java.lang.String toLanguageTags() -> toLanguageTags
    138:147:java.lang.String toString() -> toString
androidx.core.os.OperationCanceledException -> androidx.core.os.OperationCanceledException:
    25:26:void <init>() -> <init>
    29:30:void <init>(java.lang.String) -> <init>
androidx.core.os.ParcelCompat -> androidx.core.os.ParcelCompat:
    44:44:void <init>() -> <init>
    30:30:boolean readBoolean(android.os.Parcel) -> readBoolean
    41:42:void writeBoolean(android.os.Parcel,boolean) -> writeBoolean
androidx.core.os.ParcelableCompat -> androidx.core.os.ParcelableCompat:
    68:68:void <init>() -> <init>
    41:41:android.os.Parcelable$Creator newCreator(androidx.core.os.ParcelableCompatCreatorCallbacks) -> newCreator
androidx.core.os.ParcelableCompat$ParcelableCompatCreatorHoneycombMR2 -> androidx.core.os.ParcelableCompat$ParcelableCompatCreatorHoneycombMR2:
    48:50:void <init>(androidx.core.os.ParcelableCompatCreatorCallbacks) -> <init>
    54:54:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    59:59:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    64:64:java.lang.Object[] newArray(int) -> newArray
androidx.core.os.TraceCompat -> androidx.core.os.TraceCompat:
    62:62:void <init>() -> <init>
    44:47:void beginSection(java.lang.String) -> beginSection
    57:60:void endSection() -> endSection
androidx.core.os.UserManagerCompat -> androidx.core.os.UserManagerCompat:
    29:30:void <init>() -> <init>
    39:42:boolean isUserUnlocked(android.content.Context) -> isUserUnlocked
androidx.core.provider.FontRequest -> androidx.core.provider.FontRequest:
    56:64:void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List) -> <init>
    78:87:void <init>(java.lang.String,java.lang.String,java.lang.String,int) -> <init>
    125:125:java.util.List getCertificates() -> getCertificates
    137:137:int getCertificatesArrayResId() -> getCertificatesArrayResId
    143:143:java.lang.String getIdentifier() -> getIdentifier
    95:95:java.lang.String getProviderAuthority() -> getProviderAuthority
    104:104:java.lang.String getProviderPackage() -> getProviderPackage
    113:113:java.lang.String getQuery() -> getQuery
    148:167:java.lang.String toString() -> toString
androidx.core.provider.FontsContractCompat -> androidx.core.provider.FontsContractCompat:
    174:776:void <clinit>() -> <clinit>
    75:75:void <init>() -> <init>
    662:662:android.graphics.Typeface buildTypeface(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[]) -> buildTypeface
    805:809:java.util.List convertToByteArrayList(android.content.pm.Signature[]) -> convertToByteArrayList
    793:801:boolean equalsByteArrayList(java.util.List,java.util.List) -> equalsByteArrayList
    719:727:androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest) -> fetchFonts
    769:773:java.util.List getCertificates(androidx.core.provider.FontRequest,android.content.res.Resources) -> getCertificates
    816:873:androidx.core.provider.FontsContractCompat$FontInfo[] getFontFromProvider(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal) -> getFontFromProvider
    186:200:androidx.core.provider.FontsContractCompat$TypefaceResult getFontInternal(android.content.Context,androidx.core.provider.FontRequest,int) -> getFontInternal
    234:320:android.graphics.Typeface getFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,int,int) -> getFontSync
    736:765:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources) -> getProvider
    681:696:java.util.Map prepareFontData(android.content.Context,androidx.core.provider.FontsContractCompat$FontInfo[],android.os.CancellationSignal) -> prepareFontData
    532:645:void requestFont(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler) -> requestFont
    225:226:void resetCache() -> resetCache
androidx.core.provider.FontsContractCompat$1 -> androidx.core.provider.FontsContractCompat$1:
    256:256:void <init>(android.content.Context,androidx.core.provider.FontRequest,int,java.lang.String) -> <init>
    256:256:java.lang.Object call() -> call
    259:263:androidx.core.provider.FontsContractCompat$TypefaceResult call() -> call
androidx.core.provider.FontsContractCompat$2 -> androidx.core.provider.FontsContractCompat$2:
    275:275:void <init>(androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler) -> <init>
    275:275:void onReply(java.lang.Object) -> onReply
    278:286:void onReply(androidx.core.provider.FontsContractCompat$TypefaceResult) -> onReply
androidx.core.provider.FontsContractCompat$3 -> androidx.core.provider.FontsContractCompat$3:
    304:304:void <init>(java.lang.String) -> <init>
    304:304:void onReply(java.lang.Object) -> onReply
    308:318:void onReply(androidx.core.provider.FontsContractCompat$TypefaceResult) -> onReply
androidx.core.provider.FontsContractCompat$4 -> androidx.core.provider.FontsContractCompat$4:
    533:533:void <init>(android.content.Context,androidx.core.provider.FontRequest,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback) -> <init>
    539:643:void run() -> run
androidx.core.provider.FontsContractCompat$4$1 -> androidx.core.provider.FontsContractCompat$4$1:
    541:541:void <init>(androidx.core.provider.FontsContractCompat$4) -> <init>
    544:546:void run() -> run
androidx.core.provider.FontsContractCompat$4$2 -> androidx.core.provider.FontsContractCompat$4$2:
    554:554:void <init>(androidx.core.provider.FontsContractCompat$4) -> <init>
    557:559:void run() -> run
androidx.core.provider.FontsContractCompat$4$3 -> androidx.core.provider.FontsContractCompat$4$3:
    563:563:void <init>(androidx.core.provider.FontsContractCompat$4) -> <init>
    566:568:void run() -> run
androidx.core.provider.FontsContractCompat$4$4 -> androidx.core.provider.FontsContractCompat$4$4:
    573:573:void <init>(androidx.core.provider.FontsContractCompat$4) -> <init>
    576:578:void run() -> run
androidx.core.provider.FontsContractCompat$4$5 -> androidx.core.provider.FontsContractCompat$4$5:
    586:586:void <init>(androidx.core.provider.FontsContractCompat$4) -> <init>
    589:591:void run() -> run
androidx.core.provider.FontsContractCompat$4$6 -> androidx.core.provider.FontsContractCompat$4$6:
    603:603:void <init>(androidx.core.provider.FontsContractCompat$4) -> <init>
    606:608:void run() -> run
androidx.core.provider.FontsContractCompat$4$7 -> androidx.core.provider.FontsContractCompat$4$7:
    611:611:void <init>(androidx.core.provider.FontsContractCompat$4,int) -> <init>
    614:615:void run() -> run
androidx.core.provider.FontsContractCompat$4$8 -> androidx.core.provider.FontsContractCompat$4$8:
    627:627:void <init>(androidx.core.provider.FontsContractCompat$4) -> <init>
    630:632:void run() -> run
androidx.core.provider.FontsContractCompat$4$9 -> androidx.core.provider.FontsContractCompat$4$9:
    637:637:void <init>(androidx.core.provider.FontsContractCompat$4,android.graphics.Typeface) -> <init>
    640:641:void run() -> run
androidx.core.provider.FontsContractCompat$5 -> androidx.core.provider.FontsContractCompat$5:
    776:776:void <init>() -> <init>
    776:776:int compare(java.lang.Object,java.lang.Object) -> compare
    779:787:int compare(byte[],byte[]) -> compare
androidx.core.provider.FontsContractCompat$Columns -> androidx.core.provider.FontsContractCompat$Columns:
    84:84:void <init>() -> <init>
androidx.core.provider.FontsContractCompat$FontFamilyResult -> androidx.core.provider.FontsContractCompat$FontFamilyResult:
    428:431:void <init>(int,androidx.core.provider.FontsContractCompat$FontInfo[]) -> <init>
    438:438:androidx.core.provider.FontsContractCompat$FontInfo[] getFonts() -> getFonts
    434:434:int getStatusCode() -> getStatusCode
androidx.core.provider.FontsContractCompat$FontInfo -> androidx.core.provider.FontsContractCompat$FontInfo:
    347:353:void <init>(android.net.Uri,int,int,boolean,int) -> <init>
    389:389:int getResultCode() -> getResultCode
    366:366:int getTtcIndex() -> getTtcIndex
    359:359:android.net.Uri getUri() -> getUri
    373:373:int getWeight() -> getWeight
    380:380:boolean isItalic() -> isItalic
androidx.core.provider.FontsContractCompat$FontRequestCallback -> androidx.core.provider.FontsContractCompat$FontRequestCallback:
    494:494:void <init>() -> <init>
    515:515:void onTypefaceRequestFailed(int) -> onTypefaceRequestFailed
    502:502:void onTypefaceRetrieved(android.graphics.Typeface) -> onTypefaceRetrieved
androidx.core.provider.FontsContractCompat$TypefaceResult -> androidx.core.provider.FontsContractCompat$TypefaceResult:
    213:216:void <init>(android.graphics.Typeface,int) -> <init>
androidx.core.provider.SelfDestructiveThread -> androidx.core.provider.SelfDestructiveThread:
    44:84:void <init>(java.lang.String,int,int) -> <init>
    101:103:int getGeneration() -> getGeneration
    91:93:boolean isRunning() -> isRunning
    223:233:void onDestruction() -> onDestruction
    214:220:void onInvokeRunnable(java.lang.Runnable) -> onInvokeRunnable
    107:117:void post(java.lang.Runnable) -> post
    136:155:void postAndReply(java.util.concurrent.Callable,androidx.core.provider.SelfDestructiveThread$ReplyCallback) -> postAndReply
    166:209:java.lang.Object postAndWait(java.util.concurrent.Callable,int) -> postAndWait
androidx.core.provider.SelfDestructiveThread$1 -> androidx.core.provider.SelfDestructiveThread$1:
    58:58:void <init>(androidx.core.provider.SelfDestructiveThread) -> <init>
    61:69:boolean handleMessage(android.os.Message) -> handleMessage
androidx.core.provider.SelfDestructiveThread$2 -> androidx.core.provider.SelfDestructiveThread$2:
    137:137:void <init>(androidx.core.provider.SelfDestructiveThread,java.util.concurrent.Callable,android.os.Handler,androidx.core.provider.SelfDestructiveThread$ReplyCallback) -> <init>
    142:153:void run() -> run
androidx.core.provider.SelfDestructiveThread$2$1 -> androidx.core.provider.SelfDestructiveThread$2$1:
    147:147:void <init>(androidx.core.provider.SelfDestructiveThread$2,java.lang.Object) -> <init>
    150:151:void run() -> run
androidx.core.provider.SelfDestructiveThread$3 -> androidx.core.provider.SelfDestructiveThread$3:
    171:171:void <init>(androidx.core.provider.SelfDestructiveThread,java.util.concurrent.atomic.AtomicReference,java.util.concurrent.Callable,java.util.concurrent.locks.ReentrantLock,java.util.concurrent.atomic.AtomicBoolean,java.util.concurrent.locks.Condition) -> <init>
    175:186:void run() -> run
androidx.core.text.BidiFormatter -> androidx.core.text.BidiFormatter:
    85:222:void <clinit>() -> <clinit>
    262:266:void <init>(boolean,int,androidx.core.text.TextDirectionHeuristicCompat) -> <init>
    558:558:int getEntryDir(java.lang.CharSequence) -> getEntryDir
    541:541:int getExitDir(java.lang.CharSequence) -> getExitDir
    236:236:androidx.core.text.BidiFormatter getInstance() -> getInstance
    245:245:androidx.core.text.BidiFormatter getInstance(boolean) -> getInstance
    254:254:androidx.core.text.BidiFormatter getInstance(java.util.Locale) -> getInstance
    280:280:boolean getStereoReset() -> getStereoReset
    347:347:boolean isRtl(java.lang.String) -> isRtl
    358:358:boolean isRtl(java.lang.CharSequence) -> isRtl
    272:272:boolean isRtlContext() -> isRtlContext
    516:516:boolean isRtlLocale(java.util.Locale) -> isRtlLocale
    300:308:java.lang.String markAfter(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat) -> markAfter
    328:336:java.lang.String markBefore(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat) -> markBefore
    391:392:java.lang.String unicodeWrap(java.lang.String,androidx.core.text.TextDirectionHeuristicCompat,boolean) -> unicodeWrap
    411:429:java.lang.CharSequence unicodeWrap(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat,boolean) -> unicodeWrap
    441:441:java.lang.String unicodeWrap(java.lang.String,androidx.core.text.TextDirectionHeuristicCompat) -> unicodeWrap
    456:456:java.lang.CharSequence unicodeWrap(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat) -> unicodeWrap
    469:469:java.lang.String unicodeWrap(java.lang.String,boolean) -> unicodeWrap
    483:483:java.lang.CharSequence unicodeWrap(java.lang.CharSequence,boolean) -> unicodeWrap
    494:494:java.lang.String unicodeWrap(java.lang.String) -> unicodeWrap
    506:506:java.lang.CharSequence unicodeWrap(java.lang.CharSequence) -> unicodeWrap
androidx.core.text.BidiFormatter$Builder -> androidx.core.text.BidiFormatter$Builder:
    139:141:void <init>() -> <init>
    148:150:void <init>(boolean) -> <init>
    157:159:void <init>(java.util.Locale) -> <init>
    205:209:androidx.core.text.BidiFormatter build() -> build
    198:198:androidx.core.text.BidiFormatter getDefaultInstanceFromContext(boolean) -> getDefaultInstanceFromContext
    167:170:void initialize(boolean) -> initialize
    193:194:androidx.core.text.BidiFormatter$Builder setTextDirectionHeuristic(androidx.core.text.TextDirectionHeuristicCompat) -> setTextDirectionHeuristic
    177:182:androidx.core.text.BidiFormatter$Builder stereoReset(boolean) -> stereoReset
androidx.core.text.BidiFormatter$DirectionalityEstimator -> androidx.core.text.BidiFormatter$DirectionalityEstimator:
    584:588:void <clinit>() -> <clinit>
    628:632:void <init>(java.lang.CharSequence,boolean) -> <init>
    846:862:byte dirTypeBackward() -> dirTypeBackward
    816:832:byte dirTypeForward() -> dirTypeForward
    803:803:byte getCachedDirectionality(char) -> getCachedDirectionality
    646:728:int getEntryDir() -> getEntryDir
    744:792:int getExitDir() -> getExitDir
    944:956:byte skipEntityBackward() -> skipEntityBackward
    929:930:byte skipEntityForward() -> skipEntityForward
    901:920:byte skipTagBackward() -> skipTagBackward
    872:888:byte skipTagForward() -> skipTagForward
androidx.core.text.HtmlCompat -> androidx.core.text.HtmlCompat:
    181:182:void <init>() -> <init>
    146:150:android.text.Spanned fromHtml(java.lang.String,int) -> fromHtml
    161:165:android.text.Spanned fromHtml(java.lang.String,int,android.text.Html$ImageGetter,android.text.Html$TagHandler) -> fromHtml
    174:178:java.lang.String toHtml(android.text.Spanned,int) -> toHtml
androidx.core.text.ICUCompat -> androidx.core.text.ICUCompat:
    35:61:void <clinit>() -> <clinit>
    142:142:void <init>() -> <init>
    125:139:java.lang.String addLikelySubtags(java.util.Locale) -> addLikelySubtags
    110:121:java.lang.String getScript(java.lang.String) -> getScript
    88:104:java.lang.String maximizeAndGetScript(java.util.Locale) -> maximizeAndGetScript
androidx.core.text.PrecomputedTextCompat -> androidx.core.text.PrecomputedTextCompat:
    72:73:void <clinit>() -> <clinit>
    477:482:void <init>(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,int[]) -> <init>
    485:490:void <init>(android.text.PrecomputedText,androidx.core.text.PrecomputedTextCompat$Params) -> <init>
    747:747:char charAt(int) -> charAt
    419:471:androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params) -> create
    550:555:int findParaIndex(int) -> findParaIndex
    517:520:int getParagraphCount() -> getParagraphCount
    540:544:int getParagraphEnd(int) -> getParagraphEnd
    528:532:int getParagraphStart(int) -> getParagraphStart
    510:510:androidx.core.text.PrecomputedTextCompat$Params getParams() -> getParams
    499:502:android.text.PrecomputedText getPrecomputedText() -> getPrecomputedText
    722:722:int getSpanEnd(java.lang.Object) -> getSpanEnd
    727:727:int getSpanFlags(java.lang.Object) -> getSpanFlags
    717:717:int getSpanStart(java.lang.Object) -> getSpanStart
    707:710:java.lang.Object[] getSpans(int,int,java.lang.Class) -> getSpans
    649:659:java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor) -> getTextFuture
    742:742:int length() -> length
    732:732:int nextSpanTransition(int,int,java.lang.Class) -> nextSpanTransition
    689:698:void removeSpan(java.lang.Object) -> removeSpan
    673:682:void setSpan(java.lang.Object,int,int,int) -> setSpan
    752:752:java.lang.CharSequence subSequence(int,int) -> subSequence
    757:757:java.lang.String toString() -> toString
androidx.core.text.PrecomputedTextCompat$Params -> androidx.core.text.PrecomputedTextCompat$Params:
    195:206:void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int) -> <init>
    209:216:void <init>(android.text.PrecomputedText$Params) -> <init>
    271:335:boolean equals(java.lang.Object) -> equals
    249:249:int getBreakStrategy() -> getBreakStrategy
    261:261:int getHyphenationFrequency() -> getHyphenationFrequency
    237:237:android.text.TextDirectionHeuristic getTextDirection() -> getTextDirection
    224:224:android.text.TextPaint getTextPaint() -> getTextPaint
    340:361:int hashCode() -> hashCode
    367:388:java.lang.String toString() -> toString
androidx.core.text.PrecomputedTextCompat$Params$Builder -> androidx.core.text.PrecomputedTextCompat$Params$Builder:
    115:128:void <init>(android.text.TextPaint) -> <init>
    190:190:androidx.core.text.PrecomputedTextCompat$Params build() -> build
    144:145:androidx.core.text.PrecomputedTextCompat$Params$Builder setBreakStrategy(int) -> setBreakStrategy
    162:163:androidx.core.text.PrecomputedTextCompat$Params$Builder setHyphenationFrequency(int) -> setHyphenationFrequency
    180:181:androidx.core.text.PrecomputedTextCompat$Params$Builder setTextDirection(android.text.TextDirectionHeuristic) -> setTextDirection
androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask -> androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask:
    582:583:void <init>(androidx.core.text.PrecomputedTextCompat$Params,java.lang.CharSequence) -> <init>
androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask$PrecomputedTextCallback -> androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask$PrecomputedTextCallback:
    569:572:void <init>(androidx.core.text.PrecomputedTextCompat$Params,java.lang.CharSequence) -> <init>
    564:564:java.lang.Object call() -> call
    576:576:androidx.core.text.PrecomputedTextCompat call() -> call
androidx.core.text.TextDirectionHeuristicsCompat -> androidx.core.text.TextDirectionHeuristicsCompat:
    33:68:void <clinit>() -> <clinit>
    258:258:void <init>() -> <init>
    79:86:int isRtlText(int) -> isRtlText
    91:102:int isRtlTextOrFormat(int) -> isRtlTextOrFormat
androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong -> androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong:
    235:236:void <clinit>() -> <clinit>
    231:233:void <init>(boolean) -> <init>
    206:228:int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong -> androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong:
    193:193:void <clinit>() -> <clinit>
    190:191:void <init>() -> <init>
    183:187:int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl -> androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl:
    114:116:void <init>(androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm) -> <init>
    140:146:boolean doCheck(java.lang.CharSequence,int,int) -> doCheck
    125:125:boolean isRtl(char[],int,int) -> isRtl
    130:136:boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal -> androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal:
    156:158:void <init>(androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm,boolean) -> <init>
    162:162:boolean defaultIsRtl() -> defaultIsRtl
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale -> androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale:
    254:254:void <clinit>() -> <clinit>
    245:246:void <init>() -> <init>
    250:251:boolean defaultIsRtl() -> defaultIsRtl
androidx.core.text.TextUtilsCompat -> androidx.core.text.TextUtilsCompat:
    33:33:void <clinit>() -> <clinit>
    130:130:void <init>() -> <init>
    119:126:int getLayoutDirectionFromFirstChar(java.util.Locale) -> getLayoutDirectionFromFirstChar
    90:104:int getLayoutDirectionFromLocale(java.util.Locale) -> getLayoutDirectionFromLocale
    45:77:java.lang.String htmlEncode(java.lang.String) -> htmlEncode
androidx.core.text.util.FindAddress -> androidx.core.text.util.FindAddress:
    72:268:void <clinit>() -> <clinit>
    517:518:void <init>() -> <init>
    401:490:int attemptMatch(java.lang.String,java.util.regex.MatchResult) -> attemptMatch
    272:297:boolean checkHouseNumber(java.lang.String) -> checkHouseNumber
    500:514:java.lang.String findAddress(java.lang.String) -> findAddress
    388:388:boolean isValidLocationName(java.lang.String) -> isValidLocationName
    345:352:boolean isValidZipCode(java.lang.String,java.util.regex.MatchResult) -> isValidZipCode
    366:366:boolean isValidZipCode(java.lang.String,java.lang.String) -> isValidZipCode
    377:377:boolean isValidZipCode(java.lang.String) -> isValidZipCode
    310:316:java.util.regex.MatchResult matchHouseNumber(java.lang.String,int) -> matchHouseNumber
    330:332:java.util.regex.MatchResult matchState(java.lang.String,int) -> matchState
androidx.core.text.util.FindAddress$ZipRange -> androidx.core.text.util.FindAddress$ZipRange:
    43:48:void <init>(int,int,int,int) -> <init>
    51:52:boolean matches(java.lang.String) -> matches
androidx.core.text.util.LinkifyCompat -> androidx.core.text.util.LinkifyCompat:
    57:59:void <clinit>() -> <clinit>
    542:542:void <init>() -> <init>
    380:387:void addLinkMovementMethod(android.widget.TextView) -> addLinkMovementMethod
    102:149:boolean addLinks(android.text.Spannable,int) -> addLinks
    164:190:boolean addLinks(android.widget.TextView,int) -> addLinks
    207:212:void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String) -> addLinks
    231:236:void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter) -> addLinks
    259:271:void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter) -> addLinks
    284:287:boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String) -> addLinks
    308:311:boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter) -> addLinks
    335:372:boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter) -> addLinks
    440:443:void applyLink(java.lang.String,int,int,android.text.Spannable) -> applyLink
    487:490:java.lang.String findAddress(java.lang.String) -> findAddress
    420:437:void gatherLinks(java.util.ArrayList,android.text.Spannable,java.util.regex.Pattern,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter) -> gatherLinks
    446:484:void gatherMapLinks(java.util.ArrayList,android.text.Spannable) -> gatherMapLinks
    391:414:java.lang.String makeUrl(java.lang.String,java.lang.String[],java.util.regex.Matcher,android.text.util.Linkify$TransformFilter) -> makeUrl
    495:537:void pruneOverlaps(java.util.ArrayList,android.text.Spannable) -> pruneOverlaps
    376:376:boolean shouldAddLinksFallbackToFramework() -> shouldAddLinksFallbackToFramework
androidx.core.text.util.LinkifyCompat$1 -> androidx.core.text.util.LinkifyCompat$1:
    59:59:void <init>() -> <init>
    59:59:int compare(java.lang.Object,java.lang.Object) -> compare
    62:78:int compare(androidx.core.text.util.LinkifyCompat$LinkSpec,androidx.core.text.util.LinkifyCompat$LinkSpec) -> compare
androidx.core.text.util.LinkifyCompat$LinkSpec -> androidx.core.text.util.LinkifyCompat$LinkSpec:
    550:551:void <init>() -> <init>
androidx.core.util.AtomicFile -> androidx.core.util.AtomicFile:
    54:57:void <init>(java.io.File) -> <init>
    72:74:void delete() -> delete
    144:154:void failWrite(java.io.FileOutputStream) -> failWrite
    127:136:void finishWrite(java.io.FileOutputStream) -> finishWrite
    65:65:java.io.File getBaseFile() -> getBaseFile
    170:174:java.io.FileInputStream openRead() -> openRead
    183:206:byte[] readFully() -> readFully
    93:117:java.io.FileOutputStream startWrite() -> startWrite
    212:216:boolean sync(java.io.FileOutputStream) -> sync
androidx.core.util.DebugUtils -> androidx.core.util.DebugUtils:
    49:50:void <init>() -> <init>
    32:47:void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
androidx.core.util.LogWriter -> androidx.core.util.LogWriter:
    35:45:void <init>(java.lang.String) -> <init>
    48:49:void close() -> close
    52:53:void flush() -> flush
    68:72:void flushBuilder() -> flushBuilder
    56:65:void write(char[],int,int) -> write
androidx.core.util.ObjectsCompat -> androidx.core.util.ObjectsCompat:
    29:31:void <init>() -> <init>
    50:53:boolean equals(java.lang.Object,java.lang.Object) -> equals
    92:95:int hash(java.lang.Object[]) -> hash
    65:65:int hashCode(java.lang.Object) -> hashCode
androidx.core.util.Pair -> androidx.core.util.Pair:
    37:40:void <init>(java.lang.Object,java.lang.Object) -> <init>
    82:82:androidx.core.util.Pair create(java.lang.Object,java.lang.Object) -> create
    52:56:boolean equals(java.lang.Object) -> equals
    66:66:int hashCode() -> hashCode
    71:71:java.lang.String toString() -> toString
androidx.core.util.PatternsCompat -> androidx.core.util.PatternsCompat:
    153:338:void <clinit>() -> <clinit>
    351:351:void <init>() -> <init>
androidx.core.util.Pools -> androidx.core.util.Pools:
    73:75:void <init>() -> <init>
androidx.core.util.Pools$SimplePool -> androidx.core.util.Pools$SimplePool:
    94:99:void <init>(int) -> <init>
    104:111:java.lang.Object acquire() -> acquire
    128:133:boolean isInPool(java.lang.Object) -> isInPool
    116:124:boolean release(java.lang.Object) -> release
androidx.core.util.Pools$SynchronizedPool -> androidx.core.util.Pools$SynchronizedPool:
    143:154:void <init>(int) -> <init>
    158:160:java.lang.Object acquire() -> acquire
    165:167:boolean release(java.lang.Object) -> release
androidx.core.util.Preconditions -> androidx.core.util.Preconditions:
    466:467:void <init>() -> <init>
    37:40:void checkArgument(boolean) -> checkArgument
    51:54:void checkArgument(boolean,java.lang.Object) -> checkArgument
    256:262:float checkArgumentFinite(float,java.lang.String) -> checkArgumentFinite
    282:294:float checkArgumentInRange(float,float,float,java.lang.String) -> checkArgumentInRange
    311:321:int checkArgumentInRange(int,int,int,java.lang.String) -> checkArgumentInRange
    338:348:long checkArgumentInRange(long,long,long,java.lang.String) -> checkArgumentInRange
    172:176:int checkArgumentNonnegative(int,java.lang.String) -> checkArgumentNonnegative
    188:192:int checkArgumentNonnegative(int) -> checkArgumentNonnegative
    203:207:long checkArgumentNonnegative(long) -> checkArgumentNonnegative
    219:223:long checkArgumentNonnegative(long,java.lang.String) -> checkArgumentNonnegative
    235:239:int checkArgumentPositive(int,java.lang.String) -> checkArgumentPositive
    445:463:float[] checkArrayElementsInRange(float[],float,float,java.lang.String) -> checkArrayElementsInRange
    362:373:java.lang.Object[] checkArrayElementsNotNull(java.lang.Object[],java.lang.String) -> checkArrayElementsNotNull
    389:402:java.util.Collection checkCollectionElementsNotNull(java.util.Collection,java.lang.String) -> checkCollectionElementsNotNull
    418:424:java.util.Collection checkCollectionNotEmpty(java.util.Collection,java.lang.String) -> checkCollectionNotEmpty
    153:159:int checkFlagsArgument(int,int) -> checkFlagsArgument
    98:101:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    115:118:java.lang.Object checkNotNull(java.lang.Object,java.lang.Object) -> checkNotNull
    130:133:void checkState(boolean,java.lang.String) -> checkState
    143:144:void checkState(boolean) -> checkState
    65:68:java.lang.CharSequence checkStringNotEmpty(java.lang.CharSequence) -> checkStringNotEmpty
    83:86:java.lang.CharSequence checkStringNotEmpty(java.lang.CharSequence,java.lang.Object) -> checkStringNotEmpty
androidx.core.util.TimeUtils -> androidx.core.util.TimeUtils:
    40:41:void <clinit>() -> <clinit>
    185:185:void <init>() -> <init>
    44:53:int accumField(int,int,boolean,int) -> accumField
    154:158:void formatDuration(long,java.lang.StringBuilder) -> formatDuration
    163:167:void formatDuration(long,java.io.PrintWriter,int) -> formatDuration
    172:173:void formatDuration(long,java.io.PrintWriter) -> formatDuration
    178:183:void formatDuration(long,long,java.io.PrintWriter) -> formatDuration
    81:148:int formatDurationLocked(long,int) -> formatDurationLocked
    58:77:int printField(char[],int,char,int,boolean,int) -> printField
androidx.core.view.AccessibilityDelegateCompat -> androidx.core.view.AccessibilityDelegateCompat:
    110:110:void <clinit>() -> <clinit>
    117:119:void <init>() -> <init>
    186:186:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    288:294:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    125:125:android.view.View$AccessibilityDelegate getBridge() -> getBridge
    226:227:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    245:247:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    206:207:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    270:270:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    314:317:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    143:144:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    165:166:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter -> androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter:
    52:54:void <init>(androidx.core.view.AccessibilityDelegateCompat) -> <init>
    59:59:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    98:101:android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    64:65:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    70:72:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    76:77:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    82:82:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    106:106:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    87:88:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    92:93:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
androidx.core.view.ActionProvider -> androidx.core.view.ActionProvider:
    139:141:void <init>(android.content.Context) -> <init>
    147:147:android.content.Context getContext() -> getContext
    256:256:boolean hasSubMenu() -> hasSubMenu
    196:196:boolean isVisible() -> isVisible
    170:170:android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    243:243:boolean onPerformDefaultAction() -> onPerformDefaultAction
    269:269:void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
    182:182:boolean overridesItemVisibility() -> overridesItemVisibility
    206:209:void refreshVisibility() -> refreshVisibility
    312:314:void reset() -> reset
    289:290:void setSubUiVisibilityListener(androidx.core.view.ActionProvider$SubUiVisibilityListener) -> setSubUiVisibilityListener
    299:305:void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener) -> setVisibilityListener
    279:282:void subUiVisibilityChanged(boolean) -> subUiVisibilityChanged
androidx.core.view.DisplayCutoutCompat -> androidx.core.view.DisplayCutoutCompat:
    46:47:void <init>(android.graphics.Rect,java.util.List) -> <init>
    49:51:void <init>(java.lang.Object) -> <init>
    108:116:boolean equals(java.lang.Object) -> equals
    99:102:java.util.List getBoundingRects() -> getBoundingRects
    64:67:int getSafeInsetBottom() -> getSafeInsetBottom
    73:76:int getSafeInsetLeft() -> getSafeInsetLeft
    82:85:int getSafeInsetRight() -> getSafeInsetRight
    55:58:int getSafeInsetTop() -> getSafeInsetTop
    121:121:int hashCode() -> hashCode
    126:126:java.lang.String toString() -> toString
    130:130:androidx.core.view.DisplayCutoutCompat wrap(java.lang.Object) -> wrap
androidx.core.view.DragAndDropPermissionsCompat -> androidx.core.view.DragAndDropPermissionsCompat:
    36:38:void <init>(java.lang.Object) -> <init>
    58:61:void release() -> release
    44:51:androidx.core.view.DragAndDropPermissionsCompat request(android.app.Activity,android.view.DragEvent) -> request
androidx.core.view.DragStartHelper -> androidx.core.view.DragStartHelper:
    96:188:void <init>(android.view.View,androidx.core.view.DragStartHelper$OnDragStartListener) -> <init>
    107:109:void attach() -> attach
    117:119:void detach() -> detach
    178:179:void getTouchPosition(android.graphics.Point) -> getTouchPosition
    170:170:boolean onLongClick(android.view.View) -> onLongClick
    129:161:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
androidx.core.view.DragStartHelper$1 -> androidx.core.view.DragStartHelper$1:
    181:181:void <init>(androidx.core.view.DragStartHelper) -> <init>
    184:184:boolean onLongClick(android.view.View) -> onLongClick
androidx.core.view.DragStartHelper$2 -> androidx.core.view.DragStartHelper$2:
    188:188:void <init>(androidx.core.view.DragStartHelper) -> <init>
    191:191:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
androidx.core.view.GestureDetectorCompat -> androidx.core.view.GestureDetectorCompat:
    506:507:void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener) -> <init>
    519:525:void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler) -> <init>
    531:531:boolean isLongpressEnabled() -> isLongpressEnabled
    543:543:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    556:557:void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    567:568:void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase -> androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase:
    62:64:void <clinit>() -> <clinit>
    152:163:void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler) -> <init>
    414:427:void cancel() -> cancel
    430:440:void cancelTaps() -> cancelTaps
    458:462:void dispatchLongPress() -> dispatchLongPress
    166:182:void init(android.content.Context) -> init
    444:454:boolean isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent) -> isConsideredDoubleTap
    215:215:boolean isLongpressEnabled() -> isLongpressEnabled
    228:410:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    207:208:void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    193:194:void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler -> androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler:
    103:105:void <init>(androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> <init>
    107:109:void <init>(androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase,android.os.Handler) -> <init>
    113:136:void handleMessage(android.os.Message) -> handleMessage
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2 -> androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2:
    469:471:void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler) -> <init>
    475:475:boolean isLongpressEnabled() -> isLongpressEnabled
    480:480:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    485:486:void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    490:491:void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
androidx.core.view.GravityCompat -> androidx.core.view.GravityCompat:
    153:153:void <init>() -> <init>
    64:69:void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    98:103:void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    126:131:void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
    145:149:int getAbsoluteGravity(int,int) -> getAbsoluteGravity
androidx.core.view.InputDeviceCompat -> androidx.core.view.InputDeviceCompat:
    220:220:void <init>() -> <init>
androidx.core.view.KeyEventDispatcher -> androidx.core.view.KeyEventDispatcher:
    46:49:void <clinit>() -> <clinit>
    51:53:void <init>() -> <init>
    96:111:boolean actionBarOnMenuKeyEventPre28(android.app.ActionBar,android.view.KeyEvent) -> actionBarOnMenuKeyEventPre28
    115:138:boolean activitySuperDispatchKeyEventPre28(android.app.Activity,android.view.KeyEvent) -> activitySuperDispatchKeyEventPre28
    161:174:boolean dialogSuperDispatchKeyEventPre28(android.app.Dialog,android.view.KeyEvent) -> dialogSuperDispatchKeyEventPre28
    63:63:boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent) -> dispatchBeforeHierarchy
    80:92:boolean dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent) -> dispatchKeyEvent
    142:157:android.content.DialogInterface$OnKeyListener getDialogKeyListenerPre28(android.app.Dialog) -> getDialogKeyListenerPre28
androidx.core.view.LayoutInflaterCompat -> androidx.core.view.LayoutInflaterCompat:
    95:96:void <init>() -> <init>
    71:90:void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> forceSetFactory2
    169:173:androidx.core.view.LayoutInflaterFactory getFactory(android.view.LayoutInflater) -> getFactory
    111:128:void setFactory(android.view.LayoutInflater,androidx.core.view.LayoutInflaterFactory) -> setFactory
    139:152:void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> setFactory2
androidx.core.view.LayoutInflaterCompat$Factory2Wrapper -> androidx.core.view.LayoutInflaterCompat$Factory2Wrapper:
    43:45:void <init>(androidx.core.view.LayoutInflaterFactory) -> <init>
    49:49:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    55:55:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    60:60:java.lang.String toString() -> toString
androidx.core.view.MarginLayoutParamsCompat -> androidx.core.view.MarginLayoutParamsCompat:
    166:166:void <init>() -> <init>
    127:139:int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    61:64:int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    42:45:int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    112:115:boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    161:164:void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
    150:153:void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    99:104:void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    80:85:void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
androidx.core.view.MenuCompat -> androidx.core.view.MenuCompat:
    55:55:void <init>() -> <init>
    48:53:void setGroupDividerEnabled(android.view.Menu,boolean) -> setGroupDividerEnabled
    37:38:void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
androidx.core.view.MenuItemCompat -> androidx.core.view.MenuItemCompat:
    557:557:void <init>() -> <init>
    268:268:boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    249:249:boolean expandActionView(android.view.MenuItem) -> expandActionView
    224:230:androidx.core.view.ActionProvider getActionProvider(android.view.MenuItem) -> getActionProvider
    188:188:android.view.View getActionView(android.view.MenuItem) -> getActionView
    481:487:int getAlphabeticModifiers(android.view.MenuItem) -> getAlphabeticModifiers
    335:341:java.lang.CharSequence getContentDescription(android.view.MenuItem) -> getContentDescription
    515:521:android.content.res.ColorStateList getIconTintList(android.view.MenuItem) -> getIconTintList
    548:554:android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem) -> getIconTintMode
    436:442:int getNumericModifiers(android.view.MenuItem) -> getNumericModifiers
    364:370:java.lang.CharSequence getTooltipText(android.view.MenuItem) -> getTooltipText
    284:284:boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    207:212:android.view.MenuItem setActionProvider(android.view.MenuItem,androidx.core.view.ActionProvider) -> setActionProvider
    153:153:android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    175:175:android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    463:468:void setAlphabeticShortcut(android.view.MenuItem,char,int) -> setAlphabeticShortcut
    322:327:void setContentDescription(android.view.MenuItem,java.lang.CharSequence) -> setContentDescription
    503:508:void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList) -> setIconTintList
    534:539:void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode) -> setIconTintMode
    418:423:void setNumericShortcut(android.view.MenuItem,char,int) -> setNumericShortcut
    302:302:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,androidx.core.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
    397:403:void setShortcut(android.view.MenuItem,char,char,int,int) -> setShortcut
    135:136:void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    351:356:void setTooltipText(android.view.MenuItem,java.lang.CharSequence) -> setTooltipText
androidx.core.view.MenuItemCompat$1 -> androidx.core.view.MenuItemCompat$1:
    302:302:void <init>(androidx.core.view.MenuItemCompat$OnActionExpandListener) -> <init>
    310:310:boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
    305:305:boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
androidx.core.view.MotionEventCompat -> androidx.core.view.MotionEventCompat:
    602:602:void <init>() -> <init>
    488:488:int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    477:477:int getActionIndex(android.view.MotionEvent) -> getActionIndex
    465:465:int getActionMasked(android.view.MotionEvent) -> getActionMasked
    570:570:float getAxisValue(android.view.MotionEvent,int) -> getAxisValue
    590:590:float getAxisValue(android.view.MotionEvent,int,int) -> getAxisValue
    599:599:int getButtonState(android.view.MotionEvent) -> getButtonState
    532:532:int getPointerCount(android.view.MotionEvent) -> getPointerCount
    499:499:int getPointerId(android.view.MotionEvent,int) -> getPointerId
    544:544:int getSource(android.view.MotionEvent) -> getSource
    510:510:float getX(android.view.MotionEvent,int) -> getX
    521:521:float getY(android.view.MotionEvent,int) -> getY
    553:553:boolean isFromSource(android.view.MotionEvent,int) -> isFromSource
androidx.core.view.NestedScrollingChildHelper -> androidx.core.view.NestedScrollingChildHelper:
    56:58:void <init>(android.view.View) -> <init>
    327:334:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    347:354:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    264:264:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    278:314:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    204:204:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    220:250:boolean dispatchNestedScroll(int,int,int,int,int[],int) -> dispatchNestedScroll
    383:389:android.view.ViewParent getNestedScrollingParentForType(int) -> getNestedScrollingParentForType
    100:100:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    114:114:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    86:86:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    366:367:void onDetachedFromWindow() -> onDetachedFromWindow
    379:380:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    70:74:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    393:401:void setNestedScrollingParentForType(int,android.view.ViewParent) -> setNestedScrollingParentForType
    129:129:boolean startNestedScroll(int) -> startNestedScroll
    145:164:boolean startNestedScroll(int,int) -> startNestedScroll
    175:176:void stopNestedScroll() -> stopNestedScroll
    186:191:void stopNestedScroll(int) -> stopNestedScroll
androidx.core.view.NestedScrollingParentHelper -> androidx.core.view.NestedScrollingParentHelper:
    50:52:void <init>(android.view.ViewGroup) -> <init>
    89:89:int getNestedScrollAxes() -> getNestedScrollAxes
    64:65:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    77:78:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    100:101:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    111:112:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
androidx.core.view.PointerIconCompat -> androidx.core.view.PointerIconCompat:
    107:109:void <init>(java.lang.Object) -> <init>
    151:154:androidx.core.view.PointerIconCompat create(android.graphics.Bitmap,float,float) -> create
    116:116:java.lang.Object getPointerIcon() -> getPointerIcon
    130:133:androidx.core.view.PointerIconCompat getSystemIcon(android.content.Context,int) -> getSystemIcon
    180:183:androidx.core.view.PointerIconCompat load(android.content.res.Resources,int) -> load
androidx.core.view.ScaleGestureDetectorCompat -> androidx.core.view.ScaleGestureDetectorCompat:
    26:26:void <init>() -> <init>
    68:68:boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
    78:81:boolean isQuickScaleEnabled(android.view.ScaleGestureDetector) -> isQuickScaleEnabled
    40:42:void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    53:56:void setQuickScaleEnabled(android.view.ScaleGestureDetector,boolean) -> setQuickScaleEnabled
androidx.core.view.VelocityTrackerCompat -> androidx.core.view.VelocityTrackerCompat:
    52:52:void <init>() -> <init>
    37:37:float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    49:49:float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
androidx.core.view.ViewCompat -> androidx.core.view.ViewCompat:
    452:468:void <clinit>() -> <clinit>
    3464:3464:void <init>() -> <init>
    3330:3333:void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int) -> addKeyboardNavigationClusters
    3402:3428:void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat) -> addOnUnhandledKeyEventListener
    1754:1762:androidx.core.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    1572:1580:void bindTempDetach() -> bindTempDetach
    496:496:boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    510:510:boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    3201:3204:void cancelDragAndDrop(android.view.View) -> cancelDragAndDrop
    1462:1462:int combineMeasuredStates(int,int) -> combineMeasuredStates
    2995:3004:void compatOffsetLeftAndRight(android.view.View,int) -> compatOffsetLeftAndRight
    2947:2956:void compatOffsetTopAndBottom(android.view.View,int) -> compatOffsetTopAndBottom
    2259:2267:androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    1609:1626:void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    2779:2786:boolean dispatchNestedFling(android.view.View,float,float,boolean) -> dispatchNestedFling
    2822:2828:boolean dispatchNestedPreFling(android.view.View,float,float) -> dispatchNestedPreFling
    2597:2604:boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[]) -> dispatchNestedPreScroll
    2749:2755:boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[],int) -> dispatchNestedPreScroll
    2566:2574:boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[]) -> dispatchNestedScroll
    2717:2724:boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[],int) -> dispatchNestedScroll
    1586:1603:void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    3505:3508:boolean dispatchUnhandledKeyEventBeforeCallback(android.view.View,android.view.KeyEvent) -> dispatchUnhandledKeyEventBeforeCallback
    3497:3500:boolean dispatchUnhandledKeyEventBeforeHierarchy(android.view.View,android.view.KeyEvent) -> dispatchUnhandledKeyEventBeforeHierarchy
    3379:3390:int generateViewId() -> generateViewId
    1475:1478:int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    1129:1135:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    1149:1149:float getAlpha(android.view.View) -> getAlpha
    2355:2359:android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    2400:2404:android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    3039:3042:android.graphics.Rect getClipBounds(android.view.View) -> getClipBounds
    3160:3168:android.view.Display getDisplay(android.view.View) -> getDisplay
    2038:2041:float getElevation(android.view.View) -> getElevation
    473:482:android.graphics.Rect getEmptyTempRect() -> getEmptyTempRect
    2164:2167:boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    999:1002:int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    730:733:int getImportantForAutofill(android.view.View) -> getImportantForAutofill
    1224:1227:int getLabelFor(android.view.View) -> getLabelFor
    1213:1213:int getLayerType(android.view.View) -> getLayerType
    1297:1300:int getLayoutDirection(android.view.View) -> getLayoutDirection
    1675:1675:android.graphics.Matrix getMatrix(android.view.View) -> getMatrix
    1433:1433:int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    1447:1447:int getMeasuredState(android.view.View) -> getMeasuredState
    1416:1416:int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    1720:1743:int getMinimumHeight(android.view.View) -> getMinimumHeight
    1686:1709:int getMinimumWidth(android.view.View) -> getMinimumWidth
    3222:3225:int getNextClusterForwardId(android.view.View) -> getNextClusterForwardId
    528:528:int getOverScrollMode(android.view.View) -> getOverScrollMode
    1542:1545:int getPaddingEnd(android.view.View) -> getPaddingEnd
    1526:1529:int getPaddingStart(android.view.View) -> getPaddingStart
    1335:1338:android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    1919:1919:float getPivotX(android.view.View) -> getPivotX
    1948:1948:float getPivotY(android.view.View) -> getPivotY
    1972:1972:float getRotation(android.view.View) -> getRotation
    1980:1980:float getRotationX(android.view.View) -> getRotationX
    1988:1988:float getRotationY(android.view.View) -> getRotationY
    1996:1996:float getScaleX(android.view.View) -> getScaleX
    2004:2004:float getScaleY(android.view.View) -> getScaleY
    3131:3134:int getScrollIndicators(android.view.View) -> getScrollIndicators
    2095:2101:java.lang.String getTransitionName(android.view.View) -> getTransitionName
    1639:1639:float getTranslationX(android.view.View) -> getTranslationX
    1653:1653:float getTranslationY(android.view.View) -> getTranslationY
    2059:2062:float getTranslationZ(android.view.View) -> getTranslationZ
    2108:2111:int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    2012:2012:float getX(android.view.View) -> getX
    2020:2020:float getY(android.view.View) -> getY
    2886:2889:float getZ(android.view.View) -> getZ
    856:873:boolean hasAccessibilityDelegate(android.view.View) -> hasAccessibilityDelegate
    3366:3369:boolean hasExplicitFocusable(android.view.View) -> hasExplicitFocusable
    2537:2543:boolean hasNestedScrollingParent(android.view.View) -> hasNestedScrollingParent
    2682:2687:boolean hasNestedScrollingParent(android.view.View,int) -> hasNestedScrollingParent
    3061:3064:boolean hasOnClickListeners(android.view.View) -> hasOnClickListeners
    2315:2318:boolean hasOverlappingRendering(android.view.View) -> hasOverlappingRendering
    886:889:boolean hasTransientState(android.view.View) -> hasTransientState
    3049:3052:boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
    3277:3280:boolean isFocusedByDefault(android.view.View) -> isFocusedByDefault
    1077:1080:boolean isImportantForAccessibility(android.view.View) -> isImportantForAccessibility
    843:846:boolean isImportantForAutofill(android.view.View) -> isImportantForAutofill
    2844:2847:boolean isInLayout(android.view.View) -> isInLayout
    3248:3251:boolean isKeyboardNavigationCluster(android.view.View) -> isKeyboardNavigationCluster
    2855:2858:boolean isLaidOut(android.view.View) -> isLaidOut
    2872:2875:boolean isLayoutDirectionResolved(android.view.View) -> isLayoutDirectionResolved
    2479:2485:boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    1379:1379:boolean isOpaque(android.view.View) -> isOpaque
    2328:2331:boolean isPaddingRelative(android.view.View) -> isPaddingRelative
    2194:2195:void jumpDrawablesToCurrentState(android.view.View) -> jumpDrawablesToCurrentState
    3314:3317:android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int) -> keyboardNavigationClusterSearch
    2964:2992:void offsetLeftAndRight(android.view.View,int) -> offsetLeftAndRight
    2916:2944:void offsetTopAndBottom(android.view.View,int) -> offsetTopAndBottom
    2234:2242:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
    619:620:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    650:651:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    587:588:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    1099:1102:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    915:920:void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    937:942:void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    955:960:void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    977:982:void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    3439:3462:void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat) -> removeOnUnhandledKeyEventListener
    2119:2124:void requestApplyInsets(android.view.View) -> requestApplyInsets
    1358:1366:android.view.View requireViewById(android.view.View,int) -> requireViewById
    1399:1399:int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    3344:3347:boolean restoreDefaultFocus(android.view.View) -> restoreDefaultFocus
    676:677:void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    1511:1514:void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    2297:2298:void setActivated(android.view.View,boolean) -> setActivated
    1811:1812:void setAlpha(android.view.View,float) -> setAlpha
    709:712:void setAutofillHints(android.view.View,java.lang.String[]) -> setAutofillHints
    2341:2346:void setBackground(android.view.View,android.graphics.drawable.Drawable) -> setBackground
    2371:2390:void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    2418:2437:void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    2139:2157:void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> setChildrenDrawingOrderEnabled
    3024:3027:void setClipBounds(android.view.View,android.graphics.Rect) -> setClipBounds
    2027:2030:void setElevation(android.view.View,float) -> setElevation
    2180:2181:void setFitsSystemWindows(android.view.View,boolean) -> setFitsSystemWindows
    3296:3299:void setFocusedByDefault(android.view.View,boolean) -> setFocusedByDefault
    900:903:void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    1026:1038:void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    774:777:void setImportantForAutofill(android.view.View,int) -> setImportantForAutofill
    3262:3265:void setKeyboardNavigationCluster(android.view.View,boolean) -> setKeyboardNavigationCluster
    1238:1241:void setLabelFor(android.view.View,int) -> setLabelFor
    1274:1283:void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    1188:1189:void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    1321:1324:void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    2456:2463:void setNestedScrollingEnabled(android.view.View,boolean) -> setNestedScrollingEnabled
    3236:3239:void setNextClusterForwardId(android.view.View,int) -> setNextClusterForwardId
    2203:2218:void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    547:548:void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    1563:1568:void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    1935:1936:void setPivotX(android.view.View,float) -> setPivotX
    1964:1965:void setPivotY(android.view.View,float) -> setPivotY
    3142:3146:void setPointerIcon(android.view.View,androidx.core.view.PointerIconCompat) -> setPointerIcon
    1854:1855:void setRotation(android.view.View,float) -> setRotation
    1868:1869:void setRotationX(android.view.View,float) -> setRotationX
    1882:1883:void setRotationY(android.view.View,float) -> setRotationY
    2281:2282:void setSaveFromParentEnabled(android.view.View,boolean) -> setSaveFromParentEnabled
    1895:1896:void setScaleX(android.view.View,float) -> setScaleX
    1908:1909:void setScaleY(android.view.View,float) -> setScaleY
    3079:3082:void setScrollIndicators(android.view.View,int) -> setScrollIndicators
    3113:3116:void setScrollIndicators(android.view.View,int,int) -> setScrollIndicators
    3180:3183:void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
    2073:2081:void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    1777:1778:void setTranslationX(android.view.View,float) -> setTranslationX
    1794:1795:void setTranslationY(android.view.View,float) -> setTranslationY
    2048:2051:void setTranslationZ(android.view.View,float) -> setTranslationZ
    1826:1827:void setX(android.view.View,float) -> setX
    1841:1842:void setY(android.view.View,float) -> setY
    2905:2908:void setZ(android.view.View,float) -> setZ
    3190:3193:boolean startDragAndDrop(android.view.View,android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int) -> startDragAndDrop
    2501:2507:boolean startNestedScroll(android.view.View,int) -> startNestedScroll
    2648:2653:boolean startNestedScroll(android.view.View,int,int) -> startNestedScroll
    2520:2525:void stopNestedScroll(android.view.View) -> stopNestedScroll
    2665:2670:void stopNestedScroll(android.view.View,int) -> stopNestedScroll
    3007:3010:void tickleInvalidationFlag(android.view.View) -> tickleInvalidationFlag
    3210:3213:void updateDragShadow(android.view.View,android.view.View$DragShadowBuilder) -> updateDragShadow
androidx.core.view.ViewCompat$1 -> androidx.core.view.ViewCompat$1:
    2209:2209:void <init>(androidx.core.view.OnApplyWindowInsetsListener) -> <init>
    2212:2214:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerWrapper -> androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerWrapper:
    3486:3488:void <init>(androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat) -> <init>
    3491:3491:boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent) -> onUnhandledKeyEvent
androidx.core.view.ViewCompat$UnhandledKeyEventManager -> androidx.core.view.ViewCompat$UnhandledKeyEventManager:
    3515:3515:void <clinit>() -> <clinit>
    3511:3530:void <init>() -> <init>
    3540:3546:androidx.core.view.ViewCompat$UnhandledKeyEventManager at(android.view.View) -> at
    3550:3564:boolean dispatch(android.view.View,android.view.KeyEvent) -> dispatch
    3569:3586:android.view.View dispatchInOrder(android.view.View,android.view.KeyEvent) -> dispatchInOrder
    3533:3536:android.util.SparseArray getCapturedKeys() -> getCapturedKeys
    3628:3638:boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent) -> onUnhandledKeyEvent
    3595:3623:boolean preDispatch(android.view.KeyEvent) -> preDispatch
    3668:3693:void recalcViewsWithUnhandled() -> recalcViewsWithUnhandled
    3646:3654:void registerListeningView(android.view.View) -> registerListeningView
    3657:3665:void unregisterListeningView(android.view.View) -> unregisterListeningView
androidx.core.view.ViewConfigurationCompat -> androidx.core.view.ViewConfigurationCompat:
    39:47:void <clinit>() -> <clinit>
    150:150:void <init>() -> <init>
    106:119:float getLegacyScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getLegacyScrollFactor
    81:84:float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getScaledHorizontalScrollFactor
    128:131:int getScaledHoverSlop(android.view.ViewConfiguration) -> getScaledHoverSlop
    57:57:int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
    98:101:float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getScaledVerticalScrollFactor
    68:68:boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> hasPermanentMenuKey
    141:147:boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context) -> shouldShowMenuShortcutsWhenKeyboardPresent
androidx.core.view.ViewGroupCompat -> androidx.core.view.ViewGroupCompat:
    52:52:void <init>() -> <init>
    114:117:int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    181:187:int getNestedScrollAxes(android.view.ViewGroup) -> getNestedScrollAxes
    157:163:boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
    75:75:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    130:133:void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
    98:99:void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    144:149:void setTransitionGroup(android.view.ViewGroup,boolean) -> setTransitionGroup
androidx.core.view.ViewParentCompat -> androidx.core.view.ViewParentCompat:
    38:38:void <init>() -> <init>
    447:450:void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int) -> notifySubtreeAccessibilityStateChanged
    379:390:boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    416:427:boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
    147:148:void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> onNestedPreScroll
    339:355:void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[],int) -> onNestedPreScroll
    129:131:void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> onNestedScroll
    294:313:void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int) -> onNestedScroll
    99:100:void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> onNestedScrollAccepted
    217:235:void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    82:82:boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> onStartNestedScroll
    176:194:boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    111:112:void onStopNestedScroll(android.view.ViewParent,android.view.View) -> onStopNestedScroll
    251:267:void onStopNestedScroll(android.view.ViewParent,android.view.View,int) -> onStopNestedScroll
    63:63:boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
androidx.core.view.ViewPropertyAnimatorCompat -> androidx.core.view.ViewPropertyAnimatorCompat:
    30:39:void <init>(android.view.View) -> <init>
    137:140:androidx.core.view.ViewPropertyAnimatorCompat alpha(float) -> alpha
    152:155:androidx.core.view.ViewPropertyAnimatorCompat alphaBy(float) -> alphaBy
    463:466:void cancel() -> cancel
    236:239:long getDuration() -> getDuration
    266:271:android.view.animation.Interpolator getInterpolator() -> getInterpolator
    301:304:long getStartDelay() -> getStartDelay
    317:320:androidx.core.view.ViewPropertyAnimatorCompat rotation(float) -> rotation
    332:335:androidx.core.view.ViewPropertyAnimatorCompat rotationBy(float) -> rotationBy
    347:350:androidx.core.view.ViewPropertyAnimatorCompat rotationX(float) -> rotationX
    362:365:androidx.core.view.ViewPropertyAnimatorCompat rotationXBy(float) -> rotationXBy
    377:380:androidx.core.view.ViewPropertyAnimatorCompat rotationY(float) -> rotationY
    392:395:androidx.core.view.ViewPropertyAnimatorCompat rotationYBy(float) -> rotationYBy
    407:410:androidx.core.view.ViewPropertyAnimatorCompat scaleX(float) -> scaleX
    422:425:androidx.core.view.ViewPropertyAnimatorCompat scaleXBy(float) -> scaleXBy
    437:440:androidx.core.view.ViewPropertyAnimatorCompat scaleY(float) -> scaleY
    452:455:androidx.core.view.ViewPropertyAnimatorCompat scaleYBy(float) -> scaleYBy
    122:125:androidx.core.view.ViewPropertyAnimatorCompat setDuration(long) -> setDuration
    253:256:androidx.core.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    727:735:androidx.core.view.ViewPropertyAnimatorCompat setListener(androidx.core.view.ViewPropertyAnimatorListener) -> setListener
    739:759:void setListenerInternal(android.view.View,androidx.core.view.ViewPropertyAnimatorListener) -> setListenerInternal
    285:288:androidx.core.view.ViewPropertyAnimatorCompat setStartDelay(long) -> setStartDelay
    774:788:androidx.core.view.ViewPropertyAnimatorCompat setUpdateListener(androidx.core.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
    643:646:void start() -> start
    167:170:androidx.core.view.ViewPropertyAnimatorCompat translationX(float) -> translationX
    537:540:androidx.core.view.ViewPropertyAnimatorCompat translationXBy(float) -> translationXBy
    182:185:androidx.core.view.ViewPropertyAnimatorCompat translationY(float) -> translationY
    552:555:androidx.core.view.ViewPropertyAnimatorCompat translationYBy(float) -> translationYBy
    588:593:androidx.core.view.ViewPropertyAnimatorCompat translationZ(float) -> translationZ
    569:574:androidx.core.view.ViewPropertyAnimatorCompat translationZBy(float) -> translationZBy
    215:223:androidx.core.view.ViewPropertyAnimatorCompat withEndAction(java.lang.Runnable) -> withEndAction
    678:686:androidx.core.view.ViewPropertyAnimatorCompat withLayer() -> withLayer
    706:714:androidx.core.view.ViewPropertyAnimatorCompat withStartAction(java.lang.Runnable) -> withStartAction
    477:480:androidx.core.view.ViewPropertyAnimatorCompat x(float) -> x
    492:495:androidx.core.view.ViewPropertyAnimatorCompat xBy(float) -> xBy
    507:510:androidx.core.view.ViewPropertyAnimatorCompat y(float) -> y
    522:525:androidx.core.view.ViewPropertyAnimatorCompat yBy(float) -> yBy
    607:612:androidx.core.view.ViewPropertyAnimatorCompat z(float) -> z
    626:631:androidx.core.view.ViewPropertyAnimatorCompat zBy(float) -> zBy
androidx.core.view.ViewPropertyAnimatorCompat$1 -> androidx.core.view.ViewPropertyAnimatorCompat$1:
    740:740:void <init>(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorListener,android.view.View) -> <init>
    743:744:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    748:749:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    753:754:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.core.view.ViewPropertyAnimatorCompat$2 -> androidx.core.view.ViewPropertyAnimatorCompat$2:
    778:778:void <init>(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorUpdateListener,android.view.View) -> <init>
    781:782:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14 -> androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14:
    45:47:void <init>(androidx.core.view.ViewPropertyAnimatorCompat) -> <init>
    100:108:void onAnimationCancel(android.view.View) -> onAnimationCancel
    74:96:void onAnimationEnd(android.view.View) -> onAnimationEnd
    52:70:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.core.view.ViewPropertyAnimatorListenerAdapter -> androidx.core.view.ViewPropertyAnimatorListenerAdapter:
    27:27:void <init>() -> <init>
    48:48:void onAnimationCancel(android.view.View) -> onAnimationCancel
    41:41:void onAnimationEnd(android.view.View) -> onAnimationEnd
    34:34:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.core.view.WindowCompat -> androidx.core.view.WindowCompat:
    65:65:void <init>() -> <init>
    85:93:android.view.View requireViewById(android.view.Window,int) -> requireViewById
androidx.core.view.WindowInsetsCompat -> androidx.core.view.WindowInsetsCompat:
    35:37:void <init>(java.lang.Object) -> <init>
    44:50:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    368:371:androidx.core.view.WindowInsetsCompat consumeDisplayCutout() -> consumeDisplayCutout
    340:343:androidx.core.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
    195:198:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    377:384:boolean equals(java.lang.Object) -> equals
    355:358:androidx.core.view.DisplayCutoutCompat getDisplayCutout() -> getDisplayCutout
    308:311:int getStableInsetBottom() -> getStableInsetBottom
    269:272:int getStableInsetLeft() -> getStableInsetLeft
    288:291:int getStableInsetRight() -> getStableInsetRight
    250:253:int getStableInsetTop() -> getStableInsetTop
    113:116:int getSystemWindowInsetBottom() -> getSystemWindowInsetBottom
    62:65:int getSystemWindowInsetLeft() -> getSystemWindowInsetLeft
    96:99:int getSystemWindowInsetRight() -> getSystemWindowInsetRight
    79:82:int getSystemWindowInsetTop() -> getSystemWindowInsetTop
    143:146:boolean hasInsets() -> hasInsets
    327:330:boolean hasStableInsets() -> hasStableInsets
    130:133:boolean hasSystemWindowInsets() -> hasSystemWindowInsets
    389:389:int hashCode() -> hashCode
    164:167:boolean isConsumed() -> isConsumed
    182:185:boolean isRound() -> isRound
    213:217:androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int) -> replaceSystemWindowInsets
    230:234:androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(android.graphics.Rect) -> replaceSystemWindowInsets
    397:397:java.lang.Object unwrap(androidx.core.view.WindowInsetsCompat) -> unwrap
    393:393:androidx.core.view.WindowInsetsCompat wrap(java.lang.Object) -> wrap
androidx.core.view.accessibility.AccessibilityEventCompat -> androidx.core.view.accessibility.AccessibilityEventCompat:
    191:193:void <init>() -> <init>
    219:220:void appendRecord(android.view.accessibility.AccessibilityEvent,androidx.core.view.accessibility.AccessibilityRecordCompat) -> appendRecord
    252:252:androidx.core.view.accessibility.AccessibilityRecordCompat asRecord(android.view.accessibility.AccessibilityEvent) -> asRecord
    345:348:int getAction(android.view.accessibility.AccessibilityEvent) -> getAction
    283:286:int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> getContentChangeTypes
    309:312:int getMovementGranularity(android.view.accessibility.AccessibilityEvent) -> getMovementGranularity
    232:232:androidx.core.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    204:204:int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    334:337:void setAction(android.view.accessibility.AccessibilityEvent,int) -> setAction
    264:267:void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
    298:301:void setMovementGranularity(android.view.accessibility.AccessibilityEvent,int) -> setMovementGranularity
androidx.core.view.accessibility.AccessibilityManagerCompat -> androidx.core.view.accessibility.AccessibilityManagerCompat:
    274:274:void <init>() -> <init>
    46:49:boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener) -> addAccessibilityStateChangeListener
    165:172:boolean addTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener) -> addTouchExplorationStateChangeListener
    140:140:java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    117:117:java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    153:153:boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
    66:69:boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener) -> removeAccessibilityStateChangeListener
    184:191:boolean removeTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener) -> removeTouchExplorationStateChangeListener
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat -> androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat:
    236:236:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerWrapper -> androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerWrapper:
    78:80:void <init>(androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener) -> <init>
    89:97:boolean equals(java.lang.Object) -> equals
    84:84:int hashCode() -> hashCode
    102:103:void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListenerWrapper -> androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListenerWrapper:
    201:203:void <init>(androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener) -> <init>
    212:220:boolean equals(java.lang.Object) -> equals
    207:207:int hashCode() -> hashCode
    225:226:void onTouchExplorationStateChanged(boolean) -> onTouchExplorationStateChanged
androidx.core.view.accessibility.AccessibilityNodeInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat:
    889:1317:void <init>(java.lang.Object) -> <init>
    889:1321:void <init>(android.view.accessibility.AccessibilityNodeInfo) -> <init>
    1610:1611:void addAction(int) -> addAction
    1625:1628:void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> addAction
    1522:1523:void addChild(android.view.View) -> addChild
    1540:1543:void addChild(android.view.View,int) -> addChild
    2751:2754:boolean canOpenPopup() -> canOpenPopup
    3419:3436:boolean equals(java.lang.Object) -> equals
    1734:1741:java.util.List findAccessibilityNodeInfosByText(java.lang.String) -> findAccessibilityNodeInfosByText
    2797:2805:java.util.List findAccessibilityNodeInfosByViewId(java.lang.String) -> findAccessibilityNodeInfosByViewId
    1446:1449:androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    1468:1471:androidx.core.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int) -> focusSearch
    2493:2506:java.util.List getActionList() -> getActionList
    3500:3538:java.lang.String getActionSymbolicName(int) -> getActionSymbolicName
    1595:1595:int getActions() -> getActions
    3494:3496:boolean getBooleanProperty(int) -> getBooleanProperty
    1805:1806:void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    1829:1830:void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    1507:1507:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getChild(int) -> getChild
    1490:1490:int getChildCount() -> getChildCount
    2212:2212:java.lang.CharSequence getClassName() -> getClassName
    2413:2419:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat getCollectionInfo() -> getCollectionInfo
    2446:2452:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat getCollectionItemInfo() -> getCollectionItemInfo
    2260:2260:java.lang.CharSequence getContentDescription() -> getContentDescription
    2382:2385:int getDrawingOrder() -> getDrawingOrder
    2631:2634:java.lang.CharSequence getError() -> getError
    2823:2826:android.os.Bundle getExtras() -> getExtras
    2577:2582:java.lang.CharSequence getHintText() -> getHintText
    1347:1347:java.lang.Object getInfo() -> getInfo
    2836:2839:int getInputType() -> getInputType
    2682:2685:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getLabelFor() -> getLabelFor
    2738:2741:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getLabeledBy() -> getLabeledBy
    2345:2348:int getLiveRegion() -> getLiveRegion
    2890:2893:int getMaxTextLength() -> getMaxTextLength
    1713:1716:int getMovementGranularities() -> getMovementGranularities
    2188:2188:java.lang.CharSequence getPackageName() -> getPackageName
    3237:3242:java.lang.CharSequence getPaneTitle() -> getPaneTitle
    1755:1755:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getParent() -> getParent
    2461:2467:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat getRangeInfo() -> getRangeInfo
    3375:3378:java.lang.CharSequence getRoleDescription() -> getRoleDescription
    2236:2236:java.lang.CharSequence getText() -> getText
    2935:2938:int getTextSelectionEnd() -> getTextSelectionEnd
    2922:2925:int getTextSelectionStart() -> getTextSelectionStart
    3181:3186:java.lang.CharSequence getTooltipText() -> getTooltipText
    3017:3020:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTraversalAfter() -> getTraversalAfter
    2952:2955:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTraversalBefore() -> getTraversalBefore
    2319:2322:java.lang.String getViewIdResourceName() -> getViewIdResourceName
    3078:3081:androidx.core.view.accessibility.AccessibilityWindowInfoCompat getWindow() -> getWindow
    1481:1481:int getWindowId() -> getWindowId
    3414:3414:int hashCode() -> hashCode
    1980:1983:boolean isAccessibilityFocused() -> isAccessibilityFocused
    1853:1853:boolean isCheckable() -> isCheckable
    1877:1877:boolean isChecked() -> isChecked
    2035:2035:boolean isClickable() -> isClickable
    2534:2537:boolean isContentInvalid() -> isContentInvalid
    2547:2550:boolean isContextClickable() -> isContextClickable
    3091:3094:boolean isDismissable() -> isDismissable
    3120:3123:boolean isEditable() -> isEditable
    2083:2083:boolean isEnabled() -> isEnabled
    1901:1901:boolean isFocusable() -> isFocusable
    1925:1925:boolean isFocused() -> isFocused
    3326:3331:boolean isHeading() -> isHeading
    2158:2161:boolean isImportantForAccessibility() -> isImportantForAccessibility
    2059:2059:boolean isLongClickable() -> isLongClickable
    3151:3154:boolean isMultiLine() -> isMultiLine
    2107:2107:boolean isPassword() -> isPassword
    3256:3259:boolean isScreenReaderFocusable() -> isScreenReaderFocusable
    2131:2131:boolean isScrollable() -> isScrollable
    2011:2011:boolean isSelected() -> isSelected
    3290:3293:boolean isShowingHintText() -> isShowingHintText
    1949:1952:boolean isVisibleToUser() -> isVisibleToUser
    1358:1358:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> obtain
    1372:1376:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int) -> obtain
    1386:1386:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain() -> obtain
    1397:1397:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    1665:1665:boolean performAction(int) -> performAction
    1682:1685:boolean performAction(int,android.os.Bundle) -> performAction
    2286:2287:void recycle() -> recycle
    3363:3366:boolean refresh() -> refresh
    1645:1648:boolean removeAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> removeAction
    1560:1563:boolean removeChild(android.view.View) -> removeChild
    1578:1581:boolean removeChild(android.view.View,int) -> removeChild
    2000:2003:void setAccessibilityFocused(boolean) -> setAccessibilityFocused
    3484:3491:void setBooleanProperty(int,boolean) -> setBooleanProperty
    1820:1821:void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    1844:1845:void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    2769:2772:void setCanOpenPopup(boolean) -> setCanOpenPopup
    1868:1869:void setCheckable(boolean) -> setCheckable
    1892:1893:void setChecked(boolean) -> setChecked
    2227:2228:void setClassName(java.lang.CharSequence) -> setClassName
    2050:2051:void setClickable(boolean) -> setClickable
    2423:2429:void setCollectionInfo(java.lang.Object) -> setCollectionInfo
    2432:2437:void setCollectionItemInfo(java.lang.Object) -> setCollectionItemInfo
    2275:2276:void setContentDescription(java.lang.CharSequence) -> setContentDescription
    2522:2525:void setContentInvalid(boolean) -> setContentInvalid
    2566:2569:void setContextClickable(boolean) -> setContextClickable
    3109:3112:void setDismissable(boolean) -> setDismissable
    2401:2404:void setDrawingOrder(int) -> setDrawingOrder
    3140:3143:void setEditable(boolean) -> setEditable
    2098:2099:void setEnabled(boolean) -> setEnabled
    2620:2623:void setError(java.lang.CharSequence) -> setError
    1916:1917:void setFocusable(boolean) -> setFocusable
    1940:1941:void setFocused(boolean) -> setFocused
    3346:3351:void setHeading(boolean) -> setHeading
    2599:2604:void setHintText(java.lang.CharSequence) -> setHintText
    2177:2180:void setImportantForAccessibility(boolean) -> setImportantForAccessibility
    2857:2860:void setInputType(int) -> setInputType
    2645:2648:void setLabelFor(android.view.View) -> setLabelFor
    2665:2668:void setLabelFor(android.view.View,int) -> setLabelFor
    2696:2699:void setLabeledBy(android.view.View) -> setLabeledBy
    2721:2724:void setLabeledBy(android.view.View,int) -> setLabeledBy
    2365:2368:void setLiveRegion(int) -> setLiveRegion
    2074:2075:void setLongClickable(boolean) -> setLongClickable
    2878:2881:void setMaxTextLength(int) -> setMaxTextLength
    1702:1705:void setMovementGranularities(int) -> setMovementGranularities
    3169:3172:void setMultiLine(boolean) -> setMultiLine
    2203:2204:void setPackageName(java.lang.CharSequence) -> setPackageName
    3223:3228:void setPaneTitle(java.lang.CharSequence) -> setPaneTitle
    1770:1771:void setParent(android.view.View) -> setParent
    1793:1797:void setParent(android.view.View,int) -> setParent
    2122:2123:void setPassword(boolean) -> setPassword
    2481:2484:void setRangeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat) -> setRangeInfo
    3407:3410:void setRoleDescription(java.lang.CharSequence) -> setRoleDescription
    3275:3280:void setScreenReaderFocusable(boolean) -> setScreenReaderFocusable
    2146:2147:void setScrollable(boolean) -> setScrollable
    2026:2027:void setSelected(boolean) -> setSelected
    3310:3315:void setShowingHintText(boolean) -> setShowingHintText
    1406:1407:void setSource(android.view.View) -> setSource
    1429:1432:void setSource(android.view.View,int) -> setSource
    2251:2252:void setText(java.lang.CharSequence) -> setText
    2911:2914:void setTextSelection(int,int) -> setTextSelection
    3203:3208:void setTooltipText(java.lang.CharSequence) -> setTooltipText
    3039:3042:void setTraversalAfter(android.view.View) -> setTraversalAfter
    3065:3068:void setTraversalAfter(android.view.View,int) -> setTraversalAfter
    2974:2977:void setTraversalBefore(android.view.View) -> setTraversalBefore
    3001:3004:void setTraversalBefore(android.view.View,int) -> setTraversalBefore
    2301:2304:void setViewIdResourceName(java.lang.String) -> setViewIdResourceName
    1969:1972:void setVisibleToUser(boolean) -> setVisibleToUser
    3441:3480:java.lang.String toString() -> toString
    1337:1337:android.view.accessibility.AccessibilityNodeInfo unwrap() -> unwrap
    1330:1330:androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrap(android.view.accessibility.AccessibilityNodeInfo) -> wrap
    1300:1303:androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> wrapNonNullInstance
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat:
    49:441:void <clinit>() -> <clinit>
    454:456:void <init>(int,java.lang.CharSequence) -> <init>
    458:460:void <init>(java.lang.Object) -> <init>
    468:471:int getId() -> getId
    482:485:java.lang.CharSequence getLabel() -> getLabel
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat:
    560:562:void <init>(java.lang.Object) -> <init>
    570:573:int getColumnCount() -> getColumnCount
    583:586:int getRowCount() -> getRowCount
    614:617:int getSelectionMode() -> getSelectionMode
    596:599:boolean isHierarchical() -> isHierarchical
    530:537:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean,int) -> obtain
    552:556:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean) -> obtain
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat:
    684:686:void <init>(java.lang.Object) -> <init>
    694:697:int getColumnIndex() -> getColumnIndex
    707:710:int getColumnSpan() -> getColumnSpan
    720:723:int getRowIndex() -> getRowIndex
    733:736:int getRowSpan() -> getRowSpan
    748:751:boolean isHeading() -> isHeading
    761:764:boolean isSelected() -> isSelected
    651:658:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean) -> obtain
    676:680:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean) -> obtain
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat:
    800:802:void <init>(java.lang.Object) -> <init>
    810:813:float getCurrent() -> getCurrent
    823:826:float getMax() -> getMax
    836:839:float getMin() -> getMin
    853:856:int getType() -> getType
    790:794:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat obtain(int,float,float,float) -> obtain
androidx.core.view.accessibility.AccessibilityNodeProviderCompat -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat:
    104:112:void <init>() -> <init>
    120:122:void <init>(java.lang.Object) -> <init>
    155:155:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    192:192:java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    208:208:androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    128:128:java.lang.Object getProvider() -> getProvider
    172:172:boolean performAction(int,int,android.os.Bundle) -> performAction
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16 -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16:
    38:40:void <init>(androidx.core.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    44:49:android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    56:67:java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    73:73:boolean performAction(int,int,android.os.Bundle) -> performAction
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19 -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19:
    80:81:void <init>(androidx.core.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    85:89:android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
androidx.core.view.accessibility.AccessibilityRecordCompat -> androidx.core.view.accessibility.AccessibilityRecordCompat:
    43:45:void <init>(java.lang.Object) -> <init>
    761:778:boolean equals(java.lang.Object) -> equals
    570:570:int getAddedCount() -> getAddedCount
    661:661:java.lang.CharSequence getBeforeText() -> getBeforeText
    622:622:java.lang.CharSequence getClassName() -> getClassName
    687:687:java.lang.CharSequence getContentDescription() -> getContentDescription
    338:338:int getCurrentItemIndex() -> getCurrentItemIndex
    367:367:int getFromIndex() -> getFromIndex
    55:55:java.lang.Object getImpl() -> getImpl
    312:312:int getItemCount() -> getItemCount
    470:470:int getMaxScrollX() -> getMaxScrollX
    480:483:int getMaxScrollX(android.view.accessibility.AccessibilityRecord) -> getMaxScrollX
    520:520:int getMaxScrollY() -> getMaxScrollY
    530:533:int getMaxScrollY(android.view.accessibility.AccessibilityRecord) -> getMaxScrollY
    713:713:android.os.Parcelable getParcelableData() -> getParcelableData
    596:596:int getRemovedCount() -> getRemovedCount
    422:422:int getScrollX() -> getScrollX
    446:446:int getScrollY() -> getScrollY
    158:158:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getSource() -> getSource
    649:649:java.util.List getText() -> getText
    397:397:int getToIndex() -> getToIndex
    170:170:int getWindowId() -> getWindowId
    752:752:int hashCode() -> hashCode
    182:182:boolean isChecked() -> isChecked
    208:208:boolean isEnabled() -> isEnabled
    260:260:boolean isFullScreen() -> isFullScreen
    234:234:boolean isPassword() -> isPassword
    286:286:boolean isScrollable() -> isScrollable
    69:69:androidx.core.view.accessibility.AccessibilityRecordCompat obtain(androidx.core.view.accessibility.AccessibilityRecordCompat) -> obtain
    82:82:androidx.core.view.accessibility.AccessibilityRecordCompat obtain() -> obtain
    743:744:void recycle() -> recycle
    584:585:void setAddedCount(int) -> setAddedCount
    675:676:void setBeforeText(java.lang.CharSequence) -> setBeforeText
    196:197:void setChecked(boolean) -> setChecked
    636:637:void setClassName(java.lang.CharSequence) -> setClassName
    701:702:void setContentDescription(java.lang.CharSequence) -> setContentDescription
    352:353:void setCurrentItemIndex(int) -> setCurrentItemIndex
    222:223:void setEnabled(boolean) -> setEnabled
    384:385:void setFromIndex(int) -> setFromIndex
    274:275:void setFullScreen(boolean) -> setFullScreen
    326:327:void setItemCount(int) -> setItemCount
    496:497:void setMaxScrollX(int) -> setMaxScrollX
    506:509:void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollX
    546:547:void setMaxScrollY(int) -> setMaxScrollY
    556:559:void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollY
    727:728:void setParcelableData(android.os.Parcelable) -> setParcelableData
    248:249:void setPassword(boolean) -> setPassword
    610:611:void setRemovedCount(int) -> setRemovedCount
    434:435:void setScrollX(int) -> setScrollX
    458:459:void setScrollY(int) -> setScrollY
    300:301:void setScrollable(boolean) -> setScrollable
    96:97:void setSource(android.view.View) -> setSource
    117:118:void setSource(android.view.View,int) -> setSource
    137:140:void setSource(android.view.accessibility.AccessibilityRecord,android.view.View,int) -> setSource
    410:411:void setToIndex(int) -> setToIndex
androidx.core.view.accessibility.AccessibilityWindowInfoCompat -> androidx.core.view.accessibility.AccessibilityWindowInfoCompat:
    82:84:void <init>(java.lang.Object) -> <init>
    319:336:boolean equals(java.lang.Object) -> equals
    257:261:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getAnchor() -> getAnchor
    164:167:void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    230:233:androidx.core.view.accessibility.AccessibilityWindowInfoCompat getChild(int) -> getChild
    216:219:int getChildCount() -> getChildCount
    151:154:int getId() -> getId
    111:114:int getLayer() -> getLayer
    138:141:androidx.core.view.accessibility.AccessibilityWindowInfoCompat getParent() -> getParent
    124:128:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getRoot() -> getRoot
    244:247:java.lang.CharSequence getTitle() -> getTitle
    97:100:int getType() -> getType
    314:314:int hashCode() -> hashCode
    203:206:boolean isAccessibilityFocused() -> isAccessibilityFocused
    177:180:boolean isActive() -> isActive
    190:193:boolean isFocused() -> isFocused
    272:275:androidx.core.view.accessibility.AccessibilityWindowInfoCompat obtain() -> obtain
    288:294:androidx.core.view.accessibility.AccessibilityWindowInfoCompat obtain(androidx.core.view.accessibility.AccessibilityWindowInfoCompat) -> obtain
    307:310:void recycle() -> recycle
    341:354:java.lang.String toString() -> toString
    358:372:java.lang.String typeToString(int) -> typeToString
    76:79:androidx.core.view.accessibility.AccessibilityWindowInfoCompat wrapNonNullInstance(java.lang.Object) -> wrapNonNullInstance
androidx.core.view.animation.PathInterpolatorApi14 -> androidx.core.view.animation.PathInterpolatorApi14:
    36:53:void <init>(android.graphics.Path) -> <init>
    56:57:void <init>(float,float) -> <init>
    61:62:void <init>(float,float,float,float) -> <init>
    107:110:android.graphics.Path createCubic(float,float,float,float) -> createCubic
    99:102:android.graphics.Path createQuad(float,float) -> createQuad
    66:95:float getInterpolation(float) -> getInterpolation
androidx.core.view.animation.PathInterpolatorCompat -> androidx.core.view.animation.PathInterpolatorCompat:
    31:33:void <init>() -> <init>
    48:51:android.view.animation.Interpolator create(android.graphics.Path) -> create
    63:66:android.view.animation.Interpolator create(float,float) -> create
    81:84:android.view.animation.Interpolator create(float,float,float,float) -> create
androidx.core.view.inputmethod.EditorInfoCompat -> androidx.core.view.inputmethod.EditorInfoCompat:
    71:71:void <clinit>() -> <clinit>
    126:127:void <init>() -> <init>
    111:119:java.lang.String[] getContentMimeTypes(android.view.inputmethod.EditorInfo) -> getContentMimeTypes
    89:97:void setContentMimeTypes(android.view.inputmethod.EditorInfo,java.lang.String[]) -> setContentMimeTypes
androidx.core.view.inputmethod.InputConnectionCompat -> androidx.core.view.inputmethod.InputConnectionCompat:
    237:238:void <init>() -> <init>
    99:122:boolean commitContent(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle) -> commitContent
    194:222:android.view.inputmethod.InputConnection createWrapper(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> createWrapper
    58:82:boolean handlePerformPrivateCommand(java.lang.String,android.os.Bundle,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> handlePerformPrivateCommand
androidx.core.view.inputmethod.InputConnectionCompat$1 -> androidx.core.view.inputmethod.InputConnectionCompat$1:
    205:205:void <init>(android.view.inputmethod.InputConnection,boolean,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> <init>
    209:213:boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle) -> commitContent
androidx.core.view.inputmethod.InputConnectionCompat$2 -> androidx.core.view.inputmethod.InputConnectionCompat$2:
    222:222:void <init>(android.view.inputmethod.InputConnection,boolean,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> <init>
    225:228:boolean performPrivateCommand(java.lang.String,android.os.Bundle) -> performPrivateCommand
androidx.core.view.inputmethod.InputContentInfoCompat -> androidx.core.view.inputmethod.InputContentInfoCompat:
    169:175:void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri) -> <init>
    177:179:void <init>(androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl) -> <init>
    186:186:android.net.Uri getContentUri() -> getContentUri
    196:196:android.content.ClipDescription getDescription() -> getDescription
    204:204:android.net.Uri getLinkUri() -> getLinkUri
    256:257:void releasePermission() -> releasePermission
    247:248:void requestPermission() -> requestPermission
    238:238:java.lang.Object unwrap() -> unwrap
    219:225:androidx.core.view.inputmethod.InputContentInfoCompat wrap(java.lang.Object) -> wrap
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl -> androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl:
    109:111:void <init>(java.lang.Object) -> <init>
    114:116:void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri) -> <init>
    121:121:android.net.Uri getContentUri() -> getContentUri
    127:127:android.content.ClipDescription getDescription() -> getDescription
    139:139:java.lang.Object getInputContentInfo() -> getInputContentInfo
    133:133:android.net.Uri getLinkUri() -> getLinkUri
    149:150:void releasePermission() -> releasePermission
    144:145:void requestPermission() -> requestPermission
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl -> androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl:
    62:66:void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri) -> <init>
    71:71:android.net.Uri getContentUri() -> getContentUri
    77:77:android.content.ClipDescription getDescription() -> getDescription
    89:89:java.lang.Object getInputContentInfo() -> getInputContentInfo
    83:83:android.net.Uri getLinkUri() -> getLinkUri
    99:99:void releasePermission() -> releasePermission
    94:94:void requestPermission() -> requestPermission
androidx.core.widget.AutoScrollHelper -> androidx.core.widget.AutoScrollHelper:
    195:195:void <clinit>() -> <clinit>
    138:226:void <init>(android.view.View) -> <init>
    687:692:void cancelTargetTouch() -> cancelTargetTouch
    549:568:float computeTargetVelocity(int,float,float,float) -> computeTargetVelocity
    663:668:int constrain(int,int,int) -> constrain
    673:678:float constrain(float,float,float) -> constrain
    634:659:float constrainEdgeValue(float,float) -> constrainEdgeValue
    617:630:float getEdgeValue(float,float,float,float) -> getEdgeValue
    248:248:boolean isEnabled() -> isEnabled
    277:277:boolean isExclusive() -> isExclusive
    466:495:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    538:545:void requestStop() -> requestStop
    420:421:androidx.core.widget.AutoScrollHelper setActivationDelay(int) -> setActivationDelay
    359:360:androidx.core.widget.AutoScrollHelper setEdgeType(int) -> setEdgeType
    236:241:androidx.core.widget.AutoScrollHelper setEnabled(boolean) -> setEnabled
    264:265:androidx.core.widget.AutoScrollHelper setExclusive(boolean) -> setExclusive
    402:404:androidx.core.widget.AutoScrollHelper setMaximumEdges(float,float) -> setMaximumEdges
    296:298:androidx.core.widget.AutoScrollHelper setMaximumVelocity(float,float) -> setMaximumVelocity
    315:317:androidx.core.widget.AutoScrollHelper setMinimumVelocity(float,float) -> setMinimumVelocity
    452:453:androidx.core.widget.AutoScrollHelper setRampDownDuration(int) -> setRampDownDuration
    436:437:androidx.core.widget.AutoScrollHelper setRampUpDuration(int) -> setRampUpDuration
    379:381:androidx.core.widget.AutoScrollHelper setRelativeEdges(float,float) -> setRelativeEdges
    337:339:androidx.core.widget.AutoScrollHelper setRelativeVelocity(float,float) -> setRelativeVelocity
    502:507:boolean shouldAnimate() -> shouldAnimate
    514:530:void startAnimating() -> startAnimating
androidx.core.widget.AutoScrollHelper$ClampedScroller -> androidx.core.widget.AutoScrollHelper$ClampedScroller:
    756:762:void <init>() -> <init>
    831:843:void computeScrollDelta() -> computeScrollDelta
    869:869:int getDeltaX() -> getDeltaX
    877:877:int getDeltaY() -> getDeltaY
    857:857:int getHorizontalDirection() -> getHorizontalDirection
    800:808:float getValueAt(long) -> getValueAt
    861:861:int getVerticalDirection() -> getVerticalDirection
    820:820:float interpolateValue(float) -> interpolateValue
    795:796:boolean isFinished() -> isFinished
    788:792:void requestStop() -> requestStop
    769:770:void setRampDownDuration(int) -> setRampDownDuration
    765:766:void setRampUpDuration(int) -> setRampUpDuration
    852:854:void setTargetVelocity(float,float) -> setTargetVelocity
    776:782:void start() -> start
androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable -> androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable:
    695:696:void <init>(androidx.core.widget.AutoScrollHelper) -> <init>
    700:728:void run() -> run
androidx.core.widget.AutoSizeableTextView -> androidx.core.widget.AutoSizeableTextView:
    39:39:void <clinit>() -> <clinit>
androidx.core.widget.CompoundButtonCompat -> androidx.core.widget.CompoundButtonCompat:
    41:41:void <init>() -> <init>
    123:145:android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> getButtonDrawable
    71:77:android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton) -> getButtonTintList
    107:113:android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton) -> getButtonTintMode
    57:62:void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> setButtonTintList
    93:98:void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> setButtonTintMode
androidx.core.widget.ContentLoadingProgressBar -> androidx.core.widget.ContentLoadingProgressBar:
    68:69:void <init>(android.content.Context) -> <init>
    37:73:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    97:116:void hide() -> hide
    77:79:void onAttachedToWindow() -> onAttachedToWindow
    83:85:void onDetachedFromWindow() -> onDetachedFromWindow
    88:90:void removeCallbacks() -> removeCallbacks
    123:132:void show() -> show
androidx.core.widget.ContentLoadingProgressBar$1 -> androidx.core.widget.ContentLoadingProgressBar$1:
    45:45:void <init>(androidx.core.widget.ContentLoadingProgressBar) -> <init>
    49:52:void run() -> run
androidx.core.widget.ContentLoadingProgressBar$2 -> androidx.core.widget.ContentLoadingProgressBar$2:
    55:55:void <init>(androidx.core.widget.ContentLoadingProgressBar) -> <init>
    59:64:void run() -> run
androidx.core.widget.EdgeEffectCompat -> androidx.core.widget.EdgeEffectCompat:
    47:49:void <init>(android.content.Context) -> <init>
    208:208:boolean draw(android.graphics.Canvas) -> draw
    86:87:void finish() -> finish
    75:75:boolean isFinished() -> isFinished
    190:191:boolean onAbsorb(int) -> onAbsorb
    104:105:boolean onPull(float) -> onPull
    129:130:boolean onPull(float,float) -> onPull
    152:157:void onPull(android.widget.EdgeEffect,float,float) -> onPull
    171:172:boolean onRelease() -> onRelease
    61:62:void setSize(int,int) -> setSize
androidx.core.widget.ImageViewCompat -> androidx.core.widget.ImageViewCompat:
    111:111:void <init>() -> <init>
    37:41:android.content.res.ColorStateList getImageTintList(android.widget.ImageView) -> getImageTintList
    76:80:android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView) -> getImageTintMode
    50:69:void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList) -> setImageTintList
    90:109:void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode) -> setImageTintMode
androidx.core.widget.ListPopupWindowCompat -> androidx.core.widget.ListPopupWindowCompat:
    31:33:void <init>() -> <init>
    65:65:android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
    97:100:android.view.View$OnTouchListener createDragToOpenListener(android.widget.ListPopupWindow,android.view.View) -> createDragToOpenListener
androidx.core.widget.ListViewAutoScrollHelper -> androidx.core.widget.ListViewAutoScrollHelper:
    33:36:void <init>(android.widget.ListView) -> <init>
    46:46:boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    51:83:boolean canTargetScrollVertically(int) -> canTargetScrollVertically
    40:41:void scrollTargetBy(int,int) -> scrollTargetBy
androidx.core.widget.ListViewCompat -> androidx.core.widget.ListViewCompat:
    90:90:void <init>() -> <init>
    67:85:boolean canScrollList(android.widget.ListView,int) -> canScrollList
    37:55:void scrollListBy(android.widget.ListView,int) -> scrollListBy
androidx.core.widget.NestedScrollView -> androidx.core.widget.NestedScrollView:
    175:177:void <clinit>() -> <clinit>
    189:190:void <init>(android.content.Context) -> <init>
    193:194:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    101:215:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    443:448:void addView(android.view.View) -> addView
    452:457:void addView(android.view.View,int) -> addView
    461:466:void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    470:475:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    1286:1332:boolean arrowScroll(int) -> arrowScroll
    494:501:boolean canScroll() -> canScroll
    1938:1964:int clamp(int,int,int) -> clamp
    1472:1472:int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    1465:1465:int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    1458:1458:int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    1507:1554:void computeScroll() -> computeScroll
    1604:1665:int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect) -> computeScrollDeltaToGetChildRectOnScreen
    1451:1451:int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    1444:1444:int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    1420:1437:int computeVerticalScrollRange() -> computeVerticalScrollRange
    592:592:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    288:288:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    293:293:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    244:244:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    283:283:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    237:237:boolean dispatchNestedScroll(int,int,int,int,int[],int) -> dispatchNestedScroll
    277:277:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    1361:1368:void doScrollY(int) -> doScrollY
    1888:1935:void draw(android.graphics.Canvas) -> draw
    1839:1848:void endDrag() -> endDrag
    1874:1884:void ensureGlows() -> ensureGlows
    604:642:boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    1107:1168:android.view.View findFocusableViewInBounds(boolean,int,int) -> findFocusableViewInBounds
    1816:1826:void fling(int) -> fling
    1829:1836:void flingWithNestedDispatch(int) -> flingWithNestedDispatch
    1222:1238:boolean fullScroll(int) -> fullScroll
    406:419:float getBottomFadingEdgeStrength() -> getBottomFadingEdgeStrength
    427:427:int getMaxScrollAmount() -> getMaxScrollAmount
    379:379:int getNestedScrollAxes() -> getNestedScrollAxes
    1079:1087:int getScrollRange() -> getScrollRange
    391:401:float getTopFadingEdgeStrength() -> getTopFadingEdgeStrength
    1000:1011:float getVerticalScrollFactorCompat() -> getVerticalScrollFactorCompat
    231:231:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    271:271:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    646:654:boolean inChild(int,int) -> inChild
    658:663:void initOrResetVelocityTracker() -> initOrResetVelocityTracker
    431:439:void initScrollView() -> initScrollView
    666:669:void initVelocityTrackerIfNotExists() -> initVelocityTrackerIfNotExists
    512:512:boolean isFillViewport() -> isFillViewport
    256:256:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    1340:1340:boolean isOffScreen(android.view.View) -> isOffScreen
    534:534:boolean isSmoothScrollingEnabled() -> isSmoothScrollingEnabled
    1800:1805:boolean isViewDescendantOf(android.view.View,android.view.View) -> isViewDescendantOf
    1348:1352:boolean isWithinDeltaOfScreen(android.view.View,int,int) -> isWithinDeltaOfScreen
    1478:1489:void measureChild(android.view.View,int,int) -> measureChild
    1494:1503:void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    1771:1774:void onAttachedToWindow() -> onAttachedToWindow
    972:996:boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    699:794:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1733:1767:void onLayout(boolean,int,int,int,int) -> onLayout
    556:587:void onMeasure(int,int) -> onMeasure
    365:369:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    374:374:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    331:332:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    360:361:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    320:326:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    354:356:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    307:309:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    343:344:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    1017:1018:void onOverScrolled(int,int,boolean,boolean) -> onOverScrolled
    1693:1712:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    1969:1978:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1982:1985:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    547:552:void onScrollChanged(int,int,int,int) -> onScrollChanged
    955:968:void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    1778:1794:void onSizeChanged(int,int,int,int) -> onSizeChanged
    301:301:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    338:338:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    313:315:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    348:349:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    799:951:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1025:1075:boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean) -> overScrollByCompat
    1184:1206:boolean pageScroll(int) -> pageScroll
    672:676:void recycleVelocityTracker() -> recycleVelocityTracker
    1670:1677:void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    1719:1722:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    680:684:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    1727:1729:void requestLayout() -> requestLayout
    1254:1275:boolean scrollAndFocus(int,int,int) -> scrollAndFocus
    1858:1871:void scrollTo(int,int) -> scrollTo
    1562:1572:void scrollToChild(android.view.View) -> scrollToChild
    1583:1592:boolean scrollToChildRect(android.graphics.Rect,boolean) -> scrollToChildRect
    524:528:void setFillViewport(boolean) -> setFillViewport
    251:252:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    487:488:void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener) -> setOnScrollChangeListener
    542:543:void setSmoothScrollingEnabled(boolean) -> setSmoothScrollingEnabled
    386:386:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    1377:1400:void smoothScrollBy(int,int) -> smoothScrollBy
    1409:1410:void smoothScrollTo(int,int) -> smoothScrollTo
    221:221:boolean startNestedScroll(int,int) -> startNestedScroll
    261:261:boolean startNestedScroll(int) -> startNestedScroll
    226:227:void stopNestedScroll(int) -> stopNestedScroll
    266:267:void stopNestedScroll() -> stopNestedScroll
androidx.core.widget.NestedScrollView$AccessibilityDelegate -> androidx.core.widget.NestedScrollView$AccessibilityDelegate:
    2027:2027:void <init>() -> <init>
    2084:2093:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    2065:2080:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    2030:2060:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
androidx.core.widget.NestedScrollView$SavedState -> androidx.core.widget.NestedScrollView$SavedState:
    2013:2013:void <clinit>() -> <clinit>
    1992:1993:void <init>(android.os.Parcelable) -> <init>
    1996:1998:void <init>(android.os.Parcel) -> <init>
    2008:2009:java.lang.String toString() -> toString
    2002:2004:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.core.widget.NestedScrollView$SavedState$1 -> androidx.core.widget.NestedScrollView$SavedState$1:
    2014:2014:void <init>() -> <init>
    2014:2014:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2017:2017:androidx.core.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2014:2014:java.lang.Object[] newArray(int) -> newArray
    2022:2022:androidx.core.widget.NestedScrollView$SavedState[] newArray(int) -> newArray
androidx.core.widget.PopupMenuCompat -> androidx.core.widget.PopupMenuCompat:
    30:32:void <init>() -> <init>
    55:58:android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
androidx.core.widget.PopupWindowCompat -> androidx.core.widget.PopupWindowCompat:
    46:48:void <init>() -> <init>
    119:140:boolean getOverlapAnchor(android.widget.PopupWindow) -> getOverlapAnchor
    183:204:int getWindowLayoutType(android.widget.PopupWindow) -> getWindowLayoutType
    90:110:void setOverlapAnchor(android.widget.PopupWindow,boolean) -> setOverlapAnchor
    153:175:void setWindowLayoutType(android.widget.PopupWindow,int) -> setWindowLayoutType
    68:81:void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
androidx.core.widget.ScrollerCompat -> androidx.core.widget.ScrollerCompat:
    56:59:void <init>(android.content.Context,android.view.animation.Interpolator) -> <init>
    273:274:void abortAnimation() -> abortAnimation
    142:142:boolean computeScrollOffset() -> computeScrollOffset
    41:41:androidx.core.widget.ScrollerCompat create(android.content.Context) -> create
    49:49:androidx.core.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> create
    210:211:void fling(int,int,int,int,int,int,int,int) -> fling
    242:244:void fling(int,int,int,int,int,int,int,int,int,int) -> fling
    130:130:float getCurrVelocity() -> getCurrVelocity
    82:82:int getCurrX() -> getCurrX
    94:94:int getCurrY() -> getCurrY
    104:104:int getFinalX() -> getFinalX
    114:114:int getFinalY() -> getFinalY
    70:70:boolean isFinished() -> isFinished
    334:334:boolean isOverScrolled() -> isOverScrolled
    294:295:void notifyHorizontalEdgeReached(int,int,int) -> notifyHorizontalEdgeReached
    314:315:void notifyVerticalEdgeReached(int,int,int) -> notifyVerticalEdgeReached
    262:262:boolean springBack(int,int,int,int,int,int) -> springBack
    163:164:void startScroll(int,int,int,int) -> startScroll
    183:184:void startScroll(int,int,int,int,int) -> startScroll
androidx.core.widget.TextViewCompat -> androidx.core.widget.TextViewCompat:
    109:109:void <init>() -> <init>
    454:460:int getAutoSizeMaxTextSize(android.widget.TextView) -> getAutoSizeMaxTextSize
    437:443:int getAutoSizeMinTextSize(android.widget.TextView) -> getAutoSizeMinTextSize
    420:426:int getAutoSizeStepGranularity(android.widget.TextView) -> getAutoSizeStepGranularity
    471:477:int[] getAutoSizeTextAvailableSizes(android.widget.TextView) -> getAutoSizeTextAvailableSizes
    404:410:int getAutoSizeTextType(android.widget.TextView) -> getAutoSizeTextType
    293:308:android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView) -> getCompoundDrawablesRelative
    766:766:int getFirstBaselineToTopHeight(android.widget.TextView) -> getFirstBaselineToTopHeight
    776:776:int getLastBaselineToBottomHeight(android.widget.TextView) -> getLastBaselineToBottomHeight
    224:242:int getMaxLines(android.widget.TextView) -> getMaxLines
    250:268:int getMinLines(android.widget.TextView) -> getMinLines
    961:978:int getTextDirection(android.text.TextDirectionHeuristic) -> getTextDirection
    905:952:android.text.TextDirectionHeuristic getTextDirectionHeuristic(android.widget.TextView) -> getTextDirectionHeuristic
    813:825:androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView) -> getTextMetricsParams
    112:119:java.lang.reflect.Field retrieveField(java.lang.String) -> retrieveField
    124:128:int retrieveIntFromField(java.lang.reflect.Field,android.widget.TextView) -> retrieveIntFromField
    359:366:void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView,int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    385:391:void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView,int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    324:329:void setAutoSizeTextTypeWithDefaults(android.widget.TextView,int) -> setAutoSizeTextTypeWithDefaults
    149:157:void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    176:185:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    208:217:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    504:506:void setCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    691:716:void setFirstBaselineToTopHeight(android.widget.TextView,int) -> setFirstBaselineToTopHeight
    736:757:void setLastBaselineToBottomHeight(android.widget.TextView,int) -> setLastBaselineToBottomHeight
    794:802:void setLineHeight(android.widget.TextView,int) -> setLineHeight
    882:893:void setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat) -> setPrecomputedText
    281:286:void setTextAppearance(android.widget.TextView,int) -> setTextAppearance
    840:867:void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params) -> setTextMetricsParams
    517:527:android.view.ActionMode$Callback wrapCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback) -> wrapCustomSelectionActionModeCallback
androidx.core.widget.TextViewCompat$OreoCallback -> androidx.core.widget.TextViewCompat$OreoCallback:
    547:551:void <init>(android.view.ActionMode$Callback,android.widget.TextView) -> <init>
    669:669:android.content.Intent createProcessTextIntent() -> createProcessTextIntent
    657:659:android.content.Intent createProcessTextIntentForResolveInfo(android.content.pm.ResolveInfo,android.widget.TextView) -> createProcessTextIntentForResolveInfo
    628:640:java.util.List getSupportedActivities(android.content.Context,android.content.pm.PackageManager) -> getSupportedActivities
    663:665:boolean isEditable(android.widget.TextView) -> isEditable
    644:651:boolean isSupportedActivity(android.content.pm.ResolveInfo,android.content.Context) -> isSupportedActivity
    566:566:boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    555:555:boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    571:572:void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
    560:561:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    575:624:void recomputeProcessTextMenuItems(android.view.Menu) -> recomputeProcessTextMenuItems
androidx.cursoradapter.widget.CursorAdapter -> androidx.cursoradapter.widget.CursorAdapter:
    134:136:void <init>(android.content.Context,android.database.Cursor) -> <init>
    150:152:void <init>(android.content.Context,android.database.Cursor,boolean) -> <init>
    163:165:void <init>(android.content.Context,android.database.Cursor,int) -> <init>
    334:338:void changeCursor(android.database.Cursor) -> changeCursor
    387:387:java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    216:219:int getCount() -> getCount
    208:208:android.database.Cursor getCursor() -> getCursor
    280:291:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    426:429:android.widget.Filter getFilter() -> getFilter
    442:442:android.widget.FilterQueryProvider getFilterQueryProvider() -> getFilterQueryProvider
    228:232:java.lang.Object getItem(int) -> getItem
    241:248:long getItemId(int) -> getItemId
    262:275:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    254:254:boolean hasStableIds() -> hasStableIds
    173:174:void init(android.content.Context,android.database.Cursor,boolean) -> init
    177:200:void init(android.content.Context,android.database.Cursor,int) -> init
    314:314:android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    469:473:void onContentChanged() -> onContentChanged
    417:421:android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    458:459:void setFilterQueryProvider(android.widget.FilterQueryProvider) -> setFilterQueryProvider
    351:373:android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
androidx.cursoradapter.widget.CursorAdapter$ChangeObserver -> androidx.cursoradapter.widget.CursorAdapter$ChangeObserver:
    476:478:void <init>(androidx.cursoradapter.widget.CursorAdapter) -> <init>
    482:482:boolean deliverSelfNotifications() -> deliverSelfNotifications
    487:488:void onChange(boolean) -> onChange
androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver -> androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver:
    492:493:void <init>(androidx.cursoradapter.widget.CursorAdapter) -> <init>
    497:499:void onChanged() -> onChanged
    503:505:void onInvalidated() -> onInvalidated
androidx.cursoradapter.widget.CursorFilter -> androidx.cursoradapter.widget.CursorFilter:
    39:41:void <init>(androidx.cursoradapter.widget.CursorFilter$CursorFilterClient) -> <init>
    45:45:java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    50:60:android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    65:70:void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
androidx.cursoradapter.widget.ResourceCursorAdapter -> androidx.cursoradapter.widget.ResourceCursorAdapter:
    54:57:void <init>(android.content.Context,int,android.database.Cursor) -> <init>
    82:85:void <init>(android.content.Context,int,android.database.Cursor,boolean) -> <init>
    99:102:void <init>(android.content.Context,int,android.database.Cursor,int) -> <init>
    117:117:android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    112:112:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    135:136:void setDropDownViewResource(int) -> setDropDownViewResource
    126:127:void setViewResource(int) -> setViewResource
androidx.cursoradapter.widget.SimpleCursorAdapter -> androidx.cursoradapter.widget.SimpleCursorAdapter:
    53:73:void <init>(android.content.Context,int,android.database.Cursor,java.lang.String[],int[]) -> <init>
    53:99:void <init>(android.content.Context,int,android.database.Cursor,java.lang.String[],int[],int) -> <init>
    126:156:void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    351:358:void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[]) -> changeCursorAndColumns
    299:305:java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    316:328:void findColumns(android.database.Cursor,java.lang.String[]) -> findColumns
    267:267:androidx.cursoradapter.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter() -> getCursorToStringConverter
    233:233:int getStringConversionColumn() -> getStringConversionColumn
    167:167:androidx.cursoradapter.widget.SimpleCursorAdapter$ViewBinder getViewBinder() -> getViewBinder
    283:284:void setCursorToStringConverter(androidx.cursoradapter.widget.SimpleCursorAdapter$CursorToStringConverter) -> setCursorToStringConverter
    251:252:void setStringConversionColumn(int) -> setStringConversionColumn
    180:181:void setViewBinder(androidx.cursoradapter.widget.SimpleCursorAdapter$ViewBinder) -> setViewBinder
    200:204:void setViewImage(android.widget.ImageView,java.lang.String) -> setViewImage
    218:219:void setViewText(android.widget.TextView,java.lang.String) -> setViewText
    335:336:android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
androidx.customview.view.AbsSavedState -> androidx.customview.view.AbsSavedState:
    30:88:void <clinit>() -> <clinit>
    29:29:void <init>(androidx.customview.view.AbsSavedState$1) -> <init>
    37:39:void <init>() -> <init>
    46:51:void <init>(android.os.Parcelable) -> <init>
    59:60:void <init>(android.os.Parcel) -> <init>
    68:71:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    80:80:int describeContents() -> describeContents
    75:75:android.os.Parcelable getSuperState() -> getSuperState
    85:86:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.customview.view.AbsSavedState$1 -> androidx.customview.view.AbsSavedState$1:
    30:30:void <init>() -> <init>
androidx.customview.view.AbsSavedState$2 -> androidx.customview.view.AbsSavedState$2:
    88:88:void <init>() -> <init>
    88:88:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    88:88:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    91:95:androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    100:100:androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel) -> createFromParcel
    88:88:java.lang.Object[] newArray(int) -> newArray
    105:105:androidx.customview.view.AbsSavedState[] newArray(int) -> newArray
androidx.customview.widget.ExploreByTouchHelper -> androidx.customview.widget.ExploreByTouchHelper:
    100:347:void <clinit>() -> <clinit>
    104:153:void <init>(android.view.View) -> <init>
    998:1005:boolean clearAccessibilityFocus(int) -> clearAccessibilityFocus
    1046:1056:boolean clearKeyboardFocusForVirtualView(int) -> clearKeyboardFocusForVirtualView
    481:481:boolean clickKeyboardFocusedVirtualView() -> clickKeyboardFocusedVirtualView
    637:641:android.view.accessibility.AccessibilityEvent createEvent(int,int) -> createEvent
    677:702:android.view.accessibility.AccessibilityEvent createEventForChild(int,int) -> createEventForChild
    653:655:android.view.accessibility.AccessibilityEvent createEventForHost(int) -> createEventForHost
    791:891:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int) -> createNodeForChild
    734:750:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForHost() -> createNodeForHost
    182:199:boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    216:257:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    290:290:int getAccessibilityFocusedVirtualViewId() -> getAccessibilityFocusedVirtualViewId
    157:160:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    427:436:androidx.collection.SparseArrayCompat getAllNodes() -> getAllNodes
    328:330:void getBoundsInParent(int,android.graphics.Rect) -> getBoundsInParent
    589:589:int getFocusedVirtualView() -> getFocusedVirtualView
    298:298:int getKeyboardFocusedVirtualViewId() -> getKeyboardFocusedVirtualViewId
    450:471:android.graphics.Rect guessPreviouslyFocusedRect(android.view.View,int,android.graphics.Rect) -> guessPreviouslyFocusedRect
    526:527:void invalidateRoot() -> invalidateRoot
    542:544:void invalidateVirtualView(int) -> invalidateVirtualView
    566:576:void invalidateVirtualView(int,int) -> invalidateVirtualView
    932:952:boolean isVisibleToUser(android.graphics.Rect) -> isVisibleToUser
    309:317:int keyToDirection(int) -> keyToDirection
    372:423:boolean moveFocus(int,android.graphics.Rect) -> moveFocus
    719:723:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int) -> obtainAccessibilityNodeInfo
    275:282:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    660:664:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    755:759:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    1128:1128:void onPopulateEventForHost(android.view.accessibility.AccessibilityEvent) -> onPopulateEventForHost
    1116:1116:void onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent) -> onPopulateEventForVirtualView
    1206:1206:void onPopulateNodeForHost(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForHost
    601:601:void onVirtualViewKeyboardFocusChanged(int,boolean) -> onVirtualViewKeyboardFocusChanged
    895:899:boolean performAction(int,int,android.os.Bundle) -> performAction
    908:918:boolean performActionForChild(int,int,android.os.Bundle) -> performActionForChild
    904:904:boolean performActionForHost(int,android.os.Bundle) -> performActionForHost
    968:987:boolean requestAccessibilityFocus(int) -> requestAccessibilityFocus
    1016:1035:boolean requestKeyboardFocusForVirtualView(int) -> requestKeyboardFocusForVirtualView
    505:515:boolean sendEventForVirtualView(int,int) -> sendEventForVirtualView
    612:624:void updateHoveredVirtualView(int) -> updateHoveredVirtualView
androidx.customview.widget.ExploreByTouchHelper$1 -> androidx.customview.widget.ExploreByTouchHelper$1:
    336:336:void <init>() -> <init>
    336:336:void obtainBounds(java.lang.Object,android.graphics.Rect) -> obtainBounds
    339:340:void obtainBounds(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,android.graphics.Rect) -> obtainBounds
androidx.customview.widget.ExploreByTouchHelper$2 -> androidx.customview.widget.ExploreByTouchHelper$2:
    349:349:void <init>() -> <init>
    349:349:java.lang.Object get(java.lang.Object,int) -> get
    353:353:androidx.core.view.accessibility.AccessibilityNodeInfoCompat get(androidx.collection.SparseArrayCompat,int) -> get
    349:349:int size(java.lang.Object) -> size
    358:358:int size(androidx.collection.SparseArrayCompat) -> size
androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider -> androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider:
    1238:1239:void <init>(androidx.customview.widget.ExploreByTouchHelper) -> <init>
    1245:1247:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    1257:1262:androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    1252:1252:boolean performAction(int,int,android.os.Bundle) -> performAction
androidx.customview.widget.FocusStrategy -> androidx.customview.widget.FocusStrategy:
    454:455:void <init>() -> <init>
    243:272:boolean beamBeats(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect) -> beamBeats
    326:334:boolean beamsOverlap(int,android.graphics.Rect,android.graphics.Rect) -> beamsOverlap
    145:183:java.lang.Object findNextFocusInAbsoluteDirection(java.lang.Object,androidx.customview.widget.FocusStrategy$CollectionAdapter,androidx.customview.widget.FocusStrategy$BoundsAdapter,java.lang.Object,android.graphics.Rect,int) -> findNextFocusInAbsoluteDirection
    40:55:java.lang.Object findNextFocusInRelativeDirection(java.lang.Object,androidx.customview.widget.FocusStrategy$CollectionAdapter,androidx.customview.widget.FocusStrategy$BoundsAdapter,java.lang.Object,int,boolean,boolean) -> findNextFocusInRelativeDirection
    61:71:java.lang.Object getNextFocusable(java.lang.Object,java.util.ArrayList,boolean) -> getNextFocusable
    76:86:java.lang.Object getPreviousFocusable(java.lang.Object,java.util.ArrayList,boolean) -> getPreviousFocusable
    283:283:int getWeightedDistanceFor(int,int) -> getWeightedDistanceFor
    203:231:boolean isBetterCandidate(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect) -> isBetterCandidate
    297:311:boolean isCandidate(android.graphics.Rect,android.graphics.Rect,int) -> isCandidate
    343:353:boolean isToDirectionOf(int,android.graphics.Rect,android.graphics.Rect) -> isToDirectionOf
    365:365:int majorAxisDistance(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistance
    370:380:int majorAxisDistanceRaw(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistanceRaw
    392:392:int majorAxisDistanceToFarEdge(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistanceToFarEdge
    398:408:int majorAxisDistanceToFarEdgeRaw(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistanceToFarEdgeRaw
    423:435:int minorAxisDistance(int,android.graphics.Rect,android.graphics.Rect) -> minorAxisDistance
androidx.customview.widget.FocusStrategy$SequentialComparator -> androidx.customview.widget.FocusStrategy$SequentialComparator:
    95:104:void <init>(boolean,androidx.customview.widget.FocusStrategy$BoundsAdapter) -> <init>
    108:135:int compare(java.lang.Object,java.lang.Object) -> compare
androidx.customview.widget.ViewDragHelper -> androidx.customview.widget.ViewDragHelper:
    332:332:void <clinit>() -> <clinit>
    119:402:void <init>(android.content.Context,android.view.ViewGroup,androidx.customview.widget.ViewDragHelper$Callback) -> <init>
    525:535:void abort() -> abort
    933:952:boolean canScroll(android.view.View,boolean,int,int,int,int) -> canScroll
    511:518:void cancel() -> cancel
    471:480:void captureChildView(android.view.View,int) -> captureChildView
    1276:1289:boolean checkNewEdgeDrag(float,float,int,int) -> checkNewEdgeDrag
    1303:1316:boolean checkTouchSlop(android.view.View,float,float) -> checkTouchSlop
    1334:1340:boolean checkTouchSlop(int) -> checkTouchSlop
    1359:1376:boolean checkTouchSlop(int,int) -> checkTouchSlop
    670:673:int clampMag(int,int,int) -> clampMag
    687:690:float clampMag(float,float,float) -> clampMag
    790:801:void clearMotionHistory() -> clearMotionHistory
    804:815:void clearMotionHistory(int) -> clearMotionHistory
    638:656:int computeAxisDuration(int,int,int) -> computeAxisDuration
    617:634:int computeSettleDuration(android.view.View,int,int,int,int) -> computeSettleDuration
    735:769:boolean continueSettling(boolean) -> continueSettling
    355:355:androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,androidx.customview.widget.ViewDragHelper$Callback) -> create
    369:371:androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,float,androidx.customview.widget.ViewDragHelper$Callback) -> create
    779:787:void dispatchViewReleased(float,float) -> dispatchViewReleased
    694:696:float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    1424:1443:void dragTo(int,int,int,int) -> dragTo
    818:845:void ensureMotionHistorySizeForId(int) -> ensureMotionHistorySizeForId
    1487:1495:android.view.View findTopChildUnder(int,int) -> findTopChildUnder
    710:721:void flingCapturedView(int,int,int,int) -> flingCapturedView
    597:613:boolean forceSettleCapturedViewAt(int,int,int,int) -> forceSettleCapturedViewAt
    495:495:int getActivePointerId() -> getActivePointerId
    487:487:android.view.View getCapturedView() -> getCapturedView
    459:459:int getEdgeSize() -> getEdgeSize
    1499:1506:int getEdgesTouched(int,int) -> getEdgesTouched
    422:422:float getMinVelocity() -> getMinVelocity
    503:503:int getTouchSlop() -> getTouchSlop
    431:431:int getViewDragState() -> getViewDragState
    1455:1455:boolean isCapturedViewUnder(int,int) -> isCapturedViewUnder
    1389:1395:boolean isEdgeTouched(int) -> isEdgeTouched
    1409:1409:boolean isEdgeTouched(int,int) -> isEdgeTouched
    884:884:boolean isPointerDown(int) -> isPointerDown
    1510:1516:boolean isValidPointerForActionMove(int) -> isValidPointerForActionMove
    1468:1474:boolean isViewUnder(android.view.View,int,int) -> isViewUnder
    1097:1252:void processTouchEvent(android.view.MotionEvent) -> processTouchEvent
    1413:1421:void releaseViewForPointerUp() -> releaseViewForPointerUp
    1255:1273:void reportNewEdgeDrags(float,float,int) -> reportNewEdgeDrags
    848:853:void saveInitialMotion(float,float,int) -> saveInitialMotion
    856:868:void saveLastMotion(android.view.MotionEvent) -> saveLastMotion
    888:896:void setDragState(int) -> setDragState
    447:448:void setEdgeTrackingEnabled(int) -> setEdgeTrackingEnabled
    411:412:void setMinVelocity(float) -> setMinVelocity
    577:584:boolean settleCapturedViewAt(int,int) -> settleCapturedViewAt
    963:1087:boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> shouldInterceptTouchEvent
    552:562:boolean smoothSlideViewTo(android.view.View,int,int) -> smoothSlideViewTo
    908:917:boolean tryCaptureViewForDrag(android.view.View,int) -> tryCaptureViewForDrag
androidx.customview.widget.ViewDragHelper$1 -> androidx.customview.widget.ViewDragHelper$1:
    332:332:void <init>() -> <init>
    335:336:float getInterpolation(float) -> getInterpolation
androidx.customview.widget.ViewDragHelper$2 -> androidx.customview.widget.ViewDragHelper$2:
    340:340:void <init>(androidx.customview.widget.ViewDragHelper) -> <init>
    343:344:void run() -> run
androidx.customview.widget.ViewDragHelper$Callback -> androidx.customview.widget.ViewDragHelper$Callback:
    152:152:void <init>() -> <init>
    310:310:int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    325:325:int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    255:255:int getOrderedChildIndex(int) -> getOrderedChildIndex
    266:266:int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    277:277:int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    246:246:void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    232:232:boolean onEdgeLock(int) -> onEdgeLock
    220:220:void onEdgeTouched(int,int) -> onEdgeTouched
    187:187:void onViewCaptured(android.view.View,int) -> onViewCaptured
    163:163:void onViewDragStateChanged(int) -> onViewDragStateChanged
    176:176:void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    207:207:void onViewReleased(android.view.View,float,float) -> onViewReleased
androidx.documentfile.provider.DocumentFile -> androidx.documentfile.provider.DocumentFile:
    88:90:void <init>(androidx.documentfile.provider.DocumentFile) -> <init>
    338:343:androidx.documentfile.provider.DocumentFile findFile(java.lang.String) -> findFile
    102:102:androidx.documentfile.provider.DocumentFile fromFile(java.io.File) -> fromFile
    117:120:androidx.documentfile.provider.DocumentFile fromSingleUri(android.content.Context,android.net.Uri) -> fromSingleUri
    135:140:androidx.documentfile.provider.DocumentFile fromTreeUri(android.content.Context,android.net.Uri) -> fromTreeUri
    229:229:androidx.documentfile.provider.DocumentFile getParentFile() -> getParentFile
    149:152:boolean isDocumentUri(android.content.Context,android.net.Uri) -> isDocumentUri
androidx.documentfile.provider.DocumentsContractApi19 -> androidx.documentfile.provider.DocumentsContractApi19:
    213:214:void <init>() -> <init>
    94:104:boolean canRead(android.content.Context,android.net.Uri) -> canRead
    109:137:boolean canWrite(android.content.Context,android.net.Uri) -> canWrite
    203:211:void closeQuietly(java.lang.AutoCloseable) -> closeQuietly
    141:152:boolean exists(android.content.Context,android.net.Uri) -> exists
    68:68:long getFlags(android.content.Context,android.net.Uri) -> getFlags
    49:49:java.lang.String getName(android.content.Context,android.net.Uri) -> getName
    54:54:java.lang.String getRawType(android.content.Context,android.net.Uri) -> getRawType
    59:63:java.lang.String getType(android.content.Context,android.net.Uri) -> getType
    72:72:boolean isDirectory(android.content.Context,android.net.Uri) -> isDirectory
    76:80:boolean isFile(android.content.Context,android.net.Uri) -> isFile
    40:44:boolean isVirtual(android.content.Context,android.net.Uri) -> isVirtual
    85:85:long lastModified(android.content.Context,android.net.Uri) -> lastModified
    89:89:long length(android.content.Context,android.net.Uri) -> length
    179:179:int queryForInt(android.content.Context,android.net.Uri,java.lang.String,int) -> queryForInt
    184:198:long queryForLong(android.content.Context,android.net.Uri,java.lang.String,long) -> queryForLong
    159:173:java.lang.String queryForString(android.content.Context,android.net.Uri,java.lang.String,java.lang.String) -> queryForString
androidx.documentfile.provider.RawDocumentFile -> androidx.documentfile.provider.RawDocumentFile:
    33:35:void <init>(androidx.documentfile.provider.DocumentFile,java.io.File) -> <init>
    113:113:boolean canRead() -> canRead
    118:118:boolean canWrite() -> canWrite
    58:62:androidx.documentfile.provider.DocumentFile createDirectory(java.lang.String) -> createDirectory
    41:51:androidx.documentfile.provider.DocumentFile createFile(java.lang.String,java.lang.String) -> createFile
    123:124:boolean delete() -> delete
    169:182:boolean deleteContents(java.io.File) -> deleteContents
    129:129:boolean exists() -> exists
    73:73:java.lang.String getName() -> getName
    79:82:java.lang.String getType() -> getType
    156:165:java.lang.String getTypeForName(java.lang.String) -> getTypeForName
    68:68:android.net.Uri getUri() -> getUri
    88:88:boolean isDirectory() -> isDirectory
    93:93:boolean isFile() -> isFile
    98:98:boolean isVirtual() -> isVirtual
    103:103:long lastModified() -> lastModified
    108:108:long length() -> length
    134:141:androidx.documentfile.provider.DocumentFile[] listFiles() -> listFiles
    146:151:boolean renameTo(java.lang.String) -> renameTo
androidx.documentfile.provider.SingleDocumentFile -> androidx.documentfile.provider.SingleDocumentFile:
    32:35:void <init>(androidx.documentfile.provider.DocumentFile,android.content.Context,android.net.Uri) -> <init>
    91:91:boolean canRead() -> canRead
    96:96:boolean canWrite() -> canWrite
    44:44:androidx.documentfile.provider.DocumentFile createDirectory(java.lang.String) -> createDirectory
    39:39:androidx.documentfile.provider.DocumentFile createFile(java.lang.String,java.lang.String) -> createFile
    102:104:boolean delete() -> delete
    110:110:boolean exists() -> exists
    55:55:java.lang.String getName() -> getName
    61:61:java.lang.String getType() -> getType
    49:49:android.net.Uri getUri() -> getUri
    66:66:boolean isDirectory() -> isDirectory
    71:71:boolean isFile() -> isFile
    76:76:boolean isVirtual() -> isVirtual
    81:81:long lastModified() -> lastModified
    86:86:long length() -> length
    115:115:androidx.documentfile.provider.DocumentFile[] listFiles() -> listFiles
    120:120:boolean renameTo(java.lang.String) -> renameTo
androidx.documentfile.provider.TreeDocumentFile -> androidx.documentfile.provider.TreeDocumentFile:
    37:40:void <init>(androidx.documentfile.provider.DocumentFile,android.content.Context,android.net.Uri) -> <init>
    112:112:boolean canRead() -> canRead
    117:117:boolean canWrite() -> canWrite
    166:174:void closeQuietly(java.lang.AutoCloseable) -> closeQuietly
    63:65:androidx.documentfile.provider.DocumentFile createDirectory(java.lang.String) -> createDirectory
    45:46:androidx.documentfile.provider.DocumentFile createFile(java.lang.String,java.lang.String) -> createFile
    53:56:android.net.Uri createFile(android.content.Context,android.net.Uri,java.lang.String,java.lang.String) -> createFile
    123:125:boolean delete() -> delete
    131:131:boolean exists() -> exists
    76:76:java.lang.String getName() -> getName
    82:82:java.lang.String getType() -> getType
    70:70:android.net.Uri getUri() -> getUri
    87:87:boolean isDirectory() -> isDirectory
    92:92:boolean isFile() -> isFile
    97:97:boolean isVirtual() -> isVirtual
    102:102:long lastModified() -> lastModified
    107:107:long length() -> length
    136:162:androidx.documentfile.provider.DocumentFile[] listFiles() -> listFiles
    179:188:boolean renameTo(java.lang.String) -> renameTo
androidx.drawerlayout.widget.DrawerLayout -> androidx.drawerlayout.widget.DrawerLayout:
    104:192:void <clinit>() -> <clinit>
    306:307:void <init>(android.content.Context) -> <init>
    310:311:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    195:367:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    511:518:void addDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener) -> addDrawerListener
    1911:1942:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    2057:2077:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    1961:1972:void cancelChildViewTouch() -> cancelChildViewTouch
    950:951:boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> checkDrawerViewAbsoluteGravity
    1901:1901:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    1747:1748:void closeDrawer(android.view.View) -> closeDrawer
    1757:1780:void closeDrawer(android.view.View,boolean) -> closeDrawer
    1789:1790:void closeDrawer(int) -> closeDrawer
    1800:1806:void closeDrawer(int,boolean) -> closeDrawer
    1637:1638:void closeDrawers() -> closeDrawers
    1641:1670:void closeDrawers(boolean) -> closeDrawers
    1309:1322:void computeScroll() -> computeScroll
    1536:1564:boolean dispatchGenericMotionEvent(android.view.MotionEvent) -> dispatchGenericMotionEvent
    850:875:void dispatchOnDrawerClosed(android.view.View) -> dispatchOnDrawerClosed
    878:897:void dispatchOnDrawerOpened(android.view.View) -> dispatchOnDrawerOpened
    916:924:void dispatchOnDrawerSlide(android.view.View,float) -> dispatchOnDrawerSlide
    774:786:boolean dispatchTransformedGenericPointerEvent(android.view.MotionEvent,android.view.View) -> dispatchTransformedGenericPointerEvent
    1401:1460:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    985:995:android.view.View findDrawerWithGravity(int) -> findDrawerWithGravity
    955:963:android.view.View findOpenDrawer() -> findOpenDrawer
    1949:1956:android.view.View findVisibleDrawer() -> findVisibleDrawer
    1887:1887:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1892:1892:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1906:1906:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    393:396:float getDrawerElevation() -> getDrawerElevation
    652:697:int getDrawerLockMode(int) -> getDrawerLockMode
    709:713:int getDrawerLockMode(android.view.View) -> getDrawerLockMode
    746:753:java.lang.CharSequence getDrawerTitle(int) -> getDrawerTitle
    945:946:int getDrawerViewAbsoluteGravity(android.view.View) -> getDrawerViewAbsoluteGravity
    937:937:float getDrawerViewOffset(android.view.View) -> getDrawerViewOffset
    1350:1350:android.graphics.drawable.Drawable getStatusBarBackgroundDrawable() -> getStatusBarBackgroundDrawable
    794:806:android.view.MotionEvent getTransformedMotionEvent(android.view.MotionEvent,android.view.View) -> getTransformedMotionEvent
    1005:1011:java.lang.String gravityToString(int) -> gravityToString
    1325:1329:boolean hasOpaqueBackground(android.view.View) -> hasOpaqueBackground
    1875:1882:boolean hasPeekingDrawer() -> hasPeekingDrawer
    1945:1945:boolean hasVisibleDrawer() -> hasVisibleDrawer
    2085:2087:boolean includeChildForAccessibility(android.view.View) -> includeChildForAccessibility
    1464:1464:boolean isContentView(android.view.View) -> isContentView
    1819:1823:boolean isDrawerOpen(android.view.View) -> isDrawerOpen
    1836:1840:boolean isDrawerOpen(int) -> isDrawerOpen
    1468:1479:boolean isDrawerView(android.view.View) -> isDrawerView
    1852:1855:boolean isDrawerVisible(android.view.View) -> isDrawerVisible
    1867:1871:boolean isDrawerVisible(int) -> isDrawerVisible
    761:765:boolean isInBoundsOfChild(float,float,android.view.View) -> isInBoundsOfChild
    1208:1213:boolean mirror(android.graphics.drawable.Drawable,int) -> mirror
    967:976:void moveDrawerToOffset(android.view.View,float) -> moveDrawerToOffset
    1022:1024:void onAttachedToWindow() -> onAttachedToWindow
    1016:1018:void onDetachedFromWindow() -> onDetachedFromWindow
    1383:1397:void onDraw(android.graphics.Canvas) -> onDraw
    1485:1527:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1976:1980:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    1985:1992:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    1218:1298:void onLayout(boolean,int,int,int,int) -> onLayout
    1029:1155:void onMeasure(int,int) -> onMeasure
    1997:2024:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1378:1379:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    2028:2052:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1569:1616:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1678:1679:void openDrawer(android.view.View) -> openDrawer
    1688:1713:void openDrawer(android.view.View,boolean) -> openDrawer
    1722:1723:void openDrawer(int) -> openDrawer
    1733:1739:void openDrawer(int,boolean) -> openDrawer
    528:536:void removeDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener) -> removeDrawerListener
    1625:1631:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    1302:1305:void requestLayout() -> requestLayout
    1166:1181:android.graphics.drawable.Drawable resolveLeftShadow() -> resolveLeftShadow
    1185:1199:android.graphics.drawable.Drawable resolveRightShadow() -> resolveRightShadow
    1158:1163:void resolveShadowDrawables() -> resolveShadowDrawables
    405:409:void setChildInsets(java.lang.Object,boolean) -> setChildInsets
    376:383:void setDrawerElevation(float) -> setDrawerElevation
    493:502:void setDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    552:554:void setDrawerLockMode(int) -> setDrawerLockMode
    576:614:void setDrawerLockMode(int,int) -> setDrawerLockMode
    635:641:void setDrawerLockMode(int,android.view.View) -> setDrawerLockMode
    431:448:void setDrawerShadow(android.graphics.drawable.Drawable,int) -> setDrawerShadow
    465:466:void setDrawerShadow(int,int) -> setDrawerShadow
    727:734:void setDrawerTitle(int,java.lang.CharSequence) -> setDrawerTitle
    927:934:void setDrawerViewOffset(android.view.View,float) -> setDrawerViewOffset
    474:476:void setScrimColor(int) -> setScrimColor
    1339:1341:void setStatusBarBackground(android.graphics.drawable.Drawable) -> setStatusBarBackground
    1360:1362:void setStatusBarBackground(int) -> setStatusBarBackground
    1372:1374:void setStatusBarBackgroundColor(int) -> setStatusBarBackgroundColor
    900:913:void updateChildrenImportantForAccessibility(android.view.View,boolean) -> updateChildrenImportantForAccessibility
    814:847:void updateDrawerState(int,int,android.view.View) -> updateDrawerState
androidx.drawerlayout.widget.DrawerLayout$1 -> androidx.drawerlayout.widget.DrawerLayout$1:
    343:343:void <init>(androidx.drawerlayout.widget.DrawerLayout) -> <init>
    346:348:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate -> androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate:
    2349:2350:void <init>(androidx.drawerlayout.widget.DrawerLayout) -> <init>
    2426:2433:void addChildrenForAccessibility(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup) -> addChildrenForAccessibility
    2442:2464:void copyNodeInfoNoChildren(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
    2399:2413:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    2387:2390:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    2354:2383:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    2419:2422:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate -> androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate:
    2467:2467:void <init>() -> <init>
    2471:2479:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
androidx.drawerlayout.widget.DrawerLayout$LayoutParams -> androidx.drawerlayout.widget.DrawerLayout$LayoutParams:
    2313:2324:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2313:2328:void <init>(int,int) -> <init>
    2331:2333:void <init>(int,int,int) -> <init>
    2313:2338:void <init>(androidx.drawerlayout.widget.DrawerLayout$LayoutParams) -> <init>
    2313:2342:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2313:2346:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
androidx.drawerlayout.widget.DrawerLayout$SavedState -> androidx.drawerlayout.widget.DrawerLayout$SavedState:
    2124:2124:void <clinit>() -> <clinit>
    2095:2108:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2095:2112:void <init>(android.os.Parcelable) -> <init>
    2116:2122:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.drawerlayout.widget.DrawerLayout$SavedState$1 -> androidx.drawerlayout.widget.DrawerLayout$SavedState$1:
    2124:2124:void <init>() -> <init>
    2124:2124:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2124:2124:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2127:2127:androidx.drawerlayout.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2132:2132:androidx.drawerlayout.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2124:2124:java.lang.Object[] newArray(int) -> newArray
    2137:2137:androidx.drawerlayout.widget.DrawerLayout$SavedState[] newArray(int) -> newArray
androidx.drawerlayout.widget.DrawerLayout$SimpleDrawerListener -> androidx.drawerlayout.widget.DrawerLayout$SimpleDrawerListener:
    287:287:void <init>() -> <init>
    298:298:void onDrawerClosed(android.view.View) -> onDrawerClosed
    294:294:void onDrawerOpened(android.view.View) -> onDrawerOpened
    290:290:void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    302:302:void onDrawerStateChanged(int) -> onDrawerStateChanged
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback -> androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback:
    2146:2154:void <init>(androidx.drawerlayout.widget.DrawerLayout,int) -> <init>
    2294:2298:int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    2304:2304:int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    2203:2208:void closeOtherDrawer() -> closeOtherDrawer
    2289:2289:int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    2276:2285:void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    2270:2270:boolean onEdgeLock(int) -> onEdgeLock
    2231:2232:void onEdgeTouched(int,int) -> onEdgeTouched
    2196:2200:void onViewCaptured(android.view.View,int) -> onViewCaptured
    2174:2175:void onViewDragStateChanged(int) -> onViewDragStateChanged
    2180:2192:void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    2214:2227:void onViewReleased(android.view.View,float,float) -> onViewReleased
    2237:2259:void peekDrawer() -> peekDrawer
    2161:2162:void removeCallbacks() -> removeCallbacks
    2157:2158:void setDragger(androidx.customview.widget.ViewDragHelper) -> setDragger
    2168:2169:boolean tryCaptureView(android.view.View,int) -> tryCaptureView
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback$1 -> androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback$1:
    2146:2146:void <init>(androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback) -> <init>
    2148:2149:void run() -> run
androidx.fragment.app.BackStackRecord -> androidx.fragment.app.BackStackRecord:
    209:334:void <init>(androidx.fragment.app.FragmentManagerImpl) -> <init>
    379:380:androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String) -> add
    385:386:androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment) -> add
    391:392:androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment,java.lang.String) -> add
    370:375:void addOp(androidx.fragment.app.BackStackRecord$Op) -> addOp
    513:533:androidx.fragment.app.FragmentTransaction addSharedElement(android.view.View,java.lang.String) -> addSharedElement
    544:550:androidx.fragment.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    478:480:androidx.fragment.app.FragmentTransaction attach(androidx.fragment.app.Fragment) -> attach
    597:611:void bumpBackStackNesting(int) -> bumpBackStackNesting
    637:637:int commit() -> commit
    642:642:int commitAllowingStateLoss() -> commitAllowingStateLoss
    669:684:int commitInternal(boolean) -> commitInternal
    647:649:void commitNow() -> commitNow
    653:655:void commitNowAllowingStateLoss() -> commitNowAllowingStateLoss
    471:473:androidx.fragment.app.FragmentTransaction detach(androidx.fragment.app.Fragment) -> detach
    560:565:androidx.fragment.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    396:430:void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int) -> doAddOp
    251:252:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    255:330:void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    755:804:void executeOps() -> executeOps
    814:862:void executePopOps(boolean) -> executePopOps
    888:953:androidx.fragment.app.Fragment expandOps(java.util.ArrayList,androidx.fragment.app.Fragment) -> expandOps
    698:707:boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> generateOps
    363:366:java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
    348:348:int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    354:357:java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    343:343:int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    338:338:int getId() -> getId
    1017:1017:java.lang.String getName() -> getName
    1021:1021:int getTransition() -> getTransition
    1025:1025:int getTransitionStyle() -> getTransitionStyle
    457:459:androidx.fragment.app.FragmentTransaction hide(androidx.fragment.app.Fragment) -> hide
    711:719:boolean interactsWith(int) -> interactsWith
    723:747:boolean interactsWith(java.util.ArrayList,int,int) -> interactsWith
    555:555:boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    1030:1030:boolean isEmpty() -> isEmpty
    1009:1011:boolean isFragmentPostponed(androidx.fragment.app.BackStackRecord$Op) -> isFragmentPostponed
    990:996:boolean isPostponed() -> isPostponed
    450:452:androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment) -> remove
    434:434:androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment) -> replace
    440:445:androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment,java.lang.String) -> replace
    615:623:androidx.fragment.app.FragmentTransaction runOnCommit(java.lang.Runnable) -> runOnCommit
    627:633:void runOnCommitRunnables() -> runOnCommitRunnables
    665:665:androidx.fragment.app.FragmentTransaction setAllowOptimization(boolean) -> setAllowOptimization
    584:586:androidx.fragment.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    591:593:androidx.fragment.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    570:572:androidx.fragment.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    577:579:androidx.fragment.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    492:492:androidx.fragment.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    498:502:androidx.fragment.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    1000:1006:void setOnStartPostponedListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener) -> setOnStartPostponedListener
    485:487:androidx.fragment.app.FragmentTransaction setPrimaryNavigationFragment(androidx.fragment.app.Fragment) -> setPrimaryNavigationFragment
    659:660:androidx.fragment.app.FragmentTransaction setReorderingAllowed(boolean) -> setReorderingAllowed
    507:508:androidx.fragment.app.FragmentTransaction setTransition(int) -> setTransition
    538:539:androidx.fragment.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    464:466:androidx.fragment.app.FragmentTransaction show(androidx.fragment.app.Fragment) -> show
    235:247:java.lang.String toString() -> toString
    967:986:androidx.fragment.app.Fragment trackAddedFragmentsInPop(java.util.ArrayList,androidx.fragment.app.Fragment) -> trackAddedFragmentsInPop
androidx.fragment.app.BackStackRecord$Op -> androidx.fragment.app.BackStackRecord$Op:
    200:201:void <init>() -> <init>
    203:206:void <init>(int,androidx.fragment.app.Fragment) -> <init>
androidx.fragment.app.BackStackState -> androidx.fragment.app.BackStackState:
    158:158:void <clinit>() -> <clinit>
    48:77:void <init>(androidx.fragment.app.BackStackRecord) -> <init>
    79:92:void <init>(android.os.Parcel) -> <init>
    139:139:int describeContents() -> describeContents
    95:134:androidx.fragment.app.BackStackRecord instantiate(androidx.fragment.app.FragmentManagerImpl) -> instantiate
    144:156:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.BackStackState$1 -> androidx.fragment.app.BackStackState$1:
    159:159:void <init>() -> <init>
    159:159:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    162:162:androidx.fragment.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    159:159:java.lang.Object[] newArray(int) -> newArray
    167:167:androidx.fragment.app.BackStackState[] newArray(int) -> newArray
androidx.fragment.app.DialogFragment -> androidx.fragment.app.DialogFragment:
    90:102:void <init>() -> <init>
    191:192:void dismiss() -> dismiss
    201:202:void dismissAllowingStateLoss() -> dismissAllowingStateLoss
    205:227:void dismissInternal(boolean) -> dismissInternal
    230:230:android.app.Dialog getDialog() -> getDialog
    284:284:boolean getShowsDialog() -> getShowsDialog
    235:235:int getTheme() -> getTheme
    256:256:boolean isCancelable() -> isCancelable
    401:428:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    289:295:void onAttach(android.content.Context) -> onAttach
    386:386:void onCancel(android.content.DialogInterface) -> onCancel
    310:321:void onCreate(android.os.Bundle) -> onCreate
    381:381:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    479:488:void onDestroyView() -> onDestroyView
    299:306:void onDetach() -> onDetach
    390:397:void onDismiss(android.content.DialogInterface) -> onDismiss
    326:338:android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle) -> onGetLayoutInflater
    442:464:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    432:438:void onStart() -> onStart
    468:472:void onStop() -> onStop
    248:250:void setCancelable(boolean) -> setCancelable
    277:278:void setShowsDialog(boolean) -> setShowsDialog
    119:126:void setStyle(int,int) -> setStyle
    345:355:void setupDialog(android.app.Dialog,int) -> setupDialog
    140:145:void show(androidx.fragment.app.FragmentManager,java.lang.String) -> show
    157:162:int show(androidx.fragment.app.FragmentTransaction,java.lang.String) -> show
    177:182:void showNow(androidx.fragment.app.FragmentManager,java.lang.String) -> showNow
androidx.fragment.app.Fragment -> androidx.fragment.app.Fragment:
    87:90:void <clinit>() -> <clinit>
    98:411:void <init>() -> <init>
    2272:2282:void callStartTransitionListener() -> callStartTransitionListener
    2294:2369:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    2747:2750:androidx.fragment.app.Fragment$AnimationInfo ensureAnimationInfo() -> ensureAnimationInfo
    525:525:boolean equals(java.lang.Object) -> equals
    2372:2378:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    710:710:androidx.fragment.app.FragmentActivity getActivity() -> getActivity
    2178:2179:boolean getAllowEnterTransitionOverlap() -> getAllowEnterTransitionOverlap
    2203:2204:boolean getAllowReturnTransitionOverlap() -> getAllowReturnTransitionOverlap
    2805:2808:android.view.View getAnimatingAway() -> getAnimatingAway
    2820:2823:android.animation.Animator getAnimator() -> getAnimator
    592:592:android.os.Bundle getArguments() -> getArguments
    844:856:androidx.fragment.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    683:683:android.content.Context getContext() -> getContext
    1961:1964:java.lang.Object getEnterTransition() -> getEnterTransition
    2791:2794:androidx.core.app.SharedElementCallback getEnterTransitionCallback() -> getEnterTransitionCallback
    2040:2043:java.lang.Object getExitTransition() -> getExitTransition
    2798:2801:androidx.core.app.SharedElementCallback getExitTransitionCallback() -> getExitTransitionCallback
    812:812:androidx.fragment.app.FragmentManager getFragmentManager() -> getFragmentManager
    737:737:java.lang.Object getHost() -> getHost
    561:561:int getId() -> getId
    1292:1295:android.view.LayoutInflater getLayoutInflater() -> getLayoutInflater
    1326:1333:android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    258:258:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    1065:1065:androidx.loader.app.LoaderManager getLoaderManager() -> getLoaderManager
    2754:2757:int getNextAnim() -> getNextAnim
    2768:2771:int getNextTransition() -> getNextTransition
    2784:2787:int getNextTransitionStyle() -> getNextTransitionStyle
    874:874:androidx.fragment.app.Fragment getParentFragment() -> getParentFragment
    2078:2081:java.lang.Object getReenterTransition() -> getReenterTransition
    760:760:android.content.res.Resources getResources() -> getResources
    982:982:boolean getRetainInstance() -> getRetainInstance
    2000:2003:java.lang.Object getReturnTransition() -> getReturnTransition
    2111:2114:java.lang.Object getSharedElementEnterTransition() -> getSharedElementEnterTransition
    2149:2153:java.lang.Object getSharedElementReturnTransition() -> getSharedElementReturnTransition
    2827:2830:int getStateAfterAnimating() -> getStateAfterAnimating
    782:782:java.lang.String getString(int) -> getString
    795:795:java.lang.String getString(int,java.lang.Object[]) -> getString
    569:569:java.lang.String getTag() -> getTag
    666:666:androidx.fragment.app.Fragment getTargetFragment() -> getTargetFragment
    673:673:int getTargetRequestCode() -> getTargetRequestCode
    771:771:java.lang.CharSequence getText(int) -> getText
    1054:1054:boolean getUserVisibleHint() -> getUserVisibleHint
    1577:1577:android.view.View getView() -> getView
    296:300:androidx.lifecycle.LifecycleOwner getViewLifecycleOwner() -> getViewLifecycleOwner
    314:314:androidx.lifecycle.LiveData getViewLifecycleOwnerLiveData() -> getViewLifecycleOwnerLiveData
    327:333:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    945:945:boolean hasOptionsMenu() -> hasOptionsMenu
    532:532:int hashCode() -> hashCode
    1743:1760:void initState() -> initState
    418:418:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    437:465:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    2382:2406:void instantiateChildFragmentManager() -> instantiateChildFragmentManager
    881:881:boolean isAdded() -> isAdded
    890:890:boolean isDetached() -> isDetached
    939:939:boolean isHidden() -> isHidden
    2845:2848:boolean isHideReplaced() -> isHideReplaced
    518:518:boolean isInBackStack() -> isInBackStack
    910:910:boolean isInLayout() -> isInLayout
    951:951:boolean isMenuVisible() -> isMenuVisible
    2838:2841:boolean isPostponed() -> isPostponed
    899:899:boolean isRemoving() -> isRemoving
    918:918:boolean isResumed() -> isResumed
    604:607:boolean isStateSaved() -> isStateSaved
    480:488:boolean isSupportFragmentClass(android.content.Context,java.lang.String) -> isSupportFragmentClass
    927:928:boolean isVisible() -> isVisible
    2514:2517:void noteStateNotSaved() -> noteStateNotSaved
    1595:1596:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    1135:1135:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    1418:1424:void onAttach(android.content.Context) -> onAttach
    1435:1436:void onAttach(android.app.Activity) -> onAttach
    1410:1410:void onAttachFragment(androidx.fragment.app.Fragment) -> onAttachFragment
    1679:1680:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    1911:1911:boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    1496:1502:void onCreate(android.os.Bundle) -> onCreate
    1454:1454:android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    1474:1474:android.animation.Animator onCreateAnimator(int,boolean,int) -> onCreateAnimator
    1865:1866:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    1785:1785:void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    1553:1553:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    1728:1734:void onDestroy() -> onDestroy
    1812:1812:void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    1719:1720:void onDestroyView() -> onDestroyView
    1768:1769:void onDetach() -> onDetach
    1277:1277:android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle) -> onGetLayoutInflater
    961:961:void onHiddenChanged(boolean) -> onHiddenChanged
    1380:1386:void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle) -> onInflate
    1397:1398:void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    1705:1706:void onLowMemory() -> onLowMemory
    1665:1665:void onMultiWindowModeChanged(boolean) -> onMultiWindowModeChanged
    1833:1833:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    1844:1844:void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    1689:1690:void onPause() -> onPause
    1674:1674:void onPictureInPictureModeChanged(boolean) -> onPictureInPictureModeChanged
    1802:1802:void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    1237:1237:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    1632:1633:void onResume() -> onResume
    1655:1655:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    1621:1622:void onStart() -> onStart
    1699:1700:void onStop() -> onStop
    1567:1567:void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    1611:1612:void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    865:865:androidx.fragment.app.FragmentManager peekChildFragmentManager() -> peekChildFragmentManager
    2455:2468:void performActivityCreated(android.os.Bundle) -> performActivityCreated
    2534:2538:void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    2601:2611:boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    2409:2421:void performCreate(android.os.Bundle) -> performCreate
    2557:2567:boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    2425:2452:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    2692:2705:void performDestroy() -> performDestroy
    2670:2689:void performDestroyView() -> performDestroyView
    2708:2727:void performDetach() -> performDetach
    1308:1310:android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle) -> performGetLayoutInflater
    2541:2545:void performLowMemory() -> performLowMemory
    2520:2524:void performMultiWindowModeChanged(boolean) -> performMultiWindowModeChanged
    2585:2597:boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    2615:2623:void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    2636:2650:void performPause() -> performPause
    2527:2531:void performPictureInPictureModeChanged(boolean) -> performPictureInPictureModeChanged
    2571:2581:boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    2492:2511:void performResume() -> performResume
    2626:2633:void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    2471:2489:void performStart() -> performStart
    2653:2667:void performStop() -> performStop
    2238:2239:void postponeEnterTransition() -> postponeEnterTransition
    1879:1880:void registerForContextMenu(android.view.View) -> registerForContextMenu
    1211:1215:void requestPermissions(java.lang.String[],int) -> requestPermissions
    722:726:androidx.fragment.app.FragmentActivity requireActivity() -> requireActivity
    694:698:android.content.Context requireContext() -> requireContext
    830:835:androidx.fragment.app.FragmentManager requireFragmentManager() -> requireFragmentManager
    748:752:java.lang.Object requireHost() -> requireHost
    1517:1529:void restoreChildFragmentState(android.os.Bundle) -> restoreChildFragmentState
    493:506:void restoreViewState(android.os.Bundle) -> restoreViewState
    2166:2167:void setAllowEnterTransitionOverlap(boolean) -> setAllowEnterTransitionOverlap
    2191:2192:void setAllowReturnTransitionOverlap(boolean) -> setAllowReturnTransitionOverlap
    2812:2813:void setAnimatingAway(android.view.View) -> setAnimatingAway
    2816:2817:void setAnimator(android.animation.Animator) -> setAnimator
    580:584:void setArguments(android.os.Bundle) -> setArguments
    1922:1923:void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback) -> setEnterSharedElementCallback
    1947:1948:void setEnterTransition(java.lang.Object) -> setEnterTransition
    1933:1934:void setExitSharedElementCallback(androidx.core.app.SharedElementCallback) -> setExitSharedElementCallback
    2023:2024:void setExitTransition(java.lang.Object) -> setExitTransition
    993:999:void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    2852:2853:void setHideReplaced(boolean) -> setHideReplaced
    509:515:void setIndex(int,androidx.fragment.app.Fragment) -> setIndex
    619:624:void setInitialSavedState(androidx.fragment.app.Fragment$SavedState) -> setInitialSavedState
    1011:1017:void setMenuVisibility(boolean) -> setMenuVisibility
    2761:2765:void setNextAnim(int) -> setNextAnim
    2775:2781:void setNextTransition(int,int) -> setNextTransition
    2730:2744:void setOnStartEnterTransitionListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener) -> setOnStartEnterTransitionListener
    2062:2063:void setReenterTransition(java.lang.Object) -> setReenterTransition
    978:979:void setRetainInstance(boolean) -> setRetainInstance
    1983:1984:void setReturnTransition(java.lang.Object) -> setReturnTransition
    2097:2098:void setSharedElementEnterTransition(java.lang.Object) -> setSharedElementEnterTransition
    2132:2133:void setSharedElementReturnTransition(java.lang.Object) -> setSharedElementReturnTransition
    2834:2835:void setStateAfterAnimating(int) -> setStateAfterAnimating
    643:659:void setTargetFragment(androidx.fragment.app.Fragment,int) -> setTargetFragment
    1036:1047:void setUserVisibleHint(boolean) -> setUserVisibleHint
    1260:1263:boolean shouldShowRequestPermissionRationale(java.lang.String) -> shouldShowRequestPermissionRationale
    1073:1074:void startActivity(android.content.Intent) -> startActivity
    1081:1085:void startActivity(android.content.Intent,android.os.Bundle) -> startActivity
    1092:1093:void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    1100:1104:void startActivityForResult(android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    1113:1118:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
    2252:2264:void startPostponedEnterTransition() -> startPostponedEnterTransition
    537:552:java.lang.String toString() -> toString
    1890:1891:void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
androidx.fragment.app.Fragment$1 -> androidx.fragment.app.Fragment$1:
    2255:2255:void <init>(androidx.fragment.app.Fragment) -> <init>
    2258:2259:void run() -> run
androidx.fragment.app.Fragment$2 -> androidx.fragment.app.Fragment$2:
    2386:2386:void <init>(androidx.fragment.app.Fragment) -> <init>
    2403:2403:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    2390:2393:android.view.View onFindViewById(int) -> onFindViewById
    2398:2398:boolean onHasView() -> onHasView
androidx.fragment.app.Fragment$3 -> androidx.fragment.app.Fragment$3:
    2429:2429:void <init>(androidx.fragment.app.Fragment) -> <init>
    2432:2435:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
androidx.fragment.app.Fragment$AnimationInfo -> androidx.fragment.app.Fragment$AnimationInfo:
    2869:2902:void <init>() -> <init>
androidx.fragment.app.Fragment$InstantiationException -> androidx.fragment.app.Fragment$InstantiationException:
    391:392:void <init>(java.lang.String,java.lang.Exception) -> <init>
androidx.fragment.app.Fragment$SavedState -> androidx.fragment.app.Fragment$SavedState:
    365:365:void <clinit>() -> <clinit>
    344:346:void <init>(android.os.Bundle) -> <init>
    348:353:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    357:357:int describeContents() -> describeContents
    362:363:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.Fragment$SavedState$1 -> androidx.fragment.app.Fragment$SavedState$1:
    366:366:void <init>() -> <init>
    366:366:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    366:366:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    369:369:androidx.fragment.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    374:374:androidx.fragment.app.Fragment$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    366:366:java.lang.Object[] newArray(int) -> newArray
    379:379:androidx.fragment.app.Fragment$SavedState[] newArray(int) -> newArray
androidx.fragment.app.FragmentActivity -> androidx.fragment.app.FragmentActivity:
    68:957:void <init>() -> <init>
    919:934:int allocateRequestIndex(androidx.fragment.app.Fragment) -> allocateRequestIndex
    805:808:void checkForValidRequestCode(int) -> checkForValidRequestCode
    405:405:android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> dispatchFragmentsOnCreateView
    693:707:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    662:664:java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    324:324:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    729:729:androidx.fragment.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    738:738:androidx.loader.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    299:314:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    1051:1053:void markFragmentsCreated() -> markFragmentsCreated
    1056:1072:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State) -> markState
    145:173:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    722:722:void onAttachFragment(androidx.fragment.app.Fragment) -> onAttachFragment
    181:193:void onBackPressed() -> onBackPressed
    284:287:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    333:370:void onCreate(android.os.Bundle) -> onCreate
    377:382:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    387:391:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    396:400:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    413:420:void onDestroy() -> onDestroy
    427:429:void onLowMemory() -> onLowMemory
    436:448:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    261:262:void onMultiWindowModeChanged(boolean) -> onMultiWindowModeChanged
    491:493:void onNewIntent(android.content.Intent) -> onNewIntent
    457:463:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    470:477:void onPause() -> onPause
    276:277:void onPictureInPictureModeChanged(boolean) -> onPictureInPictureModeChanged
    525:529:void onPostResume() -> onPostResume
    559:559:boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> onPrepareOptionsPanel
    546:551:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    845:863:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    514:518:void onResume() -> onResume
    538:539:void onResumeFragments() -> onResumeFragments
    653:653:java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    569:581:java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    589:607:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    614:629:void onStart() -> onStart
    500:501:void onStateNotSaved() -> onStateNotSaved
    636:642:void onStop() -> onStop
    942:955:void requestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int) -> requestPermissionsFromFragment
    217:218:void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback) -> setEnterSharedElementCallback
    230:231:void setExitSharedElementCallback(androidx.core.app.SharedElementCallback) -> setExitSharedElementCallback
    749:755:void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    762:768:void startActivityForResult(android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    870:871:void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    878:891:void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle) -> startActivityFromFragment
    776:783:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int) -> startIntentSenderForResult
    791:798:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
    899:914:void startIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderFromFragment
    205:206:void supportFinishAfterTransition() -> supportFinishAfterTransition
    678:679:void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    238:239:void supportPostponeEnterTransition() -> supportPostponeEnterTransition
    246:247:void supportStartPostponedEnterTransition() -> supportStartPostponedEnterTransition
    819:823:void validateRequestPermissionsRequestCode(int) -> validateRequestPermissionsRequestCode
androidx.fragment.app.FragmentActivity$1 -> androidx.fragment.app.FragmentActivity$1:
    82:82:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    85:93:void handleMessage(android.os.Message) -> handleMessage
androidx.fragment.app.FragmentActivity$HostCallbacks -> androidx.fragment.app.FragmentActivity$HostCallbacks:
    958:960:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    1032:1033:void onAttachFragment(androidx.fragment.app.Fragment) -> onAttachFragment
    964:965:void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> onDump
    1038:1038:android.view.View onFindViewById(int) -> onFindViewById
    957:957:java.lang.Object onGetHost() -> onGetHost
    979:979:androidx.fragment.app.FragmentActivity onGetHost() -> onGetHost
    974:974:android.view.LayoutInflater onGetLayoutInflater() -> onGetLayoutInflater
    1026:1027:int onGetWindowAnimations() -> onGetWindowAnimations
    1043:1044:boolean onHasView() -> onHasView
    1021:1021:boolean onHasWindowAnimations() -> onHasWindowAnimations
    1009:1011:void onRequestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int) -> onRequestPermissionsFromFragment
    969:969:boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment) -> onShouldSaveFragmentState
    1015:1015:boolean onShouldShowRequestPermissionRationale(java.lang.String) -> onShouldShowRequestPermissionRationale
    989:990:void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int) -> onStartActivityFromFragment
    995:996:void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle) -> onStartActivityFromFragment
    1002:1004:void onStartIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> onStartIntentSenderFromFragment
    984:985:void onSupportInvalidateOptionsMenu() -> onSupportInvalidateOptionsMenu
androidx.fragment.app.FragmentActivity$NonConfigurationInstances -> androidx.fragment.app.FragmentActivity$NonConfigurationInstances:
    130:130:void <init>() -> <init>
androidx.fragment.app.FragmentContainer -> androidx.fragment.app.FragmentContainer:
    30:30:void <init>() -> <init>
    50:50:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
androidx.fragment.app.FragmentController -> androidx.fragment.app.FragmentController:
    52:54:void <init>(androidx.fragment.app.FragmentHostCallback) -> <init>
    104:106:void attachHost(androidx.fragment.app.Fragment) -> attachHost
    49:49:androidx.fragment.app.FragmentController createController(androidx.fragment.app.FragmentHostCallback) -> createController
    201:202:void dispatchActivityCreated() -> dispatchActivityCreated
    307:308:void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    369:369:boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    190:191:void dispatchCreate() -> dispatchCreate
    331:331:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    274:275:void dispatchDestroy() -> dispatchDestroy
    263:264:void dispatchDestroyView() -> dispatchDestroyView
    319:320:void dispatchLowMemory() -> dispatchLowMemory
    285:286:void dispatchMultiWindowModeChanged(boolean) -> dispatchMultiWindowModeChanged
    356:356:boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    380:381:void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    234:235:void dispatchPause() -> dispatchPause
    296:297:void dispatchPictureInPictureModeChanged(boolean) -> dispatchPictureInPictureModeChanged
    343:343:boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    253:253:void dispatchReallyStop() -> dispatchReallyStop
    223:224:void dispatchResume() -> dispatchResume
    212:213:void dispatchStart() -> dispatchStart
    245:246:void dispatchStop() -> dispatchStop
    432:432:void doLoaderDestroy() -> doLoaderDestroy
    423:423:void doLoaderRetain() -> doLoaderRetain
    401:401:void doLoaderStart() -> doLoaderStart
    414:414:void doLoaderStop(boolean) -> doLoaderStop
    473:473:void dumpLoaders(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dumpLoaders
    391:391:boolean execPendingActions() -> execPendingActions
    82:82:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    96:96:java.util.List getActiveFragments(java.util.List) -> getActiveFragments
    89:89:int getActiveFragmentsCount() -> getActiveFragmentsCount
    60:60:androidx.fragment.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    73:73:androidx.loader.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    127:128:void noteStateNotSaved() -> noteStateNotSaved
    120:120:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    441:441:void reportLoaderStart() -> reportLoaderStart
    147:149:void restoreAllState(android.os.Parcelable,java.util.List) -> restoreAllState
    158:159:void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig) -> restoreAllState
    464:464:void restoreLoaderNonConfig(androidx.collection.SimpleArrayMap) -> restoreLoaderNonConfig
    451:451:androidx.collection.SimpleArrayMap retainLoaderNonConfig() -> retainLoaderNonConfig
    179:179:androidx.fragment.app.FragmentManagerNonConfig retainNestedNonConfig() -> retainNestedNonConfig
    170:171:java.util.List retainNonConfig() -> retainNonConfig
    134:134:android.os.Parcelable saveAllState() -> saveAllState
androidx.fragment.app.FragmentHostCallback -> androidx.fragment.app.FragmentHostCallback:
    52:54:void <init>(android.content.Context,android.os.Handler,int) -> <init>
    57:58:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    48:66:void <init>(android.app.Activity,android.content.Context,android.os.Handler,int) -> <init>
    190:190:android.app.Activity getActivity() -> getActivity
    195:195:android.content.Context getContext() -> getContext
    204:204:androidx.fragment.app.FragmentManagerImpl getFragmentManagerImpl() -> getFragmentManagerImpl
    200:200:android.os.Handler getHandler() -> getHandler
    208:208:void onAttachFragment(androidx.fragment.app.Fragment) -> onAttachFragment
    78:78:void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> onDump
    180:180:android.view.View onFindViewById(int) -> onFindViewById
    93:93:android.view.LayoutInflater onGetLayoutInflater() -> onGetLayoutInflater
    174:174:int onGetWindowAnimations() -> onGetWindowAnimations
    185:185:boolean onHasView() -> onHasView
    167:167:boolean onHasWindowAnimations() -> onHasWindowAnimations
    153:153:void onRequestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int) -> onRequestPermissionsFromFragment
    84:84:boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment) -> onShouldSaveFragmentState
    160:160:boolean onShouldShowRequestPermissionRationale(java.lang.String) -> onShouldShowRequestPermissionRationale
    116:117:void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int) -> onStartActivityFromFragment
    125:130:void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle) -> onStartActivityFromFragment
    139:145:void onStartIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> onStartIntentSenderFromFragment
    109:109:void onSupportInvalidateOptionsMenu() -> onSupportInvalidateOptionsMenu
androidx.fragment.app.FragmentManager -> androidx.fragment.app.FragmentManager:
    88:466:void <init>() -> <init>
    446:447:void enableDebugLogging(boolean) -> enableDebugLogging
    178:178:androidx.fragment.app.FragmentTransaction openTransaction() -> openTransaction
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks -> androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks:
    466:466:void <init>() -> <init>
    524:524:void onFragmentActivityCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle) -> onFragmentActivityCreated
    488:488:void onFragmentAttached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.content.Context) -> onFragmentAttached
    512:512:void onFragmentCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle) -> onFragmentCreated
    601:601:void onFragmentDestroyed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onFragmentDestroyed
    610:610:void onFragmentDetached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onFragmentDetached
    563:563:void onFragmentPaused(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onFragmentPaused
    477:477:void onFragmentPreAttached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.content.Context) -> onFragmentPreAttached
    500:500:void onFragmentPreCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle) -> onFragmentPreCreated
    554:554:void onFragmentResumed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onFragmentResumed
    583:583:void onFragmentSaveInstanceState(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle) -> onFragmentSaveInstanceState
    545:545:void onFragmentStarted(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onFragmentStarted
    572:572:void onFragmentStopped(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onFragmentStopped
    536:536:void onFragmentViewCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.view.View,android.os.Bundle) -> onFragmentViewCreated
    592:592:void onFragmentViewDestroyed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onFragmentViewDestroyed
androidx.fragment.app.FragmentManagerImpl -> androidx.fragment.app.FragmentManagerImpl:
    664:1132:void <clinit>() -> <clinit>
    663:4063:void <init>() -> <init>
    2637:2653:void addAddedFragments(androidx.collection.ArraySet) -> addAddedFragments
    2739:2743:void addBackStackState(androidx.fragment.app.BackStackRecord) -> addBackStackState
    1912:1933:void addFragment(androidx.fragment.app.Fragment,boolean) -> addFragment
    907:911:void addOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    2144:2160:int allocBackStackIndex(androidx.fragment.app.BackStackRecord) -> allocBackStackIndex
    1630:1681:void animateRemoveFragment(androidx.fragment.app.Fragment,androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator,int) -> animateRemoveFragment
    3201:3205:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment) -> attachController
    2001:2018:void attachFragment(androidx.fragment.app.Fragment) -> attachFragment
    809:809:androidx.fragment.app.FragmentTransaction beginTransaction() -> beginTransaction
    3190:3197:void burpActive() -> burpActive
    2079:2087:void checkStateLoss() -> checkStateLoss
    2258:2261:void cleanupExec() -> cleanupExec
    2531:2567:void completeExecute(androidx.fragment.app.BackStackRecord,boolean,boolean,boolean) -> completeExecute
    1714:1764:void completeShowHideFragment(androidx.fragment.app.Fragment) -> completeShowHideFragment
    1983:1998:void detachFragment(androidx.fragment.app.Fragment) -> detachFragment
    3227:3230:void dispatchActivityCreated() -> dispatchActivityCreated
    3295:3301:void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    3377:3388:boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    3221:3224:void dispatchCreate() -> dispatchCreate
    3313:3342:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    3258:3264:void dispatchDestroy() -> dispatchDestroy
    3254:3255:void dispatchDestroyView() -> dispatchDestroyView
    3304:3310:void dispatchLowMemory() -> dispatchLowMemory
    3277:3283:void dispatchMultiWindowModeChanged(boolean) -> dispatchMultiWindowModeChanged
    3503:3515:void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentActivityCreated
    3455:3467:void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,android.content.Context,boolean) -> dispatchOnFragmentAttached
    3487:3499:void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentCreated
    3625:3637:void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentDestroyed
    3640:3652:void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentDetached
    3564:3576:void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentPaused
    3439:3451:void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,android.content.Context,boolean) -> dispatchOnFragmentPreAttached
    3471:3483:void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentPreCreated
    3549:3561:void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentResumed
    3595:3607:void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentSaveInstanceState
    3534:3546:void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentStarted
    3579:3591:void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentStopped
    3519:3531:void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean) -> dispatchOnFragmentViewCreated
    3610:3622:void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentViewDestroyed
    3362:3373:boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    3392:3401:void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    3245:3246:void dispatchPause() -> dispatchPause
    3286:3292:void dispatchPictureInPictureModeChanged(boolean) -> dispatchPictureInPictureModeChanged
    3346:3358:boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    3239:3242:void dispatchResume() -> dispatchResume
    3233:3236:void dispatchStart() -> dispatchStart
    3268:3274:void dispatchStateChange(int) -> dispatchStateChange
    3249:3251:void dispatchStop() -> dispatchStop
    2724:2728:void doPendingDeferredStart() -> doPendingDeferredStart
    1020:1127:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    2671:2693:void endAnimatingAwayFragments() -> endAnimatingAwayFragments
    2105:2122:void enqueueAction(androidx.fragment.app.FragmentManagerImpl$OpGenerator,boolean) -> enqueueAction
    2206:2232:void ensureExecReady(boolean) -> ensureExecReady
    1688:1701:void ensureInflatedFragmentView(androidx.fragment.app.Fragment) -> ensureInflatedFragmentView
    2267:2283:boolean execPendingActions() -> execPendingActions
    2235:2251:void execSingleAction(androidx.fragment.app.FragmentManagerImpl$OpGenerator,boolean) -> execSingleAction
    2614:2628:void executeOps(java.util.ArrayList,java.util.ArrayList,int,int) -> executeOps
    2386:2441:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int) -> executeOpsTogether
    814:816:boolean executePendingTransactions() -> executePendingTransactions
    2292:2318:void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList) -> executePostponedTransaction
    2024:2039:androidx.fragment.app.Fragment findFragmentById(int) -> findFragmentById
    2045:2063:androidx.fragment.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    2067:2075:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    2586:2601:androidx.fragment.app.Fragment findFragmentUnder(androidx.fragment.app.Fragment) -> findFragmentUnder
    2659:2664:void forcePostponedTransactions() -> forcePostponedTransactions
    2189:2197:void freeBackStackIndex(int) -> freeBackStackIndex
    2707:2720:boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList) -> generateOpsForPendingActions
    978:981:int getActiveFragmentCount() -> getActiveFragmentCount
    961:969:java.util.List getActiveFragments() -> getActiveFragments
    1298:1310:android.view.animation.Animation$AnimationListener getAnimationListener(android.view.animation.Animation) -> getAnimationListener
    902:902:androidx.fragment.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    897:897:int getBackStackEntryCount() -> getBackStackEntryCount
    932:941:androidx.fragment.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    946:951:java.util.List getFragments() -> getFragments
    3796:3796:android.view.LayoutInflater$Factory2 getLayoutInflaterFactory() -> getLayoutInflaterFactory
    3416:3416:androidx.fragment.app.Fragment getPrimaryNavigationFragment() -> getPrimaryNavigationFragment
    1957:1964:void hideFragment(androidx.fragment.app.Fragment) -> hideFragment
    1000:1000:boolean isDestroyed() -> isDestroyed
    1314:1314:boolean isStateAtLeast(int) -> isStateAtLeast
    2094:2094:boolean isStateSaved() -> isStateSaved
    1160:1253:androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator loadAnimation(androidx.fragment.app.Fragment,int,boolean,int) -> loadAnimation
    1886:1896:void makeActive(androidx.fragment.app.Fragment) -> makeActive
    1152:1155:androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator makeFadeAnimation(android.content.Context,float,float) -> makeFadeAnimation
    1899:1909:void makeInactive(androidx.fragment.app.Fragment) -> makeInactive
    1138:1148:androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> makeOpenCloseAnimation
    2451:2460:void makeRemovedFragmentsInvisible(androidx.collection.ArraySet) -> makeRemovedFragmentsInvisible
    738:749:boolean modifiesAlpha(androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator) -> modifiesAlpha
    754:773:boolean modifiesAlpha(android.animation.Animator) -> modifiesAlpha
    1773:1824:void moveFragmentToExpectedState(androidx.fragment.app.Fragment) -> moveFragmentToExpectedState
    1321:1618:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean) -> moveToState
    1684:1685:void moveToState(androidx.fragment.app.Fragment) -> moveToState
    1836:1872:void moveToState(int,boolean) -> moveToState
    3208:3218:void noteStateNotSaved() -> noteStateNotSaved
    3696:3787:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    3792:3792:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    1257:1266:void performPendingDeferredStart(androidx.fragment.app.Fragment) -> performPendingDeferredStart
    821:822:void popBackStack() -> popBackStack
    832:833:void popBackStack(java.lang.String,int) -> popBackStack
    843:847:void popBackStack(int,int) -> popBackStack
    826:827:boolean popBackStackImmediate() -> popBackStackImmediate
    837:838:boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    851:856:boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    867:892:boolean popBackStackImmediate(java.lang.String,int,int) -> popBackStackImmediate
    2748:2799:boolean popBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String,int,int) -> popBackStackState
    2477:2510:int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int,androidx.collection.ArraySet) -> postponePostponableTransactions
    922:927:void putFragment(android.os.Bundle,java.lang.String,androidx.fragment.app.Fragment) -> putFragment
    3422:3423:void registerFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean) -> registerFragmentLifecycleCallbacks
    1936:1948:void removeFragment(androidx.fragment.app.Fragment) -> removeFragment
    915:918:void removeOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    2336:2374:void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList) -> removeRedundantOperationsAndExecute
    2731:2736:void reportBackStackChanged() -> reportBackStackChanged
    3054:3182:void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig) -> restoreAllState
    2803:2804:androidx.fragment.app.FragmentManagerNonConfig retainNonConfig() -> retainNonConfig
    3655:3667:int reverseTransit(int) -> reverseTransit
    2941:3048:android.os.Parcelable saveAllState() -> saveAllState
    2905:2935:android.os.Bundle saveFragmentBasicState(androidx.fragment.app.Fragment) -> saveFragmentBasicState
    987:995:androidx.fragment.app.Fragment$SavedState saveFragmentInstanceState(androidx.fragment.app.Fragment) -> saveFragmentInstanceState
    2889:2902:void saveFragmentViewState(androidx.fragment.app.Fragment) -> saveFragmentViewState
    2832:2886:void saveNonConfig() -> saveNonConfig
    2132:2141:void scheduleCommit() -> scheduleCommit
    2164:2186:void setBackStackIndex(int,androidx.fragment.app.BackStackRecord) -> setBackStackIndex
    1276:1292:void setHWLayerAnimListenerIfAlpha(android.view.View,androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator) -> setHWLayerAnimListenerIfAlpha
    3405:3411:void setPrimaryNavigationFragment(androidx.fragment.app.Fragment) -> setPrimaryNavigationFragment
    2814:2829:void setRetaining(androidx.fragment.app.FragmentManagerNonConfig) -> setRetaining
    777:783:boolean shouldRunOnHWLayer(android.view.View,androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator) -> shouldRunOnHWLayer
    1973:1980:void showFragment(androidx.fragment.app.Fragment) -> showFragment
    1875:1883:void startPendingDeferredFragments() -> startPendingDeferredFragments
    787:804:void throwException(java.lang.RuntimeException) -> throwException
    1005:1015:java.lang.String toString() -> toString
    3679:3691:int transitToStyleIndex(int,boolean) -> transitToStyleIndex
    3427:3435:void unregisterFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks) -> unregisterFragmentLifecycleCallbacks
androidx.fragment.app.FragmentManagerImpl$1 -> androidx.fragment.app.FragmentManagerImpl$1:
    730:730:void <init>(androidx.fragment.app.FragmentManagerImpl) -> <init>
    733:734:void run() -> run
androidx.fragment.app.FragmentManagerImpl$2 -> androidx.fragment.app.FragmentManagerImpl$2:
    1639:1639:void <init>(androidx.fragment.app.FragmentManagerImpl,android.view.animation.Animation$AnimationListener,android.view.ViewGroup,androidx.fragment.app.Fragment) -> <init>
    1642:1657:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
androidx.fragment.app.FragmentManagerImpl$2$1 -> androidx.fragment.app.FragmentManagerImpl$2$1:
    1647:1647:void <init>(androidx.fragment.app.FragmentManagerImpl$2) -> <init>
    1650:1655:void run() -> run
androidx.fragment.app.FragmentManagerImpl$3 -> androidx.fragment.app.FragmentManagerImpl$3:
    1664:1664:void <init>(androidx.fragment.app.FragmentManagerImpl,android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment) -> <init>
    1667:1675:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.fragment.app.FragmentManagerImpl$4 -> androidx.fragment.app.FragmentManagerImpl$4:
    1728:1728:void <init>(androidx.fragment.app.FragmentManagerImpl,android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment) -> <init>
    1731:1736:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.fragment.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener -> androidx.fragment.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener:
    4004:4006:void <init>(android.view.View,android.view.animation.Animation$AnimationListener) -> <init>
    4021:4032:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
androidx.fragment.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener$1 -> androidx.fragment.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener$1:
    4022:4022:void <init>(androidx.fragment.app.FragmentManagerImpl$AnimateOnHWLayerIfNeededListener) -> <init>
    4025:4026:void run() -> run
androidx.fragment.app.FragmentManagerImpl$AnimationListenerWrapper -> androidx.fragment.app.FragmentManagerImpl$AnimationListenerWrapper:
    3968:3970:void <init>(android.view.animation.Animation$AnimationListener) -> <init>
    3983:3986:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    3991:3994:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    3975:3978:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator -> androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator:
    3945:3951:void <init>(android.view.animation.Animation) -> <init>
    3953:3959:void <init>(android.animation.Animator) -> <init>
androidx.fragment.app.FragmentManagerImpl$AnimatorOnHWLayerIfNeededListener -> androidx.fragment.app.FragmentManagerImpl$AnimatorOnHWLayerIfNeededListener:
    4041:4043:void <init>(android.view.View) -> <init>
    4052:4054:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    4047:4048:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimator -> androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimator:
    4068:4079:void <init>(android.view.animation.Animation,android.view.ViewGroup,android.view.View) -> <init>
    4083:4092:boolean getTransformation(long,android.view.animation.Transformation) -> getTransformation
    4098:4107:boolean getTransformation(long,android.view.animation.Transformation,float) -> getTransformation
    4112:4120:void run() -> run
androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder -> androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder:
    676:679:void <init>(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean) -> <init>
androidx.fragment.app.FragmentManagerImpl$FragmentTag -> androidx.fragment.app.FragmentManagerImpl$FragmentTag:
    3800:3800:void <clinit>() -> <clinit>
    3807:3808:void <init>() -> <init>
androidx.fragment.app.FragmentManagerImpl$PopBackStackState -> androidx.fragment.app.FragmentManagerImpl$PopBackStackState:
    3839:3843:void <init>(androidx.fragment.app.FragmentManagerImpl,java.lang.String,int,int) -> <init>
    3848:3858:boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> generateOps
androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener -> androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener:
    3873:3876:void <init>(androidx.fragment.app.BackStackRecord,boolean) -> <init>
    3934:3935:void cancelTransaction() -> cancelTransaction
    3916:3927:void completeTransaction() -> completeTransaction
    3906:3906:boolean isReady() -> isReady
    3885:3890:void onStartEnterTransition() -> onStartEnterTransition
    3899:3900:void startListening() -> startListening
androidx.fragment.app.FragmentManagerNonConfig -> androidx.fragment.app.FragmentManagerNonConfig:
    42:46:void <init>(java.util.List,java.util.List,java.util.List) -> <init>
    59:59:java.util.List getChildNonConfigs() -> getChildNonConfigs
    52:52:java.util.List getFragments() -> getFragments
    66:66:java.util.List getViewModelStores() -> getViewModelStores
androidx.fragment.app.FragmentManagerState -> androidx.fragment.app.FragmentManagerState:
    646:646:void <clinit>() -> <clinit>
    618:622:void <init>() -> <init>
    618:630:void <init>(android.os.Parcel) -> <init>
    634:634:int describeContents() -> describeContents
    639:644:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentManagerState$1 -> androidx.fragment.app.FragmentManagerState$1:
    647:647:void <init>() -> <init>
    647:647:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    650:650:androidx.fragment.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    647:647:java.lang.Object[] newArray(int) -> newArray
    655:655:androidx.fragment.app.FragmentManagerState[] newArray(int) -> newArray
androidx.fragment.app.FragmentPagerAdapter -> androidx.fragment.app.FragmentPagerAdapter:
    68:73:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    120:126:void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    145:149:void finishUpdate(android.view.ViewGroup) -> finishUpdate
    175:175:long getItemId(int) -> getItemId
    92:115:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    153:153:boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    179:179:java.lang.String makeFragmentName(int,long) -> makeFragmentName
    163:163:void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    158:158:android.os.Parcelable saveState() -> saveState
    131:141:void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    82:86:void startUpdate(android.view.ViewGroup) -> startUpdate
androidx.fragment.app.FragmentState -> androidx.fragment.app.FragmentState:
    129:129:void <clinit>() -> <clinit>
    43:54:void <init>(androidx.fragment.app.Fragment) -> <init>
    56:68:void <init>(android.os.Parcel) -> <init>
    111:111:int describeContents() -> describeContents
    73:106:androidx.fragment.app.Fragment instantiate(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment,androidx.fragment.app.FragmentManagerNonConfig,androidx.lifecycle.ViewModelStore) -> instantiate
    116:127:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentState$1 -> androidx.fragment.app.FragmentState$1:
    130:130:void <init>() -> <init>
    130:130:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    133:133:androidx.fragment.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    130:130:java.lang.Object[] newArray(int) -> newArray
    138:138:androidx.fragment.app.FragmentState[] newArray(int) -> newArray
androidx.fragment.app.FragmentStatePagerAdapter -> androidx.fragment.app.FragmentStatePagerAdapter:
    71:79:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    133:148:void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    167:171:void finishUpdate(android.view.ViewGroup) -> finishUpdate
    101:128:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    175:175:boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    202:230:void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    180:197:android.os.Parcelable saveState() -> saveState
    153:163:void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    88:92:void startUpdate(android.view.ViewGroup) -> startUpdate
androidx.fragment.app.FragmentTabHost -> androidx.fragment.app.FragmentTabHost:
    55:138:void <init>(android.content.Context) -> <init>
    55:143:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    234:253:void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> addTab
    335:360:androidx.fragment.app.FragmentTransaction doTabChanged(java.lang.String,androidx.fragment.app.FragmentTransaction) -> doTabChanged
    218:225:void ensureContent() -> ensureContent
    157:180:void ensureHierarchy(android.content.Context) -> ensureHierarchy
    365:371:androidx.fragment.app.FragmentTabHost$TabInfo getTabInfoForTag(java.lang.String) -> getTabInfoForTag
    146:152:void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> initFragmentTabHost
    257:292:void onAttachedToWindow() -> onAttachedToWindow
    296:298:void onDetachedFromWindow() -> onDetachedFromWindow
    310:317:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    302:305:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    321:330:void onTabChanged(java.lang.String) -> onTabChanged
    229:230:void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    189:189:void setup() -> setup
    194:199:void setup(android.content.Context,androidx.fragment.app.FragmentManager) -> setup
    202:215:void setup(android.content.Context,androidx.fragment.app.FragmentManager,int) -> setup
androidx.fragment.app.FragmentTabHost$DummyTabFactory -> androidx.fragment.app.FragmentTabHost$DummyTabFactory:
    81:83:void <init>(android.content.Context) -> <init>
    87:90:android.view.View createTabContent(java.lang.String) -> createTabContent
androidx.fragment.app.FragmentTabHost$SavedState -> androidx.fragment.app.FragmentTabHost$SavedState:
    119:119:void <clinit>() -> <clinit>
    98:99:void <init>(android.os.Parcelable) -> <init>
    102:104:void <init>(android.os.Parcel) -> <init>
    114:115:java.lang.String toString() -> toString
    108:110:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentTabHost$SavedState$1 -> androidx.fragment.app.FragmentTabHost$SavedState$1:
    120:120:void <init>() -> <init>
    120:120:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    123:123:androidx.fragment.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    120:120:java.lang.Object[] newArray(int) -> newArray
    128:128:androidx.fragment.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
androidx.fragment.app.FragmentTabHost$TabInfo -> androidx.fragment.app.FragmentTabHost$TabInfo:
    71:75:void <init>(java.lang.String,java.lang.Class,android.os.Bundle) -> <init>
androidx.fragment.app.FragmentTransaction -> androidx.fragment.app.FragmentTransaction:
    44:201:void <init>() -> <init>
androidx.fragment.app.FragmentTransition -> androidx.fragment.app.FragmentTransition:
    44:61:void <clinit>() -> <clinit>
    1263:1264:void <init>() -> <init>
    646:652:void addSharedElementsWithMatchingNames(java.util.ArrayList,androidx.collection.ArrayMap,java.util.Collection) -> addSharedElementsWithMatchingNames
    1123:1210:void addToFirstInLastOut(androidx.fragment.app.BackStackRecord,androidx.fragment.app.BackStackRecord$Op,android.util.SparseArray,boolean,boolean) -> addToFirstInLastOut
    1075:1080:void calculateFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean) -> calculateFragments
    161:191:androidx.collection.ArrayMap calculateNameOverrides(int,java.util.ArrayList,java.util.ArrayList,int,int) -> calculateNameOverrides
    1092:1100:void calculatePopFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean) -> calculatePopFragments
    978:995:void callSharedElementStartEnd(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,boolean) -> callSharedElementStartEnd
    469:474:boolean canHandleAll(androidx.fragment.app.FragmentTransitionImpl,java.util.List) -> canHandleAll
    838:882:androidx.collection.ArrayMap captureInSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition) -> captureInSharedElements
    782:817:androidx.collection.ArrayMap captureOutSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition) -> captureOutSharedElements
    423:465:androidx.fragment.app.FragmentTransitionImpl chooseImpl(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment) -> chooseImpl
    1001:1016:java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View) -> configureEnteringExitingViews
    689:762:java.lang.Object configureSharedElementsOrdered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object) -> configureSharedElementsOrdered
    560:632:java.lang.Object configureSharedElementsReordered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object) -> configureSharedElementsReordered
    310:367:void configureTransitionsOrdered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap) -> configureTransitionsOrdered
    212:267:void configureTransitionsReordered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap) -> configureTransitionsReordered
    1220:1224:androidx.fragment.app.FragmentTransition$FragmentContainerTransition ensureContainer(androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.util.SparseArray,int) -> ensureContainer
    889:895:java.lang.String findKeyForValue(androidx.collection.ArrayMap,java.lang.String) -> findKeyForValue
    505:510:java.lang.Object getEnterTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean) -> getEnterTransition
    518:523:java.lang.Object getExitTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean) -> getExitTransition
    911:920:android.view.View getInEpicenterView(androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.lang.Object,boolean) -> getInEpicenterView
    491:497:java.lang.Object getSharedElementTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean) -> getSharedElementTransition
    1040:1061:java.lang.Object mergeTransitions(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,java.lang.Object,androidx.fragment.app.Fragment,boolean) -> mergeTransitions
    277:290:void replaceHide(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList) -> replaceHide
    66:72:androidx.fragment.app.FragmentTransitionImpl resolveSupportImpl() -> resolveSupportImpl
    956:962:void retainValues(androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> retainValues
    392:415:void scheduleTargetChange(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,androidx.fragment.app.Fragment,android.view.View,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleTargetChange
    935:947:void setOutEpicenter(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,androidx.collection.ArrayMap,boolean,androidx.fragment.app.BackStackRecord) -> setOutEpicenter
    1024:1031:void setViewVisibility(java.util.ArrayList,int) -> setViewVisibility
    105:141:void startTransitions(androidx.fragment.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean) -> startTransitions
    1103:1103:boolean supportsTransition() -> supportsTransition
androidx.fragment.app.FragmentTransition$1 -> androidx.fragment.app.FragmentTransition$1:
    283:283:void <init>(java.util.ArrayList) -> <init>
    286:287:void run() -> run
androidx.fragment.app.FragmentTransition$2 -> androidx.fragment.app.FragmentTransition$2:
    392:392:void <init>(java.lang.Object,androidx.fragment.app.FragmentTransitionImpl,android.view.View,androidx.fragment.app.Fragment,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.lang.Object) -> <init>
    395:413:void run() -> run
androidx.fragment.app.FragmentTransition$3 -> androidx.fragment.app.FragmentTransition$3:
    622:622:void <init>(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,android.view.View,androidx.fragment.app.FragmentTransitionImpl,android.graphics.Rect) -> <init>
    625:630:void run() -> run
androidx.fragment.app.FragmentTransition$4 -> androidx.fragment.app.FragmentTransition$4:
    734:734:void <init>(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,android.view.View,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,java.util.ArrayList,java.lang.Object,android.graphics.Rect) -> <init>
    737:759:void run() -> run
androidx.fragment.app.FragmentTransition$FragmentContainerTransition -> androidx.fragment.app.FragmentTransition$FragmentContainerTransition:
    1231:1231:void <init>() -> <init>
androidx.fragment.app.FragmentTransitionCompat21 -> androidx.fragment.app.FragmentTransitionCompat21:
    32:32:void <init>() -> <init>
    287:291:void addTarget(java.lang.Object,android.view.View) -> addTarget
    92:113:void addTargets(java.lang.Object,java.util.ArrayList) -> addTargets
    206:207:void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> beginDelayedTransition
    36:36:boolean canHandle(java.lang.Object) -> canHandle
    41:45:java.lang.Object cloneTransition(java.lang.Object) -> cloneTransition
    119:121:boolean hasSimpleTarget(android.transition.Transition) -> hasSimpleTarget
    178:200:java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsInSequence
    127:137:java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsTogether
    295:299:void removeTarget(java.lang.Object,android.view.View) -> removeTarget
    261:283:void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> replaceTargets
    143:171:void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList) -> scheduleHideFragmentView
    214:245:void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleRemoveTargets
    76:88:void setEpicenter(java.lang.Object,android.view.View) -> setEpicenter
    303:315:void setEpicenter(java.lang.Object,android.graphics.Rect) -> setEpicenter
    61:72:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList) -> setSharedElementTargets
    250:256:void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> swapSharedElementTargets
    50:55:java.lang.Object wrapTransitionInSet(java.lang.Object) -> wrapTransitionInSet
androidx.fragment.app.FragmentTransitionCompat21$1 -> androidx.fragment.app.FragmentTransitionCompat21$1:
    81:81:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect) -> <init>
    84:84:android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
androidx.fragment.app.FragmentTransitionCompat21$2 -> androidx.fragment.app.FragmentTransitionCompat21$2:
    144:144:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.view.View,java.util.ArrayList) -> <init>
    161:161:void onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    151:157:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    165:165:void onTransitionPause(android.transition.Transition) -> onTransitionPause
    169:169:void onTransitionResume(android.transition.Transition) -> onTransitionResume
    147:147:void onTransitionStart(android.transition.Transition) -> onTransitionStart
androidx.fragment.app.FragmentTransitionCompat21$3 -> androidx.fragment.app.FragmentTransitionCompat21$3:
    215:215:void <init>(androidx.fragment.app.FragmentTransitionCompat21,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> <init>
    235:235:void onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    231:231:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    239:239:void onTransitionPause(android.transition.Transition) -> onTransitionPause
    243:243:void onTransitionResume(android.transition.Transition) -> onTransitionResume
    218:227:void onTransitionStart(android.transition.Transition) -> onTransitionStart
androidx.fragment.app.FragmentTransitionCompat21$4 -> androidx.fragment.app.FragmentTransitionCompat21$4:
    305:305:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect) -> <init>
    308:311:android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
androidx.fragment.app.FragmentTransitionImpl -> androidx.fragment.app.FragmentTransitionImpl:
    38:38:void <init>() -> <init>
    311:329:void bfsAddViewChildren(java.util.List,android.view.View) -> bfsAddViewChildren
    189:205:void captureTransitioningViews(java.util.ArrayList,android.view.View) -> captureTransitioningViews
    336:341:boolean containedBeforeIndex(java.util.List,android.view.View,int) -> containedBeforeIndex
    356:361:java.lang.String findKeyForValue(java.util.Map,java.lang.String) -> findKeyForValue
    212:226:void findNamedViews(java.util.Map,android.view.View) -> findNamedViews
    75:78:void getBoundsOnScreen(android.view.View,android.graphics.Rect) -> getBoundsOnScreen
    348:348:boolean isNullOrEmpty(java.util.List) -> isNullOrEmpty
    130:137:java.util.ArrayList prepareSetNameOverridesReordered(java.util.ArrayList) -> prepareSetNameOverridesReordered
    292:304:void scheduleNameReset(android.view.ViewGroup,java.util.ArrayList,java.util.Map) -> scheduleNameReset
    233:247:void setNameOverridesOrdered(android.view.View,java.util.ArrayList,java.util.Map) -> setNameOverridesOrdered
    149:178:void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map) -> setNameOverridesReordered
androidx.fragment.app.FragmentTransitionImpl$1 -> androidx.fragment.app.FragmentTransitionImpl$1:
    169:169:void <init>(androidx.fragment.app.FragmentTransitionImpl,int,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> <init>
    172:176:void run() -> run
androidx.fragment.app.FragmentTransitionImpl$2 -> androidx.fragment.app.FragmentTransitionImpl$2:
    233:233:void <init>(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map) -> <init>
    236:245:void run() -> run
androidx.fragment.app.FragmentTransitionImpl$3 -> androidx.fragment.app.FragmentTransitionImpl$3:
    292:292:void <init>(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map) -> <init>
    295:302:void run() -> run
androidx.fragment.app.ListFragment -> androidx.fragment.app.ListFragment:
    50:77:void <init>() -> <init>
    328:379:void ensureList() -> ensureList
    324:324:android.widget.ListAdapter getListAdapter() -> getListAdapter
    227:228:android.widget.ListView getListView() -> getListView
    219:220:long getSelectedItemId() -> getSelectedItemId
    211:212:int getSelectedItemPosition() -> getSelectedItemPosition
    96:141:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    158:164:void onDestroyView() -> onDestroyView
    178:178:void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    149:151:void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    237:246:void setEmptyText(java.lang.CharSequence) -> setEmptyText
    184:194:void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    263:264:void setListShown(boolean) -> setListShown
    285:318:void setListShown(boolean,boolean) -> setListShown
    271:272:void setListShownNoAnimation(boolean) -> setListShownNoAnimation
    203:205:void setSelection(int) -> setSelection
androidx.fragment.app.ListFragment$1 -> androidx.fragment.app.ListFragment$1:
    52:52:void <init>(androidx.fragment.app.ListFragment) -> <init>
    55:56:void run() -> run
androidx.fragment.app.ListFragment$2 -> androidx.fragment.app.ListFragment$2:
    60:60:void <init>(androidx.fragment.app.ListFragment) -> <init>
    63:64:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.fragment.app.OneShotPreDrawListener -> androidx.fragment.app.OneShotPreDrawListener:
    41:45:void <init>(android.view.View,java.lang.Runnable) -> <init>
    55:58:androidx.fragment.app.OneShotPreDrawListener add(android.view.View,java.lang.Runnable) -> add
    63:65:boolean onPreDraw() -> onPreDraw
    83:84:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    88:89:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    73:79:void removeListener() -> removeListener
androidx.fragment.app.SuperNotCalledException -> androidx.fragment.app.SuperNotCalledException:
    23:24:void <init>(java.lang.String) -> <init>
androidx.interpolator.view.animation.FastOutLinearInInterpolator -> androidx.interpolator.view.animation.FastOutLinearInInterpolator:
    34:34:void <clinit>() -> <clinit>
    67:68:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.FastOutSlowInInterpolator -> androidx.interpolator.view.animation.FastOutSlowInInterpolator:
    34:34:void <clinit>() -> <clinit>
    67:68:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.LinearOutSlowInInterpolator -> androidx.interpolator.view.animation.LinearOutSlowInInterpolator:
    34:34:void <clinit>() -> <clinit>
    67:68:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.LookupTableInterpolator -> androidx.interpolator.view.animation.LookupTableInterpolator:
    30:33:void <init>(float[]) -> <init>
    37:54:float getInterpolation(float) -> getInterpolation
androidx.legacy.app.ActionBarDrawerToggle -> androidx.legacy.app.ActionBarDrawerToggle:
    120:120:void <clinit>() -> <clinit>
    167:169:void <init>(android.app.Activity,androidx.drawerlayout.widget.DrawerLayout,int,int,int) -> <init>
    133:218:void <init>(android.app.Activity,androidx.drawerlayout.widget.DrawerLayout,boolean,int,int,int) -> <init>
    172:172:boolean assumeMaterial(android.content.Context) -> assumeMaterial
    415:436:android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    314:314:boolean isDrawerIndicatorEnabled() -> isDrawerIndicatorEnabled
    326:331:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    397:401:void onDrawerClosed(android.view.View) -> onDrawerClosed
    382:386:void onDrawerOpened(android.view.View) -> onDrawerOpened
    364:371:void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    412:412:void onDrawerStateChanged(int) -> onDrawerStateChanged
    343:351:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    473:499:void setActionBarDescription(int) -> setActionBarDescription
    441:470:void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    298:307:void setDrawerIndicatorEnabled(boolean) -> setDrawerIndicatorEnabled
    254:265:void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> setHomeAsUpIndicator
    279:285:void setHomeAsUpIndicator(int) -> setHomeAsUpIndicator
    230:240:void syncState() -> syncState
androidx.legacy.app.ActionBarDrawerToggle$SetIndicatorInfo -> androidx.legacy.app.ActionBarDrawerToggle$SetIndicatorInfo:
    506:540:void <init>(android.app.Activity) -> <init>
androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable -> androidx.legacy.app.ActionBarDrawerToggle$SlideDrawable:
    544:552:void <init>(androidx.legacy.app.ActionBarDrawerToggle,android.graphics.drawable.Drawable) -> <init>
    582:600:void draw(android.graphics.Canvas) -> draw
    565:565:float getPosition() -> getPosition
    576:578:void setOffset(float) -> setOffset
    560:562:void setPosition(float) -> setPosition
androidx.legacy.content.WakefulBroadcastReceiver -> androidx.legacy.content.WakefulBroadcastReceiver:
    76:77:void <clinit>() -> <clinit>
    73:73:void <init>() -> <init>
    126:145:boolean completeWakefulIntent(android.content.Intent) -> completeWakefulIntent
    94:114:android.content.ComponentName startWakefulService(android.content.Context,android.content.Intent) -> startWakefulService
androidx.legacy.widget.Space -> androidx.legacy.widget.Space:
    42:46:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    53:54:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    61:62:void <init>(android.content.Context) -> <init>
    75:75:void draw(android.graphics.Canvas) -> draw
    83:98:int getDefaultSize2(int,int) -> getDefaultSize2
    107:110:void onMeasure(int,int) -> onMeasure
androidx.lifecycle.AndroidViewModel -> androidx.lifecycle.AndroidViewModel:
    34:36:void <init>(android.app.Application) -> <init>
    45:45:android.app.Application getApplication() -> getApplication
androidx.lifecycle.ClassesInfoCache -> androidx.lifecycle.ClassesInfoCache:
    35:35:void <clinit>() -> <clinit>
    33:199:void <init>() -> <init>
    104:160:androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[]) -> createInfo
    69:71:java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class) -> getDeclaredMethods
    80:85:androidx.lifecycle.ClassesInfoCache$CallbackInfo getInfo(java.lang.Class) -> getInfo
    45:64:boolean hasLifecycleMethods(java.lang.Class) -> hasLifecycleMethods
    90:101:void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class) -> verifyAndPutHandler
androidx.lifecycle.ClassesInfoCache$CallbackInfo -> androidx.lifecycle.ClassesInfoCache$CallbackInfo:
    168:180:void <init>(java.util.Map) -> <init>
    184:187:void invokeCallbacks(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeCallbacks
    191:196:void invokeMethodsForEvent(java.util.List,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeMethodsForEvent
androidx.lifecycle.ClassesInfoCache$MethodReference -> androidx.lifecycle.ClassesInfoCache$MethodReference:
    204:208:void <init>(int,java.lang.reflect.Method) -> <init>
    233:241:boolean equals(java.lang.Object) -> equals
    246:246:int hashCode() -> hashCode
    213:229:void invokeCallback(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeCallback
androidx.lifecycle.CompositeGeneratedAdaptersObserver -> androidx.lifecycle.CompositeGeneratedAdaptersObserver:
    30:32:void <init>(androidx.lifecycle.GeneratedAdapter[]) -> <init>
    36:43:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.ComputableLiveData -> androidx.lifecycle.ComputableLiveData:
    56:57:void <init>() -> <init>
    46:123:void <init>(java.util.concurrent.Executor) -> <init>
    83:83:androidx.lifecycle.LiveData getLiveData() -> getLiveData
    143:144:void invalidate() -> invalidate
androidx.lifecycle.ComputableLiveData$1 -> androidx.lifecycle.ComputableLiveData$1:
    67:67:void <init>(androidx.lifecycle.ComputableLiveData) -> <init>
    70:71:void onActive() -> onActive
androidx.lifecycle.ComputableLiveData$2 -> androidx.lifecycle.ComputableLiveData$2:
    87:87:void <init>(androidx.lifecycle.ComputableLiveData) -> <init>
    93:119:void run() -> run
androidx.lifecycle.ComputableLiveData$3 -> androidx.lifecycle.ComputableLiveData$3:
    124:124:void <init>(androidx.lifecycle.ComputableLiveData) -> <init>
    128:134:void run() -> run
androidx.lifecycle.FullLifecycleObserverAdapter -> androidx.lifecycle.FullLifecycleObserverAdapter:
    23:25:void <init>(androidx.lifecycle.FullLifecycleObserver) -> <init>
    29:51:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.FullLifecycleObserverAdapter$1 -> androidx.lifecycle.FullLifecycleObserverAdapter$1:
    29:29:void <clinit>() -> <clinit>
androidx.lifecycle.Lifecycle -> androidx.lifecycle.Lifecycle:
    75:150:void <init>() -> <init>
androidx.lifecycle.Lifecycle$Event -> androidx.lifecycle.Lifecycle$Event:
    114:143:void <clinit>() -> <clinit>
    115:115:void <init>(java.lang.String,int) -> <init>
    114:114:androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String) -> valueOf
    114:114:androidx.lifecycle.Lifecycle$Event[] values() -> values
androidx.lifecycle.Lifecycle$State -> androidx.lifecycle.Lifecycle$State:
    150:190:void <clinit>() -> <clinit>
    151:151:void <init>(java.lang.String,int) -> <init>
    199:199:boolean isAtLeast(androidx.lifecycle.Lifecycle$State) -> isAtLeast
    150:150:androidx.lifecycle.Lifecycle$State valueOf(java.lang.String) -> valueOf
    150:150:androidx.lifecycle.Lifecycle$State[] values() -> values
androidx.lifecycle.LifecycleRegistry -> androidx.lifecycle.LifecycleRegistry:
    60:101:void <init>(androidx.lifecycle.LifecycleOwner) -> <init>
    162:192:void addObserver(androidx.lifecycle.LifecycleObserver) -> addObserver
    300:313:void backwardPass(androidx.lifecycle.LifecycleOwner) -> backwardPass
    152:157:androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver) -> calculateTargetState
    254:266:androidx.lifecycle.Lifecycle$Event downEvent(androidx.lifecycle.Lifecycle$State) -> downEvent
    285:297:void forwardPass(androidx.lifecycle.LifecycleOwner) -> forwardPass
    232:232:androidx.lifecycle.Lifecycle$State getCurrentState() -> getCurrentState
    226:226:int getObserverCount() -> getObserverCount
    236:250:androidx.lifecycle.Lifecycle$State getStateAfter(androidx.lifecycle.Lifecycle$Event) -> getStateAfter
    123:125:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event) -> handleLifecycleEvent
    143:148:boolean isSynced() -> isSynced
    111:112:void markState(androidx.lifecycle.Lifecycle$State) -> markState
    340:340:androidx.lifecycle.Lifecycle$State min(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State) -> min
    128:140:void moveToState(androidx.lifecycle.Lifecycle$State) -> moveToState
    195:196:void popParentState() -> popParentState
    199:200:void pushParentState(androidx.lifecycle.Lifecycle$State) -> pushParentState
    216:217:void removeObserver(androidx.lifecycle.LifecycleObserver) -> removeObserver
    318:337:void sync() -> sync
    270:281:androidx.lifecycle.Lifecycle$Event upEvent(androidx.lifecycle.Lifecycle$State) -> upEvent
androidx.lifecycle.LifecycleRegistry$1 -> androidx.lifecycle.LifecycleRegistry$1:
    236:254:void <clinit>() -> <clinit>
androidx.lifecycle.LifecycleRegistry$ObserverWithState -> androidx.lifecycle.LifecycleRegistry$ObserverWithState:
    347:350:void <init>(androidx.lifecycle.LifecycleObserver,androidx.lifecycle.Lifecycle$State) -> <init>
    353:357:void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> dispatchEvent
androidx.lifecycle.Lifecycling -> androidx.lifecycle.Lifecycling:
    42:43:void <clinit>() -> <clinit>
    182:183:void <init>() -> <init>
    79:85:androidx.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor,java.lang.Object) -> createGeneratedAdapter
    92:111:java.lang.reflect.Constructor generatedConstructor(java.lang.Class) -> generatedConstructor
    179:179:java.lang.String getAdapterName(java.lang.String) -> getAdapterName
    48:72:androidx.lifecycle.GenericLifecycleObserver getCallback(java.lang.Object) -> getCallback
    116:121:int getObserverConstructorType(java.lang.Class) -> getObserverConstructorType
    172:172:boolean isLifecycleParent(java.lang.Class) -> isLifecycleParent
    126:168:int resolveObserverCallbackType(java.lang.Class) -> resolveObserverCallbackType
androidx.lifecycle.LiveData -> androidx.lifecycle.LiveData:
    64:64:void <clinit>() -> <clinit>
    59:429:void <init>() -> <init>
    442:446:void assertMainThread(java.lang.String) -> assertMainThread
    96:114:void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper) -> considerNotify
    118:139:void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper) -> dispatchingValue
    301:306:java.lang.Object getValue() -> getValue
    310:310:int getVersion() -> getVersion
    353:353:boolean hasActiveObservers() -> hasActiveObservers
    343:343:boolean hasObservers() -> hasObservers
    171:186:void observe(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer) -> observe
    204:215:void observeForever(androidx.lifecycle.Observer) -> observeForever
    321:321:void onActive() -> onActive
    334:334:void onInactive() -> onInactive
    266:274:void postValue(java.lang.Object) -> postValue
    224:231:void removeObserver(androidx.lifecycle.Observer) -> removeObserver
    241:247:void removeObservers(androidx.lifecycle.LifecycleOwner) -> removeObservers
    286:290:void setValue(java.lang.Object) -> setValue
androidx.lifecycle.LiveData$1 -> androidx.lifecycle.LiveData$1:
    82:82:void <init>(androidx.lifecycle.LiveData) -> <init>
    86:92:void run() -> run
androidx.lifecycle.LiveData$AlwaysActiveObserver -> androidx.lifecycle.LiveData$AlwaysActiveObserver:
    431:433:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.Observer) -> <init>
    437:437:boolean shouldBeActive() -> shouldBeActive
androidx.lifecycle.LiveData$LifecycleBoundObserver -> androidx.lifecycle.LiveData$LifecycleBoundObserver:
    360:363:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer) -> <init>
    386:387:void detachObserver() -> detachObserver
    381:381:boolean isAttachedTo(androidx.lifecycle.LifecycleOwner) -> isAttachedTo
    372:377:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
    367:367:boolean shouldBeActive() -> shouldBeActive
androidx.lifecycle.LiveData$ObserverWrapper -> androidx.lifecycle.LiveData$ObserverWrapper:
    393:397:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.Observer) -> <init>
    409:426:void activeStateChanged(boolean) -> activeStateChanged
    406:406:void detachObserver() -> detachObserver
    402:402:boolean isAttachedTo(androidx.lifecycle.LifecycleOwner) -> isAttachedTo
androidx.lifecycle.MediatorLiveData -> androidx.lifecycle.MediatorLiveData:
    69:130:void <init>() -> <init>
    86:98:void addSource(androidx.lifecycle.LiveData,androidx.lifecycle.Observer) -> addSource
    117:120:void onActive() -> onActive
    125:128:void onInactive() -> onInactive
    108:112:void removeSource(androidx.lifecycle.LiveData) -> removeSource
androidx.lifecycle.MediatorLiveData$Source -> androidx.lifecycle.MediatorLiveData$Source:
    133:138:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.Observer) -> <init>
    150:154:void onChanged(java.lang.Object) -> onChanged
    141:142:void plug() -> plug
    145:146:void unplug() -> unplug
androidx.lifecycle.MethodCallsLogger -> androidx.lifecycle.MethodCallsLogger:
    28:29:void <init>() -> <init>
    36:40:boolean approveCall(java.lang.String,int) -> approveCall
androidx.lifecycle.MutableLiveData -> androidx.lifecycle.MutableLiveData:
    25:25:void <init>() -> <init>
    28:29:void postValue(java.lang.Object) -> postValue
    33:34:void setValue(java.lang.Object) -> setValue
androidx.lifecycle.ReflectiveGenericLifecycleObserver -> androidx.lifecycle.ReflectiveGenericLifecycleObserver:
    29:32:void <init>(java.lang.Object) -> <init>
    36:37:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.ReportFragment -> androidx.lifecycle.ReportFragment:
    31:131:void <init>() -> <init>
    113:125:void dispatch(androidx.lifecycle.Lifecycle$Event) -> dispatch
    54:57:void dispatchCreate(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchCreate
    66:69:void dispatchResume(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchResume
    60:63:void dispatchStart(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchStart
    47:47:androidx.lifecycle.ReportFragment get(android.app.Activity) -> get
    38:44:void injectIfNeededIn(android.app.Activity) -> injectIfNeededIn
    73:76:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    106:110:void onDestroy() -> onDestroy
    94:96:void onPause() -> onPause
    87:90:void onResume() -> onResume
    80:83:void onStart() -> onStart
    100:102:void onStop() -> onStop
    128:129:void setProcessListener(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> setProcessListener
androidx.lifecycle.SingleGeneratedAdapterObserver -> androidx.lifecycle.SingleGeneratedAdapterObserver:
    29:31:void <init>(androidx.lifecycle.GeneratedAdapter) -> <init>
    35:37:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.Transformations -> androidx.lifecycle.Transformations:
    35:36:void <init>() -> <init>
    71:78:androidx.lifecycle.LiveData map(androidx.lifecycle.LiveData,androidx.arch.core.util.Function) -> map
    135:159:androidx.lifecycle.LiveData switchMap(androidx.lifecycle.LiveData,androidx.arch.core.util.Function) -> switchMap
androidx.lifecycle.Transformations$1 -> androidx.lifecycle.Transformations$1:
    72:72:void <init>(androidx.lifecycle.MediatorLiveData,androidx.arch.core.util.Function) -> <init>
    75:76:void onChanged(java.lang.Object) -> onChanged
androidx.lifecycle.Transformations$2 -> androidx.lifecycle.Transformations$2:
    136:136:void <init>(androidx.arch.core.util.Function,androidx.lifecycle.MediatorLiveData) -> <init>
    141:157:void onChanged(java.lang.Object) -> onChanged
androidx.lifecycle.Transformations$2$1 -> androidx.lifecycle.Transformations$2$1:
    150:150:void <init>(androidx.lifecycle.Transformations$2) -> <init>
    153:154:void onChanged(java.lang.Object) -> onChanged
androidx.lifecycle.ViewModel -> androidx.lifecycle.ViewModel:
    96:96:void <init>() -> <init>
    105:105:void onCleared() -> onCleared
androidx.lifecycle.ViewModelProvider -> androidx.lifecycle.ViewModelProvider:
    67:68:void <init>(androidx.lifecycle.ViewModelStoreOwner,androidx.lifecycle.ViewModelProvider$Factory) -> <init>
    78:81:void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory) -> <init>
    99:103:androidx.lifecycle.ViewModel get(java.lang.Class) -> get
    123:138:androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class) -> get
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory -> androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory:
    190:192:void <init>(android.app.Application) -> <init>
    197:211:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
    177:180:androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory getInstance(android.app.Application) -> getInstance
androidx.lifecycle.ViewModelProvider$NewInstanceFactory -> androidx.lifecycle.ViewModelProvider$NewInstanceFactory:
    144:144:void <init>() -> <init>
    152:156:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.lifecycle.ViewModelStore -> androidx.lifecycle.ViewModelStore:
    36:38:void <init>() -> <init>
    55:59:void clear() -> clear
    48:48:androidx.lifecycle.ViewModel get(java.lang.String) -> get
    41:45:void put(java.lang.String,androidx.lifecycle.ViewModel) -> put
androidx.loader.app.LoaderManager -> androidx.loader.app.LoaderManager:
    40:44:void <init>() -> <init>
    235:236:void enableDebugLogging(boolean) -> enableDebugLogging
    128:128:androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner) -> getInstance
    242:242:boolean hasRunningLoaders() -> hasRunningLoaders
androidx.loader.app.LoaderManagerImpl -> androidx.loader.app.LoaderManagerImpl:
    42:42:void <clinit>() -> <clinit>
    371:374:void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore) -> <init>
    382:400:androidx.loader.content.Loader createAndInstallLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks,androidx.loader.content.Loader) -> createAndInstallLoader
    453:466:void destroyLoader(int) -> destroyLoader
    498:499:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    471:476:androidx.loader.content.Loader getLoader(int) -> getLoader
    503:503:boolean hasRunningLoaders() -> hasRunningLoaders
    408:424:androidx.loader.content.Loader initLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks) -> initLoader
    481:482:void markForRedelivery() -> markForRedelivery
    433:447:androidx.loader.content.Loader restartLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks) -> restartLoader
    486:492:java.lang.String toString() -> toString
androidx.loader.app.LoaderManagerImpl$LoaderInfo -> androidx.loader.app.LoaderManagerImpl$LoaderInfo:
    61:67:void <init>(int,android.os.Bundle,androidx.loader.content.Loader,androidx.loader.content.Loader) -> <init>
    149:167:androidx.loader.content.Loader destroy(boolean) -> destroy
    212:224:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    71:71:androidx.loader.content.Loader getLoader() -> getLoader
    125:129:boolean isCallbackWaitingForData() -> isCallbackWaitingForData
    111:121:void markForRedelivery() -> markForRedelivery
    76:78:void onActive() -> onActive
    82:84:void onInactive() -> onInactive
    172:185:void onLoadComplete(androidx.loader.content.Loader,java.lang.Object) -> onLoadComplete
    134:138:void removeObserver(androidx.lifecycle.Observer) -> removeObserver
    98:107:androidx.loader.content.Loader setCallback(androidx.lifecycle.LifecycleOwner,androidx.loader.app.LoaderManager$LoaderCallbacks) -> setCallback
    189:195:void setValue(java.lang.Object) -> setValue
    199:207:java.lang.String toString() -> toString
androidx.loader.app.LoaderManagerImpl$LoaderObserver -> androidx.loader.app.LoaderManagerImpl$LoaderObserver:
    237:242:void <init>(androidx.loader.content.Loader,androidx.loader.app.LoaderManager$LoaderCallbacks) -> <init>
    272:274:void dump(java.lang.String,java.io.PrintWriter) -> dump
    255:255:boolean hasDeliveredData() -> hasDeliveredData
    246:252:void onChanged(java.lang.Object) -> onChanged
    260:264:void reset() -> reset
    268:268:java.lang.String toString() -> toString
androidx.loader.app.LoaderManagerImpl$LoaderViewModel -> androidx.loader.app.LoaderManagerImpl$LoaderViewModel:
    281:281:void <clinit>() -> <clinit>
    280:296:void <init>() -> <init>
    354:364:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    307:308:void finishCreatingLoader() -> finishCreatingLoader
    292:292:androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore) -> getInstance
    316:316:androidx.loader.app.LoaderManagerImpl$LoaderInfo getLoader(int) -> getLoader
    324:331:boolean hasRunningLoaders() -> hasRunningLoaders
    303:303:boolean isCreatingLoader() -> isCreatingLoader
    335:340:void markForRedelivery() -> markForRedelivery
    344:351:void onCleared() -> onCleared
    311:312:void putLoader(int,androidx.loader.app.LoaderManagerImpl$LoaderInfo) -> putLoader
    320:321:void removeLoader(int) -> removeLoader
    299:300:void startCreatingLoader() -> startCreatingLoader
androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1 -> androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1:
    281:281:void <init>() -> <init>
    286:286:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.loader.content.AsyncTaskLoader -> androidx.loader.content.AsyncTaskLoader:
    128:129:void <init>(android.content.Context) -> <init>
    124:134:void <init>(android.content.Context,java.util.concurrent.Executor) -> <init>
    322:322:void cancelLoadInBackground() -> cancelLoadInBackground
    233:243:void dispatchOnCancelled(androidx.loader.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnCancelled
    246:261:void dispatchOnLoadComplete(androidx.loader.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnLoadComplete
    356:373:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    210:230:void executePendingTask() -> executePendingTask
    332:332:boolean isLoadInBackgroundCanceled() -> isLoadInBackgroundCanceled
    162:196:boolean onCancelLoad() -> onCancelLoad
    207:207:void onCanceled(java.lang.Object) -> onCanceled
    152:157:void onForceLoad() -> onForceLoad
    307:307:java.lang.Object onLoadInBackground() -> onLoadInBackground
    144:148:void setUpdateThrottle(long) -> setUpdateThrottle
    347:351:void waitForLoader() -> waitForLoader
androidx.loader.content.AsyncTaskLoader$LoadTask -> androidx.loader.content.AsyncTaskLoader$LoadTask:
    48:49:void <init>(androidx.loader.content.AsyncTaskLoader) -> <init>
    48:48:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    60:74:java.lang.Object doInBackground(java.lang.Void[]) -> doInBackground
    94:98:void onCancelled(java.lang.Object) -> onCancelled
    83:87:void onPostExecute(java.lang.Object) -> onPostExecute
    104:106:void run() -> run
    111:115:void waitForLoader() -> waitForLoader
androidx.loader.content.CursorLoader -> androidx.loader.content.CursorLoader:
    123:125:void <init>(android.content.Context) -> <init>
    136:143:void <init>(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> <init>
    86:93:void cancelLoadInBackground() -> cancelLoadInBackground
    41:41:void deliverResult(java.lang.Object) -> deliverResult
    98:115:void deliverResult(android.database.Cursor) -> deliverResult
    239:249:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    202:202:java.lang.String[] getProjection() -> getProjection
    211:211:java.lang.String getSelection() -> getSelection
    220:220:java.lang.String[] getSelectionArgs() -> getSelectionArgs
    229:229:java.lang.String getSortOrder() -> getSortOrder
    193:193:android.net.Uri getUri() -> getUri
    41:41:java.lang.Object loadInBackground() -> loadInBackground
    56:80:android.database.Cursor loadInBackground() -> loadInBackground
    41:41:void onCanceled(java.lang.Object) -> onCanceled
    173:176:void onCanceled(android.database.Cursor) -> onCanceled
    180:189:void onReset() -> onReset
    154:160:void onStartLoading() -> onStartLoading
    168:169:void onStopLoading() -> onStopLoading
    206:207:void setProjection(java.lang.String[]) -> setProjection
    215:216:void setSelection(java.lang.String) -> setSelection
    224:225:void setSelectionArgs(java.lang.String[]) -> setSelectionArgs
    233:234:void setSortOrder(java.lang.String) -> setSortOrder
    197:198:void setUri(android.net.Uri) -> setUri
androidx.loader.content.Loader -> androidx.loader.content.Loader:
    44:120:void <init>(android.content.Context) -> <init>
    409:411:void abandon() -> abandon
    318:318:boolean cancelLoad() -> cancelLoad
    485:486:void commitContentChanged() -> commitContentChanged
    527:530:java.lang.String dataToString(java.lang.Object) -> dataToString
    144:147:void deliverCancellation() -> deliverCancellation
    131:134:void deliverResult(java.lang.Object) -> deliverResult
    555:566:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    347:348:void forceLoad() -> forceLoad
    154:154:android.content.Context getContext() -> getContext
    161:161:int getId() -> getId
    247:247:boolean isAbandoned() -> isAbandoned
    256:256:boolean isReset() -> isReset
    238:238:boolean isStarted() -> isStarted
    425:425:void onAbandon() -> onAbandon
    334:334:boolean onCancelLoad() -> onCancelLoad
    511:519:void onContentChanged() -> onContentChanged
    356:356:void onForceLoad() -> onForceLoad
    463:463:void onReset() -> onReset
    296:296:void onStartLoading() -> onStartLoading
    392:392:void onStopLoading() -> onStopLoading
    173:178:void registerListener(int,androidx.loader.content.Loader$OnLoadCompleteListener) -> registerListener
    207:211:void registerOnLoadCanceledListener(androidx.loader.content.Loader$OnLoadCanceledListener) -> registerOnLoadCanceledListener
    447:453:void reset() -> reset
    496:499:void rollbackContentChanged() -> rollbackContentChanged
    282:286:void startLoading() -> startLoading
    380:382:void stopLoading() -> stopLoading
    471:474:boolean takeContentChanged() -> takeContentChanged
    535:540:java.lang.String toString() -> toString
    187:194:void unregisterListener(androidx.loader.content.Loader$OnLoadCompleteListener) -> unregisterListener
    223:230:void unregisterOnLoadCanceledListener(androidx.loader.content.Loader$OnLoadCanceledListener) -> unregisterOnLoadCanceledListener
androidx.loader.content.Loader$ForceLoadContentObserver -> androidx.loader.content.Loader$ForceLoadContentObserver:
    58:60:void <init>(androidx.loader.content.Loader) -> <init>
    64:64:boolean deliverSelfNotifications() -> deliverSelfNotifications
    69:70:void onChange(boolean) -> onChange
androidx.loader.content.ModernAsyncTask -> androidx.loader.content.ModernAsyncTask:
    60:84:void <clinit>() -> <clinit>
    88:173:void <init>() -> <init>
    332:333:boolean cancel(boolean) -> cancel
    398:398:androidx.loader.content.ModernAsyncTask execute(java.lang.Object[]) -> execute
    462:463:void execute(java.lang.Runnable) -> execute
    433:454:androidx.loader.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> executeOnExecutor
    487:493:void finish(java.lang.Object) -> finish
    348:348:java.lang.Object get() -> get
    368:368:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    115:120:android.os.Handler getHandler() -> getHandler
    195:195:androidx.loader.content.ModernAsyncTask$Status getStatus() -> getStatus
    299:299:boolean isCancelled() -> isCancelled
    270:271:void onCancelled(java.lang.Object) -> onCancelled
    286:286:void onCancelled() -> onCancelled
    239:239:void onPostExecute(java.lang.Object) -> onPostExecute
    223:223:void onPreExecute() -> onPreExecute
    252:252:void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    183:186:java.lang.Object postResult(java.lang.Object) -> postResult
    176:180:void postResultIfNotInvoked(java.lang.Object) -> postResultIfNotInvoked
    480:484:void publishProgress(java.lang.Object[]) -> publishProgress
    126:127:void setDefaultExecutor(java.util.concurrent.Executor) -> setDefaultExecutor
androidx.loader.content.ModernAsyncTask$1 -> androidx.loader.content.ModernAsyncTask$1:
    60:61:void <init>() -> <init>
    65:65:java.lang.Thread newThread(java.lang.Runnable) -> newThread
androidx.loader.content.ModernAsyncTask$2 -> androidx.loader.content.ModernAsyncTask$2:
    133:133:void <init>(androidx.loader.content.ModernAsyncTask) -> <init>
    136:149:java.lang.Object call() -> call
androidx.loader.content.ModernAsyncTask$3 -> androidx.loader.content.ModernAsyncTask$3:
    153:153:void <init>(androidx.loader.content.ModernAsyncTask,java.util.concurrent.Callable) -> <init>
    157:171:void done() -> done
androidx.loader.content.ModernAsyncTask$4 -> androidx.loader.content.ModernAsyncTask$4:
    434:434:void <clinit>() -> <clinit>
androidx.loader.content.ModernAsyncTask$AsyncTaskResult -> androidx.loader.content.ModernAsyncTask$AsyncTaskResult:
    528:531:void <init>(androidx.loader.content.ModernAsyncTask,java.lang.Object[]) -> <init>
androidx.loader.content.ModernAsyncTask$InternalHandler -> androidx.loader.content.ModernAsyncTask$InternalHandler:
    497:498:void <init>() -> <init>
    503:513:void handleMessage(android.os.Message) -> handleMessage
androidx.loader.content.ModernAsyncTask$Status -> androidx.loader.content.ModernAsyncTask$Status:
    99:111:void <clinit>() -> <clinit>
    99:99:void <init>(java.lang.String,int) -> <init>
    99:99:androidx.loader.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
    99:99:androidx.loader.content.ModernAsyncTask$Status[] values() -> values
androidx.loader.content.ModernAsyncTask$WorkerRunnable -> androidx.loader.content.ModernAsyncTask$WorkerRunnable:
    519:520:void <init>() -> <init>
androidx.localbroadcastmanager.content.LocalBroadcastManager -> androidx.localbroadcastmanager.content.LocalBroadcastManager:
    100:100:void <clinit>() -> <clinit>
    90:128:void <init>(android.content.Context) -> <init>
    298:317:void executePendingBroadcasts() -> executePendingBroadcasts
    105:110:androidx.localbroadcastmanager.content.LocalBroadcastManager getInstance(android.content.Context) -> getInstance
    140:158:void registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter) -> registerReceiver
    213:280:boolean sendBroadcast(android.content.Intent) -> sendBroadcast
    289:292:void sendBroadcastSync(android.content.Intent) -> sendBroadcastSync
    170:196:void unregisterReceiver(android.content.BroadcastReceiver) -> unregisterReceiver
androidx.localbroadcastmanager.content.LocalBroadcastManager$1 -> androidx.localbroadcastmanager.content.LocalBroadcastManager$1:
    115:115:void <init>(androidx.localbroadcastmanager.content.LocalBroadcastManager,android.os.Looper) -> <init>
    119:126:void handleMessage(android.os.Message) -> handleMessage
androidx.localbroadcastmanager.content.LocalBroadcastManager$BroadcastRecord -> androidx.localbroadcastmanager.content.LocalBroadcastManager$BroadcastRecord:
    79:82:void <init>(android.content.Intent,java.util.ArrayList) -> <init>
androidx.localbroadcastmanager.content.LocalBroadcastManager$ReceiverRecord -> androidx.localbroadcastmanager.content.LocalBroadcastManager$ReceiverRecord:
    55:58:void <init>(android.content.IntentFilter,android.content.BroadcastReceiver) -> <init>
    62:71:java.lang.String toString() -> toString
androidx.media.AudioAttributesCompat -> androidx.media.AudioAttributesCompat:
    175:186:void <clinit>() -> <clinit>
    252:253:void <init>() -> <init>
    255:257:void <init>(androidx.media.AudioAttributesImpl) -> <init>
    766:773:boolean equals(java.lang.Object) -> equals
    360:365:androidx.media.AudioAttributesCompat fromBundle(android.os.Bundle) -> fromBundle
    325:325:int getContentType() -> getContentType
    343:343:int getFlags() -> getFlags
    296:296:int getLegacyStreamType() -> getLegacyStreamType
    706:706:int getRawLegacyStreamType() -> getRawLegacyStreamType
    334:334:int getUsage() -> getUsage
    273:273:int getVolumeControlStream() -> getVolumeControlStream
    606:606:int hashCode() -> hashCode
    698:699:void setForceLegacyBehavior(boolean) -> setForceLegacyBehavior
    351:351:android.os.Bundle toBundle() -> toBundle
    611:611:java.lang.String toString() -> toString
    702:702:int toVolumeStreamType(boolean,androidx.media.AudioAttributesCompat) -> toVolumeStreamType
    712:759:int toVolumeStreamType(boolean,int,int) -> toVolumeStreamType
    286:286:java.lang.Object unwrap() -> unwrap
    665:687:int usageForStreamType(int) -> usageForStreamType
    615:649:java.lang.String usageToString(int) -> usageToString
    307:314:androidx.media.AudioAttributesCompat wrap(java.lang.Object) -> wrap
androidx.media.AudioAttributesCompat$AudioManagerHidden -> androidx.media.AudioAttributesCompat$AudioManagerHidden:
    659:660:void <init>() -> <init>
androidx.media.AudioAttributesCompat$Builder -> androidx.media.AudioAttributesCompat$Builder:
    387:401:void <init>() -> <init>
    387:413:void <init>(androidx.media.AudioAttributesCompat) -> <init>
    423:438:androidx.media.AudioAttributesCompat build() -> build
    509:520:androidx.media.AudioAttributesCompat$Builder setContentType(int) -> setContentType
    533:535:androidx.media.AudioAttributesCompat$Builder setFlags(int) -> setFlags
    561:600:androidx.media.AudioAttributesCompat$Builder setInternalLegacyStreamType(int) -> setInternalLegacyStreamType
    546:556:androidx.media.AudioAttributesCompat$Builder setLegacyStreamType(int) -> setLegacyStreamType
    464:493:androidx.media.AudioAttributesCompat$Builder setUsage(int) -> setUsage
androidx.media.AudioAttributesCompatParcelizer -> androidx.media.AudioAttributesCompatParcelizer:
    9:9:void <init>() -> <init>
    11:13:androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    17:19:void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.media.AudioAttributesImplApi21 -> androidx.media.AudioAttributesImplApi21:
    43:50:void <init>() -> <init>
    53:54:void <init>(android.media.AudioAttributes) -> <init>
    43:58:void <init>(android.media.AudioAttributes,int) -> <init>
    150:154:boolean equals(java.lang.Object) -> equals
    166:176:androidx.media.AudioAttributesImpl fromBundle(android.os.Bundle) -> fromBundle
    78:78:java.lang.Object getAudioAttributes() -> getAudioAttributes
    64:71:java.lang.reflect.Method getAudioAttributesToLegacyStreamTypeMethod() -> getAudioAttributesToLegacyStreamTypeMethod
    117:117:int getContentType() -> getContentType
    127:127:int getFlags() -> getFlags
    91:106:int getLegacyStreamType() -> getLegacyStreamType
    112:112:int getRawLegacyStreamType() -> getRawLegacyStreamType
    122:122:int getUsage() -> getUsage
    83:86:int getVolumeControlStream() -> getVolumeControlStream
    145:145:int hashCode() -> hashCode
    132:137:android.os.Bundle toBundle() -> toBundle
    159:159:java.lang.String toString() -> toString
androidx.media.AudioAttributesImplApi21Parcelizer -> androidx.media.AudioAttributesImplApi21Parcelizer:
    9:9:void <init>() -> <init>
    11:14:androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel) -> read
    18:21:void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel) -> write
androidx.media.AudioAttributesImplBase -> androidx.media.AudioAttributesImplBase:
    38:50:void <init>() -> <init>
    38:57:void <init>(int,int,int,int) -> <init>
    128:134:boolean equals(java.lang.Object) -> equals
    158:166:androidx.media.AudioAttributesImpl fromBundle(android.os.Bundle) -> fromBundle
    63:63:java.lang.Object getAudioAttributes() -> getAudioAttributes
    86:86:int getContentType() -> getContentType
    96:103:int getFlags() -> getFlags
    73:76:int getLegacyStreamType() -> getLegacyStreamType
    81:81:int getRawLegacyStreamType() -> getRawLegacyStreamType
    91:91:int getUsage() -> getUsage
    68:68:int getVolumeControlStream() -> getVolumeControlStream
    123:123:int hashCode() -> hashCode
    108:115:android.os.Bundle toBundle() -> toBundle
    140:151:java.lang.String toString() -> toString
androidx.media.AudioAttributesImplBaseParcelizer -> androidx.media.AudioAttributesImplBaseParcelizer:
    9:9:void <init>() -> <init>
    11:16:androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel) -> read
    20:25:void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel) -> write
androidx.media.MediaBrowserCompatUtils -> androidx.media.MediaBrowserCompatUtils:
    77:78:void <init>() -> <init>
    32:44:boolean areSameOptions(android.os.Bundle,android.os.Bundle) -> areSameOptions
    49:74:boolean hasDuplicatedItems(android.os.Bundle,android.os.Bundle) -> hasDuplicatedItems
androidx.media.MediaBrowserProtocol -> androidx.media.MediaBrowserProtocol:
    211:212:void <init>() -> <init>
androidx.media.MediaBrowserServiceCompat -> androidx.media.MediaBrowserServiceCompat:
    124:124:void <clinit>() -> <clinit>
    122:1721:void <init>() -> <init>
    1515:1533:void addSubscription(java.lang.String,androidx.media.MediaBrowserServiceCompat$ConnectionRecord,android.os.IBinder,android.os.Bundle) -> addSubscription
    1614:1630:java.util.List applyOptions(java.util.List,android.os.Bundle) -> applyOptions
    1165:1166:void attachToBaseContext(android.content.Context) -> attachToBaseContext
    1192:1192:void dump(java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    1412:1412:android.os.Bundle getBrowserRootHints() -> getBrowserRootHints
    1423:1423:androidx.media.MediaSessionManager$RemoteUserInfo getCurrentBrowserInfo() -> getCurrentBrowserInfo
    1393:1393:android.support.v4.media.session.MediaSessionCompat$Token getSessionToken() -> getSessionToken
    1495:1506:boolean isValidPackage(java.lang.String,int) -> isValidPackage
    1435:1439:void notifyChildrenChanged(java.lang.String) -> notifyChildrenChanged
    1453:1460:void notifyChildrenChanged(java.lang.String,android.os.Bundle) -> notifyChildrenChanged
    1478:1489:void notifyChildrenChanged(androidx.media.MediaSessionManager$RemoteUserInfo,java.lang.String,android.os.Bundle) -> notifyChildrenChanged
    1187:1187:android.os.IBinder onBind(android.content.Intent) -> onBind
    1170:1183:void onCreate() -> onCreate
    1366:1367:void onCustomAction(java.lang.String,android.os.Bundle,androidx.media.MediaBrowserServiceCompat$Result) -> onCustomAction
    1270:1272:void onLoadChildren(java.lang.String,androidx.media.MediaBrowserServiceCompat$Result,android.os.Bundle) -> onLoadChildren
    1314:1316:void onLoadItem(java.lang.String,androidx.media.MediaBrowserServiceCompat$Result) -> onLoadItem
    1341:1343:void onSearch(java.lang.String,android.os.Bundle,androidx.media.MediaBrowserServiceCompat$Result) -> onSearch
    1283:1283:void onSubscribe(java.lang.String,android.os.Bundle) -> onSubscribe
    1293:1293:void onUnsubscribe(java.lang.String) -> onUnsubscribe
    1689:1715:void performCustomAction(java.lang.String,android.os.Bundle,androidx.media.MediaBrowserServiceCompat$ConnectionRecord,android.support.v4.os.ResultReceiver) -> performCustomAction
    1572:1610:void performLoadChildren(java.lang.String,androidx.media.MediaBrowserServiceCompat$ConnectionRecord,android.os.Bundle,android.os.Bundle) -> performLoadChildren
    1635:1657:void performLoadItem(java.lang.String,androidx.media.MediaBrowserServiceCompat$ConnectionRecord,android.support.v4.os.ResultReceiver) -> performLoadItem
    1661:1685:void performSearch(java.lang.String,android.os.Bundle,androidx.media.MediaBrowserServiceCompat$ConnectionRecord,android.support.v4.os.ResultReceiver) -> performSearch
    1540:1561:boolean removeSubscription(java.lang.String,androidx.media.MediaBrowserServiceCompat$ConnectionRecord,android.os.IBinder) -> removeSubscription
    1378:1386:void setSessionToken(android.support.v4.media.session.MediaSessionCompat$Token) -> setSessionToken
androidx.media.MediaBrowserServiceCompat$1 -> androidx.media.MediaBrowserServiceCompat$1:
    1573:1573:void <init>(androidx.media.MediaBrowserServiceCompat,java.lang.Object,androidx.media.MediaBrowserServiceCompat$ConnectionRecord,java.lang.String,android.os.Bundle,android.os.Bundle) -> <init>
    1573:1573:void onResultSent(java.lang.Object) -> onResultSent
    1576:1595:void onResultSent(java.util.List) -> onResultSent
androidx.media.MediaBrowserServiceCompat$2 -> androidx.media.MediaBrowserServiceCompat$2:
    1636:1636:void <init>(androidx.media.MediaBrowserServiceCompat,java.lang.Object,android.support.v4.os.ResultReceiver) -> <init>
    1636:1636:void onResultSent(java.lang.Object) -> onResultSent
    1639:1646:void onResultSent(android.support.v4.media.MediaBrowserCompat$MediaItem) -> onResultSent
androidx.media.MediaBrowserServiceCompat$3 -> androidx.media.MediaBrowserServiceCompat$3:
    1662:1662:void <init>(androidx.media.MediaBrowserServiceCompat,java.lang.Object,android.support.v4.os.ResultReceiver) -> <init>
    1662:1662:void onResultSent(java.lang.Object) -> onResultSent
    1665:1674:void onResultSent(java.util.List) -> onResultSent
androidx.media.MediaBrowserServiceCompat$4 -> androidx.media.MediaBrowserServiceCompat$4:
    1689:1689:void <init>(androidx.media.MediaBrowserServiceCompat,java.lang.Object,android.support.v4.os.ResultReceiver) -> <init>
    1702:1703:void onErrorSent(android.os.Bundle) -> onErrorSent
    1697:1698:void onProgressUpdateSent(android.os.Bundle) -> onProgressUpdateSent
    1689:1689:void onResultSent(java.lang.Object) -> onResultSent
    1692:1693:void onResultSent(android.os.Bundle) -> onResultSent
androidx.media.MediaBrowserServiceCompat$BrowserRoot -> androidx.media.MediaBrowserServiceCompat$BrowserRoot:
    1806:1813:void <init>(java.lang.String,android.os.Bundle) -> <init>
    1826:1826:android.os.Bundle getExtras() -> getExtras
    1819:1819:java.lang.String getRootId() -> getRootId
androidx.media.MediaBrowserServiceCompat$ConnectionRecord -> androidx.media.MediaBrowserServiceCompat$ConnectionRecord:
    708:719:void <init>(androidx.media.MediaBrowserServiceCompat,java.lang.String,int,int,android.os.Bundle,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks) -> <init>
    723:729:void binderDied() -> binderDied
androidx.media.MediaBrowserServiceCompat$ConnectionRecord$1 -> androidx.media.MediaBrowserServiceCompat$ConnectionRecord$1:
    723:723:void <init>(androidx.media.MediaBrowserServiceCompat$ConnectionRecord) -> <init>
    726:727:void run() -> run
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21 -> androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21:
    296:298:void <init>(androidx.media.MediaBrowserServiceCompat) -> <init>
    457:465:android.os.Bundle getBrowserRootHints() -> getBrowserRootHints
    470:474:androidx.media.MediaSessionManager$RemoteUserInfo getCurrentBrowserInfo() -> getCurrentBrowserInfo
    336:338:void notifyChildrenChanged(java.lang.String,android.os.Bundle) -> notifyChildrenChanged
    344:345:void notifyChildrenChanged(androidx.media.MediaSessionManager$RemoteUserInfo,java.lang.String,android.os.Bundle) -> notifyChildrenChanged
    416:425:void notifyChildrenChangedForCompat(java.lang.String,android.os.Bundle) -> notifyChildrenChangedForCompat
    429:440:void notifyChildrenChangedForCompat(androidx.media.MediaSessionManager$RemoteUserInfo,java.lang.String,android.os.Bundle) -> notifyChildrenChangedForCompat
    445:453:void notifyChildrenChangedForCompatOnHandler(androidx.media.MediaBrowserServiceCompat$ConnectionRecord,java.lang.String,android.os.Bundle) -> notifyChildrenChangedForCompatOnHandler
    412:413:void notifyChildrenChangedForFramework(java.lang.String,android.os.Bundle) -> notifyChildrenChangedForFramework
    311:311:android.os.IBinder onBind(android.content.Intent) -> onBind
    304:307:void onCreate() -> onCreate
    350:381:androidx.media.MediaBrowserServiceCompatApi21$BrowserRoot onGetRoot(java.lang.String,int,android.os.Bundle) -> onGetRoot
    387:409:void onLoadChildren(java.lang.String,androidx.media.MediaBrowserServiceCompatApi21$ResultWrapper) -> onLoadChildren
    316:332:void setSessionToken(android.support.v4.media.session.MediaSessionCompat$Token) -> setSessionToken
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21$1 -> androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21$1:
    316:316:void <init>(androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21,android.support.v4.media.session.MediaSessionCompat$Token) -> <init>
    319:330:void run() -> run
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21$2 -> androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21$2:
    388:388:void <init>(androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21,java.lang.Object,androidx.media.MediaBrowserServiceCompatApi21$ResultWrapper) -> <init>
    405:406:void detach() -> detach
    388:388:void onResultSent(java.lang.Object) -> onResultSent
    391:401:void onResultSent(java.util.List) -> onResultSent
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21$3 -> androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21$3:
    416:416:void <init>(androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21,java.lang.String,android.os.Bundle) -> <init>
    419:423:void run() -> run
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21$4 -> androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21$4:
    429:429:void <init>(androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi21,androidx.media.MediaSessionManager$RemoteUserInfo,java.lang.String,android.os.Bundle) -> <init>
    432:438:void run() -> run
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi23 -> androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi23:
    479:479:void <init>(androidx.media.MediaBrowserServiceCompat) -> <init>
    483:486:void onCreate() -> onCreate
    491:510:void onLoadItem(java.lang.String,androidx.media.MediaBrowserServiceCompatApi21$ResultWrapper) -> onLoadItem
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi23$1 -> androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi23$1:
    492:492:void <init>(androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi23,java.lang.Object,androidx.media.MediaBrowserServiceCompatApi21$ResultWrapper) -> <init>
    506:507:void detach() -> detach
    492:492:void onResultSent(java.lang.Object) -> onResultSent
    495:502:void onResultSent(android.support.v4.media.MediaBrowserCompat$MediaItem) -> onResultSent
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi26 -> androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi26:
    514:514:void <init>(androidx.media.MediaBrowserServiceCompat) -> <init>
    553:557:android.os.Bundle getBrowserRootHints() -> getBrowserRootHints
    562:568:void notifyChildrenChangedForFramework(java.lang.String,android.os.Bundle) -> notifyChildrenChangedForFramework
    518:521:void onCreate() -> onCreate
    526:548:void onLoadChildren(java.lang.String,androidx.media.MediaBrowserServiceCompatApi26$ResultWrapper,android.os.Bundle) -> onLoadChildren
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi26$1 -> androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi26$1:
    527:527:void <init>(androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi26,java.lang.Object,androidx.media.MediaBrowserServiceCompatApi26$ResultWrapper) -> <init>
    544:545:void detach() -> detach
    527:527:void onResultSent(java.lang.Object) -> onResultSent
    530:540:void onResultSent(java.util.List) -> onResultSent
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi28 -> androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplApi28:
    572:572:void <init>(androidx.media.MediaBrowserServiceCompat) -> <init>
    576:581:androidx.media.MediaSessionManager$RemoteUserInfo getCurrentBrowserInfo() -> getCurrentBrowserInfo
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase -> androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase:
    195:195:void <init>(androidx.media.MediaBrowserServiceCompat) -> <init>
    277:281:android.os.Bundle getBrowserRootHints() -> getBrowserRootHints
    286:290:androidx.media.MediaSessionManager$RemoteUserInfo getCurrentBrowserInfo() -> getCurrentBrowserInfo
    233:242:void notifyChildrenChanged(java.lang.String,android.os.Bundle) -> notifyChildrenChanged
    247:259:void notifyChildrenChanged(androidx.media.MediaSessionManager$RemoteUserInfo,java.lang.String,android.os.Bundle) -> notifyChildrenChanged
    264:273:void notifyChildrenChangedOnHandler(androidx.media.MediaBrowserServiceCompat$ConnectionRecord,java.lang.String,android.os.Bundle) -> notifyChildrenChangedOnHandler
    205:208:android.os.IBinder onBind(android.content.Intent) -> onBind
    200:201:void onCreate() -> onCreate
    213:229:void setSessionToken(android.support.v4.media.session.MediaSessionCompat$Token) -> setSessionToken
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase$1 -> androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase$1:
    213:213:void <init>(androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase,android.support.v4.media.session.MediaSessionCompat$Token) -> <init>
    216:227:void run() -> run
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase$2 -> androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase$2:
    233:233:void <init>(androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase,java.lang.String,android.os.Bundle) -> <init>
    236:240:void run() -> run
androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase$3 -> androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase$3:
    247:247:void <init>(androidx.media.MediaBrowserServiceCompat$MediaBrowserServiceImplBase,androidx.media.MediaSessionManager$RemoteUserInfo,java.lang.String,android.os.Bundle) -> <init>
    250:257:void run() -> run
androidx.media.MediaBrowserServiceCompat$Result -> androidx.media.MediaBrowserServiceCompat$Result:
    760:762:void <init>(java.lang.Object) -> <init>
    864:874:void checkExtraFields(android.os.Bundle) -> checkExtraFields
    812:825:void detach() -> detach
    836:836:int getFlags() -> getFlags
    828:828:boolean isDone() -> isDone
    859:859:void onErrorSent(android.os.Bundle) -> onErrorSent
    850:850:void onProgressUpdateSent(android.os.Bundle) -> onProgressUpdateSent
    844:844:void onResultSent(java.lang.Object) -> onResultSent
    799:805:void sendError(android.os.Bundle) -> sendError
    783:790:void sendProgressUpdate(android.os.Bundle) -> sendProgressUpdate
    768:774:void sendResult(java.lang.Object) -> sendResult
    832:833:void setFlags(int) -> setFlags
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl -> androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl:
    878:879:void <init>(androidx.media.MediaBrowserServiceCompat) -> <init>
    949:965:void addSubscription(java.lang.String,android.os.IBinder,android.os.Bundle,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks) -> addSubscription
    884:929:void connect(java.lang.String,int,int,android.os.Bundle,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks) -> connect
    932:945:void disconnect(androidx.media.MediaBrowserServiceCompat$ServiceCallbacks) -> disconnect
    991:1008:void getMediaItem(java.lang.String,android.support.v4.os.ResultReceiver,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks) -> getMediaItem
    1013:1030:void registerCallbacks(androidx.media.MediaBrowserServiceCompat$ServiceCallbacks,java.lang.String,int,int,android.os.Bundle) -> registerCallbacks
    969:987:void removeSubscription(java.lang.String,android.os.IBinder,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks) -> removeSubscription
    1048:1065:void search(java.lang.String,android.os.Bundle,android.support.v4.os.ResultReceiver,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks) -> search
    1069:1087:void sendCustomAction(java.lang.String,android.os.Bundle,android.support.v4.os.ResultReceiver,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks) -> sendCustomAction
    1034:1044:void unregisterCallbacks(androidx.media.MediaBrowserServiceCompat$ServiceCallbacks) -> unregisterCallbacks
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$1 -> androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$1:
    889:889:void <init>(androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks,java.lang.String,int,int,android.os.Bundle) -> <init>
    892:927:void run() -> run
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$2 -> androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$2:
    932:932:void <init>(androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks) -> <init>
    935:943:void run() -> run
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$3 -> androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$3:
    949:949:void <init>(androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks,java.lang.String,android.os.IBinder,android.os.Bundle) -> <init>
    952:963:void run() -> run
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$4 -> androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$4:
    969:969:void <init>(androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks,java.lang.String,android.os.IBinder) -> <init>
    972:985:void run() -> run
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$5 -> androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$5:
    995:995:void <init>(androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks,java.lang.String,android.support.v4.os.ResultReceiver) -> <init>
    998:1006:void run() -> run
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$6 -> androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$6:
    1013:1013:void <init>(androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks,java.lang.String,int,int,android.os.Bundle) -> <init>
    1016:1028:void run() -> run
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$7 -> androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$7:
    1034:1034:void <init>(androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks) -> <init>
    1037:1042:void run() -> run
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$8 -> androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$8:
    1052:1052:void <init>(androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks,java.lang.String,android.os.Bundle,android.support.v4.os.ResultReceiver) -> <init>
    1055:1063:void run() -> run
androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$9 -> androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl$9:
    1073:1073:void <init>(androidx.media.MediaBrowserServiceCompat$ServiceBinderImpl,androidx.media.MediaBrowserServiceCompat$ServiceCallbacks,java.lang.String,android.os.Bundle,android.support.v4.os.ResultReceiver) -> <init>
    1076:1085:void run() -> run
androidx.media.MediaBrowserServiceCompat$ServiceCallbacksCompat -> androidx.media.MediaBrowserServiceCompat$ServiceCallbacksCompat:
    1102:1104:void <init>(android.os.Messenger) -> <init>
    1108:1108:android.os.IBinder asBinder() -> asBinder
    1114:1123:void onConnect(java.lang.String,android.support.v4.media.session.MediaSessionCompat$Token,android.os.Bundle) -> onConnect
    1127:1128:void onConnectFailed() -> onConnectFailed
    1133:1142:void onLoadChildren(java.lang.String,java.util.List,android.os.Bundle,android.os.Bundle) -> onLoadChildren
    1145:1150:void sendRequest(int,android.os.Bundle) -> sendRequest
androidx.media.MediaBrowserServiceCompat$ServiceHandler -> androidx.media.MediaBrowserServiceCompat$ServiceHandler:
    586:589:void <init>(androidx.media.MediaBrowserServiceCompat) -> <init>
    593:676:void handleMessage(android.os.Message) -> handleMessage
    690:695:void postOrRun(java.lang.Runnable) -> postOrRun
    682:686:boolean sendMessageAtTime(android.os.Message,long) -> sendMessageAtTime
androidx.media.MediaBrowserServiceCompatApi21 -> androidx.media.MediaBrowserServiceCompatApi21:
    135:136:void <init>() -> <init>
    38:38:java.lang.Object createService(android.content.Context,androidx.media.MediaBrowserServiceCompatApi21$ServiceCompatProxy) -> createService
    54:55:void notifyChildrenChanged(java.lang.Object,java.lang.String) -> notifyChildrenChanged
    46:46:android.os.IBinder onBind(java.lang.Object,android.content.Intent) -> onBind
    42:43:void onCreate(java.lang.Object) -> onCreate
    50:51:void setSessionToken(java.lang.Object,java.lang.Object) -> setSessionToken
androidx.media.MediaBrowserServiceCompatApi21$BrowserRoot -> androidx.media.MediaBrowserServiceCompatApi21$BrowserRoot:
    105:108:void <init>(java.lang.String,android.os.Bundle) -> <init>
androidx.media.MediaBrowserServiceCompatApi21$MediaBrowserServiceAdaptor -> androidx.media.MediaBrowserServiceCompatApi21$MediaBrowserServiceAdaptor:
    114:117:void <init>(android.content.Context,androidx.media.MediaBrowserServiceCompatApi21$ServiceCompatProxy) -> <init>
    122:125:android.service.media.MediaBrowserService$BrowserRoot onGetRoot(java.lang.String,int,android.os.Bundle) -> onGetRoot
    131:132:void onLoadChildren(java.lang.String,android.service.media.MediaBrowserService$Result) -> onLoadChildren
androidx.media.MediaBrowserServiceCompatApi21$ResultWrapper -> androidx.media.MediaBrowserServiceCompatApi21$ResultWrapper:
    65:67:void <init>(android.service.media.MediaBrowserService$Result) -> <init>
    84:85:void detach() -> detach
    88:97:java.util.List parcelListToItemList(java.util.List) -> parcelListToItemList
    70:81:void sendResult(java.lang.Object) -> sendResult
androidx.media.MediaBrowserServiceCompatApi23 -> androidx.media.MediaBrowserServiceCompatApi23:
    49:50:void <init>() -> <init>
    29:29:java.lang.Object createService(android.content.Context,androidx.media.MediaBrowserServiceCompatApi23$ServiceCompatProxy) -> createService
androidx.media.MediaBrowserServiceCompatApi23$MediaBrowserServiceAdaptor -> androidx.media.MediaBrowserServiceCompatApi23$MediaBrowserServiceAdaptor:
    39:40:void <init>(android.content.Context,androidx.media.MediaBrowserServiceCompatApi23$ServiceCompatProxy) -> <init>
    44:46:void onLoadItem(java.lang.String,android.service.media.MediaBrowserService$Result) -> onLoadItem
androidx.media.MediaBrowserServiceCompatApi26 -> androidx.media.MediaBrowserServiceCompatApi26:
    41:46:void <clinit>() -> <clinit>
    113:114:void <init>() -> <init>
    49:49:java.lang.Object createService(android.content.Context,androidx.media.MediaBrowserServiceCompatApi26$ServiceCompatProxy) -> createService
    57:57:android.os.Bundle getBrowserRootHints(java.lang.Object) -> getBrowserRootHints
    53:54:void notifyChildrenChanged(java.lang.Object,java.lang.String,android.os.Bundle) -> notifyChildrenChanged
androidx.media.MediaBrowserServiceCompatApi26$MediaBrowserServiceAdaptor -> androidx.media.MediaBrowserServiceCompatApi26$MediaBrowserServiceAdaptor:
    101:102:void <init>(android.content.Context,androidx.media.MediaBrowserServiceCompatApi26$ServiceCompatProxy) -> <init>
    107:110:void onLoadChildren(java.lang.String,android.service.media.MediaBrowserService$Result,android.os.Bundle) -> onLoadChildren
androidx.media.MediaBrowserServiceCompatApi26$ResultWrapper -> androidx.media.MediaBrowserServiceCompatApi26$ResultWrapper:
    67:69:void <init>(android.service.media.MediaBrowserService$Result) -> <init>
    81:82:void detach() -> detach
    85:94:java.util.List parcelListToItemList(java.util.List) -> parcelListToItemList
    73:78:void sendResult(java.util.List,int) -> sendResult
androidx.media.MediaSessionManager -> androidx.media.MediaSessionManager:
    42:44:void <clinit>() -> <clinit>
    68:76:void <init>(android.content.Context) -> <init>
    98:98:android.content.Context getContext() -> getContext
    55:65:androidx.media.MediaSessionManager getSessionManager(android.content.Context) -> getSessionManager
    91:94:boolean isTrustedForMediaControl(androidx.media.MediaSessionManager$RemoteUserInfo) -> isTrustedForMediaControl
androidx.media.MediaSessionManager$RemoteUserInfo -> androidx.media.MediaSessionManager$RemoteUserInfo:
    140:149:void <init>(java.lang.String,int,int) -> <init>
    163:165:void <init>(android.media.session.MediaSessionManager$RemoteUserInfo) -> <init>
    208:214:boolean equals(java.lang.Object) -> equals
    172:172:java.lang.String getPackageName() -> getPackageName
    179:179:int getPid() -> getPid
    186:186:int getUid() -> getUid
    219:219:int hashCode() -> hashCode
androidx.media.MediaSessionManagerImplApi21 -> androidx.media.MediaSessionManagerImplApi21:
    28:30:void <init>(android.content.Context) -> <init>
    44:46:boolean hasMediaControlPermission(androidx.media.MediaSessionManager$RemoteUserInfoImpl) -> hasMediaControlPermission
    36:36:boolean isTrustedForMediaControl(androidx.media.MediaSessionManager$RemoteUserInfoImpl) -> isTrustedForMediaControl
androidx.media.MediaSessionManagerImplApi28 -> androidx.media.MediaSessionManagerImplApi28:
    29:32:void <init>(android.content.Context) -> <init>
    36:39:boolean isTrustedForMediaControl(androidx.media.MediaSessionManager$RemoteUserInfoImpl) -> isTrustedForMediaControl
androidx.media.MediaSessionManagerImplApi28$RemoteUserInfoImplApi28 -> androidx.media.MediaSessionManagerImplApi28$RemoteUserInfoImplApi28:
    45:48:void <init>(java.lang.String,int,int) -> <init>
    51:53:void <init>(android.media.session.MediaSessionManager$RemoteUserInfo) -> <init>
    77:84:boolean equals(java.lang.Object) -> equals
    57:57:java.lang.String getPackageName() -> getPackageName
    62:62:int getPid() -> getPid
    67:67:int getUid() -> getUid
    72:72:int hashCode() -> hashCode
androidx.media.MediaSessionManagerImplBase -> androidx.media.MediaSessionManagerImplBase:
    34:34:void <clinit>() -> <clinit>
    45:48:void <init>(android.content.Context) -> <init>
    52:52:android.content.Context getContext() -> getContext
    103:117:boolean isEnabledNotificationListener(androidx.media.MediaSessionManager$RemoteUserInfoImpl) -> isEnabledNotificationListener
    84:89:boolean isPermissionGranted(androidx.media.MediaSessionManager$RemoteUserInfoImpl,java.lang.String) -> isPermissionGranted
    60:79:boolean isTrustedForMediaControl(androidx.media.MediaSessionManager$RemoteUserInfoImpl) -> isTrustedForMediaControl
androidx.media.MediaSessionManagerImplBase$RemoteUserInfoImplBase -> androidx.media.MediaSessionManagerImplBase$RemoteUserInfoImplBase:
    125:129:void <init>(java.lang.String,int,int) -> <init>
    148:155:boolean equals(java.lang.Object) -> equals
    133:133:java.lang.String getPackageName() -> getPackageName
    138:138:int getPid() -> getPid
    143:143:int getUid() -> getUid
    162:162:int hashCode() -> hashCode
androidx.media.VolumeProviderCompat -> androidx.media.VolumeProviderCompat:
    82:86:void <init>(int,int,int) -> <init>
    94:94:int getCurrentVolume() -> getCurrentVolume
    113:113:int getMaxVolume() -> getMaxVolume
    104:104:int getVolumeControl() -> getVolumeControl
    168:184:java.lang.Object getVolumeProvider() -> getVolumeProvider
    147:147:void onAdjustVolume(int) -> onAdjustVolume
    139:139:void onSetVolumeTo(int) -> onSetVolumeTo
    156:157:void setCallback(androidx.media.VolumeProviderCompat$Callback) -> setCallback
    123:131:void setCurrentVolume(int) -> setCurrentVolume
androidx.media.VolumeProviderCompat$1 -> androidx.media.VolumeProviderCompat$1:
    171:171:void <init>(androidx.media.VolumeProviderCompat) -> <init>
    180:181:void onAdjustVolume(int) -> onAdjustVolume
    175:176:void onSetVolumeTo(int) -> onSetVolumeTo
androidx.media.VolumeProviderCompat$Callback -> androidx.media.VolumeProviderCompat$Callback:
    190:190:void <init>() -> <init>
androidx.media.VolumeProviderCompatApi21 -> androidx.media.VolumeProviderCompatApi21:
    49:50:void <init>() -> <init>
    27:27:java.lang.Object createVolumeProvider(int,int,int,androidx.media.VolumeProviderCompatApi21$Delegate) -> createVolumeProvider
    41:42:void setCurrentVolume(java.lang.Object,int) -> setCurrentVolume
androidx.media.VolumeProviderCompatApi21$1 -> androidx.media.VolumeProviderCompatApi21$1:
    27:27:void <init>(int,int,int,androidx.media.VolumeProviderCompatApi21$Delegate) -> <init>
    35:36:void onAdjustVolume(int) -> onAdjustVolume
    30:31:void onSetVolumeTo(int) -> onSetVolumeTo
androidx.media.app.NotificationCompat -> androidx.media.app.NotificationCompat:
    45:46:void <init>() -> <init>
androidx.media.app.NotificationCompat$DecoratedMediaCustomViewStyle -> androidx.media.app.NotificationCompat$DecoratedMediaCustomViewStyle:
    379:380:void <init>() -> <init>
    388:394:void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> apply
    465:465:int getBigContentViewLayoutResource(int) -> getBigContentViewLayoutResource
    433:435:int getContentViewLayoutResource() -> getContentViewLayoutResource
    444:460:android.widget.RemoteViews makeBigContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> makeBigContentView
    402:428:android.widget.RemoteViews makeContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> makeContentView
    476:492:android.widget.RemoteViews makeHeadsUpContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> makeHeadsUpContentView
    496:501:void setBackgroundColor(android.widget.RemoteViews) -> setBackgroundColor
androidx.media.app.NotificationCompat$MediaStyle -> androidx.media.app.NotificationCompat$MediaStyle:
    130:136:void <init>() -> <init>
    130:140:void <init>(androidx.core.app.NotificationCompat$Builder) -> <init>
    210:216:void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> apply
    220:226:android.app.Notification$MediaStyle fillInMediaStyle(android.app.Notification$MediaStyle) -> fillInMediaStyle
    311:330:android.widget.RemoteViews generateBigContentView() -> generateBigContentView
    243:275:android.widget.RemoteViews generateContentView() -> generateContentView
    280:290:android.widget.RemoteViews generateMediaActionButton(androidx.core.app.NotificationCompat$Action) -> generateMediaActionButton
    334:334:int getBigContentViewLayoutResource(int) -> getBigContentViewLayoutResource
    294:294:int getContentViewLayoutResource() -> getContentViewLayoutResource
    102:124:android.support.v4.media.session.MediaSessionCompat$Token getMediaSession(android.app.Notification) -> getMediaSession
    303:307:android.widget.RemoteViews makeBigContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> makeBigContentView
    235:239:android.widget.RemoteViews makeContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> makeContentView
    200:201:androidx.media.app.NotificationCompat$MediaStyle setCancelButtonIntent(android.app.PendingIntent) -> setCancelButtonIntent
    158:159:androidx.media.app.NotificationCompat$MediaStyle setMediaSession(android.support.v4.media.session.MediaSessionCompat$Token) -> setMediaSession
    149:150:androidx.media.app.NotificationCompat$MediaStyle setShowActionsInCompactView(int[]) -> setShowActionsInCompactView
    187:190:androidx.media.app.NotificationCompat$MediaStyle setShowCancelButton(boolean) -> setShowCancelButton
androidx.media.session.MediaButtonReceiver -> androidx.media.session.MediaButtonReceiver:
    100:135:void <init>() -> <init>
    228:234:android.app.PendingIntent buildMediaButtonPendingIntent(android.content.Context,long) -> buildMediaButtonPendingIntent
    261:274:android.app.PendingIntent buildMediaButtonPendingIntent(android.content.Context,android.content.ComponentName,long) -> buildMediaButtonPendingIntent
    282:294:android.content.ComponentName getMediaButtonReceiverComponent(android.content.Context) -> getMediaButtonReceiverComponent
    306:318:android.content.ComponentName getServiceComponentByAction(android.content.Context,java.lang.String) -> getServiceComponentByAction
    194:202:android.view.KeyEvent handleIntent(android.support.v4.media.session.MediaSessionCompat,android.content.Intent) -> handleIntent
    105:131:void onReceive(android.content.Context,android.content.Intent) -> onReceive
    298:303:void startForegroundService(android.content.Context,android.content.Intent) -> startForegroundService
androidx.media.session.MediaButtonReceiver$MediaButtonConnectionCallback -> androidx.media.session.MediaButtonReceiver$MediaButtonConnectionCallback:
    143:147:void <init>(android.content.Context,android.content.Intent,android.content.BroadcastReceiver$PendingResult) -> <init>
    177:179:void finish() -> finish
    156:164:void onConnected() -> onConnected
    173:174:void onConnectionFailed() -> onConnectionFailed
    168:169:void onConnectionSuspended() -> onConnectionSuspended
    150:151:void setMediaBrowser(android.support.v4.media.MediaBrowserCompat) -> setMediaBrowser
androidx.print.PrintHelper -> androidx.print.PrintHelper:
    70:78:void <clinit>() -> <clinit>
    139:164:void <init>(android.content.Context) -> <init>
    816:831:android.graphics.Bitmap convertBitmapForColorMode(android.graphics.Bitmap,int) -> convertBitmapForColorMode
    558:573:android.print.PrintAttributes$Builder copyAttributes(android.print.PrintAttributes) -> copyAttributes
    210:210:int getColorMode() -> getColorMode
    589:606:android.graphics.Matrix getMatrix(int,int,android.graphics.RectF,int) -> getMatrix
    232:235:int getOrientation() -> getOrientation
    187:187:int getScaleMode() -> getScaleMode
    546:546:boolean isPortrait(android.graphics.Bitmap) -> isPortrait
    796:809:android.graphics.Bitmap loadBitmap(android.net.Uri,android.graphics.BitmapFactory$Options) -> loadBitmap
    746:787:android.graphics.Bitmap loadConstrainedBitmap(android.net.Uri) -> loadConstrainedBitmap
    246:247:void printBitmap(java.lang.String,android.graphics.Bitmap) -> printBitmap
    258:277:void printBitmap(java.lang.String,android.graphics.Bitmap,androidx.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
    340:341:void printBitmap(java.lang.String,android.net.Uri) -> printBitmap
    356:376:void printBitmap(java.lang.String,android.net.Uri,androidx.print.PrintHelper$OnPrintFinishCallback) -> printBitmap
    199:200:void setColorMode(int) -> setColorMode
    221:222:void setOrientation(int) -> setOrientation
    176:177:void setScaleMode(int) -> setScaleMode
    154:154:boolean systemSupportsPrint() -> systemSupportsPrint
    626:735:void writeBitmap(android.print.PrintAttributes,int,android.graphics.Bitmap,android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> writeBitmap
androidx.print.PrintHelper$1 -> androidx.print.PrintHelper$1:
    635:635:void <init>(androidx.print.PrintHelper,android.os.CancellationSignal,android.print.PrintAttributes,android.graphics.Bitmap,android.print.PrintAttributes,int,android.os.ParcelFileDescriptor,android.print.PrintDocumentAdapter$WriteResultCallback) -> <init>
    635:635:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    639:715:java.lang.Throwable doInBackground(java.lang.Void[]) -> doInBackground
    635:635:void onPostExecute(java.lang.Object) -> onPostExecute
    721:733:void onPostExecute(java.lang.Throwable) -> onPostExecute
androidx.print.PrintHelper$PrintBitmapAdapter -> androidx.print.PrintHelper$PrintBitmapAdapter:
    288:293:void <init>(androidx.print.PrintHelper,java.lang.String,int,android.graphics.Bitmap,androidx.print.PrintHelper$OnPrintFinishCallback) -> <init>
    323:326:void onFinish() -> onFinish
    302:310:void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle) -> onLayout
    317:319:void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> onWrite
androidx.print.PrintHelper$PrintUriAdapter -> androidx.print.PrintHelper$PrintUriAdapter:
    389:395:void <init>(androidx.print.PrintHelper,java.lang.String,android.net.Uri,androidx.print.PrintHelper$OnPrintFinishCallback,int) -> <init>
    502:511:void cancelLoad() -> cancelLoad
    515:527:void onFinish() -> onFinish
    404:498:void onLayout(android.print.PrintAttributes,android.print.PrintAttributes,android.os.CancellationSignal,android.print.PrintDocumentAdapter$LayoutResultCallback,android.os.Bundle) -> onLayout
    533:535:void onWrite(android.print.PageRange[],android.os.ParcelFileDescriptor,android.os.CancellationSignal,android.print.PrintDocumentAdapter$WriteResultCallback) -> onWrite
androidx.print.PrintHelper$PrintUriAdapter$1 -> androidx.print.PrintHelper$PrintUriAdapter$1:
    424:424:void <init>(androidx.print.PrintHelper$PrintUriAdapter,android.os.CancellationSignal,android.print.PrintAttributes,android.print.PrintAttributes,android.print.PrintDocumentAdapter$LayoutResultCallback) -> <init>
    424:424:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    441:445:android.graphics.Bitmap doInBackground(android.net.Uri[]) -> doInBackground
    424:424:void onCancelled(java.lang.Object) -> onCancelled
    494:496:void onCancelled(android.graphics.Bitmap) -> onCancelled
    424:424:void onPostExecute(java.lang.Object) -> onPostExecute
    450:489:void onPostExecute(android.graphics.Bitmap) -> onPostExecute
    428:436:void onPreExecute() -> onPreExecute
androidx.print.PrintHelper$PrintUriAdapter$1$1 -> androidx.print.PrintHelper$PrintUriAdapter$1$1:
    429:429:void <init>(androidx.print.PrintHelper$PrintUriAdapter$1) -> <init>
    432:434:void onCancel() -> onCancel
androidx.recyclerview.widget.AdapterHelper -> androidx.recyclerview.widget.AdapterHelper:
    72:73:void <init>(androidx.recyclerview.widget.AdapterHelper$Callback) -> <init>
    55:79:void <init>(androidx.recyclerview.widget.AdapterHelper$Callback,boolean) -> <init>
    82:83:androidx.recyclerview.widget.AdapterHelper addUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp[]) -> addUpdateOp
    432:433:void applyAdd(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyAdd
    130:131:void applyMove(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyMove
    588:620:int applyPendingUpdatesToPosition(int) -> applyPendingUpdatesToPosition
    134:185:void applyRemove(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyRemove
    188:225:void applyUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyUpdate
    411:428:boolean canFindInPreLayout(int) -> canFindInPreLayout
    119:125:void consumePostponedUpdates() -> consumePostponedUpdates
    557:585:void consumeUpdatesInOnePass() -> consumeUpdatesInOnePass
    231:312:void dispatchAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> dispatchAndUpdateViewHolders
    315:327:void dispatchFirstPassAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp,int) -> dispatchFirstPassAndUpdateViewHolders
    468:468:int findPositionOffset(int) -> findPositionOffset
    472:497:int findPositionOffset(int,int) -> findPositionOffset
    464:464:boolean hasAnyUpdateTypes(int) -> hasAnyUpdateTypes
    460:460:boolean hasPendingUpdates() -> hasPendingUpdates
    624:624:boolean hasUpdates() -> hasUpdates
    727:736:androidx.recyclerview.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int,java.lang.Object) -> obtainUpdateOp
    504:509:boolean onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    516:521:boolean onItemRangeInserted(int,int) -> onItemRangeInserted
    540:548:boolean onItemRangeMoved(int,int,int) -> onItemRangeMoved
    528:533:boolean onItemRangeRemoved(int,int) -> onItemRangeRemoved
    439:457:void postponeAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> postponeAndUpdateViewHolders
    93:116:void preProcess() -> preProcess
    741:745:void recycleUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> recycleUpdateOp
    748:753:void recycleUpdateOpsAndClearList(java.util.List) -> recycleUpdateOpsAndClearList
    87:90:void reset() -> reset
    330:407:int updatePositionWithPostponed(int,int) -> updatePositionWithPostponed
androidx.recyclerview.widget.AdapterHelper$UpdateOp -> androidx.recyclerview.widget.AdapterHelper$UpdateOp:
    651:656:void <init>(int,int,int,java.lang.Object) -> <init>
    659:669:java.lang.String cmdToString() -> cmdToString
    681:713:boolean equals(java.lang.Object) -> equals
    718:721:int hashCode() -> hashCode
    674:675:java.lang.String toString() -> toString
androidx.recyclerview.widget.AdapterListUpdateCallback -> androidx.recyclerview.widget.AdapterListUpdateCallback:
    35:37:void <init>(androidx.recyclerview.widget.RecyclerView$Adapter) -> <init>
    60:61:void onChanged(int,int,java.lang.Object) -> onChanged
    42:43:void onInserted(int,int) -> onInserted
    54:55:void onMoved(int,int) -> onMoved
    48:49:void onRemoved(int,int) -> onRemoved
androidx.recyclerview.widget.AsyncDifferConfig -> androidx.recyclerview.widget.AsyncDifferConfig:
    46:50:void <init>(java.util.concurrent.Executor,java.util.concurrent.Executor,androidx.recyclerview.widget.DiffUtil$ItemCallback) -> <init>
    63:63:java.util.concurrent.Executor getBackgroundThreadExecutor() -> getBackgroundThreadExecutor
    69:69:androidx.recyclerview.widget.DiffUtil$ItemCallback getDiffCallback() -> getDiffCallback
    57:57:java.util.concurrent.Executor getMainThreadExecutor() -> getMainThreadExecutor
androidx.recyclerview.widget.AsyncDifferConfig$Builder -> androidx.recyclerview.widget.AsyncDifferConfig$Builder:
    142:143:void <clinit>() -> <clinit>
    82:84:void <init>(androidx.recyclerview.widget.DiffUtil$ItemCallback) -> <init>
    127:135:androidx.recyclerview.widget.AsyncDifferConfig build() -> build
    116:117:androidx.recyclerview.widget.AsyncDifferConfig$Builder setBackgroundThreadExecutor(java.util.concurrent.Executor) -> setBackgroundThreadExecutor
    100:101:androidx.recyclerview.widget.AsyncDifferConfig$Builder setMainThreadExecutor(java.util.concurrent.Executor) -> setMainThreadExecutor
androidx.recyclerview.widget.AsyncListDiffer -> androidx.recyclerview.widget.AsyncListDiffer:
    131:131:void <clinit>() -> <clinit>
    145:147:void <init>(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.DiffUtil$ItemCallback) -> <init>
    161:180:void <init>(androidx.recyclerview.widget.ListUpdateCallback,androidx.recyclerview.widget.AsyncDifferConfig) -> <init>
    199:199:java.util.List getCurrentList() -> getCurrentList
    315:319:void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult) -> latchList
    215:311:void submitList(java.util.List) -> submitList
androidx.recyclerview.widget.AsyncListDiffer$1 -> androidx.recyclerview.widget.AsyncListDiffer$1:
    243:243:void <init>(androidx.recyclerview.widget.AsyncListDiffer,java.util.List,java.util.List,int) -> <init>
    246:309:void run() -> run
androidx.recyclerview.widget.AsyncListDiffer$1$1 -> androidx.recyclerview.widget.AsyncListDiffer$1$1:
    246:246:void <init>(androidx.recyclerview.widget.AsyncListDiffer$1) -> <init>
    270:282:boolean areContentsTheSame(int,int) -> areContentsTheSame
    259:265:boolean areItemsTheSame(int,int) -> areItemsTheSame
    288:297:java.lang.Object getChangePayload(int,int) -> getChangePayload
    254:254:int getNewListSize() -> getNewListSize
    249:249:int getOldListSize() -> getOldListSize
androidx.recyclerview.widget.AsyncListDiffer$1$2 -> androidx.recyclerview.widget.AsyncListDiffer$1$2:
    301:301:void <init>(androidx.recyclerview.widget.AsyncListDiffer$1,androidx.recyclerview.widget.DiffUtil$DiffResult) -> <init>
    304:307:void run() -> run
androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor -> androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor:
    122:123:void <init>() -> <init>
    126:127:void execute(java.lang.Runnable) -> execute
androidx.recyclerview.widget.AsyncListUtil -> androidx.recyclerview.widget.AsyncListUtil:
    64:293:void <init>(java.lang.Class,int,androidx.recyclerview.widget.AsyncListUtil$DataCallback,androidx.recyclerview.widget.AsyncListUtil$ViewCallback) -> <init>
    155:162:java.lang.Object getItem(int) -> getItem
    175:175:int getItemCount() -> getItemCount
    107:107:boolean isRefreshPending() -> isRefreshPending
    79:80:void log(java.lang.String,java.lang.Object[]) -> log
    119:124:void onRangeChanged() -> onRangeChanged
    133:135:void refresh() -> refresh
    179:209:void updateRange() -> updateRange
androidx.recyclerview.widget.AsyncListUtil$1 -> androidx.recyclerview.widget.AsyncListUtil$1:
    212:212:void <init>(androidx.recyclerview.widget.AsyncListUtil) -> <init>
    233:260:void addTile(int,androidx.recyclerview.widget.TileList$Tile) -> addTile
    289:289:boolean isRequestedGeneration(int) -> isRequestedGeneration
    282:286:void recycleAllTiles() -> recycleAllTiles
    264:276:void removeTile(int,int) -> removeTile
    218:229:void updateItemCount(int,int) -> updateItemCount
androidx.recyclerview.widget.AsyncListUtil$2 -> androidx.recyclerview.widget.AsyncListUtil$2:
    294:298:void <init>(androidx.recyclerview.widget.AsyncListUtil) -> <init>
    392:397:androidx.recyclerview.widget.TileList$Tile acquireTile() -> acquireTile
    405:410:void addTile(androidx.recyclerview.widget.TileList$Tile) -> addTile
    421:438:void flushTileCache(int) -> flushTileCache
    350:350:int getTileStart(int) -> getTileStart
    401:401:boolean isTileLoaded(int) -> isTileLoaded
    366:378:void loadTile(int,int) -> loadTile
    441:442:void log(java.lang.String,java.lang.Object[]) -> log
    385:389:void recycleTile(androidx.recyclerview.widget.TileList$Tile) -> recycleTile
    308:312:void refresh(int) -> refresh
    413:418:void removeTile(int) -> removeTile
    355:362:void requestTiles(int,int,int,boolean) -> requestTiles
    322:347:void updateRange(int,int,int,int,int) -> updateRange
androidx.recyclerview.widget.AsyncListUtil$DataCallback -> androidx.recyclerview.widget.AsyncListUtil$DataCallback:
    451:451:void <init>() -> <init>
    511:511:int getMaxCachedTiles() -> getMaxCachedTiles
    489:489:void recycleData(java.lang.Object[],int) -> recycleData
androidx.recyclerview.widget.AsyncListUtil$ViewCallback -> androidx.recyclerview.widget.AsyncListUtil$ViewCallback:
    521:521:void <init>() -> <init>
    577:581:void extendRangeInto(int[],int[],int) -> extendRangeInto
androidx.recyclerview.widget.BatchingListUpdateCallback -> androidx.recyclerview.widget.BatchingListUpdateCallback:
    41:48:void <init>(androidx.recyclerview.widget.ListUpdateCallback) -> <init>
    56:72:void dispatchLastEvent() -> dispatchLastEvent
    110:124:void onChanged(int,int,java.lang.Object) -> onChanged
    76:86:void onInserted(int,int) -> onInserted
    104:106:void onMoved(int,int) -> onMoved
    90:100:void onRemoved(int,int) -> onRemoved
androidx.recyclerview.widget.ChildHelper -> androidx.recyclerview.widget.ChildHelper:
    48:52:void <init>(androidx.recyclerview.widget.ChildHelper$Callback) -> <init>
    85:86:void addView(android.view.View,boolean) -> addView
    98:111:void addView(android.view.View,int,boolean) -> addView
    230:244:void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean) -> attachViewToParent
    282:288:void detachViewFromParent(int) -> detachViewFromParent
    206:216:android.view.View findHiddenNonRemovedView(int) -> findHiddenNonRemovedView
    180:181:android.view.View getChildAt(int) -> getChildAt
    253:253:int getChildCount() -> getChildCount
    114:131:int getOffset(int) -> getOffset
    273:273:android.view.View getUnfilteredChildAt(int) -> getUnfilteredChildAt
    263:263:int getUnfilteredChildCount() -> getUnfilteredChildCount
    328:340:void hide(android.view.View) -> hide
    60:62:void hideViewInternal(android.view.View) -> hideViewInternal
    297:309:int indexOfChild(android.view.View) -> indexOfChild
    319:319:boolean isHidden(android.view.View) -> isHidden
    188:197:void removeAllViewsUnfiltered() -> removeAllViewsUnfiltered
    140:151:void removeView(android.view.View) -> removeView
    160:172:void removeViewAt(int) -> removeViewAt
    373:389:boolean removeViewIfHidden(android.view.View) -> removeViewIfHidden
    363:363:java.lang.String toString() -> toString
    350:359:void unhide(android.view.View) -> unhide
    70:74:boolean unhideViewInternal(android.view.View) -> unhideViewInternal
androidx.recyclerview.widget.ChildHelper$Bucket -> androidx.recyclerview.widget.ChildHelper$Bucket:
    395:401:void <init>() -> <init>
    421:429:void clear(int) -> clear
    493:502:int countOnesBefore(int) -> countOnesBefore
    415:418:void ensureNext() -> ensureNext
    432:436:boolean get(int) -> get
    448:467:void insert(int,boolean) -> insert
    470:488:boolean remove(int) -> remove
    441:445:void reset() -> reset
    406:412:void set(int) -> set
    508:509:java.lang.String toString() -> toString
androidx.recyclerview.widget.DefaultItemAnimator -> androidx.recyclerview.widget.DefaultItemAnimator:
    38:70:void <init>() -> <init>
    222:225:boolean animateAdd(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateAdd
    229:252:void animateAddImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateAddImpl
    321:344:boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateChange
    348:397:void animateChangeImpl(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo) -> animateChangeImpl
    257:274:boolean animateMove(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateMove
    278:316:void animateMoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateMoveImpl
    193:195:boolean animateRemove(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateRemove
    199:218:void animateRemoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateRemoveImpl
    665:665:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List) -> canReuseUpdatedViewHolder
    641:644:void cancelAll(java.util.List) -> cancelAll
    550:553:void dispatchFinishedWhenDone() -> dispatchFinishedWhenDone
    437:519:void endAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> endAnimation
    557:638:void endAnimations() -> endAnimations
    400:408:void endChangeAnimation(java.util.List,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> endChangeAnimation
    411:417:void endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo) -> endChangeAnimationIfNecessary
    419:432:boolean endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> endChangeAnimationIfNecessary
    531:541:boolean isRunning() -> isRunning
    522:527:void resetAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> resetAnimation
    102:189:void runPendingAnimations() -> runPendingAnimations
androidx.recyclerview.widget.DefaultItemAnimator$1 -> androidx.recyclerview.widget.DefaultItemAnimator$1:
    121:121:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    124:130:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$2 -> androidx.recyclerview.widget.DefaultItemAnimator$2:
    145:145:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    148:153:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$3 -> androidx.recyclerview.widget.DefaultItemAnimator$3:
    168:168:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    171:176:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$4 -> androidx.recyclerview.widget.DefaultItemAnimator$4:
    203:203:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    211:216:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    206:207:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$5 -> androidx.recyclerview.widget.DefaultItemAnimator$5:
    233:233:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,android.view.View,android.view.ViewPropertyAnimator) -> <init>
    241:242:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    246:250:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    236:237:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$6 -> androidx.recyclerview.widget.DefaultItemAnimator$6:
    292:292:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,android.view.View,int,android.view.ViewPropertyAnimator) -> <init>
    300:306:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    310:314:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    295:296:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$7 -> androidx.recyclerview.widget.DefaultItemAnimator$7:
    358:358:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    366:373:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    361:362:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$8 -> androidx.recyclerview.widget.DefaultItemAnimator$8:
    380:380:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    387:394:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    383:384:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo -> androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo:
    73:76:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> <init>
    80:85:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> <init>
    89:89:java.lang.String toString() -> toString
androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo -> androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo:
    61:67:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> <init>
androidx.recyclerview.widget.DiffUtil -> androidx.recyclerview.widget.DiffUtil:
    84:84:void <clinit>() -> <clinit>
    80:82:void <init>() -> <init>
    105:105:androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback) -> calculateDiff
    123:198:androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean) -> calculateDiff
    204:287:androidx.recyclerview.widget.DiffUtil$Snake diffPartial(androidx.recyclerview.widget.DiffUtil$Callback,int,int,int,int,int[],int[],int) -> diffPartial
androidx.recyclerview.widget.DiffUtil$1 -> androidx.recyclerview.widget.DiffUtil$1:
    84:84:void <init>() -> <init>
    84:84:int compare(java.lang.Object,java.lang.Object) -> compare
    87:88:int compare(androidx.recyclerview.widget.DiffUtil$Snake,androidx.recyclerview.widget.DiffUtil$Snake) -> compare
androidx.recyclerview.widget.DiffUtil$Callback -> androidx.recyclerview.widget.DiffUtil$Callback:
    295:295:void <init>() -> <init>
    360:360:java.lang.Object getChangePayload(int,int) -> getChangePayload
androidx.recyclerview.widget.DiffUtil$DiffResult -> androidx.recyclerview.widget.DiffUtil$DiffResult:
    567:579:void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean) -> <init>
    586:596:void addRootSnake() -> addRootSnake
    695:703:int convertNewPositionToOld(int) -> convertNewPositionToOld
    671:679:int convertOldPositionToNew(int) -> convertOldPositionToNew
    873:909:void dispatchAdditions(java.util.List,androidx.recyclerview.widget.ListUpdateCallback,int,int,int) -> dispatchAdditions
    913:950:void dispatchRemovals(java.util.List,androidx.recyclerview.widget.ListUpdateCallback,int,int,int) -> dispatchRemovals
    802:803:void dispatchUpdatesTo(androidx.recyclerview.widget.RecyclerView$Adapter) -> dispatchUpdatesTo
    816:853:void dispatchUpdatesTo(androidx.recyclerview.widget.ListUpdateCallback) -> dispatchUpdatesTo
    646:650:void findAddition(int,int,int) -> findAddition
    723:766:boolean findMatchingItem(int,int,int,boolean) -> findMatchingItem
    610:643:void findMatchingItems() -> findMatchingItems
    653:657:void findRemoval(int,int,int) -> findRemoval
    954:954:java.util.List getSnakes() -> getSnakes
    857:868:androidx.recyclerview.widget.DiffUtil$PostponedUpdate removePostponedUpdate(java.util.List,int,boolean) -> removePostponedUpdate
androidx.recyclerview.widget.DiffUtil$ItemCallback -> androidx.recyclerview.widget.DiffUtil$ItemCallback:
    373:373:void <init>() -> <init>
    434:434:java.lang.Object getChangePayload(java.lang.Object,java.lang.Object) -> getChangePayload
androidx.recyclerview.widget.DiffUtil$PostponedUpdate -> androidx.recyclerview.widget.DiffUtil$PostponedUpdate:
    973:977:void <init>(int,int,boolean) -> <init>
androidx.recyclerview.widget.DiffUtil$Range -> androidx.recyclerview.widget.DiffUtil$Range:
    482:483:void <init>() -> <init>
    485:490:void <init>(int,int,int,int) -> <init>
androidx.recyclerview.widget.DiffUtil$Snake -> androidx.recyclerview.widget.DiffUtil$Snake:
    442:442:void <init>() -> <init>
androidx.recyclerview.widget.DividerItemDecoration -> androidx.recyclerview.widget.DividerItemDecoration:
    47:47:void <clinit>() -> <clinit>
    56:74:void <init>(android.content.Context,int) -> <init>
    142:166:void drawHorizontal(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView) -> drawHorizontal
    115:139:void drawVertical(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView) -> drawVertical
    171:180:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
    104:112:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDraw
    96:100:void setDrawable(android.graphics.drawable.Drawable) -> setDrawable
    83:88:void setOrientation(int) -> setOrientation
androidx.recyclerview.widget.FastScroller -> androidx.recyclerview.widget.FastScroller:
    74:75:void <clinit>() -> <clinit>
    104:161:void <init>(androidx.recyclerview.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int) -> <init>
    164:174:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> attachToRecyclerView
    267:268:void cancelHide() -> cancelHide
    183:187:void destroyCallbacks() -> destroyCallbacks
    325:338:void drawHorizontalScrollbar(android.graphics.Canvas) -> drawHorizontalScrollbar
    300:322:void drawVerticalScrollbar(android.graphics.Canvas) -> drawVerticalScrollbar
    551:553:int[] getHorizontalRange() -> getHorizontalRange
    525:525:android.graphics.drawable.Drawable getHorizontalThumbDrawable() -> getHorizontalThumbDrawable
    520:520:android.graphics.drawable.Drawable getHorizontalTrackDrawable() -> getHorizontalTrackDrawable
    542:544:int[] getVerticalRange() -> getVerticalRange
    535:535:android.graphics.drawable.Drawable getVerticalThumbDrawable() -> getVerticalThumbDrawable
    530:530:android.graphics.drawable.Drawable getVerticalTrackDrawable() -> getVerticalTrackDrawable
    248:249:void hide() -> hide
    253:264:void hide(int) -> hide
    470:484:void horizontalScrollTo(float) -> horizontalScrollTo
    220:220:boolean isDragging() -> isDragging
    228:228:boolean isHidden() -> isHidden
    216:216:boolean isLayoutRTL() -> isLayoutRTL
    513:513:boolean isPointInsideHorizontalThumb(float,float) -> isPointInsideHorizontalThumb
    505:505:boolean isPointInsideVerticalThumb(float,float) -> isPointInsideVerticalThumb
    224:224:boolean isVisible() -> isVisible
    277:297:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
    390:413:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    452:452:void onRequestDisallowInterceptTouchEvent(boolean) -> onRequestDisallowInterceptTouchEvent
    418:449:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
    191:192:void requestRedraw() -> requestRedraw
    271:273:void resetHideDelay(int) -> resetHideDelay
    488:499:int scrollTo(float,float,int[],int,int,int) -> scrollTo
    195:213:void setState(int) -> setState
    177:180:void setupCallbacks() -> setupCallbacks
    233:245:void show() -> show
    348:384:void updateScrollPosition(int,int) -> updateScrollPosition
    455:467:void verticalScrollTo(float) -> verticalScrollTo
androidx.recyclerview.widget.FastScroller$1 -> androidx.recyclerview.widget.FastScroller$1:
    123:123:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    126:127:void run() -> run
androidx.recyclerview.widget.FastScroller$2 -> androidx.recyclerview.widget.FastScroller$2:
    130:130:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    133:135:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
androidx.recyclerview.widget.FastScroller$AnimatorListener -> androidx.recyclerview.widget.FastScroller$AnimatorListener:
    558:561:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    581:582:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    566:577:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.recyclerview.widget.FastScroller$AnimatorUpdater -> androidx.recyclerview.widget.FastScroller$AnimatorUpdater:
    586:587:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    591:595:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.recyclerview.widget.GapWorker -> androidx.recyclerview.widget.GapWorker:
    31:188:void <clinit>() -> <clinit>
    29:63:void <init>() -> <init>
    161:162:void add(androidx.recyclerview.widget.RecyclerView) -> add
    215:260:void buildTaskList() -> buildTaskList
    342:351:void flushTaskWithDeadline(androidx.recyclerview.widget.GapWorker$Task,long) -> flushTaskWithDeadline
    354:362:void flushTasksWithDeadline(long) -> flushTasksWithDeadline
    263:272:boolean isPrefetchPositionAttached(androidx.recyclerview.widget.RecyclerView,int) -> isPrefetchPositionAttached
    175:186:void postFromTraversal(androidx.recyclerview.widget.RecyclerView,int,int) -> postFromTraversal
    365:367:void prefetch(long) -> prefetch
    310:339:void prefetchInnerRecyclerViewWithDeadline(androidx.recyclerview.widget.RecyclerView,long) -> prefetchInnerRecyclerViewWithDeadline
    277:305:androidx.recyclerview.widget.RecyclerView$ViewHolder prefetchPositionWithDeadline(androidx.recyclerview.widget.RecyclerView,int,long) -> prefetchPositionWithDeadline
    165:169:void remove(androidx.recyclerview.widget.RecyclerView) -> remove
    372:404:void run() -> run
androidx.recyclerview.widget.GapWorker$1 -> androidx.recyclerview.widget.GapWorker$1:
    188:188:void <init>() -> <init>
    188:188:int compare(java.lang.Object,java.lang.Object) -> compare
    192:209:int compare(androidx.recyclerview.widget.GapWorker$Task,androidx.recyclerview.widget.GapWorker$Task) -> compare
androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl -> androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl:
    63:63:void <init>() -> <init>
    110:134:void addPosition(int,int) -> addPosition
    150:154:void clearPrefetchPositions() -> clearPrefetchPositions
    77:106:void collectPrefetchPositionsFromView(androidx.recyclerview.widget.RecyclerView,boolean) -> collectPrefetchPositionsFromView
    137:143:boolean lastPrefetchIncludedPosition(int) -> lastPrefetchIncludedPosition
    72:74:void setPrefetchVector(int,int) -> setPrefetchVector
androidx.recyclerview.widget.GapWorker$Task -> androidx.recyclerview.widget.GapWorker$Task:
    37:37:void <init>() -> <init>
    45:50:void clear() -> clear
androidx.recyclerview.widget.GridLayoutManager -> androidx.recyclerview.widget.GridLayoutManager:
    44:75:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    44:86:void <init>(android.content.Context,int) -> <init>
    44:99:void <init>(android.content.Context,int,int,boolean) -> <init>
    771:788:void assignSpans(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int,boolean) -> assignSpans
    190:197:void cachePreLayoutSpanMapping() -> cachePreLayoutSpanMapping
    310:311:void calculateItemBorders(int) -> calculateItemBorders
    321:340:int[] calculateItemBorders(int[],int,int) -> calculateItemBorders
    252:252:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    185:187:void clearPreLayoutSpanMappingCache() -> clearPreLayoutSpanMappingCache
    511:521:void collectPrefetchPositionsForLayoutState(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectPrefetchPositionsForLayoutState
    387:412:void ensureAnchorIsInCorrectSpan(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int) -> ensureAnchorIsInCorrectSpan
    364:367:void ensureViewSet() -> ensureViewSet
    417:446:android.view.View findReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int,int) -> findReferenceChild
    227:231:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    238:238:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    243:246:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    132:140:int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getColumnCountForAccessibility
    118:126:int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getRowCountForAccessibility
    344:348:int getSpaceForSpanRange(int,int) -> getSpaceForSpanRange
    797:797:int getSpanCount() -> getSpanCount
    451:463:int getSpanGroupIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> getSpanGroupIndex
    467:484:int getSpanIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> getSpanIndex
    488:505:int getSpanSize(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> getSpanSize
    271:271:androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup getSpanSizeLookup() -> getSpanSizeLookup
    746:749:void guessMeasurement(float,int) -> guessMeasurement
    526:700:void layoutChunk(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult) -> layoutChunk
    712:733:void measureChild(android.view.View,int,boolean) -> measureChild
    753:763:void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean) -> measureChildWithDecorationsAndMargin
    355:361:void onAnchorReady(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int) -> onAnchorReady
    995:1112:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    146:164:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    201:202:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsAdded
    206:207:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> onItemsChanged
    222:223:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> onItemsMoved
    211:212:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsRemoved
    217:218:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    168:176:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    180:182:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    372:374:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    380:382:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    286:304:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    810:821:void setSpanCount(int) -> setSpanCount
    262:263:void setSpanSizeLookup(androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup) -> setSpanSizeLookup
    107:113:void setStackFromEnd(boolean) -> setStackFromEnd
    1117:1117:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    276:282:void updateMeasurements() -> updateMeasurements
androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup -> androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup:
    1123:1123:void <init>() -> <init>
    1132:1132:int getSpanIndex(int,int) -> getSpanIndex
    1127:1127:int getSpanSize(int) -> getSpanSize
androidx.recyclerview.widget.GridLayoutManager$LayoutParams -> androidx.recyclerview.widget.GridLayoutManager$LayoutParams:
    1150:1156:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1150:1160:void <init>(int,int) -> <init>
    1150:1164:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    1150:1168:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    1150:1172:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> <init>
    1189:1189:int getSpanIndex() -> getSpanIndex
    1199:1199:int getSpanSize() -> getSpanSize
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup -> androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup:
    830:834:void <init>() -> <init>
    940:956:int findReferenceIndexFromCache(int) -> findReferenceIndexFromCache
    873:882:int getCachedSpanIndex(int,int) -> getCachedSpanIndex
    970:988:int getSpanGroupIndex(int,int) -> getSpanGroupIndex
    909:936:int getSpanIndex(int,int) -> getSpanIndex
    860:861:void invalidateSpanIndexCache() -> invalidateSpanIndexCache
    869:869:boolean isSpanIndexCacheEnabled() -> isSpanIndexCacheEnabled
    852:853:void setSpanIndexCacheEnabled(boolean) -> setSpanIndexCacheEnabled
androidx.recyclerview.widget.ItemTouchHelper -> androidx.recyclerview.widget.ItemTouchHelper:
    167:448:void <init>(androidx.recyclerview.widget.ItemTouchHelper$Callback) -> <init>
    1290:1313:void addChildDrawingOrderCallback() -> addChildDrawingOrderCallback
    467:482:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> attachToRecyclerView
    1237:1260:int checkHorizontalSwipe(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> checkHorizontalSwipe
    980:1034:void checkSelectForSwipe(int,android.view.MotionEvent,int) -> checkSelectForSwipe
    1264:1286:int checkVerticalSwipe(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> checkVerticalSwipe
    494:508:void destroyCallbacks() -> destroyCallbacks
    914:926:void endRecoverAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> endRecoverAnimation
    1155:1165:androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation findAnimation(android.view.MotionEvent) -> findAnimation
    1039:1054:android.view.View findChildView(android.view.MotionEvent) -> findChildView
    800:845:java.util.List findSwapTargets(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> findSwapTargets
    950:972:androidx.recyclerview.widget.RecyclerView$ViewHolder findSwipedView(android.view.MotionEvent) -> findSwipedView
    931:932:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
    527:537:void getSelectedDxDy(float[]) -> getSelectedDxDy
    723:729:boolean hasRunningRecoverAnim() -> hasRunningRecoverAnim
    451:454:boolean hitTest(android.view.View,float,float,float,float) -> hitTest
    853:886:void moveIfNecessary(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> moveIfNecessary
    936:940:void obtainVelocityTracker() -> obtainVelocityTracker
    890:890:void onChildViewAttachedToWindow(android.view.View) -> onChildViewAttachedToWindow
    894:907:void onChildViewDetachedFromWindow(android.view.View) -> onChildViewDetachedFromWindow
    554:563:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDraw
    541:549:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
    700:719:void postDispatchSwipe(androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation,int) -> postDispatchSwipe
    943:947:void releaseVelocityTracker() -> releaseVelocityTracker
    1317:1324:void removeChildDrawingOrderCallbackIfNecessary(android.view.View) -> removeChildDrawingOrderCallbackIfNecessary
    737:796:boolean scrollIfNecessary() -> scrollIfNecessary
    574:695:void select(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> select
    485:491:void setupCallbacks() -> setupCallbacks
    1092:1104:void startDrag(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> startDrag
    511:514:void startGestureDetection() -> startGestureDetection
    1139:1151:void startSwipe(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> startSwipe
    517:524:void stopGestureDetection() -> stopGestureDetection
    1191:1233:int swipeIfNecessary(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> swipeIfNecessary
    1170:1188:void updateDxDy(android.view.MotionEvent,int,int) -> updateDxDy
androidx.recyclerview.widget.ItemTouchHelper$1 -> androidx.recyclerview.widget.ItemTouchHelper$1:
    257:257:void <init>(androidx.recyclerview.widget.ItemTouchHelper) -> <init>
    260:267:void run() -> run
androidx.recyclerview.widget.ItemTouchHelper$2 -> androidx.recyclerview.widget.ItemTouchHelper$2:
    313:313:void <init>(androidx.recyclerview.widget.ItemTouchHelper) -> <init>
    317:357:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    420:424:void onRequestDisallowInterceptTouchEvent(boolean) -> onRequestDisallowInterceptTouchEvent
    362:416:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
androidx.recyclerview.widget.ItemTouchHelper$3 -> androidx.recyclerview.widget.ItemTouchHelper$3:
    635:635:void <init>(androidx.recyclerview.widget.ItemTouchHelper,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,float,float,float,float,int,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> <init>
    638:660:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.recyclerview.widget.ItemTouchHelper$4 -> androidx.recyclerview.widget.ItemTouchHelper$4:
    700:700:void <init>(androidx.recyclerview.widget.ItemTouchHelper,androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation,int) -> <init>
    703:717:void run() -> run
androidx.recyclerview.widget.ItemTouchHelper$5 -> androidx.recyclerview.widget.ItemTouchHelper$5:
    1294:1294:void <init>(androidx.recyclerview.widget.ItemTouchHelper) -> <init>
    1297:1308:int onGetChildDrawingOrder(int,int) -> onGetChildDrawingOrder
androidx.recyclerview.widget.ItemTouchHelper$Callback -> androidx.recyclerview.widget.ItemTouchHelper$Callback:
    1401:1408:void <clinit>() -> <clinit>
    1385:1421:void <init>() -> <init>
    1626:1626:boolean canDropOver(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> canDropOver
    1802:1853:androidx.recyclerview.widget.RecyclerView$ViewHolder chooseDropTarget(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List,int,int) -> chooseDropTarget
    2038:2039:void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> clearView
    1573:1588:int convertToAbsoluteDirection(int,int) -> convertToAbsoluteDirection
    1482:1497:int convertToRelativeDirection(int,int) -> convertToRelativeDirection
    1593:1594:int getAbsoluteMovementFlags(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getAbsoluteMovementFlags
    2132:2138:long getAnimationDuration(androidx.recyclerview.widget.RecyclerView,int,float,float) -> getAnimationDuration
    1690:1690:int getBoundingBoxMargin() -> getBoundingBoxMargin
    1466:1466:androidx.recyclerview.widget.ItemTouchUIUtil getDefaultUIUtil() -> getDefaultUIUtil
    1901:1905:int getMaxDragScroll(androidx.recyclerview.widget.RecyclerView) -> getMaxDragScroll
    1720:1720:float getMoveThreshold(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getMoveThreshold
    1746:1746:float getSwipeEscapeVelocity(float) -> getSwipeEscapeVelocity
    1706:1706:float getSwipeThreshold(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getSwipeThreshold
    1770:1770:float getSwipeVelocityThreshold(float) -> getSwipeVelocityThreshold
    1598:1599:boolean hasDragFlag(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> hasDragFlag
    1604:1605:boolean hasSwipeFlag(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> hasSwipeFlag
    2166:2184:int interpolateOutOfBoundsScroll(androidx.recyclerview.widget.RecyclerView,int,int,int,long) -> interpolateOutOfBoundsScroll
    1678:1678:boolean isItemViewSwipeEnabled() -> isItemViewSwipeEnabled
    1663:1663:boolean isLongPressDragEnabled() -> isLongPressDragEnabled
    1529:1529:int makeFlag(int,int) -> makeFlag
    1512:1514:int makeMovementFlags(int,int) -> makeMovementFlags
    2071:2073:void onChildDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,float,float,int,boolean) -> onChildDraw
    2105:2107:void onChildDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,float,float,int,boolean) -> onChildDrawOver
    1978:1992:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List,int,float,float) -> onDraw
    1997:2022:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List,int,float,float) -> onDrawOver
    1944:1973:void onMoved(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int) -> onMoved
    1895:1898:void onSelectedChanged(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onSelectedChanged
androidx.recyclerview.widget.ItemTouchHelper$Callback$1 -> androidx.recyclerview.widget.ItemTouchHelper$Callback$1:
    1401:1401:void <init>() -> <init>
    1404:1404:float getInterpolation(float) -> getInterpolation
androidx.recyclerview.widget.ItemTouchHelper$Callback$2 -> androidx.recyclerview.widget.ItemTouchHelper$Callback$2:
    1408:1408:void <init>() -> <init>
    1411:1412:float getInterpolation(float) -> getInterpolation
androidx.recyclerview.widget.ItemTouchHelper$ItemTouchHelperGestureListener -> androidx.recyclerview.widget.ItemTouchHelper$ItemTouchHelperGestureListener:
    2314:2317:void <init>(androidx.recyclerview.widget.ItemTouchHelper) -> <init>
    2324:2325:void doNotReactToLongPress() -> doNotReactToLongPress
    2329:2329:boolean onDown(android.view.MotionEvent) -> onDown
    2334:2365:void onLongPress(android.view.MotionEvent) -> onLongPress
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation -> androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation:
    2394:2420:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,float,float,float,float) -> <init>
    2432:2433:void cancel() -> cancel
    2471:2472:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    2463:2467:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    2477:2477:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    2459:2459:void onAnimationStart(android.animation.Animator) -> onAnimationStart
    2423:2424:void setDuration(long) -> setDuration
    2436:2437:void setFraction(float) -> setFraction
    2427:2429:void start() -> start
    2444:2454:void update() -> update
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation$1 -> androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation$1:
    2411:2411:void <init>(androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation) -> <init>
    2414:2415:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.recyclerview.widget.ItemTouchHelper$SimpleCallback -> androidx.recyclerview.widget.ItemTouchHelper$SimpleCallback:
    2233:2236:void <init>(int,int) -> <init>
    2287:2287:int getDragDirs(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getDragDirs
    2293:2294:int getMovementFlags(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getMovementFlags
    2272:2272:int getSwipeDirs(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getSwipeDirs
    2257:2258:void setDefaultDragDirs(int) -> setDefaultDragDirs
    2246:2247:void setDefaultSwipeDirs(int) -> setDefaultSwipeDirs
androidx.recyclerview.widget.ItemTouchUIUtilImpl -> androidx.recyclerview.widget.ItemTouchUIUtilImpl:
    31:31:void <clinit>() -> <clinit>
    30:30:void <init>() -> <init>
    75:85:void clearView(android.view.View) -> clearView
    53:65:float findMaxElevation(androidx.recyclerview.widget.RecyclerView,android.view.View) -> findMaxElevation
    36:50:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,android.view.View,float,float,int,boolean) -> onDraw
    71:71:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,android.view.View,float,float,int,boolean) -> onDrawOver
    89:89:void onSelected(android.view.View) -> onSelected
androidx.recyclerview.widget.LayoutState -> androidx.recyclerview.widget.LayoutState:
    25:74:void <init>() -> <init>
    90:90:boolean hasMore(androidx.recyclerview.widget.RecyclerView$State) -> hasMore
    100:102:android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler) -> next
    107:107:java.lang.String toString() -> toString
androidx.recyclerview.widget.LinearLayoutManager -> androidx.recyclerview.widget.LinearLayoutManager:
    153:154:void <init>(android.content.Context) -> <init>
    66:166:void <init>(android.content.Context,int,boolean) -> <init>
    66:182:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1349:1352:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    289:289:boolean canScrollHorizontally() -> canScrollHorizontally
    297:297:boolean canScrollVertically() -> canScrollVertically
    1308:1319:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    1228:1254:void collectInitialPrefetchPositions(int,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectInitialPrefetchPositions
    1217:1221:void collectPrefetchPositionsForLayoutState(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectPrefetchPositionsForLayoutState
    1090:1090:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    1080:1080:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    1100:1100:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    1120:1126:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollExtent
    1109:1115:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollOffset
    1131:1137:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollRange
    456:464:android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    1095:1095:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollExtent
    1085:1085:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    1105:1105:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    1646:1679:int convertFocusDirectionToLayoutDirection(int) -> convertFocusDirectionToLayoutDirection
    998:998:androidx.recyclerview.widget.LinearLayoutManager$LayoutState createLayoutState() -> createLayoutState
    987:990:void ensureLayoutState() -> ensureLayoutState
    1502:1552:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fill
    1874:1875:int findFirstCompletelyVisibleItemPosition() -> findFirstCompletelyVisibleItemPosition
    1830:1830:android.view.View findFirstPartiallyOrCompletelyInvisibleChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findFirstPartiallyOrCompletelyInvisibleChild
    1775:1775:android.view.View findFirstReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findFirstReferenceChild
    1731:1735:android.view.View findFirstVisibleChildClosestToEnd(boolean,boolean) -> findFirstVisibleChildClosestToEnd
    1713:1717:android.view.View findFirstVisibleChildClosestToStart(boolean,boolean) -> findFirstVisibleChildClosestToStart
    1857:1858:int findFirstVisibleItemPosition() -> findFirstVisibleItemPosition
    1914:1915:int findLastCompletelyVisibleItemPosition() -> findLastCompletelyVisibleItemPosition
    1835:1835:android.view.View findLastPartiallyOrCompletelyInvisibleChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findLastPartiallyOrCompletelyInvisibleChild
    1779:1779:android.view.View findLastReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findLastReferenceChild
    1897:1898:int findLastVisibleItemPosition() -> findLastVisibleItemPosition
    1946:1968:android.view.View findOnePartiallyOrCompletelyInvisibleChild(int,int) -> findOnePartiallyOrCompletelyInvisibleChild
    1924:1941:android.view.View findOneVisibleChild(int,int,boolean,boolean) -> findOneVisibleChild
    1816:1817:android.view.View findPartiallyOrCompletelyInvisibleChildClosestToEnd(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findPartiallyOrCompletelyInvisibleChildClosestToEnd
    1824:1825:android.view.View findPartiallyOrCompletelyInvisibleChildClosestToStart(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findPartiallyOrCompletelyInvisibleChildClosestToStart
    1785:1809:android.view.View findReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int,int) -> findReferenceChild
    1753:1754:android.view.View findReferenceChildClosestToEnd(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findReferenceChildClosestToEnd
    1770:1771:android.view.View findReferenceChildClosestToStart(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findReferenceChildClosestToStart
    401:414:android.view.View findViewByPosition(int) -> findViewByPosition
    908:925:int fixLayoutEndGap(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixLayoutEndGap
    933:950:int fixLayoutStartGap(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixLayoutStartGap
    194:194:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1701:1701:android.view.View getChildClosestToEnd() -> getChildClosestToEnd
    1691:1691:android.view.View getChildClosestToStart() -> getChildClosestToStart
    438:441:int getExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State) -> getExtraLayoutSpace
    1302:1302:int getInitialPrefetchItemCount() -> getInitialPrefetchItemCount
    324:324:int getOrientation() -> getOrientation
    206:206:boolean getRecycleChildrenOnDetach() -> getRecycleChildrenOnDetach
    370:370:boolean getReverseLayout() -> getReverseLayout
    313:313:boolean getStackFromEnd() -> getStackFromEnd
    186:186:boolean isAutoMeasureEnabled() -> isAutoMeasureEnabled
    983:983:boolean isLayoutRTL() -> isLayoutRTL
    1170:1170:boolean isSmoothScrollbarEnabled() -> isSmoothScrollbarEnabled
    1557:1626:void layoutChunk(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult) -> layoutChunk
    702:749:void layoutForPredictiveAnimations(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int) -> layoutForPredictiveAnimations
    2024:2031:void logChildren() -> logChildren
    690:690:void onAnchorReady(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int) -> onAnchorReady
    228:233:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    1975:2016:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    237:242:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    483:668:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    672:677:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    273:282:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    246:268:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    2094:2121:void prepareForDrop(android.view.View,android.view.View,int,int) -> prepareForDrop
    1478:1486:void recycleByLayoutState(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState) -> recycleByLayoutState
    1361:1376:void recycleChildren(androidx.recyclerview.widget.RecyclerView$Recycler,int,int) -> recycleChildren
    1434:1464:void recycleViewsFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int) -> recycleViewsFromEnd
    1389:1420:void recycleViewsFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int) -> recycleViewsFromStart
    1211:1212:boolean resolveIsInfinite() -> resolveIsInfinite
    356:361:void resolveShouldLayoutReverse() -> resolveShouldLayoutReverse
    1322:1344:int scrollBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollBy
    1060:1063:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    1017:1023:void scrollToPosition(int) -> scrollToPosition
    1045:1051:void scrollToPositionWithOffset(int,int) -> scrollToPositionWithOffset
    1072:1075:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    1286:1287:void setInitialPrefetchItemCount(int) -> setInitialPrefetchItemCount
    334:347:void setOrientation(int) -> setOrientation
    223:224:void setRecycleChildrenOnDetach(boolean) -> setRecycleChildrenOnDetach
    388:394:void setReverseLayout(boolean) -> setReverseLayout
    1159:1160:void setSmoothScrollbarEnabled(boolean) -> setSmoothScrollbarEnabled
    304:310:void setStackFromEnd(boolean) -> setStackFromEnd
    1630:1632:boolean shouldMeasureTwice() -> shouldMeasureTwice
    448:452:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
    2085:2085:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    781:814:boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorFromChildren
    822:900:boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorFromPendingData
    753:771:void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorInfoForLayout
    1176:1208:void updateLayoutState(int,int,boolean,androidx.recyclerview.widget.RecyclerView$State) -> updateLayoutState
    954:955:void updateLayoutStateToFillEnd(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateLayoutStateToFillEnd
    958:965:void updateLayoutStateToFillEnd(int,int) -> updateLayoutStateToFillEnd
    968:969:void updateLayoutStateToFillStart(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateLayoutStateToFillStart
    972:980:void updateLayoutStateToFillStart(int,int) -> updateLayoutStateToFillStart
    2044:2081:void validateChildOrder() -> validateChildOrder
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo -> androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo:
    2379:2381:void <init>() -> <init>
    2395:2398:void assignCoordinateFromPadding() -> assignCoordinateFromPadding
    2464:2472:void assignFromView(android.view.View,int) -> assignFromView
    2417:2461:void assignFromViewAndKeepVisibleRect(android.view.View,int) -> assignFromViewAndKeepVisibleRect
    2411:2413:boolean isViewValidAsAnchor(android.view.View,androidx.recyclerview.widget.RecyclerView$State) -> isViewValidAsAnchor
    2384:2388:void reset() -> reset
    2402:2402:java.lang.String toString() -> toString
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult -> androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult:
    2475:2475:void <init>() -> <init>
    2482:2486:void resetInternal() -> resetInternal
androidx.recyclerview.widget.LinearLayoutManager$LayoutState -> androidx.recyclerview.widget.LinearLayoutManager$LayoutState:
    2127:2206:void <init>() -> <init>
    2259:2260:void assignPositionFromScrapList() -> assignPositionFromScrapList
    2263:2270:void assignPositionFromScrapList(android.view.View) -> assignPositionFromScrapList
    2217:2217:boolean hasMore(androidx.recyclerview.widget.RecyclerView$State) -> hasMore
    2302:2304:void log() -> log
    2227:2232:android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler) -> next
    2243:2255:android.view.View nextViewFromScrapList() -> nextViewFromScrapList
    2273:2298:android.view.View nextViewInLimitedList(android.view.View) -> nextViewInLimitedList
androidx.recyclerview.widget.LinearLayoutManager$SavedState -> androidx.recyclerview.widget.LinearLayoutManager$SavedState:
    2355:2355:void <clinit>() -> <clinit>
    2319:2321:void <init>() -> <init>
    2323:2327:void <init>(android.os.Parcel) -> <init>
    2329:2333:void <init>(androidx.recyclerview.widget.LinearLayoutManager$SavedState) -> <init>
    2345:2345:int describeContents() -> describeContents
    2336:2336:boolean hasValidAnchor() -> hasValidAnchor
    2340:2341:void invalidateAnchor() -> invalidateAnchor
    2350:2353:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.LinearLayoutManager$SavedState$1 -> androidx.recyclerview.widget.LinearLayoutManager$SavedState$1:
    2356:2356:void <init>() -> <init>
    2356:2356:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2359:2359:androidx.recyclerview.widget.LinearLayoutManager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2356:2356:java.lang.Object[] newArray(int) -> newArray
    2364:2364:androidx.recyclerview.widget.LinearLayoutManager$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.LinearSmoothScroller -> androidx.recyclerview.widget.LinearSmoothScroller:
    81:95:void <init>(android.content.Context) -> <init>
    269:288:int calculateDtToFit(int,int,int,int,int) -> calculateDtToFit
    328:338:int calculateDxToMakeVisible(android.view.View,int) -> calculateDxToMakeVisible
    303:313:int calculateDyToMakeVisible(android.view.View,int) -> calculateDyToMakeVisible
    163:163:float calculateSpeedPerPixel(android.util.DisplayMetrics) -> calculateSpeedPerPixel
    180:180:int calculateTimeForDeceleration(int) -> calculateTimeForDeceleration
    194:194:int calculateTimeForScrolling(int) -> calculateTimeForScrolling
    255:260:int clampApplyScroll(int,int) -> clampApplyScroll
    207:207:int getHorizontalSnapPreference() -> getHorizontalSnapPreference
    221:221:int getVerticalSnapPreference() -> getVerticalSnapPreference
    127:144:void onSeekTargetStep(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onSeekTargetStep
    103:103:void onStart() -> onStart
    151:153:void onStop() -> onStop
    110:117:void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onTargetFound
    233:252:void updateActionForInterimTarget(androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> updateActionForInterimTarget
androidx.recyclerview.widget.LinearSnapHelper -> androidx.recyclerview.widget.LinearSnapHelper:
    33:33:void <init>() -> <init>
    46:60:int[] calculateDistanceToFinalSnap(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View) -> calculateDistanceToFinalSnap
    233:268:float computeDistancePerChild(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper) -> computeDistancePerChild
    143:151:int distanceToCenter(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View,androidx.recyclerview.widget.OrientationHelper) -> distanceToCenter
    167:174:int estimateNextPositionDiffForFling(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper,int,int) -> estimateNextPositionDiffForFling
    189:215:android.view.View findCenterView(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper) -> findCenterView
    133:138:android.view.View findSnapView(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> findSnapView
    66:128:int findTargetSnapPosition(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> findTargetSnapPosition
    282:285:androidx.recyclerview.widget.OrientationHelper getHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> getHorizontalHelper
    273:276:androidx.recyclerview.widget.OrientationHelper getVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> getVerticalHelper
androidx.recyclerview.widget.ListAdapter -> androidx.recyclerview.widget.ListAdapter:
    99:102:void <init>(androidx.recyclerview.widget.DiffUtil$ItemCallback) -> <init>
    105:107:void <init>(androidx.recyclerview.widget.AsyncDifferConfig) -> <init>
    124:124:java.lang.Object getItem(int) -> getItem
    129:129:int getItemCount() -> getItemCount
    119:120:void submitList(java.util.List) -> submitList
androidx.recyclerview.widget.MessageThreadUtil -> androidx.recyclerview.widget.MessageThreadUtil:
    27:231:void <init>() -> <init>
    87:87:androidx.recyclerview.widget.ThreadUtil$BackgroundCallback getBackgroundProxy(androidx.recyclerview.widget.ThreadUtil$BackgroundCallback) -> getBackgroundProxy
    31:31:androidx.recyclerview.widget.ThreadUtil$MainThreadCallback getMainThreadProxy(androidx.recyclerview.widget.ThreadUtil$MainThreadCallback) -> getMainThreadProxy
androidx.recyclerview.widget.MessageThreadUtil$1 -> androidx.recyclerview.widget.MessageThreadUtil$1:
    31:59:void <init>(androidx.recyclerview.widget.MessageThreadUtil,androidx.recyclerview.widget.ThreadUtil$MainThreadCallback) -> <init>
    46:47:void addTile(int,androidx.recyclerview.widget.TileList$Tile) -> addTile
    51:52:void removeTile(int,int) -> removeTile
    55:57:void sendMessage(androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem) -> sendMessage
    41:42:void updateItemCount(int,int) -> updateItemCount
androidx.recyclerview.widget.MessageThreadUtil$1$1 -> androidx.recyclerview.widget.MessageThreadUtil$1$1:
    59:59:void <init>(androidx.recyclerview.widget.MessageThreadUtil$1) -> <init>
    62:80:void run() -> run
androidx.recyclerview.widget.MessageThreadUtil$2 -> androidx.recyclerview.widget.MessageThreadUtil$2:
    87:135:void <init>(androidx.recyclerview.widget.MessageThreadUtil,androidx.recyclerview.widget.ThreadUtil$BackgroundCallback) -> <init>
    111:112:void loadTile(int,int) -> loadTile
    130:133:void maybeExecuteBackgroundRunnable() -> maybeExecuteBackgroundRunnable
    116:117:void recycleTile(androidx.recyclerview.widget.TileList$Tile) -> recycleTile
    99:100:void refresh(int) -> refresh
    120:122:void sendMessage(androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem) -> sendMessage
    125:127:void sendMessageAtFrontOfQueue(androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem) -> sendMessageAtFrontOfQueue
    105:107:void updateRange(int,int,int,int,int) -> updateRange
androidx.recyclerview.widget.MessageThreadUtil$2$1 -> androidx.recyclerview.widget.MessageThreadUtil$2$1:
    135:135:void <init>(androidx.recyclerview.widget.MessageThreadUtil$2) -> <init>
    139:166:void run() -> run
androidx.recyclerview.widget.MessageThreadUtil$MessageQueue -> androidx.recyclerview.widget.MessageThreadUtil$MessageQueue:
    231:231:void <init>() -> <init>
    235:241:androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem next() -> next
    261:281:void removeMessages(int) -> removeMessages
    249:259:void sendMessage(androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem) -> sendMessage
    244:247:void sendMessageAtFrontOfQueue(androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem) -> sendMessageAtFrontOfQueue
androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem -> androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem:
    178:178:void <clinit>() -> <clinit>
    175:175:void <init>() -> <init>
    202:219:androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem obtainMessage(int,int,int,int,int,int,java.lang.Object) -> obtainMessage
    223:223:androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem obtainMessage(int,int,int) -> obtainMessage
    227:227:androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem obtainMessage(int,int,java.lang.Object) -> obtainMessage
    189:198:void recycle() -> recycle
androidx.recyclerview.widget.OpReorderer -> androidx.recyclerview.widget.OpReorderer:
    25:27:void <init>(androidx.recyclerview.widget.OpReorderer$Callback) -> <init>
    213:224:int getLastMoveOutOfOrder(java.util.List) -> getLastMoveOutOfOrder
    33:36:void reorderOps(java.util.List) -> reorderOps
    155:172:void swapMoveAdd(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> swapMoveAdd
    39:52:void swapMoveOp(java.util.List,int,int) -> swapMoveOp
    56:151:void swapMoveRemove(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> swapMoveRemove
    176:210:void swapMoveUpdate(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> swapMoveUpdate
androidx.recyclerview.widget.OrientationHelper -> androidx.recyclerview.widget.OrientationHelper:
    32:32:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper$1) -> <init>
    42:48:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    258:258:androidx.recyclerview.widget.OrientationHelper createHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createHorizontalHelper
    241:247:androidx.recyclerview.widget.OrientationHelper createOrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager,int) -> createOrientationHelper
    356:356:androidx.recyclerview.widget.OrientationHelper createVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createVerticalHelper
    55:55:androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    78:78:int getTotalSpaceChange() -> getTotalSpaceChange
    64:65:void onLayoutComplete() -> onLayoutComplete
androidx.recyclerview.widget.OrientationHelper$1 -> androidx.recyclerview.widget.OrientationHelper$1:
    258:258:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    297:299:int getDecoratedEnd(android.view.View) -> getDecoratedEnd
    281:283:int getDecoratedMeasurement(android.view.View) -> getDecoratedMeasurement
    289:291:int getDecoratedMeasurementInOther(android.view.View) -> getDecoratedMeasurementInOther
    304:306:int getDecoratedStart(android.view.View) -> getDecoratedStart
    266:266:int getEnd() -> getEnd
    261:261:int getEndAfterPadding() -> getEndAfterPadding
    334:334:int getEndPadding() -> getEndPadding
    339:339:int getMode() -> getMode
    344:344:int getModeInOther() -> getModeInOther
    276:276:int getStartAfterPadding() -> getStartAfterPadding
    323:324:int getTotalSpace() -> getTotalSpace
    311:312:int getTransformedEndWithDecoration(android.view.View) -> getTransformedEndWithDecoration
    317:318:int getTransformedStartWithDecoration(android.view.View) -> getTransformedStartWithDecoration
    329:330:void offsetChild(android.view.View,int) -> offsetChild
    271:272:void offsetChildren(int) -> offsetChildren
androidx.recyclerview.widget.OrientationHelper$2 -> androidx.recyclerview.widget.OrientationHelper$2:
    356:356:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    395:397:int getDecoratedEnd(android.view.View) -> getDecoratedEnd
    379:381:int getDecoratedMeasurement(android.view.View) -> getDecoratedMeasurement
    387:389:int getDecoratedMeasurementInOther(android.view.View) -> getDecoratedMeasurementInOther
    402:404:int getDecoratedStart(android.view.View) -> getDecoratedStart
    364:364:int getEnd() -> getEnd
    359:359:int getEndAfterPadding() -> getEndAfterPadding
    432:432:int getEndPadding() -> getEndPadding
    437:437:int getMode() -> getMode
    442:442:int getModeInOther() -> getModeInOther
    374:374:int getStartAfterPadding() -> getStartAfterPadding
    421:422:int getTotalSpace() -> getTotalSpace
    409:410:int getTransformedEndWithDecoration(android.view.View) -> getTransformedEndWithDecoration
    415:416:int getTransformedStartWithDecoration(android.view.View) -> getTransformedStartWithDecoration
    427:428:void offsetChild(android.view.View,int) -> offsetChild
    369:370:void offsetChildren(int) -> offsetChildren
androidx.recyclerview.widget.PagerSnapHelper -> androidx.recyclerview.widget.PagerSnapHelper:
    39:39:void <init>() -> <init>
    52:66:int[] calculateDistanceToFinalSnap(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View) -> calculateDistanceToFinalSnap
    125:128:androidx.recyclerview.widget.LinearSmoothScroller createSnapScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createSnapScroller
    155:163:int distanceToCenter(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View,androidx.recyclerview.widget.OrientationHelper) -> distanceToCenter
    178:204:android.view.View findCenterView(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper) -> findCenterView
    72:77:android.view.View findSnapView(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> findSnapView
    219:237:android.view.View findStartView(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper) -> findStartView
    83:118:int findTargetSnapPosition(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> findTargetSnapPosition
    251:254:androidx.recyclerview.widget.OrientationHelper getHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> getHorizontalHelper
    242:245:androidx.recyclerview.widget.OrientationHelper getVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> getVerticalHelper
androidx.recyclerview.widget.PagerSnapHelper$1 -> androidx.recyclerview.widget.PagerSnapHelper$1:
    128:128:void <init>(androidx.recyclerview.widget.PagerSnapHelper,android.content.Context) -> <init>
    143:143:float calculateSpeedPerPixel(android.util.DisplayMetrics) -> calculateSpeedPerPixel
    148:148:int calculateTimeForScrolling(int) -> calculateTimeForScrolling
    131:139:void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onTargetFound
androidx.recyclerview.widget.RecyclerView -> androidx.recyclerview.widget.RecyclerView:
    215:595:void <clinit>() -> <clinit>
    643:644:void <init>(android.content.Context) -> <init>
    647:648:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    358:727:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    2440:2459:void absorbGlows(int,int) -> absorbGlows
    207:207:void access$000(androidx.recyclerview.widget.RecyclerView,android.view.View,int,android.view.ViewGroup$LayoutParams) -> access$000
    207:207:void access$100(androidx.recyclerview.widget.RecyclerView,int) -> access$100
    207:207:boolean access$200(androidx.recyclerview.widget.RecyclerView) -> access$200
    207:207:void access$300(androidx.recyclerview.widget.RecyclerView,int,int) -> access$300
    1426:1437:void addAnimatingView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> addAnimatingView
    2772:2775:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    1563:1577:void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration,int) -> addItemDecoration
    1592:1593:void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration) -> addItemDecoration
    1268:1272:void addOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener) -> addOnChildAttachStateChangeListener
    2908:2909:void addOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener) -> addOnItemTouchListener
    1701:1705:void addOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> addOnScrollListener
    4153:4157:void animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateAppearance
    4171:4189:void animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,boolean,boolean) -> animateChange
    4161:4166:void animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateDisappearance
    2859:2867:void assertInLayoutOrScroll(java.lang.String) -> assertInLayoutOrScroll
    2877:2892:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    4464:4465:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> canReuseUpdatedViewHolder
    3239:3241:void cancelTouch() -> cancelTouch
    4290:4290:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    5592:5608:void clearNestedRecyclerViewIfNotNested(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> clearNestedRecyclerViewIfNotNested
    4344:4352:void clearOldPositions() -> clearOldPositions
    1292:1295:void clearOnChildAttachStateChangeListeners() -> clearOnChildAttachStateChangeListeners
    1722:1725:void clearOnScrollListeners() -> clearOnScrollListeners
    2007:2010:int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    1982:1985:int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    2030:2033:int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    2079:2082:int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    2055:2058:int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    2102:2105:int computeVerticalScrollRange() -> computeVerticalScrollRange
    2417:2437:void considerReleasingGlowsOnScroll(int,int) -> considerReleasingGlowsOnScroll
    1856:1891:void consumePendingUpdateOperations() -> consumePendingUpdateOperations
    778:827:void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int) -> createLayoutManager
    3402:3410:void defaultOnMeasure(int,int) -> defaultOnMeasure
    4117:4118:boolean didChildRangeChange(int,int) -> didChildRangeChange
    7267:7278:void dispatchChildAttached(android.view.View) -> dispatchChildAttached
    7253:7264:void dispatchChildDetached(android.view.View) -> dispatchChildDetached
    3471:3479:void dispatchContentChangedIfNecessary() -> dispatchContentChangedIfNecessary
    3627:3653:void dispatchLayout() -> dispatchLayout
    3823:3908:void dispatchLayoutStep1() -> dispatchLayoutStep1
    3915:3934:void dispatchLayoutStep2() -> dispatchLayoutStep2
    3941:4025:void dispatchLayoutStep3() -> dispatchLayoutStep3
    11332:11332:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    11337:11337:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    11320:11320:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    11326:11326:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    11307:11307:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    11314:11314:boolean dispatchNestedScroll(int,int,int,int,int[],int) -> dispatchNestedScroll
    2941:2968:boolean dispatchOnItemTouch(android.view.MotionEvent) -> dispatchOnItemTouch
    2924:2937:boolean dispatchOnItemTouchIntercept(android.view.MotionEvent) -> dispatchOnItemTouchIntercept
    4984:5001:void dispatchOnScrollStateChanged(int) -> dispatchOnScrollStateChanged
    4944:4965:void dispatchOnScrolled(int,int) -> dispatchOnScrolled
    11219:11233:void dispatchPendingImportantForAccessibilityChanges() -> dispatchPendingImportantForAccessibilityChanges
    1414:1415:void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    1406:1407:void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    4219:4276:void draw(android.graphics.Canvas) -> draw
    4820:4820:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    2502:2512:void ensureBottomGlow() -> ensureBottomGlow
    2462:2472:void ensureLeftGlow() -> ensureLeftGlow
    2475:2485:void ensureRightGlow() -> ensureRightGlow
    2488:2499:void ensureTopGlow() -> ensureTopGlow
    734:737:java.lang.String exceptionLabel() -> exceptionLabel
    3805:3813:void fillRemainingScrollValues(androidx.recyclerview.widget.RecyclerView$State) -> fillRemainingScrollValues
    4803:4815:android.view.View findChildViewUnder(float,float) -> findChildViewUnder
    4582:4587:android.view.View findContainingItemView(android.view.View) -> findContainingItemView
    4600:4601:androidx.recyclerview.widget.RecyclerView$ViewHolder findContainingViewHolder(android.view.View) -> findContainingViewHolder
    4091:4114:void findMinMaxChildLayoutPositions(int[]) -> findMinMaxChildLayoutPositions
    5570:5585:androidx.recyclerview.widget.RecyclerView findNestedRecyclerView(android.view.View) -> findNestedRecyclerView
    3692:3715:android.view.View findNextViewToFocus() -> findNextViewToFocus
    4714:4731:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int) -> findViewHolderForAdapterPosition
    4776:4791:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForItemId(long) -> findViewHolderForItemId
    4692:4692:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForLayoutPosition(int) -> findViewHolderForLayoutPosition
    4668:4668:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int) -> findViewHolderForPosition
    4736:4758:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int,boolean) -> findViewHolderForPosition
    2275:2322:boolean fling(int,int) -> fling
    2577:2651:android.view.View focusSearch(android.view.View,int) -> focusSearch
    4295:4298:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    4303:4306:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    4311:4314:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1221:1221:androidx.recyclerview.widget.RecyclerView$Adapter getAdapter() -> getAdapter
    11236:11241:int getAdapterPositionFor(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getAdapterPositionFor
    1248:1251:int getBaseline() -> getBaseline
    4148:4148:long getChangedHolderKey(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getChangedHolderKey
    4628:4629:int getChildAdapterPosition(android.view.View) -> getChildAdapterPosition
    13220:13223:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    4654:4658:long getChildItemId(android.view.View) -> getChildItemId
    4643:4644:int getChildLayoutPosition(android.view.View) -> getChildLayoutPosition
    4618:4618:int getChildPosition(android.view.View) -> getChildPosition
    4559:4564:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> getChildViewHolder
    4606:4609:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View) -> getChildViewHolderInt
    1094:1094:boolean getClipToPadding() -> getClipToPadding
    760:760:androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate() -> getCompatAccessibilityDelegate
    4882:4883:void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect) -> getDecoratedBoundsWithMargins
    4886:4892:void getDecoratedBoundsWithMarginsInt(android.view.View,android.graphics.Rect) -> getDecoratedBoundsWithMarginsInt
    3793:3801:int getDeepestFocusedViewWithId(android.view.View) -> getDeepestFocusedViewWithId
    2542:2542:androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory() -> getEdgeEffectFactory
    830:836:java.lang.String getFullClassName(android.content.Context,java.lang.String) -> getFullClassName
    3546:3546:androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator() -> getItemAnimator
    4895:4916:android.graphics.Rect getItemDecorInsetsForChild(android.view.View) -> getItemDecorInsetsForChild
    1604:1609:androidx.recyclerview.widget.RecyclerView$ItemDecoration getItemDecorationAt(int) -> getItemDecorationAt
    1618:1618:int getItemDecorationCount() -> getItemDecorationCount
    1469:1469:androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    2360:2360:int getMaxFlingVelocity() -> getMaxFlingVelocity
    2350:2350:int getMinFlingVelocity() -> getMinFlingVelocity
    5617:5620:long getNanoTime() -> getNanoTime
    1370:1370:androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener() -> getOnFlingListener
    4531:4531:boolean getPreserveFocusAfterLayout() -> getPreserveFocusAfterLayout
    1482:1482:androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> getRecycledViewPool
    1530:1530:int getScrollState() -> getScrollState
    13250:13253:androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper() -> getScrollingChildHelper
    4045:4072:void handleMissingPreInfoForChangeError(long,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> handleMissingPreInfoForChangeError
    1065:1065:boolean hasFixedSize() -> hasFixedSize
    11296:11296:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    11301:11301:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    5017:5018:boolean hasPendingAdapterUpdates() -> hasPendingAdapterUpdates
    1897:1907:boolean hasUpdatedView() -> hasUpdatedView
    963:1043:void initAdapterManager() -> initAdapterManager
    748:752:void initAutofill() -> initAutofill
    840:960:void initChildrenHelper() -> initChildrenHelper
    11248:11260:void initFastScroller(android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable) -> initFastScroller
    2515:2516:void invalidateGlows() -> invalidateGlows
    4508:4517:void invalidateItemDecorations() -> invalidateItemDecorations
    3467:3467:boolean isAccessibilityEnabled() -> isAccessibilityEnabled
    4326:4326:boolean isAnimating() -> isAnimating
    2848:2848:boolean isAttachedToWindow() -> isAttachedToWindow
    3501:3501:boolean isComputingLayout() -> isComputingLayout
    2220:2220:boolean isLayoutFrozen() -> isLayoutFrozen
    11271:11271:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    2663:2717:boolean isPreferredNextFocus(android.view.View,android.view.View,int) -> isPreferredNextFocus
    1750:1755:void jumpToPositionForSmoothScroller(int) -> jumpToPositionForSmoothScroller
    4209:4215:void markItemDecorInsetsDirty() -> markItemDecorInsetsDirty
    4492:4501:void markKnownViewsInvalid() -> markKnownViewsInvalid
    4868:4872:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    4830:4834:void offsetChildrenVertical(int) -> offsetChildrenVertical
    4389:4403:void offsetPositionRecordsForInsert(int,int) -> offsetPositionRecordsForInsert
    4355:4386:void offsetPositionRecordsForMove(int,int) -> offsetPositionRecordsForMove
    4407:4433:void offsetPositionRecordsForRemove(int,int,boolean) -> offsetPositionRecordsForRemove
    2789:2819:void onAttachedToWindow() -> onAttachedToWindow
    4847:4847:void onChildAttachedToWindow(android.view.View) -> onChildAttachedToWindow
    4859:4859:void onChildDetachedFromWindow(android.view.View) -> onChildDetachedFromWindow
    2823:2841:void onDetachedFromWindow() -> onDetachedFromWindow
    4280:4286:void onDraw(android.graphics.Canvas) -> onDraw
    3444:3445:void onEnterLayoutOrScroll() -> onEnterLayoutOrScroll
    3448:3449:void onExitLayoutOrScroll() -> onExitLayoutOrScroll
    3452:3464:void onExitLayoutOrScroll(boolean) -> onExitLayoutOrScroll
    3256:3301:boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    2973:3072:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    4193:4197:void onLayout(boolean,int,int,int,int) -> onLayout
    3306:3393:void onMeasure(int,int) -> onMeasure
    3244:3252:void onPointerUp(android.view.MotionEvent) -> onPointerUp
    2779:2784:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    1389:1399:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1375:1384:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    4979:4979:void onScrollStateChanged(int) -> onScrollStateChanged
    4941:4941:void onScrolled(int,int) -> onScrolled
    3414:3419:void onSizeChanged(int,int,int,int) -> onSizeChanged
    3087:3227:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    3554:3558:void postAnimationRunner() -> postAnimationRunner
    3561:3561:boolean predictiveItemAnimationsEnabled() -> predictiveItemAnimationsEnabled
    3571:3599:void processAdapterUpdatesAndSetAnimationFlags() -> processAdapterUpdatesAndSetAnimationFlags
    4482:4485:void processDataSetCompletelyChanged(boolean) -> processDataSetCompletelyChanged
    2367:2391:void pullGlows(float,float,float,float) -> pullGlows
    4081:4088:void recordAnimationInfoIfBouncedHiddenView(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> recordAnimationInfoIfBouncedHiddenView
    3719:3790:void recoverFocusFromState() -> recoverFocusFromState
    2394:2414:void releaseGlows() -> releaseGlows
    1166:1179:void removeAndRecycleViews() -> removeAndRecycleViews
    1446:1458:boolean removeAnimatingView(android.view.View) -> removeAnimatingView
    4124:4141:void removeDetachedView(android.view.View,boolean) -> removeDetachedView
    1645:1655:void removeItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration) -> removeItemDecoration
    1627:1633:void removeItemDecorationAt(int) -> removeItemDecorationAt
    1281:1285:void removeOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener) -> removeOnChildAttachStateChangeListener
    2917:2921:void removeOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener) -> removeOnItemTouchListener
    1713:1716:void removeOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> removeOnScrollListener
    5258:5273:void repositionShadowingViews() -> repositionShadowingViews
    2722:2726:void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    2738:2763:void requestChildOnScreen(android.view.View,android.view.View) -> requestChildOnScreen
    2767:2767:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    3077:3083:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    4201:4206:void requestLayout() -> requestLayout
    3677:3680:void resetFocusInfo() -> resetFocusInfo
    3231:3236:void resetTouch() -> resetTouch
    3656:3674:void saveFocusInfo() -> saveFocusInfo
    4330:4341:void saveOldPositions() -> saveOldPositions
    1792:1805:void scrollBy(int,int) -> scrollBy
    1922:1959:boolean scrollByInternal(int,int,android.view.MotionEvent) -> scrollByInternal
    1820:1845:void scrollStep(int,int,int[]) -> scrollStep
    1786:1788:void scrollTo(int,int) -> scrollTo
    1736:1747:void scrollToPosition(int) -> scrollToPosition
    3529:3533:void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    769:771:void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate) -> setAccessibilityDelegateCompat
    1155:1159:void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter) -> setAdapter
    1192:1211:void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean) -> setAdapterInternal
    1671:1676:void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback) -> setChildDrawingOrderCallback
    11209:11215:boolean setChildImportantForAccessibilityInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> setChildImportantForAccessibilityInternal
    1070:1078:void setClipToPadding(boolean) -> setClipToPadding
    2528:2531:void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory) -> setEdgeEffectFactory
    1057:1058:void setHasFixedSize(boolean) -> setHasFixedSize
    3433:3441:void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator) -> setItemAnimator
    1520:1521:void setItemViewCacheSize(int) -> setItemViewCacheSize
    2193:2211:void setLayoutFrozen(boolean) -> setLayoutFrozen
    1310:1349:void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> setLayoutManager
    11266:11267:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    1360:1361:void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener) -> setOnFlingListener
    1688:1689:void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> setOnScrollListener
    4549:4550:void setPreserveFocusAfterLayout(boolean) -> setPreserveFocusAfterLayout
    1494:1495:void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool) -> setRecycledViewPool
    1235:1236:void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener) -> setRecyclerListener
    1534:1546:void setScrollState(int) -> setScrollState
    1107:1121:void setScrollingTouchSlop(int) -> setScrollingTouchSlop
    1505:1506:void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension) -> setViewCacheExtension
    3513:3524:boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> shouldDeferAccessibilityEvent
    2230:2231:void smoothScrollBy(int,int) -> smoothScrollBy
    2242:2259:void smoothScrollBy(int,int,android.view.animation.Interpolator) -> smoothScrollBy
    1773:1782:void smoothScrollToPosition(int) -> smoothScrollToPosition
    2120:2124:void startInterceptRequestLayout() -> startInterceptRequestLayout
    11276:11276:boolean startNestedScroll(int) -> startNestedScroll
    11281:11281:boolean startNestedScroll(int,int) -> startNestedScroll
    2137:2168:void stopInterceptRequestLayout(boolean) -> stopInterceptRequestLayout
    11286:11287:void stopNestedScroll() -> stopNestedScroll
    11291:11292:void stopNestedScroll(int) -> stopNestedScroll
    2330:2332:void stopScroll() -> stopScroll
    2338:2342:void stopScrollersInternal() -> stopScrollersInternal
    1139:1143:void swapAdapter(androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> swapAdapter
    4442:4461:void viewRangeUpdate(int,int,java.lang.Object) -> viewRangeUpdate
androidx.recyclerview.widget.RecyclerView$1 -> androidx.recyclerview.widget.RecyclerView$1:
    391:391:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    394:408:void run() -> run
androidx.recyclerview.widget.RecyclerView$2 -> androidx.recyclerview.widget.RecyclerView$2:
    585:585:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    588:592:void run() -> run
androidx.recyclerview.widget.RecyclerView$3 -> androidx.recyclerview.widget.RecyclerView$3:
    595:595:void <init>() -> <init>
    598:599:float getInterpolation(float) -> getInterpolation
androidx.recyclerview.widget.RecyclerView$4 -> androidx.recyclerview.widget.RecyclerView$4:
    607:607:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    617:618:void processAppeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processAppeared
    611:613:void processDisappeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processDisappeared
    623:635:void processPersistent(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processPersistent
    638:639:void unused(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> unused
androidx.recyclerview.widget.RecyclerView$5 -> androidx.recyclerview.widget.RecyclerView$5:
    840:840:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    851:856:void addView(android.view.View,int) -> addView
    911:923:void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams) -> attachViewToParent
    927:942:void detachViewFromParent(int) -> detachViewFromParent
    885:885:android.view.View getChildAt(int) -> getChildAt
    843:843:int getChildCount() -> getChildCount
    905:905:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> getChildViewHolder
    860:860:int indexOfChild(android.view.View) -> indexOfChild
    946:950:void onEnteredHiddenState(android.view.View) -> onEnteredHiddenState
    954:958:void onLeftHiddenState(android.view.View) -> onLeftHiddenState
    890:901:void removeAllViews() -> removeAllViews
    865:881:void removeViewAt(int) -> removeViewAt
androidx.recyclerview.widget.RecyclerView$6 -> androidx.recyclerview.widget.RecyclerView$6:
    963:963:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    1008:1023:void dispatchUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> dispatchUpdate
    966:978:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolder(int) -> findViewHolder
    998:1000:void markViewHoldersUpdated(int,int,java.lang.Object) -> markViewHoldersUpdated
    1032:1034:void offsetPositionsForAdd(int,int) -> offsetPositionsForAdd
    1038:1041:void offsetPositionsForMove(int,int) -> offsetPositionsForMove
    983:986:void offsetPositionsForRemovingInvisible(int,int) -> offsetPositionsForRemovingInvisible
    991:993:void offsetPositionsForRemovingLaidOutOrNewView(int,int) -> offsetPositionsForRemovingLaidOutOrNewView
    1004:1005:void onDispatchFirstPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> onDispatchFirstPass
    1027:1028:void onDispatchSecondPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> onDispatchSecondPass
androidx.recyclerview.widget.RecyclerView$Adapter -> androidx.recyclerview.widget.RecyclerView$Adapter:
    6700:6702:void <init>() -> <init>
    6815:6830:void bindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> bindViewHolder
    6793:6803:androidx.recyclerview.widget.RecyclerView$ViewHolder createViewHolder(android.view.ViewGroup,int) -> createViewHolder
    6873:6873:long getItemId(int) -> getItemId
    6845:6845:int getItemViewType(int) -> getItemViewType
    6983:6983:boolean hasObservers() -> hasObservers
    6891:6891:boolean hasStableIds() -> hasStableIds
    7070:7071:void notifyDataSetChanged() -> notifyDataSetChanged
    7086:7087:void notifyItemChanged(int) -> notifyItemChanged
    7114:7115:void notifyItemChanged(int,java.lang.Object) -> notifyItemChanged
    7180:7181:void notifyItemInserted(int) -> notifyItemInserted
    7195:7196:void notifyItemMoved(int,int) -> notifyItemMoved
    7132:7133:void notifyItemRangeChanged(int,int) -> notifyItemRangeChanged
    7163:7164:void notifyItemRangeChanged(int,int,java.lang.Object) -> notifyItemRangeChanged
    7214:7215:void notifyItemRangeInserted(int,int) -> notifyItemRangeInserted
    7248:7249:void notifyItemRangeRemoved(int,int) -> notifyItemRangeRemoved
    7231:7232:void notifyItemRemoved(int) -> notifyItemRemoved
    7029:7029:void onAttachedToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> onAttachedToRecyclerView
    6781:6782:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List) -> onBindViewHolder
    7038:7038:void onDetachedFromRecyclerView(androidx.recyclerview.widget.RecyclerView) -> onDetachedFromRecyclerView
    6949:6949:boolean onFailedToRecycleView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onFailedToRecycleView
    6963:6963:void onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewAttachedToWindow
    6975:6975:void onViewDetachedFromWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewDetachedFromWindow
    6912:6912:void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewRecycled
    7003:7004:void registerAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver) -> registerAdapterDataObserver
    6857:6862:void setHasStableIds(boolean) -> setHasStableIds
    7017:7018:void unregisterAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver) -> unregisterAdapterDataObserver
androidx.recyclerview.widget.RecyclerView$AdapterDataObservable -> androidx.recyclerview.widget.RecyclerView$AdapterDataObservable:
    11986:11986:void <init>() -> <init>
    11988:11988:boolean hasObservers() -> hasObservers
    11996:11999:void notifyChanged() -> notifyChanged
    12037:12040:void notifyItemMoved(int,int) -> notifyItemMoved
    12002:12003:void notifyItemRangeChanged(int,int) -> notifyItemRangeChanged
    12011:12014:void notifyItemRangeChanged(int,int,java.lang.Object) -> notifyItemRangeChanged
    12021:12024:void notifyItemRangeInserted(int,int) -> notifyItemRangeInserted
    12031:12034:void notifyItemRangeRemoved(int,int) -> notifyItemRangeRemoved
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver -> androidx.recyclerview.widget.RecyclerView$AdapterDataObserver:
    11452:11452:void <init>() -> <init>
    11455:11455:void onChanged() -> onChanged
    11459:11459:void onItemRangeChanged(int,int) -> onItemRangeChanged
    11464:11465:void onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    11469:11469:void onItemRangeInserted(int,int) -> onItemRangeInserted
    11477:11477:void onItemRangeMoved(int,int,int) -> onItemRangeMoved
    11473:11473:void onItemRangeRemoved(int,int) -> onItemRangeRemoved
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory -> androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory:
    5337:5339:void <init>() -> <init>
    5368:5368:android.widget.EdgeEffect createEdgeEffect(androidx.recyclerview.widget.RecyclerView,int) -> createEdgeEffect
androidx.recyclerview.widget.RecyclerView$ItemAnimator -> androidx.recyclerview.widget.RecyclerView$ItemAnimator:
    12483:13151:void <init>() -> <init>
    12868:12879:int buildAdapterChangeFlagsForAnimations(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> buildAdapterChangeFlagsForAnimations
    13057:13057:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> canReuseUpdatedViewHolder
    13087:13087:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List) -> canReuseUpdatedViewHolder
    12952:12956:void dispatchAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAnimationFinished
    12993:12994:void dispatchAnimationStarted(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAnimationStarted
    13095:13100:void dispatchAnimationsFinished() -> dispatchAnimationsFinished
    12572:12572:long getAddDuration() -> getAddDuration
    12608:12608:long getChangeDuration() -> getChangeDuration
    12554:12554:long getMoveDuration() -> getMoveDuration
    12590:12590:long getRemoveDuration() -> getRemoveDuration
    13024:13032:boolean isRunning(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener) -> isRunning
    13113:13113:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo obtainHolderInfo() -> obtainHolderInfo
    12967:12967:void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAnimationFinished
    13005:13005:void onAnimationStarted(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAnimationStarted
    12697:12697:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPostLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> recordPostLayoutInformation
    12668:12668:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPreLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List) -> recordPreLayoutInformation
    12581:12582:void setAddDuration(long) -> setAddDuration
    12617:12618:void setChangeDuration(long) -> setChangeDuration
    12629:12630:void setListener(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener) -> setListener
    12563:12564:void setMoveDuration(long) -> setMoveDuration
    12599:12600:void setRemoveDuration(long) -> setRemoveDuration
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo -> androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo:
    13180:13181:void <init>() -> <init>
    13192:13192:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> setFrom
    13208:13213:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> setFrom
androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener -> androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener:
    12441:12442:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    12446:12458:void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAnimationFinished
androidx.recyclerview.widget.RecyclerView$ItemDecoration -> androidx.recyclerview.widget.RecyclerView$ItemDecoration:
    10444:10444:void <init>() -> <init>
    10496:10497:void getItemOffsets(android.graphics.Rect,int,androidx.recyclerview.widget.RecyclerView) -> getItemOffsets
    10521:10523:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
    10455:10456:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDraw
    10464:10464:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView) -> onDraw
    10477:10478:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
    10486:10486:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView) -> onDrawOver
androidx.recyclerview.widget.RecyclerView$LayoutManager -> androidx.recyclerview.widget.RecyclerView$LayoutManager:
    7296:10422:void <init>() -> <init>
    8253:8254:void addDisappearingView(android.view.View) -> addDisappearingView
    8271:8272:void addDisappearingView(android.view.View,int) -> addDisappearingView
    8282:8283:void addView(android.view.View) -> addView
    8294:8295:void addView(android.view.View,int) -> addView
    8298:8349:void addViewInt(android.view.View,int,boolean) -> addViewInt
    7594:7597:void assertInLayoutOrScroll(java.lang.String) -> assertInLayoutOrScroll
    7631:7634:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    8539:8549:void attachView(android.view.View,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> attachView
    8560:8561:void attachView(android.view.View,int) -> attachView
    8571:8572:void attachView(android.view.View) -> attachView
    9442:9448:void calculateItemDecorationsForChild(android.view.View,android.graphics.Rect) -> calculateItemDecorationsForChild
    8149:8149:boolean canScrollHorizontally() -> canScrollHorizontally
    8159:8159:boolean canScrollVertically() -> canScrollVertically
    8064:8064:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    7610:7619:int chooseSize(int,int,int) -> chooseSize
    7816:7816:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    7844:7844:void collectInitialPrefetchPositions(int,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectInitialPrefetchPositions
    9892:9892:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    9907:9907:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    9922:9922:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    9937:9937:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollExtent
    9952:9952:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    9967:9967:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    8927:8932:void detachAndScrapAttachedViews(androidx.recyclerview.widget.RecyclerView$Recycler) -> detachAndScrapAttachedViews
    8610:8612:void detachAndScrapView(android.view.View,androidx.recyclerview.widget.RecyclerView$Recycler) -> detachAndScrapView
    8624:8626:void detachAndScrapViewAt(int,androidx.recyclerview.widget.RecyclerView$Recycler) -> detachAndScrapViewAt
    8497:8501:void detachView(android.view.View) -> detachView
    8519:8520:void detachViewAt(int) -> detachViewAt
    8526:8527:void detachViewInternal(int,android.view.View) -> detachViewInternal
    7847:7849:void dispatchAttachedToWindow(androidx.recyclerview.widget.RecyclerView) -> dispatchAttachedToWindow
    7852:7854:void dispatchDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> dispatchDetachedFromWindow
    8234:8237:void endAnimation(android.view.View) -> endAnimation
    8438:8448:android.view.View findContainingItemView(android.view.View) -> findContainingItemView
    8466:8478:android.view.View findViewByPosition(int) -> findViewByPosition
    8081:8086:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    8105:8105:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    8397:8397:int getBaseline() -> getBaseline
    9477:9477:int getBottomDecorationHeight(android.view.View) -> getBottomDecorationHeight
    8668:8668:android.view.View getChildAt(int) -> getChildAt
    8658:8658:int getChildCount() -> getChildCount
    9138:9164:int getChildMeasureSpec(int,int,int,boolean) -> getChildMeasureSpec
    9181:9222:int getChildMeasureSpec(int,int,int,int,boolean) -> getChildMeasureSpec
    9573:9606:int[] getChildRectangleOnScreenScrollAmount(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean) -> getChildRectangleOnScreenScrollAmount
    7964:7964:boolean getClipToPadding() -> getClipToPadding
    10267:10270:int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getColumnCountForAccessibility
    9421:9421:int getDecoratedBottom(android.view.View) -> getDecoratedBottom
    9373:9374:void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect) -> getDecoratedBoundsWithMargins
    9385:9385:int getDecoratedLeft(android.view.View) -> getDecoratedLeft
    9249:9250:int getDecoratedMeasuredHeight(android.view.View) -> getDecoratedMeasuredHeight
    9235:9236:int getDecoratedMeasuredWidth(android.view.View) -> getDecoratedMeasuredWidth
    9409:9409:int getDecoratedRight(android.view.View) -> getDecoratedRight
    9397:9397:int getDecoratedTop(android.view.View) -> getDecoratedTop
    8824:8831:android.view.View getFocusedChild() -> getFocusedChild
    8734:8734:int getHeight() -> getHeight
    8702:8702:int getHeightMode() -> getHeightMode
    8847:8848:int getItemCount() -> getItemCount
    8418:8418:int getItemViewType(android.view.View) -> getItemViewType
    8224:8224:int getLayoutDirection() -> getLayoutDirection
    9492:9492:int getLeftDecorationWidth(android.view.View) -> getLeftDecorationWidth
    10022:10022:int getMinimumHeight() -> getMinimumHeight
    10014:10014:int getMinimumWidth() -> getMinimumWidth
    8774:8774:int getPaddingBottom() -> getPaddingBottom
    8794:8794:int getPaddingEnd() -> getPaddingEnd
    8744:8744:int getPaddingLeft() -> getPaddingLeft
    8764:8764:int getPaddingRight() -> getPaddingRight
    8784:8784:int getPaddingStart() -> getPaddingStart
    8754:8754:int getPaddingTop() -> getPaddingTop
    8408:8408:int getPosition(android.view.View) -> getPosition
    10374:10383:androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties getProperties(android.content.Context,android.util.AttributeSet,int,int) -> getProperties
    9507:9507:int getRightDecorationWidth(android.view.View) -> getRightDecorationWidth
    10247:10250:int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getRowCountForAccessibility
    10231:10231:int getSelectionModeForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getSelectionModeForAccessibility
    9462:9462:int getTopDecorationHeight(android.view.View) -> getTopDecorationHeight
    9340:9363:void getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect) -> getTransformedBoundingBox
    8718:8718:int getWidth() -> getWidth
    8685:8685:int getWidthMode() -> getWidthMode
    10408:10416:boolean hasFlexibleChildInBothOrientations() -> hasFlexibleChildInBothOrientations
    8814:8814:boolean hasFocus() -> hasFocus
    8892:8901:void ignoreView(android.view.View) -> ignoreView
    7864:7864:boolean isAttachedToWindow() -> isAttachedToWindow
    7725:7725:boolean isAutoMeasureEnabled() -> isAutoMeasureEnabled
    8804:8804:boolean isFocused() -> isFocused
    9705:9720:boolean isFocusedChildVisibleAfterScrolling(androidx.recyclerview.widget.RecyclerView,int,int) -> isFocusedChildVisibleAfterScrolling
    7792:7792:boolean isItemPrefetchEnabled() -> isItemPrefetchEnabled
    10284:10284:boolean isLayoutHierarchical(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> isLayoutHierarchical
    9059:9059:boolean isMeasurementCacheEnabled() -> isMeasurementCacheEnabled
    9075:9088:boolean isMeasurementUpToDate(int,int,int) -> isMeasurementUpToDate
    8211:8211:boolean isSmoothScrolling() -> isSmoothScrolling
    9683:9691:boolean isViewPartiallyVisible(android.view.View,boolean,boolean) -> isViewPartiallyVisible
    9284:9287:void layoutDecorated(android.view.View,int,int,int,int) -> layoutDecorated
    9320:9325:void layoutDecoratedWithMargins(android.view.View,int,int,int,int) -> layoutDecoratedWithMargins
    9005:9019:void measureChild(android.view.View,int,int) -> measureChild
    9104:9121:void measureChildWithMargins(android.view.View,int,int) -> measureChildWithMargins
    8591:8598:void moveView(int,int) -> moveView
    8858:8861:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    8870:8873:void offsetChildrenVertical(int) -> offsetChildrenVertical
    9770:9770:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter) -> onAdapterChanged
    9798:9798:boolean onAddFocusables(androidx.recyclerview.widget.RecyclerView,java.util.ArrayList,int,int) -> onAddFocusables
    7919:7919:void onAttachedToWindow(androidx.recyclerview.widget.RecyclerView) -> onAttachedToWindow
    7928:7928:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView) -> onDetachedFromWindow
    7955:7956:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    9535:9535:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    10136:10137:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    10152:10163:void onInitializeAccessibilityEvent(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    10087:10088:void onInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    10117:10132:void onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    10167:10173:void onInitializeAccessibilityNodeInfoForItem(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    10192:10198:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    9556:9556:android.view.View onInterceptFocusSearch(android.view.View,int) -> onInterceptFocusSearch
    9822:9822:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsAdded
    9809:9809:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> onItemsChanged
    9877:9877:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> onItemsMoved
    9833:9833:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsRemoved
    9846:9846:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsUpdated
    9859:9860:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    8019:8020:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    8034:8034:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    9995:9996:void onMeasure(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int) -> onMeasure
    9730:9730:boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,android.view.View,android.view.View) -> onRequestChildFocus
    9752:9752:boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,android.view.View,android.view.View) -> onRequestChildFocus
    10042:10042:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    10036:10036:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    10062:10062:void onScrollStateChanged(int) -> onScrollStateChanged
    10051:10054:void onSmoothScrollerStopped(androidx.recyclerview.widget.RecyclerView$SmoothScroller) -> onSmoothScrollerStopped
    10289:10289:boolean performAccessibilityAction(int,android.os.Bundle) -> performAccessibilityAction
    10305:10331:boolean performAccessibilityAction(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,android.os.Bundle) -> performAccessibilityAction
    10337:10337:boolean performAccessibilityActionForItem(android.view.View,int,android.os.Bundle) -> performAccessibilityActionForItem
    10358:10358:boolean performAccessibilityActionForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,int,android.os.Bundle) -> performAccessibilityActionForItem
    7878:7881:void postOnAnimation(java.lang.Runnable) -> postOnAnimation
    8384:8388:void removeAllViews() -> removeAllViews
    10077:10083:void removeAndRecycleAllViews(androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleAllViews
    8963:8990:void removeAndRecycleScrapInt(androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleScrapInt
    8635:8637:void removeAndRecycleView(android.view.View,androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleView
    8646:8649:void removeAndRecycleViewAt(int,androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleViewAt
    7898:7901:boolean removeCallbacks(java.lang.Runnable) -> removeCallbacks
    8581:8582:void removeDetachedView(android.view.View) -> removeDetachedView
    8360:8361:void removeView(android.view.View) -> removeView
    8372:8376:void removeViewAt(int) -> removeViewAt
    9625:9625:boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    9645:9659:boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean) -> requestChildRectangleOnScreen
    7581:7584:void requestLayout() -> requestLayout
    10211:10212:void requestSimpleAnimationsInNextLayout() -> requestSimpleAnimationsInNextLayout
    8935:8951:void scrapOrRecycleView(androidx.recyclerview.widget.RecyclerView$Recycler,int,android.view.View) -> scrapOrRecycleView
    8122:8122:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    8172:8172:void scrollToPosition(int) -> scrollToPosition
    8139:8139:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    7652:7653:void setAutoMeasureEnabled(boolean) -> setAutoMeasureEnabled
    10387:10391:void setExactMeasureSpecsFrom(androidx.recyclerview.widget.RecyclerView) -> setExactMeasureSpecsFrom
    7774:7781:void setItemPrefetchEnabled(boolean) -> setItemPrefetchEnabled
    7491:7502:void setMeasureSpecs(int,int) -> setMeasureSpecs
    7570:7575:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    10006:10007:void setMeasuredDimension(int,int) -> setMeasuredDimension
    7518:7547:void setMeasuredDimensionFromChildren(int,int) -> setMeasuredDimensionFromChildren
    9071:9072:void setMeasurementCacheEnabled(boolean) -> setMeasurementCacheEnabled
    7475:7488:void setRecyclerView(androidx.recyclerview.widget.RecyclerView) -> setRecyclerView
    9042:9045:boolean shouldMeasureChild(android.view.View,int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> shouldMeasureChild
    10404:10404:boolean shouldMeasureTwice() -> shouldMeasureTwice
    9028:9030:boolean shouldReMeasureChild(android.view.View,int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> shouldReMeasureChild
    8185:8186:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
    8199:8205:void startSmoothScroll(androidx.recyclerview.widget.RecyclerView$SmoothScroller) -> startSmoothScroll
    8913:8917:void stopIgnoringView(android.view.View) -> stopIgnoringView
    10045:10048:void stopSmoothScroller() -> stopSmoothScroller
    7751:7751:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
androidx.recyclerview.widget.RecyclerView$LayoutManager$1 -> androidx.recyclerview.widget.RecyclerView$LayoutManager$1:
    7305:7305:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    7318:7318:android.view.View getChildAt(int) -> getChildAt
    7308:7308:int getChildCount() -> getChildCount
    7340:7342:int getChildEnd(android.view.View) -> getChildEnd
    7333:7335:int getChildStart(android.view.View) -> getChildStart
    7313:7313:android.view.View getParent() -> getParent
    7328:7328:int getParentEnd() -> getParentEnd
    7323:7323:int getParentStart() -> getParentStart
androidx.recyclerview.widget.RecyclerView$LayoutManager$2 -> androidx.recyclerview.widget.RecyclerView$LayoutManager$2:
    7351:7351:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    7364:7364:android.view.View getChildAt(int) -> getChildAt
    7354:7354:int getChildCount() -> getChildCount
    7387:7389:int getChildEnd(android.view.View) -> getChildEnd
    7380:7382:int getChildStart(android.view.View) -> getChildStart
    7359:7359:android.view.View getParent() -> getParent
    7374:7375:int getParentEnd() -> getParentEnd
    7369:7369:int getParentStart() -> getParentStart
androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties -> androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties:
    10422:10422:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$LayoutParams -> androidx.recyclerview.widget.RecyclerView$LayoutParams:
    11348:11357:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    11348:11361:void <init>(int,int) -> <init>
    11348:11365:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    11348:11369:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    11348:11373:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> <init>
    11444:11444:int getViewAdapterPosition() -> getViewAdapterPosition
    11432:11432:int getViewLayoutPosition() -> getViewLayoutPosition
    11422:11422:int getViewPosition() -> getViewPosition
    11414:11414:boolean isItemChanged() -> isItemChanged
    11403:11403:boolean isItemRemoved() -> isItemRemoved
    11392:11392:boolean isViewInvalid() -> isViewInvalid
    11382:11382:boolean viewNeedsUpdate() -> viewNeedsUpdate
androidx.recyclerview.widget.RecyclerView$OnFlingListener -> androidx.recyclerview.widget.RecyclerView$OnFlingListener:
    12418:12418:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$OnScrollListener -> androidx.recyclerview.widget.RecyclerView$OnScrollListener:
    10609:10609:void <init>() -> <init>
    10617:10617:void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int) -> onScrollStateChanged
    10630:10630:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
androidx.recyclerview.widget.RecyclerView$RecycledViewPool -> androidx.recyclerview.widget.RecyclerView$RecycledViewPool:
    5380:5405:void <init>() -> <init>
    5523:5524:void attach() -> attach
    5411:5415:void clear() -> clear
    5527:5528:void detach() -> detach
    5507:5510:void factorInBindTime(int,long) -> factorInBindTime
    5501:5504:void factorInCreateTime(int,long) -> factorInCreateTime
    5449:5454:androidx.recyclerview.widget.RecyclerView$ViewHolder getRecycledView(int) -> getRecycledView
    5436:5436:int getRecycledViewCount(int) -> getRecycledViewCount
    5556:5561:androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData getScrapDataForType(int) -> getScrapDataForType
    5544:5553:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> onAdapterChanged
    5481:5491:void putRecycledView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> putRecycledView
    5494:5497:long runningAverage(long,long) -> runningAverage
    5424:5430:void setMaxRecycledViews(int,int) -> setMaxRecycledViews
    5463:5470:int size() -> size
    5518:5519:boolean willBindInTime(int,long,long) -> willBindInTime
    5513:5514:boolean willCreateInTime(int,long,long) -> willCreateInTime
androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData -> androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData:
    5397:5401:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$Recycler -> androidx.recyclerview.widget.RecyclerView$Recycler:
    5637:5647:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    6250:6260:void addViewHolderToRecycledViewPool(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> addViewHolderToRecycledViewPool
    6039:6052:void attachAccessibilityDelegateOnBind(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> attachAccessibilityDelegateOnBind
    5778:5807:void bindViewToPosition(android.view.View,int) -> bindViewToPosition
    5660:5662:void clear() -> clear
    6627:6642:void clearOldPositions() -> clearOldPositions
    6330:6334:void clearScrap() -> clearScrap
    5828:5835:int convertPreLayoutPositionToPostLayout(int) -> convertPreLayoutPositionToPostLayout
    6481:6491:void dispatchViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchViewRecycled
    6339:6364:androidx.recyclerview.widget.RecyclerView$ViewHolder getChangedScrapViewForPosition(int) -> getChangedScrapViewForPosition
    6585:6588:androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> getRecycledViewPool
    6322:6322:int getScrapCount() -> getScrapCount
    5692:5692:java.util.List getScrapList() -> getScrapList
    6429:6477:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrCachedViewForId(long,int,boolean) -> getScrapOrCachedViewForId
    6375:6424:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean) -> getScrapOrHiddenOrCachedHolderForPosition
    6326:6326:android.view.View getScrapViewAt(int) -> getScrapViewAt
    5854:5854:android.view.View getViewForPosition(int) -> getViewForPosition
    5858:5858:android.view.View getViewForPosition(int,boolean) -> getViewForPosition
    6055:6058:void invalidateDisplayListInt(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> invalidateDisplayListInt
    6061:6079:void invalidateDisplayListInt(android.view.ViewGroup,boolean) -> invalidateDisplayListInt
    6645:6653:void markItemDecorInsetsDirty() -> markItemDecorInsetsDirty
    6611:6624:void markKnownViewsInvalid() -> markKnownViewsInvalid
    6529:6540:void offsetPositionRecordsForInsert(int,int) -> offsetPositionRecordsForInsert
    6501:6526:void offsetPositionRecordsForMove(int,int) -> offsetPositionRecordsForMove
    6549:6568:void offsetPositionRecordsForRemove(int,int,boolean) -> offsetPositionRecordsForRemove
    6495:6497:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> onAdapterChanged
    6268:6273:void quickRecycleScrapView(android.view.View) -> quickRecycleScrapView
    6116:6124:void recycleAndClearCachedViews() -> recycleAndClearCachedViews
    6141:6147:void recycleCachedViewAt(int) -> recycleCachedViewAt
    6094:6104:void recycleView(android.view.View) -> recycleView
    6155:6239:void recycleViewHolderInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> recycleViewHolderInternal
    6112:6113:void recycleViewInternal(android.view.View) -> recycleViewInternal
    6285:6302:void scrapView(android.view.View) -> scrapView
    6575:6582:void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool) -> setRecycledViewPool
    6571:6572:void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension) -> setViewCacheExtension
    5670:5672:void setViewCacheSize(int) -> setViewCacheSize
    5744:5759:boolean tryBindViewHolderByDeadline(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,long) -> tryBindViewHolderByDeadline
    5882:6035:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long) -> tryGetViewHolderForPositionByDeadline
    6311:6319:void unscrapView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> unscrapView
    5675:5683:void updateViewCacheSize() -> updateViewCacheSize
    5706:5727:boolean validateViewHolderForOffsetPosition(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> validateViewHolderForOffsetPosition
    6592:6608:void viewRangeUpdate(int,int) -> viewRangeUpdate
androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver -> androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver:
    5276:5277:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    5281:5288:void onChanged() -> onChanged
    5292:5296:void onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    5300:5304:void onItemRangeInserted(int,int) -> onItemRangeInserted
    5316:5320:void onItemRangeMoved(int,int,int) -> onItemRangeMoved
    5308:5312:void onItemRangeRemoved(int,int) -> onItemRangeRemoved
    5323:5329:void triggerUpdateProcessor() -> triggerUpdateProcessor
androidx.recyclerview.widget.RecyclerView$SavedState -> androidx.recyclerview.widget.RecyclerView$SavedState:
    12078:12078:void <clinit>() -> <clinit>
    12056:12059:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    12065:12066:void <init>(android.os.Parcelable) -> <init>
    12075:12076:void copyFrom(androidx.recyclerview.widget.RecyclerView$SavedState) -> copyFrom
    12070:12072:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.RecyclerView$SavedState$1 -> androidx.recyclerview.widget.RecyclerView$SavedState$1:
    12078:12078:void <init>() -> <init>
    12078:12078:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    12078:12078:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    12081:12081:androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    12086:12086:androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    12078:12078:java.lang.Object[] newArray(int) -> newArray
    12091:12091:androidx.recyclerview.widget.RecyclerView$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.RecyclerView$SimpleOnItemTouchListener -> androidx.recyclerview.widget.RecyclerView$SimpleOnItemTouchListener:
    10585:10585:void <init>() -> <init>
    10588:10588:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    10597:10597:void onRequestDisallowInterceptTouchEvent(boolean) -> onRequestDisallowInterceptTouchEvent
    10593:10593:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
androidx.recyclerview.widget.RecyclerView$SmoothScroller -> androidx.recyclerview.widget.RecyclerView$SmoothScroller:
    11491:11509:void <init>() -> <init>
    11562:11569:android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    11707:11707:android.view.View findViewByPosition(int) -> findViewByPosition
    11700:11700:int getChildCount() -> getChildCount
    11693:11693:int getChildPosition(android.view.View) -> getChildPosition
    11578:11578:androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    11630:11630:int getTargetPosition() -> getTargetPosition
    11716:11717:void instantScrollToPosition(int) -> instantScrollToPosition
    11612:11612:boolean isPendingInitialRun() -> isPendingInitialRun
    11620:11620:boolean isRunning() -> isRunning
    11733:11737:void normalize(android.graphics.PointF) -> normalize
    11637:11687:void onAnimation(int,int) -> onAnimation
    11720:11726:void onChildAttachedToWindow(android.view.View) -> onChildAttachedToWindow
    11547:11548:void setTargetPosition(int) -> setTargetPosition
    11524:11544:void start(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$LayoutManager) -> start
    11588:11602:void stop() -> stop
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action -> androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action:
    11805:11806:void <init>(int,int) -> <init>
    11814:11815:void <init>(int,int,int) -> <init>
    11790:11830:void <init>(int,int,int,android.view.animation.Interpolator) -> <init>
    11918:11918:int getDuration() -> getDuration
    11899:11899:int getDx() -> getDx
    11909:11909:int getDy() -> getDy
    11928:11928:android.view.animation.Interpolator getInterpolator() -> getInterpolator
    11852:11852:boolean hasJumpTarget() -> hasJumpTarget
    11848:11849:void jumpTo(int) -> jumpTo
    11856:11886:void runIfNecessary(androidx.recyclerview.widget.RecyclerView) -> runIfNecessary
    11922:11924:void setDuration(int) -> setDuration
    11903:11905:void setDx(int) -> setDx
    11913:11915:void setDy(int) -> setDy
    11938:11940:void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    11952:11957:void update(int,int,int,android.view.animation.Interpolator) -> update
    11889:11895:void validate() -> validate
androidx.recyclerview.widget.RecyclerView$State -> androidx.recyclerview.widget.RecyclerView$State:
    12106:12177:void <init>() -> <init>
    12112:12117:void assertLayoutStep(int) -> assertLayoutStep
    12338:12338:boolean didStructureChange() -> didStructureChange
    12292:12295:java.lang.Object get(int) -> get
    12366:12366:int getItemCount() -> getItemCount
    12379:12379:int getRemainingScrollHorizontal() -> getRemainingScrollHorizontal
    12390:12390:int getRemainingScrollVertical() -> getRemainingScrollVertical
    12321:12321:int getTargetScrollPosition() -> getTargetScrollPosition
    12330:12330:boolean hasTargetScrollPosition() -> hasTargetScrollPosition
    12236:12236:boolean isMeasuring() -> isMeasuring
    12245:12245:boolean isPreLayout() -> isPreLayout
    12214:12219:void prepareForNestedPrefetch(androidx.recyclerview.widget.RecyclerView$Adapter) -> prepareForNestedPrefetch
    12307:12311:void put(int,java.lang.Object) -> put
    12276:12280:void remove(int) -> remove
    12196:12203:androidx.recyclerview.widget.RecyclerView$State reset() -> reset
    12395:12395:java.lang.String toString() -> toString
    12256:12256:boolean willRunPredictiveAnimations() -> willRunPredictiveAnimations
    12267:12267:boolean willRunSimpleAnimations() -> willRunSimpleAnimations
androidx.recyclerview.widget.RecyclerView$ViewCacheExtension -> androidx.recyclerview.widget.RecyclerView$ViewCacheExtension:
    6669:6669:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$ViewFlinger -> androidx.recyclerview.widget.RecyclerView$ViewFlinger:
    5025:5035:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    5202:5220:int computeScrollDuration(int,int,int,int) -> computeScrollDuration
    5159:5161:void disableRunOnAnimationRequests() -> disableRunOnAnimationRequests
    5196:5198:float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    5164:5168:void enableRunOnAnimationRequests() -> enableRunOnAnimationRequests
    5180:5185:void fling(int,int) -> fling
    5171:5177:void postOnAnimation() -> postOnAnimation
    5039:5156:void run() -> run
    5188:5189:void smoothScrollBy(int,int) -> smoothScrollBy
    5192:5193:void smoothScrollBy(int,int,int,int) -> smoothScrollBy
    5224:5225:void smoothScrollBy(int,int,int) -> smoothScrollBy
    5228:5230:void smoothScrollBy(int,int,android.view.animation.Interpolator) -> smoothScrollBy
    5233:5247:void smoothScrollBy(int,int,int,android.view.animation.Interpolator) -> smoothScrollBy
    5250:5252:void stop() -> stop
androidx.recyclerview.widget.RecyclerView$ViewHolder -> androidx.recyclerview.widget.RecyclerView$ViewHolder:
    10804:10804:void <clinit>() -> <clinit>
    10692:10836:void <init>(android.view.View) -> <init>
    11041:11047:void addChangePayload(java.lang.Object) -> addChangePayload
    11037:11038:void addFlags(int) -> addFlags
    10861:10863:void clearOldPosition() -> clearOldPosition
    11057:11061:void clearPayload() -> clearPayload
    10988:10989:void clearReturnedFromScrapFlag() -> clearReturnedFromScrapFlag
    10992:10993:void clearTmpDetachFlag() -> clearTmpDetachFlag
    11050:11054:void createPayloadsIfNeeded() -> createPayloadsIfNeeded
    11195:11195:boolean doesTransientStatePreventRecycling() -> doesTransientStatePreventRecycling
    10839:10842:void flagRemovedAndOffsetPosition(int,int,boolean) -> flagRemovedAndOffsetPosition
    10937:10940:int getAdapterPosition() -> getAdapterPosition
    10965:10965:long getItemId() -> getItemId
    10972:10972:int getItemViewType() -> getItemViewType
    10911:10911:int getLayoutPosition() -> getLayoutPosition
    10955:10955:int getOldPosition() -> getOldPosition
    10885:10885:int getPosition() -> getPosition
    11064:11073:java.util.List getUnmodifiedPayloads() -> getUnmodifiedPayloads
    11021:11021:boolean hasAnyOfTheFlags(int) -> hasAnyOfTheFlags
    11029:11029:boolean isAdapterPositionUnknown() -> isAdapterPositionUnknown
    11013:11013:boolean isBound() -> isBound
    11005:11005:boolean isInvalid() -> isInvalid
    11178:11179:boolean isRecyclable() -> isRecyclable
    11017:11017:boolean isRemoved() -> isRemoved
    10976:10976:boolean isScrap() -> isScrap
    11025:11025:boolean isTmpDetached() -> isTmpDetached
    11199:11199:boolean isUpdated() -> isUpdated
    11009:11009:boolean needsUpdate() -> needsUpdate
    10845:10858:void offsetPosition(int,boolean) -> offsetPosition
    11097:11105:void onEnteredHiddenState(androidx.recyclerview.widget.RecyclerView) -> onEnteredHiddenState
    11111:11114:void onLeftHiddenState(androidx.recyclerview.widget.RecyclerView) -> onLeftHiddenState
    11078:11090:void resetInternal() -> resetInternal
    10866:10869:void saveOldPosition() -> saveOldPosition
    11033:11034:void setFlags(int,int) -> setFlags
    11153:11170:void setIsRecyclable(boolean) -> setIsRecyclable
    11000:11002:void setScrapContainer(androidx.recyclerview.widget.RecyclerView$Recycler,boolean) -> setScrapContainer
    11187:11187:boolean shouldBeKeptAsChild() -> shouldBeKeptAsChild
    10872:10872:boolean shouldIgnore() -> shouldIgnore
    10996:10997:void stopIgnoring() -> stopIgnoring
    11118:11136:java.lang.String toString() -> toString
    10980:10981:void unScrap() -> unScrap
    10984:10984:boolean wasReturnedFromScrap() -> wasReturnedFromScrap
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate -> androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate:
    37:40:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    86:86:androidx.core.view.AccessibilityDelegateCompat getItemDelegate() -> getItemDelegate
    69:77:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    60:65:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    48:55:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    43:43:boolean shouldIgnore() -> shouldIgnore
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate -> androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate:
    105:107:void <init>(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate) -> <init>
    111:117:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    121:129:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
androidx.recyclerview.widget.ScrollbarHelper -> androidx.recyclerview.widget.ScrollbarHelper:
    99:100:void <init>() -> <init>
    63:72:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean) -> computeScrollExtent
    32:53:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean,boolean) -> computeScrollOffset
    82:96:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean) -> computeScrollRange
androidx.recyclerview.widget.SimpleItemAnimator -> androidx.recyclerview.widget.SimpleItemAnimator:
    35:41:void <init>() -> <init>
    114:126:boolean animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateAppearance
    151:161:boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateChange
    90:107:boolean animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateDisappearance
    133:142:boolean animatePersistence(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animatePersistence
    84:84:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> canReuseUpdatedViewHolder
    301:303:void dispatchAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAddFinished
    344:345:void dispatchAddStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAddStarting
    316:318:void dispatchChangeFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> dispatchChangeFinished
    357:358:void dispatchChangeStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> dispatchChangeStarting
    291:293:void dispatchMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchMoveFinished
    335:336:void dispatchMoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchMoveStarting
    276:278:void dispatchRemoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchRemoveFinished
    326:327:void dispatchRemoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchRemoveStarting
    50:50:boolean getSupportsChangeAnimations() -> getSupportsChangeAnimations
    404:404:void onAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAddFinished
    393:393:void onAddStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAddStarting
    454:454:void onChangeFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> onChangeFinished
    441:441:void onChangeStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> onChangeStarting
    427:427:void onMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onMoveFinished
    416:416:void onMoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onMoveStarting
    381:381:void onRemoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onRemoveFinished
    370:370:void onRemoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onRemoveStarting
    71:72:void setSupportsChangeAnimations(boolean) -> setSupportsChangeAnimations
androidx.recyclerview.widget.SnapHelper -> androidx.recyclerview.widget.SnapHelper:
    34:42:void <init>() -> <init>
    93:106:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> attachToRecyclerView
    137:142:int[] calculateScrollDistance(int,int) -> calculateScrollDistance
    209:209:androidx.recyclerview.widget.RecyclerView$SmoothScroller createScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createScroller
    224:227:androidx.recyclerview.widget.LinearSmoothScroller createSnapScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createSnapScroller
    123:125:void destroyCallbacks() -> destroyCallbacks
    65:75:boolean onFling(int,int) -> onFling
    112:117:void setupCallbacks() -> setupCallbacks
    157:173:boolean snapFromFling(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> snapFromFling
    182:197:void snapToTargetExistingView() -> snapToTargetExistingView
androidx.recyclerview.widget.SnapHelper$1 -> androidx.recyclerview.widget.SnapHelper$1:
    43:44:void <init>(androidx.recyclerview.widget.SnapHelper) -> <init>
    48:53:void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int) -> onScrollStateChanged
    57:60:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
androidx.recyclerview.widget.SnapHelper$2 -> androidx.recyclerview.widget.SnapHelper$2:
    227:227:void <init>(androidx.recyclerview.widget.SnapHelper,android.content.Context) -> <init>
    246:246:float calculateSpeedPerPixel(android.util.DisplayMetrics) -> calculateSpeedPerPixel
    230:242:void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onTargetFound
androidx.recyclerview.widget.SortedList -> androidx.recyclerview.widget.SortedList:
    91:92:void <init>(java.lang.Class,androidx.recyclerview.widget.SortedList$Callback) -> <init>
    101:106:void <init>(java.lang.Class,androidx.recyclerview.widget.SortedList$Callback,int) -> <init>
    143:144:int add(java.lang.Object) -> add
    542:563:int add(java.lang.Object,boolean) -> add
    162:172:void addAll(java.lang.Object[],boolean) -> addAll
    182:183:void addAll(java.lang.Object[]) -> addAll
    193:195:void addAll(java.util.Collection) -> addAll
    252:265:void addAllInternal(java.lang.Object[]) -> addAllInternal
    793:810:void addToData(int,java.lang.Object) -> addToData
    518:526:void beginBatchedUpdates() -> beginBatchedUpdates
    822:830:void clear() -> clear
    813:815:java.lang.Object[] copyArray(java.lang.Object[]) -> copyArray
    532:539:void endBatchedUpdates() -> endBatchedUpdates
    743:764:int findIndexOf(java.lang.Object,java.lang.Object[],int,int,int) -> findIndexOf
    396:401:int findSameItem(java.lang.Object,java.lang.Object[],int,int) -> findSameItem
    705:716:java.lang.Object get(int) -> get
    728:739:int indexOf(java.lang.Object) -> indexOf
    769:789:int linearEqualitySearch(java.lang.Object,int,int,int) -> linearEqualitySearch
    408:472:void merge(java.lang.Object[],int) -> merge
    685:693:void recalculatePositionOfItemAt(int) -> recalculatePositionOfItemAt
    574:575:boolean remove(java.lang.Object) -> remove
    593:598:boolean remove(java.lang.Object,boolean) -> remove
    586:589:java.lang.Object removeItemAt(int) -> removeItemAt
    602:608:void removeItemAtIndex(int,boolean) -> removeItemAtIndex
    217:224:void replaceAll(java.lang.Object[],boolean) -> replaceAll
    235:236:void replaceAll(java.lang.Object[]) -> replaceAll
    247:249:void replaceAll(java.util.Collection) -> replaceAll
    334:338:void replaceAllInsert(java.lang.Object) -> replaceAllInsert
    268:331:void replaceAllInternal(java.lang.Object[]) -> replaceAllInternal
    341:344:void replaceAllRemove() -> replaceAllRemove
    114:114:int size() -> size
    353:391:int sortAndDedup(java.lang.Object[]) -> sortAndDedup
    479:483:void throwIfInMutationOperation() -> throwIfInMutationOperation
    631:655:void updateItemAt(int,java.lang.Object) -> updateItemAt
androidx.recyclerview.widget.SortedList$BatchedCallback -> androidx.recyclerview.widget.SortedList$BatchedCallback:
    951:954:void <init>(androidx.recyclerview.widget.SortedList$Callback) -> <init>
    988:988:boolean areContentsTheSame(java.lang.Object,java.lang.Object) -> areContentsTheSame
    993:993:boolean areItemsTheSame(java.lang.Object,java.lang.Object) -> areItemsTheSame
    958:958:int compare(java.lang.Object,java.lang.Object) -> compare
    1007:1008:void dispatchLastEvent() -> dispatchLastEvent
    999:999:java.lang.Object getChangePayload(java.lang.Object,java.lang.Object) -> getChangePayload
    978:979:void onChanged(int,int) -> onChanged
    983:984:void onChanged(int,int,java.lang.Object) -> onChanged
    963:964:void onInserted(int,int) -> onInserted
    973:974:void onMoved(int,int) -> onMoved
    968:969:void onRemoved(int,int) -> onRemoved
androidx.recyclerview.widget.SortedList$Callback -> androidx.recyclerview.widget.SortedList$Callback:
    840:840:void <init>() -> <init>
    920:920:java.lang.Object getChangePayload(java.lang.Object,java.lang.Object) -> getChangePayload
    866:867:void onChanged(int,int,java.lang.Object) -> onChanged
androidx.recyclerview.widget.SortedListAdapterCallback -> androidx.recyclerview.widget.SortedListAdapterCallback:
    33:35:void <init>(androidx.recyclerview.widget.RecyclerView$Adapter) -> <init>
    54:55:void onChanged(int,int) -> onChanged
    59:60:void onChanged(int,int,java.lang.Object) -> onChanged
    39:40:void onInserted(int,int) -> onInserted
    49:50:void onMoved(int,int) -> onMoved
    44:45:void onRemoved(int,int) -> onRemoved
androidx.recyclerview.widget.StaggeredGridLayoutManager -> androidx.recyclerview.widget.StaggeredGridLayoutManager:
    107:236:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    107:250:void <init>(int,int) -> <init>
    1808:1811:void appendViewToAllSpans(android.view.View) -> appendViewToAllSpans
    786:819:void applyPendingSavedState(androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> applyPendingSavedState
    1867:1873:boolean areAllEndsEqual() -> areAllEndsEqual
    1877:1883:boolean areAllStartsEqual() -> areAllStartsEqual
    528:531:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    1752:1765:void attachViewToSpans(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,androidx.recyclerview.widget.LayoutState) -> attachViewToSpans
    2045:2049:int calculateScrollDirectionForPosition(int) -> calculateScrollDirectionForPosition
    2029:2029:boolean canScrollHorizontally() -> canScrollHorizontally
    2024:2024:boolean canScrollVertically() -> canScrollVertically
    270:311:boolean checkForGaps() -> checkForGaps
    2275:2275:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    403:416:boolean checkSpanForGap(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span) -> checkSpanForGap
    2125:2157:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    1088:1088:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    1068:1068:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    1108:1108:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    1092:1097:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollExtent
    1072:1077:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollOffset
    1112:1117:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollRange
    2054:2066:android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    1103:1103:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollExtent
    1083:1083:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    1123:1123:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    2394:2427:int convertFocusDirectionToLayoutDirection(int) -> convertFocusDirectionToLayoutDirection
    1734:1739:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromEnd(int) -> createFullSpanItemFromEnd
    1743:1748:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromStart(int) -> createFullSpanItemFromStart
    258:261:void createOrientationHelpers() -> createOrientationHelpers
    1577:1730:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState,androidx.recyclerview.widget.RecyclerView$State) -> fill
    990:999:int[] findFirstCompletelyVisibleItemPositions(int[]) -> findFirstCompletelyVisibleItemPositions
    2220:2228:int findFirstReferenceChildPosition(int) -> findFirstReferenceChildPosition
    1389:1408:android.view.View findFirstVisibleItemClosestToEnd(boolean) -> findFirstVisibleItemClosestToEnd
    1359:1379:android.view.View findFirstVisibleItemClosestToStart(boolean) -> findFirstVisibleItemClosestToStart
    1329:1331:int findFirstVisibleItemPositionInt() -> findFirstVisibleItemPositionInt
    958:967:int[] findFirstVisibleItemPositions(int[]) -> findFirstVisibleItemPositions
    1054:1063:int[] findLastCompletelyVisibleItemPositions(int[]) -> findLastCompletelyVisibleItemPositions
    2237:2244:int findLastReferenceChildPosition(int) -> findLastReferenceChildPosition
    1022:1031:int[] findLastVisibleItemPositions(int[]) -> findLastVisibleItemPositions
    1413:1428:void fixEndGap(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixEndGap
    1432:1447:void fixStartGap(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixStartGap
    2250:2254:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    2261:2261:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    2266:2269:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1346:1349:int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getColumnCountForAccessibility
    2210:2211:int getFirstChildPosition() -> getFirstChildPosition
    500:500:int getGapStrategy() -> getGapStrategy
    2205:2206:int getLastChildPosition() -> getLastChildPosition
    1887:1894:int getMaxEnd(int) -> getMaxEnd
    1845:1852:int getMaxStart(int) -> getMaxStart
    1898:1905:int getMinEnd(int) -> getMinEnd
    1856:1863:int getMinStart(int) -> getMinStart
    1982:2018:androidx.recyclerview.widget.StaggeredGridLayoutManager$Span getNextSpan(androidx.recyclerview.widget.LayoutState) -> getNextSpan
    2279:2279:int getOrientation() -> getOrientation
    580:580:boolean getReverseLayout() -> getReverseLayout
    1337:1340:int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getRowCountForAccessibility
    539:539:int getSpanCount() -> getSpanCount
    1533:1573:void handleUpdate(int,int,int) -> handleUpdate
    339:399:android.view.View hasGapsToFix() -> hasGapsToFix
    549:551:void invalidateSpanAssignments() -> invalidateSpanAssignments
    254:254:boolean isAutoMeasureEnabled() -> isAutoMeasureEnabled
    568:568:boolean isLayoutRTL() -> isLayoutRTL
    1128:1189:void measureChildWithDecorationsAndMargin(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,boolean) -> measureChildWithDecorationsAndMargin
    1193:1206:void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean) -> measureChildWithDecorationsAndMargin
    1488:1492:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    1496:1500:void offsetChildrenVertical(int) -> offsetChildrenVertical
    323:331:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    2286:2380:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    1304:1321:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1283:1300:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    1509:1510:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsAdded
    1514:1516:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> onItemsChanged
    1520:1521:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> onItemsMoved
    1504:1505:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsRemoved
    1526:1527:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    605:606:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    611:722:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> onLayoutChildren
    726:731:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    1222:1228:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1232:1277:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    316:319:void onScrollStateChanged(int) -> onScrollStateChanged
    1972:1975:boolean preferLastSpan(int) -> preferLastSpan
    2162:2174:void prepareLayoutStateForDelta(int,androidx.recyclerview.widget.RecyclerView$State) -> prepareLayoutStateForDelta
    1815:1818:void prependViewToAllSpans(android.view.View) -> prependViewToAllSpans
    1768:1804:void recycle(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState) -> recycle
    1938:1966:void recycleFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int) -> recycleFromEnd
    1909:1935:void recycleFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int) -> recycleFromStart
    734:780:void repositionToWrapContentIfNecessary() -> repositionToWrapContentIfNecessary
    560:565:void resolveShouldLayoutReverse() -> resolveShouldLayoutReverse
    2177:2201:int scrollBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollBy
    2035:2035:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    2079:2085:void scrollToPosition(int) -> scrollToPosition
    2101:2107:void scrollToPositionWithOffset(int,int) -> scrollToPositionWithOffset
    2041:2041:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    513:524:void setGapStrategy(int) -> setGapStrategy
    1481:1484:void setLayoutStateDirection(int) -> setLayoutStateDirection
    587:601:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    449:461:void setOrientation(int) -> setOrientation
    477:483:void setReverseLayout(boolean) -> setReverseLayout
    429:440:void setSpanCount(int) -> setSpanCount
    2072:2075:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
    935:935:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    1821:1827:void updateAllRemainingSpans(int,int) -> updateAllRemainingSpans
    840:844:boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorFromChildren
    849:923:boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorFromPendingData
    822:833:void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorInfoForLayout
    1450:1478:void updateLayoutState(int,androidx.recyclerview.widget.RecyclerView$State) -> updateLayoutState
    927:931:void updateMeasureSpecs(int) -> updateMeasureSpecs
    1830:1842:void updateRemainingSpans(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span,int,int) -> updateRemainingSpans
    1209:1217:int updateSpecWithExtra(int,int,int) -> updateSpecWithExtra
androidx.recyclerview.widget.StaggeredGridLayoutManager$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$1:
    216:216:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager) -> <init>
    219:220:void run() -> run
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo -> androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo:
    3266:3268:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager) -> <init>
    3293:3295:void assignCoordinateFromPadding() -> assignCoordinateFromPadding
    3298:3303:void assignCoordinateFromPadding(int) -> assignCoordinateFromPadding
    3271:3279:void reset() -> reset
    3282:3290:void saveSpanReferenceLines(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span[]) -> saveSpanReferenceLines
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams:
    2452:2453:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2456:2457:void <init>(int,int) -> <init>
    2460:2461:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2464:2465:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2468:2469:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> <init>
    2500:2503:int getSpanIndex() -> getSpanIndex
    2490:2490:boolean isFullSpan() -> isFullSpan
    2480:2481:void setFullSpan(boolean) -> setFullSpan
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup:
    2840:3074:void <init>() -> <init>
    3009:3029:void addFullSpanItem(androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem) -> addFullSpanItem
    2917:2921:void clear() -> clear
    2905:2914:void ensureSize(int) -> ensureSize
    2851:2859:int forceInvalidateAfter(int) -> forceInvalidateAfter
    3053:3068:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFirstFullSpanItemInRange(int,int,int,boolean) -> getFirstFullSpanItemInRange
    3032:3041:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFullSpanItem(int) -> getFullSpanItem
    2884:2887:int getSpan(int) -> getSpan
    2866:2879:int invalidateAfter(int) -> invalidateAfter
    2983:3005:int invalidateFullSpansAfter(int) -> invalidateFullSpansAfter
    2954:2963:void offsetForAddition(int,int) -> offsetForAddition
    2924:2933:void offsetForRemoval(int,int) -> offsetForRemoval
    2966:2976:void offsetFullSpansForAddition(int,int) -> offsetFullSpansForAddition
    2936:2951:void offsetFullSpansForRemoval(int,int) -> offsetFullSpansForRemoval
    2892:2894:void setSpan(int,androidx.recyclerview.widget.StaggeredGridLayoutManager$Span) -> setSpan
    2897:2901:int sizeForPosition(int) -> sizeForPosition
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem:
    3130:3130:void <clinit>() -> <clinit>
    3084:3093:void <init>(android.os.Parcel) -> <init>
    3095:3096:void <init>() -> <init>
    3104:3104:int describeContents() -> describeContents
    3099:3099:int getGapForSpan(int) -> getGapForSpan
    3122:3126:java.lang.String toString() -> toString
    3109:3118:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1:
    3131:3131:void <init>() -> <init>
    3131:3131:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3134:3134:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFromParcel(android.os.Parcel) -> createFromParcel
    3131:3131:java.lang.Object[] newArray(int) -> newArray
    3139:3139:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem[] newArray(int) -> newArray
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState -> androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState:
    3238:3238:void <clinit>() -> <clinit>
    3162:3163:void <init>() -> <init>
    3165:3185:void <init>(android.os.Parcel) -> <init>
    3187:3198:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState) -> <init>
    3217:3217:int describeContents() -> describeContents
    3209:3213:void invalidateAnchorPositionInfo() -> invalidateAnchorPositionInfo
    3201:3206:void invalidateSpanInfo() -> invalidateSpanInfo
    3222:3236:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1:
    3239:3239:void <init>() -> <init>
    3239:3239:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3242:3242:androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    3239:3239:java.lang.Object[] newArray(int) -> newArray
    3247:3247:androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span -> androidx.recyclerview.widget.StaggeredGridLayoutManager$Span:
    2511:2519:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager,int) -> <init>
    2602:2612:void appendToSpan(android.view.View) -> appendToSpan
    2617:2634:void cacheReferenceLineAndClear(boolean,int) -> cacheReferenceLineAndClear
    2567:2577:void calculateCachedEnd() -> calculateCachedEnd
    2533:2543:void calculateCachedStart() -> calculateCachedStart
    2637:2640:void clear() -> clear
    2708:2710:int findFirstCompletelyVisibleItemPosition() -> findFirstCompletelyVisibleItemPosition
    2702:2704:int findFirstPartiallyVisibleItemPosition() -> findFirstPartiallyVisibleItemPosition
    2696:2698:int findFirstVisibleItemPosition() -> findFirstVisibleItemPosition
    2726:2728:int findLastCompletelyVisibleItemPosition() -> findLastCompletelyVisibleItemPosition
    2720:2722:int findLastPartiallyVisibleItemPosition() -> findLastPartiallyVisibleItemPosition
    2714:2716:int findLastVisibleItemPosition() -> findLastVisibleItemPosition
    2758:2785:int findOnePartiallyOrCompletelyVisibleChild(int,int,boolean,boolean,boolean) -> findOnePartiallyOrCompletelyVisibleChild
    2795:2795:int findOnePartiallyVisibleChild(int,int,boolean) -> findOnePartiallyVisibleChild
    2789:2789:int findOneVisibleChild(int,int,boolean) -> findOneVisibleChild
    2679:2679:int getDeletedSize() -> getDeletedSize
    2555:2563:int getEndLine(int) -> getEndLine
    2581:2585:int getEndLine() -> getEndLine
    2803:2832:android.view.View getFocusableViewAfter(int,int) -> getFocusableViewAfter
    2683:2683:androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams getLayoutParams(android.view.View) -> getLayoutParams
    2522:2529:int getStartLine(int) -> getStartLine
    2547:2551:int getStartLine() -> getStartLine
    2643:2645:void invalidateCache() -> invalidateCache
    2687:2693:void onOffset(int) -> onOffset
    2652:2663:void popEnd() -> popEnd
    2666:2676:void popStart() -> popStart
    2589:2599:void prependToSpan(android.view.View) -> prependToSpan
    2648:2649:void setLine(int) -> setLine
androidx.recyclerview.widget.TileList -> androidx.recyclerview.widget.TileList:
    31:37:void <init>(int) -> <init>
    64:74:androidx.recyclerview.widget.TileList$Tile addOrReplace(androidx.recyclerview.widget.TileList$Tile) -> addOrReplace
    56:57:void clear() -> clear
    60:60:androidx.recyclerview.widget.TileList$Tile getAtIndex(int) -> getAtIndex
    40:48:java.lang.Object getItemAt(int) -> getItemAt
    78:83:androidx.recyclerview.widget.TileList$Tile removeAtPos(int) -> removeAtPos
    52:52:int size() -> size
androidx.recyclerview.widget.TileList$Tile -> androidx.recyclerview.widget.TileList$Tile:
    92:95:void <init>(java.lang.Class,int) -> <init>
    98:98:boolean containsPosition(int) -> containsPosition
    102:102:java.lang.Object getByPosition(int) -> getByPosition
androidx.recyclerview.widget.ViewBoundsCheck -> androidx.recyclerview.widget.ViewBoundsCheck:
    131:134:void <init>(androidx.recyclerview.widget.ViewBoundsCheck$Callback) -> <init>
    217:242:android.view.View findOneViewWithinBoundFlags(int,int,int,int) -> findOneViewWithinBoundFlags
    252:259:boolean isViewWithinBoundFlags(android.view.View,int) -> isViewWithinBoundFlags
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags -> androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags:
    136:137:void <init>() -> <init>
    152:153:void addFlags(int) -> addFlags
    170:193:boolean boundsMatch() -> boundsMatch
    160:166:int compare(int,int) -> compare
    156:157:void resetFlags() -> resetFlags
    141:145:void setBounds(int,int,int,int) -> setBounds
    148:149:void setFlags(int,int) -> setFlags
androidx.recyclerview.widget.ViewInfoStore -> androidx.recyclerview.widget.ViewInfoStore:
    35:288:void <init>() -> <init>
    143:150:void addToAppearedInPreLayoutHolders(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToAppearedInPreLayoutHolders
    196:202:void addToDisappearedInLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> addToDisappearedInLayout
    130:131:void addToOldChangeHolders(long,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> addToOldChangeHolders
    180:187:void addToPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToPostLayout
    62:69:void addToPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToPreLayout
    52:54:void clear() -> clear
    171:171:androidx.recyclerview.widget.RecyclerView$ViewHolder getFromOldChangeHolders(long) -> getFromOldChangeHolders
    72:73:boolean isDisappearing(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> isDisappearing
    159:160:boolean isInPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> isInPreLayout
    271:272:void onDetach() -> onDetach
    275:276:void onViewDetached(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewDetached
    99:121:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromLayoutStep(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> popFromLayoutStep
    95:95:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> popFromPostLayout
    84:84:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> popFromPreLayout
    217:251:void process(androidx.recyclerview.widget.ViewInfoStore$ProcessCallback) -> process
    209:214:void removeFromDisappearedInLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> removeFromDisappearedInLayout
    258:268:void removeViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> removeViewHolder
androidx.recyclerview.widget.ViewInfoStore$InfoRecord -> androidx.recyclerview.widget.ViewInfoStore$InfoRecord:
    305:305:void <clinit>() -> <clinit>
    307:308:void <init>() -> <init>
    324:325:void drainCache() -> drainCache
    311:312:androidx.recyclerview.widget.ViewInfoStore$InfoRecord obtain() -> obtain
    316:320:void recycle(androidx.recyclerview.widget.ViewInfoStore$InfoRecord) -> recycle
androidx.slidingpanelayout.widget.SlidingPaneLayout -> androidx.slidingpanelayout.widget.SlidingPaneLayout:
    241:242:void <init>(android.content.Context) -> <init>
    245:246:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    113:261:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1244:1263:boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    920:920:boolean canSlide() -> canSlide
    1288:1288:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    853:857:boolean closePane(android.view.View,int) -> closePane
    901:901:boolean closePane() -> closePane
    1097:1105:void computeScroll() -> computeScroll
    962:984:void dimChildView(android.view.View,float,int) -> dimChildView
    338:342:void dispatchOnPanelClosed(android.view.View) -> dispatchOnPanelClosed
    331:335:void dispatchOnPanelOpened(android.view.View) -> dispatchOnPanelOpened
    325:328:void dispatchOnPanelSlide(android.view.View) -> dispatchOnPanelSlide
    1175:1206:void draw(android.graphics.Canvas) -> draw
    988:1007:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    1276:1276:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1281:1281:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1293:1293:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    317:317:int getCoveredFadeColor() -> getCoveredFadeColor
    282:282:int getParallaxDistance() -> getParallaxDistance
    299:299:int getSliderFadeColor() -> getSliderFadeColor
    1015:1060:void invalidateChildRegion(android.view.View) -> invalidateChildRegion
    1267:1271:boolean isDimmed(android.view.View) -> isDimmed
    1617:1617:boolean isLayoutRtlSupport() -> isLayoutRtlSupport
    911:911:boolean isOpen() -> isOpen
    930:930:boolean isSlideable() -> isSlideable
    420:422:void onAttachedToWindow() -> onAttachedToWindow
    426:434:void onDetachedFromWindow() -> onDetachedFromWindow
    754:809:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    650:733:void onLayout(boolean,int,int,int,int) -> onLayout
    438:646:void onMeasure(int,int) -> onMeasure
    934:959:void onPanelDragged(int) -> onPanelDragged
    1308:1322:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1298:1303:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    737:742:void onSizeChanged(int,int,int,int) -> onSizeChanged
    814:849:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    861:865:boolean openPane(android.view.View,int) -> openPane
    883:883:boolean openPane() -> openPane
    1209:1230:void parallaxOtherViews(float) -> parallaxOtherViews
    746:750:void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    391:397:void setAllChildrenVisible() -> setAllChildrenVisible
    309:310:void setCoveredFadeColor(int) -> setCoveredFadeColor
    321:322:void setPanelSlideListener(androidx.slidingpanelayout.widget.SlidingPaneLayout$PanelSlideListener) -> setPanelSlideListener
    271:273:void setParallaxDistance(int) -> setParallaxDistance
    1116:1117:void setShadowDrawable(android.graphics.drawable.Drawable) -> setShadowDrawable
    1126:1127:void setShadowDrawableLeft(android.graphics.drawable.Drawable) -> setShadowDrawableLeft
    1136:1137:void setShadowDrawableRight(android.graphics.drawable.Drawable) -> setShadowDrawableRight
    1150:1151:void setShadowResource(int) -> setShadowResource
    1160:1161:void setShadowResourceLeft(int) -> setShadowResourceLeft
    1170:1171:void setShadowResourceRight(int) -> setShadowResourceRight
    291:292:void setSliderFadeColor(int) -> setSliderFadeColor
    891:892:void smoothSlideClosed() -> smoothSlideClosed
    873:874:void smoothSlideOpen() -> smoothSlideOpen
    1069:1092:boolean smoothSlideTo(float,int) -> smoothSlideTo
    345:388:void updateObscuredViewsVisibility(android.view.View) -> updateObscuredViewsVisibility
    400:415:boolean viewIsOpaque(android.view.View) -> viewIsOpaque
androidx.slidingpanelayout.widget.SlidingPaneLayout$AccessibilityDelegate -> androidx.slidingpanelayout.widget.SlidingPaneLayout$AccessibilityDelegate:
    1513:1514:void <init>(androidx.slidingpanelayout.widget.SlidingPaneLayout) -> <init>
    1572:1596:void copyNodeInfoNoChildren(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
    1562:1562:boolean filter(android.view.View) -> filter
    1547:1550:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1518:1543:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    1555:1558:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
androidx.slidingpanelayout.widget.SlidingPaneLayout$DisableLayerRunnable -> androidx.slidingpanelayout.widget.SlidingPaneLayout$DisableLayerRunnable:
    1602:1604:void <init>(androidx.slidingpanelayout.widget.SlidingPaneLayout,android.view.View) -> <init>
    1608:1613:void run() -> run
androidx.slidingpanelayout.widget.SlidingPaneLayout$DragHelperCallback -> androidx.slidingpanelayout.widget.SlidingPaneLayout$DragHelperCallback:
    1326:1327:void <init>(androidx.slidingpanelayout.widget.SlidingPaneLayout) -> <init>
    1393:1406:int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    1413:1413:int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    1388:1388:int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    1418:1419:void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    1355:1356:void onViewCaptured(android.view.View,int) -> onViewCaptured
    1340:1350:void onViewDragStateChanged(int) -> onViewDragStateChanged
    1360:1362:void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    1366:1384:void onViewReleased(android.view.View,float,float) -> onViewReleased
    1331:1335:boolean tryCaptureView(android.view.View,int) -> tryCaptureView
androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams -> androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams:
    1423:1423:void <clinit>() -> <clinit>
    1431:1448:void <init>() -> <init>
    1431:1452:void <init>(int,int) -> <init>
    1431:1456:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    1431:1460:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    1431:1465:void <init>(androidx.slidingpanelayout.widget.SlidingPaneLayout$LayoutParams) -> <init>
    1431:1473:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState -> androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState:
    1495:1495:void <clinit>() -> <clinit>
    1481:1482:void <init>(android.os.Parcelable) -> <init>
    1485:1487:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1491:1493:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState$1 -> androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState$1:
    1495:1495:void <init>() -> <init>
    1495:1495:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1495:1495:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1498:1498:androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1503:1503:androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1495:1495:java.lang.Object[] newArray(int) -> newArray
    1508:1508:androidx.slidingpanelayout.widget.SlidingPaneLayout$SavedState[] newArray(int) -> newArray
androidx.slidingpanelayout.widget.SlidingPaneLayout$SimplePanelSlideListener -> androidx.slidingpanelayout.widget.SlidingPaneLayout$SimplePanelSlideListener:
    228:228:void <init>() -> <init>
    237:237:void onPanelClosed(android.view.View) -> onPanelClosed
    234:234:void onPanelOpened(android.view.View) -> onPanelOpened
    231:231:void onPanelSlide(android.view.View,float) -> onPanelSlide
androidx.swiperefreshlayout.widget.CircleImageView -> androidx.swiperefreshlayout.widget.CircleImageView:
    53:76:void <init>(android.content.Context,int) -> <init>
    79:79:boolean elevationSupported() -> elevationSupported
    105:109:void onAnimationEnd() -> onAnimationEnd
    97:101:void onAnimationStart() -> onAnimationStart
    84:89:void onMeasure(int,int) -> onMeasure
    92:93:void setAnimationListener(android.view.animation.Animation$AnimationListener) -> setAnimationListener
    122:125:void setBackgroundColor(int) -> setBackgroundColor
    117:118:void setBackgroundColorRes(int) -> setBackgroundColorRes
androidx.swiperefreshlayout.widget.CircleImageView$OvalShadow -> androidx.swiperefreshlayout.widget.CircleImageView$OvalShadow:
    131:136:void <init>(androidx.swiperefreshlayout.widget.CircleImageView,int) -> <init>
    146:150:void draw(android.graphics.Canvas,android.graphics.Paint) -> draw
    140:142:void onResize(float,float) -> onResize
    153:157:void updateRadialGradient(int) -> updateRadialGradient
androidx.swiperefreshlayout.widget.CircularProgressDrawable -> androidx.swiperefreshlayout.widget.CircularProgressDrawable:
    67:97:void <clinit>() -> <clinit>
    138:146:void <init>(android.content.Context) -> <init>
    516:527:void applyFinishTranslation(float,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring) -> applyFinishTranslation
    534:563:void applyTransformation(float,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring,boolean) -> applyTransformation
    399:404:void draw(android.graphics.Canvas) -> draw
    476:486:int evaluateColorChange(float,int,int) -> evaluateColorChange
    414:414:int getAlpha() -> getAlpha
    271:271:boolean getArrowEnabled() -> getArrowEnabled
    251:251:float getArrowHeight() -> getArrowHeight
    290:290:float getArrowScale() -> getArrowScale
    242:242:float getArrowWidth() -> getArrowWidth
    360:360:int getBackgroundColor() -> getBackgroundColor
    202:202:float getCenterRadius() -> getCenterRadius
    382:382:int[] getColorSchemeColors() -> getColorSchemeColors
    318:318:float getEndTrim() -> getEndTrim
    433:433:int getOpacity() -> getOpacity
    341:341:float getProgressRotation() -> getProgressRotation
    428:428:float getRotation() -> getRotation
    309:309:float getStartTrim() -> getStartTrim
    233:233:android.graphics.Paint$Cap getStrokeCap() -> getStrokeCap
    183:183:float getStrokeWidth() -> getStrokeWidth
    438:438:boolean isRunning() -> isRunning
    408:410:void setAlpha(int) -> setAlpha
    261:263:void setArrowDimensions(float,float) -> setArrowDimensions
    280:282:void setArrowEnabled(boolean) -> setArrowEnabled
    299:301:void setArrowScale(float) -> setArrowScale
    371:373:void setBackgroundColor(int) -> setBackgroundColor
    212:214:void setCenterRadius(float) -> setCenterRadius
    419:421:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    392:395:void setColorSchemeColors(int[]) -> setColorSchemeColors
    350:352:void setProgressRotation(float) -> setProgressRotation
    424:425:void setRotation(float) -> setRotation
    151:159:void setSizeParameters(float,float,float,float) -> setSizeParameters
    330:333:void setStartEndTrim(float,float) -> setStartEndTrim
    222:224:void setStrokeCap(android.graphics.Paint$Cap) -> setStrokeCap
    192:194:void setStrokeWidth(float) -> setStrokeWidth
    168:175:void setStyle(int) -> setStyle
    566:616:void setupAnimators() -> setupAnimators
    446:459:void start() -> start
    466:472:void stop() -> stop
    499:506:void updateRingColor(float,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring) -> updateRingColor
androidx.swiperefreshlayout.widget.CircularProgressDrawable$1 -> androidx.swiperefreshlayout.widget.CircularProgressDrawable$1:
    568:568:void <init>(androidx.swiperefreshlayout.widget.CircularProgressDrawable,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring) -> <init>
    571:575:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.swiperefreshlayout.widget.CircularProgressDrawable$2 -> androidx.swiperefreshlayout.widget.CircularProgressDrawable$2:
    580:580:void <init>(androidx.swiperefreshlayout.widget.CircularProgressDrawable,androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring) -> <init>
    595:595:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    590:590:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    599:613:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    584:585:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring -> androidx.swiperefreshlayout.widget.CircularProgressDrawable$Ring:
    623:659:void <init>() -> <init>
    692:721:void draw(android.graphics.Canvas,android.graphics.Rect) -> draw
    724:753:void drawTriangle(android.graphics.Canvas,float,float,android.graphics.RectF) -> drawTriangle
    835:835:int getAlpha() -> getAlpha
    685:685:float getArrowHeight() -> getArrowHeight
    920:920:float getArrowScale() -> getArrowScale
    681:681:float getArrowWidth() -> getArrowWidth
    789:789:int getBackgroundColor() -> getBackgroundColor
    894:894:float getCenterRadius() -> getCenterRadius
    767:767:int[] getColors() -> getColors
    875:875:float getEndTrim() -> getEndTrim
    805:805:int getNextColor() -> getNextColor
    809:809:int getNextColorIndex() -> getNextColorIndex
    883:883:float getRotation() -> getRotation
    907:907:boolean getShowArrow() -> getShowArrow
    855:855:float getStartTrim() -> getStartTrim
    867:867:int getStartingColor() -> getStartingColor
    863:863:float getStartingEndTrim() -> getStartingEndTrim
    927:927:float getStartingRotation() -> getStartingRotation
    859:859:float getStartingStartTrim() -> getStartingStartTrim
    677:677:android.graphics.Paint$Cap getStrokeCap() -> getStrokeCap
    847:847:float getStrokeWidth() -> getStrokeWidth
    817:818:void goToNextColor() -> goToNextColor
    944:950:void resetOriginals() -> resetOriginals
    828:829:void setAlpha(int) -> setAlpha
    668:670:void setArrowDimensions(float,float) -> setArrowDimensions
    914:917:void setArrowScale(float) -> setArrowScale
    785:786:void setBackgroundColor(int) -> setBackgroundColor
    890:891:void setCenterRadius(float) -> setCenterRadius
    778:779:void setColor(int) -> setColor
    821:822:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    797:799:void setColorIndex(int) -> setColorIndex
    761:764:void setColors(int[]) -> setColors
    871:872:void setEndTrim(float) -> setEndTrim
    879:880:void setRotation(float) -> setRotation
    901:904:void setShowArrow(boolean) -> setShowArrow
    851:852:void setStartTrim(float) -> setStartTrim
    673:674:void setStrokeCap(android.graphics.Paint$Cap) -> setStrokeCap
    842:844:void setStrokeWidth(float) -> setStrokeWidth
    935:938:void storeOriginals() -> storeOriginals
androidx.swiperefreshlayout.widget.SwipeRefreshLayout -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout:
    84:140:void <clinit>() -> <clinit>
    340:341:void <init>(android.content.Context) -> <init>
    112:1141:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1089:1098:void animateOffsetToCorrectPosition(int,android.view.animation.Animation$AnimationListener) -> animateOffsetToCorrectPosition
    1101:1115:void animateOffsetToStartPosition(int,android.view.animation.Animation$AnimationListener) -> animateOffsetToStartPosition
    672:678:boolean canChildScrollUp() -> canChildScrollUp
    398:404:void createProgressView() -> createProgressView
    903:903:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    908:908:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    885:885:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    879:879:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    587:596:void ensureTarget() -> ensureTarget
    968:998:void finishSpinner(float) -> finishSpinner
    383:393:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    813:813:int getNestedScrollAxes() -> getNestedScrollAxes
    664:664:int getProgressCircleDiameter() -> getProgressCircleDiameter
    279:279:int getProgressViewEndOffset() -> getProgressViewEndOffset
    271:271:int getProgressViewStartOffset() -> getProgressViewStartOffset
    873:873:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    912:912:boolean isAnimationRunning(android.view.animation.Animation) -> isAnimationRunning
    858:858:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    581:581:boolean isRefreshing() -> isRefreshing
    916:965:void moveSpinner(float) -> moveSpinner
    1135:1139:void moveToStart(float) -> moveToStart
    229:231:void onDetachedFromWindow() -> onDetachedFromWindow
    692:745:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    609:630:void onLayout(boolean,int,int,int,int) -> onLayout
    634:655:void onMeasure(int,int) -> onMeasure
    898:898:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    892:892:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    783:809:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    834:847:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    772:777:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    1175:1183:void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    765:765:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    818:828:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    1002:1076:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    753:759:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    206:217:void reset() -> reset
    460:462:void setAnimationProgress(float) -> setAnimationProgress
    545:546:void setColorScheme(int[]) -> setColorScheme
    572:574:void setColorSchemeColors(int[]) -> setColorSchemeColors
    556:562:void setColorSchemeResources(int[]) -> setColorSchemeResources
    234:236:void setColorViewAlpha(int) -> setColorViewAlpha
    604:605:void setDistanceToTriggerSync(int) -> setDistanceToTriggerSync
    221:225:void setEnabled(boolean) -> setEnabled
    853:854:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    687:688:void setOnChildScrollUpCallback(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback) -> setOnChildScrollUpCallback
    411:412:void setOnRefreshListener(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener) -> setOnRefreshListener
    519:520:void setProgressBackgroundColor(int) -> setProgressBackgroundColor
    537:538:void setProgressBackgroundColorSchemeColor(int) -> setProgressBackgroundColorSchemeColor
    528:529:void setProgressBackgroundColorSchemeResource(int) -> setProgressBackgroundColorSchemeResource
    296:299:void setProgressViewEndTarget(boolean,int) -> setProgressViewEndTarget
    258:264:void setProgressViewOffset(boolean,int,int) -> setProgressViewOffset
    421:436:void setRefreshing(boolean) -> setRefreshing
    465:475:void setRefreshing(boolean,boolean) -> setRefreshing
    317:332:void setSize(int) -> setSize
    310:311:void setSlingshotDistance(int) -> setSlingshotDistance
    1169:1172:void setTargetOffsetTopAndBottom(int) -> setTargetOffsetTopAndBottom
    499:511:android.view.animation.Animation startAlphaAnimation(int,int) -> startAlphaAnimation
    1080:1086:void startDragging(float) -> startDragging
    863:863:boolean startNestedScroll(int) -> startNestedScroll
    495:496:void startProgressAlphaMaxAnimation() -> startProgressAlphaMaxAnimation
    491:492:void startProgressAlphaStartAnimation() -> startProgressAlphaStartAnimation
    478:488:void startScaleDownAnimation(android.view.animation.Animation$AnimationListener) -> startScaleDownAnimation
    1150:1166:void startScaleDownReturnToStartAnimation(int,android.view.animation.Animation$AnimationListener) -> startScaleDownReturnToStartAnimation
    439:453:void startScaleUpAnimation(android.view.animation.Animation$AnimationListener) -> startScaleUpAnimation
    868:869:void stopNestedScroll() -> stopNestedScroll
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$1 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$1:
    178:178:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    189:202:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    185:185:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    181:181:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$2 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$2:
    441:441:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    444:445:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$3 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$3:
    478:478:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    481:482:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$4 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$4:
    499:499:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout,int,int) -> <init>
    502:504:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$5 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$5:
    976:976:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    984:987:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    991:991:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    980:980:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$6 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$6:
    1117:1117:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    1120:1131:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$7 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$7:
    1141:1141:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    1144:1145:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$8 -> androidx.swiperefreshlayout.widget.SwipeRefreshLayout$8:
    1152:1152:void <init>(androidx.swiperefreshlayout.widget.SwipeRefreshLayout) -> <init>
    1155:1158:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
androidx.vectordrawable.graphics.drawable.AndroidResources -> androidx.vectordrawable.graphics.drawable.AndroidResources:
    22:133:void <clinit>() -> <clinit>
    150:151:void <init>() -> <init>
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback -> androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback:
    57:57:void <init>() -> <init>
    77:90:android.graphics.drawable.Animatable2$AnimationCallback getPlatformCallback() -> getPlatformCallback
    69:69:void onAnimationEnd(android.graphics.drawable.Drawable) -> onAnimationEnd
    63:63:void onAnimationStart(android.graphics.drawable.Drawable) -> onAnimationStart
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback$1 -> androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback$1:
    78:78:void <init>(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> <init>
    86:87:void onAnimationEnd(android.graphics.drawable.Drawable) -> onAnimationEnd
    81:82:void onAnimationStart(android.graphics.drawable.Drawable) -> onAnimationStart
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat:
    168:169:void <init>() -> <init>
    172:173:void <init>(android.content.Context) -> <init>
    156:723:void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.content.res.Resources) -> <init>
    512:517:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    522:526:boolean canApplyTheme() -> canApplyTheme
    846:857:void clearAnimationCallbacks() -> clearAnimationCallbacks
    910:919:void clearAnimationCallbacks(android.graphics.drawable.Drawable) -> clearAnimationCallbacks
    143:143:void clearColorFilter() -> clearColorFilter
    212:241:androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat create(android.content.Context,int) -> create
    253:255:androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    284:292:void draw(android.graphics.Canvas) -> draw
    321:324:int getAlpha() -> getAlpha
    276:279:int getChangingConfigurations() -> getChangingConfigurations
    143:143:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    265:271:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    143:143:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    410:413:int getIntrinsicHeight() -> getIntrinsicHeight
    402:405:int getIntrinsicWidth() -> getIntrinsicWidth
    143:143:int getMinimumHeight() -> getMinimumHeight
    143:143:int getMinimumWidth() -> getMinimumWidth
    394:397:int getOpacity() -> getOpacity
    143:143:boolean getPadding(android.graphics.Rect) -> getPadding
    143:143:int[] getState() -> getState
    143:143:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    436:502:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    507:508:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    418:421:boolean isAutoMirrored() -> isAutoMirrored
    690:694:boolean isRunning() -> isRunning
    386:389:boolean isStateful() -> isStateful
    143:143:void jumpToCurrentState() -> jumpToCurrentState
    193:198:android.graphics.drawable.Drawable mutate() -> mutate
    296:301:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    313:316:boolean onLevelChange(int) -> onLevelChange
    305:308:boolean onStateChange(int[]) -> onStateChange
    753:801:void registerAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> registerAnimationCallback
    867:879:void registerAnimationCallback(android.graphics.drawable.Drawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> registerAnimationCallback
    810:811:void registerPlatformCallback(android.graphics.drawable.AnimatedVectorDrawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> registerPlatformCallback
    817:821:void removeAnimatorSetListener() -> removeAnimatorSetListener
    329:334:void setAlpha(int) -> setAlpha
    426:431:void setAutoMirrored(boolean) -> setAutoMirrored
    143:143:void setChangingConfigurations(int) -> setChangingConfigurations
    143:143:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    338:343:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    143:143:void setFilterBitmap(boolean) -> setFilterBitmap
    143:143:void setHotspot(float,float) -> setHotspot
    143:143:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    143:143:boolean setState(int[]) -> setState
    347:353:void setTint(int) -> setTint
    357:363:void setTintList(android.content.res.ColorStateList) -> setTintList
    367:373:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    377:381:boolean setVisible(boolean,boolean) -> setVisible
    672:686:void setupAnimatorsForTarget(java.lang.String,android.animation.Animator) -> setupAnimatorsForTarget
    651:669:void setupColorAnimator(android.animation.Animator) -> setupColorAnimator
    699:711:void start() -> start
    715:721:void stop() -> stop
    826:841:boolean unregisterAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> unregisterAnimationCallback
    889:899:boolean unregisterAnimationCallback(android.graphics.drawable.Drawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> unregisterAnimationCallback
    747:747:boolean unregisterPlatformCallback(android.graphics.drawable.AnimatedVectorDrawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> unregisterPlatformCallback
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1 -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1:
    723:723:void <init>(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) -> <init>
    726:727:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    731:732:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    736:737:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$2 -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$2:
    778:778:void <init>(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) -> <init>
    791:797:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    781:787:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState:
    589:620:void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources) -> <init>
    634:634:int getChangingConfigurations() -> getChangingConfigurations
    624:624:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    629:629:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    638:642:void setupAnimatorSet() -> setupAnimatorSet
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState:
    538:540:void <init>(android.graphics.drawable.Drawable$ConstantState) -> <init>
    571:571:boolean canApplyTheme() -> canApplyTheme
    576:576:int getChangingConfigurations() -> getChangingConfigurations
    544:548:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    553:557:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    562:566:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme) -> newDrawable
androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat -> androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat:
    149:150:void <init>() -> <init>
    105:146:android.view.animation.Interpolator createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> createInterpolatorFromXml
    67:95:android.view.animation.Interpolator loadInterpolator(android.content.Context,int) -> loadInterpolator
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat -> androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat:
    921:922:void <init>() -> <init>
    501:501:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,float) -> createAnimatorFromXml
    509:571:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float) -> createAnimatorFromXml
    779:783:android.animation.Keyframe createNewKeyframe(android.animation.Keyframe,float) -> createNewKeyframe
    806:811:void distributeKeyframes(android.animation.Keyframe[],float,int,int) -> distributeKeyframes
    673:684:void dumpKeyframes(java.lang.Object[],java.lang.String) -> dumpKeyframes
    207:331:android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String) -> getPVH
    655:669:int inferValueTypeFromValues(android.content.res.TypedArray,int,int) -> inferValueTypeFromValues
    636:650:int inferValueTypeOfKeyframe(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser) -> inferValueTypeOfKeyframe
    917:917:boolean isColorType(int) -> isColorType
    100:105:android.animation.Animator loadAnimator(android.content.Context,int) -> loadAnimator
    119:119:android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int) -> loadAnimator
    129:147:android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float) -> loadAnimator
    890:913:android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser) -> loadAnimator
    818:866:android.animation.Keyframe loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser) -> loadKeyframe
    872:876:android.animation.ObjectAnimator loadObjectAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,float,org.xmlpull.v1.XmlPullParser) -> loadObjectAnimator
    692:775:android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> loadPvh
    576:627:android.animation.PropertyValuesHolder[] loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> loadValues
    345:378:void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser) -> parseAnimatorFromTypeArray
    390:429:void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser) -> setupObjectAnimator
    436:495:void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String) -> setupPathMotion
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator -> androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator:
    166:167:void <init>() -> <init>
    177:179:void <init>(androidx.core.graphics.PathParser$PathDataNode[]) -> <init>
    157:157:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    185:199:androidx.core.graphics.PathParser$PathDataNode[] evaluate(float,androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]) -> evaluate
androidx.vectordrawable.graphics.drawable.ArgbEvaluator -> androidx.vectordrawable.graphics.drawable.ArgbEvaluator:
    33:33:void <clinit>() -> <clinit>
    32:32:void <init>() -> <init>
    64:97:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    43:43:androidx.vectordrawable.graphics.drawable.ArgbEvaluator getInstance() -> getInstance
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat -> androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat:
    68:69:void <init>(android.content.Context,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser) -> <init>
    72:77:void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser) -> <init>
    195:223:float getInterpolation(float) -> getInterpolation
    130:134:void initCubic(float,float,float,float) -> initCubic
    137:181:void initPath(android.graphics.Path) -> initPath
    123:127:void initQuad(float,float) -> initQuad
    82:120:void parseInterpolatorFromTypeArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> parseInterpolatorFromTypeArray
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon -> androidx.vectordrawable.graphics.drawable.VectorDrawableCommon:
    30:30:void <init>() -> <init>
    104:108:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    112:117:void clearColorFilter() -> clearColorFilter
    46:49:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    121:124:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    137:140:int getMinimumHeight() -> getMinimumHeight
    129:132:int getMinimumWidth() -> getMinimumWidth
    145:148:boolean getPadding(android.graphics.Rect) -> getPadding
    153:156:int[] getState() -> getState
    162:165:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    95:99:void jumpToCurrentState() -> jumpToCurrentState
    62:67:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    54:57:boolean onLevelChange(int) -> onLevelChange
    170:175:void setChangingConfigurations(int) -> setChangingConfigurations
    37:42:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    87:91:void setFilterBitmap(boolean) -> setFilterBitmap
    71:74:void setHotspot(float,float) -> setHotspot
    79:83:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    179:182:boolean setState(int[]) -> setState
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat:
    280:280:void <clinit>() -> <clinit>
    311:323:void <init>() -> <init>
    311:328:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) -> <init>
    679:682:int applyAlpha(int,float) -> applyAlpha
    277:277:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    579:583:boolean canApplyTheme() -> canApplyTheme
    277:277:void clearColorFilter() -> clearColorFilter
    637:662:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme) -> create
    673:675:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    360:428:void draw(android.graphics.Canvas) -> draw
    432:436:int getAlpha() -> getAlpha
    916:919:int getChangingConfigurations() -> getChangingConfigurations
    277:277:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    350:355:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    277:277:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    569:573:int getIntrinsicHeight() -> getIntrinsicHeight
    560:564:int getIntrinsicWidth() -> getIntrinsicWidth
    277:277:int getMinimumHeight() -> getMinimumHeight
    277:277:int getMinimumWidth() -> getMinimumWidth
    551:555:int getOpacity() -> getOpacity
    277:277:boolean getPadding(android.graphics.Rect) -> getPadding
    610:623:float getPixelSize() -> getPixelSize
    277:277:int[] getState() -> getState
    345:345:java.lang.Object getTargetByName(java.lang.String) -> getTargetByName
    277:277:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    688:694:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    699:718:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    807:870:void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflateInternal
    924:929:void invalidateSelf() -> invalidateSelf
    588:591:boolean isAutoMirrored() -> isAutoMirrored
    520:526:boolean isStateful() -> isStateful
    277:277:void jumpToCurrentState() -> jumpToCurrentState
    332:341:android.graphics.drawable.Drawable mutate() -> mutate
    898:902:boolean needMirroring() -> needMirroring
    909:912:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    531:546:boolean onStateChange(int[]) -> onStateChange
    726:740:android.graphics.PorterDuff$Mode parseTintModeCompat(int,android.graphics.PorterDuff$Mode) -> parseTintModeCompat
    873:890:void printGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,int) -> printGroupTree
    933:938:void scheduleSelf(java.lang.Runnable,long) -> scheduleSelf
    893:894:void setAllowCaching(boolean) -> setAllowCaching
    441:450:void setAlpha(int) -> setAlpha
    596:601:void setAutoMirrored(boolean) -> setAutoMirrored
    277:277:void setChangingConfigurations(int) -> setChangingConfigurations
    277:277:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    454:461:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    277:277:void setFilterBitmap(boolean) -> setFilterBitmap
    277:277:void setHotspot(float,float) -> setHotspot
    277:277:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    277:277:boolean setState(int[]) -> setState
    480:486:void setTint(int) -> setTint
    490:501:void setTintList(android.content.res.ColorStateList) -> setTintList
    505:516:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    942:945:boolean setVisible(boolean,boolean) -> setVisible
    950:955:void unscheduleSelf(java.lang.Runnable) -> unscheduleSelf
    746:803:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> updateStateFromTypedArray
    469:475:android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> updateTintFilter
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath:
    1750:1752:void <init>() -> <init>
    1755:1756:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath) -> <init>
    1760:1768:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> inflate
    1789:1789:boolean isClipPath() -> isClipPath
    1774:1785:void updateStateFromTypedArray(android.content.res.TypedArray) -> updateStateFromTypedArray
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath:
    1802:1819:void <init>() -> <init>
    1802:1838:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath) -> <init>
    1954:1963:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    1868:1868:boolean canApplyTheme() -> canApplyTheme
    2010:2010:float getFillAlpha() -> getFillAlpha
    2000:2000:int getFillColor() -> getFillColor
    1989:1989:float getStrokeAlpha() -> getStrokeAlpha
    1969:1969:int getStrokeColor() -> getStrokeColor
    1841:1849:android.graphics.Paint$Cap getStrokeLineCap(int,android.graphics.Paint$Cap) -> getStrokeLineCap
    1854:1862:android.graphics.Paint$Join getStrokeLineJoin(int,android.graphics.Paint$Join) -> getStrokeLineJoin
    1979:1979:float getStrokeWidth() -> getStrokeWidth
    2030:2030:float getTrimPathEnd() -> getTrimPathEnd
    2040:2040:float getTrimPathOffset() -> getTrimPathOffset
    2020:2020:float getTrimPathStart() -> getTrimPathStart
    1872:1876:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> inflate
    1942:1942:boolean isStateful() -> isStateful
    1947:1949:boolean onStateChanged(int[]) -> onStateChanged
    2015:2016:void setFillAlpha(float) -> setFillAlpha
    2005:2006:void setFillColor(int) -> setFillColor
    1994:1995:void setStrokeAlpha(float) -> setStrokeAlpha
    1974:1975:void setStrokeColor(int) -> setStrokeColor
    1984:1985:void setStrokeWidth(float) -> setStrokeWidth
    2035:2036:void setTrimPathEnd(float) -> setTrimPathEnd
    2045:2046:void setTrimPathOffset(float) -> setTrimPathOffset
    2025:2026:void setTrimPathStart(float) -> setTrimPathStart
    1883:1938:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> updateStateFromTypedArray
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup:
    1430:1489:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.collection.ArrayMap) -> <init>
    1430:1492:void <init>() -> <init>
    1495:1495:java.lang.String getGroupName() -> getGroupName
    1499:1499:android.graphics.Matrix getLocalMatrix() -> getLocalMatrix
    1571:1571:float getPivotX() -> getPivotX
    1584:1584:float getPivotY() -> getPivotY
    1558:1558:float getRotation() -> getRotation
    1597:1597:float getScaleX() -> getScaleX
    1610:1610:float getScaleY() -> getScaleY
    1623:1623:float getTranslateX() -> getTranslateX
    1636:1636:float getTranslateY() -> getTranslateY
    1503:1507:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> inflate
    1649:1654:boolean isStateful() -> isStateful
    1659:1663:boolean onStateChanged(int[]) -> onStateChanged
    1576:1580:void setPivotX(float) -> setPivotX
    1589:1593:void setPivotY(float) -> setPivotY
    1563:1567:void setRotation(float) -> setRotation
    1602:1606:void setScaleX(float) -> setScaleX
    1615:1619:void setScaleY(float) -> setScaleY
    1628:1632:void setTranslateX(float) -> setTranslateX
    1641:1645:void setTranslateY(float) -> setTranslateY
    1548:1553:void updateLocalMatrix() -> updateLocalMatrix
    1514:1543:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> updateStateFromTypedArray
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject:
    1408:1408:void <init>() -> <init>
    1408:1408:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$1) -> <init>
    1415:1415:boolean isStateful() -> isStateful
    1423:1423:boolean onStateChanged(int[]) -> onStateChanged
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath:
    1671:1677:void <init>() -> <init>
    1671:1705:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath) -> <init>
    1723:1723:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    1719:1719:boolean canApplyTheme() -> canApplyTheme
    1732:1732:androidx.core.graphics.PathParser$PathDataNode[] getPathData() -> getPathData
    1715:1715:java.lang.String getPathName() -> getPathName
    1726:1726:boolean isClipPath() -> isClipPath
    1690:1698:java.lang.String nodesToString(androidx.core.graphics.PathParser$PathDataNode[]) -> nodesToString
    1680:1687:void printVPath(int) -> printVPath
    1737:1743:void setPathData(androidx.core.graphics.PathParser$PathDataNode[]) -> setPathData
    1708:1712:void toPath(android.graphics.Path) -> toPath
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer:
    1161:1161:void <clinit>() -> <clinit>
    1162:1186:void <init>() -> <init>
    1162:1222:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) -> <init>
    1364:1364:float cross(float,float,float,float) -> cross
    1255:1256:void draw(android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> draw
    1230:1251:void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> drawGroupTree
    1260:1361:void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> drawPath
    1204:1204:float getAlpha() -> getAlpha
    1378:1393:float getMatrixScale(android.graphics.Matrix) -> getMatrixScale
    1193:1193:int getRootAlpha() -> getRootAlpha
    1397:1400:boolean isStateful() -> isStateful
    1404:1404:boolean onStateChanged(int[]) -> onStateChanged
    1199:1200:void setAlpha(float) -> setAlpha
    1189:1190:void setRootAlpha(int) -> setRootAlpha
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState:
    1006:1038:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) -> <init>
    1006:1114:void <init>() -> <init>
    1084:1088:boolean canReuseBitmap(int,int) -> canReuseBitmap
    1092:1099:boolean canReuseCache() -> canReuseCache
    1075:1081:void createCachedBitmapIfNeeded(int,int) -> createCachedBitmapIfNeeded
    1043:1045:void drawCachedBitmapWithRootAlpha(android.graphics.Canvas,android.graphics.ColorFilter,android.graphics.Rect) -> drawCachedBitmapWithRootAlpha
    1130:1130:int getChangingConfigurations() -> getChangingConfigurations
    1055:1065:android.graphics.Paint getPaint(android.graphics.ColorFilter) -> getPaint
    1048:1048:boolean hasTranslucentRoot() -> hasTranslucentRoot
    1134:1134:boolean isStateful() -> isStateful
    1119:1119:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    1125:1125:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    1138:1140:boolean onStateChanged(int[]) -> onStateChanged
    1105:1110:void updateCacheStates() -> updateCacheStates
    1069:1072:void updateCachedBitmap(int,int) -> updateCachedBitmap
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState:
    966:968:void <init>(android.graphics.drawable.Drawable$ConstantState) -> <init>
    994:994:boolean canApplyTheme() -> canApplyTheme
    999:999:int getChangingConfigurations() -> getChangingConfigurations
    972:974:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    979:981:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    986:989:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme) -> newDrawable
androidx.versionedparcelable.CustomVersionedParcelable -> androidx.versionedparcelable.CustomVersionedParcelable:
    27:27:void <init>() -> <init>
    45:45:void onPostParceling() -> onPostParceling
    36:36:void onPreParceling(boolean) -> onPreParceling
androidx.versionedparcelable.ParcelImpl -> androidx.versionedparcelable.ParcelImpl:
    58:58:void <clinit>() -> <clinit>
    32:34:void <init>(androidx.versionedparcelable.VersionedParcelable) -> <init>
    36:38:void <init>(android.os.Parcel) -> <init>
    49:49:int describeContents() -> describeContents
    44:44:androidx.versionedparcelable.VersionedParcelable getVersionedParcel() -> getVersionedParcel
    54:56:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.versionedparcelable.ParcelImpl$1 -> androidx.versionedparcelable.ParcelImpl$1:
    58:58:void <init>() -> <init>
    58:58:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    61:61:androidx.versionedparcelable.ParcelImpl createFromParcel(android.os.Parcel) -> createFromParcel
    58:58:java.lang.Object[] newArray(int) -> newArray
    66:66:androidx.versionedparcelable.ParcelImpl[] newArray(int) -> newArray
androidx.versionedparcelable.ParcelUtils -> androidx.versionedparcelable.ParcelUtils:
    34:34:void <init>() -> <init>
    68:69:androidx.versionedparcelable.VersionedParcelable fromInputStream(java.io.InputStream) -> fromInputStream
    48:51:androidx.versionedparcelable.VersionedParcelable fromParcelable(android.os.Parcelable) -> fromParcelable
    58:61:void toOutputStream(androidx.versionedparcelable.VersionedParcelable,java.io.OutputStream) -> toOutputStream
    40:40:android.os.Parcelable toParcelable(androidx.versionedparcelable.VersionedParcelable) -> toParcelable
androidx.versionedparcelable.VersionedParcel -> androidx.versionedparcelable.VersionedParcel:
    55:1492:void <init>() -> <init>
    1125:1143:java.lang.Exception createException(int,java.lang.String) -> createException
    1479:1480:java.lang.Class findParcelClass(androidx.versionedparcelable.VersionedParcelable) -> findParcelClass
    1485:1487:java.lang.Class findParcelClass(java.lang.Class) -> findParcelClass
    1114:1115:java.lang.Throwable getRootCause(java.lang.Throwable) -> getRootCause
    905:916:int getType(java.lang.Object) -> getType
    79:79:boolean isStream() -> isStream
    1308:1311:java.lang.Object[] readArray(java.lang.Object[],int) -> readArray
    1317:1360:java.lang.Object[] readArray(java.lang.Object[]) -> readArray
    363:366:boolean readBoolean(boolean,int) -> readBoolean
    542:545:boolean[] readBooleanArray(boolean[],int) -> readBooleanArray
    551:559:boolean[] readBooleanArray() -> readBooleanArray
    457:460:android.os.Bundle readBundle(android.os.Bundle,int) -> readBundle
    1151:1154:byte readByte(byte,int) -> readByte
    436:439:byte[] readByteArray(byte[],int) -> readByteArray
    580:591:char[] readCharArray(char[],int) -> readCharArray
    1250:1292:java.util.Collection readCollection(int,java.util.Collection) -> readCollection
    405:408:double readDouble(double,int) -> readDouble
    750:753:double[] readDoubleArray(double[],int) -> readDoubleArray
    759:767:double[] readDoubleArray() -> readDoubleArray
    1076:1084:java.lang.Exception readException(java.lang.Exception,int) -> readException
    1104:1105:java.lang.Exception readException(int,java.lang.String) -> readException
    1099:1100:int readExceptionCode() -> readExceptionCode
    394:397:float readFloat(float,int) -> readFloat
    706:709:float[] readFloatArray(float[],int) -> readFloatArray
    715:723:float[] readFloatArray() -> readFloatArray
    1438:1451:androidx.versionedparcelable.VersionedParcelable readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel) -> readFromParcel
    373:376:int readInt(int,int) -> readInt
    618:621:int[] readIntArray(int[],int) -> readIntArray
    627:635:int[] readIntArray() -> readIntArray
    1243:1246:java.util.List readList(java.util.List,int) -> readList
    383:386:long readLong(long,int) -> readLong
    662:665:long[] readLongArray(long[],int) -> readLongArray
    671:679:long[] readLongArray() -> readLongArray
    445:448:android.os.Parcelable readParcelable(android.os.Parcelable,int) -> readParcelable
    1396:1426:java.io.Serializable readSerializable() -> readSerializable
    1224:1227:java.util.Set readSet(java.util.Set,int) -> readSet
    1162:1170:android.util.Size readSize(android.util.Size,int) -> readSize
    1178:1186:android.util.SizeF readSizeF(android.util.SizeF,int) -> readSizeF
    1195:1208:android.util.SparseBooleanArray readSparseBooleanArray(android.util.SparseBooleanArray,int) -> readSparseBooleanArray
    415:418:java.lang.String readString(java.lang.String,int) -> readString
    425:428:android.os.IBinder readStrongBinder(android.os.IBinder,int) -> readStrongBinder
    1366:1369:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int) -> readVersionedParcelable
    1382:1386:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable() -> readVersionedParcelable
    242:242:void setSerializationFlags(boolean,boolean) -> setSerializationFlags
    851:853:void writeArray(java.lang.Object[],int) -> writeArray
    858:902:void writeArray(java.lang.Object[]) -> writeArray
    267:269:void writeBoolean(boolean,int) -> writeBoolean
    521:523:void writeBooleanArray(boolean[],int) -> writeBooleanArray
    528:537:void writeBooleanArray(boolean[]) -> writeBooleanArray
    258:260:void writeBundle(android.os.Bundle,int) -> writeBundle
    468:470:void writeByte(byte,int) -> writeByte
    277:279:void writeByteArray(byte[],int) -> writeByteArray
    289:291:void writeByteArray(byte[],int,int,int) -> writeByteArray
    565:575:void writeCharArray(char[],int) -> writeCharArray
    799:838:void writeCollection(java.util.Collection,int) -> writeCollection
    325:327:void writeDouble(double,int) -> writeDouble
    729:731:void writeDoubleArray(double[],int) -> writeDoubleArray
    736:745:void writeDoubleArray(double[]) -> writeDoubleArray
    1013:1053:void writeException(java.lang.Exception,int) -> writeException
    316:318:void writeFloat(float,int) -> writeFloat
    685:687:void writeFloatArray(float[],int) -> writeFloatArray
    692:701:void writeFloatArray(float[]) -> writeFloatArray
    298:300:void writeInt(int,int) -> writeInt
    597:599:void writeIntArray(int[],int) -> writeIntArray
    604:613:void writeIntArray(int[]) -> writeIntArray
    795:796:void writeList(java.util.List,int) -> writeList
    307:309:void writeLong(long,int) -> writeLong
    641:643:void writeLongArray(long[],int) -> writeLongArray
    648:657:void writeLongArray(long[]) -> writeLongArray
    1063:1064:void writeNoException() -> writeNoException
    355:357:void writeParcelable(android.os.Parcelable,int) -> writeParcelable
    963:965:void writeSerializable(java.io.Serializable,int) -> writeSerializable
    968:987:void writeSerializable(java.io.Serializable) -> writeSerializable
    781:782:void writeSet(java.util.Set,int) -> writeSet
    478:484:void writeSize(android.util.Size,int) -> writeSize
    492:498:void writeSizeF(android.util.SizeF,int) -> writeSizeF
    503:516:void writeSparseBooleanArray(android.util.SparseBooleanArray,int) -> writeSparseBooleanArray
    334:336:void writeString(java.lang.String,int) -> writeString
    343:345:void writeStrongBinder(android.os.IBinder,int) -> writeStrongBinder
    249:251:void writeStrongInterface(android.os.IInterface,int) -> writeStrongInterface
    1460:1475:void writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel) -> writeToParcel
    927:929:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int) -> writeVersionedParcelable
    934:943:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable) -> writeVersionedParcelable
    946:954:void writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable) -> writeVersionedParcelableCreator
androidx.versionedparcelable.VersionedParcel$1 -> androidx.versionedparcelable.VersionedParcel$1:
    1408:1408:void <init>(androidx.versionedparcelable.VersionedParcel,java.io.InputStream) -> <init>
    1412:1417:java.lang.Class resolveClass(java.io.ObjectStreamClass) -> resolveClass
androidx.versionedparcelable.VersionedParcel$ParcelException -> androidx.versionedparcelable.VersionedParcel$ParcelException:
    1494:1495:void <init>(java.lang.Throwable) -> <init>
androidx.versionedparcelable.VersionedParcelParcel -> androidx.versionedparcelable.VersionedParcelParcel:
    46:47:void <init>(android.os.Parcel) -> <init>
    37:55:void <init>(android.os.Parcel,int,int,java.lang.String) -> <init>
    93:105:void closeField() -> closeField
    113:113:androidx.versionedparcelable.VersionedParcel createSubParcel() -> createSubParcel
    241:241:boolean readBoolean() -> readBoolean
    236:236:android.os.Bundle readBundle() -> readBundle
    219:225:byte[] readByteArray() -> readByteArray
    204:204:double readDouble() -> readDouble
    72:78:boolean readField(int) -> readField
    199:199:float readFloat() -> readFloat
    189:189:int readInt() -> readInt
    194:194:long readLong() -> readLong
    231:231:android.os.Parcelable readParcelable() -> readParcelable
    209:209:java.lang.String readString() -> readString
    214:214:android.os.IBinder readStrongBinder() -> readStrongBinder
    58:67:int readUntilField(int) -> readUntilField
    83:89:void setOutputField(int) -> setOutputField
    174:175:void writeBoolean(boolean) -> writeBoolean
    184:185:void writeBundle(android.os.Bundle) -> writeBundle
    119:125:void writeByteArray(byte[]) -> writeByteArray
    129:135:void writeByteArray(byte[],int,int) -> writeByteArray
    154:155:void writeDouble(double) -> writeDouble
    149:150:void writeFloat(float) -> writeFloat
    139:140:void writeInt(int) -> writeInt
    144:145:void writeLong(long) -> writeLong
    169:170:void writeParcelable(android.os.Parcelable) -> writeParcelable
    159:160:void writeString(java.lang.String) -> writeString
    164:165:void writeStrongBinder(android.os.IBinder) -> writeStrongBinder
    179:180:void writeStrongInterface(android.os.IInterface) -> writeStrongInterface
androidx.versionedparcelable.VersionedParcelStream -> androidx.versionedparcelable.VersionedParcelStream:
    43:43:void <clinit>() -> <clinit>
    64:76:void <init>(java.io.InputStream,java.io.OutputStream) -> <init>
    95:105:void closeField() -> closeField
    109:109:androidx.versionedparcelable.VersionedParcel createSubParcel() -> createSubParcel
    80:80:boolean isStream() -> isStream
    341:343:boolean readBoolean() -> readBoolean
    368:377:android.os.Bundle readBundle() -> readBundle
    325:334:byte[] readByteArray() -> readByteArray
    300:302:double readDouble() -> readDouble
    114:136:boolean readField(int) -> readField
    291:293:float readFloat() -> readFloat
    273:275:int readInt() -> readInt
    282:284:long readLong() -> readLong
    428:477:void readObject(int,java.lang.String,android.os.Bundle) -> readObject
    267:267:android.os.Parcelable readParcelable() -> readParcelable
    309:318:java.lang.String readString() -> readString
    261:261:android.os.IBinder readStrongBinder() -> readStrongBinder
    141:144:void setOutputField(int) -> setOutputField
    87:91:void setSerializationFlags(boolean,boolean) -> setSerializationFlags
    232:236:void writeBoolean(boolean) -> writeBoolean
    350:364:void writeBundle(android.os.Bundle) -> writeBundle
    149:158:void writeByteArray(byte[]) -> writeByteArray
    163:172:void writeByteArray(byte[],int,int) -> writeByteArray
    207:212:void writeDouble(double) -> writeDouble
    197:202:void writeFloat(float) -> writeFloat
    177:182:void writeInt(int) -> writeInt
    187:192:void writeLong(long) -> writeLong
    381:425:void writeObject(java.lang.Object) -> writeObject
    247:250:void writeParcelable(android.os.Parcelable) -> writeParcelable
    217:227:void writeString(java.lang.String) -> writeString
    240:243:void writeStrongBinder(android.os.IBinder) -> writeStrongBinder
    254:257:void writeStrongInterface(android.os.IInterface) -> writeStrongInterface
androidx.versionedparcelable.VersionedParcelStream$FieldBuffer -> androidx.versionedparcelable.VersionedParcelStream$FieldBuffer:
    483:491:void <init>(int,java.io.DataOutputStream) -> <init>
    494:502:void flushField() -> flushField
androidx.versionedparcelable.VersionedParcelStream$InputBuffer -> androidx.versionedparcelable.VersionedParcelStream$InputBuffer:
    510:516:void <init>(int,int,java.io.DataInputStream) -> <init>
androidx.viewpager.widget.PagerAdapter -> androidx.viewpager.widget.PagerAdapter:
    81:82:void <init>() -> <init>
    129:130:void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    202:202:void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    154:155:void finishUpdate(android.view.ViewGroup) -> finishUpdate
    231:231:void finishUpdate(android.view.View) -> finishUpdate
    281:281:int getItemPosition(java.lang.Object) -> getItemPosition
    332:332:java.lang.CharSequence getPageTitle(int) -> getPageTitle
    343:343:float getPageWidth(int) -> getPageWidth
    115:115:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    184:184:java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    289:295:void notifyDataSetChanged() -> notifyDataSetChanged
    303:304:void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    263:263:void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    252:252:android.os.Parcelable saveState() -> saveState
    143:144:void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    218:218:void setPrimaryItem(android.view.View,int,java.lang.Object) -> setPrimaryItem
    316:319:void setViewPagerObserver(android.database.DataSetObserver) -> setViewPagerObserver
    99:100:void startUpdate(android.view.ViewGroup) -> startUpdate
    166:166:void startUpdate(android.view.View) -> startUpdate
    312:313:void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
androidx.viewpager.widget.PagerTabStrip -> androidx.viewpager.widget.PagerTabStrip:
    83:84:void <init>(android.content.Context) -> <init>
    68:128:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    218:218:boolean getDrawFullUnderline() -> getDrawFullUnderline
    223:223:int getMinHeight() -> getMinHeight
    155:155:int getTabIndicatorColor() -> getTabIndicatorColor
    265:281:void onDraw(android.graphics.Canvas) -> onDraw
    228:260:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    184:188:void setBackgroundColor(int) -> setBackgroundColor
    176:180:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    192:196:void setBackgroundResource(int) -> setBackgroundResource
    205:208:void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    160:164:void setPadding(int,int,int,int) -> setPadding
    136:139:void setTabIndicatorColor(int) -> setTabIndicatorColor
    147:148:void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    168:172:void setTextSpacing(int) -> setTextSpacing
    285:301:void updateTextPositions(int,float,boolean) -> updateTextPositions
androidx.viewpager.widget.PagerTabStrip$1 -> androidx.viewpager.widget.PagerTabStrip$1:
    110:110:void <init>(androidx.viewpager.widget.PagerTabStrip) -> <init>
    113:114:void onClick(android.view.View) -> onClick
androidx.viewpager.widget.PagerTabStrip$2 -> androidx.viewpager.widget.PagerTabStrip$2:
    118:118:void <init>(androidx.viewpager.widget.PagerTabStrip) -> <init>
    121:122:void onClick(android.view.View) -> onClick
androidx.viewpager.widget.PagerTitleStrip -> androidx.viewpager.widget.PagerTitleStrip:
    73:80:void <clinit>() -> <clinit>
    109:110:void <init>(android.content.Context) -> <init>
    61:165:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    463:468:int getMinHeight() -> getMinHeight
    181:181:int getTextSpacing() -> getTextSpacing
    239:254:void onAttachedToWindow() -> onAttachedToWindow
    258:265:void onDetachedFromWindow() -> onDetachedFromWindow
    456:460:void onLayout(boolean,int,int,int,int) -> onLayout
    420:452:void onMeasure(int,int) -> onMeasure
    308:311:void requestLayout() -> requestLayout
    233:235:void setGravity(int) -> setGravity
    190:194:void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    105:106:void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    203:208:void setTextColor(int) -> setTextColor
    221:224:void setTextSize(int,float) -> setTextSize
    173:175:void setTextSpacing(int) -> setTextSpacing
    314:328:void updateAdapter(androidx.viewpager.widget.PagerAdapter,androidx.viewpager.widget.PagerAdapter) -> updateAdapter
    268:304:void updateText(int,androidx.viewpager.widget.PagerAdapter) -> updateText
    331:416:void updateTextPositions(int,float,boolean) -> updateTextPositions
androidx.viewpager.widget.PagerTitleStrip$PageListener -> androidx.viewpager.widget.PagerTitleStrip$PageListener:
    475:476:void <init>(androidx.viewpager.widget.PagerTitleStrip) -> <init>
    506:507:void onAdapterChanged(androidx.viewpager.widget.ViewPager,androidx.viewpager.widget.PagerAdapter,androidx.viewpager.widget.PagerAdapter) -> onAdapterChanged
    511:515:void onChanged() -> onChanged
    500:501:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    480:485:void onPageScrolled(int,float,int) -> onPageScrolled
    489:496:void onPageSelected(int) -> onPageSelected
androidx.viewpager.widget.PagerTitleStrip$SingleLineAllCapsTransform -> androidx.viewpager.widget.PagerTitleStrip$SingleLineAllCapsTransform:
    93:95:void <init>(android.content.Context) -> <init>
    99:100:java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
androidx.viewpager.widget.ViewPager -> androidx.viewpager.widget.ViewPager:
    122:251:void <clinit>() -> <clinit>
    155:393:void <init>(android.content.Context) -> <init>
    155:398:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2905:2940:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    1008:1017:androidx.viewpager.widget.ViewPager$ItemInfo addNewItem(int,int) -> addNewItem
    581:585:void addOnAdapterChangeListener(androidx.viewpager.widget.ViewPager$OnAdapterChangeListener) -> addOnAdapterChangeListener
    723:727:void addOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> addOnPageChangeListener
    2950:2959:void addTouchables(java.util.ArrayList) -> addTouchables
    1472:1495:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    2793:2855:boolean arrowScroll(int) -> arrowScroll
    2528:2544:boolean beginFakeDrag() -> beginFakeDrag
    1298:1381:void calculatePageOffsets(androidx.viewpager.widget.ViewPager$ItemInfo,int,androidx.viewpager.widget.ViewPager$ItemInfo) -> calculatePageOffsets
    2719:2738:boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    2692:2703:boolean canScrollHorizontally(int) -> canScrollHorizontally
    3029:3029:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    745:748:void clearOnPageChangeListeners() -> clearOnPageChangeListeners
    1974:2008:void completeScroll(boolean) -> completeScroll
    1793:1815:void computeScroll() -> computeScroll
    1023:1089:void dataSetChanged() -> dataSetChanged
    2406:2421:int determineTargetPage(int,float,int,int) -> determineTargetPage
    2744:2744:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    1923:1937:void dispatchOnPageScrolled(int,float,int) -> dispatchOnPageScrolled
    1940:1954:void dispatchOnPageSelected(int) -> dispatchOnPageSelected
    1957:1971:void dispatchOnScrollStateChanged(int) -> dispatchOnScrollStateChanged
    2997:3014:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    927:929:float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    2426:2464:void draw(android.graphics.Canvas) -> draw
    915:920:void drawableStateChanged() -> drawableStateChanged
    2015:2021:void enableLayers(boolean) -> enableLayers
    2659:2666:void endDrag() -> endDrag
    2554:2576:void endFakeDrag() -> endFakeDrag
    2756:2782:boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    2586:2628:void fakeDragBy(float) -> fakeDragBy
    3019:3019:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    3024:3024:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    3034:3034:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    572:572:androidx.viewpager.widget.PagerAdapter getAdapter() -> getAdapter
    802:805:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    2859:2881:android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> getChildRectInPagerCoordinates
    600:600:int getClientWidth() -> getClientWidth
    627:627:int getCurrentItem() -> getCurrentItem
    828:828:int getOffscreenPageLimit() -> getOffscreenPageLimit
    884:884:int getPageMargin() -> getPageMargin
    1523:1529:androidx.viewpager.widget.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> infoForAnyChild
    1512:1518:androidx.viewpager.widget.ViewPager$ItemInfo infoForChild(android.view.View) -> infoForChild
    2363:2401:androidx.viewpager.widget.ViewPager$ItemInfo infoForCurrentScrollPosition() -> infoForCurrentScrollPosition
    1533:1539:androidx.viewpager.widget.ViewPager$ItemInfo infoForPosition(int) -> infoForPosition
    401:475:void initViewPager() -> initViewPager
    1498:1499:boolean isDecorView(android.view.View) -> isDecorView
    2640:2640:boolean isFakeDragging() -> isFakeDragging
    2011:2011:boolean isGutterDrag(float,float) -> isGutterDrag
    1544:1546:void onAttachedToWindow() -> onAttachedToWindow
    479:485:void onDetachedFromWindow() -> onDetachedFromWindow
    2468:2508:void onDraw(android.graphics.Canvas) -> onDraw
    2031:2161:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1682:1789:void onLayout(boolean,int,int,int,int) -> onLayout
    1555:1642:void onMeasure(int,int) -> onMeasure
    1865:1920:void onPageScrolled(int,float,int) -> onPageScrolled
    2970:2991:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    1452:1468:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1441:1447:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    2644:2656:void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    1646:1652:void onSizeChanged(int,int,int,int) -> onSizeChanged
    2166:2289:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    2885:2889:boolean pageLeft() -> pageLeft
    2893:2897:boolean pageRight() -> pageRight
    1818:1847:boolean pageScrolled(int) -> pageScrolled
    2310:2355:boolean performDrag(float) -> performDrag
    1092:1093:void populate() -> populate
    1096:1279:void populate(int) -> populate
    1655:1678:void recomputeScrollPosition(int,int,int,int) -> recomputeScrollPosition
    555:563:void removeNonDecorViews() -> removeNonDecorViews
    594:597:void removeOnAdapterChangeListener(androidx.viewpager.widget.ViewPager$OnAdapterChangeListener) -> removeOnAdapterChangeListener
    736:739:void removeOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> removeOnPageChangeListener
    1504:1509:void removeView(android.view.View) -> removeView
    2303:2307:void requestParentDisallowInterceptTouchEvent(boolean) -> requestParentDisallowInterceptTouchEvent
    2294:2299:boolean resetTouch() -> resetTouch
    676:696:void scrollToItem(int,boolean,int,boolean) -> scrollToItem
    506:552:void setAdapter(androidx.viewpager.widget.PagerAdapter) -> setAdapter
    611:613:void setCurrentItem(int) -> setCurrentItem
    622:624:void setCurrentItem(int,boolean) -> setCurrentItem
    631:632:void setCurrentItemInternal(int,boolean,boolean) -> setCurrentItemInternal
    635:672:void setCurrentItemInternal(int,boolean,boolean,int) -> setCurrentItemInternal
    815:817:androidx.viewpager.widget.ViewPager$OnPageChangeListener setInternalPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> setInternalPageChangeListener
    849:858:void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    709:710:void setOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    869:876:void setPageMargin(int) -> setPageMargin
    893:897:void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    905:906:void setPageMarginDrawable(int) -> setPageMarginDrawable
    769:770:void setPageTransformer(boolean,androidx.viewpager.widget.ViewPager$PageTransformer) -> setPageTransformer
    787:798:void setPageTransformer(boolean,androidx.viewpager.widget.ViewPager$PageTransformer,int) -> setPageTransformer
    488:498:void setScrollState(int) -> setScrollState
    2669:2681:void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    939:940:void smoothScrollTo(int,int) -> smoothScrollTo
    950:1005:void smoothScrollTo(int,int,int) -> smoothScrollTo
    1282:1295:void sortChildDrawingOrder() -> sortChildDrawingOrder
    910:910:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.viewpager.widget.ViewPager$1 -> androidx.viewpager.widget.ViewPager$1:
    140:140:void <init>() -> <init>
    140:140:int compare(java.lang.Object,java.lang.Object) -> compare
    143:143:int compare(androidx.viewpager.widget.ViewPager$ItemInfo,androidx.viewpager.widget.ViewPager$ItemInfo) -> compare
androidx.viewpager.widget.ViewPager$2 -> androidx.viewpager.widget.ViewPager$2:
    147:147:void <init>() -> <init>
    150:151:float getInterpolation(float) -> getInterpolation
androidx.viewpager.widget.ViewPager$3 -> androidx.viewpager.widget.ViewPager$3:
    269:269:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    272:274:void run() -> run
androidx.viewpager.widget.ViewPager$4 -> androidx.viewpager.widget.ViewPager$4:
    428:429:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    435:471:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
androidx.viewpager.widget.ViewPager$ItemInfo -> androidx.viewpager.widget.ViewPager$ItemInfo:
    132:132:void <init>() -> <init>
androidx.viewpager.widget.ViewPager$LayoutParams -> androidx.viewpager.widget.ViewPager$LayoutParams:
    3126:3146:void <init>() -> <init>
    3126:3154:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.viewpager.widget.ViewPager$MyAccessibilityDelegate -> androidx.viewpager.widget.ViewPager$MyAccessibilityDelegate:
    3037:3037:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    3087:3087:boolean canScroll() -> canScroll
    3041:3049:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    3053:3062:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    3066:3083:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
androidx.viewpager.widget.ViewPager$PagerObserver -> androidx.viewpager.widget.ViewPager$PagerObserver:
    3092:3093:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    3097:3098:void onChanged() -> onChanged
    3101:3102:void onInvalidated() -> onInvalidated
androidx.viewpager.widget.ViewPager$SavedState -> androidx.viewpager.widget.ViewPager$SavedState:
    1412:1412:void <clinit>() -> <clinit>
    1395:1396:void <init>(android.os.Parcelable) -> <init>
    1429:1436:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1407:1408:java.lang.String toString() -> toString
    1400:1403:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.viewpager.widget.ViewPager$SavedState$1 -> androidx.viewpager.widget.ViewPager$SavedState$1:
    1412:1412:void <init>() -> <init>
    1412:1412:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1412:1412:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1415:1415:androidx.viewpager.widget.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1420:1420:androidx.viewpager.widget.ViewPager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1412:1412:java.lang.Object[] newArray(int) -> newArray
    1424:1424:androidx.viewpager.widget.ViewPager$SavedState[] newArray(int) -> newArray
androidx.viewpager.widget.ViewPager$SimpleOnPageChangeListener -> androidx.viewpager.widget.ViewPager$SimpleOnPageChangeListener:
    321:321:void <init>() -> <init>
    335:335:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    325:325:void onPageScrolled(int,float,int) -> onPageScrolled
    330:330:void onPageSelected(int) -> onPageSelected
androidx.viewpager.widget.ViewPager$ViewPositionComparator -> androidx.viewpager.widget.ViewPager$ViewPositionComparator:
    3157:3157:void <init>() -> <init>
    3157:3157:int compare(java.lang.Object,java.lang.Object) -> compare
    3160:3165:int compare(android.view.View,android.view.View) -> compare
bolts.AndroidExecutors -> a.a:
    bolts.AndroidExecutors INSTANCE -> b
    java.util.concurrent.Executor uiThread -> a
    int CORE_POOL_SIZE -> d
    int MAX_POOL_SIZE -> e
    int CPU_COUNT -> c
    40:60:void <clinit>() -> <clinit>
    44:46:void <init>() -> <init>
    120:123:void allowCoreThreadTimeout(java.util.concurrent.ThreadPoolExecutor,boolean) -> a
    74:82:java.util.concurrent.ExecutorService newCachedThreadPool() -> b
    129:129:java.util.concurrent.Executor uiThread() -> c
bolts.AndroidExecutors$1 -> a.a$a:
bolts.AndroidExecutors$UIThreadExecutor -> a.a$b:
    135:135:void <init>() -> <init>
    135:135:void <init>(bolts.AndroidExecutors$1) -> <init>
    138:139:void execute(java.lang.Runnable) -> execute
bolts.BoltsExecutors -> a.b:
    java.util.concurrent.Executor immediate -> c
    bolts.BoltsExecutors INSTANCE -> d
    java.util.concurrent.ScheduledExecutorService scheduled -> b
    java.util.concurrent.ExecutorService background -> a
    14:14:void <clinit>() -> <clinit>
    28:34:void <init>() -> <init>
    40:40:java.util.concurrent.ExecutorService background() -> a
    53:53:java.util.concurrent.Executor immediate() -> b
    17:21:boolean isAndroidRuntime() -> c
bolts.BoltsExecutors$1 -> a.b$a:
bolts.BoltsExecutors$ImmediateExecutor -> a.b$b:
    java.lang.ThreadLocal executionDepth -> a
    62:64:void <init>() -> <init>
    62:62:void <init>(bolts.BoltsExecutors$1) -> <init>
    87:97:int decrementDepth() -> a
    72:78:int incrementDepth() -> b
    102:112:void execute(java.lang.Runnable) -> execute
bolts.CancellationToken -> a.c:
    boolean isCancellationRequested() -> a
bolts.Continuation -> a.d:
bolts.ExecutorException -> a.e:
    10:11:void <init>(java.lang.Exception) -> <init>
bolts.Task -> a.f:
    bolts.Task TASK_NULL -> m
    java.lang.Exception error -> e
    java.lang.Object result -> d
    bolts.Task$UnobservedExceptionHandler unobservedExceptionHandler -> l
    bolts.Task TASK_FALSE -> o
    java.util.concurrent.Executor IMMEDIATE_EXECUTOR -> j
    bolts.Task TASK_TRUE -> n
    java.util.concurrent.Executor UI_THREAD_EXECUTOR -> k
    java.util.concurrent.ExecutorService BACKGROUND_EXECUTOR -> i
    bolts.UnobservedErrorNotifier unobservedErrorNotifier -> g
    boolean errorHasBeenObserved -> f
    java.util.List continuations -> h
    java.lang.Object lock -> a
    boolean complete -> b
    boolean cancelled -> c
    36:1030:void <clinit>() -> <clinit>
    91:101:void <init>() -> <init>
    91:105:void <init>(java.lang.Object) -> <init>
    91:113:void <init>(boolean) -> <init>
    32:32:void access$000(bolts.TaskCompletionSource,bolts.Continuation,bolts.Task,java.util.concurrent.Executor,bolts.CancellationToken) -> a
    32:32:void access$100(bolts.TaskCompletionSource,bolts.Continuation,bolts.Task,java.util.concurrent.Executor,bolts.CancellationToken) -> b
    338:338:bolts.Task call(java.util.concurrent.Callable,java.util.concurrent.Executor) -> c
    346:369:bolts.Task call(java.util.concurrent.Callable,java.util.concurrent.Executor,bolts.CancellationToken) -> d
    908:950:void completeAfterTask(bolts.TaskCompletionSource,bolts.Continuation,bolts.Task,java.util.concurrent.Executor,bolts.CancellationToken) -> e
    863:884:void completeImmediately(bolts.TaskCompletionSource,bolts.Continuation,bolts.Task,java.util.concurrent.Executor,bolts.CancellationToken) -> f
    672:672:bolts.Task continueWith(bolts.Continuation) -> g
    647:663:bolts.Task continueWith(bolts.Continuation,java.util.concurrent.Executor,bolts.CancellationToken) -> h
    726:726:bolts.Task continueWithTask(bolts.Continuation) -> i
    701:717:bolts.Task continueWithTask(bolts.Continuation,java.util.concurrent.Executor,bolts.CancellationToken) -> j
    221:223:bolts.Task forError(java.lang.Exception) -> k
    206:214:bolts.Task forResult(java.lang.Object) -> l
    164:173:java.lang.Exception getError() -> m
    155:157:java.lang.Object getResult() -> n
    79:79:bolts.Task$UnobservedExceptionHandler getUnobservedExceptionHandler() -> o
    137:139:boolean isCancelled() -> p
    128:130:boolean isCompleted() -> q
    146:148:boolean isFaulted() -> r
    953:965:void runContinuations() -> s
    971:980:boolean trySetCancelled() -> t
    1003:1015:boolean trySetError(java.lang.Exception) -> u
    987:996:boolean trySetResult(java.lang.Object) -> v
bolts.Task$10 -> a.f$a:
    java.util.concurrent.Executor val$executor -> c
    bolts.TaskCompletionSource val$tcs -> a
    bolts.CancellationToken val$ct -> d
    bolts.Continuation val$continuation -> b
    651:651:void <init>(bolts.Task,bolts.TaskCompletionSource,bolts.Continuation,java.util.concurrent.Executor,bolts.CancellationToken) -> <init>
    654:655:java.lang.Void then(bolts.Task) -> a
    651:651:java.lang.Object then(bolts.Task) -> then
bolts.Task$11 -> a.f$b:
    java.util.concurrent.Executor val$executor -> c
    bolts.TaskCompletionSource val$tcs -> a
    bolts.CancellationToken val$ct -> d
    bolts.Continuation val$continuation -> b
    705:705:void <init>(bolts.Task,bolts.TaskCompletionSource,bolts.Continuation,java.util.concurrent.Executor,bolts.CancellationToken) -> <init>
    708:709:java.lang.Void then(bolts.Task) -> a
    705:705:java.lang.Object then(bolts.Task) -> then
bolts.Task$14 -> a.f$c:
    bolts.Task val$task -> d
    bolts.TaskCompletionSource val$tcs -> b
    bolts.CancellationToken val$ct -> a
    bolts.Continuation val$continuation -> c
    863:863:void <init>(bolts.CancellationToken,bolts.TaskCompletionSource,bolts.Continuation,bolts.Task) -> <init>
    866:879:void run() -> run
bolts.Task$15 -> a.f$d:
    bolts.Task val$task -> d
    bolts.TaskCompletionSource val$tcs -> b
    bolts.CancellationToken val$ct -> a
    bolts.Continuation val$continuation -> c
    908:908:void <init>(bolts.CancellationToken,bolts.TaskCompletionSource,bolts.Continuation,bolts.Task) -> <init>
    911:945:void run() -> run
bolts.Task$15$1 -> a.f$d$a:
    bolts.Task$15 this$0 -> a
    921:921:void <init>(bolts.Task$15) -> <init>
    924:936:java.lang.Void then(bolts.Task) -> a
    921:921:java.lang.Object then(bolts.Task) -> then
bolts.Task$4 -> a.f$e:
    java.util.concurrent.Callable val$callable -> c
    bolts.TaskCompletionSource val$tcs -> b
    bolts.CancellationToken val$ct -> a
    348:348:void <init>(bolts.CancellationToken,bolts.TaskCompletionSource,java.util.concurrent.Callable) -> <init>
    351:363:void run() -> run
bolts.Task$UnobservedExceptionHandler -> a.f$f:
    void unobservedException(bolts.Task,bolts.UnobservedTaskException) -> a
bolts.TaskCompletionSource -> a.g:
    bolts.Task task -> a
    17:19:void <init>() -> <init>
    25:25:bolts.Task getTask() -> a
    53:56:void setCancelled() -> b
    71:74:void setError(java.lang.Exception) -> c
    62:65:void setResult(java.lang.Object) -> d
    32:32:boolean trySetCancelled() -> e
    46:46:boolean trySetError(java.lang.Exception) -> f
    39:39:boolean trySetResult(java.lang.Object) -> g
bolts.UnobservedErrorNotifier -> a.h:
    bolts.Task task -> a
    11:13:void <init>(bolts.Task) -> <init>
    31:32:void setObserved() -> a
    18:28:void finalize() -> finalize
bolts.UnobservedTaskException -> a.i:
    8:9:void <init>(java.lang.Throwable) -> <init>
com.alibaba.android.bindingx.core.BindingXCore -> com.alibaba.android.bindingx.core.BindingXCore:
    50:50:void <clinit>() -> <clinit>
    48:79:void <init>(com.alibaba.android.bindingx.core.PlatformManager) -> <init>
    388:395:com.alibaba.android.bindingx.core.IEventHandler createEventHandler(android.content.Context,java.lang.String,java.lang.String) -> createEventHandler
    95:113:java.lang.String doBind(android.content.Context,java.lang.String,java.util.Map,com.alibaba.android.bindingx.core.BindingXCore$JavaScriptCallback,java.lang.Object[]) -> doBind
    276:305:java.lang.String doBind(java.lang.String,java.lang.String,java.lang.String,java.util.Map,com.alibaba.android.bindingx.core.internal.ExpressionPair,java.util.List,java.util.Map,com.alibaba.android.bindingx.core.BindingXCore$JavaScriptCallback,android.content.Context,java.lang.String,java.lang.Object[]) -> doBind
    191:246:java.lang.String doPrepare(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map) -> doPrepare
    166:183:void doRelease() -> doRelease
    121:128:void doUnbind(java.util.Map) -> doUnbind
    136:163:void doUnbind(java.lang.String,java.lang.String) -> doUnbind
    381:381:java.lang.String generateToken() -> generateToken
    309:325:void onActivityPause() -> onActivityPause
    328:344:void onActivityResume() -> onActivityResume
    354:358:void registerEventHandler(java.lang.String,com.alibaba.android.bindingx.core.BindingXCore$ObjectCreator) -> registerEventHandler
    369:373:void registerGlobalEventHandler(java.lang.String,com.alibaba.android.bindingx.core.BindingXCore$ObjectCreator) -> registerGlobalEventHandler
    377:377:boolean unregisterGlobalEventHandler(java.lang.String) -> unregisterGlobalEventHandler
com.alibaba.android.bindingx.core.BindingXCore$1 -> com.alibaba.android.bindingx.core.BindingXCore$1:
    61:61:void <init>(com.alibaba.android.bindingx.core.BindingXCore) -> <init>
    61:61:java.lang.Object createWith(java.lang.Object,java.lang.Object,java.lang.Object[]) -> createWith
    64:64:com.alibaba.android.bindingx.core.IEventHandler createWith(android.content.Context,com.alibaba.android.bindingx.core.PlatformManager,java.lang.Object[]) -> createWith
com.alibaba.android.bindingx.core.BindingXCore$2 -> com.alibaba.android.bindingx.core.BindingXCore$2:
    67:67:void <init>(com.alibaba.android.bindingx.core.BindingXCore) -> <init>
    67:67:java.lang.Object createWith(java.lang.Object,java.lang.Object,java.lang.Object[]) -> createWith
    70:70:com.alibaba.android.bindingx.core.IEventHandler createWith(android.content.Context,com.alibaba.android.bindingx.core.PlatformManager,java.lang.Object[]) -> createWith
com.alibaba.android.bindingx.core.BindingXCore$3 -> com.alibaba.android.bindingx.core.BindingXCore$3:
    73:73:void <init>(com.alibaba.android.bindingx.core.BindingXCore) -> <init>
    73:73:java.lang.Object createWith(java.lang.Object,java.lang.Object,java.lang.Object[]) -> createWith
    76:76:com.alibaba.android.bindingx.core.IEventHandler createWith(android.content.Context,com.alibaba.android.bindingx.core.PlatformManager,java.lang.Object[]) -> createWith
com.alibaba.android.bindingx.core.BindingXJSFunctionRegister -> com.alibaba.android.bindingx.core.BindingXJSFunctionRegister:
    35:35:void <clinit>() -> <clinit>
    34:37:void <init>() -> <init>
    60:61:void clear() -> clear
    40:40:com.alibaba.android.bindingx.core.BindingXJSFunctionRegister getInstance() -> getInstance
    64:64:java.util.Map getJSFunctions() -> getJSFunctions
    45:48:void registerJSFunction(java.lang.String,com.alibaba.android.bindingx.core.internal.JSFunctionInterface) -> registerJSFunction
    52:55:boolean unregisterJSFunction(java.lang.String) -> unregisterJSFunction
com.alibaba.android.bindingx.core.BindingXPropertyInterceptor -> com.alibaba.android.bindingx.core.BindingXPropertyInterceptor:
    43:43:void <clinit>() -> <clinit>
    39:44:void <init>() -> <init>
    37:37:java.util.LinkedList access$000(com.alibaba.android.bindingx.core.BindingXPropertyInterceptor) -> access$000
    52:55:void addInterceptor(com.alibaba.android.bindingx.core.BindingXPropertyInterceptor$IPropertyUpdateInterceptor) -> addInterceptor
    65:66:void clear() -> clear
    95:96:void clearCallbacks() -> clearCallbacks
    48:48:com.alibaba.android.bindingx.core.BindingXPropertyInterceptor getInstance() -> getInstance
    100:100:java.util.List getInterceptors() -> getInterceptors
    74:92:void performIntercept(android.view.View,java.lang.String,java.lang.Object,com.alibaba.android.bindingx.core.PlatformManager$IDeviceResolutionTranslator,java.util.Map,java.lang.Object[]) -> performIntercept
    58:61:boolean removeInterceptor(com.alibaba.android.bindingx.core.BindingXPropertyInterceptor$IPropertyUpdateInterceptor) -> removeInterceptor
com.alibaba.android.bindingx.core.BindingXPropertyInterceptor$1 -> com.alibaba.android.bindingx.core.BindingXPropertyInterceptor$1:
    78:78:void <init>(com.alibaba.android.bindingx.core.BindingXPropertyInterceptor,android.view.View,java.lang.String,java.lang.Object,com.alibaba.android.bindingx.core.PlatformManager$IDeviceResolutionTranslator,java.util.Map,java.lang.Object[]) -> <init>
    81:90:void run() -> run
com.alibaba.android.bindingx.core.BuildConfig -> com.alibaba.android.bindingx.core.BuildConfig:
    7:7:void <clinit>() -> <clinit>
    6:6:void <init>() -> <init>
com.alibaba.android.bindingx.core.LogProxy -> com.alibaba.android.bindingx.core.LogProxy:
    35:35:void <clinit>() -> <clinit>
    32:32:void <init>() -> <init>
    80:83:void d(java.lang.String) -> d
    86:89:void d(java.lang.String,java.lang.Throwable) -> d
    104:107:void e(java.lang.String) -> e
    110:113:void e(java.lang.String,java.lang.Throwable) -> e
    38:53:void enableLogIfNeeded(java.util.Map) -> enableLogIfNeeded
    56:59:void i(java.lang.String) -> i
    62:65:void i(java.lang.String,java.lang.Throwable) -> i
    68:71:void v(java.lang.String) -> v
    74:77:void v(java.lang.String,java.lang.Throwable) -> v
    92:95:void w(java.lang.String) -> w
    98:101:void w(java.lang.String,java.lang.Throwable) -> w
com.alibaba.android.bindingx.core.PlatformManager -> com.alibaba.android.bindingx.core.PlatformManager:
    32:32:void <init>(com.alibaba.android.bindingx.core.PlatformManager$1) -> <init>
    38:39:void <init>() -> <init>
    32:32:com.alibaba.android.bindingx.core.PlatformManager$IViewFinder access$102(com.alibaba.android.bindingx.core.PlatformManager,com.alibaba.android.bindingx.core.PlatformManager$IViewFinder) -> access$102
    32:32:com.alibaba.android.bindingx.core.PlatformManager$IDeviceResolutionTranslator access$202(com.alibaba.android.bindingx.core.PlatformManager,com.alibaba.android.bindingx.core.PlatformManager$IDeviceResolutionTranslator) -> access$202
    32:32:com.alibaba.android.bindingx.core.PlatformManager$IViewUpdater access$302(com.alibaba.android.bindingx.core.PlatformManager,com.alibaba.android.bindingx.core.PlatformManager$IViewUpdater) -> access$302
    43:43:com.alibaba.android.bindingx.core.PlatformManager$IDeviceResolutionTranslator getResolutionTranslator() -> getResolutionTranslator
    48:48:com.alibaba.android.bindingx.core.PlatformManager$IViewFinder getViewFinder() -> getViewFinder
    53:53:com.alibaba.android.bindingx.core.PlatformManager$IViewUpdater getViewUpdater() -> getViewUpdater
com.alibaba.android.bindingx.core.PlatformManager$Builder -> com.alibaba.android.bindingx.core.PlatformManager$Builder:
    103:103:void <init>() -> <init>
    106:110:com.alibaba.android.bindingx.core.PlatformManager build() -> build
    114:115:com.alibaba.android.bindingx.core.PlatformManager$Builder withDeviceResolutionTranslator(com.alibaba.android.bindingx.core.PlatformManager$IDeviceResolutionTranslator) -> withDeviceResolutionTranslator
    119:120:com.alibaba.android.bindingx.core.PlatformManager$Builder withViewFinder(com.alibaba.android.bindingx.core.PlatformManager$IViewFinder) -> withViewFinder
    124:125:com.alibaba.android.bindingx.core.PlatformManager$Builder withViewUpdater(com.alibaba.android.bindingx.core.PlatformManager$IViewUpdater) -> withViewUpdater
com.alibaba.android.bindingx.core.WeakRunnable -> com.alibaba.android.bindingx.core.WeakRunnable:
    25:27:void <init>(java.lang.Runnable) -> <init>
    31:35:void run() -> run
com.alibaba.android.bindingx.core.internal.AbstractEventHandler -> com.alibaba.android.bindingx.core.internal.AbstractEventHandler:
    59:75:void <init>(android.content.Context,com.alibaba.android.bindingx.core.PlatformManager,java.lang.Object[]) -> <init>
    112:119:void applyFunctionsToScope() -> applyFunctionsToScope
    326:332:void clearExpressions() -> clearExpressions
    237:319:void consumeExpression(java.util.Map,java.util.Map,java.lang.String) -> consumeExpression
    169:189:boolean evaluateExitExpression(com.alibaba.android.bindingx.core.internal.ExpressionPair,java.util.Map) -> evaluateExitExpression
    93:102:void onBindExpression(java.lang.String,java.util.Map,com.alibaba.android.bindingx.core.internal.ExpressionPair,java.util.List,com.alibaba.android.bindingx.core.BindingXCore$JavaScriptCallback) -> onBindExpression
    107:109:void onDestroy() -> onDestroy
    199:212:void performInterceptIfNeeded(java.lang.String,com.alibaba.android.bindingx.core.internal.ExpressionPair,java.util.Map) -> performInterceptIfNeeded
    79:80:void setAnchorInstanceId(java.lang.String) -> setAnchorInstanceId
    341:342:void setExtensionParams(java.lang.Object[]) -> setExtensionParams
    85:85:void setGlobalConfig(java.util.Map) -> setGlobalConfig
    194:195:void setInterceptors(java.util.Map) -> setInterceptors
    336:337:void setToken(java.lang.String) -> setToken
    122:157:void transformArgs(java.lang.String,java.util.List) -> transformArgs
    215:225:void tryInterceptAllIfNeeded(java.util.Map) -> tryInterceptAllIfNeeded
com.alibaba.android.bindingx.core.internal.AbstractEventHandler$Cache -> com.alibaba.android.bindingx.core.internal.AbstractEventHandler$Cache:
    348:350:void <init>(int) -> <init>
    354:354:boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
com.alibaba.android.bindingx.core.internal.AbstractScrollEventHandler -> com.alibaba.android.bindingx.core.internal.AbstractScrollEventHandler:
    43:47:void <init>(android.content.Context,com.alibaba.android.bindingx.core.PlatformManager,java.lang.Object[]) -> <init>
    120:146:void fireEventByState(java.lang.String,double,double,double,double,double,double,java.lang.Object[]) -> fireEventByState
    93:115:void handleScrollEvent(int,int,int,int,int,int) -> handleScrollEvent
    79:81:void onDestroy() -> onDestroy
    52:55:boolean onDisable(java.lang.String,java.lang.String) -> onDisable
    60:63:void onExit(java.util.Map) -> onExit
    67:74:void onUserIntercept(java.lang.String,java.util.Map) -> onUserIntercept
com.alibaba.android.bindingx.core.internal.AnimationFrame -> com.alibaba.android.bindingx.core.internal.AnimationFrame:
    35:35:void <init>() -> <init>
    38:44:com.alibaba.android.bindingx.core.internal.AnimationFrame newInstance() -> newInstance
com.alibaba.android.bindingx.core.internal.AnimationFrame$ChoreographerAnimationFrameImpl -> com.alibaba.android.bindingx.core.internal.AnimationFrame$ChoreographerAnimationFrameImpl:
    65:70:void <init>() -> <init>
    74:78:void clear() -> clear
    97:103:void doFrame(long) -> doFrame
    88:93:void requestAnimationFrame(com.alibaba.android.bindingx.core.internal.AnimationFrame$Callback) -> requestAnimationFrame
    82:84:void terminate() -> terminate
com.alibaba.android.bindingx.core.internal.AnimationFrame$HandlerAnimationFrameImpl -> com.alibaba.android.bindingx.core.internal.AnimationFrame$HandlerAnimationFrameImpl:
    117:124:void <init>() -> <init>
    128:132:void clear() -> clear
    157:166:boolean handleMessage(android.os.Message) -> handleMessage
    148:153:void requestAnimationFrame(com.alibaba.android.bindingx.core.internal.AnimationFrame$Callback) -> requestAnimationFrame
    136:144:void terminate() -> terminate
com.alibaba.android.bindingx.core.internal.BindingXConstants -> com.alibaba.android.bindingx.core.internal.BindingXConstants:
    31:31:void <init>() -> <init>
com.alibaba.android.bindingx.core.internal.BindingXOrientationHandler -> com.alibaba.android.bindingx.core.internal.BindingXOrientationHandler:
    48:217:void <init>(android.content.Context,com.alibaba.android.bindingx.core.PlatformManager,java.lang.Object[]) -> <init>
    48:217:void <init>(android.content.Context,com.alibaba.android.bindingx.core.PlatformManager,com.alibaba.android.bindingx.core.internal.OrientationDetector,java.lang.Object[]) -> <init>
    220:251:boolean calculate2D(double,double,double) -> calculate2D
    256:275:boolean calculate3D(double,double,double) -> calculate3D
    315:330:void fireEventByState(java.lang.String,double,double,double,java.lang.Object[]) -> fireEventByState
    279:294:void formatRecords(java.util.List,int) -> formatRecords
    334:337:void onActivityPause() -> onActivityPause
    341:344:void onActivityResume() -> onActivityResume
    105:131:void onBindExpression(java.lang.String,java.util.Map,com.alibaba.android.bindingx.core.internal.ExpressionPair,java.util.List,com.alibaba.android.bindingx.core.BindingXCore$JavaScriptCallback) -> onBindExpression
    86:91:boolean onCreate(java.lang.String,java.lang.String) -> onCreate
    146:156:void onDestroy() -> onDestroy
    135:141:boolean onDisable(java.lang.String,java.lang.String) -> onDisable
    299:303:void onExit(java.util.Map) -> onExit
    160:211:void onOrientationChanged(double,double,double) -> onOrientationChanged
    97:97:void onStart(java.lang.String,java.lang.String) -> onStart
    307:311:void onUserIntercept(java.lang.String,java.util.Map) -> onUserIntercept
com.alibaba.android.bindingx.core.internal.BindingXOrientationHandler$ValueHolder -> com.alibaba.android.bindingx.core.internal.BindingXOrientationHandler$ValueHolder:
    352:352:void <init>() -> <init>
    354:358:void <init>(double,double,double) -> <init>
com.alibaba.android.bindingx.core.internal.BindingXTimingHandler -> com.alibaba.android.bindingx.core.internal.BindingXTimingHandler:
    46:58:void <init>(android.content.Context,com.alibaba.android.bindingx.core.PlatformManager,java.lang.Object[]) -> <init>
    46:64:void <init>(android.content.Context,com.alibaba.android.bindingx.core.PlatformManager,com.alibaba.android.bindingx.core.internal.AnimationFrame,java.lang.Object[]) -> <init>
    179:180:void doFrame() -> doFrame
    162:175:void fireEventByState(java.lang.String,long,java.lang.Object[]) -> fireEventByState
    97:117:void handleTimingCallback() -> handleTimingCallback
    184:184:void onActivityPause() -> onActivityPause
    188:188:void onActivityResume() -> onActivityResume
    82:92:void onBindExpression(java.lang.String,java.util.Map,com.alibaba.android.bindingx.core.internal.ExpressionPair,java.util.List,com.alibaba.android.bindingx.core.BindingXCore$JavaScriptCallback) -> onBindExpression
    68:68:boolean onCreate(java.lang.String,java.lang.String) -> onCreate
    133:141:void onDestroy() -> onDestroy
    121:128:boolean onDisable(java.lang.String,java.lang.String) -> onDisable
    145:152:void onExit(java.util.Map) -> onExit
    74:74:void onStart(java.lang.String,java.lang.String) -> onStart
    156:158:void onUserIntercept(java.lang.String,java.util.Map) -> onUserIntercept
com.alibaba.android.bindingx.core.internal.BindingXTouchHandler -> com.alibaba.android.bindingx.core.internal.BindingXTouchHandler:
    57:84:void <init>(android.content.Context,com.alibaba.android.bindingx.core.PlatformManager,java.lang.Object[]) -> <init>
    310:326:void fireEventByState(java.lang.String,double,double,java.lang.Object[]) -> fireEventByState
    78:78:boolean isFlickGestureAvailable() -> isFlickGestureAvailable
    74:74:boolean isPanGestureAvailable() -> isPanGestureAvailable
    330:330:void onActivityPause() -> onActivityPause
    334:334:void onActivityResume() -> onActivityResume
    245:246:void onBindExpression(java.lang.String,java.util.Map,com.alibaba.android.bindingx.core.internal.ExpressionPair,java.util.List,com.alibaba.android.bindingx.core.BindingXCore$JavaScriptCallback) -> onBindExpression
    207:224:boolean onCreate(java.lang.String,java.lang.String) -> onCreate
    283:292:void onDestroy() -> onDestroy
    250:277:boolean onDisable(java.lang.String,java.lang.String) -> onDisable
    193:193:boolean onDown(android.view.MotionEvent) -> onDown
    296:299:void onExit(java.util.Map) -> onExit
    185:188:boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    181:181:void onLongPress(android.view.MotionEvent) -> onLongPress
    140:176:boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    198:198:void onShowPress(android.view.MotionEvent) -> onShowPress
    202:202:boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    229:237:void onStart(java.lang.String,java.lang.String) -> onStart
    89:133:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    303:306:void onUserIntercept(java.lang.String,java.util.Map) -> onUserIntercept
    70:71:void setFlickGestureAvailable(boolean) -> setFlickGestureAvailable
    66:67:void setPanGestureAvailable(boolean) -> setPanGestureAvailable
com.alibaba.android.bindingx.core.internal.Euler -> com.alibaba.android.bindingx.core.internal.Euler:
    37:43:void <init>() -> <init>
    46:51:void setValue(double,double,double,java.lang.String) -> setValue
com.alibaba.android.bindingx.core.internal.Expression -> com.alibaba.android.bindingx.core.internal.Expression:
    36:42:void <init>(java.lang.String) -> <init>
    44:46:void <init>(org.json.JSONObject) -> <init>
    77:86:boolean equal(java.lang.Object,java.lang.Object) -> equal
    49:49:java.lang.Object execute(java.util.Map) -> execute
    110:181:java.lang.Object execute(org.json.JSONObject,java.util.Map) -> execute
    90:105:boolean strictlyEqual(java.lang.Object,java.lang.Object) -> strictlyEqual
    61:65:boolean toBoolean(java.lang.Object) -> toBoolean
    53:57:double toNumber(java.lang.Object) -> toNumber
    69:73:java.lang.String toString(java.lang.Object) -> toString
com.alibaba.android.bindingx.core.internal.ExpressionHolder -> com.alibaba.android.bindingx.core.internal.ExpressionHolder:
    30:41:void <init>(java.lang.String,java.lang.String,com.alibaba.android.bindingx.core.internal.ExpressionPair,java.lang.String,java.lang.String,java.util.Map) -> <init>
    45:57:boolean equals(java.lang.Object) -> equals
    63:68:int hashCode() -> hashCode
com.alibaba.android.bindingx.core.internal.ExpressionPair -> com.alibaba.android.bindingx.core.internal.ExpressionPair:
    38:41:void <init>(java.lang.String,java.lang.String) -> <init>
    44:44:com.alibaba.android.bindingx.core.internal.ExpressionPair create(java.lang.String,java.lang.String) -> create
    53:59:boolean equals(java.lang.Object) -> equals
    65:67:int hashCode() -> hashCode
    48:48:boolean isValid(com.alibaba.android.bindingx.core.internal.ExpressionPair) -> isValid
com.alibaba.android.bindingx.core.internal.JSMath -> com.alibaba.android.bindingx.core.internal.JSMath:
    37:274:void <clinit>() -> <clinit>
    35:35:void <init>() -> <init>
    33:33:int access$000(java.lang.String) -> access$000
    33:33:android.animation.ArgbEvaluator access$100() -> access$100
    291:303:void applyOrientationValuesToScope(java.util.Map,double,double,double,double,double,double,double,double,double) -> applyOrientationValuesToScope
    311:322:void applyScrollValuesToScope(java.util.Map,double,double,double,double,double,double,com.alibaba.android.bindingx.core.PlatformManager$IDeviceResolutionTranslator) -> applyScrollValuesToScope
    306:307:void applyTimingValuesToScope(java.util.Map,double) -> applyTimingValuesToScope
    325:364:void applyToScope(java.util.Map) -> applyToScope
    282:286:void applyXYToScope(java.util.Map,double,double,com.alibaba.android.bindingx.core.PlatformManager$IDeviceResolutionTranslator) -> applyXYToScope
    262:271:int parseColor(java.lang.String) -> parseColor
com.alibaba.android.bindingx.core.internal.JSMath$1 -> com.alibaba.android.bindingx.core.internal.JSMath$1:
    37:37:void <init>() -> <init>
    39:39:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.JSMath$10 -> com.alibaba.android.bindingx.core.internal.JSMath$10:
    91:91:void <init>() -> <init>
    93:93:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.JSMath$11 -> com.alibaba.android.bindingx.core.internal.JSMath$11:
    97:97:void <init>() -> <init>
    99:99:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.JSMath$12 -> com.alibaba.android.bindingx.core.internal.JSMath$12:
    103:103:void <init>() -> <init>
    105:105:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.JSMath$13 -> com.alibaba.android.bindingx.core.internal.JSMath$13:
    109:109:void <init>() -> <init>
    111:111:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.JSMath$14 -> com.alibaba.android.bindingx.core.internal.JSMath$14:
    115:115:void <init>() -> <init>
    117:124:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.JSMath$15 -> com.alibaba.android.bindingx.core.internal.JSMath$15:
    128:128:void <init>() -> <init>
    130:130:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.JSMath$16 -> com.alibaba.android.bindingx.core.internal.JSMath$16:
    134:134:void <init>() -> <init>
    136:136:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.JSMath$17 -> com.alibaba.android.bindingx.core.internal.JSMath$17:
    140:140:void <init>() -> <init>
    142:142:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.JSMath$18 -> com.alibaba.android.bindingx.core.internal.JSMath$18:
    146:146:void <init>() -> <init>
    148:158:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.JSMath$19 -> com.alibaba.android.bindingx.core.internal.JSMath$19:
    162:162:void <init>() -> <init>
    164:174:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.JSMath$2 -> com.alibaba.android.bindingx.core.internal.JSMath$2:
    43:43:void <init>() -> <init>
    45:45:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.JSMath$20 -> com.alibaba.android.bindingx.core.internal.JSMath$20:
    185:185:void <init>() -> <init>
    188:191:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.JSMath$21 -> com.alibaba.android.bindingx.core.internal.JSMath$21:
    195:195:void <init>() -> <init>
    198:201:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.JSMath$22 -> com.alibaba.android.bindingx.core.internal.JSMath$22:
    206:206:void <init>() -> <init>
    209:212:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.JSMath$23 -> com.alibaba.android.bindingx.core.internal.JSMath$23:
    217:217:void <init>() -> <init>
    220:228:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.JSMath$24 -> com.alibaba.android.bindingx.core.internal.JSMath$24:
    232:232:void <init>() -> <init>
    235:244:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.JSMath$25 -> com.alibaba.android.bindingx.core.internal.JSMath$25:
    250:250:void <init>() -> <init>
    253:257:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.JSMath$26 -> com.alibaba.android.bindingx.core.internal.JSMath$26:
    274:274:void <init>() -> <init>
    277:277:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.JSMath$3 -> com.alibaba.android.bindingx.core.internal.JSMath$3:
    49:49:void <init>() -> <init>
    51:51:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.JSMath$4 -> com.alibaba.android.bindingx.core.internal.JSMath$4:
    55:55:void <init>() -> <init>
    57:57:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.JSMath$5 -> com.alibaba.android.bindingx.core.internal.JSMath$5:
    61:61:void <init>() -> <init>
    63:63:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.JSMath$6 -> com.alibaba.android.bindingx.core.internal.JSMath$6:
    67:67:void <init>() -> <init>
    69:69:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.JSMath$7 -> com.alibaba.android.bindingx.core.internal.JSMath$7:
    73:73:void <init>() -> <init>
    75:75:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.JSMath$8 -> com.alibaba.android.bindingx.core.internal.JSMath$8:
    79:79:void <init>() -> <init>
    81:81:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.JSMath$9 -> com.alibaba.android.bindingx.core.internal.JSMath$9:
    85:85:void <init>() -> <init>
    87:87:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.OrientationDetector -> com.alibaba.android.bindingx.core.internal.OrientationDetector:
    73:82:void <clinit>() -> <clinit>
    85:102:void <init>(android.content.Context) -> <init>
    114:117:void addOrientationChangedListener(com.alibaba.android.bindingx.core.internal.OrientationDetector$OnOrientationChangedListener) -> addOrientationChangedListener
    300:334:double[] computeDeviceOrientationFromRotationMatrix(float[],double[]) -> computeDeviceOrientationFromRotationMatrix
    342:357:void convertRotationVectorToAngles(float[],double[]) -> convertRotationVectorToAngles
    398:407:void ensureRotationStructuresAllocated() -> ensureRotationStructuresAllocated
    470:475:android.os.Handler getHandler() -> getHandler
    105:110:com.alibaba.android.bindingx.core.internal.OrientationDetector getInstance(android.content.Context) -> getInstance
    360:371:void getOrientationFromGeomagneticVectors(float[],float[]) -> getOrientationFromGeomagneticVectors
    169:181:java.lang.String getOrientationSensorTypeUsed() -> getOrientationSensorTypeUsed
    377:387:com.alibaba.android.bindingx.core.internal.SensorManagerProxy getSensorManagerProxy() -> getSensorManagerProxy
    457:467:void gotOrientation(double,double,double) -> gotOrientation
    215:215:void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    219:256:void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
    448:452:boolean registerForSensorType(int,int) -> registerForSensorType
    144:165:boolean registerOrientationSensorsWithFallback(int) -> registerOrientationSensorsWithFallback
    418:435:boolean registerSensors(java.util.Set,int,boolean) -> registerSensors
    120:128:boolean removeOrientationChangedListener(com.alibaba.android.bindingx.core.internal.OrientationDetector$OnOrientationChangedListener) -> removeOrientationChangedListener
    392:395:void setEventTypeActive(boolean) -> setEventTypeActive
    193:198:boolean start(int) -> start
    206:210:void stop() -> stop
    439:445:void unregisterSensors(java.lang.Iterable) -> unregisterSensors
com.alibaba.android.bindingx.core.internal.OrientationEvaluator -> com.alibaba.android.bindingx.core.internal.OrientationEvaluator:
    27:57:void <init>(java.lang.Double,java.lang.Double,java.lang.Double) -> <init>
    45:50:com.alibaba.android.bindingx.core.internal.Quaternion calculate(double,double,double,double) -> calculate
    60:64:void setObjectQuaternion(com.alibaba.android.bindingx.core.internal.Quaternion,double,double,double,double) -> setObjectQuaternion
com.alibaba.android.bindingx.core.internal.Quaternion -> com.alibaba.android.bindingx.core.internal.Quaternion:
    33:34:void <init>() -> <init>
    36:41:void <init>(double,double,double,double) -> <init>
    124:124:com.alibaba.android.bindingx.core.internal.Quaternion multiply(com.alibaba.android.bindingx.core.internal.Quaternion) -> multiply
    129:136:com.alibaba.android.bindingx.core.internal.Quaternion multiplyQuaternions(com.alibaba.android.bindingx.core.internal.Quaternion,com.alibaba.android.bindingx.core.internal.Quaternion) -> multiplyQuaternions
    112:119:com.alibaba.android.bindingx.core.internal.Quaternion setFromAxisAngle(com.alibaba.android.bindingx.core.internal.Vector3,double) -> setFromAxisAngle
    48:105:com.alibaba.android.bindingx.core.internal.Quaternion setFromEuler(com.alibaba.android.bindingx.core.internal.Euler) -> setFromEuler
    141:141:java.lang.String toString() -> toString
com.alibaba.android.bindingx.core.internal.SensorManagerProxyImpl -> com.alibaba.android.bindingx.core.internal.SensorManagerProxyImpl:
    30:32:void <init>(android.hardware.SensorManager) -> <init>
    37:41:boolean registerListener(android.hardware.SensorEventListener,int,int,android.os.Handler) -> registerListener
    46:57:void unregisterListener(android.hardware.SensorEventListener,int) -> unregisterListener
com.alibaba.android.bindingx.core.internal.TimingFunctions -> com.alibaba.android.bindingx.core.internal.TimingFunctions:
    80:599:void <clinit>() -> <clinit>
    39:39:void <init>() -> <init>
    38:38:com.alibaba.android.bindingx.core.internal.TimingFunctions$BezierInterpolatorWrapper access$000(float,float,float,float) -> access$000
    38:38:com.alibaba.android.bindingx.core.internal.TimingFunctions$InnerCache access$100() -> access$100
    38:38:double access$200(double,double,double,double) -> access$200
    38:38:double access$300(double,double,double,double) -> access$300
    42:76:void applyToScope(java.util.Map) -> applyToScope
    616:616:double easeInBounce(double,double,double,double) -> easeInBounce
    620:627:double easeOutBounce(double,double,double,double) -> easeOutBounce
    130:138:com.alibaba.android.bindingx.core.internal.TimingFunctions$BezierInterpolatorWrapper isCacheHit(float,float,float,float) -> isCacheHit
com.alibaba.android.bindingx.core.internal.TimingFunctions$1 -> com.alibaba.android.bindingx.core.internal.TimingFunctions$1:
    80:80:void <init>() -> <init>
    83:90:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.TimingFunctions$10 -> com.alibaba.android.bindingx.core.internal.TimingFunctions$10:
    239:239:void <init>() -> <init>
    242:248:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.TimingFunctions$11 -> com.alibaba.android.bindingx.core.internal.TimingFunctions$11:
    252:252:void <init>() -> <init>
    255:264:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.TimingFunctions$12 -> com.alibaba.android.bindingx.core.internal.TimingFunctions$12:
    268:268:void <init>() -> <init>
    271:277:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.TimingFunctions$13 -> com.alibaba.android.bindingx.core.internal.TimingFunctions$13:
    281:281:void <init>() -> <init>
    284:290:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.TimingFunctions$14 -> com.alibaba.android.bindingx.core.internal.TimingFunctions$14:
    294:294:void <init>() -> <init>
    297:306:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.TimingFunctions$15 -> com.alibaba.android.bindingx.core.internal.TimingFunctions$15:
    310:310:void <init>() -> <init>
    313:319:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.TimingFunctions$16 -> com.alibaba.android.bindingx.core.internal.TimingFunctions$16:
    323:323:void <init>() -> <init>
    326:332:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.TimingFunctions$17 -> com.alibaba.android.bindingx.core.internal.TimingFunctions$17:
    336:336:void <init>() -> <init>
    339:345:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.TimingFunctions$18 -> com.alibaba.android.bindingx.core.internal.TimingFunctions$18:
    349:349:void <init>() -> <init>
    352:358:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.TimingFunctions$19 -> com.alibaba.android.bindingx.core.internal.TimingFunctions$19:
    362:362:void <init>() -> <init>
    365:371:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.TimingFunctions$2 -> com.alibaba.android.bindingx.core.internal.TimingFunctions$2:
    94:94:void <init>() -> <init>
    97:121:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.TimingFunctions$20 -> com.alibaba.android.bindingx.core.internal.TimingFunctions$20:
    375:375:void <init>() -> <init>
    378:393:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.TimingFunctions$21 -> com.alibaba.android.bindingx.core.internal.TimingFunctions$21:
    397:397:void <init>() -> <init>
    400:406:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.TimingFunctions$22 -> com.alibaba.android.bindingx.core.internal.TimingFunctions$22:
    410:410:void <init>() -> <init>
    413:419:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.TimingFunctions$23 -> com.alibaba.android.bindingx.core.internal.TimingFunctions$23:
    423:423:void <init>() -> <init>
    426:435:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.TimingFunctions$24 -> com.alibaba.android.bindingx.core.internal.TimingFunctions$24:
    440:440:void <init>() -> <init>
    443:465:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.TimingFunctions$25 -> com.alibaba.android.bindingx.core.internal.TimingFunctions$25:
    469:469:void <init>() -> <init>
    471:493:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.TimingFunctions$26 -> com.alibaba.android.bindingx.core.internal.TimingFunctions$26:
    497:497:void <init>() -> <init>
    499:524:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.TimingFunctions$27 -> com.alibaba.android.bindingx.core.internal.TimingFunctions$27:
    528:528:void <init>() -> <init>
    531:538:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.TimingFunctions$28 -> com.alibaba.android.bindingx.core.internal.TimingFunctions$28:
    542:542:void <init>() -> <init>
    545:552:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.TimingFunctions$29 -> com.alibaba.android.bindingx.core.internal.TimingFunctions$29:
    556:556:void <init>() -> <init>
    559:569:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.TimingFunctions$3 -> com.alibaba.android.bindingx.core.internal.TimingFunctions$3:
    142:142:void <init>() -> <init>
    145:151:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.TimingFunctions$30 -> com.alibaba.android.bindingx.core.internal.TimingFunctions$30:
    573:573:void <init>() -> <init>
    576:582:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.TimingFunctions$31 -> com.alibaba.android.bindingx.core.internal.TimingFunctions$31:
    586:586:void <init>() -> <init>
    589:595:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.TimingFunctions$32 -> com.alibaba.android.bindingx.core.internal.TimingFunctions$32:
    599:599:void <init>() -> <init>
    602:611:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.TimingFunctions$4 -> com.alibaba.android.bindingx.core.internal.TimingFunctions$4:
    155:155:void <init>() -> <init>
    158:164:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.TimingFunctions$5 -> com.alibaba.android.bindingx.core.internal.TimingFunctions$5:
    168:168:void <init>() -> <init>
    171:180:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.TimingFunctions$6 -> com.alibaba.android.bindingx.core.internal.TimingFunctions$6:
    184:184:void <init>() -> <init>
    187:193:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.TimingFunctions$7 -> com.alibaba.android.bindingx.core.internal.TimingFunctions$7:
    197:197:void <init>() -> <init>
    200:206:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.TimingFunctions$8 -> com.alibaba.android.bindingx.core.internal.TimingFunctions$8:
    210:210:void <init>() -> <init>
    213:222:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.TimingFunctions$9 -> com.alibaba.android.bindingx.core.internal.TimingFunctions$9:
    226:226:void <init>() -> <init>
    229:235:java.lang.Object execute(java.util.ArrayList) -> execute
com.alibaba.android.bindingx.core.internal.TimingFunctions$BezierInterpolatorWrapper -> com.alibaba.android.bindingx.core.internal.TimingFunctions$BezierInterpolatorWrapper:
    657:663:void <init>(float,float,float,float) -> <init>
    667:667:float getInterpolation(float) -> getInterpolation
com.alibaba.android.bindingx.core.internal.TimingFunctions$InnerCache -> com.alibaba.android.bindingx.core.internal.TimingFunctions$InnerCache:
    635:637:void <init>(int) -> <init>
    640:646:void add(java.lang.Object) -> add
    649:649:java.util.Deque getAll() -> getAll
com.alibaba.android.bindingx.core.internal.Utils -> com.alibaba.android.bindingx.core.internal.Utils:
    42:42:void <init>() -> <init>
    69:76:java.lang.Object fromJson(java.lang.Object) -> fromJson
    136:158:java.util.Map getCustomInterceptors(java.util.Map) -> getCustomInterceptors
    163:189:com.alibaba.android.bindingx.core.internal.ExpressionPair getExpressionPair(java.util.Map,java.lang.String) -> getExpressionPair
    97:104:java.util.List getRuntimeProps(java.util.Map) -> getRuntimeProps
    82:90:java.lang.String getStringValue(java.util.Map,java.lang.String) -> getStringValue
    202:204:java.util.ArrayList newArrayList(java.lang.Object[]) -> newArrayList
    195:197:java.util.HashSet newHashSet(java.lang.Object[]) -> newHashSet
    211:226:float normalizeRotation(float) -> normalizeRotation
    232:233:int normalizedPerspectiveValue(android.content.Context,int) -> normalizedPerspectiveValue
    238:278:android.util.Pair parseTransformOrigin(java.lang.String,android.view.View) -> parseTransformOrigin
    58:65:java.util.List toList(org.json.JSONArray) -> toList
    45:54:java.util.Map toMap(org.json.JSONObject) -> toMap
com.alibaba.android.bindingx.core.internal.Vector3 -> com.alibaba.android.bindingx.core.internal.Vector3:
    29:33:void <init>(double,double,double) -> <init>
    42:58:com.alibaba.android.bindingx.core.internal.Vector3 applyQuaternion(com.alibaba.android.bindingx.core.internal.Quaternion) -> applyQuaternion
    36:39:void set(double,double,double) -> set
com.alibaba.android.bindingx.plugin.weex.BindingX -> com.alibaba.android.bindingx.plugin.weex.BindingX:
    30:30:void <init>() -> <init>
    36:39:void register() -> register
com.alibaba.android.bindingx.plugin.weex.BindingXGestureHandler -> com.alibaba.android.bindingx.plugin.weex.BindingXGestureHandler:
    43:48:void <init>(android.content.Context,com.alibaba.android.bindingx.core.PlatformManager,java.lang.Object[]) -> <init>
    60:88:boolean onCreate(java.lang.String,java.lang.String) -> onCreate
    94:102:boolean onDisable(java.lang.String,java.lang.String) -> onDisable
    52:56:void setGlobalConfig(java.util.Map) -> setGlobalConfig
com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler -> com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler:
    73:73:void <clinit>() -> <clinit>
    79:80:void <init>(android.content.Context,com.alibaba.android.bindingx.core.PlatformManager,java.lang.Object[]) -> <init>
    65:65:void access$1101(com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler,int,int,int,int,int,int) -> access$1101
    65:65:java.lang.String access$1200(com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler) -> access$1200
    65:65:int access$1300(com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler) -> access$1300
    65:65:void access$1401(com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler,java.lang.String,double,double,double,double,double,double,java.lang.Object[]) -> access$1401
    65:65:int access$1500(com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler) -> access$1500
    65:65:void access$1701(com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler,int,int,int,int,int,int) -> access$1701
    65:65:java.lang.String access$1800(com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler) -> access$1800
    65:65:java.lang.String access$1900(com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler) -> access$1900
    65:65:java.util.HashMap access$2000() -> access$2000
    65:65:void access$2100(com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler,java.lang.String,double,double,double,double,double,double,java.lang.Object[]) -> access$2100
    65:65:void access$2401(com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler,int,int,int,int,int,int) -> access$2401
    65:65:java.lang.String access$2500(com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler) -> access$2500
    65:65:boolean access$300(com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler,int,int) -> access$300
    65:65:void access$401(com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler,java.lang.String,double,double,double,double,double,double,java.lang.Object[]) -> access$401
    65:65:void access$601(com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler,int,int,int,int,int,int) -> access$601
    65:65:java.lang.String access$700(com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler) -> access$700
    65:65:void access$801(com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler,java.lang.String,double,double,double,double,double,double,java.lang.Object[]) -> access$801
    446:446:boolean isSameDirection(int,int) -> isSameDirection
    438:438:void onActivityPause() -> onActivityPause
    442:442:void onActivityResume() -> onActivityResume
    155:156:void onBindExpression(java.lang.String,java.util.Map,com.alibaba.android.bindingx.core.internal.ExpressionPair,java.util.List,com.alibaba.android.bindingx.core.BindingXCore$JavaScriptCallback) -> onBindExpression
    84:141:boolean onCreate(java.lang.String,java.lang.String) -> onCreate
    212:219:void onDestroy() -> onDestroy
    160:206:boolean onDisable(java.lang.String,java.lang.String) -> onDisable
    147:147:void onStart(java.lang.String,java.lang.String) -> onStart
com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler$ContentOffsetHolder -> com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler$ContentOffsetHolder:
    453:456:void <init>(int,int) -> <init>
com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler$InnerAppBarOffsetChangedListener -> com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler$InnerAppBarOffsetChangedListener:
    222:226:void <init>(com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler) -> <init>
    222:222:void <init>(com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler,com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler$1) -> <init>
    222:222:int access$500(com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler$InnerAppBarOffsetChangedListener) -> access$500
    229:255:void onOffsetChanged(com.google.android.material.appbar.AppBarLayout,int) -> onOffsetChanged
com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler$InnerAppBarOffsetChangedListener$1 -> com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler$InnerAppBarOffsetChangedListener$1:
    249:249:void <init>(com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler$InnerAppBarOffsetChangedListener,int,int) -> <init>
    252:253:void run() -> run
com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler$InnerListScrollListener -> com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler$InnerListScrollListener:
    370:389:void <init>(com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler,boolean,java.lang.ref.WeakReference) -> <init>
    369:369:int access$2200(com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler$InnerListScrollListener) -> access$2200
    369:369:int access$2300(com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler$InnerListScrollListener) -> access$2300
    398:433:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler$InnerListScrollListener$1 -> com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler$InnerListScrollListener$1:
    427:427:void <init>(com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler$InnerListScrollListener,int,int,int,int) -> <init>
    430:431:void run() -> run
com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler$InnerScrollViewListener -> com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler$InnerScrollViewListener:
    258:263:void <init>(com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler) -> <init>
    258:258:void <init>(com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler,com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler$1) -> <init>
    258:258:int access$1000(com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler$InnerScrollViewListener) -> access$1000
    258:258:int access$900(com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler$InnerScrollViewListener) -> access$900
    267:268:void onScroll(com.taobao.weex.ui.view.WXScrollView,int,int) -> onScroll
    272:273:void onScrollChanged(com.taobao.weex.ui.view.WXHorizontalScrollView,int,int,int,int) -> onScrollChanged
    278:278:void onScrollChanged(com.taobao.weex.ui.view.WXScrollView,int,int,int,int) -> onScrollChanged
    291:324:void onScrollInternal(int,int) -> onScrollInternal
    288:288:void onScrollStopped(com.taobao.weex.ui.view.WXScrollView,int,int) -> onScrollStopped
    283:283:void onScrollToBottom(com.taobao.weex.ui.view.WXScrollView,int,int) -> onScrollToBottom
com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler$InnerScrollViewListener$1 -> com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler$InnerScrollViewListener$1:
    318:318:void <init>(com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler$InnerScrollViewListener,int,int,int,int) -> <init>
    321:322:void run() -> run
com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler$InnerSwipeOffsetListener -> com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler$InnerSwipeOffsetListener:
    328:332:void <init>(com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler) -> <init>
    328:328:void <init>(com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler,com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler$1) -> <init>
    328:328:int access$1600(com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler$InnerSwipeOffsetListener) -> access$1600
    336:366:void onOffsetChanged(int) -> onOffsetChanged
com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler$InnerSwipeOffsetListener$1 -> com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler$InnerSwipeOffsetListener$1:
    360:360:void <init>(com.alibaba.android.bindingx.plugin.weex.BindingXScrollHandler$InnerSwipeOffsetListener,int,int) -> <init>
    363:364:void run() -> run
com.alibaba.android.bindingx.plugin.weex.BuildConfig -> com.alibaba.android.bindingx.plugin.weex.BuildConfig:
    7:7:void <clinit>() -> <clinit>
    6:6:void <init>() -> <init>
com.alibaba.android.bindingx.plugin.weex.WXBindingXModule -> com.alibaba.android.bindingx.plugin.weex.WXBindingXModule:
    70:70:void <init>() -> <init>
    73:75:void <init>(com.alibaba.android.bindingx.core.BindingXCore) -> <init>
    65:65:com.alibaba.android.bindingx.core.BindingXCore access$000(com.alibaba.android.bindingx.plugin.weex.WXBindingXModule) -> access$000
    65:65:com.alibaba.android.bindingx.core.BindingXCore access$002(com.alibaba.android.bindingx.plugin.weex.WXBindingXModule,com.alibaba.android.bindingx.core.BindingXCore) -> access$002
    108:123:java.util.Map bind(java.util.Map,com.taobao.weex.bridge.JSCallback) -> bind
    128:132:void bindAsync(java.util.Map,com.taobao.weex.bridge.JSCallback,com.taobao.weex.bridge.JSCallback) -> bindAsync
    272:329:com.alibaba.android.bindingx.core.PlatformManager createPlatformManager(com.taobao.weex.WXSDKInstance) -> createPlatformManager
    258:268:void destroy() -> destroy
    163:253:java.util.Map getComputedStyle(java.lang.String) -> getComputedStyle
    155:159:void getComputedStyleAsync(java.lang.String,com.taobao.weex.bridge.JSCallback) -> getComputedStyleAsync
    337:345:void onActivityPause() -> onActivityPause
    349:357:void onActivityResume() -> onActivityResume
    103:104:void prepare(java.util.Map) -> prepare
    78:99:void prepareInternal() -> prepareInternal
    150:150:java.util.List supportFeatures() -> supportFeatures
    136:139:void unbind(java.util.Map) -> unbind
    143:146:void unbindAll() -> unbindAll
com.alibaba.android.bindingx.plugin.weex.WXBindingXModule$1 -> com.alibaba.android.bindingx.plugin.weex.WXBindingXModule$1:
    85:85:void <init>(com.alibaba.android.bindingx.plugin.weex.WXBindingXModule) -> <init>
    85:85:java.lang.Object createWith(java.lang.Object,java.lang.Object,java.lang.Object[]) -> createWith
    88:88:com.alibaba.android.bindingx.core.IEventHandler createWith(android.content.Context,com.alibaba.android.bindingx.core.PlatformManager,java.lang.Object[]) -> createWith
com.alibaba.android.bindingx.plugin.weex.WXBindingXModule$2 -> com.alibaba.android.bindingx.plugin.weex.WXBindingXModule$2:
    92:92:void <init>(com.alibaba.android.bindingx.plugin.weex.WXBindingXModule) -> <init>
    92:92:java.lang.Object createWith(java.lang.Object,java.lang.Object,java.lang.Object[]) -> createWith
    95:95:com.alibaba.android.bindingx.core.IEventHandler createWith(android.content.Context,com.alibaba.android.bindingx.core.PlatformManager,java.lang.Object[]) -> createWith
com.alibaba.android.bindingx.plugin.weex.WXBindingXModule$3 -> com.alibaba.android.bindingx.plugin.weex.WXBindingXModule$3:
    113:113:void <init>(com.alibaba.android.bindingx.plugin.weex.WXBindingXModule,com.taobao.weex.bridge.JSCallback) -> <init>
    116:119:void callback(java.lang.Object) -> callback
com.alibaba.android.bindingx.plugin.weex.WXBindingXModule$4 -> com.alibaba.android.bindingx.plugin.weex.WXBindingXModule$4:
    258:258:void <init>(com.alibaba.android.bindingx.plugin.weex.WXBindingXModule) -> <init>
    261:266:void run() -> run
com.alibaba.android.bindingx.plugin.weex.WXBindingXModule$5 -> com.alibaba.android.bindingx.plugin.weex.WXBindingXModule$5:
    318:318:void <init>(int) -> <init>
    326:326:double nativeToWeb(double,java.lang.Object[]) -> nativeToWeb
    321:321:double webToNative(double,java.lang.Object[]) -> webToNative
com.alibaba.android.bindingx.plugin.weex.WXBindingXModule$6 -> com.alibaba.android.bindingx.plugin.weex.WXBindingXModule$6:
    286:286:void <init>() -> <init>
    295:316:void synchronouslyUpdateViewOnUIThread(android.view.View,java.lang.String,java.lang.Object,com.alibaba.android.bindingx.core.PlatformManager$IDeviceResolutionTranslator,java.util.Map,java.lang.Object[]) -> synchronouslyUpdateViewOnUIThread
com.alibaba.android.bindingx.plugin.weex.WXBindingXModule$7 -> com.alibaba.android.bindingx.plugin.weex.WXBindingXModule$7:
    275:275:void <init>() -> <init>
    279:283:android.view.View findViewBy(java.lang.String,java.lang.Object[]) -> findViewBy
com.alibaba.android.bindingx.plugin.weex.WXBindingXModule$8 -> com.alibaba.android.bindingx.plugin.weex.WXBindingXModule$8:
    337:337:void <init>(com.alibaba.android.bindingx.plugin.weex.WXBindingXModule) -> <init>
    340:343:void run() -> run
com.alibaba.android.bindingx.plugin.weex.WXBindingXModule$9 -> com.alibaba.android.bindingx.plugin.weex.WXBindingXModule$9:
    349:349:void <init>(com.alibaba.android.bindingx.plugin.weex.WXBindingXModule) -> <init>
    352:355:void run() -> run
com.alibaba.android.bindingx.plugin.weex.WXBindingXModuleService -> com.alibaba.android.bindingx.plugin.weex.WXBindingXModuleService:
    28:28:void <init>() -> <init>
    37:44:java.lang.Class getExternalModuleClass(java.lang.String,android.content.Context) -> getExternalModuleClass
    32:32:android.os.IBinder onBind(android.content.Intent) -> onBind
com.alibaba.android.bindingx.plugin.weex.WXExpressionBindingModule -> com.alibaba.android.bindingx.plugin.weex.WXExpressionBindingModule:
    45:45:void <init>() -> <init>
    72:93:void createBinding(java.lang.String,java.lang.String,java.lang.String,java.util.List,com.taobao.weex.bridge.JSCallback) -> createBinding
    113:117:void destroy() -> destroy
    106:109:void disableAll() -> disableAll
    98:101:void disableBinding(java.lang.String,java.lang.String) -> disableBinding
    53:66:void enableBinding(java.lang.String,java.lang.String) -> enableBinding
    123:126:void onActivityPause() -> onActivityPause
    130:133:void onActivityResume() -> onActivityResume
com.alibaba.android.bindingx.plugin.weex.WXExpressionBindingModule$1 -> com.alibaba.android.bindingx.plugin.weex.WXExpressionBindingModule$1:
    59:59:void <init>(com.alibaba.android.bindingx.plugin.weex.WXExpressionBindingModule) -> <init>
    59:59:java.lang.Object createWith(java.lang.Object,java.lang.Object,java.lang.Object[]) -> createWith
    62:62:com.alibaba.android.bindingx.core.IEventHandler createWith(android.content.Context,com.alibaba.android.bindingx.core.PlatformManager,java.lang.Object[]) -> createWith
com.alibaba.android.bindingx.plugin.weex.WXExpressionBindingModule$2 -> com.alibaba.android.bindingx.plugin.weex.WXExpressionBindingModule$2:
    83:83:void <init>(com.alibaba.android.bindingx.plugin.weex.WXExpressionBindingModule,com.taobao.weex.bridge.JSCallback) -> <init>
    86:89:void callback(java.lang.Object) -> callback
com.alibaba.android.bindingx.plugin.weex.WXModuleUtils -> com.alibaba.android.bindingx.plugin.weex.WXModuleUtils:
    25:25:void <init>() -> <init>
    38:38:com.taobao.weex.ui.component.WXComponent findComponentByRef(java.lang.String,java.lang.String) -> findComponentByRef
    29:33:android.view.View findViewByRef(java.lang.String,java.lang.String) -> findViewByRef
com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService -> com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService:
    59:115:void <clinit>() -> <clinit>
    57:57:void <init>() -> <init>
    57:57:android.view.View access$2100(com.taobao.weex.ui.component.WXComponent) -> access$2100
    57:57:double access$2200(double,com.alibaba.android.bindingx.core.PlatformManager$IDeviceResolutionTranslator) -> access$2200
    57:57:void access$2300(java.lang.Runnable) -> access$2300
    149:150:void clearCallbacks() -> clearCallbacks
    841:846:android.view.View findScrollTarget(com.taobao.weex.ui.component.WXComponent) -> findScrollTarget
    119:128:com.alibaba.android.bindingx.plugin.weex.IWXViewUpdater findUpdater(java.lang.String) -> findUpdater
    836:836:double getRealSize(double,com.alibaba.android.bindingx.core.PlatformManager$IDeviceResolutionTranslator) -> getRealSize
    145:146:void runOnUIThread(java.lang.Runnable) -> runOnUIThread
com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$BackgroundUpdater -> com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$BackgroundUpdater:
    605:605:void <init>() -> <init>
    605:605:void <init>(com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$1) -> <init>
    613:632:void update(com.taobao.weex.ui.component.WXComponent,android.view.View,java.lang.Object,com.alibaba.android.bindingx.core.PlatformManager$IDeviceResolutionTranslator,java.util.Map) -> update
com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$BackgroundUpdater$1 -> com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$BackgroundUpdater$1:
    617:617:void <init>(com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$BackgroundUpdater,android.view.View,int) -> <init>
    620:630:void run() -> run
com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$BorderRadiusBottomLeftUpdater -> com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$BorderRadiusBottomLeftUpdater:
    724:724:void <init>() -> <init>
    724:724:void <init>(com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$1) -> <init>
    732:746:void update(com.taobao.weex.ui.component.WXComponent,android.view.View,java.lang.Object,com.alibaba.android.bindingx.core.PlatformManager$IDeviceResolutionTranslator,java.util.Map) -> update
com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$BorderRadiusBottomLeftUpdater$1 -> com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$BorderRadiusBottomLeftUpdater$1:
    736:736:void <init>(com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$BorderRadiusBottomLeftUpdater,android.view.View,double,com.alibaba.android.bindingx.core.PlatformManager$IDeviceResolutionTranslator) -> <init>
    739:744:void run() -> run
com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$BorderRadiusBottomRightUpdater -> com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$BorderRadiusBottomRightUpdater:
    749:749:void <init>() -> <init>
    749:749:void <init>(com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$1) -> <init>
    757:771:void update(com.taobao.weex.ui.component.WXComponent,android.view.View,java.lang.Object,com.alibaba.android.bindingx.core.PlatformManager$IDeviceResolutionTranslator,java.util.Map) -> update
com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$BorderRadiusBottomRightUpdater$1 -> com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$BorderRadiusBottomRightUpdater$1:
    761:761:void <init>(com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$BorderRadiusBottomRightUpdater,android.view.View,double,com.alibaba.android.bindingx.core.PlatformManager$IDeviceResolutionTranslator) -> <init>
    764:769:void run() -> run
com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$BorderRadiusTopLeftUpdater -> com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$BorderRadiusTopLeftUpdater:
    674:674:void <init>() -> <init>
    674:674:void <init>(com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$1) -> <init>
    682:696:void update(com.taobao.weex.ui.component.WXComponent,android.view.View,java.lang.Object,com.alibaba.android.bindingx.core.PlatformManager$IDeviceResolutionTranslator,java.util.Map) -> update
com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$BorderRadiusTopLeftUpdater$1 -> com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$BorderRadiusTopLeftUpdater$1:
    686:686:void <init>(com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$BorderRadiusTopLeftUpdater,android.view.View,double,com.alibaba.android.bindingx.core.PlatformManager$IDeviceResolutionTranslator) -> <init>
    689:694:void run() -> run
com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$BorderRadiusTopRightUpdater -> com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$BorderRadiusTopRightUpdater:
    699:699:void <init>() -> <init>
    699:699:void <init>(com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$1) -> <init>
    707:721:void update(com.taobao.weex.ui.component.WXComponent,android.view.View,java.lang.Object,com.alibaba.android.bindingx.core.PlatformManager$IDeviceResolutionTranslator,java.util.Map) -> update
com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$BorderRadiusTopRightUpdater$1 -> com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$BorderRadiusTopRightUpdater$1:
    711:711:void <init>(com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$BorderRadiusTopRightUpdater,android.view.View,double,com.alibaba.android.bindingx.core.PlatformManager$IDeviceResolutionTranslator) -> <init>
    714:719:void run() -> run
com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$BorderRadiusUpdater -> com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$BorderRadiusUpdater:
    774:774:void <init>() -> <init>
    774:774:void <init>(com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$1) -> <init>
    783:832:void update(com.taobao.weex.ui.component.WXComponent,android.view.View,java.lang.Object,com.alibaba.android.bindingx.core.PlatformManager$IDeviceResolutionTranslator,java.util.Map) -> update
com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$BorderRadiusUpdater$1 -> com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$BorderRadiusUpdater$1:
    789:789:void <init>(com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$BorderRadiusUpdater,android.view.View,java.util.ArrayList,com.alibaba.android.bindingx.core.PlatformManager$IDeviceResolutionTranslator) -> <init>
    792:814:void run() -> run
com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$BorderRadiusUpdater$2 -> com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$BorderRadiusUpdater$2:
    818:818:void <init>(com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$BorderRadiusUpdater,android.view.View,double,com.alibaba.android.bindingx.core.PlatformManager$IDeviceResolutionTranslator) -> <init>
    821:829:void run() -> run
com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$ColorUpdater -> com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$ColorUpdater:
    635:635:void <init>() -> <init>
    635:635:void <init>(com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$1) -> <init>
    643:671:void update(com.taobao.weex.ui.component.WXComponent,android.view.View,java.lang.Object,com.alibaba.android.bindingx.core.PlatformManager$IDeviceResolutionTranslator,java.util.Map) -> update
com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$ColorUpdater$1 -> com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$ColorUpdater$1:
    647:647:void <init>(com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$ColorUpdater,android.view.View,int,com.taobao.weex.ui.component.WXComponent) -> <init>
    650:669:void run() -> run
com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$ContentOffsetUpdater -> com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$ContentOffsetUpdater:
    152:152:void <init>() -> <init>
    152:152:void <init>(com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$1) -> <init>
    160:188:void update(com.taobao.weex.ui.component.WXComponent,android.view.View,java.lang.Object,com.alibaba.android.bindingx.core.PlatformManager$IDeviceResolutionTranslator,java.util.Map) -> update
com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$ContentOffsetUpdater$1 -> com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$ContentOffsetUpdater$1:
    166:166:void <init>(com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$ContentOffsetUpdater,android.view.View,double,com.alibaba.android.bindingx.core.PlatformManager$IDeviceResolutionTranslator) -> <init>
    169:171:void run() -> run
com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$ContentOffsetUpdater$2 -> com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$ContentOffsetUpdater$2:
    178:178:void <init>(com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$ContentOffsetUpdater,android.view.View,double,com.alibaba.android.bindingx.core.PlatformManager$IDeviceResolutionTranslator,double) -> <init>
    181:183:void run() -> run
com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$ContentOffsetXUpdater -> com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$ContentOffsetXUpdater:
    191:191:void <init>() -> <init>
    191:191:void <init>(com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$1) -> <init>
    199:213:void update(com.taobao.weex.ui.component.WXComponent,android.view.View,java.lang.Object,com.alibaba.android.bindingx.core.PlatformManager$IDeviceResolutionTranslator,java.util.Map) -> update
com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$ContentOffsetXUpdater$1 -> com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$ContentOffsetXUpdater$1:
    207:207:void <init>(com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$ContentOffsetXUpdater,android.view.View,double,com.alibaba.android.bindingx.core.PlatformManager$IDeviceResolutionTranslator) -> <init>
    210:211:void run() -> run
com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$ContentOffsetYUpdater -> com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$ContentOffsetYUpdater:
    216:216:void <init>() -> <init>
    216:216:void <init>(com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$1) -> <init>
    224:238:void update(com.taobao.weex.ui.component.WXComponent,android.view.View,java.lang.Object,com.alibaba.android.bindingx.core.PlatformManager$IDeviceResolutionTranslator,java.util.Map) -> update
com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$ContentOffsetYUpdater$1 -> com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$ContentOffsetYUpdater$1:
    232:232:void <init>(com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$ContentOffsetYUpdater,android.view.View,double,com.alibaba.android.bindingx.core.PlatformManager$IDeviceResolutionTranslator) -> <init>
    235:236:void run() -> run
com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$LayoutUpdater -> com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$LayoutUpdater:
    543:543:void <init>() -> <init>
    548:549:void setPropertyName(java.lang.String) -> setPropertyName
    557:601:void update(com.taobao.weex.ui.component.WXComponent,android.view.View,java.lang.Object,com.alibaba.android.bindingx.core.PlatformManager$IDeviceResolutionTranslator,java.util.Map) -> update
com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$NOpUpdater -> com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$NOpUpdater:
    133:133:void <init>() -> <init>
    133:133:void <init>(com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$1) -> <init>
    141:141:void update(com.taobao.weex.ui.component.WXComponent,android.view.View,java.lang.Object,com.alibaba.android.bindingx.core.PlatformManager$IDeviceResolutionTranslator,java.util.Map) -> update
com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$OpacityUpdater -> com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$OpacityUpdater:
    241:241:void <init>() -> <init>
    241:241:void <init>(com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$1) -> <init>
    249:260:void update(com.taobao.weex.ui.component.WXComponent,android.view.View,java.lang.Object,com.alibaba.android.bindingx.core.PlatformManager$IDeviceResolutionTranslator,java.util.Map) -> update
com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$OpacityUpdater$1 -> com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$OpacityUpdater$1:
    254:254:void <init>(com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$OpacityUpdater,android.view.View,float) -> <init>
    257:258:void run() -> run
com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$RotateUpdater -> com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$RotateUpdater:
    435:435:void <init>() -> <init>
    435:435:void <init>(com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$1) -> <init>
    444:469:void update(com.taobao.weex.ui.component.WXComponent,android.view.View,java.lang.Object,com.alibaba.android.bindingx.core.PlatformManager$IDeviceResolutionTranslator,java.util.Map) -> update
com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$RotateUpdater$1 -> com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$RotateUpdater$1:
    448:448:void <init>(com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$RotateUpdater,java.util.Map,android.view.View,java.lang.Object) -> <init>
    451:467:void run() -> run
com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$RotateXUpdater -> com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$RotateXUpdater:
    472:472:void <init>() -> <init>
    472:472:void <init>(com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$1) -> <init>
    480:504:void update(com.taobao.weex.ui.component.WXComponent,android.view.View,java.lang.Object,com.alibaba.android.bindingx.core.PlatformManager$IDeviceResolutionTranslator,java.util.Map) -> update
com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$RotateXUpdater$1 -> com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$RotateXUpdater$1:
    483:483:void <init>(com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$RotateXUpdater,java.util.Map,android.view.View,java.lang.Object) -> <init>
    486:502:void run() -> run
com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$RotateYUpdater -> com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$RotateYUpdater:
    508:508:void <init>() -> <init>
    508:508:void <init>(com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$1) -> <init>
    516:540:void update(com.taobao.weex.ui.component.WXComponent,android.view.View,java.lang.Object,com.alibaba.android.bindingx.core.PlatformManager$IDeviceResolutionTranslator,java.util.Map) -> update
com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$RotateYUpdater$1 -> com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$RotateYUpdater$1:
    519:519:void <init>(com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$RotateYUpdater,java.util.Map,android.view.View,java.lang.Object) -> <init>
    522:538:void run() -> run
com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$ScaleUpdater -> com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$ScaleUpdater:
    333:333:void <init>() -> <init>
    333:333:void <init>(com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$1) -> <init>
    341:374:void update(com.taobao.weex.ui.component.WXComponent,android.view.View,java.lang.Object,com.alibaba.android.bindingx.core.PlatformManager$IDeviceResolutionTranslator,java.util.Map) -> update
com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$ScaleUpdater$1 -> com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$ScaleUpdater$1:
    341:341:void <init>(com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$ScaleUpdater,java.util.Map,android.view.View,java.lang.Object) -> <init>
    344:372:void run() -> run
com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$ScaleXUpdater -> com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$ScaleXUpdater:
    377:377:void <init>() -> <init>
    377:377:void <init>(com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$1) -> <init>
    385:403:void update(com.taobao.weex.ui.component.WXComponent,android.view.View,java.lang.Object,com.alibaba.android.bindingx.core.PlatformManager$IDeviceResolutionTranslator,java.util.Map) -> update
com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$ScaleXUpdater$1 -> com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$ScaleXUpdater$1:
    388:388:void <init>(com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$ScaleXUpdater,java.util.Map,android.view.View,java.lang.Object) -> <init>
    391:401:void run() -> run
com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$ScaleYUpdater -> com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$ScaleYUpdater:
    406:406:void <init>() -> <init>
    406:406:void <init>(com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$1) -> <init>
    414:432:void update(com.taobao.weex.ui.component.WXComponent,android.view.View,java.lang.Object,com.alibaba.android.bindingx.core.PlatformManager$IDeviceResolutionTranslator,java.util.Map) -> update
com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$ScaleYUpdater$1 -> com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$ScaleYUpdater$1:
    417:417:void <init>(com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$ScaleYUpdater,java.util.Map,android.view.View,java.lang.Object) -> <init>
    420:430:void run() -> run
com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$TranslateUpdater -> com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$TranslateUpdater:
    263:263:void <init>() -> <init>
    263:263:void <init>(com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$1) -> <init>
    272:288:void update(com.taobao.weex.ui.component.WXComponent,android.view.View,java.lang.Object,com.alibaba.android.bindingx.core.PlatformManager$IDeviceResolutionTranslator,java.util.Map) -> update
com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$TranslateUpdater$1 -> com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$TranslateUpdater$1:
    280:280:void <init>(com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$TranslateUpdater,android.view.View,double,com.alibaba.android.bindingx.core.PlatformManager$IDeviceResolutionTranslator,double) -> <init>
    283:285:void run() -> run
com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$TranslateXUpdater -> com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$TranslateXUpdater:
    291:291:void <init>() -> <init>
    291:291:void <init>(com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$1) -> <init>
    299:309:void update(com.taobao.weex.ui.component.WXComponent,android.view.View,java.lang.Object,com.alibaba.android.bindingx.core.PlatformManager$IDeviceResolutionTranslator,java.util.Map) -> update
com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$TranslateXUpdater$1 -> com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$TranslateXUpdater$1:
    303:303:void <init>(com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$TranslateXUpdater,android.view.View,double,com.alibaba.android.bindingx.core.PlatformManager$IDeviceResolutionTranslator) -> <init>
    306:307:void run() -> run
com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$TranslateYUpdater -> com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$TranslateYUpdater:
    312:312:void <init>() -> <init>
    312:312:void <init>(com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$1) -> <init>
    320:330:void update(com.taobao.weex.ui.component.WXComponent,android.view.View,java.lang.Object,com.alibaba.android.bindingx.core.PlatformManager$IDeviceResolutionTranslator,java.util.Map) -> update
com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$TranslateYUpdater$1 -> com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$TranslateYUpdater$1:
    324:324:void <init>(com.alibaba.android.bindingx.plugin.weex.WXViewUpdateService$TranslateYUpdater,android.view.View,double,com.alibaba.android.bindingx.core.PlatformManager$IDeviceResolutionTranslator) -> <init>
    327:328:void run() -> run
com.alibaba.fastjson.JSON -> com.alibaba.fastjson.JSON:
    57:92:void <clinit>() -> <clinit>
    55:55:void <init>() -> <init>
    95:95:java.lang.Object parse(java.lang.String) -> parse
    99:110:java.lang.Object parse(java.lang.String,int) -> parse
    115:117:java.lang.Object parse(byte[],com.alibaba.fastjson.parser.Feature[]) -> parse
    122:127:java.lang.Object parse(java.lang.String,com.alibaba.fastjson.parser.Feature[]) -> parse
    259:282:com.alibaba.fastjson.JSONArray parseArray(java.lang.String) -> parseArray
    286:306:java.util.List parseArray(java.lang.String,java.lang.Class) -> parseArray
    310:328:java.util.List parseArray(java.lang.String,java.lang.reflect.Type[]) -> parseArray
    131:131:com.alibaba.fastjson.JSONObject parseObject(java.lang.String,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    135:140:com.alibaba.fastjson.JSONObject parseObject(java.lang.String) -> parseObject
    145:145:java.lang.Object parseObject(java.lang.String,com.alibaba.fastjson.TypeReference,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    150:150:java.lang.Object parseObject(java.lang.String,java.lang.Class,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    155:155:java.lang.Object parseObject(java.lang.String,java.lang.Class,com.alibaba.fastjson.parser.deserializer.ParseProcess,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    161:161:java.lang.Object parseObject(java.lang.String,java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    166:166:java.lang.Object parseObject(java.lang.String,java.lang.reflect.Type,com.alibaba.fastjson.parser.deserializer.ParseProcess,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    171:186:java.lang.Object parseObject(java.lang.String,java.lang.reflect.Type,int,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    191:191:java.lang.Object parseObject(java.lang.String,java.lang.reflect.Type,com.alibaba.fastjson.parser.ParserConfig,int,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    197:221:java.lang.Object parseObject(java.lang.String,java.lang.reflect.Type,com.alibaba.fastjson.parser.ParserConfig,com.alibaba.fastjson.parser.deserializer.ParseProcess,int,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    227:229:java.lang.Object parseObject(byte[],java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    235:251:java.lang.Object parseObject(char[],int,java.lang.reflect.Type,com.alibaba.fastjson.parser.Feature[]) -> parseObject
    255:255:java.lang.Object parseObject(java.lang.String,java.lang.Class) -> parseObject
    657:660:void setFilter(com.alibaba.fastjson.serializer.JSONSerializer,com.alibaba.fastjson.serializer.SerializeFilter[]) -> setFilter
    663:690:void setFilter(com.alibaba.fastjson.serializer.JSONSerializer,com.alibaba.fastjson.serializer.SerializeFilter) -> setFilter
    567:567:java.lang.Object toJSON(java.lang.Object) -> toJSON
    572:648:java.lang.Object toJSON(java.lang.Object,com.alibaba.fastjson.parser.ParserConfig) -> toJSON
    423:435:byte[] toJSONBytes(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[]) -> toJSONBytes
    498:510:byte[] toJSONBytes(java.lang.Object,com.alibaba.fastjson.serializer.SerializeConfig,com.alibaba.fastjson.serializer.SerializerFeature[]) -> toJSONBytes
    333:333:java.lang.String toJSONString(java.lang.Object) -> toJSONString
    337:349:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializerFeature[]) -> toJSONString
    381:397:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializeFilter,com.alibaba.fastjson.serializer.SerializerFeature[]) -> toJSONString
    402:418:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializeFilter[],com.alibaba.fastjson.serializer.SerializerFeature[]) -> toJSONString
    440:440:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializeConfig,com.alibaba.fastjson.serializer.SerializerFeature[]) -> toJSONString
    445:459:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializeConfig,com.alibaba.fastjson.serializer.SerializeFilter,com.alibaba.fastjson.serializer.SerializerFeature[]) -> toJSONString
    465:479:java.lang.String toJSONString(java.lang.Object,com.alibaba.fastjson.serializer.SerializeConfig,com.alibaba.fastjson.serializer.SerializeFilter[],com.alibaba.fastjson.serializer.SerializerFeature[]) -> toJSONString
    515:519:java.lang.String toJSONString(java.lang.Object,boolean) -> toJSONString
    544:549:java.lang.String toJSONString() -> toJSONString
    358:376:java.lang.String toJSONStringWithDateFormat(java.lang.Object,java.lang.String,com.alibaba.fastjson.serializer.SerializerFeature[]) -> toJSONStringWithDateFormat
    484:493:java.lang.String toJSONStringZ(java.lang.Object,com.alibaba.fastjson.serializer.SerializeConfig,com.alibaba.fastjson.serializer.SerializerFeature[]) -> toJSONStringZ
    653:653:java.lang.Object toJavaObject(com.alibaba.fastjson.JSON,java.lang.Class) -> toJavaObject
    540:540:java.lang.String toString() -> toString
    554:563:void writeJSONString(java.lang.Appendable) -> writeJSONString
    523:535:void writeJSONStringTo(java.lang.Object,java.io.Writer,com.alibaba.fastjson.serializer.SerializerFeature[]) -> writeJSONStringTo
com.alibaba.fastjson.JSONArray -> com.alibaba.fastjson.JSONArray:
    55:57:void <init>() -> <init>
    59:61:void <init>(java.util.List) -> <init>
    63:65:void <init>(int) -> <init>
    112:112:boolean add(java.lang.Object) -> add
    148:149:void add(int,java.lang.Object) -> add
    124:124:boolean addAll(java.util.Collection) -> addAll
    128:128:boolean addAll(int,java.util.Collection) -> addAll
    140:141:void clear() -> clear
    358:358:java.lang.Object clone() -> clone
    96:96:boolean contains(java.lang.Object) -> contains
    120:120:boolean containsAll(java.util.Collection) -> containsAll
    362:362:boolean equals(java.lang.Object) -> equals
    176:176:java.lang.Object get(int) -> get
    321:323:java.math.BigDecimal getBigDecimal(int) -> getBigDecimal
    327:329:java.math.BigInteger getBigInteger(int) -> getBigInteger
    205:211:java.lang.Boolean getBoolean(int) -> getBoolean
    215:221:boolean getBooleanValue(int) -> getBooleanValue
    225:227:java.lang.Byte getByte(int) -> getByte
    231:237:byte getByteValue(int) -> getByteValue
    80:80:java.lang.reflect.Type getComponentType() -> getComponentType
    339:341:java.util.Date getDate(int) -> getDate
    305:307:java.lang.Double getDouble(int) -> getDouble
    311:317:double getDoubleValue(int) -> getDoubleValue
    289:291:java.lang.Float getFloat(int) -> getFloat
    295:301:float getFloatValue(int) -> getFloatValue
    263:269:int getIntValue(int) -> getIntValue
    257:259:java.lang.Integer getInteger(int) -> getInteger
    190:196:com.alibaba.fastjson.JSONArray getJSONArray(int) -> getJSONArray
    180:186:com.alibaba.fastjson.JSONObject getJSONObject(int) -> getJSONObject
    273:275:java.lang.Long getLong(int) -> getLong
    279:285:long getLongValue(int) -> getLongValue
    200:201:java.lang.Object getObject(int,java.lang.Class) -> getObject
    72:72:java.lang.Object getRelatedArray() -> getRelatedArray
    241:243:java.lang.Short getShort(int) -> getShort
    247:253:short getShortValue(int) -> getShortValue
    345:347:java.sql.Date getSqlDate(int) -> getSqlDate
    333:335:java.lang.String getString(int) -> getString
    351:353:java.sql.Timestamp getTimestamp(int) -> getTimestamp
    366:366:int hashCode() -> hashCode
    156:156:int indexOf(java.lang.Object) -> indexOf
    92:92:boolean isEmpty() -> isEmpty
    100:100:java.util.Iterator iterator() -> iterator
    160:160:int lastIndexOf(java.lang.Object) -> lastIndexOf
    164:164:java.util.ListIterator listIterator() -> listIterator
    168:168:java.util.ListIterator listIterator(int) -> listIterator
    116:116:boolean remove(java.lang.Object) -> remove
    152:152:java.lang.Object remove(int) -> remove
    132:132:boolean removeAll(java.util.Collection) -> removeAll
    136:136:boolean retainAll(java.util.Collection) -> retainAll
    144:144:java.lang.Object set(int,java.lang.Object) -> set
    84:85:void setComponentType(java.lang.reflect.Type) -> setComponentType
    76:77:void setRelatedArray(java.lang.Object) -> setRelatedArray
    88:88:int size() -> size
    172:172:java.util.List subList(int,int) -> subList
    104:104:java.lang.Object[] toArray() -> toArray
    108:108:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
com.alibaba.fastjson.JSONException -> com.alibaba.fastjson.JSONException:
    26:27:void <init>() -> <init>
    30:31:void <init>(java.lang.String) -> <init>
    34:35:void <init>(java.lang.String,java.lang.Throwable) -> <init>
com.alibaba.fastjson.JSONObject -> com.alibaba.fastjson.JSONObject:
    59:60:void <init>() -> <init>
    62:64:void <init>(java.util.Map) -> <init>
    67:68:void <init>(boolean) -> <init>
    71:72:void <init>(int) -> <init>
    74:80:void <init>(int,boolean) -> <init>
    302:303:void clear() -> clear
    323:323:java.lang.Object clone() -> clone
    91:91:boolean containsKey(java.lang.Object) -> containsKey
    95:95:boolean containsValue(java.lang.Object) -> containsValue
    318:318:java.util.Set entrySet() -> entrySet
    327:327:boolean equals(java.lang.Object) -> equals
    99:99:java.lang.Object get(java.lang.Object) -> get
    254:256:java.math.BigDecimal getBigDecimal(java.lang.String) -> getBigDecimal
    260:262:java.math.BigInteger getBigInteger(java.lang.String) -> getBigInteger
    128:134:java.lang.Boolean getBoolean(java.lang.String) -> getBoolean
    148:154:boolean getBooleanValue(java.lang.String) -> getBooleanValue
    158:160:java.lang.Byte getByte(java.lang.String) -> getByte
    164:170:byte getByteValue(java.lang.String) -> getByteValue
    138:144:byte[] getBytes(java.lang.String) -> getBytes
    276:278:java.util.Date getDate(java.lang.String) -> getDate
    238:240:java.lang.Double getDouble(java.lang.String) -> getDouble
    244:250:double getDoubleValue(java.lang.String) -> getDoubleValue
    222:224:java.lang.Float getFloat(java.lang.String) -> getFloat
    228:234:float getFloatValue(java.lang.String) -> getFloatValue
    196:202:int getIntValue(java.lang.String) -> getIntValue
    190:192:java.lang.Integer getInteger(java.lang.String) -> getInteger
    113:119:com.alibaba.fastjson.JSONArray getJSONArray(java.lang.String) -> getJSONArray
    103:109:com.alibaba.fastjson.JSONObject getJSONObject(java.lang.String) -> getJSONObject
    206:208:java.lang.Long getLong(java.lang.String) -> getLong
    212:218:long getLongValue(java.lang.String) -> getLongValue
    123:124:java.lang.Object getObject(java.lang.String,java.lang.Class) -> getObject
    174:176:java.lang.Short getShort(java.lang.String) -> getShort
    180:186:short getShortValue(java.lang.String) -> getShortValue
    282:284:java.sql.Date getSqlDate(java.lang.String) -> getSqlDate
    266:272:java.lang.String getString(java.lang.String) -> getString
    288:290:java.sql.Timestamp getTimestamp(java.lang.String) -> getTimestamp
    331:331:int hashCode() -> hashCode
    335:413:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
    87:87:boolean isEmpty() -> isEmpty
    310:310:java.util.Set keySet() -> keySet
    51:51:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    294:294:java.lang.Object put(java.lang.String,java.lang.Object) -> put
    298:299:void putAll(java.util.Map) -> putAll
    306:306:java.lang.Object remove(java.lang.Object) -> remove
    83:83:int size() -> size
    314:314:java.util.Collection values() -> values
com.alibaba.fastjson.JSONReader -> com.alibaba.fastjson.JSONReader:
    28:29:void <init>(java.io.Reader) -> <init>
    32:33:void <init>(com.alibaba.fastjson.parser.JSONLexer) -> <init>
    35:37:void <init>(com.alibaba.fastjson.parser.DefaultJSONParser) -> <init>
    141:142:void close() -> close
    40:41:void config(com.alibaba.fastjson.parser.Feature,boolean) -> config
    71:73:void endArray() -> endArray
    55:57:void endObject() -> endObject
    94:119:void endStructure() -> endStructure
    122:136:boolean hasNext() -> hasNext
    276:299:void readAfter() -> readAfter
    254:273:void readBefore() -> readBefore
    146:154:java.lang.Integer readInteger() -> readInteger
    159:167:java.lang.Long readLong() -> readLong
    184:184:java.lang.Object readObject(com.alibaba.fastjson.TypeReference) -> readObject
    188:195:java.lang.Object readObject(java.lang.reflect.Type) -> readObject
    199:206:java.lang.Object readObject(java.lang.Class) -> readObject
    210:218:void readObject(java.lang.Object) -> readObject
    221:238:java.lang.Object readObject() -> readObject
    243:250:java.lang.Object readObject(java.util.Map) -> readObject
    172:180:java.lang.String readString() -> readString
    60:68:void startArray() -> startArray
    44:52:void startObject() -> startObject
    76:91:void startStructure() -> startStructure
com.alibaba.fastjson.JSONStreamContext -> com.alibaba.fastjson.JSONStreamContext:
    15:18:void <init>(com.alibaba.fastjson.JSONStreamContext,int) -> <init>
    21:21:com.alibaba.fastjson.JSONStreamContext getParent() -> getParent
    25:25:int getState() -> getState
    29:30:void setState(int) -> setState
com.alibaba.fastjson.JSONWriter -> com.alibaba.fastjson.JSONWriter:
    21:24:void <init>(java.io.Writer) -> <init>
    150:176:void afterWriter() -> afterWriter
    127:147:void beforeWrite() -> beforeWrite
    75:90:void beginStructure() -> beginStructure
    183:184:void close() -> close
    27:28:void config(com.alibaba.fastjson.serializer.SerializerFeature,boolean) -> config
    93:95:void endArray() -> endArray
    39:41:void endObject() -> endObject
    98:124:void endStructure() -> endStructure
    179:180:void flush() -> flush
    66:72:void startArray() -> startArray
    31:36:void startObject() -> startObject
    44:45:void writeKey(java.lang.String) -> writeKey
    52:57:void writeObject(java.lang.String) -> writeObject
    60:63:void writeObject(java.lang.Object) -> writeObject
    48:49:void writeValue(java.lang.Object) -> writeValue
com.alibaba.fastjson.TypeReference -> com.alibaba.fastjson.TypeReference:
    21:21:void <clinit>() -> <clinit>
    11:15:void <init>() -> <init>
    18:18:java.lang.reflect.Type getType() -> getType
com.alibaba.fastjson.TypeReference$1 -> com.alibaba.fastjson.TypeReference$1:
    21:21:void <init>() -> <init>
com.alibaba.fastjson.parser.AbstractJSONParser -> com.alibaba.fastjson.parser.AbstractJSONParser:
    3:3:void <init>() -> <init>
com.alibaba.fastjson.parser.DefaultJSONParser -> com.alibaba.fastjson.parser.DefaultJSONParser:
    80:123:void <clinit>() -> <clinit>
    146:147:void <init>(java.lang.String) -> <init>
    150:151:void <init>(java.lang.String,com.alibaba.fastjson.parser.ParserConfig) -> <init>
    154:155:void <init>(java.lang.String,com.alibaba.fastjson.parser.ParserConfig,int) -> <init>
    158:159:void <init>(char[],int,com.alibaba.fastjson.parser.ParserConfig,int) -> <init>
    162:163:void <init>(com.alibaba.fastjson.parser.JSONLexer) -> <init>
    166:167:void <init>(com.alibaba.fastjson.parser.JSONLexer,com.alibaba.fastjson.parser.ParserConfig) -> <init>
    82:176:void <init>(java.lang.Object,com.alibaba.fastjson.parser.JSONLexer,com.alibaba.fastjson.parser.ParserConfig) -> <init>
    1278:1285:void accept(int) -> accept
    1288:1295:void accept(int,int) -> accept
    1160:1168:void addContext(com.alibaba.fastjson.parser.ParseContext) -> addContext
    1091:1095:void addResolveTask(com.alibaba.fastjson.parser.DefaultJSONParser$ResolveTask) -> addResolveTask
    937:952:void checkListResolve(java.util.Collection) -> checkListResolve
    956:963:void checkMapResolve(java.util.Map,java.lang.String) -> checkMapResolve
    1298:1309:void close() -> close
    1266:1267:void config(com.alibaba.fastjson.parser.Feature,boolean) -> config
    510:510:com.alibaba.fastjson.parser.ParserConfig getConfig() -> getConfig
    1087:1087:com.alibaba.fastjson.parser.ParseContext getContext() -> getContext
    126:126:java.lang.String getDateFomartPattern() -> getDateFomartPattern
    130:133:java.text.DateFormat getDateFormat() -> getDateFormat
    1102:1105:java.util.List getExtraProcessors() -> getExtraProcessors
    1109:1109:java.util.List getExtraProcessorsDirect() -> getExtraProcessorsDirect
    1113:1116:java.util.List getExtraTypeProviders() -> getExtraTypeProviders
    1120:1120:java.util.List getExtraTypeProvidersDirect() -> getExtraTypeProvidersDirect
    183:186:java.lang.String getInput() -> getInput
    1098:1098:com.alibaba.fastjson.parser.DefaultJSONParser$ResolveTask getLastResolveTask() -> getLastResolveTask
    1274:1274:com.alibaba.fastjson.parser.JSONLexer getLexer() -> getLexer
    926:932:java.lang.Object getObject(java.lang.String) -> getObject
    918:918:int getResolveStatus() -> getResolveStatus
    179:179:com.alibaba.fastjson.parser.SymbolTable getSymbolTable() -> getSymbolTable
    1312:1339:void handleResovleTask(java.lang.Object) -> handleResovleTask
    1270:1270:boolean isEnabled(com.alibaba.fastjson.parser.Feature) -> isEnabled
    1171:1171:java.lang.Object parse() -> parse
    1184:1261:java.lang.Object parse(java.lang.Object) -> parse
    557:559:java.util.List parseArray(java.lang.Class) -> parseArray
    563:564:void parseArray(java.lang.Class,java.util.Collection) -> parseArray
    568:569:void parseArray(java.lang.reflect.Type,java.util.Collection) -> parseArray
    573:648:void parseArray(java.lang.reflect.Type,java.util.Collection,java.lang.Object) -> parseArray
    651:761:java.lang.Object[] parseArray(java.lang.reflect.Type[]) -> parseArray
    978:979:void parseArray(java.util.Collection) -> parseArray
    983:1082:void parseArray(java.util.Collection,java.lang.Object) -> parseArray
    847:914:java.lang.Object parseArrayWithType(java.lang.reflect.Type) -> parseArrayWithType
    1175:1180:java.lang.Object parseKey() -> parseKey
    191:504:java.lang.Object parseObject(java.util.Map,java.lang.Object) -> parseObject
    520:520:java.lang.Object parseObject(java.lang.Class) -> parseObject
    525:552:java.lang.Object parseObject(java.lang.reflect.Type) -> parseObject
    765:844:void parseObject(java.lang.Object) -> parseObject
    967:967:java.lang.Object parseObject(java.util.Map) -> parseObject
    971:973:com.alibaba.fastjson.JSONObject parseObject() -> parseObject
    1131:1138:void popContext() -> popContext
    514:515:void setConfig(com.alibaba.fastjson.parser.ParserConfig) -> setConfig
    1124:1128:void setContext(com.alibaba.fastjson.parser.ParseContext) -> setContext
    1141:1145:com.alibaba.fastjson.parser.ParseContext setContext(java.lang.Object,java.lang.Object) -> setContext
    1149:1156:com.alibaba.fastjson.parser.ParseContext setContext(com.alibaba.fastjson.parser.ParseContext,java.lang.Object,java.lang.Object) -> setContext
    142:143:void setDateFomrat(java.text.DateFormat) -> setDateFomrat
    137:139:void setDateFormat(java.lang.String) -> setDateFormat
    922:923:void setResolveStatus(int) -> setResolveStatus
com.alibaba.fastjson.parser.DefaultJSONParser$ResolveTask -> com.alibaba.fastjson.parser.DefaultJSONParser$ResolveTask:
    1348:1351:void <init>(com.alibaba.fastjson.parser.ParseContext,java.lang.String) -> <init>
    1354:1354:com.alibaba.fastjson.parser.ParseContext getContext() -> getContext
    1362:1362:com.alibaba.fastjson.parser.deserializer.FieldDeserializer getFieldDeserializer() -> getFieldDeserializer
    1370:1370:com.alibaba.fastjson.parser.ParseContext getOwnerContext() -> getOwnerContext
    1358:1358:java.lang.String getReferenceValue() -> getReferenceValue
    1366:1367:void setFieldDeserializer(com.alibaba.fastjson.parser.deserializer.FieldDeserializer) -> setFieldDeserializer
    1374:1375:void setOwnerContext(com.alibaba.fastjson.parser.ParseContext) -> setOwnerContext
com.alibaba.fastjson.parser.Feature -> com.alibaba.fastjson.parser.Feature:
    22:87:void <clinit>() -> <clinit>
    90:92:void <init>(java.lang.String,int) -> <init>
    105:111:int config(int,com.alibaba.fastjson.parser.Feature,boolean) -> config
    97:97:int getMask() -> getMask
    101:101:boolean isEnabled(int,com.alibaba.fastjson.parser.Feature) -> isEnabled
    115:125:int of(com.alibaba.fastjson.parser.Feature[]) -> of
    22:22:com.alibaba.fastjson.parser.Feature valueOf(java.lang.String) -> valueOf
    22:22:com.alibaba.fastjson.parser.Feature[] values() -> values
com.alibaba.fastjson.parser.JSONLexerBase -> com.alibaba.fastjson.parser.JSONLexerBase:
    50:1844:void <clinit>() -> <clinit>
    65:103:void <init>() -> <init>
    986:990:void close() -> close
    505:506:void config(com.alibaba.fastjson.parser.Feature,boolean) -> config
    1788:1802:java.lang.Number decimalValue(boolean) -> decimalValue
    1807:1807:java.math.BigDecimal decimalValue() -> decimalValue
    501:501:double doubleValue() -> doubleValue
    497:497:float floatValue() -> floatValue
    393:393:int getBufferPosition() -> getBufferPosition
    925:925:java.util.Calendar getCalendar() -> getCalendar
    517:517:char getCurrent() -> getCurrent
    1847:1847:java.lang.Integer getKeyword(java.lang.String) -> getKeyword
    929:979:int intValue() -> intValue
    404:488:java.lang.Number integerValue() -> integerValue
    1466:1477:boolean isBlankInput() -> isBlankInput
    509:509:boolean isEnabled(com.alibaba.fastjson.parser.Feature) -> isEnabled
    993:997:boolean isRef() -> isRef
    1812:1812:boolean isWhitespace(char) -> isWhitespace
    60:61:void lexError(java.lang.String,java.lang.Object[]) -> lexError
    1738:1783:long longValue() -> longValue
    347:355:void nextIdent() -> nextIdent
    106:206:void nextToken() -> nextToken
    213:344:void nextToken(int) -> nextToken
    362:376:void nextTokenWithChar(char) -> nextTokenWithChar
    358:359:void nextTokenWithColon() -> nextTokenWithColon
    493:494:void nextTokenWithColon(int) -> nextTokenWithColon
    389:389:int pos() -> pos
    1645:1651:void putChar(char) -> putChar
    742:743:void resetStringPosition() -> resetStringPosition
    1079:1083:java.lang.Enum scanEnum(java.lang.Class,com.alibaba.fastjson.parser.SymbolTable,char) -> scanEnum
    1404:1435:void scanFalse() -> scanFalse
    1438:1457:void scanIdent() -> scanIdent
    1152:1188:int scanInt(char) -> scanInt
    1193:1229:long scanLong(char) -> scanLong
    1306:1348:void scanNullOrNew() -> scanNullOrNew
    1654:1735:void scanNumber() -> scanNumber
    1619:1639:void scanSet() -> scanSet
    794:922:void scanString() -> scanString
    1007:1073:java.lang.String scanString(char) -> scanString
    1492:1616:void scanStringSingleQuote() -> scanStringSingleQuote
    525:560:java.lang.String scanSymbol(com.alibaba.fastjson.parser.SymbolTable) -> scanSymbol
    568:738:java.lang.String scanSymbol(com.alibaba.fastjson.parser.SymbolTable,char) -> scanSymbol
    746:787:java.lang.String scanSymbolUnQuoted(com.alibaba.fastjson.parser.SymbolTable) -> scanSymbolUnQuoted
    1087:1147:java.lang.String scanSymbolWithSeperator(com.alibaba.fastjson.parser.SymbolTable,char) -> scanSymbolWithSeperator
    1263:1303:void scanTreeSet() -> scanTreeSet
    1234:1260:void scanTrue() -> scanTrue
    1351:1401:void scanUndefined() -> scanUndefined
    1482:1489:void skipWhitespace() -> skipWhitespace
    397:400:java.lang.String stringDefaultValue() -> stringDefaultValue
    381:381:int token() -> token
    385:385:java.lang.String tokenName() -> tokenName
com.alibaba.fastjson.parser.JSONReaderScanner -> com.alibaba.fastjson.parser.JSONReaderScanner:
    36:38:void <clinit>() -> <clinit>
    45:46:void <init>(java.lang.String) -> <init>
    49:50:void <init>(java.lang.String,int) -> <init>
    53:54:void <init>(char[],int) -> <init>
    57:58:void <init>(java.io.Reader) -> <init>
    60:86:void <init>(java.io.Reader,int) -> <init>
    89:90:void <init>(char[],int,int) -> <init>
    143:143:java.lang.String addSymbol(int,int,int,com.alibaba.fastjson.parser.SymbolTable) -> addSymbol
    203:204:void arrayCopy(int,char[],int,int) -> arrayCopy
    199:199:byte[] bytesValue() -> bytesValue
    93:126:char charAt(int) -> charAt
    250:256:void close() -> close
    195:196:void copyTo(int,int,char[]) -> copyTo
    130:137:int indexOf(char,int) -> indexOf
    260:260:boolean isEOF() -> isEOF
    147:191:char next() -> next
    234:246:java.lang.String numberString() -> numberString
    210:221:java.lang.String stringVal() -> stringVal
    226:229:java.lang.String subString(int,int) -> subString
com.alibaba.fastjson.parser.JSONScanner -> com.alibaba.fastjson.parser.JSONScanner:
    74:74:void <clinit>() -> <clinit>
    35:36:void <init>(java.lang.String) -> <init>
    38:126:void <init>(java.lang.String,int) -> <init>
    63:64:void <init>(char[],int) -> <init>
    67:68:void <init>(char[],int,int) -> <init>
    81:81:java.lang.String addSymbol(int,int,int,com.alibaba.fastjson.parser.SymbolTable) -> addSymbol
    517:518:void arrayCopy(int,char[],int,int) -> arrayCopy
    85:85:byte[] bytesValue() -> bytesValue
    51:55:char charAt(int) -> charAt
    467:508:boolean checkDate(char,char,char,char,char,char,int,int) -> checkDate
    412:452:boolean checkTime(char,char,char,char,char,char) -> checkTime
    71:72:void copyTo(int,int,char[]) -> copyTo
    77:77:int indexOf(char,int) -> indexOf
    513:513:boolean isEOF() -> isEOF
    59:59:char next() -> next
    113:121:java.lang.String numberString() -> numberString
    129:129:boolean scanISO8601DateIfMatch() -> scanISO8601DateIfMatch
    133:408:boolean scanISO8601DateIfMatch(boolean) -> scanISO8601DateIfMatch
    456:464:void setCalendar(char,char,char,char,char,char,char,char) -> setCalendar
    96:100:java.lang.String stringVal() -> stringVal
    105:109:java.lang.String subString(int,int) -> subString
com.alibaba.fastjson.parser.JSONToken -> com.alibaba.fastjson.parser.JSONToken:
    21:21:void <init>() -> <init>
    70:118:java.lang.String name(int) -> name
com.alibaba.fastjson.parser.ParseContext -> com.alibaba.fastjson.parser.ParseContext:
    13:17:void <init>(com.alibaba.fastjson.parser.ParseContext,java.lang.Object,java.lang.Object) -> <init>
    28:28:java.lang.Object getObject() -> getObject
    36:36:com.alibaba.fastjson.parser.ParseContext getParentContext() -> getParentContext
    40:46:java.lang.String getPath() -> getPath
    20:20:java.lang.reflect.Type getType() -> getType
    32:33:void setObject(java.lang.Object) -> setObject
    24:25:void setType(java.lang.reflect.Type) -> setType
    53:53:java.lang.String toString() -> toString
com.alibaba.fastjson.parser.ParserConfig -> com.alibaba.fastjson.parser.ParserConfig:
    116:116:void <clinit>() -> <clinit>
    114:220:void <init>() -> <init>
    317:339:com.alibaba.fastjson.parser.deserializer.FieldDeserializer createFieldDeserializer(com.alibaba.fastjson.parser.ParserConfig,java.lang.Class,com.alibaba.fastjson.util.FieldInfo) -> createFieldDeserializer
    313:313:com.alibaba.fastjson.parser.deserializer.ObjectDeserializer createJavaBeanDeserializer(java.lang.Class,java.lang.reflect.Type) -> createJavaBeanDeserializer
    227:227:com.alibaba.fastjson.util.IdentityHashMap getDerializers() -> getDerializers
    231:249:com.alibaba.fastjson.parser.deserializer.ObjectDeserializer getDeserializer(java.lang.reflect.Type) -> getDeserializer
    253:309:com.alibaba.fastjson.parser.deserializer.ObjectDeserializer getDeserializer(java.lang.Class,java.lang.reflect.Type) -> getDeserializer
    347:347:com.alibaba.fastjson.parser.deserializer.ObjectDeserializer getDeserializer(com.alibaba.fastjson.util.FieldInfo) -> getDeserializer
    355:362:java.lang.reflect.Field getField(java.lang.Class,java.lang.String) -> getField
    366:375:java.lang.reflect.Field getField0(java.lang.Class,java.lang.String) -> getField0
    379:384:java.util.Map getFieldDeserializers(java.lang.Class) -> getFieldDeserializers
    111:111:com.alibaba.fastjson.parser.ParserConfig getGlobalInstance() -> getGlobalInstance
    223:223:com.alibaba.fastjson.parser.SymbolTable getSymbolTable() -> getSymbolTable
    351:351:boolean isPrimitive(java.lang.Class) -> isPrimitive
    343:344:void putDeserializer(java.lang.reflect.Type,com.alibaba.fastjson.parser.deserializer.ObjectDeserializer) -> putDeserializer
com.alibaba.fastjson.parser.SymbolTable -> com.alibaba.fastjson.parser.SymbolTable:
    38:41:void <init>() -> <init>
    35:48:void <init>(int) -> <init>
    23:23:java.lang.String access$000(java.lang.String,int,int) -> access$000
    52:53:java.lang.String addSymbol(char[],int,int) -> addSymbol
    67:128:java.lang.String addSymbol(char[],int,int,int) -> addSymbol
    133:196:java.lang.String addSymbol(java.lang.String,int,int,int) -> addSymbol
    212:218:int hash(char[],int,int) -> hash
    208:208:int size() -> size
    200:204:java.lang.String subString(java.lang.String,int,int) -> subString
com.alibaba.fastjson.parser.SymbolTable$Entry -> com.alibaba.fastjson.parser.SymbolTable$Entry:
    234:241:void <init>(char[],int,int,int,com.alibaba.fastjson.parser.SymbolTable$Entry) -> <init>
    243:250:void <init>(java.lang.String,int,int,int,com.alibaba.fastjson.parser.SymbolTable$Entry) -> <init>
com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer -> com.alibaba.fastjson.parser.deserializer.AbstractDateDeserializer:
    14:14:void <init>() -> <init>
    18:98:java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
com.alibaba.fastjson.parser.deserializer.ArrayDeserializer -> com.alibaba.fastjson.parser.deserializer.ArrayDeserializer:
    17:17:void <clinit>() -> <clinit>
    15:15:void <init>() -> <init>
    21:71:java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    132:132:int getFastMatchToken() -> getFastMatchToken
    76:128:java.lang.Object toObjectArray(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Class,com.alibaba.fastjson.JSONArray) -> toObjectArray
com.alibaba.fastjson.parser.deserializer.ArrayListTypeFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.ArrayListTypeFieldDeserializer:
    26:34:void <init>(com.alibaba.fastjson.parser.ParserConfig,java.lang.Class,com.alibaba.fastjson.util.FieldInfo) -> <init>
    37:37:int getFastMatchToken() -> getFastMatchToken
    65:138:void parseArray(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.util.Collection) -> parseArray
    43:61:void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
com.alibaba.fastjson.parser.deserializer.BooleanFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.BooleanFieldDeserializer:
    16:17:void <init>(com.alibaba.fastjson.parser.ParserConfig,java.lang.Class,com.alibaba.fastjson.util.FieldInfo) -> <init>
    88:88:int getFastMatchToken() -> getFastMatchToken
    23:85:void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
com.alibaba.fastjson.parser.deserializer.CharArrayDeserializer -> com.alibaba.fastjson.parser.deserializer.CharArrayDeserializer:
    12:12:void <clinit>() -> <clinit>
    10:10:void <init>() -> <init>
    16:16:java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    21:40:java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser) -> deserialze
    44:44:int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.ClassDerializer -> com.alibaba.fastjson.parser.deserializer.ClassDerializer:
    13:13:void <clinit>() -> <clinit>
    15:16:void <init>() -> <init>
    20:33:java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    37:37:int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.CollectionDeserializer -> com.alibaba.fastjson.parser.deserializer.CollectionDeserializer:
    19:19:void <clinit>() -> <clinit>
    17:17:void <init>() -> <init>
    23:65:java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    80:80:int getFastMatchToken() -> getFastMatchToken
    70:75:java.lang.Class getRawClass(java.lang.reflect.Type) -> getRawClass
com.alibaba.fastjson.parser.deserializer.CollectionResolveFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.CollectionResolveFieldDeserializer:
    15:17:void <init>(com.alibaba.fastjson.parser.DefaultJSONParser,java.util.Collection) -> <init>
    26:26:void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
    21:22:void setValue(java.lang.Object,java.lang.Object) -> setValue
com.alibaba.fastjson.parser.deserializer.DateDeserializer -> com.alibaba.fastjson.parser.deserializer.DateDeserializer:
    15:15:void <clinit>() -> <clinit>
    13:13:void <init>() -> <init>
    20:60:java.lang.Object cast(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.lang.Object) -> cast
    64:64:int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.DateFormatDeserializer -> com.alibaba.fastjson.parser.deserializer.DateFormatDeserializer:
    12:12:void <clinit>() -> <clinit>
    10:10:void <init>() -> <init>
    17:30:java.lang.Object cast(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.lang.Object) -> cast
    34:34:int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.DefaultFieldDeserializer:
    19:20:void <init>(com.alibaba.fastjson.parser.ParserConfig,java.lang.Class,com.alibaba.fastjson.util.FieldInfo) -> <init>
    49:53:int getFastMatchToken() -> getFastMatchToken
    24:46:void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
com.alibaba.fastjson.parser.deserializer.EnumDeserializer -> com.alibaba.fastjson.parser.deserializer.EnumDeserializer:
    18:35:void <init>(java.lang.Class) -> <init>
    41:75:java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    80:80:int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.FieldDeserializer -> com.alibaba.fastjson.parser.deserializer.FieldDeserializer:
    19:22:void <init>(java.lang.Class,com.alibaba.fastjson.util.FieldInfo) -> <init>
    44:44:int getFastMatchToken() -> getFastMatchToken
    29:29:java.lang.reflect.Field getField() -> getField
    33:33:java.lang.Class getFieldClass() -> getFieldClass
    37:37:java.lang.reflect.Type getFieldType() -> getFieldType
    25:25:java.lang.reflect.Method getMethod() -> getMethod
    48:49:void setValue(java.lang.Object,boolean) -> setValue
    52:53:void setValue(java.lang.Object,int) -> setValue
    56:57:void setValue(java.lang.Object,long) -> setValue
    60:61:void setValue(java.lang.Object,java.lang.String) -> setValue
    65:100:void setValue(java.lang.Object,java.lang.Object) -> setValue
com.alibaba.fastjson.parser.deserializer.IntegerFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.IntegerFieldDeserializer:
    16:17:void <init>(com.alibaba.fastjson.parser.ParserConfig,java.lang.Class,com.alibaba.fastjson.util.FieldInfo) -> <init>
    55:55:int getFastMatchToken() -> getFastMatchToken
    23:52:void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
com.alibaba.fastjson.parser.deserializer.JSONArrayDeserializer -> com.alibaba.fastjson.parser.deserializer.JSONArrayDeserializer:
    10:10:void <clinit>() -> <clinit>
    9:9:void <init>() -> <init>
    14:16:java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    20:20:int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.JSONObjectDeserializer -> com.alibaba.fastjson.parser.deserializer.JSONObjectDeserializer:
    9:9:void <clinit>() -> <clinit>
    8:8:void <init>() -> <init>
    13:13:java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    17:17:int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer -> com.alibaba.fastjson.parser.deserializer.JavaBeanDeserializer:
    38:39:void <init>(com.alibaba.fastjson.parser.ParserConfig,java.lang.Class) -> <init>
    29:54:void <init>(com.alibaba.fastjson.parser.ParserConfig,java.lang.Class,java.lang.reflect.Type) -> <init>
    61:66:void addFieldDeserializer(com.alibaba.fastjson.parser.ParserConfig,java.lang.Class,com.alibaba.fastjson.util.FieldInfo) -> addFieldDeserializer
    69:69:com.alibaba.fastjson.parser.deserializer.FieldDeserializer createFieldDeserializer(com.alibaba.fastjson.parser.ParserConfig,java.lang.Class,com.alibaba.fastjson.util.FieldInfo) -> createFieldDeserializer
    73:111:java.lang.Object createInstance(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type) -> createInstance
    115:115:java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    168:373:java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.lang.Object) -> deserialze
    120:163:java.lang.Object deserialzeArrayMapping(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.lang.Object) -> deserialzeArrayMapping
    424:424:int getFastMatchToken() -> getFastMatchToken
    57:57:java.util.Map getFieldDeserializerMap() -> getFieldDeserializerMap
    428:428:boolean isSupportArrayToBean(com.alibaba.fastjson.parser.JSONLexer) -> isSupportArrayToBean
    406:421:void parseExtra(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.String) -> parseExtra
    379:402:boolean parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.String,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer -> com.alibaba.fastjson.parser.deserializer.JavaObjectDeserializer:
    16:16:void <clinit>() -> <clinit>
    14:14:void <init>() -> <init>
    20:55:java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    59:59:int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.ListResolveFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.ListResolveFieldDeserializer:
    20:24:void <init>(com.alibaba.fastjson.parser.DefaultJSONParser,java.util.List,int) -> <init>
    52:52:void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
    28:48:void setValue(java.lang.Object,java.lang.Object) -> setValue
com.alibaba.fastjson.parser.deserializer.LongFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.LongFieldDeserializer:
    18:21:void <init>(com.alibaba.fastjson.parser.ParserConfig,java.lang.Class,com.alibaba.fastjson.util.FieldInfo) -> <init>
    60:60:int getFastMatchToken() -> getFastMatchToken
    27:57:void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
com.alibaba.fastjson.parser.deserializer.MapDeserializer -> com.alibaba.fastjson.parser.deserializer.MapDeserializer:
    28:28:void <clinit>() -> <clinit>
    26:26:void <init>() -> <init>
    281:323:java.util.Map createMap(java.lang.reflect.Type) -> createMap
    32:46:java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    52:63:java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.util.Map) -> deserialze
    328:328:int getFastMatchToken() -> getFastMatchToken
    69:183:java.util.Map parseMap(com.alibaba.fastjson.parser.DefaultJSONParser,java.util.Map,java.lang.reflect.Type,java.lang.Object) -> parseMap
    190:276:java.lang.Object parseMap(com.alibaba.fastjson.parser.DefaultJSONParser,java.util.Map,java.lang.reflect.Type,java.lang.reflect.Type,java.lang.Object) -> parseMap
com.alibaba.fastjson.parser.deserializer.MapResolveFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.MapResolveFieldDeserializer:
    15:18:void <init>(java.util.Map,java.lang.String) -> <init>
    29:29:void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
    22:23:void setValue(java.lang.Object,java.lang.Object) -> setValue
com.alibaba.fastjson.parser.deserializer.NumberDeserializer -> com.alibaba.fastjson.parser.deserializer.NumberDeserializer:
    13:13:void <clinit>() -> <clinit>
    11:11:void <init>() -> <init>
    17:81:java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    85:85:int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer -> com.alibaba.fastjson.parser.deserializer.SqlDateDeserializer:
    15:15:void <clinit>() -> <clinit>
    13:13:void <init>() -> <init>
    19:60:java.lang.Object cast(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.lang.Object) -> cast
    64:64:int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.StackTraceElementDeserializer -> com.alibaba.fastjson.parser.deserializer.StackTraceElementDeserializer:
    14:14:void <clinit>() -> <clinit>
    12:12:void <init>() -> <init>
    18:112:java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    116:116:int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.StringFieldDeserializer -> com.alibaba.fastjson.parser.deserializer.StringFieldDeserializer:
    17:20:void <init>(com.alibaba.fastjson.parser.ParserConfig,java.lang.Class,com.alibaba.fastjson.util.FieldInfo) -> <init>
    49:49:int getFastMatchToken() -> getFastMatchToken
    26:46:void parseField(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.reflect.Type,java.util.Map) -> parseField
com.alibaba.fastjson.parser.deserializer.ThrowableDeserializer -> com.alibaba.fastjson.parser.deserializer.ThrowableDeserializer:
    20:21:void <init>(com.alibaba.fastjson.parser.ParserConfig,java.lang.Class) -> <init>
    126:159:java.lang.Throwable createException(java.lang.String,java.lang.Throwable,java.lang.Class) -> createException
    25:122:java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    163:163:int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.TimeDeserializer -> com.alibaba.fastjson.parser.deserializer.TimeDeserializer:
    13:13:void <clinit>() -> <clinit>
    11:11:void <init>() -> <init>
    17:69:java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    73:73:int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.parser.deserializer.TimestampDeserializer -> com.alibaba.fastjson.parser.deserializer.TimestampDeserializer:
    15:15:void <clinit>() -> <clinit>
    13:13:void <init>() -> <init>
    20:50:java.lang.Object cast(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object,java.lang.Object) -> cast
    54:54:int getFastMatchToken() -> getFastMatchToken
com.alibaba.fastjson.serializer.AfterFilter -> com.alibaba.fastjson.serializer.AfterFilter:
    8:11:void <clinit>() -> <clinit>
    6:6:void <init>() -> <init>
    14:18:char writeAfter(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,char) -> writeAfter
    22:28:void writeKeyValue(java.lang.String,java.lang.Object) -> writeKeyValue
com.alibaba.fastjson.serializer.ArraySerializer -> com.alibaba.fastjson.serializer.ArraySerializer:
    29:32:void <init>(java.lang.Class,com.alibaba.fastjson.serializer.ObjectSerializer) -> <init>
    36:74:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.BeforeFilter -> com.alibaba.fastjson.serializer.BeforeFilter:
    5:8:void <clinit>() -> <clinit>
    3:3:void <init>() -> <init>
    11:15:char writeBefore(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,char) -> writeBefore
    19:25:void writeKeyValue(java.lang.String,java.lang.Object) -> writeKeyValue
com.alibaba.fastjson.serializer.BigDecimalCodec -> com.alibaba.fastjson.serializer.BigDecimalCodec:
    33:33:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
    57:57:java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    62:81:java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser) -> deserialze
    85:85:int getFastMatchToken() -> getFastMatchToken
    36:53:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.BigIntegerCodec -> com.alibaba.fastjson.serializer.BigIntegerCodec:
    33:33:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
    53:53:java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    58:71:java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser) -> deserialze
    75:75:int getFastMatchToken() -> getFastMatchToken
    36:49:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.BooleanArraySerializer -> com.alibaba.fastjson.serializer.BooleanArraySerializer:
    26:26:void <clinit>() -> <clinit>
    24:24:void <init>() -> <init>
    29:49:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.BooleanCodec -> com.alibaba.fastjson.serializer.BooleanCodec:
    32:32:void <clinit>() -> <clinit>
    30:30:void <init>() -> <init>
    56:84:java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    88:88:int getFastMatchToken() -> getFastMatchToken
    35:52:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.ByteArraySerializer -> com.alibaba.fastjson.serializer.ByteArraySerializer:
    26:26:void <clinit>() -> <clinit>
    24:24:void <init>() -> <init>
    29:42:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.CalendarCodec -> com.alibaba.fastjson.serializer.CalendarCodec:
    15:15:void <clinit>() -> <clinit>
    13:13:void <init>() -> <init>
    25:39:java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    43:43:int getFastMatchToken() -> getFastMatchToken
    18:21:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.CharArraySerializer -> com.alibaba.fastjson.serializer.CharArraySerializer:
    9:9:void <clinit>() -> <clinit>
    7:7:void <init>() -> <init>
    12:25:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.CharacterCodec -> com.alibaba.fastjson.serializer.CharacterCodec:
    31:31:void <clinit>() -> <clinit>
    29:29:void <init>() -> <init>
    52:58:java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    62:62:int getFastMatchToken() -> getFastMatchToken
    34:48:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.CharsetCodec -> com.alibaba.fastjson.serializer.CharsetCodec:
    14:14:void <clinit>() -> <clinit>
    12:12:void <init>() -> <init>
    28:36:java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    40:40:int getFastMatchToken() -> getFastMatchToken
    17:24:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.ClassSerializer -> com.alibaba.fastjson.serializer.ClassSerializer:
    26:26:void <clinit>() -> <clinit>
    24:24:void <init>() -> <init>
    30:34:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.CollectionSerializer -> com.alibaba.fastjson.serializer.CollectionSerializer:
    30:30:void <clinit>() -> <clinit>
    28:28:void <init>() -> <init>
    33:102:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.CurrencyCodec -> com.alibaba.fastjson.serializer.CurrencyCodec:
    13:13:void <clinit>() -> <clinit>
    11:11:void <init>() -> <init>
    27:33:java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    37:37:int getFastMatchToken() -> getFastMatchToken
    16:23:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.DateFormatSerializer -> com.alibaba.fastjson.serializer.DateFormatSerializer:
    29:29:void <clinit>() -> <clinit>
    27:27:void <init>() -> <init>
    32:53:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.DateSerializer -> com.alibaba.fastjson.serializer.DateSerializer:
    33:33:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
    36:128:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.DoubleArraySerializer -> com.alibaba.fastjson.serializer.DoubleArraySerializer:
    26:26:void <clinit>() -> <clinit>
    28:29:void <init>() -> <init>
    32:75:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.DoubleSerializer -> com.alibaba.fastjson.serializer.DoubleSerializer:
    27:27:void <clinit>() -> <clinit>
    29:33:void <init>() -> <init>
    29:37:void <init>(java.text.DecimalFormat) -> <init>
    40:41:void <init>(java.lang.String) -> <init>
    44:77:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.EnumSerializer -> com.alibaba.fastjson.serializer.EnumSerializer:
    26:26:void <clinit>() -> <clinit>
    24:24:void <init>() -> <init>
    29:42:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.EnumerationSeriliazer -> com.alibaba.fastjson.serializer.EnumerationSeriliazer:
    10:10:void <clinit>() -> <clinit>
    9:9:void <init>() -> <init>
    13:60:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.ExceptionSerializer -> com.alibaba.fastjson.serializer.ExceptionSerializer:
    8:9:void <init>(java.lang.Class) -> <init>
    12:12:boolean isWriteClassName(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.reflect.Type,java.lang.Object) -> isWriteClassName
com.alibaba.fastjson.serializer.FieldSerializer -> com.alibaba.fastjson.serializer.FieldSerializer:
    35:56:void <init>(com.alibaba.fastjson.util.FieldInfo) -> <init>
    63:63:java.lang.reflect.Field getField() -> getField
    71:71:java.lang.reflect.Method getMethod() -> getMethod
    67:67:java.lang.String getName() -> getName
    90:92:java.lang.Object getPropertyValue(java.lang.Object) -> getPropertyValue
    59:59:boolean isWriteNull() -> isWriteNull
    75:86:void writePrefix(com.alibaba.fastjson.serializer.JSONSerializer) -> writePrefix
com.alibaba.fastjson.serializer.FilterUtils -> com.alibaba.fastjson.serializer.FilterUtils:
    10:10:void <init>() -> <init>
    94:106:boolean apply(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,java.lang.Object) -> apply
    78:90:boolean applyName(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String) -> applyName
    13:22:java.lang.reflect.Type getExtratype(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.String) -> getExtratype
    26:33:void processExtra(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.Object,java.lang.String,java.lang.Object) -> processExtra
    67:74:java.lang.String processKey(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,java.lang.Object) -> processKey
    56:63:java.lang.Object processValue(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String,java.lang.Object) -> processValue
    46:52:char writeAfter(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,char) -> writeAfter
    36:42:char writeBefore(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,char) -> writeBefore
com.alibaba.fastjson.serializer.FloatArraySerializer -> com.alibaba.fastjson.serializer.FloatArraySerializer:
    26:26:void <clinit>() -> <clinit>
    28:29:void <init>() -> <init>
    32:75:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.FloatCodec -> com.alibaba.fastjson.serializer.FloatCodec:
    32:32:void <clinit>() -> <clinit>
    30:30:void <init>() -> <init>
    67:67:java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    72:91:java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser) -> deserialze
    95:95:int getFastMatchToken() -> getFastMatchToken
    35:63:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.InetAddressCodec -> com.alibaba.fastjson.serializer.InetAddressCodec:
    15:15:void <clinit>() -> <clinit>
    13:13:void <init>() -> <init>
    31:44:java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    49:49:int getFastMatchToken() -> getFastMatchToken
    18:26:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.InetSocketAddressCodec -> com.alibaba.fastjson.serializer.InetSocketAddressCodec:
    16:16:void <clinit>() -> <clinit>
    14:14:void <init>() -> <init>
    42:83:java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    87:87:int getFastMatchToken() -> getFastMatchToken
    19:38:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.IntArraySerializer -> com.alibaba.fastjson.serializer.IntArraySerializer:
    26:26:void <clinit>() -> <clinit>
    24:24:void <init>() -> <init>
    29:50:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.IntegerCodec -> com.alibaba.fastjson.serializer.IntegerCodec:
    33:33:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
    63:85:java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    89:89:int getFastMatchToken() -> getFastMatchToken
    36:59:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.JSONAwareSerializer -> com.alibaba.fastjson.serializer.JSONAwareSerializer:
    28:28:void <clinit>() -> <clinit>
    26:26:void <init>() -> <init>
    31:35:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.JSONLibDataFormatSerializer -> com.alibaba.fastjson.serializer.JSONLibDataFormatSerializer:
    11:12:void <init>() -> <init>
    16:35:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.JSONSerializableSerializer -> com.alibaba.fastjson.serializer.JSONSerializableSerializer:
    26:26:void <clinit>() -> <clinit>
    24:24:void <init>() -> <init>
    29:31:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.JSONSerializer -> com.alibaba.fastjson.serializer.JSONSerializer:
    65:66:void <init>() -> <init>
    69:70:void <init>(com.alibaba.fastjson.serializer.SerializeWriter) -> <init>
    73:74:void <init>(com.alibaba.fastjson.serializer.SerializeConfig) -> <init>
    48:79:void <init>(com.alibaba.fastjson.serializer.SerializeWriter,com.alibaba.fastjson.serializer.SerializeConfig) -> <init>
    472:473:void close() -> close
    308:309:void config(com.alibaba.fastjson.serializer.SerializerFeature,boolean) -> config
    160:164:boolean containsReference(java.lang.Object) -> containsReference
    229:230:void decrementIdent() -> decrementIdent
    252:256:java.util.List getAfterFilters() -> getAfterFilters
    260:260:java.util.List getAfterFiltersDirect() -> getAfterFiltersDirect
    240:244:java.util.List getBeforeFilters() -> getBeforeFilters
    248:248:java.util.List getBeforeFiltersDirect() -> getBeforeFiltersDirect
    113:113:com.alibaba.fastjson.serializer.SerialContext getContext() -> getContext
    89:95:java.text.DateFormat getDateFormat() -> getDateFormat
    82:85:java.lang.String getDateFormatPattern() -> getDateFormatPattern
    221:221:int getIndentCount() -> getIndentCount
    320:320:com.alibaba.fastjson.serializer.SerializeConfig getMapping() -> getMapping
    264:268:java.util.List getNameFilters() -> getNameFilters
    272:272:java.util.List getNameFiltersDirect() -> getNameFiltersDirect
    404:468:com.alibaba.fastjson.serializer.ObjectSerializer getObjectWriter(java.lang.Class) -> getObjectWriter
    288:292:java.util.List getPropertyFilters() -> getPropertyFilters
    296:296:java.util.List getPropertyFiltersDirect() -> getPropertyFiltersDirect
    276:280:java.util.List getPropertyPreFilters() -> getPropertyPreFilters
    284:284:java.util.List getPropertyPreFiltersDirect() -> getPropertyPreFiltersDirect
    152:156:com.alibaba.fastjson.serializer.SerialContext getSerialContext(java.lang.Object) -> getSerialContext
    209:213:java.util.List getValueFilters() -> getValueFilters
    217:217:java.util.List getValueFiltersDirect() -> getValueFiltersDirect
    300:300:com.alibaba.fastjson.serializer.SerializeWriter getWriter() -> getWriter
    225:226:void incrementIndent() -> incrementIndent
    312:312:boolean isEnabled(com.alibaba.fastjson.serializer.SerializerFeature) -> isEnabled
    133:148:boolean isWriteClassName(java.lang.reflect.Type,java.lang.Object) -> isWriteClassName
    233:237:void println() -> println
    117:118:void setContext(com.alibaba.fastjson.serializer.SerialContext) -> setContext
    121:130:void setContext(com.alibaba.fastjson.serializer.SerialContext,java.lang.Object,java.lang.Object,int) -> setContext
    99:103:void setDateFormat(java.text.DateFormat) -> setDateFormat
    106:110:void setDateFormat(java.lang.String) -> setDateFormat
    304:304:java.lang.String toString() -> toString
    324:334:void write(java.io.Writer,java.lang.Object) -> write
    337:339:void write(com.alibaba.fastjson.serializer.SerializeWriter,java.lang.Object) -> write
    342:355:void write(java.lang.Object) -> write
    400:401:void write(java.lang.String) -> write
    362:367:void writeKeyValue(char,java.lang.String,java.lang.Object) -> writeKeyValue
    316:317:void writeNull() -> writeNull
    168:205:void writeReference(java.lang.Object) -> writeReference
    358:359:void writeWithFieldName(java.lang.Object,java.lang.Object) -> writeWithFieldName
    371:384:void writeWithFieldName(java.lang.Object,java.lang.Object,java.lang.reflect.Type,int) -> writeWithFieldName
    387:397:void writeWithFormat(java.lang.Object,java.lang.String) -> writeWithFormat
com.alibaba.fastjson.serializer.JSONSerializerContext -> com.alibaba.fastjson.serializer.JSONSerializerContext:
    31:32:void <init>() -> <init>
    34:37:void <init>(int) -> <init>
    40:52:boolean put(java.lang.Object) -> put
com.alibaba.fastjson.serializer.JSONSerializerContext$Entry -> com.alibaba.fastjson.serializer.JSONSerializerContext$Entry:
    62:66:void <init>(java.lang.Object,int,com.alibaba.fastjson.serializer.JSONSerializerContext$Entry) -> <init>
com.alibaba.fastjson.serializer.JSONStreamAwareSerializer -> com.alibaba.fastjson.serializer.JSONStreamAwareSerializer:
    28:28:void <clinit>() -> <clinit>
    26:26:void <init>() -> <init>
    31:35:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.JavaBeanSerializer -> com.alibaba.fastjson.serializer.JavaBeanSerializer:
    48:49:void <init>(java.lang.Class) -> <init>
    52:53:void <init>(java.lang.Class,java.lang.String[]) -> <init>
    41:87:void <init>(java.lang.Class,java.util.Map) -> <init>
    56:61:java.util.Map createAliasMap(java.lang.String[]) -> createAliasMap
    257:263:com.alibaba.fastjson.serializer.FieldSerializer createFieldSerializer(com.alibaba.fastjson.util.FieldInfo) -> createFieldSerializer
    44:44:com.alibaba.fastjson.serializer.FieldSerializer[] getGetters() -> getGetters
    267:278:boolean isWriteAsArray(com.alibaba.fastjson.serializer.JSONSerializer) -> isWriteAsArray
    90:90:boolean isWriteClassName(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.reflect.Type,java.lang.Object) -> isWriteClassName
    94:238:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
    242:253:boolean writeReference(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object) -> writeReference
com.alibaba.fastjson.serializer.ListSerializer -> com.alibaba.fastjson.serializer.ListSerializer:
    28:28:void <clinit>() -> <clinit>
    26:26:void <init>() -> <init>
    33:137:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.LocaleCodec -> com.alibaba.fastjson.serializer.LocaleCodec:
    13:13:void <clinit>() -> <clinit>
    11:11:void <init>() -> <init>
    27:43:java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    47:47:int getFastMatchToken() -> getFastMatchToken
    16:23:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.LongArraySerializer -> com.alibaba.fastjson.serializer.LongArraySerializer:
    26:26:void <clinit>() -> <clinit>
    24:24:void <init>() -> <init>
    29:50:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.LongCodec -> com.alibaba.fastjson.serializer.LongCodec:
    32:32:void <clinit>() -> <clinit>
    30:30:void <init>() -> <init>
    60:78:java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    82:82:int getFastMatchToken() -> getFastMatchToken
    35:56:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.MapSerializer -> com.alibaba.fastjson.serializer.MapSerializer:
    33:33:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
    37:200:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.NumberFieldSerializer -> com.alibaba.fastjson.serializer.NumberFieldSerializer:
    26:27:void <init>(com.alibaba.fastjson.util.FieldInfo) -> <init>
    30:32:void writeProperty(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object) -> writeProperty
    36:50:void writeValue(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object) -> writeValue
com.alibaba.fastjson.serializer.ObjectArraySerializer -> com.alibaba.fastjson.serializer.ObjectArraySerializer:
    26:26:void <clinit>() -> <clinit>
    28:29:void <init>() -> <init>
    33:118:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.ObjectFieldSerializer -> com.alibaba.fastjson.serializer.ObjectFieldSerializer:
    29:63:void <init>(com.alibaba.fastjson.util.FieldInfo) -> <init>
    66:68:void writeProperty(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object) -> writeProperty
    72:124:void writeValue(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object) -> writeValue
com.alibaba.fastjson.serializer.ObjectFieldSerializer$RuntimeSerializerInfo -> com.alibaba.fastjson.serializer.ObjectFieldSerializer$RuntimeSerializerInfo:
    133:136:void <init>(com.alibaba.fastjson.serializer.ObjectSerializer,java.lang.Class) -> <init>
com.alibaba.fastjson.serializer.PascalNameFilter -> com.alibaba.fastjson.serializer.PascalNameFilter:
    3:3:void <init>() -> <init>
    6:14:java.lang.String process(java.lang.Object,java.lang.String,java.lang.Object) -> process
com.alibaba.fastjson.serializer.PatternCodec -> com.alibaba.fastjson.serializer.PatternCodec:
    31:31:void <clinit>() -> <clinit>
    29:29:void <init>() -> <init>
    45:53:java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    57:57:int getFastMatchToken() -> getFastMatchToken
    34:41:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.SerialContext -> com.alibaba.fastjson.serializer.SerialContext:
    13:18:void <init>(com.alibaba.fastjson.serializer.SerialContext,java.lang.Object,java.lang.Object,int) -> <init>
    29:29:java.lang.Object getFieldName() -> getFieldName
    25:25:java.lang.Object getObject() -> getObject
    21:21:com.alibaba.fastjson.serializer.SerialContext getParent() -> getParent
    33:39:java.lang.String getPath() -> getPath
    50:50:boolean isEnabled(com.alibaba.fastjson.serializer.SerializerFeature) -> isEnabled
    46:46:java.lang.String toString() -> toString
com.alibaba.fastjson.serializer.SerializeConfig -> com.alibaba.fastjson.serializer.SerializeConfig:
    45:45:void <clinit>() -> <clinit>
    66:67:void <init>() -> <init>
    47:108:void <init>(int) -> <init>
    58:58:com.alibaba.fastjson.serializer.ObjectSerializer createJavaBeanSerializer(java.lang.Class) -> createJavaBeanSerializer
    62:62:com.alibaba.fastjson.serializer.SerializeConfig getGlobalInstance() -> getGlobalInstance
    50:50:java.lang.String getTypeKey() -> getTypeKey
    54:55:void setTypeKey(java.lang.String) -> setTypeKey
com.alibaba.fastjson.serializer.SerializeWriter -> com.alibaba.fastjson.serializer.SerializeWriter:
    47:47:void <clinit>() -> <clinit>
    54:55:void <init>() -> <init>
    57:71:void <init>(java.io.Writer) -> <init>
    74:75:void <init>(com.alibaba.fastjson.serializer.SerializerFeature[]) -> <init>
    77:96:void <init>(java.io.Writer,com.alibaba.fastjson.serializer.SerializerFeature[]) -> <init>
    103:104:void <init>(int) -> <init>
    106:113:void <init>(java.io.Writer,int) -> <init>
    35:35:java.io.Writer append(char) -> append
    35:35:java.io.Writer append(java.lang.CharSequence) -> append
    35:35:java.io.Writer append(java.lang.CharSequence,int,int) -> append
    35:35:java.lang.Appendable append(char) -> append
    35:35:java.lang.Appendable append(java.lang.CharSequence) -> append
    35:35:java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    262:264:com.alibaba.fastjson.serializer.SerializeWriter append(java.lang.CharSequence) -> append
    268:270:com.alibaba.fastjson.serializer.SerializeWriter append(java.lang.CharSequence,int,int) -> append
    274:275:com.alibaba.fastjson.serializer.SerializeWriter append(char) -> append
    326:334:void close() -> close
    116:121:void config(com.alibaba.fastjson.serializer.SerializerFeature,boolean) -> config
    198:206:void expandCapacity(int) -> expandCapacity
    1458:1469:void flush() -> flush
    99:99:int getBufferLength() -> getBufferLength
    124:124:boolean isEnabled(com.alibaba.fastjson.serializer.SerializerFeature) -> isEnabled
    1120:1136:boolean isSpecial(char,int) -> isSpecial
    279:280:void reset() -> reset
    314:314:int size() -> size
    298:309:byte[] toBytes(java.lang.String) -> toBytes
    288:294:char[] toCharArray() -> toCharArray
    318:318:java.lang.String toString() -> toString
    131:142:void write(int) -> write
    145:156:void write(char) -> write
    166:195:void write(char[],int,int) -> write
    216:234:void write(java.lang.String,int,int) -> write
    337:343:void write(java.lang.String) -> write
    840:845:void write(boolean) -> write
    371:449:void writeByteArray(byte[]) -> writeByteArray
    1231:1232:void writeFieldName(java.lang.String) -> writeFieldName
    1235:1254:void writeFieldName(java.lang.String,boolean) -> writeFieldName
    848:884:void writeFieldValue(char,java.lang.String,long) -> writeFieldValue
    893:920:void writeFieldValue(char,java.lang.String,java.lang.String) -> writeFieldValue
    887:890:void writeFieldValue1(char,java.lang.String,long) -> writeFieldValue1
    923:1113:void writeFieldValueStringWithDoubleQuote(char,java.lang.String,java.lang.String,boolean) -> writeFieldValueStringWithDoubleQuote
    346:368:void writeInt(int) -> writeInt
    1257:1354:void writeKeyWithDoubleQuoteIfHasSpecial(java.lang.String) -> writeKeyWithDoubleQuoteIfHasSpecial
    1357:1455:void writeKeyWithSingleQuoteIfHasSpecial(java.lang.String) -> writeKeyWithSingleQuoteIfHasSpecial
    479:501:void writeLong(long) -> writeLong
    452:476:void writeLongAndChar(long,char) -> writeLongAndChar
    504:505:void writeNull() -> writeNull
    1140:1145:void writeString(java.lang.String) -> writeString
    508:509:void writeStringWithDoubleQuote(java.lang.String,char) -> writeStringWithDoubleQuote
    512:837:void writeStringWithDoubleQuote(java.lang.String,char,boolean) -> writeStringWithDoubleQuote
    1148:1228:void writeStringWithSingleQuote(java.lang.String) -> writeStringWithSingleQuote
    243:247:void writeTo(java.io.Writer) -> writeTo
    250:251:void writeTo(java.io.OutputStream,java.lang.String) -> writeTo
    254:259:void writeTo(java.io.OutputStream,java.nio.charset.Charset) -> writeTo
com.alibaba.fastjson.serializer.SerializerFeature -> com.alibaba.fastjson.serializer.SerializerFeature:
    21:120:void <clinit>() -> <clinit>
    123:125:void <init>(java.lang.String,int) -> <init>
    138:144:int config(int,com.alibaba.fastjson.serializer.SerializerFeature,boolean) -> config
    130:130:int getMask() -> getMask
    134:134:boolean isEnabled(int,com.alibaba.fastjson.serializer.SerializerFeature) -> isEnabled
    148:158:int of(com.alibaba.fastjson.serializer.SerializerFeature[]) -> of
    21:21:com.alibaba.fastjson.serializer.SerializerFeature valueOf(java.lang.String) -> valueOf
    21:21:com.alibaba.fastjson.serializer.SerializerFeature[] values() -> values
com.alibaba.fastjson.serializer.ShortArraySerializer -> com.alibaba.fastjson.serializer.ShortArraySerializer:
    26:26:void <clinit>() -> <clinit>
    24:24:void <init>() -> <init>
    29:49:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.SimpleDateFormatSerializer -> com.alibaba.fastjson.serializer.SimpleDateFormatSerializer:
    12:14:void <init>(java.lang.String) -> <init>
    17:27:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.SimplePropertyPreFilter -> com.alibaba.fastjson.serializer.SimplePropertyPreFilter:
    28:29:void <init>(java.lang.String[]) -> <init>
    24:39:void <init>(java.lang.Class,java.lang.String[]) -> <init>
    54:70:boolean apply(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.String) -> apply
    42:42:java.lang.Class getClazz() -> getClazz
    50:50:java.util.Set getExcludes() -> getExcludes
    46:46:java.util.Set getIncludes() -> getIncludes
com.alibaba.fastjson.serializer.StringCodec -> com.alibaba.fastjson.serializer.StringCodec:
    31:31:void <clinit>() -> <clinit>
    29:29:void <init>() -> <init>
    54:54:java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    59:78:java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser) -> deserialze
    82:82:int getFastMatchToken() -> getFastMatchToken
    34:35:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
    38:50:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.String) -> write
com.alibaba.fastjson.serializer.TimeZoneCodec -> com.alibaba.fastjson.serializer.TimeZoneCodec:
    13:13:void <clinit>() -> <clinit>
    11:11:void <init>() -> <init>
    28:34:java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    38:38:int getFastMatchToken() -> getFastMatchToken
    16:23:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.URICodec -> com.alibaba.fastjson.serializer.URICodec:
    31:31:void <clinit>() -> <clinit>
    29:29:void <init>() -> <init>
    46:52:java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    56:56:int getFastMatchToken() -> getFastMatchToken
    34:41:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.URLCodec -> com.alibaba.fastjson.serializer.URLCodec:
    33:33:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
    47:56:java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    61:61:int getFastMatchToken() -> getFastMatchToken
    36:42:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.serializer.UUIDCodec -> com.alibaba.fastjson.serializer.UUIDCodec:
    28:28:void <clinit>() -> <clinit>
    26:26:void <init>() -> <init>
    43:49:java.lang.Object deserialze(com.alibaba.fastjson.parser.DefaultJSONParser,java.lang.reflect.Type,java.lang.Object) -> deserialze
    53:53:int getFastMatchToken() -> getFastMatchToken
    31:38:void write(com.alibaba.fastjson.serializer.JSONSerializer,java.lang.Object,java.lang.Object,java.lang.reflect.Type) -> write
com.alibaba.fastjson.util.Base64 -> com.alibaba.fastjson.util.Base64:
    13:20:void <clinit>() -> <clinit>
    11:11:void <init>() -> <init>
    35:85:byte[] decodeFast(char[],int,int) -> decodeFast
    90:140:byte[] decodeFast(java.lang.String,int,int) -> decodeFast
    156:208:byte[] decodeFast(java.lang.String) -> decodeFast
com.alibaba.fastjson.util.DeserializeBeanInfo -> com.alibaba.fastjson.util.DeserializeBeanInfo:
    26:34:void <init>(java.lang.Class) -> <init>
    69:82:boolean add(com.alibaba.fastjson.util.FieldInfo) -> add
    86:317:com.alibaba.fastjson.util.DeserializeBeanInfo computeSetters(java.lang.Class,java.lang.reflect.Type) -> computeSetters
    45:45:java.lang.reflect.Constructor getCreatorConstructor() -> getCreatorConstructor
    349:362:java.lang.reflect.Constructor getCreatorConstructor(java.lang.Class) -> getCreatorConstructor
    37:37:java.lang.reflect.Constructor getDefaultConstructor() -> getDefaultConstructor
    321:345:java.lang.reflect.Constructor getDefaultConstructor(java.lang.Class) -> getDefaultConstructor
    53:53:java.lang.reflect.Method getFactoryMethod() -> getFactoryMethod
    366:387:java.lang.reflect.Method getFactoryMethod(java.lang.Class) -> getFactoryMethod
    61:61:java.util.List getFieldList() -> getFieldList
    392:392:int getParserFeatures() -> getParserFeatures
    65:65:java.util.List getSortedFieldList() -> getSortedFieldList
    49:50:void setCreatorConstructor(java.lang.reflect.Constructor) -> setCreatorConstructor
    41:42:void setDefaultConstructor(java.lang.reflect.Constructor) -> setDefaultConstructor
    57:58:void setFactoryMethod(java.lang.reflect.Method) -> setFactoryMethod
com.alibaba.fastjson.util.FieldInfo -> com.alibaba.fastjson.util.FieldInfo:
    21:40:void <init>(java.lang.String,java.lang.Class,java.lang.Class,java.lang.reflect.Type,java.lang.reflect.Field,int,int) -> <init>
    43:44:void <init>(java.lang.String,java.lang.reflect.Method,java.lang.reflect.Field) -> <init>
    47:48:void <init>(java.lang.String,java.lang.reflect.Method,java.lang.reflect.Field,int,int) -> <init>
    51:52:void <init>(java.lang.String,java.lang.reflect.Method,java.lang.reflect.Field,java.lang.Class,java.lang.reflect.Type) -> <init>
    21:109:void <init>(java.lang.String,java.lang.reflect.Method,java.lang.reflect.Field,java.lang.Class,java.lang.reflect.Type,int,int) -> <init>
    15:15:int compareTo(java.lang.Object) -> compareTo
    242:250:int compareTo(com.alibaba.fastjson.util.FieldInfo) -> compareTo
    221:222:java.lang.String gerQualifiedName() -> gerQualifiedName
    269:274:java.lang.Object get(java.lang.Object) -> get
    254:265:java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> getAnnotation
    205:205:java.lang.Class getDeclaringClass() -> getDeclaringClass
    238:238:java.lang.reflect.Field getField() -> getField
    209:209:java.lang.Class getFieldClass() -> getFieldClass
    112:173:java.lang.reflect.Type getFieldType(java.lang.Class,java.lang.reflect.Type,java.lang.reflect.Type) -> getFieldType
    213:213:java.lang.reflect.Type getFieldType() -> getFieldType
    177:197:java.lang.reflect.Type getInheritGenericType(java.lang.Class,java.lang.reflect.TypeVariable) -> getInheritGenericType
    226:229:java.lang.reflect.Member getMember() -> getMember
    234:234:java.lang.reflect.Method getMethod() -> getMethod
    217:217:java.lang.String getName() -> getName
    296:296:boolean isGetOnly() -> isGetOnly
    278:284:void set(java.lang.Object,java.lang.Object) -> set
    287:293:void setAccessible(boolean) -> setAccessible
    201:201:java.lang.String toString() -> toString
com.alibaba.fastjson.util.IOUtils -> com.alibaba.fastjson.util.IOUtils:
    25:218:void <clinit>() -> <clinit>
    23:23:void <init>() -> <init>
    134:141:void close(java.io.Closeable) -> close
    156:198:void getChars(long,int,char[]) -> getChars
    145:150:int stringSize(long) -> stringSize
    222:224:int stringSize(int) -> stringSize
com.alibaba.fastjson.util.IdentityHashMap -> com.alibaba.fastjson.util.IdentityHashMap:
    32:33:void <init>() -> <init>
    35:38:void <init>(int) -> <init>
    41:50:java.lang.Object get(java.lang.Object) -> get
    54:67:boolean put(java.lang.Object,java.lang.Object) -> put
    71:77:int size() -> size
com.alibaba.fastjson.util.IdentityHashMap$Entry -> com.alibaba.fastjson.util.IdentityHashMap$Entry:
    88:93:void <init>(java.lang.Object,java.lang.Object,int,com.alibaba.fastjson.util.IdentityHashMap$Entry) -> <init>
com.alibaba.fastjson.util.ParameterizedTypeImpl -> com.alibaba.fastjson.util.ParameterizedTypeImpl:
    12:16:void <init>(java.lang.reflect.Type[],java.lang.reflect.Type,java.lang.reflect.Type) -> <init>
    19:19:java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    23:23:java.lang.reflect.Type getOwnerType() -> getOwnerType
    27:27:java.lang.reflect.Type getRawType() -> getRawType
com.alibaba.fastjson.util.TypeUtils -> com.alibaba.fastjson.util.TypeUtils:
    67:859:void <clinit>() -> <clinit>
    65:65:void <init>() -> <init>
    870:889:void addBaseClassMappings() -> addBaseClassMappings
    862:867:void addClassMapping(java.lang.String,java.lang.Class) -> addClassMapping
    508:640:java.lang.Object cast(java.lang.Object,java.lang.Class,com.alibaba.fastjson.parser.ParserConfig) -> cast
    676:699:java.lang.Object cast(java.lang.Object,java.lang.reflect.Type,com.alibaba.fastjson.parser.ParserConfig) -> cast
    704:764:java.lang.Object cast(java.lang.Object,java.lang.reflect.ParameterizedType,com.alibaba.fastjson.parser.ParserConfig) -> cast
    155:172:java.math.BigDecimal castToBigDecimal(java.lang.Object) -> castToBigDecimal
    176:193:java.math.BigInteger castToBigInteger(java.lang.Object) -> castToBigInteger
    461:499:java.lang.Boolean castToBoolean(java.lang.Object) -> castToBoolean
    79:100:java.lang.Byte castToByte(java.lang.Object) -> castToByte
    450:457:byte[] castToBytes(java.lang.Object) -> castToBytes
    104:126:java.lang.Character castToChar(java.lang.Object) -> castToChar
    247:299:java.util.Date castToDate(java.lang.Object) -> castToDate
    222:243:java.lang.Double castToDouble(java.lang.Object) -> castToDouble
    646:671:java.lang.Object castToEnum(java.lang.Object,java.lang.Class,com.alibaba.fastjson.parser.ParserConfig) -> castToEnum
    197:218:java.lang.Float castToFloat(java.lang.Object) -> castToFloat
    421:446:java.lang.Integer castToInt(java.lang.Object) -> castToInt
    503:503:java.lang.Object castToJavaBean(java.lang.Object,java.lang.Class) -> castToJavaBean
    770:852:java.lang.Object castToJavaBean(java.util.Map,java.lang.Class,com.alibaba.fastjson.parser.ParserConfig) -> castToJavaBean
    381:417:java.lang.Long castToLong(java.lang.Object) -> castToLong
    130:151:java.lang.Short castToShort(java.lang.Object) -> castToShort
    303:338:java.sql.Date castToSqlDate(java.lang.Object) -> castToSqlDate
    71:75:java.lang.String castToString(java.lang.Object) -> castToString
    342:377:java.sql.Timestamp castToTimestamp(java.lang.Object) -> castToTimestamp
    892:894:void clearClassMapping() -> clearClassMapping
    945:945:java.util.List computeGetters(java.lang.Class,java.util.Map) -> computeGetters
    949:1209:java.util.List computeGetters(java.lang.Class,java.util.Map,boolean) -> computeGetters
    1351:1360:java.lang.String decapitalize(java.lang.String) -> decapitalize
    1304:1312:java.lang.Class getClass(java.lang.reflect.Type) -> getClass
    1316:1327:java.lang.reflect.Field getField(java.lang.Class,java.lang.String) -> getField
    1278:1286:java.lang.reflect.Type getGenericParamType(java.lang.reflect.Type) -> getGenericParamType
    1341:1347:int getParserFeatures(java.lang.Class) -> getParserFeatures
    1331:1337:int getSerializeFeatures(java.lang.Class) -> getSerializeFeatures
    1213:1242:com.alibaba.fastjson.annotation.JSONField getSupperMethodAnnotation(java.lang.Class,java.lang.reflect.Method) -> getSupperMethodAnnotation
    1266:1274:boolean isGenericParamType(java.lang.reflect.Type) -> isGenericParamType
    1246:1262:boolean isJSONTypeIgnore(java.lang.Class,java.lang.String) -> isJSONTypeIgnore
    897:941:java.lang.Class loadClass(java.lang.String) -> loadClass
    1364:1377:void setAccessible(java.lang.reflect.AccessibleObject) -> setAccessible
    1290:1300:java.lang.reflect.Type unwrap(java.lang.reflect.Type) -> unwrap
com.bumptech.glide.BuildConfig -> com.bumptech.glide.BuildConfig:
    7:7:void <clinit>() -> <clinit>
    6:6:void <init>() -> <init>
com.bumptech.glide.GeneratedAppGlideModule -> com.bumptech.glide.GeneratedAppGlideModule:
    15:15:void <init>() -> <init>
    24:24:com.bumptech.glide.manager.RequestManagerRetriever$RequestManagerFactory getRequestManagerFactory() -> getRequestManagerFactory
com.bumptech.glide.GenericTransitionOptions -> com.bumptech.glide.GenericTransitionOptions:
    15:15:void <init>() -> <init>
    35:35:com.bumptech.glide.GenericTransitionOptions with(int) -> with
    46:46:com.bumptech.glide.GenericTransitionOptions with(com.bumptech.glide.request.transition.ViewPropertyTransition$Animator) -> with
    57:57:com.bumptech.glide.GenericTransitionOptions with(com.bumptech.glide.request.transition.TransitionFactory) -> with
    24:24:com.bumptech.glide.GenericTransitionOptions withNoTransition() -> withNoTransition
com.bumptech.glide.Glide -> com.bumptech.glide.Glide:
    118:526:void <init>(android.content.Context,com.bumptech.glide.load.engine.Engine,com.bumptech.glide.load.engine.cache.MemoryCache,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,com.bumptech.glide.manager.RequestManagerRetriever,com.bumptech.glide.manager.ConnectivityMonitorFactory,int,com.bumptech.glide.request.RequestOptions,java.util.Map,java.util.List,boolean) -> <init>
    179:186:void checkAndInitializeGlide(android.content.Context) -> checkAndInitializeGlide
    643:645:void clearDiskCache() -> clearDiskCache
    612:617:void clearMemory() -> clearMemory
    165:173:com.bumptech.glide.Glide get(android.content.Context) -> get
    282:305:com.bumptech.glide.GeneratedAppGlideModule getAnnotationGeneratedGlideModules() -> getAnnotationGeneratedGlideModules
    554:554:com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool getArrayPool() -> getArrayPool
    549:549:com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool getBitmapPool() -> getBitmapPool
    566:566:com.bumptech.glide.manager.ConnectivityMonitorFactory getConnectivityMonitorFactory() -> getConnectivityMonitorFactory
    562:562:android.content.Context getContext() -> getContext
    571:571:com.bumptech.glide.GlideContext getGlideContext() -> getGlideContext
    130:130:java.io.File getPhotoCacheDir(android.content.Context) -> getPhotoCacheDir
    143:155:java.io.File getPhotoCacheDir(android.content.Context,java.lang.String) -> getPhotoCacheDir
    806:806:com.bumptech.glide.Registry getRegistry() -> getRegistry
    652:652:com.bumptech.glide.manager.RequestManagerRetriever getRequestManagerRetriever() -> getRequestManagerRetriever
    684:689:com.bumptech.glide.manager.RequestManagerRetriever getRetriever(android.content.Context) -> getRetriever
    196:201:void init(com.bumptech.glide.Glide) -> init
    204:209:void init(android.content.Context,com.bumptech.glide.GlideBuilder) -> init
    223:224:void initializeGlide(android.content.Context) -> initializeGlide
    228:277:void initializeGlide(android.content.Context,com.bumptech.glide.GlideBuilder) -> initializeGlide
    847:847:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    851:852:void onLowMemory() -> onLowMemory
    841:842:void onTrimMemory(int) -> onTrimMemory
    601:602:void preFillBitmapPool(com.bumptech.glide.load.engine.prefill.PreFillType$Builder[]) -> preFillBitmapPool
    822:828:void registerRequestManager(com.bumptech.glide.RequestManager) -> registerRequestManager
    810:818:boolean removeFromManagers(com.bumptech.glide.request.target.Target) -> removeFromManagers
    671:677:com.bumptech.glide.MemoryCategory setMemoryCategory(com.bumptech.glide.MemoryCategory) -> setMemoryCategory
    212:220:void tearDown() -> tearDown
    309:309:void throwIncorrectGlideModule(java.lang.Exception) -> throwIncorrectGlideModule
    626:631:void trimMemory(int) -> trimMemory
    831:837:void unregisterRequestManager(com.bumptech.glide.RequestManager) -> unregisterRequestManager
    716:716:com.bumptech.glide.RequestManager with(android.content.Context) -> with
    728:728:com.bumptech.glide.RequestManager with(android.app.Activity) -> with
    741:741:com.bumptech.glide.RequestManager with(androidx.fragment.app.FragmentActivity) -> with
    754:754:com.bumptech.glide.RequestManager with(androidx.fragment.app.Fragment) -> with
    771:771:com.bumptech.glide.RequestManager with(android.app.Fragment) -> with
    801:801:com.bumptech.glide.RequestManager with(android.view.View) -> with
com.bumptech.glide.GlideBuilder -> com.bumptech.glide.GlideBuilder:
    39:51:void <init>() -> <init>
    404:408:com.bumptech.glide.GlideBuilder addGlobalRequestListener(com.bumptech.glide.request.RequestListener) -> addGlobalRequestListener
    438:509:com.bumptech.glide.Glide build(android.content.Context) -> build
    201:202:com.bumptech.glide.GlideBuilder setAnimationExecutor(com.bumptech.glide.load.engine.executor.GlideExecutor) -> setAnimationExecutor
    82:83:com.bumptech.glide.GlideBuilder setArrayPool(com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> setArrayPool
    69:70:com.bumptech.glide.GlideBuilder setBitmapPool(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> setBitmapPool
    292:293:com.bumptech.glide.GlideBuilder setConnectivityMonitorFactory(com.bumptech.glide.manager.ConnectivityMonitorFactory) -> setConnectivityMonitorFactory
    217:218:com.bumptech.glide.GlideBuilder setDefaultRequestOptions(com.bumptech.glide.request.RequestOptions) -> setDefaultRequestOptions
    242:243:com.bumptech.glide.GlideBuilder setDefaultTransitionOptions(java.lang.Class,com.bumptech.glide.TransitionOptions) -> setDefaultTransitionOptions
    113:114:com.bumptech.glide.GlideBuilder setDiskCache(com.bumptech.glide.load.engine.cache.DiskCache$Factory) -> setDiskCache
    181:182:com.bumptech.glide.GlideBuilder setDiskCacheExecutor(com.bumptech.glide.load.engine.executor.GlideExecutor) -> setDiskCacheExecutor
    432:433:com.bumptech.glide.GlideBuilder setEngine(com.bumptech.glide.load.engine.Engine) -> setEngine
    381:382:com.bumptech.glide.GlideBuilder setIsActiveResourceRetentionAllowed(boolean) -> setIsActiveResourceRetentionAllowed
    325:330:com.bumptech.glide.GlideBuilder setLogLevel(int) -> setLogLevel
    422:423:com.bumptech.glide.GlideBuilder setLogRequestOrigins(boolean) -> setLogRequestOrigins
    97:98:com.bumptech.glide.GlideBuilder setMemoryCache(com.bumptech.glide.load.engine.cache.MemoryCache) -> setMemoryCache
    259:259:com.bumptech.glide.GlideBuilder setMemorySizeCalculator(com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder) -> setMemorySizeCalculator
    276:277:com.bumptech.glide.GlideBuilder setMemorySizeCalculator(com.bumptech.glide.load.engine.cache.MemorySizeCalculator) -> setMemorySizeCalculator
    427:428:void setRequestManagerFactory(com.bumptech.glide.manager.RequestManagerRetriever$RequestManagerFactory) -> setRequestManagerFactory
    136:136:com.bumptech.glide.GlideBuilder setResizeExecutor(com.bumptech.glide.load.engine.executor.GlideExecutor) -> setResizeExecutor
    158:159:com.bumptech.glide.GlideBuilder setSourceExecutor(com.bumptech.glide.load.engine.executor.GlideExecutor) -> setSourceExecutor
com.bumptech.glide.GlideContext -> com.bumptech.glide.GlideContext:
    24:24:void <clinit>() -> <clinit>
    47:57:void <init>(android.content.Context,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,com.bumptech.glide.Registry,com.bumptech.glide.request.target.ImageViewTargetFactory,com.bumptech.glide.request.RequestOptions,java.util.Map,java.util.List,com.bumptech.glide.load.engine.Engine,boolean,int) -> <init>
    87:87:com.bumptech.glide.request.target.ViewTarget buildImageViewTarget(android.widget.ImageView,java.lang.Class) -> buildImageViewTarget
    106:106:com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool getArrayPool() -> getArrayPool
    60:60:java.util.List getDefaultRequestListeners() -> getDefaultRequestListeners
    64:64:com.bumptech.glide.request.RequestOptions getDefaultRequestOptions() -> getDefaultRequestOptions
    70:81:com.bumptech.glide.TransitionOptions getDefaultTransitionOptions(java.lang.Class) -> getDefaultTransitionOptions
    92:92:com.bumptech.glide.load.engine.Engine getEngine() -> getEngine
    101:101:int getLogLevel() -> getLogLevel
    97:97:com.bumptech.glide.Registry getRegistry() -> getRegistry
    116:116:boolean isLoggingRequestOriginsEnabled() -> isLoggingRequestOriginsEnabled
com.bumptech.glide.ListPreloader -> com.bumptech.glide.ListPreloader:
    36:130:void <init>(com.bumptech.glide.RequestManager,com.bumptech.glide.ListPreloader$PreloadModelProvider,com.bumptech.glide.ListPreloader$PreloadSizeProvider,int) -> <init>
    219:222:void cancelAll() -> cancelAll
    140:147:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    135:135:void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    150:155:void preload(int,boolean) -> preload
    160:184:void preload(int,int) -> preload
    187:197:void preloadAdapterPosition(java.util.List,int,boolean) -> preloadAdapterPosition
    201:216:void preloadItem(java.lang.Object,int,int) -> preloadItem
com.bumptech.glide.ListPreloader$PreloadTarget -> com.bumptech.glide.ListPreloader$PreloadTarget:
    251:251:void <init>() -> <init>
    261:262:void getSize(com.bumptech.glide.request.target.SizeReadyCallback) -> getSize
    257:257:void onResourceReady(java.lang.Object,com.bumptech.glide.request.transition.Transition) -> onResourceReady
    267:267:void removeCallback(com.bumptech.glide.request.target.SizeReadyCallback) -> removeCallback
com.bumptech.glide.ListPreloader$PreloadTargetQueue -> com.bumptech.glide.ListPreloader$PreloadTargetQueue:
    229:235:void <init>(int) -> <init>
    238:242:com.bumptech.glide.ListPreloader$PreloadTarget next(int,int) -> next
com.bumptech.glide.MemoryCategory -> com.bumptech.glide.MemoryCategory:
    6:19:void <clinit>() -> <clinit>
    23:25:void <init>(java.lang.String,int,float) -> <init>
    32:32:float getMultiplier() -> getMultiplier
    6:6:com.bumptech.glide.MemoryCategory valueOf(java.lang.String) -> valueOf
    6:6:com.bumptech.glide.MemoryCategory[] values() -> values
com.bumptech.glide.Priority -> com.bumptech.glide.Priority:
    8:12:void <clinit>() -> <clinit>
    8:8:void <init>(java.lang.String,int) -> <init>
    8:8:com.bumptech.glide.Priority valueOf(java.lang.String) -> valueOf
    8:8:com.bumptech.glide.Priority[] values() -> values
com.bumptech.glide.Registry -> com.bumptech.glide.Registry:
    54:69:void <init>() -> <init>
    109:110:com.bumptech.glide.Registry append(java.lang.Class,com.bumptech.glide.load.Encoder) -> append
    155:156:com.bumptech.glide.Registry append(java.lang.Class,java.lang.Class,com.bumptech.glide.load.ResourceDecoder) -> append
    186:187:com.bumptech.glide.Registry append(java.lang.String,java.lang.Class,java.lang.Class,com.bumptech.glide.load.ResourceDecoder) -> append
    319:320:com.bumptech.glide.Registry append(java.lang.Class,com.bumptech.glide.load.ResourceEncoder) -> append
    406:407:com.bumptech.glide.Registry append(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory) -> append
    502:523:java.util.List getDecodePaths(java.lang.Class,java.lang.Class,java.lang.Class) -> getDecodePaths
    595:599:java.util.List getImageHeaderParsers() -> getImageHeaderParsers
    477:495:com.bumptech.glide.load.engine.LoadPath getLoadPath(java.lang.Class,java.lang.Class,java.lang.Class) -> getLoadPath
    586:590:java.util.List getModelLoaders(java.lang.Object) -> getModelLoaders
    531:552:java.util.List getRegisteredResourceClasses(java.lang.Class,java.lang.Class,java.lang.Class) -> getRegisteredResourceClasses
    562:566:com.bumptech.glide.load.ResourceEncoder getResultEncoder(com.bumptech.glide.load.engine.Resource) -> getResultEncoder
    581:581:com.bumptech.glide.load.data.DataRewinder getRewinder(java.lang.Object) -> getRewinder
    572:576:com.bumptech.glide.load.Encoder getSourceEncoder(java.lang.Object) -> getSourceEncoder
    556:556:boolean isResourceEncoderAvailable(com.bumptech.glide.load.engine.Resource) -> isResourceEncoderAvailable
    126:127:com.bumptech.glide.Registry prepend(java.lang.Class,com.bumptech.glide.load.Encoder) -> prepend
    215:216:com.bumptech.glide.Registry prepend(java.lang.Class,java.lang.Class,com.bumptech.glide.load.ResourceDecoder) -> prepend
    246:247:com.bumptech.glide.Registry prepend(java.lang.String,java.lang.Class,java.lang.Class,com.bumptech.glide.load.ResourceDecoder) -> prepend
    338:339:com.bumptech.glide.Registry prepend(java.lang.Class,com.bumptech.glide.load.ResourceEncoder) -> prepend
    437:438:com.bumptech.glide.Registry prepend(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory) -> prepend
    89:89:com.bumptech.glide.Registry register(java.lang.Class,com.bumptech.glide.load.Encoder) -> register
    297:297:com.bumptech.glide.Registry register(java.lang.Class,com.bumptech.glide.load.ResourceEncoder) -> register
    348:349:com.bumptech.glide.Registry register(com.bumptech.glide.load.data.DataRewinder$Factory) -> register
    366:367:com.bumptech.glide.Registry register(java.lang.Class,java.lang.Class,com.bumptech.glide.load.resource.transcode.ResourceTranscoder) -> register
    376:377:com.bumptech.glide.Registry register(com.bumptech.glide.load.ImageHeaderParser) -> register
    469:470:com.bumptech.glide.Registry replace(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory) -> replace
    269:274:com.bumptech.glide.Registry setResourceDecoderBucketPriorityList(java.util.List) -> setResourceDecoderBucketPriorityList
com.bumptech.glide.Registry$MissingComponentException -> com.bumptech.glide.Registry$MissingComponentException:
    651:652:void <init>(java.lang.String) -> <init>
com.bumptech.glide.Registry$NoImageHeaderParserException -> com.bumptech.glide.Registry$NoImageHeaderParserException:
    662:663:void <init>() -> <init>
com.bumptech.glide.Registry$NoModelLoaderAvailableException -> com.bumptech.glide.Registry$NoModelLoaderAvailableException:
    610:611:void <init>(java.lang.Object) -> <init>
    615:616:void <init>(java.lang.Class,java.lang.Class) -> <init>
com.bumptech.glide.Registry$NoResultEncoderAvailableException -> com.bumptech.glide.Registry$NoResultEncoderAvailableException:
    626:630:void <init>(java.lang.Class) -> <init>
com.bumptech.glide.Registry$NoSourceEncoderAvailableException -> com.bumptech.glide.Registry$NoSourceEncoderAvailableException:
    640:641:void <init>(java.lang.Class) -> <init>
com.bumptech.glide.RequestBuilder -> com.bumptech.glide.RequestBuilder:
    56:58:void <clinit>() -> <clinit>
    77:98:void <init>(com.bumptech.glide.Glide,com.bumptech.glide.RequestManager,java.lang.Class,android.content.Context) -> <init>
    103:109:void <init>(java.lang.Class,com.bumptech.glide.RequestBuilder) -> <init>
    189:195:com.bumptech.glide.RequestBuilder addListener(com.bumptech.glide.request.RequestListener) -> addListener
    51:51:com.bumptech.glide.request.BaseRequestOptions apply(com.bumptech.glide.request.BaseRequestOptions) -> apply
    136:137:com.bumptech.glide.RequestBuilder apply(com.bumptech.glide.request.BaseRequestOptions) -> apply
    876:883:com.bumptech.glide.request.Request buildRequest(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.BaseRequestOptions,java.util.concurrent.Executor) -> buildRequest
    900:942:com.bumptech.glide.request.Request buildRequestRecursive(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestCoordinator,com.bumptech.glide.TransitionOptions,com.bumptech.glide.Priority,int,int,com.bumptech.glide.request.BaseRequestOptions,java.util.concurrent.Executor) -> buildRequestRecursive
    955:1043:com.bumptech.glide.request.Request buildThumbnailRequestRecursive(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestCoordinator,com.bumptech.glide.TransitionOptions,com.bumptech.glide.Priority,int,int,com.bumptech.glide.request.BaseRequestOptions,java.util.concurrent.Executor) -> buildThumbnailRequestRecursive
    51:51:com.bumptech.glide.request.BaseRequestOptions clone() -> clone
    51:51:java.lang.Object clone() -> clone
    599:601:com.bumptech.glide.RequestBuilder clone() -> clone
    829:829:com.bumptech.glide.request.target.Target downloadOnly(com.bumptech.glide.request.target.Target) -> downloadOnly
    847:847:com.bumptech.glide.request.FutureTarget downloadOnly(int,int) -> downloadOnly
    222:223:com.bumptech.glide.RequestBuilder error(com.bumptech.glide.RequestBuilder) -> error
    853:853:com.bumptech.glide.RequestBuilder getDownloadOnlyRequest() -> getDownloadOnlyRequest
    858:867:com.bumptech.glide.Priority getThumbnailPriority(com.bumptech.glide.Priority) -> getThumbnailPriority
    116:119:void initRequestListeners(java.util.List) -> initRequestListeners
    613:613:com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target) -> into
    622:622:com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,java.util.concurrent.Executor) -> into
    630:658:com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.BaseRequestOptions,java.util.concurrent.Executor) -> into
    684:720:com.bumptech.glide.request.target.ViewTarget into(android.widget.ImageView) -> into
    740:740:com.bumptech.glide.request.FutureTarget into(int,int) -> into
    668:668:boolean isSkipMemoryCacheWithCompletePreviousRequest(com.bumptech.glide.request.BaseRequestOptions,com.bumptech.glide.request.Request) -> isSkipMemoryCacheWithCompletePreviousRequest
    174:175:com.bumptech.glide.RequestBuilder listener(com.bumptech.glide.request.RequestListener) -> listener
    51:51:java.lang.Object load(android.graphics.Bitmap) -> load
    51:51:java.lang.Object load(android.graphics.drawable.Drawable) -> load
    51:51:java.lang.Object load(android.net.Uri) -> load
    51:51:java.lang.Object load(java.io.File) -> load
    51:51:java.lang.Object load(java.lang.Integer) -> load
    51:51:java.lang.Object load(java.lang.Object) -> load
    51:51:java.lang.Object load(java.lang.String) -> load
    51:51:java.lang.Object load(java.net.URL) -> load
    51:51:java.lang.Object load(byte[]) -> load
    368:368:com.bumptech.glide.RequestBuilder load(java.lang.Object) -> load
    400:401:com.bumptech.glide.RequestBuilder load(android.graphics.Bitmap) -> load
    427:428:com.bumptech.glide.RequestBuilder load(android.graphics.drawable.Drawable) -> load
    454:454:com.bumptech.glide.RequestBuilder load(java.lang.String) -> load
    479:479:com.bumptech.glide.RequestBuilder load(android.net.Uri) -> load
    503:503:com.bumptech.glide.RequestBuilder load(java.io.File) -> load
    542:542:com.bumptech.glide.RequestBuilder load(java.lang.Integer) -> load
    558:558:com.bumptech.glide.RequestBuilder load(java.net.URL) -> load
    573:580:com.bumptech.glide.RequestBuilder load(byte[]) -> load
    373:375:com.bumptech.glide.RequestBuilder loadGeneric(java.lang.Object) -> loadGeneric
    1066:1080:com.bumptech.glide.request.Request obtainRequest(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.BaseRequestOptions,com.bumptech.glide.request.RequestCoordinator,com.bumptech.glide.TransitionOptions,com.bumptech.glide.Priority,int,int,java.util.concurrent.Executor) -> obtainRequest
    798:799:com.bumptech.glide.request.target.Target preload(int,int) -> preload
    813:813:com.bumptech.glide.request.target.Target preload() -> preload
    757:757:com.bumptech.glide.request.FutureTarget submit() -> submit
    774:775:com.bumptech.glide.request.FutureTarget submit(int,int) -> submit
    249:251:com.bumptech.glide.RequestBuilder thumbnail(com.bumptech.glide.RequestBuilder) -> thumbnail
    287:312:com.bumptech.glide.RequestBuilder thumbnail(com.bumptech.glide.RequestBuilder[]) -> thumbnail
    349:354:com.bumptech.glide.RequestBuilder thumbnail(float) -> thumbnail
    153:155:com.bumptech.glide.RequestBuilder transition(com.bumptech.glide.TransitionOptions) -> transition
com.bumptech.glide.RequestBuilder$1 -> com.bumptech.glide.RequestBuilder$1:
    694:858:void <clinit>() -> <clinit>
com.bumptech.glide.RequestManager -> com.bumptech.glide.RequestManager:
    59:63:void <clinit>() -> <clinit>
    94:101:void <init>(com.bumptech.glide.Glide,com.bumptech.glide.manager.Lifecycle,com.bumptech.glide.manager.RequestManagerTreeNode,android.content.Context) -> <init>
    73:139:void <init>(com.bumptech.glide.Glide,com.bumptech.glide.manager.Lifecycle,com.bumptech.glide.manager.RequestManagerTreeNode,com.bumptech.glide.manager.RequestTracker,com.bumptech.glide.manager.ConnectivityMonitorFactory,android.content.Context) -> <init>
    214:215:com.bumptech.glide.RequestManager addDefaultRequestListener(com.bumptech.glide.request.RequestListener) -> addDefaultRequestListener
    169:171:com.bumptech.glide.RequestManager applyDefaultRequestOptions(com.bumptech.glide.request.RequestOptions) -> applyDefaultRequestOptions
    564:564:com.bumptech.glide.RequestBuilder as(java.lang.Class) -> as
    358:358:com.bumptech.glide.RequestBuilder asBitmap() -> asBitmap
    393:393:com.bumptech.glide.RequestBuilder asDrawable() -> asDrawable
    549:549:com.bumptech.glide.RequestBuilder asFile() -> asFile
    377:377:com.bumptech.glide.RequestBuilder asGif() -> asGif
    580:581:void clear(android.view.View) -> clear
    589:595:void clear(com.bumptech.glide.request.target.Target) -> clear
    534:534:com.bumptech.glide.RequestBuilder download(java.lang.Object) -> download
    522:522:com.bumptech.glide.RequestBuilder downloadOnly() -> downloadOnly
    645:645:java.util.List getDefaultRequestListeners() -> getDefaultRequestListeners
    649:649:com.bumptech.glide.request.RequestOptions getDefaultRequestOptions() -> getDefaultRequestOptions
    654:654:com.bumptech.glide.TransitionOptions getDefaultTransitionOptions(java.lang.Class) -> getDefaultTransitionOptions
    225:225:boolean isPaused() -> isPaused
    57:57:java.lang.Object load(android.graphics.Bitmap) -> load
    57:57:java.lang.Object load(android.graphics.drawable.Drawable) -> load
    57:57:java.lang.Object load(android.net.Uri) -> load
    57:57:java.lang.Object load(java.io.File) -> load
    57:57:java.lang.Object load(java.lang.Integer) -> load
    57:57:java.lang.Object load(java.lang.Object) -> load
    57:57:java.lang.Object load(java.lang.String) -> load
    57:57:java.lang.Object load(java.net.URL) -> load
    57:57:java.lang.Object load(byte[]) -> load
    405:405:com.bumptech.glide.RequestBuilder load(android.graphics.Bitmap) -> load
    417:417:com.bumptech.glide.RequestBuilder load(android.graphics.drawable.Drawable) -> load
    429:429:com.bumptech.glide.RequestBuilder load(java.lang.String) -> load
    441:441:com.bumptech.glide.RequestBuilder load(android.net.Uri) -> load
    453:453:com.bumptech.glide.RequestBuilder load(java.io.File) -> load
    466:466:com.bumptech.glide.RequestBuilder load(java.lang.Integer) -> load
    479:479:com.bumptech.glide.RequestBuilder load(java.net.URL) -> load
    492:492:com.bumptech.glide.RequestBuilder load(byte[]) -> load
    505:505:com.bumptech.glide.RequestBuilder load(java.lang.Object) -> load
    336:347:void onDestroy() -> onDestroy
    316:319:void onStart() -> onStart
    326:329:void onStop() -> onStop
    258:260:void pauseAllRequests() -> pauseAllRequests
    238:240:void pauseRequests() -> pauseRequests
    278:283:void pauseRequestsRecursive() -> pauseRequestsRecursive
    291:293:void resumeRequests() -> resumeRequests
    302:308:void resumeRequestsRecursive() -> resumeRequestsRecursive
    191:193:com.bumptech.glide.RequestManager setDefaultRequestOptions(com.bumptech.glide.request.RequestOptions) -> setDefaultRequestOptions
    141:143:void setRequestOptions(com.bumptech.glide.request.RequestOptions) -> setRequestOptions
    659:659:java.lang.String toString() -> toString
    639:642:void track(com.bumptech.glide.request.target.Target,com.bumptech.glide.request.Request) -> track
    623:635:boolean untrack(com.bumptech.glide.request.target.Target) -> untrack
    598:621:void untrackOrDelegate(com.bumptech.glide.request.target.Target) -> untrackOrDelegate
    145:147:void updateRequestOptions(com.bumptech.glide.request.RequestOptions) -> updateRequestOptions
com.bumptech.glide.RequestManager$1 -> com.bumptech.glide.RequestManager$1:
    75:75:void <init>(com.bumptech.glide.RequestManager) -> <init>
    78:79:void run() -> run
com.bumptech.glide.RequestManager$ClearTarget -> com.bumptech.glide.RequestManager$ClearTarget:
    684:685:void <init>(android.view.View) -> <init>
    691:691:void onResourceReady(java.lang.Object,com.bumptech.glide.request.transition.Transition) -> onResourceReady
com.bumptech.glide.RequestManager$RequestManagerConnectivityListener -> com.bumptech.glide.RequestManager$RequestManagerConnectivityListener:
    667:669:void <init>(com.bumptech.glide.RequestManager,com.bumptech.glide.manager.RequestTracker) -> <init>
    673:678:void onConnectivityChanged(boolean) -> onConnectivityChanged
com.bumptech.glide.TransitionOptions -> com.bumptech.glide.TransitionOptions:
    17:19:void <init>() -> <init>
    17:17:java.lang.Object clone() -> clone
    85:87:com.bumptech.glide.TransitionOptions clone() -> clone
    29:29:com.bumptech.glide.TransitionOptions dontTransition() -> dontTransition
    92:92:com.bumptech.glide.request.transition.TransitionFactory getTransitionFactory() -> getTransitionFactory
    97:97:com.bumptech.glide.TransitionOptions self() -> self
    43:43:com.bumptech.glide.TransitionOptions transition(int) -> transition
    57:57:com.bumptech.glide.TransitionOptions transition(com.bumptech.glide.request.transition.ViewPropertyTransition$Animator) -> transition
    70:71:com.bumptech.glide.TransitionOptions transition(com.bumptech.glide.request.transition.TransitionFactory) -> transition
com.bumptech.glide.disklrucache.DiskLruCache -> com.bumptech.glide.disklrucache.DiskLruCache:
    145:186:void <init>(java.io.File,int,int,long) -> <init>
    86:86:java.io.Writer access$100(com.bumptech.glide.disklrucache.DiskLruCache) -> access$100
    86:86:com.bumptech.glide.disklrucache.DiskLruCache$Editor access$1700(com.bumptech.glide.disklrucache.DiskLruCache,java.lang.String,long) -> access$1700
    86:86:java.lang.String access$1800(java.io.InputStream) -> access$1800
    86:86:int access$1900(com.bumptech.glide.disklrucache.DiskLruCache) -> access$1900
    86:86:void access$200(com.bumptech.glide.disklrucache.DiskLruCache) -> access$200
    86:86:java.io.File access$2000(com.bumptech.glide.disklrucache.DiskLruCache) -> access$2000
    86:86:void access$2100(com.bumptech.glide.disklrucache.DiskLruCache,com.bumptech.glide.disklrucache.DiskLruCache$Editor,boolean) -> access$2100
    86:86:boolean access$300(com.bumptech.glide.disklrucache.DiskLruCache) -> access$300
    86:86:void access$400(com.bumptech.glide.disklrucache.DiskLruCache) -> access$400
    86:86:int access$502(com.bumptech.glide.disklrucache.DiskLruCache,int) -> access$502
    619:622:void checkNotClosed() -> checkNotClosed
    632:644:void close() -> close
    503:564:void completeEdit(com.bumptech.glide.disklrucache.DiskLruCache$Editor,boolean) -> completeEdit
    659:661:void delete() -> delete
    389:392:void deleteIfExists(java.io.File) -> deleteIfExists
    443:443:com.bumptech.glide.disklrucache.DiskLruCache$Editor edit(java.lang.String) -> edit
    446:469:com.bumptech.glide.disklrucache.DiskLruCache$Editor edit(java.lang.String,long) -> edit
    625:629:void flush() -> flush
    408:435:com.bumptech.glide.disklrucache.DiskLruCache$Value get(java.lang.String) -> get
    474:474:java.io.File getDirectory() -> getDirectory
    482:482:long getMaxSize() -> getMaxSize
    664:664:java.lang.String inputStreamToString(java.io.InputStream) -> inputStreamToString
    615:615:boolean isClosed() -> isClosed
    571:573:boolean journalRebuildRequired() -> journalRebuildRequired
    199:240:com.bumptech.glide.disklrucache.DiskLruCache open(java.io.File,int,int,long) -> open
    327:343:void processJournal() -> processJournal
    244:281:void readJournal() -> readJournal
    284:320:void readJournalLine(java.lang.String) -> readJournalLine
    349:386:void rebuildJournal() -> rebuildJournal
    582:610:boolean remove(java.lang.String) -> remove
    395:401:void renameTo(java.io.File,java.io.File,boolean) -> renameTo
    489:492:void setMaxSize(long) -> setMaxSize
    500:500:long size() -> size
    647:651:void trimToSize() -> trimToSize
com.bumptech.glide.disklrucache.DiskLruCache$1 -> com.bumptech.glide.disklrucache.DiskLruCache$1:
    162:162:void <init>(com.bumptech.glide.disklrucache.DiskLruCache) -> <init>
    162:162:java.lang.Object call() -> call
    164:174:java.lang.Void call() -> call
com.bumptech.glide.disklrucache.DiskLruCache$DiskLruCacheThreadFactory -> com.bumptech.glide.disklrucache.DiskLruCache$DiskLruCacheThreadFactory:
    882:882:void <init>() -> <init>
    882:882:void <init>(com.bumptech.glide.disklrucache.DiskLruCache$1) -> <init>
    884:887:java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.bumptech.glide.disklrucache.DiskLruCache$Editor -> com.bumptech.glide.disklrucache.DiskLruCache$Editor:
    707:707:void <init>(com.bumptech.glide.disklrucache.DiskLruCache,com.bumptech.glide.disklrucache.DiskLruCache$Entry,com.bumptech.glide.disklrucache.DiskLruCache$1) -> <init>
    712:715:void <init>(com.bumptech.glide.disklrucache.DiskLruCache,com.bumptech.glide.disklrucache.DiskLruCache$Entry) -> <init>
    792:793:void abort() -> abort
    796:802:void abortUnlessCommitted() -> abortUnlessCommitted
    707:707:com.bumptech.glide.disklrucache.DiskLruCache$Entry access$1500(com.bumptech.glide.disklrucache.DiskLruCache$Editor) -> access$1500
    707:707:boolean[] access$1600(com.bumptech.glide.disklrucache.DiskLruCache$Editor) -> access$1600
    783:785:void commit() -> commit
    747:759:java.io.File getFile(int) -> getFile
    742:743:java.lang.String getString(int) -> getString
    722:734:java.io.InputStream newInputStream(int) -> newInputStream
    764:772:void set(int,java.lang.String) -> set
com.bumptech.glide.disklrucache.DiskLruCache$Entry -> com.bumptech.glide.disklrucache.DiskLruCache$Entry:
    805:805:void <init>(com.bumptech.glide.disklrucache.DiskLruCache,java.lang.String,com.bumptech.glide.disklrucache.DiskLruCache$1) -> <init>
    824:840:void <init>(com.bumptech.glide.disklrucache.DiskLruCache,java.lang.String) -> <init>
    805:805:long[] access$1100(com.bumptech.glide.disklrucache.DiskLruCache$Entry) -> access$1100
    805:805:java.lang.String access$1200(com.bumptech.glide.disklrucache.DiskLruCache$Entry) -> access$1200
    805:805:long access$1300(com.bumptech.glide.disklrucache.DiskLruCache$Entry) -> access$1300
    805:805:long access$1302(com.bumptech.glide.disklrucache.DiskLruCache$Entry,long) -> access$1302
    805:805:boolean access$700(com.bumptech.glide.disklrucache.DiskLruCache$Entry) -> access$700
    805:805:boolean access$702(com.bumptech.glide.disklrucache.DiskLruCache$Entry,boolean) -> access$702
    805:805:com.bumptech.glide.disklrucache.DiskLruCache$Editor access$800(com.bumptech.glide.disklrucache.DiskLruCache$Entry) -> access$800
    805:805:com.bumptech.glide.disklrucache.DiskLruCache$Editor access$802(com.bumptech.glide.disklrucache.DiskLruCache$Entry,com.bumptech.glide.disklrucache.DiskLruCache$Editor) -> access$802
    805:805:void access$900(com.bumptech.glide.disklrucache.DiskLruCache$Entry,java.lang.String[]) -> access$900
    870:870:java.io.File getCleanFile(int) -> getCleanFile
    874:874:java.io.File getDirtyFile(int) -> getDirtyFile
    843:847:java.lang.String getLengths() -> getLengths
    866:866:java.io.IOException invalidLengths(java.lang.String[]) -> invalidLengths
    852:863:void setLengths(java.lang.String[]) -> setLengths
com.bumptech.glide.disklrucache.DiskLruCache$Value -> com.bumptech.glide.disklrucache.DiskLruCache$Value:
    668:668:void <init>(com.bumptech.glide.disklrucache.DiskLruCache,java.lang.String,long,java.io.File[],long[],com.bumptech.glide.disklrucache.DiskLruCache$1) -> <init>
    674:679:void <init>(com.bumptech.glide.disklrucache.DiskLruCache,java.lang.String,long,java.io.File[],long[]) -> <init>
    687:687:com.bumptech.glide.disklrucache.DiskLruCache$Editor edit() -> edit
    691:691:java.io.File getFile(int) -> getFile
    702:702:long getLength(int) -> getLength
    696:697:java.lang.String getString(int) -> getString
com.bumptech.glide.disklrucache.StrictLineReader -> com.bumptech.glide.disklrucache.StrictLineReader:
    72:73:void <init>(java.io.InputStream,java.nio.charset.Charset) -> <init>
    86:100:void <init>(java.io.InputStream,int,java.nio.charset.Charset) -> <init>
    45:45:java.nio.charset.Charset access$000(com.bumptech.glide.disklrucache.StrictLineReader) -> access$000
    109:115:void close() -> close
    188:194:void fillBuf() -> fillBuf
    180:180:boolean hasUnterminatedLine() -> hasUnterminatedLine
    126:176:java.lang.String readLine() -> readLine
com.bumptech.glide.disklrucache.StrictLineReader$1 -> com.bumptech.glide.disklrucache.StrictLineReader$1:
    148:148:void <init>(com.bumptech.glide.disklrucache.StrictLineReader,int) -> <init>
    151:155:java.lang.String toString() -> toString
com.bumptech.glide.disklrucache.Util -> com.bumptech.glide.disklrucache.Util:
    28:29:void <clinit>() -> <clinit>
    31:32:void <init>() -> <init>
    68:76:void closeQuietly(java.io.Closeable) -> closeQuietly
    53:65:void deleteContents(java.io.File) -> deleteContents
    36:45:java.lang.String readFully(java.io.Reader) -> readFully
com.bumptech.glide.gifdecoder.BuildConfig -> com.bumptech.glide.gifdecoder.BuildConfig:
    7:7:void <clinit>() -> <clinit>
    6:6:void <init>() -> <init>
com.bumptech.glide.gifdecoder.GifFrame -> com.bumptech.glide.gifdecoder.GifFrame:
    13:13:void <init>() -> <init>
com.bumptech.glide.gifdecoder.GifHeader -> com.bumptech.glide.gifdecoder.GifHeader:
    15:51:void <init>() -> <init>
    54:54:int getHeight() -> getHeight
    62:62:int getNumFrames() -> getNumFrames
    70:70:int getStatus() -> getStatus
    58:58:int getWidth() -> getWidth
com.bumptech.glide.gifdecoder.GifHeaderParser -> com.bumptech.glide.gifdecoder.GifHeaderParser:
    21:125:void <init>() -> <init>
    146:148:void clear() -> clear
    513:513:boolean err() -> err
    182:186:boolean isAnimated() -> isAnimated
    159:174:com.bumptech.glide.gifdecoder.GifHeader parseHeader() -> parseHeader
    495:501:int read() -> read
    303:344:void readBitmap() -> readBitmap
    470:489:void readBlock() -> readBlock
    416:441:int[] readColorTable(int) -> readColorTable
    193:194:void readContents() -> readContents
    201:257:void readContents(int) -> readContents
    264:296:void readGraphicControlExt() -> readGraphicControlExt
    366:379:void readHeader() -> readHeader
    386:406:void readLSD() -> readLSD
    351:359:void readNetscapeExt() -> readNetscapeExt
    509:509:int readShort() -> readShort
    151:155:void reset() -> reset
    128:132:com.bumptech.glide.gifdecoder.GifHeaderParser setData(java.nio.ByteBuffer) -> setData
    136:142:com.bumptech.glide.gifdecoder.GifHeaderParser setData(byte[]) -> setData
    460:464:void skip() -> skip
    449:452:void skipImageData() -> skipImageData
com.bumptech.glide.gifdecoder.StandardGifDecoder -> com.bumptech.glide.gifdecoder.StandardGifDecoder:
    63:63:void <clinit>() -> <clinit>
    126:127:void <init>(com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.gifdecoder.GifHeader,java.nio.ByteBuffer) -> <init>
    132:134:void <init>(com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.gifdecoder.GifHeader,java.nio.ByteBuffer,int) -> <init>
    87:140:void <init>(com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider) -> <init>
    165:166:void advance() -> advance
    644:681:int averageColorsNear(int,int,int) -> averageColorsNear
    321:337:void clear() -> clear
    547:639:void copyCopyIntoScratchRobust(com.bumptech.glide.gifdecoder.GifFrame) -> copyCopyIntoScratchRobust
    501:544:void copyIntoScratchFast(com.bumptech.glide.gifdecoder.GifFrame) -> copyIntoScratchFast
    692:818:void decodeBitmapData(com.bumptech.glide.gifdecoder.GifFrame) -> decodeBitmapData
    228:228:int getByteSize() -> getByteSize
    193:193:int getCurrentFrameIndex() -> getCurrentFrameIndex
    155:155:java.nio.ByteBuffer getData() -> getData
    170:174:int getDelay(int) -> getDelay
    188:188:int getFrameCount() -> getFrameCount
    385:388:com.bumptech.glide.gifdecoder.GifHeaderParser getHeaderParser() -> getHeaderParser
    149:149:int getHeight() -> getHeight
    204:207:int getLoopCount() -> getLoopCount
    212:212:int getNetscapeLoopCount() -> getNetscapeLoopCount
    842:846:android.graphics.Bitmap getNextBitmap() -> getNextBitmap
    179:183:int getNextDelay() -> getNextDelay
    233:284:android.graphics.Bitmap getNextFrame() -> getNextFrame
    160:160:int getStatus() -> getStatus
    217:223:int getTotalIterationCount() -> getTotalIterationCount
    144:144:int getWidth() -> getWidth
    289:316:int read(java.io.InputStream,int) -> read
    393:399:int read(byte[]) -> read
    833:838:int readBlock() -> readBlock
    824:824:int readByte() -> readByte
    198:199:void resetFrameIndex() -> resetFrameIndex
    340:342:void setData(com.bumptech.glide.gifdecoder.GifHeader,byte[]) -> setData
    345:347:void setData(com.bumptech.glide.gifdecoder.GifHeader,java.nio.ByteBuffer) -> setData
    351:381:void setData(com.bumptech.glide.gifdecoder.GifHeader,java.nio.ByteBuffer,int) -> setData
    404:410:void setDefaultBitmapConfig(android.graphics.Bitmap$Config) -> setDefaultBitmapConfig
    418:497:android.graphics.Bitmap setPixels(com.bumptech.glide.gifdecoder.GifFrame,com.bumptech.glide.gifdecoder.GifFrame) -> setPixels
com.bumptech.glide.load.DataSource -> com.bumptech.glide.load.DataSource:
    6:27:void <clinit>() -> <clinit>
    6:6:void <init>(java.lang.String,int) -> <init>
    6:6:com.bumptech.glide.load.DataSource valueOf(java.lang.String) -> valueOf
    6:6:com.bumptech.glide.load.DataSource[] values() -> values
com.bumptech.glide.load.DecodeFormat -> com.bumptech.glide.load.DecodeFormat:
    12:45:void <clinit>() -> <clinit>
    12:12:void <init>(java.lang.String,int) -> <init>
    12:12:com.bumptech.glide.load.DecodeFormat valueOf(java.lang.String) -> valueOf
    12:12:com.bumptech.glide.load.DecodeFormat[] values() -> values
com.bumptech.glide.load.EncodeStrategy -> com.bumptech.glide.load.EncodeStrategy:
    6:21:void <clinit>() -> <clinit>
    6:6:void <init>(java.lang.String,int) -> <init>
    6:6:com.bumptech.glide.load.EncodeStrategy valueOf(java.lang.String) -> valueOf
    6:6:com.bumptech.glide.load.EncodeStrategy[] values() -> values
com.bumptech.glide.load.HttpException -> com.bumptech.glide.load.HttpException:
    22:23:void <init>(int) -> <init>
    26:27:void <init>(java.lang.String) -> <init>
    30:31:void <init>(java.lang.String,int) -> <init>
    34:36:void <init>(java.lang.String,int,java.lang.Throwable) -> <init>
    43:43:int getStatusCode() -> getStatusCode
com.bumptech.glide.load.ImageHeaderParser$ImageType -> com.bumptech.glide.load.ImageHeaderParser$ImageType:
    24:37:void <clinit>() -> <clinit>
    41:43:void <init>(java.lang.String,int,boolean) -> <init>
    46:46:boolean hasAlpha() -> hasAlpha
    24:24:com.bumptech.glide.load.ImageHeaderParser$ImageType valueOf(java.lang.String) -> valueOf
    24:24:com.bumptech.glide.load.ImageHeaderParser$ImageType[] values() -> values
com.bumptech.glide.load.ImageHeaderParserUtils -> com.bumptech.glide.load.ImageHeaderParserUtils:
    21:21:void <init>() -> <init>
    78:100:int getOrientation(java.util.List,java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> getOrientation
    27:49:com.bumptech.glide.load.ImageHeaderParser$ImageType getType(java.util.List,java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> getType
    57:70:com.bumptech.glide.load.ImageHeaderParser$ImageType getType(java.util.List,java.nio.ByteBuffer) -> getType
com.bumptech.glide.load.Key -> com.bumptech.glide.load.Key:
    17:17:void <clinit>() -> <clinit>
com.bumptech.glide.load.MultiTransformation -> com.bumptech.glide.load.MultiTransformation:
    20:26:void <init>(com.bumptech.glide.load.Transformation[]) -> <init>
    28:34:void <init>(java.util.Collection) -> <init>
    54:58:boolean equals(java.lang.Object) -> equals
    63:63:int hashCode() -> hashCode
    40:49:com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int) -> transform
    68:71:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.Option -> com.bumptech.glide.load.Option:
    28:28:void <clinit>() -> <clinit>
    93:97:void <init>(java.lang.String,java.lang.Object,com.bumptech.glide.load.Option$CacheKeyUpdater) -> <init>
    75:75:com.bumptech.glide.load.Option disk(java.lang.String,com.bumptech.glide.load.Option$CacheKeyUpdater) -> disk
    89:89:com.bumptech.glide.load.Option disk(java.lang.String,java.lang.Object,com.bumptech.glide.load.Option$CacheKeyUpdater) -> disk
    143:143:com.bumptech.glide.load.Option$CacheKeyUpdater emptyUpdater() -> emptyUpdater
    128:132:boolean equals(java.lang.Object) -> equals
    106:106:java.lang.Object getDefaultValue() -> getDefaultValue
    120:123:byte[] getKeyBytes() -> getKeyBytes
    137:137:int hashCode() -> hashCode
    50:50:com.bumptech.glide.load.Option memory(java.lang.String) -> memory
    62:62:com.bumptech.glide.load.Option memory(java.lang.String,java.lang.Object) -> memory
    148:148:java.lang.String toString() -> toString
    115:116:void update(java.lang.Object,java.security.MessageDigest) -> update
com.bumptech.glide.load.Option$1 -> com.bumptech.glide.load.Option$1:
    28:28:void <init>() -> <init>
    33:33:void update(byte[],java.lang.Object,java.security.MessageDigest) -> update
com.bumptech.glide.load.Options -> com.bumptech.glide.load.Options:
    13:14:void <init>() -> <init>
    34:38:boolean equals(java.lang.Object) -> equals
    29:29:java.lang.Object get(com.bumptech.glide.load.Option) -> get
    43:43:int hashCode() -> hashCode
    17:18:void putAll(com.bumptech.glide.load.Options) -> putAll
    22:23:com.bumptech.glide.load.Options set(com.bumptech.glide.load.Option,java.lang.Object) -> set
    57:57:java.lang.String toString() -> toString
    48:53:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
    65:66:void updateDiskCacheKey(com.bumptech.glide.load.Option,java.lang.Object,java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.data.AssetFileDescriptorLocalUriFetcher -> com.bumptech.glide.load.data.AssetFileDescriptorLocalUriFetcher:
    16:17:void <init>(android.content.ContentResolver,android.net.Uri) -> <init>
    13:13:void close(java.lang.Object) -> close
    31:32:void close(android.content.res.AssetFileDescriptor) -> close
    37:37:java.lang.Class getDataClass() -> getDataClass
    13:13:java.lang.Object loadResource(android.net.Uri,android.content.ContentResolver) -> loadResource
    22:26:android.content.res.AssetFileDescriptor loadResource(android.net.Uri,android.content.ContentResolver) -> loadResource
com.bumptech.glide.load.data.AssetPathFetcher -> com.bumptech.glide.load.data.AssetPathFetcher:
    24:27:void <init>(android.content.res.AssetManager,java.lang.String) -> <init>
    58:58:void cancel() -> cancel
    45:53:void cleanup() -> cleanup
    63:63:com.bumptech.glide.load.DataSource getDataSource() -> getDataSource
    32:41:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback) -> loadData
com.bumptech.glide.load.data.BufferedOutputStream -> com.bumptech.glide.load.data.BufferedOutputStream:
    21:22:void <init>(java.io.OutputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    25:29:void <init>(java.io.OutputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,int) -> <init>
    89:94:void close() -> close
    69:71:void flush() -> flush
    74:78:void flushBuffer() -> flushBuffer
    81:84:void maybeFlushBuffer() -> maybeFlushBuffer
    97:101:void release() -> release
    33:35:void write(int) -> write
    39:40:void write(byte[]) -> write
    44:65:void write(byte[],int,int) -> write
com.bumptech.glide.load.data.DataRewinderRegistry -> com.bumptech.glide.load.data.DataRewinderRegistry:
    14:14:void <clinit>() -> <clinit>
    12:13:void <init>() -> <init>
    35:50:com.bumptech.glide.load.data.DataRewinder build(java.lang.Object) -> build
    29:31:void register(com.bumptech.glide.load.data.DataRewinder$Factory) -> register
com.bumptech.glide.load.data.DataRewinderRegistry$1 -> com.bumptech.glide.load.data.DataRewinderRegistry$1:
    15:15:void <init>() -> <init>
    19:19:com.bumptech.glide.load.data.DataRewinder build(java.lang.Object) -> build
    25:25:java.lang.Class getDataClass() -> getDataClass
com.bumptech.glide.load.data.DataRewinderRegistry$DefaultRewinder -> com.bumptech.glide.load.data.DataRewinderRegistry$DefaultRewinder:
    56:58:void <init>(java.lang.Object) -> <init>
    69:69:void cleanup() -> cleanup
    63:63:java.lang.Object rewindAndGet() -> rewindAndGet
com.bumptech.glide.load.data.ExifOrientationStream -> com.bumptech.glide.load.data.ExifOrientationStream:
    18:62:void <clinit>() -> <clinit>
    67:72:void <init>(java.io.InputStream,int) -> <init>
    83:83:void mark(int) -> mark
    76:76:boolean markSupported() -> markSupported
    89:99:int read() -> read
    105:119:int read(byte[],int,int) -> read
    136:136:void reset() -> reset
    124:129:long skip(long) -> skip
com.bumptech.glide.load.data.FileDescriptorAssetPathFetcher -> com.bumptech.glide.load.data.FileDescriptorAssetPathFetcher:
    13:14:void <init>(android.content.res.AssetManager,java.lang.String) -> <init>
    11:11:void close(java.lang.Object) -> close
    24:25:void close(android.os.ParcelFileDescriptor) -> close
    30:30:java.lang.Class getDataClass() -> getDataClass
    11:11:java.lang.Object loadResource(android.content.res.AssetManager,java.lang.String) -> loadResource
    19:19:android.os.ParcelFileDescriptor loadResource(android.content.res.AssetManager,java.lang.String) -> loadResource
com.bumptech.glide.load.data.FileDescriptorLocalUriFetcher -> com.bumptech.glide.load.data.FileDescriptorLocalUriFetcher:
    16:17:void <init>(android.content.ContentResolver,android.net.Uri) -> <init>
    14:14:void close(java.lang.Object) -> close
    31:32:void close(android.os.ParcelFileDescriptor) -> close
    37:37:java.lang.Class getDataClass() -> getDataClass
    14:14:java.lang.Object loadResource(android.net.Uri,android.content.ContentResolver) -> loadResource
    22:26:android.os.ParcelFileDescriptor loadResource(android.net.Uri,android.content.ContentResolver) -> loadResource
com.bumptech.glide.load.data.HttpUrlFetcher -> com.bumptech.glide.load.data.HttpUrlFetcher:
    28:28:void <clinit>() -> <clinit>
    44:45:void <init>(com.bumptech.glide.load.model.GlideUrl,int) -> <init>
    48:52:void <init>(com.bumptech.glide.load.model.GlideUrl,int,com.bumptech.glide.load.data.HttpUrlFetcher$HttpUrlConnectionFactory) -> <init>
    173:174:void cancel() -> cancel
    156:167:void cleanup() -> cleanup
    179:179:java.lang.Class getDataClass() -> getDataClass
    185:185:com.bumptech.glide.load.DataSource getDataSource() -> getDataSource
    142:151:java.io.InputStream getStreamForSuccessfulRequest(java.net.HttpURLConnection) -> getStreamForSuccessfulRequest
    132:132:boolean isHttpOk(int) -> isHttpOk
    137:137:boolean isHttpRedirect(int) -> isHttpRedirect
    57:71:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback) -> loadData
    75:126:java.io.InputStream loadDataWithRedirects(java.net.URL,int,java.net.URL,java.util.Map) -> loadDataWithRedirects
com.bumptech.glide.load.data.HttpUrlFetcher$DefaultHttpUrlConnectionFactory -> com.bumptech.glide.load.data.HttpUrlFetcher$DefaultHttpUrlConnectionFactory:
    195:195:void <init>() -> <init>
    199:199:java.net.HttpURLConnection build(java.net.URL) -> build
com.bumptech.glide.load.data.InputStreamRewinder -> com.bumptech.glide.load.data.InputStreamRewinder:
    21:24:void <init>(java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    35:36:void cleanup() -> cleanup
    14:14:java.lang.Object rewindAndGet() -> rewindAndGet
    29:30:java.io.InputStream rewindAndGet() -> rewindAndGet
com.bumptech.glide.load.data.InputStreamRewinder$Factory -> com.bumptech.glide.load.data.InputStreamRewinder$Factory:
    45:47:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    42:42:com.bumptech.glide.load.data.DataRewinder build(java.lang.Object) -> build
    52:52:com.bumptech.glide.load.data.DataRewinder build(java.io.InputStream) -> build
    58:58:java.lang.Class getDataClass() -> getDataClass
com.bumptech.glide.load.data.LocalUriFetcher -> com.bumptech.glide.load.data.LocalUriFetcher:
    35:38:void <init>(android.content.ContentResolver,android.net.Uri) -> <init>
    69:69:void cancel() -> cancel
    57:64:void cleanup() -> cleanup
    74:74:com.bumptech.glide.load.DataSource getDataSource() -> getDataSource
    44:53:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback) -> loadData
com.bumptech.glide.load.data.StreamAssetPathFetcher -> com.bumptech.glide.load.data.StreamAssetPathFetcher:
    13:14:void <init>(android.content.res.AssetManager,java.lang.String) -> <init>
    11:11:void close(java.lang.Object) -> close
    23:24:void close(java.io.InputStream) -> close
    29:29:java.lang.Class getDataClass() -> getDataClass
    11:11:java.lang.Object loadResource(android.content.res.AssetManager,java.lang.String) -> loadResource
    18:18:java.io.InputStream loadResource(android.content.res.AssetManager,java.lang.String) -> loadResource
com.bumptech.glide.load.data.StreamLocalUriFetcher -> com.bumptech.glide.load.data.StreamLocalUriFetcher:
    44:51:void <clinit>() -> <clinit>
    54:55:void <init>(android.content.ContentResolver,android.net.Uri) -> <init>
    15:15:void close(java.lang.Object) -> close
    96:97:void close(java.io.InputStream) -> close
    102:102:java.lang.Class getDataClass() -> getDataClass
    15:15:java.lang.Object loadResource(android.net.Uri,android.content.ContentResolver) -> loadResource
    60:64:java.io.InputStream loadResource(android.net.Uri,android.content.ContentResolver) -> loadResource
    70:85:java.io.InputStream loadResourceFromUri(android.net.Uri,android.content.ContentResolver) -> loadResourceFromUri
    90:90:java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver,android.net.Uri) -> openContactPhotoInputStream
com.bumptech.glide.load.data.mediastore.FileService -> com.bumptech.glide.load.data.mediastore.FileService:
    5:5:void <init>() -> <init>
    7:7:boolean exists(java.io.File) -> exists
    15:15:java.io.File get(java.lang.String) -> get
    11:11:long length(java.io.File) -> length
com.bumptech.glide.load.data.mediastore.MediaStoreUtil -> com.bumptech.glide.load.data.mediastore.MediaStoreUtil:
    15:17:void <init>() -> <init>
    33:33:boolean isMediaStoreImageUri(android.net.Uri) -> isMediaStoreImageUri
    20:21:boolean isMediaStoreUri(android.net.Uri) -> isMediaStoreUri
    29:29:boolean isMediaStoreVideoUri(android.net.Uri) -> isMediaStoreVideoUri
    37:37:boolean isThumbnailSize(int,int) -> isThumbnailSize
    25:25:boolean isVideoUri(android.net.Uri) -> isVideoUri
com.bumptech.glide.load.data.mediastore.ThumbFetcher -> com.bumptech.glide.load.data.mediastore.ThumbFetcher:
    49:52:void <init>(android.net.Uri,com.bumptech.glide.load.data.mediastore.ThumbnailStreamOpener) -> <init>
    41:45:com.bumptech.glide.load.data.mediastore.ThumbFetcher build(android.content.Context,android.net.Uri,com.bumptech.glide.load.data.mediastore.ThumbnailQuery) -> build
    33:33:com.bumptech.glide.load.data.mediastore.ThumbFetcher buildImageFetcher(android.content.Context,android.net.Uri) -> buildImageFetcher
    37:37:com.bumptech.glide.load.data.mediastore.ThumbFetcher buildVideoFetcher(android.content.Context,android.net.Uri) -> buildVideoFetcher
    98:98:void cancel() -> cancel
    86:93:void cleanup() -> cleanup
    103:103:java.lang.Class getDataClass() -> getDataClass
    109:109:com.bumptech.glide.load.DataSource getDataSource() -> getDataSource
    58:68:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback) -> loadData
    71:81:java.io.InputStream openThumbInputStream() -> openThumbInputStream
com.bumptech.glide.load.data.mediastore.ThumbFetcher$ImageThumbnailQuery -> com.bumptech.glide.load.data.mediastore.ThumbFetcher$ImageThumbnailQuery:
    148:148:void <clinit>() -> <clinit>
    144:146:void <init>(android.content.ContentResolver) -> <init>
    157:158:android.database.Cursor query(android.net.Uri) -> query
com.bumptech.glide.load.data.mediastore.ThumbFetcher$VideoThumbnailQuery -> com.bumptech.glide.load.data.mediastore.ThumbFetcher$VideoThumbnailQuery:
    120:120:void <clinit>() -> <clinit>
    116:118:void <init>(android.content.ContentResolver) -> <init>
    129:130:android.database.Cursor query(android.net.Uri) -> query
com.bumptech.glide.load.data.mediastore.ThumbnailStreamOpener -> com.bumptech.glide.load.data.mediastore.ThumbnailStreamOpener:
    21:21:void <clinit>() -> <clinit>
    32:33:void <init>(java.util.List,com.bumptech.glide.load.data.mediastore.ThumbnailQuery,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,android.content.ContentResolver) -> <init>
    40:46:void <init>(java.util.List,com.bumptech.glide.load.data.mediastore.FileService,com.bumptech.glide.load.data.mediastore.ThumbnailQuery,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,android.content.ContentResolver) -> <init>
    49:67:int getOrientation(android.net.Uri) -> getOrientation
    93:102:java.lang.String getPath(android.net.Uri) -> getPath
    108:108:boolean isValid(java.io.File) -> isValid
    71:87:java.io.InputStream open(android.net.Uri) -> open
com.bumptech.glide.load.engine.ActiveResources -> com.bumptech.glide.load.engine.ActiveResources:
    34:51:void <init>(boolean) -> <init>
    23:66:void <init>(boolean,java.util.concurrent.Executor) -> <init>
    76:85:void activate(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource) -> activate
    130:145:void cleanReferenceQueue() -> cleanReferenceQueue
    113:126:void cleanupActiveReference(com.bumptech.glide.load.engine.ActiveResources$ResourceWeakReference) -> cleanupActiveReference
    87:92:void deactivate(com.bumptech.glide.load.Key) -> deactivate
    95:105:com.bumptech.glide.load.engine.EngineResource get(com.bumptech.glide.load.Key) -> get
    149:150:void setDequeuedResourceCallback(com.bumptech.glide.load.engine.ActiveResources$DequeuedResourceCallback) -> setDequeuedResourceCallback
    69:74:void setListener(com.bumptech.glide.load.engine.EngineResource$ResourceListener) -> setListener
    159:164:void shutdown() -> shutdown
com.bumptech.glide.load.engine.ActiveResources$1 -> com.bumptech.glide.load.engine.ActiveResources$1:
    37:37:void <init>() -> <init>
    40:40:java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.bumptech.glide.load.engine.ActiveResources$1$1 -> com.bumptech.glide.load.engine.ActiveResources$1$1:
    41:41:void <init>(com.bumptech.glide.load.engine.ActiveResources$1,java.lang.Runnable) -> <init>
    44:46:void run() -> run
com.bumptech.glide.load.engine.ActiveResources$2 -> com.bumptech.glide.load.engine.ActiveResources$2:
    60:60:void <init>(com.bumptech.glide.load.engine.ActiveResources) -> <init>
    63:64:void run() -> run
com.bumptech.glide.load.engine.ActiveResources$ResourceWeakReference -> com.bumptech.glide.load.engine.ActiveResources$ResourceWeakReference:
    180:186:void <init>(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource,java.lang.ref.ReferenceQueue,boolean) -> <init>
    189:191:void reset() -> reset
com.bumptech.glide.load.engine.CallbackException -> com.bumptech.glide.load.engine.CallbackException:
    13:14:void <init>(java.lang.Throwable) -> <init>
com.bumptech.glide.load.engine.DataCacheGenerator -> com.bumptech.glide.load.engine.DataCacheGenerator:
    34:35:void <init>(com.bumptech.glide.load.engine.DecodeHelper,com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback) -> <init>
    23:43:void <init>(java.util.List,com.bumptech.glide.load.engine.DecodeHelper,com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback) -> <init>
    87:91:void cancel() -> cancel
    82:82:boolean hasNextModelLoader() -> hasNextModelLoader
    95:96:void onDataReady(java.lang.Object) -> onDataReady
    100:101:void onLoadFailed(java.lang.Exception) -> onLoadFailed
    47:78:boolean startNext() -> startNext
com.bumptech.glide.load.engine.DataCacheKey -> com.bumptech.glide.load.engine.DataCacheKey:
    15:18:void <init>(com.bumptech.glide.load.Key,com.bumptech.glide.load.Key) -> <init>
    26:30:boolean equals(java.lang.Object) -> equals
    21:21:com.bumptech.glide.load.Key getSourceKey() -> getSourceKey
    35:37:int hashCode() -> hashCode
    42:42:java.lang.String toString() -> toString
    50:52:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.engine.DataCacheWriter -> com.bumptech.glide.load.engine.DataCacheWriter:
    23:27:void <init>(com.bumptech.glide.load.Encoder,java.lang.Object,com.bumptech.glide.load.Options) -> <init>
    31:31:boolean write(java.io.File) -> write
com.bumptech.glide.load.engine.DecodeHelper -> com.bumptech.glide.load.engine.DecodeHelper:
    23:26:void <init>() -> <init>
    79:93:void clear() -> clear
    124:124:com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool getArrayPool() -> getArrayPool
    220:237:java.util.List getCacheKeys() -> getCacheKeys
    96:96:com.bumptech.glide.load.engine.cache.DiskCache getDiskCache() -> getDiskCache
    100:100:com.bumptech.glide.load.engine.DiskCacheStrategy getDiskCacheStrategy() -> getDiskCacheStrategy
    120:120:int getHeight() -> getHeight
    202:216:java.util.List getLoadData() -> getLoadData
    145:145:com.bumptech.glide.load.engine.LoadPath getLoadPath(java.lang.Class) -> getLoadPath
    132:132:java.lang.Class getModelClass() -> getModelClass
    186:186:java.util.List getModelLoaders(java.io.File) -> getModelLoaders
    108:108:com.bumptech.glide.load.Options getOptions() -> getOptions
    104:104:com.bumptech.glide.Priority getPriority() -> getPriority
    136:137:java.util.List getRegisteredResourceClasses() -> getRegisteredResourceClasses
    181:181:com.bumptech.glide.load.ResourceEncoder getResultEncoder(com.bumptech.glide.load.engine.Resource) -> getResultEncoder
    112:112:com.bumptech.glide.load.Key getSignature() -> getSignature
    241:241:com.bumptech.glide.load.Encoder getSourceEncoder(java.lang.Object) -> getSourceEncoder
    128:128:java.lang.Class getTranscodeClass() -> getTranscodeClass
    154:173:com.bumptech.glide.load.Transformation getTransformation(java.lang.Class) -> getTransformation
    116:116:int getWidth() -> getWidth
    141:141:boolean hasLoadPath(java.lang.Class) -> hasLoadPath
    61:76:void init(com.bumptech.glide.GlideContext,java.lang.Object,com.bumptech.glide.load.Key,int,int,com.bumptech.glide.load.engine.DiskCacheStrategy,java.lang.Class,java.lang.Class,com.bumptech.glide.Priority,com.bumptech.glide.load.Options,java.util.Map,boolean,boolean,com.bumptech.glide.load.engine.DecodeJob$DiskCacheProvider) -> init
    177:177:boolean isResourceEncoderAvailable(com.bumptech.glide.load.engine.Resource) -> isResourceEncoderAvailable
    149:149:boolean isScaleOnlyOrNoTransform() -> isScaleOnlyOrNoTransform
    190:198:boolean isSourceKey(com.bumptech.glide.load.Key) -> isSourceKey
com.bumptech.glide.load.engine.DecodeJob -> com.bumptech.glide.load.engine.DecodeJob:
    44:82:void <init>(com.bumptech.glide.load.engine.DecodeJob$DiskCacheProvider,androidx.core.util.Pools$Pool) -> <init>
    212:217:void cancel() -> cancel
    38:38:int compareTo(java.lang.Object) -> compareTo
    200:204:int compareTo(com.bumptech.glide.load.engine.DecodeJob) -> compareTo
    462:472:com.bumptech.glide.load.engine.Resource decodeFromData(com.bumptech.glide.load.data.DataFetcher,java.lang.Object,com.bumptech.glide.load.DataSource) -> decodeFromData
    479:480:com.bumptech.glide.load.engine.Resource decodeFromFetcher(java.lang.Object,com.bumptech.glide.load.DataSource) -> decodeFromFetcher
    410:428:void decodeFromRetrievedData() -> decodeFromRetrievedData
    290:300:com.bumptech.glide.load.engine.DataFetcherGenerator getNextGenerator() -> getNextGenerator
    349:363:com.bumptech.glide.load.engine.DecodeJob$Stage getNextStage(com.bumptech.glide.load.engine.DecodeJob$Stage) -> getNextStage
    485:506:com.bumptech.glide.load.Options getOptionsWithHardwareConfig(com.bumptech.glide.load.DataSource) -> getOptionsWithHardwareConfig
    208:208:int getPriority() -> getPriority
    535:535:com.bumptech.glide.util.pool.StateVerifier getVerifier() -> getVerifier
    102:130:com.bumptech.glide.load.engine.DecodeJob init(com.bumptech.glide.GlideContext,java.lang.Object,com.bumptech.glide.load.engine.EngineKey,com.bumptech.glide.load.Key,int,int,java.lang.Class,java.lang.Class,com.bumptech.glide.Priority,com.bumptech.glide.load.engine.DiskCacheStrategy,java.util.Map,boolean,boolean,boolean,com.bumptech.glide.load.Options,com.bumptech.glide.load.engine.DecodeJob$Callback,int) -> init
    523:524:void logWithTimeAndKey(java.lang.String,long) -> logWithTimeAndKey
    527:530:void logWithTimeAndKey(java.lang.String,long,java.lang.String) -> logWithTimeAndKey
    335:337:void notifyComplete(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.DataSource) -> notifyComplete
    431:457:void notifyEncodeAndRelease(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.DataSource) -> notifyEncodeAndRelease
    328:332:void notifyFailed() -> notifyFailed
    397:407:void onDataFetcherFailed(com.bumptech.glide.load.Key,java.lang.Exception,com.bumptech.glide.load.data.DataFetcher,com.bumptech.glide.load.DataSource) -> onDataFetcherFailed
    376:392:void onDataFetcherReady(com.bumptech.glide.load.Key,java.lang.Object,com.bumptech.glide.load.data.DataFetcher,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.Key) -> onDataFetcherReady
    159:162:void onEncodeComplete() -> onEncodeComplete
    168:171:void onLoadFailed() -> onLoadFailed
    543:597:com.bumptech.glide.load.engine.Resource onResourceDecoded(com.bumptech.glide.load.DataSource,com.bumptech.glide.load.engine.Resource) -> onResourceDecoded
    149:152:void release(boolean) -> release
    174:196:void releaseInternal() -> releaseInternal
    369:371:void reschedule() -> reschedule
    226:269:void run() -> run
    305:325:void runGenerators() -> runGenerators
    511:518:com.bumptech.glide.load.engine.Resource runLoadPath(java.lang.Object,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.engine.LoadPath) -> runLoadPath
    272:287:void runWrapped() -> runWrapped
    340:346:void setNotifiedOrThrow() -> setNotifiedOrThrow
    138:139:boolean willDecodeFromCache() -> willDecodeFromCache
com.bumptech.glide.load.engine.DecodeJob$1 -> com.bumptech.glide.load.engine.DecodeJob$1:
    272:573:void <clinit>() -> <clinit>
com.bumptech.glide.load.engine.DecodeJob$DecodeCallback -> com.bumptech.glide.load.engine.DecodeJob$DecodeCallback:
    605:607:void <init>(com.bumptech.glide.load.engine.DecodeJob,com.bumptech.glide.load.DataSource) -> <init>
    612:612:com.bumptech.glide.load.engine.Resource onResourceDecoded(com.bumptech.glide.load.engine.Resource) -> onResourceDecoded
com.bumptech.glide.load.engine.DecodeJob$DeferredEncodeManager -> com.bumptech.glide.load.engine.DecodeJob$DeferredEncodeManager:
    663:663:void <init>() -> <init>
    689:692:void clear() -> clear
    674:682:void encode(com.bumptech.glide.load.engine.DecodeJob$DiskCacheProvider,com.bumptech.glide.load.Options) -> encode
    685:685:boolean hasResourceToEncode() -> hasResourceToEncode
    668:671:void init(com.bumptech.glide.load.Key,com.bumptech.glide.load.ResourceEncoder,com.bumptech.glide.load.engine.LockedResource) -> init
com.bumptech.glide.load.engine.DecodeJob$ReleaseManager -> com.bumptech.glide.load.engine.DecodeJob$ReleaseManager:
    625:625:void <init>() -> <init>
    649:649:boolean isComplete(boolean) -> isComplete
    632:634:boolean onEncodeComplete() -> onEncodeComplete
    637:639:boolean onFailed() -> onFailed
    627:629:boolean release(boolean) -> release
    642:646:void reset() -> reset
com.bumptech.glide.load.engine.DecodeJob$RunReason -> com.bumptech.glide.load.engine.DecodeJob$RunReason:
    711:722:void <clinit>() -> <clinit>
    711:711:void <init>(java.lang.String,int) -> <init>
    711:711:com.bumptech.glide.load.engine.DecodeJob$RunReason valueOf(java.lang.String) -> valueOf
    711:711:com.bumptech.glide.load.engine.DecodeJob$RunReason[] values() -> values
com.bumptech.glide.load.engine.DecodeJob$Stage -> com.bumptech.glide.load.engine.DecodeJob$Stage:
    728:740:void <clinit>() -> <clinit>
    728:728:void <init>(java.lang.String,int) -> <init>
    728:728:com.bumptech.glide.load.engine.DecodeJob$Stage valueOf(java.lang.String) -> valueOf
    728:728:com.bumptech.glide.load.engine.DecodeJob$Stage[] values() -> values
com.bumptech.glide.load.engine.DecodePath -> com.bumptech.glide.load.engine.DecodePath:
    34:41:void <init>(java.lang.Class,java.lang.Class,java.lang.Class,java.util.List,com.bumptech.glide.load.resource.transcode.ResourceTranscoder,androidx.core.util.Pools$Pool) -> <init>
    45:47:com.bumptech.glide.load.engine.Resource decode(com.bumptech.glide.load.data.DataRewinder,int,int,com.bumptech.glide.load.Options,com.bumptech.glide.load.engine.DecodePath$DecodeCallback) -> decode
    53:57:com.bumptech.glide.load.engine.Resource decodeResource(com.bumptech.glide.load.data.DataRewinder,int,int,com.bumptech.glide.load.Options) -> decodeResource
    64:91:com.bumptech.glide.load.engine.Resource decodeResourceWithList(com.bumptech.glide.load.data.DataRewinder,int,int,com.bumptech.glide.load.Options,java.util.List) -> decodeResourceWithList
    96:96:java.lang.String toString() -> toString
com.bumptech.glide.load.engine.DiskCacheStrategy -> com.bumptech.glide.load.engine.DiskCacheStrategy:
    15:123:void <clinit>() -> <clinit>
    9:9:void <init>() -> <init>
com.bumptech.glide.load.engine.DiskCacheStrategy$1 -> com.bumptech.glide.load.engine.DiskCacheStrategy$1:
    15:15:void <init>() -> <init>
    34:34:boolean decodeCachedData() -> decodeCachedData
    29:29:boolean decodeCachedResource() -> decodeCachedResource
    18:18:boolean isDataCacheable(com.bumptech.glide.load.DataSource) -> isDataCacheable
    24:24:boolean isResourceCacheable(boolean,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.EncodeStrategy) -> isResourceCacheable
com.bumptech.glide.load.engine.DiskCacheStrategy$2 -> com.bumptech.glide.load.engine.DiskCacheStrategy$2:
    41:41:void <init>() -> <init>
    60:60:boolean decodeCachedData() -> decodeCachedData
    55:55:boolean decodeCachedResource() -> decodeCachedResource
    44:44:boolean isDataCacheable(com.bumptech.glide.load.DataSource) -> isDataCacheable
    50:50:boolean isResourceCacheable(boolean,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.EncodeStrategy) -> isResourceCacheable
com.bumptech.glide.load.engine.DiskCacheStrategy$3 -> com.bumptech.glide.load.engine.DiskCacheStrategy$3:
    67:67:void <init>() -> <init>
    86:86:boolean decodeCachedData() -> decodeCachedData
    81:81:boolean decodeCachedResource() -> decodeCachedResource
    70:70:boolean isDataCacheable(com.bumptech.glide.load.DataSource) -> isDataCacheable
    76:76:boolean isResourceCacheable(boolean,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.EncodeStrategy) -> isResourceCacheable
com.bumptech.glide.load.engine.DiskCacheStrategy$4 -> com.bumptech.glide.load.engine.DiskCacheStrategy$4:
    93:93:void <init>() -> <init>
    112:112:boolean decodeCachedData() -> decodeCachedData
    107:107:boolean decodeCachedResource() -> decodeCachedResource
    96:96:boolean isDataCacheable(com.bumptech.glide.load.DataSource) -> isDataCacheable
    102:102:boolean isResourceCacheable(boolean,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.EncodeStrategy) -> isResourceCacheable
com.bumptech.glide.load.engine.DiskCacheStrategy$5 -> com.bumptech.glide.load.engine.DiskCacheStrategy$5:
    123:123:void <init>() -> <init>
    144:144:boolean decodeCachedData() -> decodeCachedData
    139:139:boolean decodeCachedResource() -> decodeCachedResource
    126:126:boolean isDataCacheable(com.bumptech.glide.load.DataSource) -> isDataCacheable
    132:132:boolean isResourceCacheable(boolean,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.EncodeStrategy) -> isResourceCacheable
com.bumptech.glide.load.engine.Engine -> com.bumptech.glide.load.engine.Engine:
    35:35:void <clinit>() -> <clinit>
    53:67:void <init>(com.bumptech.glide.load.engine.cache.MemoryCache,com.bumptech.glide.load.engine.cache.DiskCache$Factory,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,boolean) -> <init>
    82:120:void <init>(com.bumptech.glide.load.engine.cache.MemoryCache,com.bumptech.glide.load.engine.cache.DiskCache$Factory,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.Jobs,com.bumptech.glide.load.engine.EngineKeyFactory,com.bumptech.glide.load.engine.ActiveResources,com.bumptech.glide.load.engine.Engine$EngineJobFactory,com.bumptech.glide.load.engine.Engine$DecodeJobFactory,com.bumptech.glide.load.engine.ResourceRecycler,boolean) -> <init>
    329:330:void clearDiskCache() -> clearDiskCache
    270:281:com.bumptech.glide.load.engine.EngineResource getEngineResourceFromCache(com.bumptech.glide.load.Key) -> getEngineResourceFromCache
    168:236:com.bumptech.glide.load.engine.Engine$LoadStatus load(com.bumptech.glide.GlideContext,java.lang.Object,com.bumptech.glide.load.Key,int,int,java.lang.Class,java.lang.Class,com.bumptech.glide.Priority,com.bumptech.glide.load.engine.DiskCacheStrategy,java.util.Map,boolean,boolean,com.bumptech.glide.load.Options,boolean,boolean,boolean,boolean,com.bumptech.glide.request.ResourceCallback,java.util.concurrent.Executor) -> load
    245:253:com.bumptech.glide.load.engine.EngineResource loadFromActiveResources(com.bumptech.glide.load.Key,boolean) -> loadFromActiveResources
    257:266:com.bumptech.glide.load.engine.EngineResource loadFromCache(com.bumptech.glide.load.Key,boolean) -> loadFromCache
    240:241:void logWithTimeAndKey(java.lang.String,long,com.bumptech.glide.load.Key) -> logWithTimeAndKey
    309:311:void onEngineJobCancelled(com.bumptech.glide.load.engine.EngineJob,com.bumptech.glide.load.Key) -> onEngineJobCancelled
    296:306:void onEngineJobComplete(com.bumptech.glide.load.engine.EngineJob,com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource) -> onEngineJobComplete
    319:326:void onResourceReleased(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource) -> onResourceReleased
    315:316:void onResourceRemoved(com.bumptech.glide.load.engine.Resource) -> onResourceRemoved
    285:290:void release(com.bumptech.glide.load.engine.Resource) -> release
    334:337:void shutdown() -> shutdown
com.bumptech.glide.load.engine.Engine$DecodeJobFactory -> com.bumptech.glide.load.engine.Engine$DecodeJobFactory:
    400:412:void <init>(com.bumptech.glide.load.engine.DecodeJob$DiskCacheProvider) -> <init>
    431:432:com.bumptech.glide.load.engine.DecodeJob build(com.bumptech.glide.GlideContext,java.lang.Object,com.bumptech.glide.load.engine.EngineKey,com.bumptech.glide.load.Key,int,int,java.lang.Class,java.lang.Class,com.bumptech.glide.Priority,com.bumptech.glide.load.engine.DiskCacheStrategy,java.util.Map,boolean,boolean,boolean,com.bumptech.glide.load.Options,com.bumptech.glide.load.engine.DecodeJob$Callback) -> build
com.bumptech.glide.load.engine.Engine$DecodeJobFactory$1 -> com.bumptech.glide.load.engine.Engine$DecodeJobFactory$1:
    402:402:void <init>(com.bumptech.glide.load.engine.Engine$DecodeJobFactory) -> <init>
    402:402:java.lang.Object create() -> create
    405:405:com.bumptech.glide.load.engine.DecodeJob create() -> create
com.bumptech.glide.load.engine.Engine$EngineJobFactory -> com.bumptech.glide.load.engine.Engine$EngineJobFactory:
    460:487:void <init>(com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.EngineJobListener) -> <init>
    504:505:com.bumptech.glide.load.engine.EngineJob build(com.bumptech.glide.load.Key,boolean,boolean,boolean,boolean) -> build
    491:495:void shutdown() -> shutdown
com.bumptech.glide.load.engine.Engine$EngineJobFactory$1 -> com.bumptech.glide.load.engine.Engine$EngineJobFactory$1:
    463:463:void <init>(com.bumptech.glide.load.engine.Engine$EngineJobFactory) -> <init>
    463:463:java.lang.Object create() -> create
    466:466:com.bumptech.glide.load.engine.EngineJob create() -> create
com.bumptech.glide.load.engine.Engine$LazyDiskCacheProvider -> com.bumptech.glide.load.engine.Engine$LazyDiskCacheProvider:
    369:371:void <init>(com.bumptech.glide.load.engine.cache.DiskCache$Factory) -> <init>
    374:379:void clearDiskCacheIfCreated() -> clearDiskCacheIfCreated
    383:393:com.bumptech.glide.load.engine.cache.DiskCache getDiskCache() -> getDiskCache
com.bumptech.glide.load.engine.Engine$LoadStatus -> com.bumptech.glide.load.engine.Engine$LoadStatus:
    348:351:void <init>(com.bumptech.glide.load.engine.Engine,com.bumptech.glide.request.ResourceCallback,com.bumptech.glide.load.engine.EngineJob) -> <init>
    358:361:void cancel() -> cancel
com.bumptech.glide.load.engine.EngineJob -> com.bumptech.glide.load.engine.EngineJob:
    27:27:void <clinit>() -> <clinit>
    78:86:void <init>(com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.EngineJobListener,androidx.core.util.Pools$Pool) -> <init>
    29:104:void <init>(com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.executor.GlideExecutor,com.bumptech.glide.load.engine.EngineJobListener,androidx.core.util.Pools$Pool,com.bumptech.glide.load.engine.EngineJob$EngineResourceFactory) -> <init>
    129:143:void addCallback(com.bumptech.glide.request.ResourceCallback,java.util.concurrent.Executor) -> addCallback
    164:169:void callCallbackOnLoadFailed(com.bumptech.glide.request.ResourceCallback) -> callCallbackOnLoadFailed
    151:156:void callCallbackOnResourceReady(com.bumptech.glide.request.ResourceCallback) -> callCallbackOnResourceReady
    194:201:void cancel() -> cancel
    266:278:void decrementPendingCallbacks() -> decrementPendingCallbacks
    188:189:com.bumptech.glide.load.engine.executor.GlideExecutor getActiveSourceExecutor() -> getActiveSourceExecutor
    361:361:com.bumptech.glide.util.pool.StateVerifier getVerifier() -> getVerifier
    257:262:void incrementPendingCallbacks(int) -> incrementPendingCallbacks
    112:118:com.bumptech.glide.load.engine.EngineJob init(com.bumptech.glide.load.Key,boolean,boolean,boolean,boolean) -> init
    205:205:boolean isCancelled() -> isCancelled
    209:209:boolean isDone() -> isDone
    330:356:void notifyCallbacksOfException() -> notifyCallbacksOfException
    221:253:void notifyCallbacksOfResult() -> notifyCallbacksOfResult
    309:313:void onLoadFailed(com.bumptech.glide.load.engine.GlideException) -> onLoadFailed
    300:305:void onResourceReady(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.DataSource) -> onResourceReady
    184:184:boolean onlyRetrieveFromCache() -> onlyRetrieveFromCache
    280:296:void release() -> release
    171:181:void removeCallback(com.bumptech.glide.request.ResourceCallback) -> removeCallback
    319:320:void reschedule(com.bumptech.glide.load.engine.DecodeJob) -> reschedule
    121:127:void start(com.bumptech.glide.load.engine.DecodeJob) -> start
com.bumptech.glide.load.engine.EngineJob$CallLoadFailed -> com.bumptech.glide.load.engine.EngineJob$CallLoadFailed:
    368:370:void <init>(com.bumptech.glide.load.engine.EngineJob,com.bumptech.glide.request.ResourceCallback) -> <init>
    374:381:void run() -> run
com.bumptech.glide.load.engine.EngineJob$CallResourceReady -> com.bumptech.glide.load.engine.EngineJob$CallResourceReady:
    388:390:void <init>(com.bumptech.glide.load.engine.EngineJob,com.bumptech.glide.request.ResourceCallback) -> <init>
    394:403:void run() -> run
com.bumptech.glide.load.engine.EngineJob$EngineResourceFactory -> com.bumptech.glide.load.engine.EngineJob$EngineResourceFactory:
    482:482:void <init>() -> <init>
    484:484:com.bumptech.glide.load.engine.EngineResource build(com.bumptech.glide.load.engine.Resource,boolean) -> build
com.bumptech.glide.load.engine.EngineJob$ResourceCallbackAndExecutor -> com.bumptech.glide.load.engine.EngineJob$ResourceCallbackAndExecutor:
    461:464:void <init>(com.bumptech.glide.request.ResourceCallback,java.util.concurrent.Executor) -> <init>
    468:472:boolean equals(java.lang.Object) -> equals
    477:477:int hashCode() -> hashCode
com.bumptech.glide.load.engine.EngineJob$ResourceCallbacksAndExecutors -> com.bumptech.glide.load.engine.EngineJob$ResourceCallbacksAndExecutors:
    411:412:void <init>() -> <init>
    414:416:void <init>(java.util.List) -> <init>
    419:420:void add(com.bumptech.glide.request.ResourceCallback,java.util.concurrent.Executor) -> add
    439:440:void clear() -> clear
    427:427:boolean contains(com.bumptech.glide.request.ResourceCallback) -> contains
    443:443:com.bumptech.glide.load.engine.EngineJob$ResourceCallbacksAndExecutors copy() -> copy
    447:447:com.bumptech.glide.load.engine.EngineJob$ResourceCallbackAndExecutor defaultCallbackAndExecutor(com.bumptech.glide.request.ResourceCallback) -> defaultCallbackAndExecutor
    431:431:boolean isEmpty() -> isEmpty
    453:453:java.util.Iterator iterator() -> iterator
    423:424:void remove(com.bumptech.glide.request.ResourceCallback) -> remove
    435:435:int size() -> size
com.bumptech.glide.load.engine.EngineKey -> com.bumptech.glide.load.engine.EngineKey:
    33:44:void <init>(java.lang.Object,com.bumptech.glide.load.Key,int,int,java.util.Map,java.lang.Class,java.lang.Class,com.bumptech.glide.load.Options) -> <init>
    48:59:boolean equals(java.lang.Object) -> equals
    64:74:int hashCode() -> hashCode
    79:79:java.lang.String toString() -> toString
    94:94:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.engine.EngineKeyFactory -> com.bumptech.glide.load.engine.EngineKeyFactory:
    8:8:void <init>() -> <init>
    14:14:com.bumptech.glide.load.engine.EngineKey buildKey(java.lang.Object,com.bumptech.glide.load.Key,int,int,java.util.Map,java.lang.Class,java.lang.Class,com.bumptech.glide.load.Options) -> buildKey
com.bumptech.glide.load.engine.EngineResource -> com.bumptech.glide.load.engine.EngineResource:
    27:31:void <init>(com.bumptech.glide.load.engine.Resource,boolean,boolean) -> <init>
    86:91:void acquire() -> acquire
    55:55:java.lang.Object get() -> get
    39:39:com.bumptech.glide.load.engine.Resource getResource() -> getResource
    49:49:java.lang.Class getResourceClass() -> getResourceClass
    60:60:int getSize() -> getSize
    43:43:boolean isCacheable() -> isCacheable
    64:75:void recycle() -> recycle
    107:117:void release() -> release
    33:36:void setResourceListener(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineResource$ResourceListener) -> setResourceListener
    121:121:java.lang.String toString() -> toString
com.bumptech.glide.load.engine.GlideException -> com.bumptech.glide.load.engine.GlideException:
    23:23:void <clinit>() -> <clinit>
    34:35:void <init>(java.lang.String) -> <init>
    38:39:void <init>(java.lang.String,java.lang.Throwable) -> <init>
    41:45:void <init>(java.lang.String,java.util.List) -> <init>
    127:135:void addRootCauses(java.lang.Throwable,java.util.List) -> addRootCauses
    199:203:void appendCauses(java.util.List,java.lang.Appendable) -> appendCauses
    208:224:void appendCausesWrapped(java.util.List,java.lang.Appendable) -> appendCausesWrapped
    188:192:void appendExceptionMessage(java.lang.Throwable,java.lang.Appendable) -> appendExceptionMessage
    83:83:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
    95:95:java.util.List getCauses() -> getCauses
    161:180:java.lang.String getMessage() -> getMessage
    74:74:java.lang.Exception getOrigin() -> getOrigin
    107:109:java.util.List getRootCauses() -> getRootCauses
    120:124:void logRootCauses(java.lang.String) -> logRootCauses
    139:140:void printStackTrace() -> printStackTrace
    144:145:void printStackTrace(java.io.PrintStream) -> printStackTrace
    149:150:void printStackTrace(java.io.PrintWriter) -> printStackTrace
    153:155:void printStackTrace(java.lang.Appendable) -> printStackTrace
    48:49:void setLoggingDetails(com.bumptech.glide.load.Key,com.bumptech.glide.load.DataSource) -> setLoggingDetails
    52:55:void setLoggingDetails(com.bumptech.glide.load.Key,com.bumptech.glide.load.DataSource,java.lang.Class) -> setLoggingDetails
    63:64:void setOrigin(java.lang.Exception) -> setOrigin
com.bumptech.glide.load.engine.GlideException$IndentedAppendable -> com.bumptech.glide.load.engine.GlideException$IndentedAppendable:
    230:234:void <init>(java.lang.Appendable) -> <init>
    238:244:java.lang.Appendable append(char) -> append
    249:250:java.lang.Appendable append(java.lang.CharSequence) -> append
    256:263:java.lang.Appendable append(java.lang.CharSequence,int,int) -> append
    268:271:java.lang.CharSequence safeSequence(java.lang.CharSequence) -> safeSequence
com.bumptech.glide.load.engine.Jobs -> com.bumptech.glide.load.engine.Jobs:
    9:11:void <init>() -> <init>
    19:19:com.bumptech.glide.load.engine.EngineJob get(com.bumptech.glide.load.Key,boolean) -> get
    15:15:java.util.Map getAll() -> getAll
    34:34:java.util.Map getJobMap(boolean) -> getJobMap
    23:24:void put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineJob) -> put
    27:31:void removeIfCurrent(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.EngineJob) -> removeIfCurrent
com.bumptech.glide.load.engine.LoadPath -> com.bumptech.glide.load.engine.LoadPath:
    31:37:void <init>(java.lang.Class,java.lang.Class,java.lang.Class,java.util.List,androidx.core.util.Pools$Pool) -> <init>
    75:75:java.lang.Class getDataClass() -> getDataClass
    41:45:com.bumptech.glide.load.engine.Resource load(com.bumptech.glide.load.data.DataRewinder,com.bumptech.glide.load.Options,int,int,com.bumptech.glide.load.engine.DecodePath$DecodeCallback) -> load
    53:71:com.bumptech.glide.load.engine.Resource loadWithExceptionList(com.bumptech.glide.load.data.DataRewinder,com.bumptech.glide.load.Options,int,int,com.bumptech.glide.load.engine.DecodePath$DecodeCallback,java.util.List) -> loadWithExceptionList
    80:80:java.lang.String toString() -> toString
com.bumptech.glide.load.engine.LockedResource -> com.bumptech.glide.load.engine.LockedResource:
    19:19:void <clinit>() -> <clinit>
    26:41:void <init>() -> <init>
    75:75:java.lang.Object get() -> get
    69:69:java.lang.Class getResourceClass() -> getResourceClass
    80:80:int getSize() -> getSize
    97:97:com.bumptech.glide.util.pool.StateVerifier getVerifier() -> getVerifier
    44:47:void init(com.bumptech.glide.load.engine.Resource) -> init
    34:36:com.bumptech.glide.load.engine.LockedResource obtain(com.bumptech.glide.load.engine.Resource) -> obtain
    84:92:void recycle() -> recycle
    50:52:void release() -> release
    54:64:void unlock() -> unlock
com.bumptech.glide.load.engine.LockedResource$1 -> com.bumptech.glide.load.engine.LockedResource$1:
    20:20:void <init>() -> <init>
    20:20:java.lang.Object create() -> create
    23:23:com.bumptech.glide.load.engine.LockedResource create() -> create
com.bumptech.glide.load.engine.ResourceCacheGenerator -> com.bumptech.glide.load.engine.ResourceCacheGenerator:
    24:38:void <init>(com.bumptech.glide.load.engine.DecodeHelper,com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback) -> <init>
    112:116:void cancel() -> cancel
    107:107:boolean hasNextModelLoader() -> hasNextModelLoader
    120:122:void onDataReady(java.lang.Object) -> onDataReady
    126:127:void onLoadFailed(java.lang.Exception) -> onLoadFailed
    44:103:boolean startNext() -> startNext
com.bumptech.glide.load.engine.ResourceCacheKey -> com.bumptech.glide.load.engine.ResourceCacheKey:
    17:17:void <clinit>() -> <clinit>
    35:44:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,com.bumptech.glide.load.Key,com.bumptech.glide.load.Key,int,int,com.bumptech.glide.load.Transformation,java.lang.Class,com.bumptech.glide.load.Options) -> <init>
    48:57:boolean equals(java.lang.Object) -> equals
    91:96:byte[] getResourceClassBytes() -> getResourceClassBytes
    62:71:int hashCode() -> hashCode
    101:101:java.lang.String toString() -> toString
    77:88:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.engine.ResourceRecycler -> com.bumptech.glide.load.engine.ResourceRecycler:
    11:14:void <init>() -> <init>
    16:27:void recycle(com.bumptech.glide.load.engine.Resource) -> recycle
com.bumptech.glide.load.engine.ResourceRecycler$ResourceRecyclerCallback -> com.bumptech.glide.load.engine.ResourceRecycler$ResourceRecyclerCallback:
    33:33:void <init>() -> <init>
    37:42:boolean handleMessage(android.os.Message) -> handleMessage
com.bumptech.glide.load.engine.SourceGenerator -> com.bumptech.glide.load.engine.SourceGenerator:
    36:39:void <init>(com.bumptech.glide.load.engine.DecodeHelper,com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback) -> <init>
    73:93:void cacheData(java.lang.Object) -> cacheData
    97:101:void cancel() -> cancel
    69:69:boolean hasNextModelLoader() -> hasNextModelLoader
    141:142:void onDataFetcherFailed(com.bumptech.glide.load.Key,java.lang.Exception,com.bumptech.glide.load.data.DataFetcher,com.bumptech.glide.load.DataSource) -> onDataFetcherFailed
    135:136:void onDataFetcherReady(com.bumptech.glide.load.Key,java.lang.Object,com.bumptech.glide.load.data.DataFetcher,com.bumptech.glide.load.DataSource,com.bumptech.glide.load.Key) -> onDataFetcherReady
    105:115:void onDataReady(java.lang.Object) -> onDataReady
    119:120:void onLoadFailed(java.lang.Exception) -> onLoadFailed
    126:126:void reschedule() -> reschedule
    43:65:boolean startNext() -> startNext
com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy -> com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy:
    12:14:void <init>() -> <init>
    25:27:android.graphics.Bitmap get(int,int,android.graphics.Bitmap$Config) -> get
    56:56:java.lang.String getBitmapString(android.graphics.Bitmap) -> getBitmapString
    62:62:java.lang.String getBitmapString(int,int,android.graphics.Bitmap$Config) -> getBitmapString
    47:47:int getSize(android.graphics.Bitmap) -> getSize
    37:37:java.lang.String logBitmap(android.graphics.Bitmap) -> logBitmap
    42:42:java.lang.String logBitmap(int,int,android.graphics.Bitmap$Config) -> logBitmap
    18:21:void put(android.graphics.Bitmap) -> put
    32:32:android.graphics.Bitmap removeLast() -> removeLast
    52:52:java.lang.String toString() -> toString
com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key -> com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key:
    87:89:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$KeyPool) -> <init>
    99:103:boolean equals(java.lang.Object) -> equals
    108:111:int hashCode() -> hashCode
    92:95:void init(int,int,android.graphics.Bitmap$Config) -> init
    121:122:void offer() -> offer
    116:116:java.lang.String toString() -> toString
com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$KeyPool -> com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$KeyPool:
    66:66:void <init>() -> <init>
    65:65:com.bumptech.glide.load.engine.bitmap_recycle.Poolable create() -> create
    75:75:com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key create() -> create
    68:70:com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key get(int,int,android.graphics.Bitmap$Config) -> get
com.bumptech.glide.load.engine.bitmap_recycle.BaseKeyPool -> com.bumptech.glide.load.engine.bitmap_recycle.BaseKeyPool:
    6:8:void <init>() -> <init>
    11:15:com.bumptech.glide.load.engine.bitmap_recycle.Poolable get() -> get
    19:22:void offer(com.bumptech.glide.load.engine.bitmap_recycle.Poolable) -> offer
com.bumptech.glide.load.engine.bitmap_recycle.BitmapPoolAdapter -> com.bumptech.glide.load.engine.bitmap_recycle.BitmapPoolAdapter:
    11:11:void <init>() -> <init>
    42:42:void clearMemory() -> clearMemory
    30:30:android.graphics.Bitmap get(int,int,android.graphics.Bitmap$Config) -> get
    36:36:android.graphics.Bitmap getDirty(int,int,android.graphics.Bitmap$Config) -> getDirty
    14:14:long getMaxSize() -> getMaxSize
    24:25:void put(android.graphics.Bitmap) -> put
    20:20:void setSizeMultiplier(float) -> setSizeMultiplier
    47:47:void trimMemory(int) -> trimMemory
com.bumptech.glide.load.engine.bitmap_recycle.ByteArrayAdapter -> com.bumptech.glide.load.engine.bitmap_recycle.ByteArrayAdapter:
    7:7:void <init>() -> <init>
    6:6:int getArrayLength(java.lang.Object) -> getArrayLength
    17:17:int getArrayLength(byte[]) -> getArrayLength
    27:27:int getElementSizeInBytes() -> getElementSizeInBytes
    12:12:java.lang.String getTag() -> getTag
    6:6:java.lang.Object newArray(int) -> newArray
    22:22:byte[] newArray(int) -> newArray
com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap -> com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap:
    20:22:void <init>() -> <init>
    40:50:java.lang.Object get(com.bumptech.glide.load.engine.bitmap_recycle.Poolable) -> get
    98:102:void makeHead(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry) -> makeHead
    106:110:void makeTail(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry) -> makeTail
    25:36:void put(com.bumptech.glide.load.engine.bitmap_recycle.Poolable,java.lang.Object) -> put
    118:120:void removeEntry(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry) -> removeEntry
    55:77:java.lang.Object removeLast() -> removeLast
    82:93:java.lang.String toString() -> toString
    113:115:void updateEntry(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry) -> updateEntry
com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry -> com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry:
    131:132:void <init>() -> <init>
    134:137:void <init>(java.lang.Object) -> <init>
    150:154:void add(java.lang.Object) -> add
    141:142:java.lang.Object removeLast() -> removeLast
    146:146:int size() -> size
com.bumptech.glide.load.engine.bitmap_recycle.IntegerArrayAdapter -> com.bumptech.glide.load.engine.bitmap_recycle.IntegerArrayAdapter:
    7:7:void <init>() -> <init>
    6:6:int getArrayLength(java.lang.Object) -> getArrayLength
    17:17:int getArrayLength(int[]) -> getArrayLength
    27:27:int getElementSizeInBytes() -> getElementSizeInBytes
    12:12:java.lang.String getTag() -> getTag
    6:6:java.lang.Object newArray(int) -> newArray
    22:22:int[] newArray(int) -> newArray
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool -> com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool:
    30:40:void <init>() -> <init>
    30:49:void <init>(int) -> <init>
    135:137:void clearMemory() -> clearMemory
    167:178:void decrementArrayOfSize(int,java.lang.Class) -> decrementArrayOfSize
    150:151:void evict() -> evict
    154:164:void evictToSize(int) -> evictToSize
    85:93:java.lang.Object get(int,java.lang.Class) -> get
    191:191:com.bumptech.glide.load.engine.bitmap_recycle.ArrayAdapterInterface getAdapterFromObject(java.lang.Object) -> getAdapterFromObject
    196:208:com.bumptech.glide.load.engine.bitmap_recycle.ArrayAdapterInterface getAdapterFromType(java.lang.Class) -> getAdapterFromType
    118:118:java.lang.Object getArrayForKey(com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$Key) -> getArrayForKey
    213:220:int getCurrentSize() -> getCurrentSize
    79:81:java.lang.Object getExact(int,java.lang.Class) -> getExact
    97:110:java.lang.Object getForKey(com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$Key,java.lang.Class) -> getForKey
    181:186:java.util.NavigableMap getSizesForAdapter(java.lang.Class) -> getSizesForAdapter
    131:131:boolean isNoMoreThanHalfFull() -> isNoMoreThanHalfFull
    122:122:boolean isSmallEnoughForReuse(int) -> isSmallEnoughForReuse
    126:127:boolean mayFillRequest(int,java.lang.Integer) -> mayFillRequest
    54:55:void put(java.lang.Object,java.lang.Class) -> put
    59:76:void put(java.lang.Object) -> put
    140:147:void trimMemory(int) -> trimMemory
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$Key -> com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$Key:
    245:247:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$KeyPool) -> <init>
    256:260:boolean equals(java.lang.Object) -> equals
    275:277:int hashCode() -> hashCode
    250:252:void init(int,java.lang.Class) -> init
    270:271:void offer() -> offer
    265:265:java.lang.String toString() -> toString
com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$KeyPool -> com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$KeyPool:
    226:226:void <init>() -> <init>
    223:223:com.bumptech.glide.load.engine.bitmap_recycle.Poolable create() -> create
    236:236:com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$Key create() -> create
    229:231:com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$Key get(int,java.lang.Class) -> get
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool -> com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool:
    25:25:void <clinit>() -> <clinit>
    40:46:void <init>(long,com.bumptech.glide.load.engine.bitmap_recycle.LruPoolStrategy,java.util.Set) -> <init>
    54:55:void <init>(long) -> <init>
    68:69:void <init>(long,java.util.Set) -> <init>
    155:164:void assertNotHardwareConfig(android.graphics.Bitmap$Config) -> assertNotHardwareConfig
    208:212:void clearMemory() -> clearMemory
    149:149:android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config) -> createBitmap
    252:255:void dump() -> dump
    258:260:void dumpUnchecked() -> dumpUnchecked
    118:119:void evict() -> evict
    124:134:android.graphics.Bitmap get(int,int,android.graphics.Bitmap$Config) -> get
    274:284:java.util.Set getDefaultAllowedConfigs() -> getDefaultAllowedConfigs
    264:269:com.bumptech.glide.load.engine.bitmap_recycle.LruPoolStrategy getDefaultStrategy() -> getDefaultStrategy
    140:144:android.graphics.Bitmap getDirty(int,int,android.graphics.Bitmap$Config) -> getDirty
    168:189:android.graphics.Bitmap getDirtyOrNull(int,int,android.graphics.Bitmap$Config) -> getDirtyOrNull
    73:73:long getMaxSize() -> getMaxSize
    201:204:void maybeSetPreMultiplied(android.graphics.Bitmap) -> maybeSetPreMultiplied
    195:197:void normalize(android.graphics.Bitmap) -> normalize
    83:115:void put(android.graphics.Bitmap) -> put
    77:80:void setSizeMultiplier(float) -> setSizeMultiplier
    217:226:void trimMemory(int) -> trimMemory
    228:249:void trimToSize(long) -> trimToSize
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool$NullBitmapTracker -> com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool$NullBitmapTracker:
    320:320:void <init>() -> <init>
    325:325:void add(android.graphics.Bitmap) -> add
    330:330:void remove(android.graphics.Bitmap) -> remove
com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool$ThrowingBitmapTracker -> com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool$ThrowingBitmapTracker:
    295:296:void <init>() -> <init>
    300:306:void add(android.graphics.Bitmap) -> add
    310:314:void remove(android.graphics.Bitmap) -> remove
com.bumptech.glide.load.engine.bitmap_recycle.PrettyPrintTreeMap -> com.bumptech.glide.load.engine.bitmap_recycle.PrettyPrintTreeMap:
    7:7:void <init>() -> <init>
    10:18:java.lang.String toString() -> toString
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy -> com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy:
    34:54:void <clinit>() -> <clinit>
    29:59:void <init>() -> <init>
    117:132:void decrementBitmapOfSize(java.lang.Integer,android.graphics.Bitmap) -> decrementBitmapOfSize
    89:102:com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key findBestKey(int,android.graphics.Bitmap$Config) -> findBestKey
    76:85:android.graphics.Bitmap get(int,int,android.graphics.Bitmap$Config) -> get
    243:243:java.lang.String getBitmapString(int,android.graphics.Bitmap$Config) -> getBitmapString
    247:263:android.graphics.Bitmap$Config[] getInConfigs(android.graphics.Bitmap$Config) -> getInConfigs
    157:157:int getSize(android.graphics.Bitmap) -> getSize
    135:140:java.util.NavigableMap getSizesForConfig(android.graphics.Bitmap$Config) -> getSizesForConfig
    145:146:java.lang.String logBitmap(android.graphics.Bitmap) -> logBitmap
    151:152:java.lang.String logBitmap(int,int,android.graphics.Bitmap$Config) -> logBitmap
    63:71:void put(android.graphics.Bitmap) -> put
    108:113:android.graphics.Bitmap removeLast() -> removeLast
    162:173:java.lang.String toString() -> toString
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$1 -> com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$1:
    253:253:void <clinit>() -> <clinit>
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key -> com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key:
    198:200:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool) -> <init>
    204:206:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool,int,android.graphics.Bitmap$Config) -> <init>
    225:230:boolean equals(java.lang.Object) -> equals
    235:237:int hashCode() -> hashCode
    209:211:void init(int,android.graphics.Bitmap$Config) -> init
    215:216:void offer() -> offer
    220:220:java.lang.String toString() -> toString
com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool -> com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$KeyPool:
    177:177:void <init>() -> <init>
    176:176:com.bumptech.glide.load.engine.bitmap_recycle.Poolable create() -> create
    187:187:com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key create() -> create
    180:182:com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$Key get(int,android.graphics.Bitmap$Config) -> get
com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy -> com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy:
    19:23:void <init>() -> <init>
    71:77:void decrementBitmapOfSize(java.lang.Integer) -> decrementBitmapOfSize
    39:56:android.graphics.Bitmap get(int,int,android.graphics.Bitmap$Config) -> get
    101:102:java.lang.String getBitmapString(android.graphics.Bitmap) -> getBitmapString
    106:106:java.lang.String getBitmapString(int) -> getBitmapString
    92:92:int getSize(android.graphics.Bitmap) -> getSize
    81:81:java.lang.String logBitmap(android.graphics.Bitmap) -> logBitmap
    86:87:java.lang.String logBitmap(int,int,android.graphics.Bitmap$Config) -> logBitmap
    27:34:void put(android.graphics.Bitmap) -> put
    62:67:android.graphics.Bitmap removeLast() -> removeLast
    97:97:java.lang.String toString() -> toString
com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$Key -> com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$Key:
    130:132:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$KeyPool) -> <init>
    140:144:boolean equals(java.lang.Object) -> equals
    149:149:int hashCode() -> hashCode
    135:136:void init(int) -> init
    161:162:void offer() -> offer
    156:156:java.lang.String toString() -> toString
com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$KeyPool -> com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$KeyPool:
    111:111:void <init>() -> <init>
    110:110:com.bumptech.glide.load.engine.bitmap_recycle.Poolable create() -> create
    121:121:com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$Key create() -> create
    114:116:com.bumptech.glide.load.engine.bitmap_recycle.SizeStrategy$Key get(int) -> get
com.bumptech.glide.load.engine.cache.DiskCacheAdapter -> com.bumptech.glide.load.engine.cache.DiskCacheAdapter:
    9:9:void <init>() -> <init>
    29:29:void clear() -> clear
    24:24:void delete(com.bumptech.glide.load.Key) -> delete
    13:13:java.io.File get(com.bumptech.glide.load.Key) -> get
    19:19:void put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.cache.DiskCache$Writer) -> put
com.bumptech.glide.load.engine.cache.DiskCacheAdapter$Factory -> com.bumptech.glide.load.engine.cache.DiskCacheAdapter$Factory:
    34:34:void <init>() -> <init>
    37:37:com.bumptech.glide.load.engine.cache.DiskCache build() -> build
com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker -> com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker:
    20:22:void <init>() -> <init>
    26:36:void acquire(java.lang.String) -> acquire
    40:62:void release(java.lang.String) -> release
com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLock -> com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLock:
    65:69:void <init>() -> <init>
com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLockPool -> com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLockPool:
    74:77:void <init>() -> <init>
    81:87:com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLock obtain() -> obtain
    91:96:void offer(com.bumptech.glide.load.engine.cache.DiskCacheWriteLocker$WriteLock) -> offer
com.bumptech.glide.load.engine.cache.DiskLruCacheFactory -> com.bumptech.glide.load.engine.cache.DiskLruCacheFactory:
    26:32:void <init>(java.lang.String,long) -> <init>
    36:42:void <init>(java.lang.String,java.lang.String,long) -> <init>
    53:56:void <init>(com.bumptech.glide.load.engine.cache.DiskLruCacheFactory$CacheDirectoryGetter,long) -> <init>
    60:70:com.bumptech.glide.load.engine.cache.DiskCache build() -> build
com.bumptech.glide.load.engine.cache.DiskLruCacheFactory$1 -> com.bumptech.glide.load.engine.cache.DiskLruCacheFactory$1:
    26:26:void <init>(java.lang.String) -> <init>
    29:29:java.io.File getCacheDirectory() -> getCacheDirectory
com.bumptech.glide.load.engine.cache.DiskLruCacheFactory$2 -> com.bumptech.glide.load.engine.cache.DiskLruCacheFactory$2:
    36:36:void <init>(java.lang.String,java.lang.String) -> <init>
    39:39:java.io.File getCacheDirectory() -> getCacheDirectory
com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper -> com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper:
    30:77:void <init>(java.io.File,long) -> <init>
    164:176:void clear() -> clear
    64:64:com.bumptech.glide.load.engine.cache.DiskCache create(java.io.File,long) -> create
    152:160:void delete(com.bumptech.glide.load.Key) -> delete
    48:52:com.bumptech.glide.load.engine.cache.DiskCache get(java.io.File,long) -> get
    88:106:java.io.File get(com.bumptech.glide.load.Key) -> get
    79:83:com.bumptech.glide.disklrucache.DiskLruCache getDiskCache() -> getDiskCache
    113:148:void put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.cache.DiskCache$Writer) -> put
    178:180:void resetDiskCache() -> resetDiskCache
com.bumptech.glide.load.engine.cache.ExternalCacheDiskCacheFactory -> com.bumptech.glide.load.engine.cache.ExternalCacheDiskCacheFactory:
    20:22:void <init>(android.content.Context) -> <init>
    25:26:void <init>(android.content.Context,int) -> <init>
    30:43:void <init>(android.content.Context,java.lang.String,int) -> <init>
com.bumptech.glide.load.engine.cache.ExternalCacheDiskCacheFactory$1 -> com.bumptech.glide.load.engine.cache.ExternalCacheDiskCacheFactory$1:
    30:30:void <init>(android.content.Context,java.lang.String) -> <init>
    33:40:java.io.File getCacheDirectory() -> getCacheDirectory
com.bumptech.glide.load.engine.cache.ExternalPreferredCacheDiskCacheFactory -> com.bumptech.glide.load.engine.cache.ExternalPreferredCacheDiskCacheFactory:
    19:21:void <init>(android.content.Context) -> <init>
    24:25:void <init>(android.content.Context,long) -> <init>
    29:64:void <init>(android.content.Context,java.lang.String,long) -> <init>
com.bumptech.glide.load.engine.cache.ExternalPreferredCacheDiskCacheFactory$1 -> com.bumptech.glide.load.engine.cache.ExternalPreferredCacheDiskCacheFactory$1:
    29:29:void <init>(android.content.Context,java.lang.String) -> <init>
    44:61:java.io.File getCacheDirectory() -> getCacheDirectory
    32:39:java.io.File getInternalCacheDirectory() -> getInternalCacheDirectory
com.bumptech.glide.load.engine.cache.InternalCacheDiskCacheFactory -> com.bumptech.glide.load.engine.cache.InternalCacheDiskCacheFactory:
    15:17:void <init>(android.content.Context) -> <init>
    20:21:void <init>(android.content.Context,long) -> <init>
    25:38:void <init>(android.content.Context,java.lang.String,long) -> <init>
com.bumptech.glide.load.engine.cache.InternalCacheDiskCacheFactory$1 -> com.bumptech.glide.load.engine.cache.InternalCacheDiskCacheFactory$1:
    25:25:void <init>(android.content.Context,java.lang.String) -> <init>
    28:35:java.io.File getCacheDirectory() -> getCacheDirectory
com.bumptech.glide.load.engine.cache.LruResourceCache -> com.bumptech.glide.load.engine.cache.LruResourceCache:
    22:23:void <init>(long) -> <init>
    13:13:int getSize(java.lang.Object) -> getSize
    39:42:int getSize(com.bumptech.glide.load.engine.Resource) -> getSize
    13:13:void onItemEvicted(java.lang.Object,java.lang.Object) -> onItemEvicted
    32:35:void onItemEvicted(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.Resource) -> onItemEvicted
    13:13:com.bumptech.glide.load.engine.Resource put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.Resource) -> put
    13:13:com.bumptech.glide.load.engine.Resource remove(com.bumptech.glide.load.Key) -> remove
    27:28:void setResourceRemovedListener(com.bumptech.glide.load.engine.cache.MemoryCache$ResourceRemovedListener) -> setResourceRemovedListener
    49:60:void trimMemory(int) -> trimMemory
com.bumptech.glide.load.engine.cache.MemoryCacheAdapter -> com.bumptech.glide.load.engine.cache.MemoryCacheAdapter:
    11:11:void <init>() -> <init>
    53:53:void clearMemory() -> clearMemory
    17:17:long getCurrentSize() -> getCurrentSize
    22:22:long getMaxSize() -> getMaxSize
    39:42:com.bumptech.glide.load.engine.Resource put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.Resource) -> put
    33:33:com.bumptech.glide.load.engine.Resource remove(com.bumptech.glide.load.Key) -> remove
    47:48:void setResourceRemovedListener(com.bumptech.glide.load.engine.cache.MemoryCache$ResourceRemovedListener) -> setResourceRemovedListener
    28:28:void setSizeMultiplier(float) -> setSizeMultiplier
    58:58:void trimMemory(int) -> trimMemory
com.bumptech.glide.load.engine.cache.MemorySizeCalculator -> com.bumptech.glide.load.engine.cache.MemorySizeCalculator:
    35:83:void <init>(com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder) -> <init>
    103:103:int getArrayPoolSizeInBytes() -> getArrayPoolSizeInBytes
    96:96:int getBitmapPoolSize() -> getBitmapPoolSize
    108:111:int getMaxSize(android.app.ActivityManager,float,float) -> getMaxSize
    89:89:int getMemoryCacheSize() -> getMemoryCacheSize
    123:126:boolean isLowMemoryDevice(android.app.ActivityManager) -> isLowMemoryDevice
    115:115:java.lang.String toMb(int) -> toMb
com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder -> com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder:
    145:146:void <clinit>() -> <clinit>
    159:179:void <init>(android.content.Context) -> <init>
    260:260:com.bumptech.glide.load.engine.cache.MemorySizeCalculator build() -> build
    249:250:com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder setActivityManager(android.app.ActivityManager) -> setActivityManager
    243:244:com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder setArrayPoolSize(int) -> setArrayPoolSize
    199:202:com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder setBitmapPoolScreens(float) -> setBitmapPoolScreens
    227:231:com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder setLowMemoryMaxSizeMultiplier(float) -> setLowMemoryMaxSizeMultiplier
    212:215:com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder setMaxSizeMultiplier(float) -> setMaxSizeMultiplier
    187:190:com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder setMemoryCacheScreens(float) -> setMemoryCacheScreens
    255:256:com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder setScreenDimensions(com.bumptech.glide.load.engine.cache.MemorySizeCalculator$ScreenDimensions) -> setScreenDimensions
com.bumptech.glide.load.engine.cache.MemorySizeCalculator$DisplayMetricsScreenDimensions -> com.bumptech.glide.load.engine.cache.MemorySizeCalculator$DisplayMetricsScreenDimensions:
    267:269:void <init>(android.util.DisplayMetrics) -> <init>
    278:278:int getHeightPixels() -> getHeightPixels
    273:273:int getWidthPixels() -> getWidthPixels
com.bumptech.glide.load.engine.cache.SafeKeyGenerator -> com.bumptech.glide.load.engine.cache.SafeKeyGenerator:
    21:23:void <init>() -> <init>
    50:56:java.lang.String calculateHexStringDigest(com.bumptech.glide.load.Key) -> calculateHexStringDigest
    37:46:java.lang.String getSafeKey(com.bumptech.glide.load.Key) -> getSafeKey
com.bumptech.glide.load.engine.cache.SafeKeyGenerator$1 -> com.bumptech.glide.load.engine.cache.SafeKeyGenerator$1:
    24:24:void <init>(com.bumptech.glide.load.engine.cache.SafeKeyGenerator) -> <init>
    24:24:java.lang.Object create() -> create
    28:30:com.bumptech.glide.load.engine.cache.SafeKeyGenerator$PoolableDigestContainer create() -> create
com.bumptech.glide.load.engine.cache.SafeKeyGenerator$PoolableDigestContainer -> com.bumptech.glide.load.engine.cache.SafeKeyGenerator$PoolableDigestContainer:
    63:67:void <init>(java.security.MessageDigest) -> <init>
    72:72:com.bumptech.glide.util.pool.StateVerifier getVerifier() -> getVerifier
com.bumptech.glide.load.engine.executor.GlideExecutor -> com.bumptech.glide.load.engine.executor.GlideExecutor:
    57:57:void <clinit>() -> <clinit>
    262:264:void <init>(java.util.concurrent.ExecutorService) -> <init>
    343:343:boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    357:361:int calculateBestThreadCount() -> calculateBestThreadCount
    268:269:void execute(java.lang.Runnable) -> execute
    281:281:java.util.List invokeAll(java.util.Collection) -> invokeAll
    290:290:java.util.List invokeAll(java.util.Collection,long,java.util.concurrent.TimeUnit) -> invokeAll
    297:297:java.lang.Object invokeAny(java.util.Collection) -> invokeAny
    305:305:java.lang.Object invokeAny(java.util.Collection,long,java.util.concurrent.TimeUnit) -> invokeAny
    332:332:boolean isShutdown() -> isShutdown
    337:337:boolean isTerminated() -> isTerminated
    229:237:com.bumptech.glide.load.engine.executor.GlideExecutor newAnimationExecutor() -> newAnimationExecutor
    248:248:com.bumptech.glide.load.engine.executor.GlideExecutor newAnimationExecutor(int,com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy) -> newAnimationExecutor
    78:78:com.bumptech.glide.load.engine.executor.GlideExecutor newDiskCacheExecutor() -> newDiskCacheExecutor
    100:100:com.bumptech.glide.load.engine.executor.GlideExecutor newDiskCacheExecutor(com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy) -> newDiskCacheExecutor
    122:122:com.bumptech.glide.load.engine.executor.GlideExecutor newDiskCacheExecutor(int,java.lang.String,com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy) -> newDiskCacheExecutor
    142:143:com.bumptech.glide.load.engine.executor.GlideExecutor newSourceExecutor() -> newSourceExecutor
    165:166:com.bumptech.glide.load.engine.executor.GlideExecutor newSourceExecutor(com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy) -> newSourceExecutor
    187:187:com.bumptech.glide.load.engine.executor.GlideExecutor newSourceExecutor(int,java.lang.String,com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy) -> newSourceExecutor
    212:212:com.bumptech.glide.load.engine.executor.GlideExecutor newUnlimitedSourceExecutor() -> newUnlimitedSourceExecutor
    321:322:void shutdown() -> shutdown
    327:327:java.util.List shutdownNow() -> shutdownNow
    274:274:java.util.concurrent.Future submit(java.lang.Runnable) -> submit
    311:311:java.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object) -> submit
    316:316:java.util.concurrent.Future submit(java.util.concurrent.Callable) -> submit
    348:348:java.lang.String toString() -> toString
com.bumptech.glide.load.engine.executor.GlideExecutor$DefaultThreadFactory -> com.bumptech.glide.load.engine.executor.GlideExecutor$DefaultThreadFactory:
    425:429:void <init>(java.lang.String,com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy,boolean) -> <init>
    432:453:java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.bumptech.glide.load.engine.executor.GlideExecutor$DefaultThreadFactory$1 -> com.bumptech.glide.load.engine.executor.GlideExecutor$DefaultThreadFactory$1:
    433:433:void <init>(com.bumptech.glide.load.engine.executor.GlideExecutor$DefaultThreadFactory,java.lang.Runnable,java.lang.String) -> <init>
    437:450:void run() -> run
com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy -> com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy:
    374:406:void <clinit>() -> <clinit>
com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy$1 -> com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy$1:
    374:374:void <init>() -> <init>
    378:378:void handle(java.lang.Throwable) -> handle
com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy$2 -> com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy$2:
    383:383:void <init>() -> <init>
    386:389:void handle(java.lang.Throwable) -> handle
com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy$3 -> com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy$3:
    396:396:void <init>() -> <init>
    399:402:void handle(java.lang.Throwable) -> handle
com.bumptech.glide.load.engine.executor.RuntimeCompat -> com.bumptech.glide.load.engine.executor.RuntimeCompat:
    19:21:void <init>() -> <init>
    27:31:int availableProcessors() -> availableProcessors
    48:66:int getCoreCountPre17() -> getCoreCountPre17
com.bumptech.glide.load.engine.executor.RuntimeCompat$1 -> com.bumptech.glide.load.engine.executor.RuntimeCompat$1:
    53:53:void <init>(java.util.regex.Pattern) -> <init>
    56:56:boolean accept(java.io.File,java.lang.String) -> accept
com.bumptech.glide.load.engine.prefill.BitmapPreFillRunner -> com.bumptech.glide.load.engine.prefill.BitmapPreFillRunner:
    35:56:void <clinit>() -> <clinit>
    72:78:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.engine.cache.MemoryCache,com.bumptech.glide.load.engine.prefill.PreFillQueue) -> <init>
    62:92:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.engine.cache.MemoryCache,com.bumptech.glide.load.engine.prefill.PreFillQueue,com.bumptech.glide.load.engine.prefill.BitmapPreFillRunner$Clock,android.os.Handler) -> <init>
    104:143:boolean allocate() -> allocate
    95:96:void cancel() -> cancel
    151:151:long getFreeMemoryCacheBytes() -> getFreeMemoryCacheBytes
    162:164:long getNextDelay() -> getNextDelay
    147:147:boolean isGcDetected(long) -> isGcDetected
    156:159:void run() -> run
com.bumptech.glide.load.engine.prefill.BitmapPreFillRunner$Clock -> com.bumptech.glide.load.engine.prefill.BitmapPreFillRunner$Clock:
    180:180:void <init>() -> <init>
    182:182:long now() -> now
com.bumptech.glide.load.engine.prefill.BitmapPreFillRunner$UniqueKey -> com.bumptech.glide.load.engine.prefill.BitmapPreFillRunner$UniqueKey:
    171:171:void <init>() -> <init>
    175:175:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.engine.prefill.BitmapPreFiller -> com.bumptech.glide.load.engine.prefill.BitmapPreFiller:
    23:32:void <init>(com.bumptech.glide.load.engine.cache.MemoryCache,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.DecodeFormat) -> <init>
    58:76:com.bumptech.glide.load.engine.prefill.PreFillQueue generateAllocationOrder(com.bumptech.glide.load.engine.prefill.PreFillType[]) -> generateAllocationOrder
    80:80:int getSizeInBytes(com.bumptech.glide.load.engine.prefill.PreFillType) -> getSizeInBytes
    36:54:void preFill(com.bumptech.glide.load.engine.prefill.PreFillType$Builder[]) -> preFill
com.bumptech.glide.load.engine.prefill.PreFillQueue -> com.bumptech.glide.load.engine.prefill.PreFillQueue:
    14:22:void <init>(java.util.Map) -> <init>
    43:43:int getSize() -> getSize
    47:47:boolean isEmpty() -> isEmpty
    25:39:com.bumptech.glide.load.engine.prefill.PreFillType remove() -> remove
com.bumptech.glide.load.engine.prefill.PreFillType -> com.bumptech.glide.load.engine.prefill.PreFillType:
    15:15:void <clinit>() -> <clinit>
    32:37:void <init>(int,int,android.graphics.Bitmap$Config,int) -> <init>
    70:75:boolean equals(java.lang.Object) -> equals
    58:58:android.graphics.Bitmap$Config getConfig() -> getConfig
    50:50:int getHeight() -> getHeight
    65:65:int getWeight() -> getWeight
    43:43:int getWidth() -> getWidth
    80:84:int hashCode() -> hashCode
    89:89:java.lang.String toString() -> toString
com.bumptech.glide.load.engine.prefill.PreFillType$Builder -> com.bumptech.glide.load.engine.prefill.PreFillType$Builder:
    110:111:void <init>(int) -> <init>
    101:129:void <init>(int,int) -> <init>
    170:170:com.bumptech.glide.load.engine.prefill.PreFillType build() -> build
    146:146:android.graphics.Bitmap$Config getConfig() -> getConfig
    138:139:com.bumptech.glide.load.engine.prefill.PreFillType$Builder setConfig(android.graphics.Bitmap$Config) -> setConfig
    159:163:com.bumptech.glide.load.engine.prefill.PreFillType$Builder setWeight(int) -> setWeight
com.bumptech.glide.load.model.AssetUriLoader -> com.bumptech.glide.load.model.AssetUriLoader:
    24:24:void <clinit>() -> <clinit>
    31:34:void <init>(android.content.res.AssetManager,com.bumptech.glide.load.model.AssetUriLoader$AssetFetcherFactory) -> <init>
    20:20:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    39:40:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    20:20:boolean handles(java.lang.Object) -> handles
    45:46:boolean handles(android.net.Uri) -> handles
com.bumptech.glide.load.model.AssetUriLoader$FileDescriptorFactory -> com.bumptech.glide.load.model.AssetUriLoader$FileDescriptorFactory:
    96:98:void <init>(android.content.res.AssetManager) -> <init>
    103:103:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
    114:114:com.bumptech.glide.load.data.DataFetcher buildFetcher(android.content.res.AssetManager,java.lang.String) -> buildFetcher
    109:109:void teardown() -> teardown
com.bumptech.glide.load.model.AssetUriLoader$StreamFactory -> com.bumptech.glide.load.model.AssetUriLoader$StreamFactory:
    66:68:void <init>(android.content.res.AssetManager) -> <init>
    73:73:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
    83:83:com.bumptech.glide.load.data.DataFetcher buildFetcher(android.content.res.AssetManager,java.lang.String) -> buildFetcher
    79:79:void teardown() -> teardown
com.bumptech.glide.load.model.ByteArrayLoader -> com.bumptech.glide.load.model.ByteArrayLoader:
    24:26:void <init>(com.bumptech.glide.load.model.ByteArrayLoader$Converter) -> <init>
    20:20:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    31:31:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(byte[],int,int,com.bumptech.glide.load.Options) -> buildLoadData
    20:20:boolean handles(java.lang.Object) -> handles
    36:36:boolean handles(byte[]) -> handles
com.bumptech.glide.load.model.ByteArrayLoader$ByteBufferFactory -> com.bumptech.glide.load.model.ByteArrayLoader$ByteBufferFactory:
    98:98:void <init>() -> <init>
    103:103:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
    119:119:void teardown() -> teardown
com.bumptech.glide.load.model.ByteArrayLoader$ByteBufferFactory$1 -> com.bumptech.glide.load.model.ByteArrayLoader$ByteBufferFactory$1:
    103:103:void <init>(com.bumptech.glide.load.model.ByteArrayLoader$ByteBufferFactory) -> <init>
    103:103:java.lang.Object convert(byte[]) -> convert
    106:106:java.nio.ByteBuffer convert(byte[]) -> convert
    111:111:java.lang.Class getDataClass() -> getDataClass
com.bumptech.glide.load.model.ByteArrayLoader$Fetcher -> com.bumptech.glide.load.model.ByteArrayLoader$Fetcher:
    60:63:void <init>(byte[],com.bumptech.glide.load.model.ByteArrayLoader$Converter) -> <init>
    79:79:void cancel() -> cancel
    74:74:void cleanup() -> cleanup
    84:84:java.lang.Class getDataClass() -> getDataClass
    90:90:com.bumptech.glide.load.DataSource getDataSource() -> getDataSource
    67:69:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback) -> loadData
com.bumptech.glide.load.model.ByteArrayLoader$StreamFactory -> com.bumptech.glide.load.model.ByteArrayLoader$StreamFactory:
    125:125:void <init>() -> <init>
    130:130:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
    146:146:void teardown() -> teardown
com.bumptech.glide.load.model.ByteArrayLoader$StreamFactory$1 -> com.bumptech.glide.load.model.ByteArrayLoader$StreamFactory$1:
    130:130:void <init>(com.bumptech.glide.load.model.ByteArrayLoader$StreamFactory) -> <init>
    130:130:java.lang.Object convert(byte[]) -> convert
    133:133:java.io.InputStream convert(byte[]) -> convert
    138:138:java.lang.Class getDataClass() -> getDataClass
com.bumptech.glide.load.model.ByteBufferEncoder -> com.bumptech.glide.load.model.ByteBufferEncoder:
    15:15:void <init>() -> <init>
    15:15:boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options) -> encode
    20:29:boolean encode(java.nio.ByteBuffer,java.io.File,com.bumptech.glide.load.Options) -> encode
com.bumptech.glide.load.model.ByteBufferFileLoader -> com.bumptech.glide.load.model.ByteBufferFileLoader:
    19:19:void <init>() -> <init>
    19:19:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    25:25:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.io.File,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    19:19:boolean handles(java.lang.Object) -> handles
    30:30:boolean handles(java.io.File) -> handles
com.bumptech.glide.load.model.ByteBufferFileLoader$ByteBufferFetcher -> com.bumptech.glide.load.model.ByteBufferFileLoader$ByteBufferFetcher:
    56:58:void <init>(java.io.File) -> <init>
    85:85:void cancel() -> cancel
    80:80:void cleanup() -> cleanup
    90:90:java.lang.Class getDataClass() -> getDataClass
    96:96:com.bumptech.glide.load.DataSource getDataSource() -> getDataSource
    65:75:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback) -> loadData
com.bumptech.glide.load.model.ByteBufferFileLoader$Factory -> com.bumptech.glide.load.model.ByteBufferFileLoader$Factory:
    36:36:void <init>() -> <init>
    41:41:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
    47:47:void teardown() -> teardown
com.bumptech.glide.load.model.DataUrlLoader -> com.bumptech.glide.load.model.DataUrlLoader:
    34:36:void <init>(com.bumptech.glide.load.model.DataUrlLoader$DataDecoder) -> <init>
    41:42:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    49:49:boolean handles(java.lang.Object) -> handles
com.bumptech.glide.load.model.DataUrlLoader$DataUriFetcher -> com.bumptech.glide.load.model.DataUrlLoader$DataUriFetcher:
    72:75:void <init>(java.lang.String,com.bumptech.glide.load.model.DataUrlLoader$DataDecoder) -> <init>
    99:99:void cancel() -> cancel
    90:94:void cleanup() -> cleanup
    104:104:java.lang.Class getDataClass() -> getDataClass
    110:110:com.bumptech.glide.load.DataSource getDataSource() -> getDataSource
    80:85:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback) -> loadData
com.bumptech.glide.load.model.DataUrlLoader$StreamFactory -> com.bumptech.glide.load.model.DataUrlLoader$StreamFactory:
    123:157:void <init>() -> <init>
    163:163:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
    169:169:void teardown() -> teardown
com.bumptech.glide.load.model.DataUrlLoader$StreamFactory$1 -> com.bumptech.glide.load.model.DataUrlLoader$StreamFactory$1:
    124:124:void <init>(com.bumptech.glide.load.model.DataUrlLoader$StreamFactory) -> <init>
    124:124:void close(java.lang.Object) -> close
    149:150:void close(java.io.InputStream) -> close
    124:124:java.lang.Object decode(java.lang.String) -> decode
    127:144:java.io.InputStream decode(java.lang.String) -> decode
    154:154:java.lang.Class getDataClass() -> getDataClass
com.bumptech.glide.load.model.FileLoader -> com.bumptech.glide.load.model.FileLoader:
    30:32:void <init>(com.bumptech.glide.load.model.FileLoader$FileOpener) -> <init>
    23:23:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    37:37:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.io.File,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    23:23:boolean handles(java.lang.Object) -> handles
    42:42:boolean handles(java.io.File) -> handles
com.bumptech.glide.load.model.FileLoader$Factory -> com.bumptech.glide.load.model.FileLoader$Factory:
    115:117:void <init>(com.bumptech.glide.load.model.FileLoader$FileOpener) -> <init>
    122:122:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
    128:128:void teardown() -> teardown
com.bumptech.glide.load.model.FileLoader$FileDescriptorFactory -> com.bumptech.glide.load.model.FileLoader$FileDescriptorFactory:
    161:177:void <init>() -> <init>
com.bumptech.glide.load.model.FileLoader$FileDescriptorFactory$1 -> com.bumptech.glide.load.model.FileLoader$FileDescriptorFactory$1:
    161:161:void <init>() -> <init>
    161:161:void close(java.lang.Object) -> close
    169:170:void close(android.os.ParcelFileDescriptor) -> close
    174:174:java.lang.Class getDataClass() -> getDataClass
    161:161:java.lang.Object open(java.io.File) -> open
    164:164:android.os.ParcelFileDescriptor open(java.io.File) -> open
com.bumptech.glide.load.model.FileLoader$FileFetcher -> com.bumptech.glide.load.model.FileLoader$FileFetcher:
    60:63:void <init>(java.io.File,com.bumptech.glide.load.model.FileLoader$FileOpener) -> <init>
    93:93:void cancel() -> cancel
    81:88:void cleanup() -> cleanup
    98:98:java.lang.Class getDataClass() -> getDataClass
    104:104:com.bumptech.glide.load.DataSource getDataSource() -> getDataSource
    68:77:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback) -> loadData
com.bumptech.glide.load.model.FileLoader$StreamFactory -> com.bumptech.glide.load.model.FileLoader$StreamFactory:
    136:152:void <init>() -> <init>
com.bumptech.glide.load.model.FileLoader$StreamFactory$1 -> com.bumptech.glide.load.model.FileLoader$StreamFactory$1:
    136:136:void <init>() -> <init>
    136:136:void close(java.lang.Object) -> close
    144:145:void close(java.io.InputStream) -> close
    149:149:java.lang.Class getDataClass() -> getDataClass
    136:136:java.lang.Object open(java.io.File) -> open
    139:139:java.io.InputStream open(java.io.File) -> open
com.bumptech.glide.load.model.GlideUrl -> com.bumptech.glide.load.model.GlideUrl:
    42:43:void <init>(java.net.URL) -> <init>
    46:47:void <init>(java.lang.String) -> <init>
    49:53:void <init>(java.net.URL,com.bumptech.glide.load.model.Headers) -> <init>
    55:59:void <init>(java.lang.String,com.bumptech.glide.load.model.Headers) -> <init>
    137:142:boolean equals(java.lang.Object) -> equals
    115:115:java.lang.String getCacheKey() -> getCacheKey
    129:132:byte[] getCacheKeyBytes() -> getCacheKeyBytes
    101:101:java.util.Map getHeaders() -> getHeaders
    87:94:java.lang.String getSafeStringUrl() -> getSafeStringUrl
    70:73:java.net.URL getSafeUrl() -> getSafeUrl
    147:151:int hashCode() -> hashCode
    120:120:java.lang.String toString() -> toString
    83:83:java.lang.String toStringUrl() -> toStringUrl
    62:62:java.net.URL toURL() -> toURL
    125:126:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.model.Headers -> com.bumptech.glide.load.model.Headers:
    19:30:void <clinit>() -> <clinit>
com.bumptech.glide.load.model.Headers$1 -> com.bumptech.glide.load.model.Headers$1:
    19:19:void <init>() -> <init>
    22:22:java.util.Map getHeaders() -> getHeaders
com.bumptech.glide.load.model.LazyHeaders -> com.bumptech.glide.load.model.LazyHeaders:
    26:28:void <init>(java.util.Map) -> <init>
    58:70:java.lang.String buildHeaderValue(java.util.List) -> buildHeaderValue
    82:86:boolean equals(java.lang.Object) -> equals
    44:53:java.util.Map generateHeaders() -> generateHeaders
    32:40:java.util.Map getHeaders() -> getHeaders
    91:91:int hashCode() -> hashCode
    75:75:java.lang.String toString() -> toString
com.bumptech.glide.load.model.LazyHeaders$Builder -> com.bumptech.glide.load.model.LazyHeaders$Builder:
    107:122:void <clinit>() -> <clinit>
    105:126:void <init>() -> <init>
    137:137:com.bumptech.glide.load.model.LazyHeaders$Builder addHeader(java.lang.String,java.lang.String) -> addHeader
    151:157:com.bumptech.glide.load.model.LazyHeaders$Builder addHeader(java.lang.String,com.bumptech.glide.load.model.LazyHeaderFactory) -> addHeader
    217:218:com.bumptech.glide.load.model.LazyHeaders build() -> build
    222:228:java.util.Map copyHeaders() -> copyHeaders
    207:211:void copyIfNecessary() -> copyIfNecessary
    198:203:java.util.List getFactories(java.lang.String) -> getFactories
    238:253:java.lang.String getSanitizedUserAgent() -> getSanitizedUserAgent
    171:171:com.bumptech.glide.load.model.LazyHeaders$Builder setHeader(java.lang.String,java.lang.String) -> setHeader
    181:194:com.bumptech.glide.load.model.LazyHeaders$Builder setHeader(java.lang.String,com.bumptech.glide.load.model.LazyHeaderFactory) -> setHeader
com.bumptech.glide.load.model.LazyHeaders$StringHeaderFactory -> com.bumptech.glide.load.model.LazyHeaders$StringHeaderFactory:
    262:264:void <init>(java.lang.String) -> <init>
    268:268:java.lang.String buildHeader() -> buildHeader
    280:284:boolean equals(java.lang.Object) -> equals
    289:289:int hashCode() -> hashCode
    273:273:java.lang.String toString() -> toString
com.bumptech.glide.load.model.MediaStoreFileLoader -> com.bumptech.glide.load.model.MediaStoreFileLoader:
    27:29:void <init>(android.content.Context) -> <init>
    21:21:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    34:34:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    21:21:boolean handles(java.lang.Object) -> handles
    39:39:boolean handles(android.net.Uri) -> handles
com.bumptech.glide.load.model.MediaStoreFileLoader$Factory -> com.bumptech.glide.load.model.MediaStoreFileLoader$Factory:
    108:110:void <init>(android.content.Context) -> <init>
    115:115:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
    121:121:void teardown() -> teardown
com.bumptech.glide.load.model.MediaStoreFileLoader$FilePathFetcher -> com.bumptech.glide.load.model.MediaStoreFileLoader$FilePathFetcher:
    43:43:void <clinit>() -> <clinit>
    50:53:void <init>(android.content.Context,android.net.Uri) -> <init>
    86:86:void cancel() -> cancel
    81:81:void cleanup() -> cleanup
    91:91:java.lang.Class getDataClass() -> getDataClass
    97:97:com.bumptech.glide.load.DataSource getDataSource() -> getDataSource
    57:76:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback) -> loadData
com.bumptech.glide.load.model.ModelCache -> com.bumptech.glide.load.model.ModelCache:
    27:28:void <init>() -> <init>
    30:37:void <init>(long) -> <init>
    72:73:void clear() -> clear
    49:52:java.lang.Object get(java.lang.Object,int,int) -> get
    64:66:void put(java.lang.Object,int,int,java.lang.Object) -> put
com.bumptech.glide.load.model.ModelCache$1 -> com.bumptech.glide.load.model.ModelCache$1:
    31:31:void <init>(com.bumptech.glide.load.model.ModelCache,long) -> <init>
    31:31:void onItemEvicted(java.lang.Object,java.lang.Object) -> onItemEvicted
    34:35:void onItemEvicted(com.bumptech.glide.load.model.ModelCache$ModelKey,java.lang.Object) -> onItemEvicted
com.bumptech.glide.load.model.ModelCache$ModelKey -> com.bumptech.glide.load.model.ModelCache$ModelKey:
    77:77:void <clinit>() -> <clinit>
    97:98:void <init>() -> <init>
    114:118:boolean equals(java.lang.Object) -> equals
    86:94:com.bumptech.glide.load.model.ModelCache$ModelKey get(java.lang.Object,int,int) -> get
    123:126:int hashCode() -> hashCode
    101:104:void init(java.lang.Object,int,int) -> init
    107:110:void release() -> release
com.bumptech.glide.load.model.ModelLoader$LoadData -> com.bumptech.glide.load.model.ModelLoader$LoadData:
    51:52:void <init>(com.bumptech.glide.load.Key,com.bumptech.glide.load.data.DataFetcher) -> <init>
    55:59:void <init>(com.bumptech.glide.load.Key,java.util.List,com.bumptech.glide.load.data.DataFetcher) -> <init>
com.bumptech.glide.load.model.ModelLoaderRegistry -> com.bumptech.glide.load.model.ModelLoaderRegistry:
    25:26:void <init>(androidx.core.util.Pools$Pool) -> <init>
    22:30:void <init>(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> <init>
    35:38:void append(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory) -> append
    94:94:com.bumptech.glide.load.model.ModelLoader build(java.lang.Class,java.lang.Class) -> build
    116:116:java.lang.Class getClass(java.lang.Object) -> getClass
    99:99:java.util.List getDataClasses(java.lang.Class) -> getDataClasses
    74:89:java.util.List getModelLoaders(java.lang.Object) -> getModelLoaders
    104:110:java.util.List getModelLoadersForClass(java.lang.Class) -> getModelLoadersForClass
    43:46:void prepend(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory) -> prepend
    49:52:void remove(java.lang.Class,java.lang.Class) -> remove
    57:60:void replace(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory) -> replace
    64:67:void tearDown(java.util.List) -> tearDown
com.bumptech.glide.load.model.ModelLoaderRegistry$ModelLoaderCache -> com.bumptech.glide.load.model.ModelLoaderRegistry$ModelLoaderCache:
    120:123:void <init>() -> <init>
    126:127:void clear() -> clear
    139:140:java.util.List get(java.lang.Class) -> get
    130:134:void put(java.lang.Class,java.util.List) -> put
com.bumptech.glide.load.model.ModelLoaderRegistry$ModelLoaderCache$Entry -> com.bumptech.glide.load.model.ModelLoaderRegistry$ModelLoaderCache$Entry:
    146:148:void <init>(java.util.List) -> <init>
com.bumptech.glide.load.model.MultiModelLoader -> com.bumptech.glide.load.model.MultiModelLoader:
    33:36:void <init>(java.util.List,androidx.core.util.Pools$Pool) -> <init>
    41:56:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    61:66:boolean handles(java.lang.Object) -> handles
    71:71:java.lang.String toString() -> toString
com.bumptech.glide.load.model.MultiModelLoader$MultiFetcher -> com.bumptech.glide.load.model.MultiModelLoader$MultiFetcher:
    87:92:void <init>(java.util.List,androidx.core.util.Pools$Pool) -> <init>
    124:128:void cancel() -> cancel
    113:120:void cleanup() -> cleanup
    133:133:java.lang.Class getDataClass() -> getDataClass
    139:139:com.bumptech.glide.load.DataSource getDataSource() -> getDataSource
    97:109:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback) -> loadData
    144:149:void onDataReady(java.lang.Object) -> onDataReady
    153:155:void onLoadFailed(java.lang.Exception) -> onLoadFailed
    158:169:void startNextOrFail() -> startNextOrFail
com.bumptech.glide.load.model.MultiModelLoaderFactory -> com.bumptech.glide.load.model.MultiModelLoaderFactory:
    24:25:void <clinit>() -> <clinit>
    32:33:void <init>(androidx.core.util.Pools$Pool) -> <init>
    26:40:void <init>(androidx.core.util.Pools$Pool,com.bumptech.glide.load.model.MultiModelLoaderFactory$Factory) -> <init>
    61:63:void add(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory,boolean) -> add
    45:47:void append(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory) -> append
    93:113:java.util.List build(java.lang.Class) -> build
    131:166:com.bumptech.glide.load.model.ModelLoader build(java.lang.Class,java.lang.Class) -> build
    179:179:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory$Entry) -> build
    185:185:com.bumptech.glide.load.model.ModelLoader emptyModelLoader() -> emptyModelLoader
    118:125:java.util.List getDataClasses(java.lang.Class) -> getDataClasses
    173:173:com.bumptech.glide.load.model.ModelLoaderFactory getFactory(com.bumptech.glide.load.model.MultiModelLoaderFactory$Entry) -> getFactory
    52:54:void prepend(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory) -> prepend
    79:88:java.util.List remove(java.lang.Class,java.lang.Class) -> remove
    69:73:java.util.List replace(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory) -> replace
com.bumptech.glide.load.model.MultiModelLoaderFactory$EmptyModelLoader -> com.bumptech.glide.load.model.MultiModelLoaderFactory$EmptyModelLoader:
    222:222:void <init>() -> <init>
    228:228:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    233:233:boolean handles(java.lang.Object) -> handles
com.bumptech.glide.load.model.MultiModelLoaderFactory$Entry -> com.bumptech.glide.load.model.MultiModelLoaderFactory$Entry:
    196:200:void <init>(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoaderFactory) -> <init>
    203:203:boolean handles(java.lang.Class,java.lang.Class) -> handles
    207:207:boolean handles(java.lang.Class) -> handles
com.bumptech.glide.load.model.MultiModelLoaderFactory$Factory -> com.bumptech.glide.load.model.MultiModelLoaderFactory$Factory:
    211:211:void <init>() -> <init>
    216:216:com.bumptech.glide.load.model.MultiModelLoader build(java.util.List,androidx.core.util.Pools$Pool) -> build
com.bumptech.glide.load.model.ResourceLoader -> com.bumptech.glide.load.model.ResourceLoader:
    27:30:void <init>(android.content.res.Resources,com.bumptech.glide.load.model.ModelLoader) -> <init>
    20:20:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    35:36:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Integer,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    42:50:android.net.Uri getResourceUri(java.lang.Integer) -> getResourceUri
    20:20:boolean handles(java.lang.Object) -> handles
    57:57:boolean handles(java.lang.Integer) -> handles
com.bumptech.glide.load.model.ResourceLoader$AssetFileDescriptorFactory -> com.bumptech.glide.load.model.ResourceLoader$AssetFileDescriptorFactory:
    116:118:void <init>(android.content.res.Resources) -> <init>
    122:123:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
    129:129:void teardown() -> teardown
com.bumptech.glide.load.model.ResourceLoader$FileDescriptorFactory -> com.bumptech.glide.load.model.ResourceLoader$FileDescriptorFactory:
    91:93:void <init>(android.content.res.Resources) -> <init>
    98:99:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
    105:105:void teardown() -> teardown
com.bumptech.glide.load.model.ResourceLoader$StreamFactory -> com.bumptech.glide.load.model.ResourceLoader$StreamFactory:
    67:69:void <init>(android.content.res.Resources) -> <init>
    74:74:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
    80:80:void teardown() -> teardown
com.bumptech.glide.load.model.ResourceLoader$UriFactory -> com.bumptech.glide.load.model.ResourceLoader$UriFactory:
    139:141:void <init>(android.content.res.Resources) -> <init>
    146:146:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
    152:152:void teardown() -> teardown
com.bumptech.glide.load.model.StreamEncoder -> com.bumptech.glide.load.model.StreamEncoder:
    22:24:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    18:18:boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options) -> encode
    28:53:boolean encode(java.io.InputStream,java.io.File,com.bumptech.glide.load.Options) -> encode
com.bumptech.glide.load.model.StringLoader -> com.bumptech.glide.load.model.StringLoader:
    24:26:void <init>(com.bumptech.glide.load.model.ModelLoader) -> <init>
    19:19:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    31:35:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.String,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    19:19:boolean handles(java.lang.Object) -> handles
    42:42:boolean handles(java.lang.String) -> handles
    48:60:android.net.Uri parseUri(java.lang.String) -> parseUri
    64:64:android.net.Uri toFileUri(java.lang.String) -> toFileUri
com.bumptech.glide.load.model.StringLoader$AssetFileDescriptorFactory -> com.bumptech.glide.load.model.StringLoader$AssetFileDescriptorFactory:
    107:107:void <init>() -> <init>
    113:113:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
    119:119:void teardown() -> teardown
com.bumptech.glide.load.model.StringLoader$FileDescriptorFactory -> com.bumptech.glide.load.model.StringLoader$FileDescriptorFactory:
    88:88:void <init>() -> <init>
    95:95:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
    101:101:void teardown() -> teardown
com.bumptech.glide.load.model.StringLoader$StreamFactory -> com.bumptech.glide.load.model.StringLoader$StreamFactory:
    70:70:void <init>() -> <init>
    76:76:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
    82:82:void teardown() -> teardown
com.bumptech.glide.load.model.UnitModelLoader -> com.bumptech.glide.load.model.UnitModelLoader:
    18:18:void <clinit>() -> <clinit>
    31:33:void <init>() -> <init>
    38:38:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    22:22:com.bumptech.glide.load.model.UnitModelLoader getInstance() -> getInstance
    43:43:boolean handles(java.lang.Object) -> handles
com.bumptech.glide.load.model.UnitModelLoader$Factory -> com.bumptech.glide.load.model.UnitModelLoader$Factory:
    93:93:void <clinit>() -> <clinit>
    104:106:void <init>() -> <init>
    111:111:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
    97:97:com.bumptech.glide.load.model.UnitModelLoader$Factory getInstance() -> getInstance
    117:117:void teardown() -> teardown
com.bumptech.glide.load.model.UnitModelLoader$UnitFetcher -> com.bumptech.glide.load.model.UnitModelLoader$UnitFetcher:
    50:52:void <init>(java.lang.Object) -> <init>
    68:68:void cancel() -> cancel
    63:63:void cleanup() -> cleanup
    74:74:java.lang.Class getDataClass() -> getDataClass
    80:80:com.bumptech.glide.load.DataSource getDataSource() -> getDataSource
    57:58:void loadData(com.bumptech.glide.Priority,com.bumptech.glide.load.data.DataFetcher$DataCallback) -> loadData
com.bumptech.glide.load.model.UriLoader -> com.bumptech.glide.load.model.UriLoader:
    29:31:void <clinit>() -> <clinit>
    43:45:void <init>(com.bumptech.glide.load.model.UriLoader$LocalUriFetcherFactory) -> <init>
    28:28:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    50:50:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    28:28:boolean handles(java.lang.Object) -> handles
    55:55:boolean handles(android.net.Uri) -> handles
com.bumptech.glide.load.model.UriLoader$AssetFileDescriptorFactory -> com.bumptech.glide.load.model.UriLoader$AssetFileDescriptorFactory:
    135:137:void <init>(android.content.ContentResolver) -> <init>
    141:141:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
    151:151:com.bumptech.glide.load.data.DataFetcher build(android.net.Uri) -> build
    147:147:void teardown() -> teardown
com.bumptech.glide.load.model.UriLoader$FileDescriptorFactory -> com.bumptech.glide.load.model.UriLoader$FileDescriptorFactory:
    105:107:void <init>(android.content.ContentResolver) -> <init>
    111:111:com.bumptech.glide.load.data.DataFetcher build(android.net.Uri) -> build
    117:117:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
    123:123:void teardown() -> teardown
com.bumptech.glide.load.model.UriLoader$StreamFactory -> com.bumptech.glide.load.model.UriLoader$StreamFactory:
    75:77:void <init>(android.content.ContentResolver) -> <init>
    81:81:com.bumptech.glide.load.data.DataFetcher build(android.net.Uri) -> build
    87:87:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
    93:93:void teardown() -> teardown
com.bumptech.glide.load.model.UrlUriLoader -> com.bumptech.glide.load.model.UrlUriLoader:
    19:21:void <clinit>() -> <clinit>
    31:33:void <init>(com.bumptech.glide.load.model.ModelLoader) -> <init>
    18:18:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    38:39:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    18:18:boolean handles(java.lang.Object) -> handles
    44:44:boolean handles(android.net.Uri) -> handles
com.bumptech.glide.load.model.UrlUriLoader$StreamFactory -> com.bumptech.glide.load.model.UrlUriLoader$StreamFactory:
    51:51:void <init>() -> <init>
    56:56:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
    62:62:void teardown() -> teardown
com.bumptech.glide.load.model.stream.BaseGlideUrlLoader -> com.bumptech.glide.load.model.stream.BaseGlideUrlLoader:
    29:30:void <init>(com.bumptech.glide.load.model.ModelLoader) -> <init>
    33:36:void <init>(com.bumptech.glide.load.model.ModelLoader,com.bumptech.glide.load.model.ModelCache) -> <init>
    42:68:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    76:80:java.util.List getAlternateKeys(java.util.Collection) -> getAlternateKeys
    105:105:java.util.List getAlternateUrls(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> getAlternateUrls
    120:120:com.bumptech.glide.load.model.Headers getHeaders(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> getHeaders
com.bumptech.glide.load.model.stream.HttpGlideUrlLoader -> com.bumptech.glide.load.model.stream.HttpGlideUrlLoader:
    28:29:void <clinit>() -> <clinit>
    34:35:void <init>() -> <init>
    37:39:void <init>(com.bumptech.glide.load.model.ModelCache) -> <init>
    20:20:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    46:55:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(com.bumptech.glide.load.model.GlideUrl,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    20:20:boolean handles(java.lang.Object) -> handles
    60:60:boolean handles(com.bumptech.glide.load.model.GlideUrl) -> handles
com.bumptech.glide.load.model.stream.HttpGlideUrlLoader$Factory -> com.bumptech.glide.load.model.stream.HttpGlideUrlLoader$Factory:
    66:67:void <init>() -> <init>
    72:72:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
    78:78:void teardown() -> teardown
com.bumptech.glide.load.model.stream.HttpUriLoader -> com.bumptech.glide.load.model.stream.HttpUriLoader:
    20:21:void <clinit>() -> <clinit>
    27:29:void <init>(com.bumptech.glide.load.model.ModelLoader) -> <init>
    19:19:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    34:34:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    19:19:boolean handles(java.lang.Object) -> handles
    39:39:boolean handles(android.net.Uri) -> handles
com.bumptech.glide.load.model.stream.HttpUriLoader$Factory -> com.bumptech.glide.load.model.stream.HttpUriLoader$Factory:
    45:45:void <init>() -> <init>
    50:50:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
    56:56:void teardown() -> teardown
com.bumptech.glide.load.model.stream.MediaStoreImageThumbLoader -> com.bumptech.glide.load.model.stream.MediaStoreImageThumbLoader:
    24:26:void <init>(android.content.Context) -> <init>
    19:19:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    31:34:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    19:19:boolean handles(java.lang.Object) -> handles
    40:40:boolean handles(android.net.Uri) -> handles
com.bumptech.glide.load.model.stream.MediaStoreImageThumbLoader$Factory -> com.bumptech.glide.load.model.stream.MediaStoreImageThumbLoader$Factory:
    50:52:void <init>(android.content.Context) -> <init>
    57:57:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
    63:63:void teardown() -> teardown
com.bumptech.glide.load.model.stream.MediaStoreVideoThumbLoader -> com.bumptech.glide.load.model.stream.MediaStoreVideoThumbLoader:
    31:33:void <init>(android.content.Context) -> <init>
    26:26:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    39:42:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(android.net.Uri,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    26:26:boolean handles(java.lang.Object) -> handles
    53:53:boolean handles(android.net.Uri) -> handles
    47:48:boolean isRequestingDefaultFrame(com.bumptech.glide.load.Options) -> isRequestingDefaultFrame
com.bumptech.glide.load.model.stream.MediaStoreVideoThumbLoader$Factory -> com.bumptech.glide.load.model.stream.MediaStoreVideoThumbLoader$Factory:
    64:66:void <init>(android.content.Context) -> <init>
    71:71:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
    77:77:void teardown() -> teardown
com.bumptech.glide.load.model.stream.UrlLoader -> com.bumptech.glide.load.model.stream.UrlLoader:
    23:25:void <init>(com.bumptech.glide.load.model.ModelLoader) -> <init>
    18:18:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    30:30:com.bumptech.glide.load.model.ModelLoader$LoadData buildLoadData(java.net.URL,int,int,com.bumptech.glide.load.Options) -> buildLoadData
    18:18:boolean handles(java.lang.Object) -> handles
    35:35:boolean handles(java.net.URL) -> handles
com.bumptech.glide.load.model.stream.UrlLoader$StreamFactory -> com.bumptech.glide.load.model.stream.UrlLoader$StreamFactory:
    41:41:void <init>() -> <init>
    46:46:com.bumptech.glide.load.model.ModelLoader build(com.bumptech.glide.load.model.MultiModelLoaderFactory) -> build
    52:52:void teardown() -> teardown
com.bumptech.glide.load.resource.SimpleResource -> com.bumptech.glide.load.resource.SimpleResource:
    18:20:void <init>(java.lang.Object) -> <init>
    32:32:java.lang.Object get() -> get
    26:26:java.lang.Class getResourceClass() -> getResourceClass
    37:37:int getSize() -> getSize
    43:43:void recycle() -> recycle
com.bumptech.glide.load.resource.UnitTransformation -> com.bumptech.glide.load.resource.UnitTransformation:
    15:15:void <clinit>() -> <clinit>
    28:30:void <init>() -> <init>
    25:25:com.bumptech.glide.load.resource.UnitTransformation get() -> get
    36:36:com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int) -> transform
    42:42:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.resource.bitmap.BitmapDrawableDecoder -> com.bumptech.glide.load.resource.bitmap.BitmapDrawableDecoder:
    28:29:void <init>(android.content.Context,com.bumptech.glide.load.ResourceDecoder) -> <init>
    40:41:void <init>(android.content.res.Resources,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.ResourceDecoder) -> <init>
    44:47:void <init>(android.content.res.Resources,com.bumptech.glide.load.ResourceDecoder) -> <init>
    58:59:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    51:51:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
com.bumptech.glide.load.resource.bitmap.BitmapDrawableEncoder -> com.bumptech.glide.load.resource.bitmap.BitmapDrawableEncoder:
    21:24:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.ResourceEncoder) -> <init>
    16:16:boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options) -> encode
    29:29:boolean encode(com.bumptech.glide.load.engine.Resource,java.io.File,com.bumptech.glide.load.Options) -> encode
    35:35:com.bumptech.glide.load.EncodeStrategy getEncodeStrategy(com.bumptech.glide.load.Options) -> getEncodeStrategy
com.bumptech.glide.load.resource.bitmap.BitmapDrawableResource -> com.bumptech.glide.load.resource.bitmap.BitmapDrawableResource:
    27:29:void <init>(android.graphics.drawable.BitmapDrawable,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> <init>
    34:34:java.lang.Class getResourceClass() -> getResourceClass
    39:39:int getSize() -> getSize
    49:50:void initialize() -> initialize
    44:45:void recycle() -> recycle
com.bumptech.glide.load.resource.bitmap.BitmapDrawableTransformation -> com.bumptech.glide.load.resource.bitmap.BitmapDrawableTransformation:
    25:28:void <init>(com.bumptech.glide.load.Transformation) -> <init>
    43:48:com.bumptech.glide.load.engine.Resource convertToBitmapDrawableResource(com.bumptech.glide.load.engine.Resource) -> convertToBitmapDrawableResource
    54:54:com.bumptech.glide.load.engine.Resource convertToDrawableResource(com.bumptech.glide.load.engine.Resource) -> convertToDrawableResource
    60:64:boolean equals(java.lang.Object) -> equals
    69:69:int hashCode() -> hashCode
    35:37:com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int) -> transform
    74:75:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.resource.bitmap.BitmapEncoder -> com.bumptech.glide.load.resource.bitmap.BitmapEncoder:
    41:51:void <clinit>() -> <clinit>
    58:60:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    66:68:void <init>() -> <init>
    35:35:boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options) -> encode
    73:113:boolean encode(com.bumptech.glide.load.engine.Resource,java.io.File,com.bumptech.glide.load.Options) -> encode
    131:131:com.bumptech.glide.load.EncodeStrategy getEncodeStrategy(com.bumptech.glide.load.Options) -> getEncodeStrategy
    118:124:android.graphics.Bitmap$CompressFormat getFormat(android.graphics.Bitmap,com.bumptech.glide.load.Options) -> getFormat
com.bumptech.glide.load.resource.bitmap.BitmapResource -> com.bumptech.glide.load.resource.bitmap.BitmapResource:
    36:39:void <init>(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> <init>
    15:15:java.lang.Object get() -> get
    50:50:android.graphics.Bitmap get() -> get
    44:44:java.lang.Class getResourceClass() -> getResourceClass
    55:55:int getSize() -> getSize
    65:66:void initialize() -> initialize
    29:32:com.bumptech.glide.load.resource.bitmap.BitmapResource obtain(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> obtain
    60:61:void recycle() -> recycle
com.bumptech.glide.load.resource.bitmap.BitmapTransformation -> com.bumptech.glide.load.resource.bitmap.BitmapTransformation:
    66:66:void <init>() -> <init>
    72:89:com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int) -> transform
com.bumptech.glide.load.resource.bitmap.BitmapTransitionOptions -> com.bumptech.glide.load.resource.bitmap.BitmapTransitionOptions:
    16:16:void <init>() -> <init>
    90:90:com.bumptech.glide.load.resource.bitmap.BitmapTransitionOptions crossFade() -> crossFade
    103:103:com.bumptech.glide.load.resource.bitmap.BitmapTransitionOptions crossFade(int) -> crossFade
    113:113:com.bumptech.glide.load.resource.bitmap.BitmapTransitionOptions crossFade(com.bumptech.glide.request.transition.DrawableCrossFadeFactory) -> crossFade
    131:131:com.bumptech.glide.load.resource.bitmap.BitmapTransitionOptions crossFade(com.bumptech.glide.request.transition.DrawableCrossFadeFactory$Builder) -> crossFade
    122:122:com.bumptech.glide.load.resource.bitmap.BitmapTransitionOptions transitionUsing(com.bumptech.glide.request.transition.TransitionFactory) -> transitionUsing
    81:81:com.bumptech.glide.load.resource.bitmap.BitmapTransitionOptions with(com.bumptech.glide.request.transition.TransitionFactory) -> with
    26:26:com.bumptech.glide.load.resource.bitmap.BitmapTransitionOptions withCrossFade() -> withCrossFade
    36:36:com.bumptech.glide.load.resource.bitmap.BitmapTransitionOptions withCrossFade(int) -> withCrossFade
    47:47:com.bumptech.glide.load.resource.bitmap.BitmapTransitionOptions withCrossFade(com.bumptech.glide.request.transition.DrawableCrossFadeFactory) -> withCrossFade
    58:58:com.bumptech.glide.load.resource.bitmap.BitmapTransitionOptions withCrossFade(com.bumptech.glide.request.transition.DrawableCrossFadeFactory$Builder) -> withCrossFade
    70:70:com.bumptech.glide.load.resource.bitmap.BitmapTransitionOptions withWrapped(com.bumptech.glide.request.transition.TransitionFactory) -> withWrapped
com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapDecoder -> com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapDecoder:
    19:21:void <init>(com.bumptech.glide.load.resource.bitmap.Downsampler) -> <init>
    16:16:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    32:33:com.bumptech.glide.load.engine.Resource decode(java.nio.ByteBuffer,int,int,com.bumptech.glide.load.Options) -> decode
    16:16:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
    25:25:boolean handles(java.nio.ByteBuffer,com.bumptech.glide.load.Options) -> handles
com.bumptech.glide.load.resource.bitmap.CenterCrop -> com.bumptech.glide.load.resource.bitmap.CenterCrop:
    17:17:void <clinit>() -> <clinit>
    15:15:void <init>() -> <init>
    27:27:boolean equals(java.lang.Object) -> equals
    32:32:int hashCode() -> hashCode
    22:22:android.graphics.Bitmap transform(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int,int) -> transform
    37:38:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.resource.bitmap.CenterInside -> com.bumptech.glide.load.resource.bitmap.CenterInside:
    17:17:void <clinit>() -> <clinit>
    15:15:void <init>() -> <init>
    27:27:boolean equals(java.lang.Object) -> equals
    32:32:int hashCode() -> hashCode
    22:22:android.graphics.Bitmap transform(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int,int) -> transform
    37:38:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.resource.bitmap.CircleCrop -> com.bumptech.glide.load.resource.bitmap.CircleCrop:
    19:19:void <clinit>() -> <clinit>
    14:14:void <init>() -> <init>
    31:31:boolean equals(java.lang.Object) -> equals
    36:36:int hashCode() -> hashCode
    26:26:android.graphics.Bitmap transform(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int,int) -> transform
    41:42:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser -> com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser:
    36:43:void <clinit>() -> <clinit>
    23:23:void <init>() -> <init>
    341:341:int calcTagOffset(int,int) -> calcTagOffset
    75:76:int getOrientation(java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> getOrientation
    82:83:int getOrientation(java.nio.ByteBuffer,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> getOrientation
    150:170:int getOrientation(com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> getOrientation
    63:63:com.bumptech.glide.load.ImageHeaderParser$ImageType getType(java.io.InputStream) -> getType
    69:69:com.bumptech.glide.load.ImageHeaderParser$ImageType getType(java.nio.ByteBuffer) -> getType
    88:139:com.bumptech.glide.load.ImageHeaderParser$ImageType getType(com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader) -> getType
    345:345:boolean handles(int) -> handles
    199:209:boolean hasJpegExifPreamble(byte[],int) -> hasJpegExifPreamble
    218:252:int moveToExifSegmentAndGetLength(com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader) -> moveToExifSegmentAndGetLength
    177:194:int parseExifSegment(com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader,byte[],int) -> parseExifSegment
    256:337:int parseExifSegment(com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$RandomAccessReader) -> parseExifSegment
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$ByteBufferReader -> com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$ByteBufferReader:
    392:395:void <init>(java.nio.ByteBuffer) -> <init>
    426:429:int getByte() -> getByte
    399:399:int getUInt16() -> getUInt16
    404:404:short getUInt8() -> getUInt8
    416:421:int read(byte[],int) -> read
    409:411:long skip(long) -> skip
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$RandomAccessReader -> com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$RandomAccessReader:
    353:357:void <init>(byte[],int) -> <init>
    372:372:short getInt16(int) -> getInt16
    368:368:int getInt32(int) -> getInt32
    376:376:boolean isAvailable(int,int) -> isAvailable
    364:364:int length() -> length
    360:361:void order(java.nio.ByteOrder) -> order
com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$StreamReader -> com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$StreamReader:
    437:439:void <init>(java.io.InputStream) -> <init>
    490:490:int getByte() -> getByte
    443:443:int getUInt16() -> getUInt16
    448:448:short getUInt8() -> getUInt8
    480:485:int read(byte[],int) -> read
    453:475:long skip(long) -> skip
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy -> com.bumptech.glide.load.resource.bitmap.DownsampleStrategy:
    37:96:void <clinit>() -> <clinit>
    23:23:void <init>() -> <init>
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$AtLeast -> com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$AtLeast:
    175:175:void <init>() -> <init>
    187:187:com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding getSampleSizeRounding(int,int,int,int) -> getSampleSizeRounding
    180:181:float getScaleFactor(int,int,int,int) -> getScaleFactor
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$AtMost -> com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$AtMost:
    194:194:void <init>() -> <init>
    210:210:com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding getSampleSizeRounding(int,int,int,int) -> getSampleSizeRounding
    199:204:float getScaleFactor(int,int,int,int) -> getScaleFactor
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$CenterInside -> com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$CenterInside:
    235:235:void <init>() -> <init>
    248:248:com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding getSampleSizeRounding(int,int,int,int) -> getSampleSizeRounding
    241:242:float getScaleFactor(int,int,int,int) -> getScaleFactor
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$CenterOutside -> com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$CenterOutside:
    155:155:void <init>() -> <init>
    168:168:com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding getSampleSizeRounding(int,int,int,int) -> getSampleSizeRounding
    160:162:float getScaleFactor(int,int,int,int) -> getScaleFactor
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$FitCenter -> com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$FitCenter:
    135:135:void <init>() -> <init>
    148:148:com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding getSampleSizeRounding(int,int,int,int) -> getSampleSizeRounding
    140:142:float getScaleFactor(int,int,int,int) -> getScaleFactor
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$None -> com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$None:
    217:217:void <init>() -> <init>
    228:228:com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding getSampleSizeRounding(int,int,int,int) -> getSampleSizeRounding
    222:222:float getScaleFactor(int,int,int,int) -> getScaleFactor
com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding -> com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding:
    256:266:void <clinit>() -> <clinit>
    256:256:void <init>(java.lang.String,int) -> <init>
    256:256:com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding valueOf(java.lang.String) -> valueOf
    256:256:com.bumptech.glide.load.resource.bitmap.DownsampleStrategy$SampleSizeRounding[] values() -> values
com.bumptech.glide.load.resource.bitmap.Downsampler -> com.bumptech.glide.load.resource.bitmap.Downsampler:
    47:124:void <clinit>() -> <clinit>
    133:141:void <init>(java.util.List,android.util.DisplayMetrics,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    472:476:int adjustTargetDensityForError(double) -> adjustTargetDensityForError
    513:545:void calculateConfig(java.io.InputStream,com.bumptech.glide.load.DecodeFormat,boolean,boolean,android.graphics.BitmapFactory$Options,int,int) -> calculateConfig
    335:464:void calculateScaling(com.bumptech.glide.load.ImageHeaderParser$ImageType,java.io.InputStream,com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.resource.bitmap.DownsampleStrategy,int,int,int,int,int,android.graphics.BitmapFactory$Options) -> calculateScaling
    162:162:com.bumptech.glide.load.engine.Resource decode(java.io.InputStream,int,int,com.bumptech.glide.load.Options) -> decode
    192:212:com.bumptech.glide.load.engine.Resource decode(java.io.InputStream,int,int,com.bumptech.glide.load.Options,com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks) -> decode
    221:319:android.graphics.Bitmap decodeFromWrappedStreams(java.io.InputStream,android.graphics.BitmapFactory$Options,com.bumptech.glide.load.resource.bitmap.DownsampleStrategy,com.bumptech.glide.load.DecodeFormat,boolean,int,int,boolean,com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks) -> decodeFromWrappedStreams
    565:610:android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.BitmapFactory$Options,com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> decodeStream
    639:645:java.lang.String getBitmapString(android.graphics.Bitmap) -> getBitmapString
    690:699:android.graphics.BitmapFactory$Options getDefaultOptions() -> getDefaultOptions
    480:482:int getDensityMultiplier(double) -> getDensityMultiplier
    557:560:int[] getDimensions(java.io.InputStream,android.graphics.BitmapFactory$Options,com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> getDimensions
    633:633:java.lang.String getInBitmapString(android.graphics.BitmapFactory$Options) -> getInBitmapString
    145:145:boolean handles(java.io.InputStream) -> handles
    150:150:boolean handles(java.nio.ByteBuffer) -> handles
    614:614:boolean isScaling(android.graphics.BitmapFactory$Options) -> isScaling
    621:630:void logDecode(int,int,java.lang.String,android.graphics.BitmapFactory$Options,android.graphics.Bitmap,int,int,long) -> logDecode
    655:659:java.io.IOException newIoExceptionForInBitmapAssertion(java.lang.IllegalArgumentException,int,int,java.lang.String,android.graphics.BitmapFactory$Options) -> newIoExceptionForInBitmapAssertion
    703:707:void releaseOptions(android.graphics.BitmapFactory$Options) -> releaseOptions
    711:724:void resetOptions(android.graphics.BitmapFactory$Options) -> resetOptions
    488:488:int round(double) -> round
    666:687:void setInBitmap(android.graphics.BitmapFactory$Options,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,int,int) -> setInBitmap
    494:500:boolean shouldUsePool(com.bumptech.glide.load.ImageHeaderParser$ImageType) -> shouldUsePool
com.bumptech.glide.load.resource.bitmap.Downsampler$1 -> com.bumptech.glide.load.resource.bitmap.Downsampler$1:
    105:105:void <init>() -> <init>
    114:114:void onDecodeComplete(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap) -> onDecodeComplete
    109:109:void onObtainBounds() -> onObtainBounds
com.bumptech.glide.load.resource.bitmap.DrawableToBitmapConverter -> com.bumptech.glide.load.resource.bitmap.DrawableToBitmapConverter:
    18:18:void <clinit>() -> <clinit>
    24:26:void <init>() -> <init>
    31:43:com.bumptech.glide.load.engine.Resource convert(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.drawable.Drawable,int,int) -> convert
    49:77:android.graphics.Bitmap drawToBitmap(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.drawable.Drawable,int,int) -> drawToBitmap
com.bumptech.glide.load.resource.bitmap.DrawableToBitmapConverter$1 -> com.bumptech.glide.load.resource.bitmap.DrawableToBitmapConverter$1:
    18:18:void <init>() -> <init>
    22:22:void put(android.graphics.Bitmap) -> put
com.bumptech.glide.load.resource.bitmap.DrawableTransformation -> com.bumptech.glide.load.resource.bitmap.DrawableTransformation:
    36:39:void <init>(com.bumptech.glide.load.Transformation,boolean) -> <init>
    43:43:com.bumptech.glide.load.Transformation asBitmapDrawable() -> asBitmapDrawable
    83:87:boolean equals(java.lang.Object) -> equals
    92:92:int hashCode() -> hashCode
    76:78:com.bumptech.glide.load.engine.Resource newDrawableResource(android.content.Context,com.bumptech.glide.load.engine.Resource) -> newDrawableResource
    50:68:com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int) -> transform
    97:98:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.resource.bitmap.ExifInterfaceImageHeaderParser -> com.bumptech.glide.load.resource.bitmap.ExifInterfaceImageHeaderParser:
    23:23:void <init>() -> <init>
    40:46:int getOrientation(java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> getOrientation
    52:52:int getOrientation(java.nio.ByteBuffer,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> getOrientation
    28:28:com.bumptech.glide.load.ImageHeaderParser$ImageType getType(java.io.InputStream) -> getType
    34:34:com.bumptech.glide.load.ImageHeaderParser$ImageType getType(java.nio.ByteBuffer) -> getType
com.bumptech.glide.load.resource.bitmap.FitCenter -> com.bumptech.glide.load.resource.bitmap.FitCenter:
    15:15:void <clinit>() -> <clinit>
    13:13:void <init>() -> <init>
    25:25:boolean equals(java.lang.Object) -> equals
    30:30:int hashCode() -> hashCode
    20:20:android.graphics.Bitmap transform(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int,int) -> transform
    35:36:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.resource.bitmap.HardwareConfigState -> com.bumptech.glide.load.resource.bitmap.HardwareConfigState:
    40:40:void <clinit>() -> <clinit>
    55:72:void <init>() -> <init>
    60:67:com.bumptech.glide.load.resource.bitmap.HardwareConfigState getInstance() -> getInstance
    102:116:boolean isFdSizeBelowHardwareLimit() -> isFdSizeBelowHardwareLimit
    83:99:boolean setHardwareConfigIfAllowed(int,int,android.graphics.BitmapFactory$Options,com.bumptech.glide.load.DecodeFormat,boolean,boolean) -> setHardwareConfigIfAllowed
com.bumptech.glide.load.resource.bitmap.LazyBitmapDrawableResource -> com.bumptech.glide.load.resource.bitmap.LazyBitmapDrawableResource:
    60:63:void <init>(android.content.res.Resources,com.bumptech.glide.load.engine.Resource) -> <init>
    19:19:java.lang.Object get() -> get
    74:74:android.graphics.drawable.BitmapDrawable get() -> get
    68:68:java.lang.Class getResourceClass() -> getResourceClass
    79:79:int getSize() -> getSize
    89:92:void initialize() -> initialize
    31:35:com.bumptech.glide.load.resource.bitmap.LazyBitmapDrawableResource obtain(android.content.Context,android.graphics.Bitmap) -> obtain
    45:46:com.bumptech.glide.load.resource.bitmap.LazyBitmapDrawableResource obtain(android.content.res.Resources,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap) -> obtain
    52:55:com.bumptech.glide.load.engine.Resource obtain(android.content.res.Resources,com.bumptech.glide.load.engine.Resource) -> obtain
    84:85:void recycle() -> recycle
com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream -> com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream:
    69:70:void <init>(java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    60:78:void <init>(java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,int) -> <init>
    90:95:int available() -> available
    130:139:void close() -> close
    142:182:int fillbuf(java.io.InputStream,byte[]) -> fillbuf
    111:113:void fixMarkLimit() -> fixMarkLimit
    199:202:void mark(int) -> mark
    214:214:boolean markSupported() -> markSupported
    229:253:int read() -> read
    275:337:int read(byte[],int,int) -> read
    115:120:void release() -> release
    349:358:void reset() -> reset
    370:406:long skip(long) -> skip
    99:99:java.io.IOException streamClosed() -> streamClosed
com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream$InvalidMarkException -> com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream$InvalidMarkException:
    417:418:void <init>(java.lang.String) -> <init>
com.bumptech.glide.load.resource.bitmap.ResourceBitmapDecoder -> com.bumptech.glide.load.resource.bitmap.ResourceBitmapDecoder:
    36:39:void <init>(com.bumptech.glide.load.resource.drawable.ResourceDrawableDecoder,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> <init>
    31:31:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    50:55:com.bumptech.glide.load.engine.Resource decode(android.net.Uri,int,int,com.bumptech.glide.load.Options) -> decode
    31:31:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
    43:43:boolean handles(android.net.Uri,com.bumptech.glide.load.Options) -> handles
com.bumptech.glide.load.resource.bitmap.Rotate -> com.bumptech.glide.load.resource.bitmap.Rotate:
    15:15:void <clinit>() -> <clinit>
    23:25:void <init>(int) -> <init>
    35:39:boolean equals(java.lang.Object) -> equals
    44:45:int hashCode() -> hashCode
    30:30:android.graphics.Bitmap transform(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int,int) -> transform
    50:54:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.resource.bitmap.RoundedCorners -> com.bumptech.glide.load.resource.bitmap.RoundedCorners:
    16:16:void <clinit>() -> <clinit>
    24:27:void <init>(int) -> <init>
    37:41:boolean equals(java.lang.Object) -> equals
    46:47:int hashCode() -> hashCode
    32:32:android.graphics.Bitmap transform(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int,int) -> transform
    52:56:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder -> com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder:
    23:26:void <init>(com.bumptech.glide.load.resource.bitmap.Downsampler,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    18:18:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    41:66:com.bumptech.glide.load.engine.Resource decode(java.io.InputStream,int,int,com.bumptech.glide.load.Options) -> decode
    18:18:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
    30:30:boolean handles(java.io.InputStream,com.bumptech.glide.load.Options) -> handles
com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder$UntrustedCallbacks -> com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder$UntrustedCallbacks:
    80:83:void <init>(com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream,com.bumptech.glide.util.ExceptionCatchingInputStream) -> <init>
    99:106:void onDecodeComplete(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap) -> onDecodeComplete
    90:91:void onObtainBounds() -> onObtainBounds
com.bumptech.glide.load.resource.bitmap.TransformationUtils -> com.bumptech.glide.load.resource.bitmap.TransformationUtils:
    39:96:void <clinit>() -> <clinit>
    98:100:void <init>() -> <init>
    523:531:void applyMatrix(android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Matrix) -> applyMatrix
    120:146:android.graphics.Bitmap centerCrop(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int,int) -> centerCrop
    223:232:android.graphics.Bitmap centerInside(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int,int) -> centerInside
    370:410:android.graphics.Bitmap circleCrop(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int,int) -> circleCrop
    513:514:void clear(android.graphics.Canvas) -> clear
    162:207:android.graphics.Bitmap fitCenter(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int,int) -> fitCenter
    415:426:android.graphics.Bitmap getAlphaSafeBitmap(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap) -> getAlphaSafeBitmap
    431:438:android.graphics.Bitmap$Config getAlphaSafeConfig(android.graphics.Bitmap) -> getAlphaSafeConfig
    104:104:java.util.concurrent.locks.Lock getBitmapDrawableLock() -> getBitmapDrawableLock
    283:300:int getExifOrientationDegrees(int) -> getExifOrientationDegrees
    518:518:android.graphics.Bitmap$Config getNonNullConfig(android.graphics.Bitmap) -> getNonNullConfig
    535:563:void initializeMatrixForRotation(int,android.graphics.Matrix) -> initializeMatrixForRotation
    344:354:boolean isExifOrientationRequired(int) -> isExifOrientationRequired
    259:272:android.graphics.Bitmap rotateImage(android.graphics.Bitmap,int) -> rotateImage
    314:336:android.graphics.Bitmap rotateImageExif(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int) -> rotateImageExif
    461:461:android.graphics.Bitmap roundedCorners(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int,int,int) -> roundedCorners
    479:508:android.graphics.Bitmap roundedCorners(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.graphics.Bitmap,int) -> roundedCorners
    246:247:void setAlpha(android.graphics.Bitmap,android.graphics.Bitmap) -> setAlpha
com.bumptech.glide.load.resource.bitmap.TransformationUtils$NoLock -> com.bumptech.glide.load.resource.bitmap.TransformationUtils$NoLock:
    568:568:void <init>() -> <init>
    573:573:void lock() -> lock
    578:578:void lockInterruptibly() -> lockInterruptibly
    598:598:java.util.concurrent.locks.Condition newCondition() -> newCondition
    582:582:boolean tryLock() -> tryLock
    587:587:boolean tryLock(long,java.util.concurrent.TimeUnit) -> tryLock
    593:593:void unlock() -> unlock
com.bumptech.glide.load.resource.bitmap.UnitBitmapDecoder -> com.bumptech.glide.load.resource.bitmap.UnitBitmapDecoder:
    14:14:void <init>() -> <init>
    14:14:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    24:24:com.bumptech.glide.load.engine.Resource decode(android.graphics.Bitmap,int,int,com.bumptech.glide.load.Options) -> decode
    14:14:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
    18:18:boolean handles(android.graphics.Bitmap,com.bumptech.glide.load.Options) -> handles
com.bumptech.glide.load.resource.bitmap.UnitBitmapDecoder$NonOwnedBitmapResource -> com.bumptech.glide.load.resource.bitmap.UnitBitmapDecoder$NonOwnedBitmapResource:
    31:33:void <init>(android.graphics.Bitmap) -> <init>
    27:27:java.lang.Object get() -> get
    44:44:android.graphics.Bitmap get() -> get
    38:38:java.lang.Class getResourceClass() -> getResourceClass
    49:49:int getSize() -> getSize
    55:55:void recycle() -> recycle
com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder -> com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder:
    23:24:void <init>(android.content.Context) -> <init>
    29:30:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> <init>
com.bumptech.glide.load.resource.bitmap.VideoDecoder -> com.bumptech.glide.load.resource.bitmap.VideoDecoder:
    54:102:void <clinit>() -> <clinit>
    119:120:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.resource.bitmap.VideoDecoder$MediaMetadataRetrieverInitializer) -> <init>
    126:130:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.resource.bitmap.VideoDecoder$MediaMetadataRetrieverInitializer,com.bumptech.glide.load.resource.bitmap.VideoDecoder$MediaMetadataRetrieverFactory) -> <init>
    110:110:com.bumptech.glide.load.ResourceDecoder asset(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> asset
    144:178:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    189:209:android.graphics.Bitmap decodeFrame(android.media.MediaMetadataRetriever,long,int,int,int,com.bumptech.glide.load.resource.bitmap.DownsampleStrategy) -> decodeFrame
    266:266:android.graphics.Bitmap decodeOriginalFrame(android.media.MediaMetadataRetriever,long,int) -> decodeOriginalFrame
    221:258:android.graphics.Bitmap decodeScaledFrame(android.media.MediaMetadataRetriever,long,int,int,int,com.bumptech.glide.load.resource.bitmap.DownsampleStrategy) -> decodeScaledFrame
    137:137:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
    114:114:com.bumptech.glide.load.ResourceDecoder parcel(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> parcel
com.bumptech.glide.load.resource.bitmap.VideoDecoder$1 -> com.bumptech.glide.load.resource.bitmap.VideoDecoder$1:
    56:57:void <init>() -> <init>
    56:56:void update(byte[],java.lang.Object,java.security.MessageDigest) -> update
    62:67:void update(byte[],java.lang.Long,java.security.MessageDigest) -> update
com.bumptech.glide.load.resource.bitmap.VideoDecoder$2 -> com.bumptech.glide.load.resource.bitmap.VideoDecoder$2:
    83:84:void <init>() -> <init>
    83:83:void update(byte[],java.lang.Object,java.security.MessageDigest) -> update
    90:98:void update(byte[],java.lang.Integer,java.security.MessageDigest) -> update
com.bumptech.glide.load.resource.bitmap.VideoDecoder$AssetFileDescriptorInitializer -> com.bumptech.glide.load.resource.bitmap.VideoDecoder$AssetFileDescriptorInitializer:
    281:281:void <init>() -> <init>
    281:281:void <init>(com.bumptech.glide.load.resource.bitmap.VideoDecoder$1) -> <init>
    281:281:void initialize(android.media.MediaMetadataRetriever,java.lang.Object) -> initialize
    286:287:void initialize(android.media.MediaMetadataRetriever,android.content.res.AssetFileDescriptor) -> initialize
com.bumptech.glide.load.resource.bitmap.VideoDecoder$MediaMetadataRetrieverFactory -> com.bumptech.glide.load.resource.bitmap.VideoDecoder$MediaMetadataRetrieverFactory:
    270:270:void <init>() -> <init>
    272:272:android.media.MediaMetadataRetriever build() -> build
com.bumptech.glide.load.resource.bitmap.VideoDecoder$ParcelFileDescriptorInitializer -> com.bumptech.glide.load.resource.bitmap.VideoDecoder$ParcelFileDescriptorInitializer:
    291:291:void <init>() -> <init>
    291:291:void initialize(android.media.MediaMetadataRetriever,java.lang.Object) -> initialize
    296:297:void initialize(android.media.MediaMetadataRetriever,android.os.ParcelFileDescriptor) -> initialize
com.bumptech.glide.load.resource.bytes.ByteBufferRewinder -> com.bumptech.glide.load.resource.bytes.ByteBufferRewinder:
    15:17:void <init>(java.nio.ByteBuffer) -> <init>
    29:29:void cleanup() -> cleanup
    10:10:java.lang.Object rewindAndGet() -> rewindAndGet
    22:23:java.nio.ByteBuffer rewindAndGet() -> rewindAndGet
com.bumptech.glide.load.resource.bytes.ByteBufferRewinder$Factory -> com.bumptech.glide.load.resource.bytes.ByteBufferRewinder$Factory:
    34:34:void <init>() -> <init>
    34:34:com.bumptech.glide.load.data.DataRewinder build(java.lang.Object) -> build
    39:39:com.bumptech.glide.load.data.DataRewinder build(java.nio.ByteBuffer) -> build
    45:45:java.lang.Class getDataClass() -> getDataClass
com.bumptech.glide.load.resource.bytes.BytesResource -> com.bumptech.glide.load.resource.bytes.BytesResource:
    13:15:void <init>(byte[]) -> <init>
    10:10:java.lang.Object get() -> get
    36:36:byte[] get() -> get
    20:20:java.lang.Class getResourceClass() -> getResourceClass
    41:41:int getSize() -> getSize
    47:47:void recycle() -> recycle
com.bumptech.glide.load.resource.drawable.DrawableDecoderCompat -> com.bumptech.glide.load.resource.drawable.DrawableDecoderCompat:
    19:19:void <clinit>() -> <clinit>
    20:22:void <init>() -> <init>
    29:29:android.graphics.drawable.Drawable getDrawable(android.content.Context,android.content.Context,int) -> getDrawable
    41:41:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,android.content.res.Resources$Theme) -> getDrawable
    49:64:android.graphics.drawable.Drawable getDrawable(android.content.Context,android.content.Context,int,android.content.res.Resources$Theme) -> getDrawable
    75:76:android.graphics.drawable.Drawable loadDrawableV4(android.content.Context,int,android.content.res.Resources$Theme) -> loadDrawableV4
    69:70:android.graphics.drawable.Drawable loadDrawableV7(android.content.Context,int,android.content.res.Resources$Theme) -> loadDrawableV7
com.bumptech.glide.load.resource.drawable.DrawableResource -> com.bumptech.glide.load.resource.drawable.DrawableResource:
    27:29:void <init>(android.graphics.drawable.Drawable) -> <init>
    23:23:java.lang.Object get() -> get
    35:43:android.graphics.drawable.Drawable get() -> get
    48:53:void initialize() -> initialize
com.bumptech.glide.load.resource.drawable.DrawableTransitionOptions -> com.bumptech.glide.load.resource.drawable.DrawableTransitionOptions:
    14:14:void <init>() -> <init>
    76:76:com.bumptech.glide.load.resource.drawable.DrawableTransitionOptions crossFade() -> crossFade
    89:89:com.bumptech.glide.load.resource.drawable.DrawableTransitionOptions crossFade(int) -> crossFade
    99:99:com.bumptech.glide.load.resource.drawable.DrawableTransitionOptions crossFade(com.bumptech.glide.request.transition.DrawableCrossFadeFactory) -> crossFade
    108:108:com.bumptech.glide.load.resource.drawable.DrawableTransitionOptions crossFade(com.bumptech.glide.request.transition.DrawableCrossFadeFactory$Builder) -> crossFade
    67:67:com.bumptech.glide.load.resource.drawable.DrawableTransitionOptions with(com.bumptech.glide.request.transition.TransitionFactory) -> with
    24:24:com.bumptech.glide.load.resource.drawable.DrawableTransitionOptions withCrossFade() -> withCrossFade
    34:34:com.bumptech.glide.load.resource.drawable.DrawableTransitionOptions withCrossFade(int) -> withCrossFade
    45:45:com.bumptech.glide.load.resource.drawable.DrawableTransitionOptions withCrossFade(com.bumptech.glide.request.transition.DrawableCrossFadeFactory) -> withCrossFade
    56:56:com.bumptech.glide.load.resource.drawable.DrawableTransitionOptions withCrossFade(com.bumptech.glide.request.transition.DrawableCrossFadeFactory$Builder) -> withCrossFade
com.bumptech.glide.load.resource.drawable.NonOwnedDrawableResource -> com.bumptech.glide.load.resource.drawable.NonOwnedDrawableResource:
    21:22:void <init>(android.graphics.drawable.Drawable) -> <init>
    28:28:java.lang.Class getResourceClass() -> getResourceClass
    35:35:int getSize() -> getSize
    17:17:com.bumptech.glide.load.engine.Resource newInstance(android.graphics.drawable.Drawable) -> newInstance
    41:41:void recycle() -> recycle
com.bumptech.glide.load.resource.drawable.ResourceDrawableDecoder -> com.bumptech.glide.load.resource.drawable.ResourceDrawableDecoder:
    48:50:void <init>(android.content.Context) -> <init>
    25:25:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    61:66:com.bumptech.glide.load.engine.Resource decode(android.net.Uri,int,int,com.bumptech.glide.load.Options) -> decode
    72:84:android.content.Context findContextForPackage(android.net.Uri,java.lang.String) -> findContextForPackage
    121:125:int findResourceIdFromResourceIdUri(android.net.Uri) -> findResourceIdFromResourceIdUri
    104:115:int findResourceIdFromTypeAndNameResourceUri(android.content.Context,android.net.Uri) -> findResourceIdFromTypeAndNameResourceUri
    91:97:int findResourceIdFromUri(android.content.Context,android.net.Uri) -> findResourceIdFromUri
    25:25:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
    54:54:boolean handles(android.net.Uri,com.bumptech.glide.load.Options) -> handles
com.bumptech.glide.load.resource.drawable.UnitDrawableDecoder -> com.bumptech.glide.load.resource.drawable.UnitDrawableDecoder:
    13:13:void <init>() -> <init>
    13:13:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    23:23:com.bumptech.glide.load.engine.Resource decode(android.graphics.drawable.Drawable,int,int,com.bumptech.glide.load.Options) -> decode
    13:13:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
    16:16:boolean handles(android.graphics.drawable.Drawable,com.bumptech.glide.load.Options) -> handles
com.bumptech.glide.load.resource.file.FileDecoder -> com.bumptech.glide.load.resource.file.FileDecoder:
    13:13:void <init>() -> <init>
    13:13:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    23:23:com.bumptech.glide.load.engine.Resource decode(java.io.File,int,int,com.bumptech.glide.load.Options) -> decode
    13:13:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
    17:17:boolean handles(java.io.File,com.bumptech.glide.load.Options) -> handles
com.bumptech.glide.load.resource.file.FileResource -> com.bumptech.glide.load.resource.file.FileResource:
    13:14:void <init>(java.io.File) -> <init>
com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder -> com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder:
    37:38:void <clinit>() -> <clinit>
    49:51:void <init>(android.content.Context) -> <init>
    56:57:void <init>(android.content.Context,java.util.List,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    66:72:void <init>(android.content.Context,java.util.List,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool,com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$GifHeaderParserPool,com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$GifDecoderFactory) -> <init>
    35:35:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    83:87:com.bumptech.glide.load.resource.gif.GifDrawableResource decode(java.nio.ByteBuffer,int,int,com.bumptech.glide.load.Options) -> decode
    94:122:com.bumptech.glide.load.resource.gif.GifDrawableResource decode(java.nio.ByteBuffer,int,int,com.bumptech.glide.gifdecoder.GifHeaderParser,com.bumptech.glide.load.Options) -> decode
    128:140:int getSampleSize(com.bumptech.glide.gifdecoder.GifHeader,int,int) -> getSampleSize
    35:35:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
    76:77:boolean handles(java.nio.ByteBuffer,com.bumptech.glide.load.Options) -> handles
com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$GifDecoderFactory -> com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$GifDecoderFactory:
    144:144:void <init>() -> <init>
    147:147:com.bumptech.glide.gifdecoder.GifDecoder build(com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider,com.bumptech.glide.gifdecoder.GifHeader,java.nio.ByteBuffer,int) -> build
com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$GifHeaderParserPool -> com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$GifHeaderParserPool:
    152:153:void <init>() -> <init>
    155:160:com.bumptech.glide.gifdecoder.GifHeaderParser obtain(java.nio.ByteBuffer) -> obtain
    163:166:void release(com.bumptech.glide.gifdecoder.GifHeaderParser) -> release
com.bumptech.glide.load.resource.gif.GifBitmapProvider -> com.bumptech.glide.load.resource.gif.GifBitmapProvider:
    24:25:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> <init>
    33:36:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    41:41:android.graphics.Bitmap obtain(int,int,android.graphics.Bitmap$Config) -> obtain
    52:55:byte[] obtainByteArray(int) -> obtainByteArray
    69:72:int[] obtainIntArray(int) -> obtainIntArray
    46:47:void release(android.graphics.Bitmap) -> release
    60:64:void release(byte[]) -> release
    78:82:void release(int[]) -> release
com.bumptech.glide.load.resource.gif.GifDrawable -> com.bumptech.glide.load.resource.gif.GifDrawable:
    118:119:void <init>(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.Transformation,int,int,android.graphics.Bitmap) -> <init>
    146:156:void <init>(android.content.Context,com.bumptech.glide.gifdecoder.GifDecoder,com.bumptech.glide.load.Transformation,int,int,android.graphics.Bitmap) -> <init>
    68:160:void <init>(com.bumptech.glide.load.resource.gif.GifDrawable$GifState) -> <init>
    164:166:void <init>(com.bumptech.glide.load.resource.gif.GifFrameLoader,android.graphics.Paint) -> <init>
    441:444:void clearAnimationCallbacks() -> clearAnimationCallbacks
    295:306:void draw(android.graphics.Canvas) -> draw
    340:344:android.graphics.drawable.Drawable$Callback findCallback() -> findCallback
    188:188:java.nio.ByteBuffer getBuffer() -> getBuffer
    377:377:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    319:322:android.graphics.Rect getDestRect() -> getDestRect
    173:173:android.graphics.Bitmap getFirstFrame() -> getFirstFrame
    192:192:int getFrameCount() -> getFrameCount
    202:202:int getFrameIndex() -> getFrameIndex
    184:184:com.bumptech.glide.load.Transformation getFrameTransformation() -> getFrameTransformation
    274:274:int getIntrinsicHeight() -> getIntrinsicHeight
    269:269:int getIntrinsicWidth() -> getIntrinsicWidth
    335:335:int getOpacity() -> getOpacity
    326:329:android.graphics.Paint getPaint() -> getPaint
    169:169:int getSize() -> getSize
    390:390:boolean isRecycled() -> isRecycled
    279:279:boolean isRunning() -> isRunning
    368:373:void notifyAnimationEndToListeners() -> notifyAnimationEndToListeners
    289:291:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    349:365:void onFrameReady() -> onFrameReady
    384:386:void recycle() -> recycle
    422:429:void registerAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> registerAnimationCallback
    206:207:void resetLoopCount() -> resetLoopCount
    310:311:void setAlpha(int) -> setAlpha
    315:316:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    180:181:void setFrameTransformation(com.bumptech.glide.load.Transformation,android.graphics.Bitmap) -> setFrameTransformation
    284:285:void setIsRunning(boolean) -> setIsRunning
    396:408:void setLoopCount(int) -> setLoopCount
    255:264:boolean setVisible(boolean,boolean) -> setVisible
    222:227:void start() -> start
    215:218:void startFromFirstFrame() -> startFromFirstFrame
    236:246:void startRunning() -> startRunning
    231:233:void stop() -> stop
    249:251:void stopRunning() -> stopRunning
    433:436:boolean unregisterAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> unregisterAnimationCallback
com.bumptech.glide.load.resource.gif.GifDrawable$GifState -> com.bumptech.glide.load.resource.gif.GifDrawable$GifState:
    450:452:void <init>(com.bumptech.glide.load.resource.gif.GifFrameLoader) -> <init>
    468:468:int getChangingConfigurations() -> getChangingConfigurations
    457:457:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    463:463:android.graphics.drawable.Drawable newDrawable() -> newDrawable
com.bumptech.glide.load.resource.gif.GifDrawableEncoder -> com.bumptech.glide.load.resource.gif.GifDrawableEncoder:
    17:17:void <init>() -> <init>
    17:17:boolean encode(java.lang.Object,java.io.File,com.bumptech.glide.load.Options) -> encode
    29:39:boolean encode(com.bumptech.glide.load.engine.Resource,java.io.File,com.bumptech.glide.load.Options) -> encode
    23:23:com.bumptech.glide.load.EncodeStrategy getEncodeStrategy(com.bumptech.glide.load.Options) -> getEncodeStrategy
com.bumptech.glide.load.resource.gif.GifDrawableResource -> com.bumptech.glide.load.resource.gif.GifDrawableResource:
    15:16:void <init>(com.bumptech.glide.load.resource.gif.GifDrawable) -> <init>
    21:21:java.lang.Class getResourceClass() -> getResourceClass
    26:26:int getSize() -> getSize
    37:38:void initialize() -> initialize
    31:33:void recycle() -> recycle
com.bumptech.glide.load.resource.gif.GifDrawableTransformation -> com.bumptech.glide.load.resource.gif.GifDrawableTransformation:
    22:24:void <init>(com.bumptech.glide.load.Transformation) -> <init>
    53:57:boolean equals(java.lang.Object) -> equals
    62:62:int hashCode() -> hashCode
    31:48:com.bumptech.glide.load.engine.Resource transform(android.content.Context,com.bumptech.glide.load.engine.Resource,int,int) -> transform
    67:68:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.load.resource.gif.GifFrameLoader -> com.bumptech.glide.load.resource.gif.GifFrameLoader:
    64:72:void <init>(com.bumptech.glide.Glide,com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.Transformation,android.graphics.Bitmap) -> <init>
    36:94:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.RequestManager,com.bumptech.glide.gifdecoder.GifDecoder,android.os.Handler,com.bumptech.glide.RequestBuilder,com.bumptech.glide.load.Transformation,android.graphics.Bitmap) -> <init>
    179:196:void clear() -> clear
    153:153:java.nio.ByteBuffer getBuffer() -> getBuffer
    199:199:android.graphics.Bitmap getCurrentFrame() -> getCurrentFrame
    144:144:int getCurrentIndex() -> getCurrentIndex
    107:107:android.graphics.Bitmap getFirstFrame() -> getFirstFrame
    157:157:int getFrameCount() -> getFrameCount
    348:348:com.bumptech.glide.load.Key getFrameSignature() -> getFrameSignature
    148:149:int getFrameSize() -> getFrameSize
    103:103:com.bumptech.glide.load.Transformation getFrameTransformation() -> getFrameTransformation
    136:136:int getHeight() -> getHeight
    161:161:int getLoopCount() -> getLoopCount
    336:342:com.bumptech.glide.RequestBuilder getRequestBuilder(com.bumptech.glide.RequestManager,int,int) -> getRequestBuilder
    140:140:int getSize() -> getSize
    132:132:int getWidth() -> getWidth
    203:227:void loadNextFrame() -> loadNextFrame
    252:285:void onFrameReady(com.bumptech.glide.load.resource.gif.GifFrameLoader$DelayTarget) -> onFrameReady
    230:234:void recycleFirstFrame() -> recycleFirstFrame
    97:100:void setFrameTransformation(com.bumptech.glide.load.Transformation,android.graphics.Bitmap) -> setFrameTransformation
    237:243:void setNextStartFromFirstFrame() -> setNextStartFromFirstFrame
    247:248:void setOnEveryFrameReadyListener(com.bumptech.glide.load.resource.gif.GifFrameLoader$OnEveryFrameListener) -> setOnEveryFrameReadyListener
    165:172:void start() -> start
    175:176:void stop() -> stop
    111:122:void subscribe(com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback) -> subscribe
    125:129:void unsubscribe(com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameCallback) -> unsubscribe
com.bumptech.glide.load.resource.gif.GifFrameLoader$DelayTarget -> com.bumptech.glide.load.resource.gif.GifFrameLoader$DelayTarget:
    315:319:void <init>(android.os.Handler,int,long) -> <init>
    322:322:android.graphics.Bitmap getResource() -> getResource
    308:308:void onResourceReady(java.lang.Object,com.bumptech.glide.request.transition.Transition) -> onResourceReady
    328:331:void onResourceReady(android.graphics.Bitmap,com.bumptech.glide.request.transition.Transition) -> onResourceReady
com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameLoaderCallback -> com.bumptech.glide.load.resource.gif.GifFrameLoader$FrameLoaderCallback:
    292:292:void <init>(com.bumptech.glide.load.resource.gif.GifFrameLoader) -> <init>
    296:304:boolean handleMessage(android.os.Message) -> handleMessage
com.bumptech.glide.load.resource.gif.GifFrameResourceDecoder -> com.bumptech.glide.load.resource.gif.GifFrameResourceDecoder:
    19:21:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> <init>
    16:16:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    31:32:com.bumptech.glide.load.engine.Resource decode(com.bumptech.glide.gifdecoder.GifDecoder,int,int,com.bumptech.glide.load.Options) -> decode
    16:16:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
    25:25:boolean handles(com.bumptech.glide.gifdecoder.GifDecoder,com.bumptech.glide.load.Options) -> handles
com.bumptech.glide.load.resource.gif.GifOptions -> com.bumptech.glide.load.resource.gif.GifOptions:
    18:27:void <clinit>() -> <clinit>
    29:31:void <init>() -> <init>
com.bumptech.glide.load.resource.gif.StreamGifDecoder -> com.bumptech.glide.load.resource.gif.StreamGifDecoder:
    31:35:void <init>(java.util.List,com.bumptech.glide.load.ResourceDecoder,com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool) -> <init>
    23:23:com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int,com.bumptech.glide.load.Options) -> decode
    46:51:com.bumptech.glide.load.engine.Resource decode(java.io.InputStream,int,int,com.bumptech.glide.load.Options) -> decode
    23:23:boolean handles(java.lang.Object,com.bumptech.glide.load.Options) -> handles
    39:40:boolean handles(java.io.InputStream,com.bumptech.glide.load.Options) -> handles
    55:70:byte[] inputStreamToBytes(java.io.InputStream) -> inputStreamToBytes
com.bumptech.glide.load.resource.transcode.BitmapBytesTranscoder -> com.bumptech.glide.load.resource.transcode.BitmapBytesTranscoder:
    22:23:void <init>() -> <init>
    27:30:void <init>(android.graphics.Bitmap$CompressFormat,int) -> <init>
    36:39:com.bumptech.glide.load.engine.Resource transcode(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.Options) -> transcode
com.bumptech.glide.load.resource.transcode.BitmapDrawableTranscoder -> com.bumptech.glide.load.resource.transcode.BitmapDrawableTranscoder:
    25:26:void <init>(android.content.Context) -> <init>
    34:35:void <init>(android.content.res.Resources,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool) -> <init>
    37:39:void <init>(android.content.res.Resources) -> <init>
    45:45:com.bumptech.glide.load.engine.Resource transcode(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.Options) -> transcode
com.bumptech.glide.load.resource.transcode.DrawableBytesTranscoder -> com.bumptech.glide.load.resource.transcode.DrawableBytesTranscoder:
    27:31:void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.resource.transcode.ResourceTranscoder,com.bumptech.glide.load.resource.transcode.ResourceTranscoder) -> <init>
    50:50:com.bumptech.glide.load.engine.Resource toGifDrawableResource(com.bumptech.glide.load.engine.Resource) -> toGifDrawableResource
    37:44:com.bumptech.glide.load.engine.Resource transcode(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.Options) -> transcode
com.bumptech.glide.load.resource.transcode.GifDrawableBytesTranscoder -> com.bumptech.glide.load.resource.transcode.GifDrawableBytesTranscoder:
    17:17:void <init>() -> <init>
    22:24:com.bumptech.glide.load.engine.Resource transcode(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.Options) -> transcode
com.bumptech.glide.load.resource.transcode.TranscoderRegistry -> com.bumptech.glide.load.resource.transcode.TranscoderRegistry:
    12:13:void <init>() -> <init>
    47:57:com.bumptech.glide.load.resource.transcode.ResourceTranscoder get(java.lang.Class,java.lang.Class) -> get
    63:77:java.util.List getTranscodeClasses(java.lang.Class,java.lang.Class) -> getTranscodeClasses
    27:29:void register(java.lang.Class,java.lang.Class,com.bumptech.glide.load.resource.transcode.ResourceTranscoder) -> register
com.bumptech.glide.load.resource.transcode.TranscoderRegistry$Entry -> com.bumptech.glide.load.resource.transcode.TranscoderRegistry$Entry:
    86:90:void <init>(java.lang.Class,java.lang.Class,com.bumptech.glide.load.resource.transcode.ResourceTranscoder) -> <init>
    99:99:boolean handles(java.lang.Class,java.lang.Class) -> handles
com.bumptech.glide.load.resource.transcode.UnitTranscoder -> com.bumptech.glide.load.resource.transcode.UnitTranscoder:
    14:14:void <clinit>() -> <clinit>
    13:13:void <init>() -> <init>
    18:18:com.bumptech.glide.load.resource.transcode.ResourceTranscoder get() -> get
    24:24:com.bumptech.glide.load.engine.Resource transcode(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.Options) -> transcode
com.bumptech.glide.manager.ActivityFragmentLifecycle -> com.bumptech.glide.manager.ActivityFragmentLifecycle:
    13:15:void <init>() -> <init>
    32:41:void addListener(com.bumptech.glide.manager.LifecycleListener) -> addListener
    63:67:void onDestroy() -> onDestroy
    49:53:void onStart() -> onStart
    56:60:void onStop() -> onStop
    45:46:void removeListener(com.bumptech.glide.manager.LifecycleListener) -> removeListener
com.bumptech.glide.manager.ApplicationLifecycle -> com.bumptech.glide.manager.ApplicationLifecycle:
    12:12:void <init>() -> <init>
    15:16:void addListener(com.bumptech.glide.manager.LifecycleListener) -> addListener
    21:21:void removeListener(com.bumptech.glide.manager.LifecycleListener) -> removeListener
com.bumptech.glide.manager.DefaultConnectivityMonitor -> com.bumptech.glide.manager.DefaultConnectivityMonitor:
    26:44:void <init>(android.content.Context,com.bumptech.glide.manager.ConnectivityMonitor$ConnectivityListener) -> <init>
    80:96:boolean isConnected(android.content.Context) -> isConnected
    112:112:void onDestroy() -> onDestroy
    101:102:void onStart() -> onStart
    106:107:void onStop() -> onStop
    47:64:void register() -> register
    67:73:void unregister() -> unregister
com.bumptech.glide.manager.DefaultConnectivityMonitor$1 -> com.bumptech.glide.manager.DefaultConnectivityMonitor$1:
    26:26:void <init>(com.bumptech.glide.manager.DefaultConnectivityMonitor) -> <init>
    29:38:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.bumptech.glide.manager.DefaultConnectivityMonitorFactory -> com.bumptech.glide.manager.DefaultConnectivityMonitorFactory:
    15:15:void <init>() -> <init>
    24:34:com.bumptech.glide.manager.ConnectivityMonitor build(android.content.Context,com.bumptech.glide.manager.ConnectivityMonitor$ConnectivityListener) -> build
com.bumptech.glide.manager.EmptyRequestManagerTreeNode -> com.bumptech.glide.manager.EmptyRequestManagerTreeNode:
    11:11:void <init>() -> <init>
    15:15:java.util.Set getDescendants() -> getDescendants
com.bumptech.glide.manager.NullConnectivityMonitor -> com.bumptech.glide.manager.NullConnectivityMonitor:
    6:6:void <init>() -> <init>
    21:21:void onDestroy() -> onDestroy
    11:11:void onStart() -> onStart
    16:16:void onStop() -> onStop
com.bumptech.glide.manager.RequestManagerFragment -> com.bumptech.glide.manager.RequestManagerFragment:
    45:46:void <init>() -> <init>
    33:52:void <init>(com.bumptech.glide.manager.ActivityFragmentLifecycle) -> <init>
    86:87:void addChildRequestManagerFragment(com.bumptech.glide.manager.RequestManagerFragment) -> addChildRequestManagerFragment
    103:118:java.util.Set getDescendantRequestManagerFragments() -> getDescendantRequestManagerFragments
    65:65:com.bumptech.glide.manager.ActivityFragmentLifecycle getGlideLifecycle() -> getGlideLifecycle
    137:142:android.app.Fragment getParentFragmentUsingHint() -> getParentFragmentUsingHint
    73:73:com.bumptech.glide.RequestManager getRequestManager() -> getRequestManager
    81:81:com.bumptech.glide.manager.RequestManagerTreeNode getRequestManagerTreeNode() -> getRequestManagerTreeNode
    150:158:boolean isDescendant(android.app.Fragment) -> isDescendant
    181:190:void onAttach(android.app.Activity) -> onAttach
    212:215:void onDestroy() -> onDestroy
    194:196:void onDetach() -> onDetach
    200:202:void onStart() -> onStart
    206:208:void onStop() -> onStop
    163:169:void registerFragmentWithRoot(android.app.Activity) -> registerFragmentWithRoot
    91:92:void removeChildRequestManagerFragment(com.bumptech.glide.manager.RequestManagerFragment) -> removeChildRequestManagerFragment
    127:131:void setParentFragmentHint(android.app.Fragment) -> setParentFragmentHint
    60:61:void setRequestManager(com.bumptech.glide.RequestManager) -> setRequestManager
    219:219:java.lang.String toString() -> toString
    172:176:void unregisterFragmentWithRoot() -> unregisterFragmentWithRoot
com.bumptech.glide.manager.RequestManagerFragment$FragmentRequestManagerTreeNode -> com.bumptech.glide.manager.RequestManagerFragment$FragmentRequestManagerTreeNode:
    225:225:void <init>(com.bumptech.glide.manager.RequestManagerFragment) -> <init>
    231:238:java.util.Set getDescendants() -> getDescendants
    244:244:java.lang.String toString() -> toString
com.bumptech.glide.manager.RequestManagerRetriever -> com.bumptech.glide.manager.RequestManagerRetriever:
    486:486:void <clinit>() -> <clinit>
    56:82:void <init>(com.bumptech.glide.manager.RequestManagerRetriever$RequestManagerFactory) -> <init>
    322:325:void assertNotDestroyed(android.app.Activity) -> assertNotDestroyed
    311:316:android.app.Activity findActivity(android.content.Context) -> findActivity
    271:281:void findAllFragmentsWithViews(android.app.FragmentManager,androidx.collection.ArrayMap) -> findAllFragmentsWithViews
    288:307:void findAllFragmentsWithViewsPreO(android.app.FragmentManager,androidx.collection.ArrayMap) -> findAllFragmentsWithViewsPreO
    200:211:void findAllSupportFragmentsWithViews(java.util.Collection,java.util.Map) -> findAllSupportFragmentsWithViews
    241:260:android.app.Fragment findFragment(android.view.View,android.app.Activity) -> findFragment
    215:234:androidx.fragment.app.Fragment findSupportFragment(android.view.View,androidx.fragment.app.FragmentActivity) -> findSupportFragment
    382:392:com.bumptech.glide.RequestManager fragmentGet(android.content.Context,android.app.FragmentManager,android.app.Fragment,boolean) -> fragmentGet
    112:124:com.bumptech.glide.RequestManager get(android.content.Context) -> get
    129:135:com.bumptech.glide.RequestManager get(androidx.fragment.app.FragmentActivity) -> get
    141:147:com.bumptech.glide.RequestManager get(androidx.fragment.app.Fragment) -> get
    154:160:com.bumptech.glide.RequestManager get(android.app.Activity) -> get
    167:194:com.bumptech.glide.RequestManager get(android.view.View) -> get
    332:340:com.bumptech.glide.RequestManager get(android.app.Fragment) -> get
    87:107:com.bumptech.glide.RequestManager getApplicationManager(android.content.Context) -> getApplicationManager
    348:349:com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.Activity) -> getRequestManagerFragment
    358:372:com.bumptech.glide.manager.RequestManagerFragment getRequestManagerFragment(android.app.FragmentManager,android.app.Fragment,boolean) -> getRequestManagerFragment
    397:398:com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(androidx.fragment.app.FragmentActivity) -> getSupportRequestManagerFragment
    410:425:com.bumptech.glide.manager.SupportRequestManagerFragment getSupportRequestManagerFragment(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,boolean) -> getSupportRequestManagerFragment
    450:471:boolean handleMessage(android.os.Message) -> handleMessage
    404:404:boolean isActivityVisible(android.app.Activity) -> isActivityVisible
    434:445:com.bumptech.glide.RequestManager supportFragmentGet(android.content.Context,androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,boolean) -> supportFragmentGet
com.bumptech.glide.manager.RequestManagerRetriever$1 -> com.bumptech.glide.manager.RequestManagerRetriever$1:
    486:486:void <init>() -> <init>
    491:491:com.bumptech.glide.RequestManager build(com.bumptech.glide.Glide,com.bumptech.glide.manager.Lifecycle,com.bumptech.glide.manager.RequestManagerTreeNode,android.content.Context) -> build
com.bumptech.glide.manager.RequestTracker -> com.bumptech.glide.manager.RequestTracker:
    20:34:void <init>() -> <init>
    56:57:void addRequest(com.bumptech.glide.request.Request) -> addRequest
    70:84:boolean clearRemoveAndMaybeRecycle(com.bumptech.glide.request.Request,boolean) -> clearRemoveAndMaybeRecycle
    66:66:boolean clearRemoveAndRecycle(com.bumptech.glide.request.Request) -> clearRemoveAndRecycle
    140:146:void clearRequests() -> clearRequests
    91:91:boolean isPaused() -> isPaused
    109:116:void pauseAllRequests() -> pauseAllRequests
    98:105:void pauseRequests() -> pauseRequests
    152:163:void restartRequests() -> restartRequests
    122:132:void resumeRequests() -> resumeRequests
    42:52:void runRequest(com.bumptech.glide.request.Request) -> runRequest
    167:167:java.lang.String toString() -> toString
com.bumptech.glide.manager.SupportRequestManagerFragment -> com.bumptech.glide.manager.SupportRequestManagerFragment:
    39:40:void <init>() -> <init>
    30:46:void <init>(com.bumptech.glide.manager.ActivityFragmentLifecycle) -> <init>
    81:82:void addChildRequestManagerFragment(com.bumptech.glide.manager.SupportRequestManagerFragment) -> addChildRequestManagerFragment
    95:107:java.util.Set getDescendantRequestManagerFragments() -> getDescendantRequestManagerFragments
    59:59:com.bumptech.glide.manager.ActivityFragmentLifecycle getGlideLifecycle() -> getGlideLifecycle
    124:125:androidx.fragment.app.Fragment getParentFragmentUsingHint() -> getParentFragmentUsingHint
    67:67:com.bumptech.glide.RequestManager getRequestManager() -> getRequestManager
    77:77:com.bumptech.glide.manager.RequestManagerTreeNode getRequestManagerTreeNode() -> getRequestManagerTreeNode
    132:140:boolean isDescendant(androidx.fragment.app.Fragment) -> isDescendant
    161:170:void onAttach(android.content.Context) -> onAttach
    193:196:void onDestroy() -> onDestroy
    174:177:void onDetach() -> onDetach
    181:183:void onStart() -> onStart
    187:189:void onStop() -> onStop
    144:150:void registerFragmentWithRoot(androidx.fragment.app.FragmentActivity) -> registerFragmentWithRoot
    85:86:void removeChildRequestManagerFragment(com.bumptech.glide.manager.SupportRequestManagerFragment) -> removeChildRequestManagerFragment
    116:120:void setParentFragmentHint(androidx.fragment.app.Fragment) -> setParentFragmentHint
    54:55:void setRequestManager(com.bumptech.glide.RequestManager) -> setRequestManager
    200:200:java.lang.String toString() -> toString
    153:157:void unregisterFragmentWithRoot() -> unregisterFragmentWithRoot
com.bumptech.glide.manager.SupportRequestManagerFragment$SupportFragmentRequestManagerTreeNode -> com.bumptech.glide.manager.SupportRequestManagerFragment$SupportFragmentRequestManagerTreeNode:
    206:206:void <init>(com.bumptech.glide.manager.SupportRequestManagerFragment) -> <init>
    211:219:java.util.Set getDescendants() -> getDescendants
    224:224:java.lang.String toString() -> toString
com.bumptech.glide.manager.TargetTracker -> com.bumptech.glide.manager.TargetTracker:
    15:17:void <init>() -> <init>
    54:55:void clear() -> clear
    50:50:java.util.List getAll() -> getAll
    43:46:void onDestroy() -> onDestroy
    29:32:void onStart() -> onStart
    36:39:void onStop() -> onStop
    20:21:void track(com.bumptech.glide.request.target.Target) -> track
    24:25:void untrack(com.bumptech.glide.request.target.Target) -> untrack
com.bumptech.glide.module.AppGlideModule -> com.bumptech.glide.module.AppGlideModule:
    26:26:void <init>() -> <init>
    42:42:void applyOptions(android.content.Context,com.bumptech.glide.GlideBuilder) -> applyOptions
    36:36:boolean isManifestParsingEnabled() -> isManifestParsingEnabled
com.bumptech.glide.module.LibraryGlideModule -> com.bumptech.glide.module.LibraryGlideModule:
    20:20:void <init>() -> <init>
    25:25:void registerComponents(android.content.Context,com.bumptech.glide.Glide,com.bumptech.glide.Registry) -> registerComponents
com.bumptech.glide.module.ManifestParser -> com.bumptech.glide.module.ManifestParser:
    23:25:void <init>(android.content.Context) -> <init>
    29:60:java.util.List parse() -> parse
    67:89:com.bumptech.glide.module.GlideModule parseModule(java.lang.String) -> parseModule
    93:93:void throwInstantiateGlideModuleException(java.lang.Class,java.lang.Exception) -> throwInstantiateGlideModuleException
com.bumptech.glide.provider.EncoderRegistry -> com.bumptech.glide.provider.EncoderRegistry:
    13:15:void <init>() -> <init>
    28:30:void append(java.lang.Class,com.bumptech.glide.load.Encoder) -> append
    19:25:com.bumptech.glide.load.Encoder getEncoder(java.lang.Class) -> getEncoder
    32:34:void prepend(java.lang.Class,com.bumptech.glide.load.Encoder) -> prepend
com.bumptech.glide.provider.EncoderRegistry$Entry -> com.bumptech.glide.provider.EncoderRegistry$Entry:
    40:43:void <init>(java.lang.Class,com.bumptech.glide.load.Encoder) -> <init>
    46:46:boolean handles(java.lang.Class) -> handles
com.bumptech.glide.provider.ImageHeaderParserRegistry -> com.bumptech.glide.provider.ImageHeaderParserRegistry:
    11:12:void <init>() -> <init>
    19:21:void add(com.bumptech.glide.load.ImageHeaderParser) -> add
    16:16:java.util.List getParsers() -> getParsers
com.bumptech.glide.provider.LoadPathCache -> com.bumptech.glide.provider.LoadPathCache:
    18:28:void <clinit>() -> <clinit>
    17:34:void <init>() -> <init>
    54:61:com.bumptech.glide.load.engine.LoadPath get(java.lang.Class,java.lang.Class,java.lang.Class) -> get
    77:82:com.bumptech.glide.util.MultiClassKey getKey(java.lang.Class,java.lang.Class,java.lang.Class) -> getKey
    42:42:boolean isEmptyLoadPath(com.bumptech.glide.load.engine.LoadPath) -> isEmptyLoadPath
    68:73:void put(java.lang.Class,java.lang.Class,java.lang.Class,com.bumptech.glide.load.engine.LoadPath) -> put
com.bumptech.glide.provider.ModelToResourceClassCache -> com.bumptech.glide.provider.ModelToResourceClassCache:
    14:16:void <init>() -> <init>
    50:53:void clear() -> clear
    24:35:java.util.List get(java.lang.Class,java.lang.Class,java.lang.Class) -> get
    43:47:void put(java.lang.Class,java.lang.Class,java.lang.Class,java.util.List) -> put
com.bumptech.glide.provider.ResourceDecoderRegistry -> com.bumptech.glide.provider.ResourceDecoderRegistry:
    16:18:void <init>() -> <init>
    76:78:void append(java.lang.String,com.bumptech.glide.load.ResourceDecoder,java.lang.Class,java.lang.Class) -> append
    36:51:java.util.List getDecoders(java.lang.Class,java.lang.Class) -> getDecoders
    87:97:java.util.List getOrAddEntryList(java.lang.String) -> getOrAddEntryList
    57:71:java.util.List getResourceClasses(java.lang.Class,java.lang.Class) -> getResourceClasses
    82:84:void prepend(java.lang.String,com.bumptech.glide.load.ResourceDecoder,java.lang.Class,java.lang.Class) -> prepend
    20:31:void setBucketPriorityList(java.util.List) -> setBucketPriorityList
com.bumptech.glide.provider.ResourceDecoderRegistry$Entry -> com.bumptech.glide.provider.ResourceDecoderRegistry$Entry:
    106:110:void <init>(java.lang.Class,java.lang.Class,com.bumptech.glide.load.ResourceDecoder) -> <init>
    113:114:boolean handles(java.lang.Class,java.lang.Class) -> handles
com.bumptech.glide.provider.ResourceEncoderRegistry -> com.bumptech.glide.provider.ResourceEncoderRegistry:
    14:16:void <init>() -> <init>
    19:21:void append(java.lang.Class,com.bumptech.glide.load.ResourceEncoder) -> append
    31:39:com.bumptech.glide.load.ResourceEncoder get(java.lang.Class) -> get
    24:26:void prepend(java.lang.Class,com.bumptech.glide.load.ResourceEncoder) -> prepend
com.bumptech.glide.provider.ResourceEncoderRegistry$Entry -> com.bumptech.glide.provider.ResourceEncoderRegistry$Entry:
    46:49:void <init>(java.lang.Class,com.bumptech.glide.load.ResourceEncoder) -> <init>
    53:53:boolean handles(java.lang.Class) -> handles
com.bumptech.glide.request.BaseRequestOptions -> com.bumptech.glide.request.BaseRequestOptions:
    49:106:void <init>() -> <init>
    1129:1221:com.bumptech.glide.request.BaseRequestOptions apply(com.bumptech.glide.request.BaseRequestOptions) -> apply
    1303:1308:com.bumptech.glide.request.BaseRequestOptions autoClone() -> autoClone
    742:742:com.bumptech.glide.request.BaseRequestOptions centerCrop() -> centerCrop
    808:808:com.bumptech.glide.request.BaseRequestOptions centerInside() -> centerInside
    837:837:com.bumptech.glide.request.BaseRequestOptions circleCrop() -> circleCrop
    48:48:java.lang.Object clone() -> clone
    546:555:com.bumptech.glide.request.BaseRequestOptions clone() -> clone
    575:581:com.bumptech.glide.request.BaseRequestOptions decode(java.lang.Class) -> decode
    682:682:com.bumptech.glide.request.BaseRequestOptions disallowHardwareConfig() -> disallowHardwareConfig
    225:231:com.bumptech.glide.request.BaseRequestOptions diskCacheStrategy(com.bumptech.glide.load.engine.DiskCacheStrategy) -> diskCacheStrategy
    1108:1108:com.bumptech.glide.request.BaseRequestOptions dontAnimate() -> dontAnimate
    1082:1093:com.bumptech.glide.request.BaseRequestOptions dontTransform() -> dontTransform
    695:695:com.bumptech.glide.request.BaseRequestOptions downsample(com.bumptech.glide.load.resource.bitmap.DownsampleStrategy) -> downsample
    603:603:com.bumptech.glide.request.BaseRequestOptions encodeFormat(android.graphics.Bitmap$CompressFormat) -> encodeFormat
    613:613:com.bumptech.glide.request.BaseRequestOptions encodeQuality(int) -> encodeQuality
    1227:1251:boolean equals(java.lang.Object) -> equals
    375:385:com.bumptech.glide.request.BaseRequestOptions error(android.graphics.drawable.Drawable) -> error
    399:408:com.bumptech.glide.request.BaseRequestOptions error(int) -> error
    320:330:com.bumptech.glide.request.BaseRequestOptions fallback(android.graphics.drawable.Drawable) -> fallback
    351:361:com.bumptech.glide.request.BaseRequestOptions fallback(int) -> fallback
    776:776:com.bumptech.glide.request.BaseRequestOptions fitCenter() -> fitCenter
    657:659:com.bumptech.glide.request.BaseRequestOptions format(com.bumptech.glide.load.DecodeFormat) -> format
    629:629:com.bumptech.glide.request.BaseRequestOptions frame(long) -> frame
    1354:1354:com.bumptech.glide.load.engine.DiskCacheStrategy getDiskCacheStrategy() -> getDiskCacheStrategy
    1365:1365:int getErrorId() -> getErrorId
    1360:1360:android.graphics.drawable.Drawable getErrorPlaceholder() -> getErrorPlaceholder
    1387:1387:android.graphics.drawable.Drawable getFallbackDrawable() -> getFallbackDrawable
    1381:1381:int getFallbackId() -> getFallbackId
    1453:1453:boolean getOnlyRetrieveFromCache() -> getOnlyRetrieveFromCache
    1344:1344:com.bumptech.glide.load.Options getOptions() -> getOptions
    1423:1423:int getOverrideHeight() -> getOverrideHeight
    1415:1415:int getOverrideWidth() -> getOverrideWidth
    1376:1376:android.graphics.drawable.Drawable getPlaceholderDrawable() -> getPlaceholderDrawable
    1370:1370:int getPlaceholderId() -> getPlaceholderId
    1411:1411:com.bumptech.glide.Priority getPriority() -> getPriority
    1349:1349:java.lang.Class getResourceClass() -> getResourceClass
    1402:1402:com.bumptech.glide.load.Key getSignature() -> getSignature
    1427:1427:float getSizeMultiplier() -> getSizeMultiplier
    1392:1392:android.content.res.Resources$Theme getTheme() -> getTheme
    1334:1334:java.util.Map getTransformations() -> getTransformations
    1447:1447:boolean getUseAnimationPool() -> getUseAnimationPool
    1441:1441:boolean getUseUnlimitedSourceGeneratorsPool() -> getUseUnlimitedSourceGeneratorsPool
    1256:1277:int hashCode() -> hashCode
    1321:1321:boolean isAutoCloneEnabled() -> isAutoCloneEnabled
    1325:1325:boolean isDiskCacheStrategySet() -> isDiskCacheStrategySet
    593:593:boolean isLocked() -> isLocked
    1397:1397:boolean isMemoryCacheable() -> isMemoryCacheable
    1406:1406:boolean isPrioritySet() -> isPrioritySet
    1431:1431:boolean isScaleOnlyOrNoTransform() -> isScaleOnlyOrNoTransform
    111:111:boolean isSet(int,int) -> isSet
    1435:1435:boolean isSet(int) -> isSet
    1329:1329:boolean isSkipMemoryCacheSet() -> isSkipMemoryCacheSet
    585:585:boolean isTransformationAllowed() -> isTransformationAllowed
    1339:1339:boolean isTransformationRequired() -> isTransformationRequired
    589:589:boolean isTransformationSet() -> isTransformationSet
    1419:1419:boolean isValidOverride() -> isValidOverride
    1288:1290:com.bumptech.glide.request.BaseRequestOptions lock() -> lock
    198:205:com.bumptech.glide.request.BaseRequestOptions onlyRetrieveFromCache(boolean) -> onlyRetrieveFromCache
    727:727:com.bumptech.glide.request.BaseRequestOptions optionalCenterCrop() -> optionalCenterCrop
    792:792:com.bumptech.glide.request.BaseRequestOptions optionalCenterInside() -> optionalCenterInside
    822:822:com.bumptech.glide.request.BaseRequestOptions optionalCircleCrop() -> optionalCircleCrop
    759:759:com.bumptech.glide.request.BaseRequestOptions optionalFitCenter() -> optionalFitCenter
    878:878:com.bumptech.glide.request.BaseRequestOptions optionalScaleOnlyTransform(com.bumptech.glide.load.resource.bitmap.DownsampleStrategy,com.bumptech.glide.load.Transformation) -> optionalScaleOnlyTransform
    846:851:com.bumptech.glide.request.BaseRequestOptions optionalTransform(com.bumptech.glide.load.resource.bitmap.DownsampleStrategy,com.bumptech.glide.load.Transformation) -> optionalTransform
    983:983:com.bumptech.glide.request.BaseRequestOptions optionalTransform(com.bumptech.glide.load.Transformation) -> optionalTransform
    1027:1027:com.bumptech.glide.request.BaseRequestOptions optionalTransform(java.lang.Class,com.bumptech.glide.load.Transformation) -> optionalTransform
    476:484:com.bumptech.glide.request.BaseRequestOptions override(int,int) -> override
    498:498:com.bumptech.glide.request.BaseRequestOptions override(int) -> override
    264:274:com.bumptech.glide.request.BaseRequestOptions placeholder(android.graphics.drawable.Drawable) -> placeholder
    289:299:com.bumptech.glide.request.BaseRequestOptions placeholder(int) -> placeholder
    243:250:com.bumptech.glide.request.BaseRequestOptions priority(com.bumptech.glide.Priority) -> priority
    872:872:com.bumptech.glide.request.BaseRequestOptions scaleOnlyTransform(com.bumptech.glide.load.resource.bitmap.DownsampleStrategy,com.bumptech.glide.load.Transformation) -> scaleOnlyTransform
    888:891:com.bumptech.glide.request.BaseRequestOptions scaleOnlyTransform(com.bumptech.glide.load.resource.bitmap.DownsampleStrategy,com.bumptech.glide.load.Transformation,boolean) -> scaleOnlyTransform
    1458:1458:com.bumptech.glide.request.BaseRequestOptions self() -> self
    1314:1317:com.bumptech.glide.request.BaseRequestOptions selfOrThrowIfLocked() -> selfOrThrowIfLocked
    562:569:com.bumptech.glide.request.BaseRequestOptions set(com.bumptech.glide.load.Option,java.lang.Object) -> set
    515:521:com.bumptech.glide.request.BaseRequestOptions signature(com.bumptech.glide.load.Key) -> signature
    127:137:com.bumptech.glide.request.BaseRequestOptions sizeMultiplier(float) -> sizeMultiplier
    454:461:com.bumptech.glide.request.BaseRequestOptions skipMemoryCache(boolean) -> skipMemoryCache
    432:439:com.bumptech.glide.request.BaseRequestOptions theme(android.content.res.Resources$Theme) -> theme
    712:712:com.bumptech.glide.request.BaseRequestOptions timeout(int) -> timeout
    861:866:com.bumptech.glide.request.BaseRequestOptions transform(com.bumptech.glide.load.resource.bitmap.DownsampleStrategy,com.bumptech.glide.load.Transformation) -> transform
    912:912:com.bumptech.glide.request.BaseRequestOptions transform(com.bumptech.glide.load.Transformation) -> transform
    933:938:com.bumptech.glide.request.BaseRequestOptions transform(com.bumptech.glide.load.Transformation[]) -> transform
    989:1003:com.bumptech.glide.request.BaseRequestOptions transform(com.bumptech.glide.load.Transformation,boolean) -> transform
    1035:1052:com.bumptech.glide.request.BaseRequestOptions transform(java.lang.Class,com.bumptech.glide.load.Transformation,boolean) -> transform
    1071:1071:com.bumptech.glide.request.BaseRequestOptions transform(java.lang.Class,com.bumptech.glide.load.Transformation) -> transform
    963:963:com.bumptech.glide.request.BaseRequestOptions transforms(com.bumptech.glide.load.Transformation[]) -> transforms
    181:188:com.bumptech.glide.request.BaseRequestOptions useAnimationPool(boolean) -> useAnimationPool
    155:162:com.bumptech.glide.request.BaseRequestOptions useUnlimitedSourceGeneratorsPool(boolean) -> useUnlimitedSourceGeneratorsPool
com.bumptech.glide.request.ErrorRequestCoordinator -> com.bumptech.glide.request.ErrorRequestCoordinator:
    17:19:void <init>(com.bumptech.glide.request.RequestCoordinator) -> <init>
    28:31:void begin() -> begin
    99:99:boolean canNotifyCleared(com.bumptech.glide.request.Request) -> canNotifyCleared
    94:94:boolean canNotifyStatusChanged(com.bumptech.glide.request.Request) -> canNotifyStatusChanged
    85:85:boolean canSetImage(com.bumptech.glide.request.Request) -> canSetImage
    35:41:void clear() -> clear
    116:116:boolean isAnyResourceSet() -> isAnyResourceSet
    60:60:boolean isCleared() -> isCleared
    50:50:boolean isComplete() -> isComplete
    76:80:boolean isEquivalentTo(com.bumptech.glide.request.Request) -> isEquivalentTo
    65:65:boolean isFailed() -> isFailed
    55:55:boolean isResourceSet() -> isResourceSet
    45:45:boolean isRunning() -> isRunning
    111:111:boolean isValidRequest(com.bumptech.glide.request.Request) -> isValidRequest
    132:142:void onRequestFailed(com.bumptech.glide.request.Request) -> onRequestFailed
    125:128:void onRequestSuccess(com.bumptech.glide.request.Request) -> onRequestSuccess
    103:103:boolean parentCanNotifyCleared() -> parentCanNotifyCleared
    107:107:boolean parentCanNotifyStatusChanged() -> parentCanNotifyStatusChanged
    89:89:boolean parentCanSetImage() -> parentCanSetImage
    120:120:boolean parentIsAnyResourceSet() -> parentIsAnyResourceSet
    70:72:void recycle() -> recycle
    22:24:void setRequests(com.bumptech.glide.request.Request,com.bumptech.glide.request.Request) -> setRequests
com.bumptech.glide.request.RequestFutureTarget -> com.bumptech.glide.request.RequestFutureTarget:
    54:54:void <clinit>() -> <clinit>
    71:72:void <init>(int,int) -> <init>
    74:79:void <init>(int,int,boolean,com.bumptech.glide.request.RequestFutureTarget$Waiter) -> <init>
    82:92:boolean cancel(boolean) -> cancel
    178:212:java.lang.Object doGet(java.lang.Long) -> doGet
    108:110:java.lang.Object get() -> get
    117:117:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    141:141:com.bumptech.glide.request.Request getRequest() -> getRequest
    125:126:void getSize(com.bumptech.glide.request.target.SizeReadyCallback) -> getSize
    97:97:boolean isCancelled() -> isCancelled
    102:102:boolean isDone() -> isDone
    228:228:void onDestroy() -> onDestroy
    150:150:void onLoadCleared(android.graphics.drawable.Drawable) -> onLoadCleared
    166:166:void onLoadFailed(android.graphics.drawable.Drawable) -> onLoadFailed
    232:236:boolean onLoadFailed(com.bumptech.glide.load.engine.GlideException,java.lang.Object,com.bumptech.glide.request.target.Target,boolean) -> onLoadFailed
    158:158:void onLoadStarted(android.graphics.drawable.Drawable) -> onLoadStarted
    175:175:void onResourceReady(java.lang.Object,com.bumptech.glide.request.transition.Transition) -> onResourceReady
    242:246:boolean onResourceReady(java.lang.Object,java.lang.Object,com.bumptech.glide.request.target.Target,com.bumptech.glide.load.DataSource,boolean) -> onResourceReady
    218:218:void onStart() -> onStart
    223:223:void onStop() -> onStop
    131:131:void removeCallback(com.bumptech.glide.request.target.SizeReadyCallback) -> removeCallback
    134:136:void setRequest(com.bumptech.glide.request.Request) -> setRequest
com.bumptech.glide.request.RequestFutureTarget$Waiter -> com.bumptech.glide.request.RequestFutureTarget$Waiter:
    250:250:void <init>() -> <init>
    259:260:void notifyAll(java.lang.Object) -> notifyAll
    255:256:void waitForTimeout(java.lang.Object,long) -> waitForTimeout
com.bumptech.glide.request.RequestOptions -> com.bumptech.glide.request.RequestOptions:
    26:26:void <init>() -> <init>
    230:230:com.bumptech.glide.request.RequestOptions bitmapTransform(com.bumptech.glide.load.Transformation) -> bitmapTransform
    200:205:com.bumptech.glide.request.RequestOptions centerCropTransform() -> centerCropTransform
    185:190:com.bumptech.glide.request.RequestOptions centerInsideTransform() -> centerInsideTransform
    215:220:com.bumptech.glide.request.RequestOptions circleCropTransform() -> circleCropTransform
    264:264:com.bumptech.glide.request.RequestOptions decodeTypeOf(java.lang.Class) -> decodeTypeOf
    63:63:com.bumptech.glide.request.RequestOptions diskCacheStrategyOf(com.bumptech.glide.load.engine.DiskCacheStrategy) -> diskCacheStrategyOf
    294:294:com.bumptech.glide.request.RequestOptions downsampleOf(com.bumptech.glide.load.resource.bitmap.DownsampleStrategy) -> downsampleOf
    325:325:com.bumptech.glide.request.RequestOptions encodeFormatOf(android.graphics.Bitmap$CompressFormat) -> encodeFormatOf
    314:314:com.bumptech.glide.request.RequestOptions encodeQualityOf(int) -> encodeQualityOf
    101:101:com.bumptech.glide.request.RequestOptions errorOf(android.graphics.drawable.Drawable) -> errorOf
    110:110:com.bumptech.glide.request.RequestOptions errorOf(int) -> errorOf
    170:175:com.bumptech.glide.request.RequestOptions fitCenterTransform() -> fitCenterTransform
    274:274:com.bumptech.glide.request.RequestOptions formatOf(com.bumptech.glide.load.DecodeFormat) -> formatOf
    284:284:com.bumptech.glide.request.RequestOptions frameOf(long) -> frameOf
    336:341:com.bumptech.glide.request.RequestOptions noAnimation() -> noAnimation
    240:245:com.bumptech.glide.request.RequestOptions noTransformation() -> noTransformation
    255:255:com.bumptech.glide.request.RequestOptions option(com.bumptech.glide.load.Option,java.lang.Object) -> option
    141:141:com.bumptech.glide.request.RequestOptions overrideOf(int,int) -> overrideOf
    152:152:com.bumptech.glide.request.RequestOptions overrideOf(int) -> overrideOf
    83:83:com.bumptech.glide.request.RequestOptions placeholderOf(android.graphics.drawable.Drawable) -> placeholderOf
    92:92:com.bumptech.glide.request.RequestOptions placeholderOf(int) -> placeholderOf
    74:74:com.bumptech.glide.request.RequestOptions priorityOf(com.bumptech.glide.Priority) -> priorityOf
    161:161:com.bumptech.glide.request.RequestOptions signatureOf(com.bumptech.glide.load.Key) -> signatureOf
    54:54:com.bumptech.glide.request.RequestOptions sizeMultiplierOf(float) -> sizeMultiplierOf
    119:128:com.bumptech.glide.request.RequestOptions skipMemoryCacheOf(boolean) -> skipMemoryCacheOf
    303:303:com.bumptech.glide.request.RequestOptions timeoutOf(int) -> timeoutOf
com.bumptech.glide.request.SingleRequest -> com.bumptech.glide.request.SingleRequest:
    45:55:void <clinit>() -> <clinit>
    84:162:void <init>() -> <init>
    304:310:void assertNotCallingCallbacks() -> assertNotCallingCallbacks
    234:282:void begin() -> begin
    488:488:boolean canNotifyCleared() -> canNotifyCleared
    492:492:boolean canNotifyStatusChanged() -> canNotifyStatusChanged
    484:484:boolean canSetResource() -> canSetResource
    293:300:void cancel() -> cancel
    321:337:void clear() -> clear
    370:376:android.graphics.drawable.Drawable getErrorDrawable() -> getErrorDrawable
    390:396:android.graphics.drawable.Drawable getFallbackDrawable() -> getFallbackDrawable
    380:386:android.graphics.drawable.Drawable getPlaceholderDrawable() -> getPlaceholderDrawable
    205:205:com.bumptech.glide.util.pool.StateVerifier getVerifier() -> getVerifier
    179:200:void init(android.content.Context,com.bumptech.glide.GlideContext,java.lang.Object,java.lang.Class,com.bumptech.glide.request.BaseRequestOptions,int,int,com.bumptech.glide.Priority,com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,java.util.List,com.bumptech.glide.request.RequestCoordinator,com.bumptech.glide.load.engine.Engine,com.bumptech.glide.request.transition.TransitionFactory,java.util.concurrent.Executor) -> init
    361:361:boolean isCleared() -> isCleared
    351:351:boolean isComplete() -> isComplete
    637:653:boolean isEquivalentTo(com.bumptech.glide.request.Request) -> isEquivalentTo
    366:366:boolean isFailed() -> isFailed
    496:496:boolean isFirstReadyResource() -> isFirstReadyResource
    356:356:boolean isResourceSet() -> isResourceSet
    346:346:boolean isRunning() -> isRunning
    657:662:boolean listenerCountEquals(com.bumptech.glide.request.SingleRequest) -> listenerCountEquals
    400:402:android.graphics.drawable.Drawable loadDrawable(int) -> loadDrawable
    666:667:void logV(java.lang.String) -> logV
    480:480:int maybeApplySizeMultiplier(int,float) -> maybeApplySizeMultiplier
    506:509:void notifyLoadFailed() -> notifyLoadFailed
    500:503:void notifyLoadSuccess() -> notifyLoadSuccess
    134:155:com.bumptech.glide.request.SingleRequest obtain(android.content.Context,com.bumptech.glide.GlideContext,java.lang.Object,java.lang.Class,com.bumptech.glide.request.BaseRequestOptions,int,int,com.bumptech.glide.Priority,com.bumptech.glide.request.target.Target,com.bumptech.glide.request.RequestListener,java.util.List,com.bumptech.glide.request.RequestCoordinator,com.bumptech.glide.load.engine.Engine,com.bumptech.glide.request.transition.TransitionFactory,java.util.concurrent.Executor) -> obtain
    593:595:void onLoadFailed(com.bumptech.glide.load.engine.GlideException) -> onLoadFailed
    597:633:void onLoadFailed(com.bumptech.glide.load.engine.GlideException,int) -> onLoadFailed
    514:545:void onResourceReady(com.bumptech.glide.load.engine.Resource,com.bumptech.glide.load.DataSource) -> onResourceReady
    555:589:void onResourceReady(com.bumptech.glide.load.engine.Resource,java.lang.Object,com.bumptech.glide.load.DataSource) -> onResourceReady
    429:477:void onSizeReady(int,int) -> onSizeReady
    209:231:void recycle() -> recycle
    340:342:void releaseResource(com.bumptech.glide.load.engine.Resource) -> releaseResource
    405:423:void setErrorPlaceholder() -> setErrorPlaceholder
com.bumptech.glide.request.SingleRequest$1 -> com.bumptech.glide.request.SingleRequest$1:
    46:46:void <init>() -> <init>
    46:46:java.lang.Object create() -> create
    49:49:com.bumptech.glide.request.SingleRequest create() -> create
com.bumptech.glide.request.SingleRequest$Status -> com.bumptech.glide.request.SingleRequest$Status:
    57:81:void <clinit>() -> <clinit>
    57:57:void <init>(java.lang.String,int) -> <init>
    57:57:com.bumptech.glide.request.SingleRequest$Status valueOf(java.lang.String) -> valueOf
    57:57:com.bumptech.glide.request.SingleRequest$Status[] values() -> values
com.bumptech.glide.request.ThumbnailRequestCoordinator -> com.bumptech.glide.request.ThumbnailRequestCoordinator:
    20:21:void <init>() -> <init>
    23:25:void <init>(com.bumptech.glide.request.RequestCoordinator) -> <init>
    112:121:void begin() -> begin
    60:60:boolean canNotifyCleared(com.bumptech.glide.request.Request) -> canNotifyCleared
    55:55:boolean canNotifyStatusChanged(com.bumptech.glide.request.Request) -> canNotifyStatusChanged
    40:40:boolean canSetImage(com.bumptech.glide.request.Request) -> canSetImage
    125:128:void clear() -> clear
    73:73:boolean isAnyResourceSet() -> isAnyResourceSet
    153:153:boolean isCleared() -> isCleared
    143:143:boolean isComplete() -> isComplete
    172:177:boolean isEquivalentTo(com.bumptech.glide.request.Request) -> isEquivalentTo
    161:161:boolean isFailed() -> isFailed
    148:148:boolean isResourceSet() -> isResourceSet
    135:135:boolean isRunning() -> isRunning
    94:101:void onRequestFailed(com.bumptech.glide.request.Request) -> onRequestFailed
    78:90:void onRequestSuccess(com.bumptech.glide.request.Request) -> onRequestSuccess
    64:64:boolean parentCanNotifyCleared() -> parentCanNotifyCleared
    68:68:boolean parentCanNotifyStatusChanged() -> parentCanNotifyStatusChanged
    44:44:boolean parentCanSetImage() -> parentCanSetImage
    104:104:boolean parentIsAnyResourceSet() -> parentIsAnyResourceSet
    166:168:void recycle() -> recycle
    28:30:void setRequests(com.bumptech.glide.request.Request,com.bumptech.glide.request.Request) -> setRequests
com.bumptech.glide.request.target.AppWidgetTarget -> com.bumptech.glide.request.target.AppWidgetTarget:
    44:54:void <init>(android.content.Context,int,int,int,android.widget.RemoteViews,int[]) -> <init>
    67:68:void <init>(android.content.Context,int,android.widget.RemoteViews,int[]) -> <init>
    85:93:void <init>(android.content.Context,int,int,int,android.widget.RemoteViews,android.content.ComponentName) -> <init>
    107:108:void <init>(android.content.Context,int,android.widget.RemoteViews,android.content.ComponentName) -> <init>
    21:21:void onResourceReady(java.lang.Object,com.bumptech.glide.request.transition.Transition) -> onResourceReady
    125:127:void onResourceReady(android.graphics.Bitmap,com.bumptech.glide.request.transition.Transition) -> onResourceReady
    114:120:void update() -> update
com.bumptech.glide.request.target.BaseTarget -> com.bumptech.glide.request.target.BaseTarget:
    28:28:void <init>() -> <init>
    40:40:com.bumptech.glide.request.Request getRequest() -> getRequest
    71:71:void onDestroy() -> onDestroy
    46:46:void onLoadCleared(android.graphics.drawable.Drawable) -> onLoadCleared
    56:56:void onLoadFailed(android.graphics.drawable.Drawable) -> onLoadFailed
    51:51:void onLoadStarted(android.graphics.drawable.Drawable) -> onLoadStarted
    61:61:void onStart() -> onStart
    66:66:void onStop() -> onStop
    34:35:void setRequest(com.bumptech.glide.request.Request) -> setRequest
com.bumptech.glide.request.target.BitmapImageViewTarget -> com.bumptech.glide.request.target.BitmapImageViewTarget:
    14:15:void <init>(android.widget.ImageView) -> <init>
    24:25:void <init>(android.widget.ImageView,boolean) -> <init>
    10:10:void setResource(java.lang.Object) -> setResource
    35:36:void setResource(android.graphics.Bitmap) -> setResource
com.bumptech.glide.request.target.BitmapThumbnailImageViewTarget -> com.bumptech.glide.request.target.BitmapThumbnailImageViewTarget:
    15:16:void <init>(android.widget.ImageView) -> <init>
    24:25:void <init>(android.widget.ImageView,boolean) -> <init>
    12:12:android.graphics.drawable.Drawable getDrawable(java.lang.Object) -> getDrawable
    29:29:android.graphics.drawable.Drawable getDrawable(android.graphics.Bitmap) -> getDrawable
com.bumptech.glide.request.target.CustomTarget -> com.bumptech.glide.request.target.CustomTarget:
    56:57:void <init>() -> <init>
    67:76:void <init>(int,int) -> <init>
    121:121:com.bumptech.glide.request.Request getRequest() -> getRequest
    105:106:void getSize(com.bumptech.glide.request.target.SizeReadyCallback) -> getSize
    91:91:void onDestroy() -> onDestroy
    101:101:void onLoadFailed(android.graphics.drawable.Drawable) -> onLoadFailed
    96:96:void onLoadStarted(android.graphics.drawable.Drawable) -> onLoadStarted
    81:81:void onStart() -> onStart
    86:86:void onStop() -> onStop
    111:111:void removeCallback(com.bumptech.glide.request.target.SizeReadyCallback) -> removeCallback
    115:116:void setRequest(com.bumptech.glide.request.Request) -> setRequest
com.bumptech.glide.request.target.CustomViewTarget -> com.bumptech.glide.request.target.CustomViewTarget:
    37:37:void <clinit>() -> <clinit>
    49:52:void <init>(android.view.View) -> <init>
    139:154:com.bumptech.glide.request.target.CustomViewTarget clearOnDetach() -> clearOnDetach
    232:240:com.bumptech.glide.request.Request getRequest() -> getRequest
    194:195:void getSize(com.bumptech.glide.request.target.SizeReadyCallback) -> getSize
    274:274:java.lang.Object getTag() -> getTag
    180:180:android.view.View getView() -> getView
    278:284:void maybeAddAttachStateListener() -> maybeAddAttachStateListener
    287:293:void maybeRemoveAttachStateListener() -> maybeRemoveAttachStateListener
    89:89:void onDestroy() -> onDestroy
    210:216:void onLoadCleared(android.graphics.drawable.Drawable) -> onLoadCleared
    204:206:void onLoadStarted(android.graphics.drawable.Drawable) -> onLoadStarted
    74:74:void onResourceLoading(android.graphics.drawable.Drawable) -> onResourceLoading
    79:79:void onStart() -> onStart
    84:84:void onStop() -> onStop
    260:266:void pauseMyRequest() -> pauseMyRequest
    199:200:void removeCallback(com.bumptech.glide.request.target.SizeReadyCallback) -> removeCallback
    251:255:void resumeMyRequest() -> resumeMyRequest
    225:226:void setRequest(com.bumptech.glide.request.Request) -> setRequest
    269:270:void setTag(java.lang.Object) -> setTag
    245:245:java.lang.String toString() -> toString
    170:174:com.bumptech.glide.request.target.CustomViewTarget useTagId(int) -> useTagId
    113:114:com.bumptech.glide.request.target.CustomViewTarget waitForLayout() -> waitForLayout
com.bumptech.glide.request.target.CustomViewTarget$1 -> com.bumptech.glide.request.target.CustomViewTarget$1:
    142:142:void <init>(com.bumptech.glide.request.target.CustomViewTarget) -> <init>
    145:146:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    150:151:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
com.bumptech.glide.request.target.CustomViewTarget$SizeDeterminer -> com.bumptech.glide.request.target.CustomViewTarget$SizeDeterminer:
    303:310:void <init>(android.view.View) -> <init>
    337:349:void checkCurrentDimens() -> checkCurrentDimens
    388:394:void clearCallbacksAndListener() -> clearCallbacksAndListener
    314:322:int getMaxDisplayLength(android.content.Context) -> getMaxDisplayLength
    352:369:void getSize(com.bumptech.glide.request.target.SizeReadyCallback) -> getSize
    418:468:int getTargetDimen(int,int,int) -> getTargetDimen
    401:404:int getTargetHeight() -> getTargetHeight
    408:411:int getTargetWidth() -> getTargetWidth
    472:472:boolean isDimensionValid(int) -> isDimensionValid
    397:397:boolean isViewStateAndSizeValid(int,int) -> isViewStateAndSizeValid
    330:333:void notifyCbs(int,int) -> notifyCbs
    378:379:void removeCallback(com.bumptech.glide.request.target.SizeReadyCallback) -> removeCallback
com.bumptech.glide.request.target.CustomViewTarget$SizeDeterminer$SizeDeterminerLayoutListener -> com.bumptech.glide.request.target.CustomViewTarget$SizeDeterminer$SizeDeterminerLayoutListener:
    479:481:void <init>(com.bumptech.glide.request.target.CustomViewTarget$SizeDeterminer) -> <init>
    485:492:boolean onPreDraw() -> onPreDraw
com.bumptech.glide.request.target.DrawableImageViewTarget -> com.bumptech.glide.request.target.DrawableImageViewTarget:
    13:14:void <init>(android.widget.ImageView) -> <init>
    23:24:void <init>(android.widget.ImageView,boolean) -> <init>
    10:10:void setResource(java.lang.Object) -> setResource
    28:29:void setResource(android.graphics.drawable.Drawable) -> setResource
com.bumptech.glide.request.target.DrawableThumbnailImageViewTarget -> com.bumptech.glide.request.target.DrawableThumbnailImageViewTarget:
    13:14:void <init>(android.widget.ImageView) -> <init>
    22:23:void <init>(android.widget.ImageView,boolean) -> <init>
    10:10:android.graphics.drawable.Drawable getDrawable(java.lang.Object) -> getDrawable
    27:27:android.graphics.drawable.Drawable getDrawable(android.graphics.drawable.Drawable) -> getDrawable
com.bumptech.glide.request.target.FixedSizeDrawable -> com.bumptech.glide.request.target.FixedSizeDrawable:
    34:35:void <init>(android.graphics.drawable.Drawable,int,int) -> <init>
    37:47:void <init>(com.bumptech.glide.request.target.FixedSizeDrawable$State,android.graphics.drawable.Drawable) -> <init>
    106:107:void clearColorFilter() -> clearColorFilter
    165:169:void draw(android.graphics.Canvas) -> draw
    96:96:int getAlpha() -> getAlpha
    90:90:android.graphics.drawable.Drawable$Callback getCallback() -> getCallback
    74:74:int getChangingConfigurations() -> getChangingConfigurations
    199:199:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    112:112:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    127:127:int getIntrinsicHeight() -> getIntrinsicHeight
    122:122:int getIntrinsicWidth() -> getIntrinsicWidth
    137:137:int getMinimumHeight() -> getMinimumHeight
    132:132:int getMinimumWidth() -> getMinimumWidth
    183:183:int getOpacity() -> getOpacity
    142:142:boolean getPadding(android.graphics.Rect) -> getPadding
    147:149:void invalidateSelf() -> invalidateSelf
    189:194:android.graphics.drawable.Drawable mutate() -> mutate
    159:161:void scheduleSelf(java.lang.Runnable,long) -> scheduleSelf
    173:174:void setAlpha(int) -> setAlpha
    51:54:void setBounds(int,int,int,int) -> setBounds
    58:61:void setBounds(android.graphics.Rect) -> setBounds
    69:70:void setChangingConfigurations(int) -> setChangingConfigurations
    101:102:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    178:179:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    80:81:void setDither(boolean) -> setDither
    85:86:void setFilterBitmap(boolean) -> setFilterBitmap
    117:117:boolean setVisible(boolean,boolean) -> setVisible
    153:155:void unscheduleSelf(java.lang.Runnable) -> unscheduleSelf
    64:65:void updateMatrix() -> updateMatrix
com.bumptech.glide.request.target.FixedSizeDrawable$State -> com.bumptech.glide.request.target.FixedSizeDrawable$State:
    208:209:void <init>(com.bumptech.glide.request.target.FixedSizeDrawable$State) -> <init>
    211:215:void <init>(android.graphics.drawable.Drawable$ConstantState,int,int) -> <init>
    231:231:int getChangingConfigurations() -> getChangingConfigurations
    220:220:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    226:226:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
com.bumptech.glide.request.target.ImageViewTarget -> com.bumptech.glide.request.target.ImageViewTarget:
    26:27:void <init>(android.widget.ImageView) -> <init>
    35:36:void <init>(android.widget.ImageView,boolean) -> <init>
    45:45:android.graphics.drawable.Drawable getCurrentDrawable() -> getCurrentDrawable
    132:138:void maybeUpdateAnimatable(java.lang.Object) -> maybeUpdateAnimatable
    93:99:void onLoadCleared(android.graphics.drawable.Drawable) -> onLoadCleared
    80:83:void onLoadFailed(android.graphics.drawable.Drawable) -> onLoadFailed
    67:70:void onLoadStarted(android.graphics.drawable.Drawable) -> onLoadStarted
    103:108:void onResourceReady(java.lang.Object,com.bumptech.glide.request.transition.Transition) -> onResourceReady
    112:115:void onStart() -> onStart
    119:122:void onStop() -> onStop
    56:57:void setDrawable(android.graphics.drawable.Drawable) -> setDrawable
    127:129:void setResourceInternal(java.lang.Object) -> setResourceInternal
com.bumptech.glide.request.target.ImageViewTargetFactory -> com.bumptech.glide.request.target.ImageViewTargetFactory:
    12:12:void <init>() -> <init>
    17:22:com.bumptech.glide.request.target.ViewTarget buildTarget(android.widget.ImageView,java.lang.Class) -> buildTarget
com.bumptech.glide.request.target.NotificationTarget -> com.bumptech.glide.request.target.NotificationTarget:
    45:46:void <init>(android.content.Context,int,android.widget.RemoteViews,android.app.Notification,int) -> <init>
    64:66:void <init>(android.content.Context,int,android.widget.RemoteViews,android.app.Notification,int,java.lang.String) -> <init>
    88:97:void <init>(android.content.Context,int,int,int,android.widget.RemoteViews,android.app.Notification,int,java.lang.String) -> <init>
    22:22:void onResourceReady(java.lang.Object,com.bumptech.glide.request.transition.Transition) -> onResourceReady
    112:114:void onResourceReady(android.graphics.Bitmap,com.bumptech.glide.request.transition.Transition) -> onResourceReady
    103:107:void update() -> update
com.bumptech.glide.request.target.PreloadTarget -> com.bumptech.glide.request.target.PreloadTarget:
    21:21:void <clinit>() -> <clinit>
    46:48:void <init>(com.bumptech.glide.RequestManager,int,int) -> <init>
    57:58:void clear() -> clear
    42:42:com.bumptech.glide.request.target.PreloadTarget obtain(com.bumptech.glide.RequestManager,int,int) -> obtain
    52:53:void onResourceReady(java.lang.Object,com.bumptech.glide.request.transition.Transition) -> onResourceReady
com.bumptech.glide.request.target.PreloadTarget$1 -> com.bumptech.glide.request.target.PreloadTarget$1:
    21:21:void <init>() -> <init>
    24:28:boolean handleMessage(android.os.Message) -> handleMessage
com.bumptech.glide.request.target.SimpleTarget -> com.bumptech.glide.request.target.SimpleTarget:
    81:82:void <init>() -> <init>
    93:96:void <init>(int,int) -> <init>
    105:112:void getSize(com.bumptech.glide.request.target.SizeReadyCallback) -> getSize
    117:117:void removeCallback(com.bumptech.glide.request.target.SizeReadyCallback) -> removeCallback
com.bumptech.glide.request.target.ThumbnailImageViewTarget -> com.bumptech.glide.request.target.ThumbnailImageViewTarget:
    28:29:void <init>(android.widget.ImageView) -> <init>
    37:38:void <init>(android.widget.ImageView,boolean) -> <init>
    42:49:void setResource(java.lang.Object) -> setResource
com.bumptech.glide.request.target.ViewTarget -> com.bumptech.glide.request.target.ViewTarget:
    64:67:void <init>(android.view.View) -> <init>
    84:88:void <init>(android.view.View,boolean) -> <init>
    112:127:com.bumptech.glide.request.target.ViewTarget clearOnDetach() -> clearOnDetach
    265:275:com.bumptech.glide.request.Request getRequest() -> getRequest
    221:222:void getSize(com.bumptech.glide.request.target.SizeReadyCallback) -> getSize
    294:297:java.lang.Object getTag() -> getTag
    206:206:android.view.View getView() -> getView
    184:190:void maybeAddAttachStateListener() -> maybeAddAttachStateListener
    193:199:void maybeRemoveAttachStateListener() -> maybeRemoveAttachStateListener
    233:239:void onLoadCleared(android.graphics.drawable.Drawable) -> onLoadCleared
    179:181:void onLoadStarted(android.graphics.drawable.Drawable) -> onLoadStarted
    140:148:void pauseMyRequest() -> pauseMyRequest
    227:228:void removeCallback(com.bumptech.glide.request.target.SizeReadyCallback) -> removeCallback
    132:136:void resumeMyRequest() -> resumeMyRequest
    248:249:void setRequest(com.bumptech.glide.request.Request) -> setRequest
    284:290:void setTag(java.lang.Object) -> setTag
    322:327:void setTagId(int) -> setTagId
    280:280:java.lang.String toString() -> toString
    172:173:com.bumptech.glide.request.target.ViewTarget waitForLayout() -> waitForLayout
com.bumptech.glide.request.target.ViewTarget$1 -> com.bumptech.glide.request.target.ViewTarget$1:
    115:115:void <init>(com.bumptech.glide.request.target.ViewTarget) -> <init>
    118:119:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    123:124:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
com.bumptech.glide.request.target.ViewTarget$SizeDeterminer -> com.bumptech.glide.request.target.ViewTarget$SizeDeterminer:
    337:344:void <init>(android.view.View) -> <init>
    371:383:void checkCurrentDimens() -> checkCurrentDimens
    422:428:void clearCallbacksAndListener() -> clearCallbacksAndListener
    348:356:int getMaxDisplayLength(android.content.Context) -> getMaxDisplayLength
    386:403:void getSize(com.bumptech.glide.request.target.SizeReadyCallback) -> getSize
    452:502:int getTargetDimen(int,int,int) -> getTargetDimen
    435:438:int getTargetHeight() -> getTargetHeight
    442:445:int getTargetWidth() -> getTargetWidth
    506:506:boolean isDimensionValid(int) -> isDimensionValid
    431:431:boolean isViewStateAndSizeValid(int,int) -> isViewStateAndSizeValid
    364:367:void notifyCbs(int,int) -> notifyCbs
    412:413:void removeCallback(com.bumptech.glide.request.target.SizeReadyCallback) -> removeCallback
com.bumptech.glide.request.target.ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener -> com.bumptech.glide.request.target.ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener:
    513:515:void <init>(com.bumptech.glide.request.target.ViewTarget$SizeDeterminer) -> <init>
    519:526:boolean onPreDraw() -> onPreDraw
com.bumptech.glide.request.transition.BitmapContainerTransitionFactory -> com.bumptech.glide.request.transition.BitmapContainerTransitionFactory:
    22:24:void <init>(com.bumptech.glide.request.transition.TransitionFactory) -> <init>
    28:29:com.bumptech.glide.request.transition.Transition build(com.bumptech.glide.load.DataSource,boolean) -> build
com.bumptech.glide.request.transition.BitmapContainerTransitionFactory$BitmapGlideAnimation -> com.bumptech.glide.request.transition.BitmapContainerTransitionFactory$BitmapGlideAnimation:
    45:47:void <init>(com.bumptech.glide.request.transition.BitmapContainerTransitionFactory,com.bumptech.glide.request.transition.Transition) -> <init>
    51:53:boolean transition(java.lang.Object,com.bumptech.glide.request.transition.Transition$ViewAdapter) -> transition
com.bumptech.glide.request.transition.BitmapTransitionFactory -> com.bumptech.glide.request.transition.BitmapTransitionFactory:
    15:16:void <init>(com.bumptech.glide.request.transition.TransitionFactory) -> <init>
    13:13:android.graphics.Bitmap getBitmap(java.lang.Object) -> getBitmap
    21:21:android.graphics.Bitmap getBitmap(android.graphics.Bitmap) -> getBitmap
com.bumptech.glide.request.transition.DrawableCrossFadeFactory -> com.bumptech.glide.request.transition.DrawableCrossFadeFactory:
    23:26:void <init>(int,boolean) -> <init>
    30:31:com.bumptech.glide.request.transition.Transition build(com.bumptech.glide.load.DataSource,boolean) -> build
    35:38:com.bumptech.glide.request.transition.Transition getResourceTransition() -> getResourceTransition
com.bumptech.glide.request.transition.DrawableCrossFadeFactory$Builder -> com.bumptech.glide.request.transition.DrawableCrossFadeFactory$Builder:
    51:52:void <init>() -> <init>
    57:59:void <init>(int) -> <init>
    79:79:com.bumptech.glide.request.transition.DrawableCrossFadeFactory build() -> build
    74:75:com.bumptech.glide.request.transition.DrawableCrossFadeFactory$Builder setCrossFadeEnabled(boolean) -> setCrossFadeEnabled
com.bumptech.glide.request.transition.DrawableCrossFadeTransition -> com.bumptech.glide.request.transition.DrawableCrossFadeTransition:
    31:34:void <init>(int,boolean) -> <init>
    15:15:boolean transition(java.lang.Object,com.bumptech.glide.request.transition.Transition$ViewAdapter) -> transition
    49:58:boolean transition(android.graphics.drawable.Drawable,com.bumptech.glide.request.transition.Transition$ViewAdapter) -> transition
com.bumptech.glide.request.transition.NoTransition -> com.bumptech.glide.request.transition.NoTransition:
    13:15:void <clinit>() -> <clinit>
    12:12:void <init>() -> <init>
    44:44:com.bumptech.glide.request.transition.Transition get() -> get
    36:36:com.bumptech.glide.request.transition.TransitionFactory getFactory() -> getFactory
    52:52:boolean transition(java.lang.Object,com.bumptech.glide.request.transition.Transition$ViewAdapter) -> transition
com.bumptech.glide.request.transition.NoTransition$NoAnimationFactory -> com.bumptech.glide.request.transition.NoTransition$NoAnimationFactory:
    23:23:void <init>() -> <init>
    27:27:com.bumptech.glide.request.transition.Transition build(com.bumptech.glide.load.DataSource,boolean) -> build
com.bumptech.glide.request.transition.ViewAnimationFactory -> com.bumptech.glide.request.transition.ViewAnimationFactory:
    20:21:void <init>(android.view.animation.Animation) -> <init>
    24:25:void <init>(int) -> <init>
    28:30:void <init>(com.bumptech.glide.request.transition.ViewTransition$ViewTransitionAnimationFactory) -> <init>
    42:50:com.bumptech.glide.request.transition.Transition build(com.bumptech.glide.load.DataSource,boolean) -> build
com.bumptech.glide.request.transition.ViewAnimationFactory$ConcreteViewTransitionAnimationFactory -> com.bumptech.glide.request.transition.ViewAnimationFactory$ConcreteViewTransitionAnimationFactory:
    57:59:void <init>(android.view.animation.Animation) -> <init>
    63:63:android.view.animation.Animation build(android.content.Context) -> build
com.bumptech.glide.request.transition.ViewAnimationFactory$ResourceViewTransitionAnimationFactory -> com.bumptech.glide.request.transition.ViewAnimationFactory$ResourceViewTransitionAnimationFactory:
    71:73:void <init>(int) -> <init>
    77:77:android.view.animation.Animation build(android.content.Context) -> build
com.bumptech.glide.request.transition.ViewPropertyAnimationFactory -> com.bumptech.glide.request.transition.ViewPropertyAnimationFactory:
    14:16:void <init>(com.bumptech.glide.request.transition.ViewPropertyTransition$Animator) -> <init>
    26:33:com.bumptech.glide.request.transition.Transition build(com.bumptech.glide.load.DataSource,boolean) -> build
com.bumptech.glide.request.transition.ViewPropertyTransition -> com.bumptech.glide.request.transition.ViewPropertyTransition:
    24:26:void <init>(com.bumptech.glide.request.transition.ViewPropertyTransition$Animator) -> <init>
    39:43:boolean transition(java.lang.Object,com.bumptech.glide.request.transition.Transition$ViewAdapter) -> transition
com.bumptech.glide.request.transition.ViewTransition -> com.bumptech.glide.request.transition.ViewTransition:
    22:24:void <init>(com.bumptech.glide.request.transition.ViewTransition$ViewTransitionAnimationFactory) -> <init>
    39:46:boolean transition(java.lang.Object,com.bumptech.glide.request.transition.Transition$ViewAdapter) -> transition
com.bumptech.glide.signature.ApplicationVersionSignature -> com.bumptech.glide.signature.ApplicationVersionSignature:
    21:21:void <clinit>() -> <clinit>
    76:78:void <init>() -> <init>
    69:72:android.content.pm.PackageInfo getPackageInfo(android.content.Context) -> getPackageInfo
    58:63:java.lang.String getVersionCode(android.content.pm.PackageInfo) -> getVersionCode
    29:40:com.bumptech.glide.load.Key obtain(android.content.Context) -> obtain
    50:52:com.bumptech.glide.load.Key obtainVersionSignature(android.content.Context) -> obtainVersionSignature
    45:46:void reset() -> reset
com.bumptech.glide.signature.EmptySignature -> com.bumptech.glide.signature.EmptySignature:
    11:11:void <clinit>() -> <clinit>
    18:20:void <init>() -> <init>
    15:15:com.bumptech.glide.signature.EmptySignature obtain() -> obtain
    24:24:java.lang.String toString() -> toString
    30:30:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.signature.MediaStoreSignature -> com.bumptech.glide.signature.MediaStoreSignature:
    30:34:void <init>(java.lang.String,long,int) -> <init>
    39:57:boolean equals(java.lang.Object) -> equals
    62:65:int hashCode() -> hashCode
    70:73:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.signature.ObjectKey -> com.bumptech.glide.signature.ObjectKey:
    20:22:void <init>(java.lang.Object) -> <init>
    33:37:boolean equals(java.lang.Object) -> equals
    42:42:int hashCode() -> hashCode
    26:26:java.lang.String toString() -> toString
    47:48:void updateDiskCacheKey(java.security.MessageDigest) -> updateDiskCacheKey
com.bumptech.glide.util.ByteBufferUtil -> com.bumptech.glide.util.ByteBufferUtil:
    22:22:void <clinit>() -> <clinit>
    24:26:void <init>() -> <init>
    30:59:java.nio.ByteBuffer fromFile(java.io.File) -> fromFile
    138:155:java.nio.ByteBuffer fromStream(java.io.InputStream) -> fromStream
    160:163:com.bumptech.glide.util.ByteBufferUtil$SafeArray getSafeArray(java.nio.ByteBuffer) -> getSafeArray
    119:128:byte[] toBytes(java.nio.ByteBuffer) -> toBytes
    65:91:void toFile(java.nio.ByteBuffer,java.io.File) -> toFile
    95:112:void toStream(java.nio.ByteBuffer,java.io.OutputStream) -> toStream
    133:133:java.io.InputStream toStream(java.nio.ByteBuffer) -> toStream
com.bumptech.glide.util.ByteBufferUtil$ByteBufferStream -> com.bumptech.glide.util.ByteBufferUtil$ByteBufferStream:
    183:187:void <init>(java.nio.ByteBuffer) -> <init>
    191:191:int available() -> available
    203:205:void mark(int) -> mark
    209:209:boolean markSupported() -> markSupported
    196:199:int read() -> read
    214:219:int read(byte[],int,int) -> read
    223:229:void reset() -> reset
    233:239:long skip(long) -> skip
com.bumptech.glide.util.ByteBufferUtil$SafeArray -> com.bumptech.glide.util.ByteBufferUtil$SafeArray:
    173:177:void <init>(byte[],int,int) -> <init>
com.bumptech.glide.util.CachedHashCodeArrayMap -> com.bumptech.glide.util.CachedHashCodeArrayMap:
    15:15:void <init>() -> <init>
    21:23:void clear() -> clear
    51:54:int hashCode() -> hashCode
    33:34:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    39:41:void putAll(androidx.collection.SimpleArrayMap) -> putAll
    45:46:java.lang.Object removeAt(int) -> removeAt
    27:28:java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
com.bumptech.glide.util.ContentLengthInputStream -> com.bumptech.glide.util.ContentLengthInputStream:
    48:50:void <init>(java.io.InputStream,long) -> <init>
    54:54:int available() -> available
    76:83:int checkReadSoFarOrThrow(int) -> checkReadSoFarOrThrow
    25:25:java.io.InputStream obtain(java.io.InputStream,java.lang.String) -> obtain
    30:30:java.io.InputStream obtain(java.io.InputStream,long) -> obtain
    34:44:int parseContentLength(java.lang.String) -> parseContentLength
    58:61:int read() -> read
    66:66:int read(byte[]) -> read
    72:72:int read(byte[],int,int) -> read
com.bumptech.glide.util.ExceptionCatchingInputStream -> com.bumptech.glide.util.ExceptionCatchingInputStream:
    19:19:void <clinit>() -> <clinit>
    44:46:void <init>() -> <init>
    54:54:int available() -> available
    39:42:void clearQueue() -> clearQueue
    59:60:void close() -> close
    127:127:java.io.IOException getException() -> getException
    64:65:void mark(int) -> mark
    69:69:boolean markSupported() -> markSupported
    27:34:com.bumptech.glide.util.ExceptionCatchingInputStream obtain(java.io.InputStream) -> obtain
    76:81:int read(byte[]) -> read
    88:93:int read(byte[],int,int) -> read
    117:122:int read() -> read
    131:136:void release() -> release
    97:99:void reset() -> reset
    49:50:void setInputStream(java.io.InputStream) -> setInputStream
    105:110:long skip(long) -> skip
com.bumptech.glide.util.Executors -> com.bumptech.glide.util.Executors:
    17:26:void <clinit>() -> <clinit>
    13:15:void <init>() -> <init>
    41:41:java.util.concurrent.Executor directExecutor() -> directExecutor
    36:36:java.util.concurrent.Executor mainThreadExecutor() -> mainThreadExecutor
    46:60:void shutdownAndAwaitTermination(java.util.concurrent.ExecutorService) -> shutdownAndAwaitTermination
com.bumptech.glide.util.Executors$1 -> com.bumptech.glide.util.Executors$1:
    18:19:void <init>() -> <init>
    23:24:void execute(java.lang.Runnable) -> execute
com.bumptech.glide.util.Executors$2 -> com.bumptech.glide.util.Executors$2:
    27:27:void <init>() -> <init>
    30:31:void execute(java.lang.Runnable) -> execute
com.bumptech.glide.util.FixedPreloadSizeProvider -> com.bumptech.glide.util.FixedPreloadSizeProvider:
    22:24:void <init>(int,int) -> <init>
    32:32:int[] getPreloadSize(java.lang.Object,int,int) -> getPreloadSize
com.bumptech.glide.util.LogTime -> com.bumptech.glide.util.LogTime:
    11:12:void <clinit>() -> <clinit>
    14:16:void <init>() -> <init>
    37:37:double getElapsedMillis(long) -> getElapsedMillis
    24:27:long getLogTime() -> getLogTime
com.bumptech.glide.util.LruCache -> com.bumptech.glide.util.LruCache:
    18:32:void <init>(long) -> <init>
    164:165:void clearMemory() -> clearMemory
    98:98:boolean contains(java.lang.Object) -> contains
    188:189:void evict() -> evict
    108:108:java.lang.Object get(java.lang.Object) -> get
    64:64:int getCount() -> getCount
    88:88:long getCurrentSize() -> getCurrentSize
    81:81:long getMaxSize() -> getMaxSize
    57:57:int getSize(java.lang.Object) -> getSize
    75:75:void onItemEvicted(java.lang.Object,java.lang.Object) -> onItemEvicted
    123:143:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    152:157:java.lang.Object remove(java.lang.Object) -> remove
    41:47:void setSizeMultiplier(float) -> setSizeMultiplier
    175:185:void trimToSize(long) -> trimToSize
com.bumptech.glide.util.MarkEnforcingInputStream -> com.bumptech.glide.util.MarkEnforcingInputStream:
    16:20:void <init>(java.io.InputStream) -> <init>
    71:72:int available() -> available
    76:81:long getBytesToRead(long) -> getBytesToRead
    23:26:void mark(int) -> mark
    30:36:int read() -> read
    41:48:int read(byte[],int,int) -> read
    52:55:void reset() -> reset
    59:66:long skip(long) -> skip
    86:90:void updateAvailableBytesAfterRead(long) -> updateAvailableBytesAfterRead
com.bumptech.glide.util.MultiClassKey -> com.bumptech.glide.util.MultiClassKey:
    15:17:void <init>() -> <init>
    19:21:void <init>(java.lang.Class,java.lang.Class) -> <init>
    24:26:void <init>(java.lang.Class,java.lang.Class,java.lang.Class) -> <init>
    46:65:boolean equals(java.lang.Object) -> equals
    70:73:int hashCode() -> hashCode
    29:30:void set(java.lang.Class,java.lang.Class) -> set
    33:36:void set(java.lang.Class,java.lang.Class,java.lang.Class) -> set
    40:40:java.lang.String toString() -> toString
com.bumptech.glide.util.Preconditions -> com.bumptech.glide.util.Preconditions:
    13:15:void <init>() -> <init>
    18:21:void checkArgument(boolean,java.lang.String) -> checkArgument
    38:41:java.lang.String checkNotEmpty(java.lang.String) -> checkNotEmpty
    46:49:java.util.Collection checkNotEmpty(java.util.Collection) -> checkNotEmpty
    25:25:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    30:33:java.lang.Object checkNotNull(java.lang.Object,java.lang.String) -> checkNotNull
com.bumptech.glide.util.Util -> com.bumptech.glide.util.Util:
    23:25:void <clinit>() -> <clinit>
    27:29:void <init>() -> <init>
    150:153:void assertBackgroundThread() -> assertBackgroundThread
    141:144:void assertMainThread() -> assertMainThread
    209:215:boolean bothModelsNullEquivalentOrEquals(java.lang.Object,java.lang.Object) -> bothModelsNullEquivalentOrEquals
    205:205:boolean bothNullOrEqual(java.lang.Object,java.lang.Object) -> bothNullOrEqual
    48:53:java.lang.String bytesToHex(byte[],char[]) -> bytesToHex
    174:174:java.util.Queue createQueue(int) -> createQueue
    76:88:int getBitmapByteSize(android.graphics.Bitmap) -> getBitmapByteSize
    96:96:int getBitmapByteSize(int,int,android.graphics.Bitmap$Config) -> getBitmapByteSize
    101:122:int getBytesPerPixel(android.graphics.Bitmap$Config) -> getBytesPerPixel
    65:65:int getSize(android.graphics.Bitmap) -> getSize
    190:196:java.util.List getSnapshot(java.util.Collection) -> getSnapshot
    219:219:int hashCode(int) -> hashCode
    223:223:int hashCode(int,int) -> hashCode
    227:227:int hashCode(float) -> hashCode
    231:231:int hashCode(float,int) -> hashCode
    235:235:int hashCode(java.lang.Object,int) -> hashCode
    239:239:int hashCode(boolean,int) -> hashCode
    243:243:int hashCode(boolean) -> hashCode
    166:166:boolean isOnBackgroundThread() -> isOnBackgroundThread
    159:159:boolean isOnMainThread() -> isOnMainThread
    133:133:boolean isValidDimension(int) -> isValidDimension
    129:129:boolean isValidDimensions(int,int) -> isValidDimensions
    36:38:java.lang.String sha256BytesToHex(byte[]) -> sha256BytesToHex
com.bumptech.glide.util.Util$1 -> com.bumptech.glide.util.Util$1:
    106:106:void <clinit>() -> <clinit>
com.bumptech.glide.util.ViewPreloadSizeProvider -> com.bumptech.glide.util.ViewPreloadSizeProvider:
    32:34:void <init>() -> <init>
    44:46:void <init>(android.view.View) -> <init>
    51:54:int[] getPreloadSize(java.lang.Object,int,int) -> getPreloadSize
    60:62:void onSizeReady(int,int) -> onSizeReady
    74:78:void setView(android.view.View) -> setView
com.bumptech.glide.util.ViewPreloadSizeProvider$SizeViewTarget -> com.bumptech.glide.util.ViewPreloadSizeProvider$SizeViewTarget:
    82:84:void <init>(android.view.View,com.bumptech.glide.request.target.SizeReadyCallback) -> <init>
    90:90:void onResourceReady(java.lang.Object,com.bumptech.glide.request.transition.Transition) -> onResourceReady
com.bumptech.glide.util.pool.FactoryPools -> com.bumptech.glide.util.pool.FactoryPools:
    19:19:void <clinit>() -> <clinit>
    26:26:void <init>() -> <init>
    102:102:androidx.core.util.Pools$Pool build(androidx.core.util.Pools$Pool,com.bumptech.glide.util.pool.FactoryPools$Factory) -> build
    108:108:androidx.core.util.Pools$Pool build(androidx.core.util.Pools$Pool,com.bumptech.glide.util.pool.FactoryPools$Factory,com.bumptech.glide.util.pool.FactoryPools$Resetter) -> build
    114:114:com.bumptech.glide.util.pool.FactoryPools$Resetter emptyResetter() -> emptyResetter
    40:40:androidx.core.util.Pools$Pool simple(int,com.bumptech.glide.util.pool.FactoryPools$Factory) -> simple
    55:55:androidx.core.util.Pools$Pool threadSafe(int,com.bumptech.glide.util.pool.FactoryPools$Factory) -> threadSafe
    69:69:androidx.core.util.Pools$Pool threadSafeList() -> threadSafeList
    85:85:androidx.core.util.Pools$Pool threadSafeList(int) -> threadSafeList
com.bumptech.glide.util.pool.FactoryPools$1 -> com.bumptech.glide.util.pool.FactoryPools$1:
    19:19:void <init>() -> <init>
    23:23:void reset(java.lang.Object) -> reset
com.bumptech.glide.util.pool.FactoryPools$2 -> com.bumptech.glide.util.pool.FactoryPools$2:
    85:85:void <init>() -> <init>
    85:85:java.lang.Object create() -> create
    89:89:java.util.List create() -> create
com.bumptech.glide.util.pool.FactoryPools$3 -> com.bumptech.glide.util.pool.FactoryPools$3:
    91:91:void <init>() -> <init>
    91:91:void reset(java.lang.Object) -> reset
    94:95:void reset(java.util.List) -> reset
com.bumptech.glide.util.pool.FactoryPools$FactoryPool -> com.bumptech.glide.util.pool.FactoryPools$FactoryPool:
    149:153:void <init>(androidx.core.util.Pools$Pool,com.bumptech.glide.util.pool.FactoryPools$Factory,com.bumptech.glide.util.pool.FactoryPools$Resetter) -> <init>
    157:167:java.lang.Object acquire() -> acquire
    172:176:boolean release(java.lang.Object) -> release
com.bumptech.glide.util.pool.GlideTrace -> com.bumptech.glide.util.pool.GlideTrace:
    16:18:void <init>() -> <init>
    31:31:void beginSection(java.lang.String) -> beginSection
    37:37:void beginSectionFormat(java.lang.String,java.lang.Object) -> beginSectionFormat
    43:43:void beginSectionFormat(java.lang.String,java.lang.Object,java.lang.Object) -> beginSectionFormat
    49:49:void beginSectionFormat(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> beginSectionFormat
    55:55:void endSection() -> endSection
    21:24:java.lang.String truncateTag(java.lang.String) -> truncateTag
com.bumptech.glide.util.pool.StateVerifier -> com.bumptech.glide.util.pool.StateVerifier:
    9:9:void <init>(com.bumptech.glide.util.pool.StateVerifier$1) -> <init>
    24:24:void <init>() -> <init>
    20:20:com.bumptech.glide.util.pool.StateVerifier newInstance() -> newInstance
com.bumptech.glide.util.pool.StateVerifier$DebugStateVerifier -> com.bumptech.glide.util.pool.StateVerifier$DebugStateVerifier:
    61:61:void <init>() -> <init>
    72:77:void setRecycled(boolean) -> setRecycled
    65:68:void throwIfRecycled() -> throwIfRecycled
com.bumptech.glide.util.pool.StateVerifier$DefaultStateVerifier -> com.bumptech.glide.util.pool.StateVerifier$DefaultStateVerifier:
    41:41:void <init>() -> <init>
    52:53:void setRecycled(boolean) -> setRecycled
    45:48:void throwIfRecycled() -> throwIfRecycled
com.bun.miitmdid.provider.freeme.FreemeProvider$1 -> com.bun.miitmdid.provider.freeme.FreemeProvider$1:
    1:7:void connectSuccess(boolean) -> connectSuccess
com.dcloud.android.downloader.DownloadManagerImpl -> com.dcloud.android.downloader.DownloadManagerImpl:
    1:26:void <init>(android.content.Context,com.dcloud.android.downloader.config.Config) -> <init>
    1:2:void download(com.dcloud.android.downloader.domain.DownloadInfo) -> download
    1:1:java.util.List findAllDownloaded() -> findAllDownloaded
    1:1:java.util.List findAllDownloading() -> findAllDownloading
    1:9:com.dcloud.android.downloader.domain.DownloadInfo getDownloadById(int) -> getDownloadById
    1:1:com.dcloud.android.downloader.db.DownloadDBController getDownloadDBController() -> getDownloadDBController
    1:7:com.dcloud.android.downloader.callback.DCDownloadManager getInstance(android.content.Context,com.dcloud.android.downloader.config.Config) -> getInstance
    1:2:boolean isExecute() -> isExecute
    1:3:void onDownloadSuccess(com.dcloud.android.downloader.domain.DownloadInfo) -> onDownloadSuccess
    1:5:void pause(com.dcloud.android.downloader.domain.DownloadInfo) -> pause
    1:10:void prepareDownload(com.dcloud.android.downloader.domain.DownloadInfo) -> prepareDownload
    1:3:void prepareDownloadNextTask() -> prepareDownloadNextTask
    1:5:void remove(com.dcloud.android.downloader.domain.DownloadInfo) -> remove
    1:3:void resume(com.dcloud.android.downloader.domain.DownloadInfo) -> resume
com.dcloud.android.downloader.DownloadService -> com.dcloud.android.downloader.DownloadService:
    1:1:void <init>() -> <init>
    1:1:com.dcloud.android.downloader.callback.DCDownloadManager getDownloadManager(android.content.Context) -> getDownloadManager
    2:9:com.dcloud.android.downloader.callback.DCDownloadManager getDownloadManager(android.content.Context,com.dcloud.android.downloader.config.Config) -> getDownloadManager
    1:12:boolean isServiceRunning(android.content.Context) -> isServiceRunning
    1:5:void onDestroy() -> onDestroy
com.dcloud.android.downloader.callback.AbsDownloadListener -> com.dcloud.android.downloader.callback.AbsDownloadListener:
    1:1:void <init>() -> <init>
    2:3:void <init>(java.lang.ref.SoftReference) -> <init>
    1:1:java.lang.ref.SoftReference getUserTag() -> getUserTag
    1:1:void setUserTag(java.lang.ref.SoftReference) -> setUserTag
com.dcloud.android.downloader.config.Config -> com.dcloud.android.downloader.config.Config:
    1:10:void <init>() -> <init>
    1:1:int getConnectTimeout() -> getConnectTimeout
    1:1:java.lang.String getDatabaseName() -> getDatabaseName
    1:1:int getDatabaseVersion() -> getDatabaseVersion
    1:1:com.dcloud.android.downloader.db.DownloadDBController getDownloadDBController() -> getDownloadDBController
    1:1:int getDownloadThread() -> getDownloadThread
    1:1:int getEachDownloadThread() -> getEachDownloadThread
    1:1:int getReadTimeout() -> getReadTimeout
    1:1:int getRetryDownloadCount() -> getRetryDownloadCount
    1:1:void setConnectTimeout(int) -> setConnectTimeout
    1:1:void setDatabaseName(java.lang.String) -> setDatabaseName
    1:1:void setDatabaseVersion(int) -> setDatabaseVersion
    1:1:void setDownloadDBController(com.dcloud.android.downloader.db.DownloadDBController) -> setDownloadDBController
    1:1:void setDownloadThread(int) -> setDownloadThread
    1:1:void setEachDownloadThread(int) -> setEachDownloadThread
    1:1:void setReadTimeout(int) -> setReadTimeout
    1:1:void setRetryDownloadCount(int) -> setRetryDownloadCount
com.dcloud.android.downloader.core.DownloadResponseImpl -> com.dcloud.android.downloader.core.DownloadResponseImpl:
    1:4:void <init>(com.dcloud.android.downloader.db.DownloadDBController) -> <init>
    1:14:void onStatusChanged(com.dcloud.android.downloader.domain.DownloadInfo) -> onStatusChanged
com.dcloud.android.downloader.core.DownloadResponseImpl$1 -> com.dcloud.android.downloader.core.DownloadResponseImpl$1:
    1:1:void <init>(com.dcloud.android.downloader.core.DownloadResponseImpl,android.os.Looper) -> <init>
    1:57:void handleMessage(android.os.Message) -> handleMessage
com.dcloud.android.downloader.core.DownloadTaskImpl -> com.dcloud.android.downloader.core.DownloadTaskImpl:
    1:14:void <init>(java.util.concurrent.ExecutorService,com.dcloud.android.downloader.core.DownloadResponse,com.dcloud.android.downloader.domain.DownloadInfo,com.dcloud.android.downloader.config.Config,com.dcloud.android.downloader.core.DownloadTaskImpl$DownloadTaskListener) -> <init>
    1:6:void computerDownloadProgress() -> computerDownloadProgress
    1:2:void getFileInfo() -> getFileInfo
    1:6:void onDownloadSuccess() -> onDownloadSuccess
    1:13:void onProgress() -> onProgress
    1:42:void onSuccess(long,boolean) -> onSuccess
    1:3:void removeDownlaodFile() -> removeDownlaodFile
    1:15:void start() -> start
com.dcloud.android.downloader.core.task.GetFileInfoTask -> com.dcloud.android.downloader.core.task.GetFileInfoTask:
    1:4:void <init>(com.dcloud.android.downloader.core.DownloadResponse,com.dcloud.android.downloader.domain.DownloadInfo,com.dcloud.android.downloader.core.task.GetFileInfoTask$OnGetFileInfoListener) -> <init>
    1:2:void checkIfPause() -> checkIfPause
    1:51:void executeConnection() -> executeConnection
    1:19:void parseHttpResponse(java.net.HttpURLConnection,boolean) -> parseHttpResponse
    1:8:void run() -> run
com.dcloud.android.downloader.core.thread.DownloadThread -> com.dcloud.android.downloader.core.thread.DownloadThread:
    1:12:void <init>(com.dcloud.android.downloader.domain.DownloadThreadInfo,com.dcloud.android.downloader.core.DownloadResponse,com.dcloud.android.downloader.config.Config,com.dcloud.android.downloader.domain.DownloadInfo,com.dcloud.android.downloader.core.thread.DownloadThread$DownloadProgressListener) -> <init>
    1:2:void checkPause() -> checkPause
    1:169:void executeDownload() -> executeDownload
    1:26:void run() -> run
com.dcloud.android.downloader.db.DefaultDownloadDBController -> com.dcloud.android.downloader.db.DefaultDownloadDBController:
    1:17:void <clinit>() -> <clinit>
    1:5:void <init>(android.content.Context,com.dcloud.android.downloader.config.Config) -> <init>
    1:7:void createOrUpdate(com.dcloud.android.downloader.domain.DownloadInfo) -> createOrUpdate
    8:17:void createOrUpdate(com.dcloud.android.downloader.domain.DownloadThreadInfo) -> createOrUpdate
    1:8:void delete(com.dcloud.android.downloader.domain.DownloadInfo) -> delete
    9:12:void delete(com.dcloud.android.downloader.domain.DownloadThreadInfo) -> delete
    1:12:java.util.List findAllDownloaded() -> findAllDownloaded
    1:30:java.util.List findAllDownloading() -> findAllDownloading
    1:10:com.dcloud.android.downloader.domain.DownloadInfo findDownloadedInfoById(int) -> findDownloadedInfoById
    1:9:void inflateDownloadInfo(android.database.Cursor,com.dcloud.android.downloader.domain.DownloadInfo) -> inflateDownloadInfo
    1:7:void inflateDownloadThreadInfo(android.database.Cursor,com.dcloud.android.downloader.domain.DownloadThreadInfo) -> inflateDownloadThreadInfo
    1:4:void pauseAllDownloading() -> pauseAllDownloading
com.dcloud.android.downloader.db.DefaultDownloadHelper -> com.dcloud.android.downloader.db.DefaultDownloadHelper:
    1:4:void <clinit>() -> <clinit>
    1:1:void <init>(android.content.Context,com.dcloud.android.downloader.config.Config) -> <init>
    1:2:void createTable(android.database.sqlite.SQLiteDatabase) -> createTable
    1:1:void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
com.dcloud.android.downloader.domain.DownloadInfo -> com.dcloud.android.downloader.domain.DownloadInfo:
    1:2:void <init>(android.content.Context) -> <init>
    1:7:boolean equals(java.lang.Object) -> equals
    1:1:android.content.Context getContext() -> getContext
    1:1:long getCreateAt() -> getCreateAt
    1:1:com.dcloud.android.downloader.callback.DownloadListener getDownloadListener() -> getDownloadListener
    1:1:java.util.List getDownloadThreadInfos() -> getDownloadThreadInfos
    1:4:java.lang.String getDownloadUrl() -> getDownloadUrl
    1:1:com.dcloud.android.downloader.exception.DownloadException getException() -> getException
    1:1:int getId() -> getId
    1:1:java.lang.String getLocation() -> getLocation
    1:1:java.lang.String getPath() -> getPath
    1:1:long getProgress() -> getProgress
    1:1:long getSize() -> getSize
    1:1:int getStatus() -> getStatus
    1:1:int getSupportRanges() -> getSupportRanges
    1:1:java.lang.Object getTag() -> getTag
    1:1:java.lang.String getUri() -> getUri
    1:1:int hashCode() -> hashCode
    1:1:boolean isPause() -> isPause
    1:1:boolean isSupportRanges() -> isSupportRanges
    1:1:void setCreateAt(long) -> setCreateAt
    1:1:void setDownloadListener(com.dcloud.android.downloader.callback.DownloadListener) -> setDownloadListener
    1:1:void setDownloadThreadInfos(java.util.List) -> setDownloadThreadInfos
    1:1:void setException(com.dcloud.android.downloader.exception.DownloadException) -> setException
    1:1:void setId(int) -> setId
    1:1:void setLocation(java.lang.String) -> setLocation
    1:1:void setPath(java.lang.String) -> setPath
    1:1:void setProgress(long) -> setProgress
    1:1:void setSize(long) -> setSize
    1:1:void setStatus(int) -> setStatus
    1:1:void setSupportRanges(int) -> setSupportRanges
    2:2:void setSupportRanges(boolean) -> setSupportRanges
    1:1:void setTag(java.lang.Object) -> setTag
    1:1:void setUri(java.lang.String) -> setUri
com.dcloud.android.downloader.domain.DownloadInfo$Builder -> com.dcloud.android.downloader.domain.DownloadInfo$Builder:
    1:2:void <init>() -> <init>
    1:24:com.dcloud.android.downloader.domain.DownloadInfo build(android.content.Context) -> build
    1:1:com.dcloud.android.downloader.domain.DownloadInfo$Builder setCreateAt(long) -> setCreateAt
    1:1:void setId(java.lang.String) -> setId
    1:1:com.dcloud.android.downloader.domain.DownloadInfo$Builder setPath(java.lang.String) -> setPath
    1:1:com.dcloud.android.downloader.domain.DownloadInfo$Builder setUrl(java.lang.String) -> setUrl
com.dcloud.android.downloader.domain.DownloadThreadInfo -> com.dcloud.android.downloader.domain.DownloadThreadInfo:
    1:7:void <init>(int,int,java.lang.String,long,long) -> <init>
    8:8:void <init>() -> <init>
    1:1:int getDownloadInfoId() -> getDownloadInfoId
    1:1:long getEnd() -> getEnd
    1:1:int getId() -> getId
    1:1:long getProgress() -> getProgress
    1:1:long getStart() -> getStart
    1:1:int getThreadId() -> getThreadId
    1:1:java.lang.String getUri() -> getUri
    1:1:boolean isThreadDownloadSuccess() -> isThreadDownloadSuccess
    1:1:void setDownloadInfoId(int) -> setDownloadInfoId
    1:1:void setEnd(long) -> setEnd
    1:1:void setId(int) -> setId
    1:1:void setProgress(long) -> setProgress
    1:1:void setStart(long) -> setStart
    1:1:void setThreadId(int) -> setThreadId
    1:1:void setUri(java.lang.String) -> setUri
com.dcloud.android.downloader.exception.DownloadException -> com.dcloud.android.downloader.exception.DownloadException:
    1:2:void <init>(int) -> <init>
    3:4:void <init>(int,java.lang.String) -> <init>
    5:6:void <init>(int,java.lang.String,java.lang.Throwable) -> <init>
    7:8:void <init>(int,java.lang.Throwable) -> <init>
    1:1:int getCode() -> getCode
    1:1:void setCode(int) -> setCode
com.dcloud.android.downloader.exception.DownloadPauseException -> com.dcloud.android.downloader.exception.DownloadPauseException:
    1:1:void <init>(int) -> <init>
    2:2:void <init>(int,java.lang.String) -> <init>
    3:3:void <init>(int,java.lang.String,java.lang.Throwable) -> <init>
    4:4:void <init>(int,java.lang.Throwable) -> <init>
com.dcloud.android.graphics.Region -> com.dcloud.android.graphics.Region:
    1:1:void <init>() -> <init>
    2:14:void <init>(int) -> <init>
    1:1:void count() -> count
    1:1:boolean fillWholeScreen() -> fillWholeScreen
    1:1:int getFillScreenCounter() -> getFillScreenCounter
com.dcloud.android.v4.accessibilityservice.AccessibilityServiceInfoCompat -> com.dcloud.android.v4.accessibilityservice.AccessibilityServiceInfoCompat:
    1:6:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:41:java.lang.String feedbackTypeToString(int) -> feedbackTypeToString
    1:1:boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    1:1:int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
    1:1:java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    1:1:java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    1:1:android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    1:1:java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
com.dcloud.android.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl -> com.dcloud.android.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoIcsImpl:
    1:1:void <init>() -> <init>
    1:1:boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    1:1:int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
    1:1:java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    1:1:java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    1:1:android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    1:1:java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
com.dcloud.android.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanMr2 -> com.dcloud.android.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoJellyBeanMr2:
    1:1:void <init>() -> <init>
    1:1:int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
com.dcloud.android.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl -> com.dcloud.android.v4.accessibilityservice.AccessibilityServiceInfoCompat$AccessibilityServiceInfoStubImpl:
    1:1:void <init>() -> <init>
com.dcloud.android.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs -> com.dcloud.android.v4.accessibilityservice.AccessibilityServiceInfoCompatIcs:
    1:1:void <init>() -> <init>
    1:1:boolean getCanRetrieveWindowContent(android.accessibilityservice.AccessibilityServiceInfo) -> getCanRetrieveWindowContent
    1:1:java.lang.String getDescription(android.accessibilityservice.AccessibilityServiceInfo) -> getDescription
    1:1:java.lang.String getId(android.accessibilityservice.AccessibilityServiceInfo) -> getId
    1:1:android.content.pm.ResolveInfo getResolveInfo(android.accessibilityservice.AccessibilityServiceInfo) -> getResolveInfo
    1:1:java.lang.String getSettingsActivityName(android.accessibilityservice.AccessibilityServiceInfo) -> getSettingsActivityName
com.dcloud.android.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2 -> com.dcloud.android.v4.accessibilityservice.AccessibilityServiceInfoCompatJellyBeanMr2:
    1:1:void <init>() -> <init>
    1:1:int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
com.dcloud.android.v4.view.AccessibilityDelegateCompat -> com.dcloud.android.v4.view.AccessibilityDelegateCompat:
    1:8:void <clinit>() -> <clinit>
    1:2:void <init>() -> <init>
    1:1:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    1:1:com.dcloud.android.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    1:1:java.lang.Object getBridge() -> getBridge
    1:1:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1:1:void onInitializeAccessibilityNodeInfo(android.view.View,com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    1:1:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    1:1:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    1:1:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    1:1:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    1:1:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
com.dcloud.android.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> com.dcloud.android.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl:
    1:1:void <init>() -> <init>
    1:1:boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    1:1:java.lang.Object newAccessiblityDelegateBridge(com.dcloud.android.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    1:1:java.lang.Object newAccessiblityDelegateDefaultImpl() -> newAccessiblityDelegateDefaultImpl
    1:1:void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1:2:void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    1:1:void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    1:1:boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    1:1:void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    1:1:void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
com.dcloud.android.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> com.dcloud.android.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1:
    1:1:void <init>(com.dcloud.android.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl,com.dcloud.android.v4.view.AccessibilityDelegateCompat) -> <init>
    1:1:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    1:1:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1:1:void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    1:1:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    1:1:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    1:1:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    1:1:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
com.dcloud.android.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> com.dcloud.android.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl:
    1:1:void <init>() -> <init>
    1:4:com.dcloud.android.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    1:1:java.lang.Object newAccessiblityDelegateBridge(com.dcloud.android.v4.view.AccessibilityDelegateCompat) -> newAccessiblityDelegateBridge
    1:1:boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
com.dcloud.android.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> com.dcloud.android.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1:
    1:1:void <init>(com.dcloud.android.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl,com.dcloud.android.v4.view.AccessibilityDelegateCompat) -> <init>
    1:1:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    1:3:java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    1:1:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1:1:void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    1:1:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    1:1:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    1:1:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    1:1:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    1:1:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
com.dcloud.android.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> com.dcloud.android.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl:
    1:1:void <init>() -> <init>
com.dcloud.android.v4.view.AccessibilityDelegateCompatIcs -> com.dcloud.android.v4.view.AccessibilityDelegateCompatIcs:
    1:1:void <init>() -> <init>
    1:1:boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    1:1:java.lang.Object newAccessibilityDelegateBridge(com.dcloud.android.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> newAccessibilityDelegateBridge
    1:1:java.lang.Object newAccessibilityDelegateDefaultImpl() -> newAccessibilityDelegateDefaultImpl
    1:1:void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1:1:void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    1:1:void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    1:1:boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    1:1:void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> sendAccessibilityEvent
    1:1:void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
com.dcloud.android.v4.view.AccessibilityDelegateCompatIcs$1 -> com.dcloud.android.v4.view.AccessibilityDelegateCompatIcs$1:
    1:1:void <init>(com.dcloud.android.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> <init>
    1:1:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    1:1:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1:1:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    1:1:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    1:1:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    1:1:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    1:1:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
com.dcloud.android.v4.view.AccessibilityDelegateCompatJellyBean -> com.dcloud.android.v4.view.AccessibilityDelegateCompatJellyBean:
    1:1:void <init>() -> <init>
    1:1:java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> getAccessibilityNodeProvider
    1:1:java.lang.Object newAccessibilityDelegateBridge(com.dcloud.android.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> newAccessibilityDelegateBridge
    1:1:boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> performAccessibilityAction
com.dcloud.android.v4.view.AccessibilityDelegateCompatJellyBean$1 -> com.dcloud.android.v4.view.AccessibilityDelegateCompatJellyBean$1:
    1:1:void <init>(com.dcloud.android.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> <init>
    1:1:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    1:1:android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    1:1:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1:1:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    1:1:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    1:1:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    1:1:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    1:1:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    1:1:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
com.dcloud.android.v4.view.InputDeviceCompat -> com.dcloud.android.v4.view.InputDeviceCompat:
    1:1:void <init>() -> <init>
com.dcloud.android.v4.view.MotionEventCompat -> com.dcloud.android.v4.view.MotionEventCompat:
    1:8:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:1:int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    1:1:int getActionIndex(android.view.MotionEvent) -> getActionIndex
    1:1:int getActionMasked(android.view.MotionEvent) -> getActionMasked
    1:1:float getAxisValue(android.view.MotionEvent,int) -> getAxisValue
    2:2:float getAxisValue(android.view.MotionEvent,int,int) -> getAxisValue
    1:1:int getPointerCount(android.view.MotionEvent) -> getPointerCount
    1:1:int getPointerId(android.view.MotionEvent,int) -> getPointerId
    1:1:int getSource(android.view.MotionEvent) -> getSource
    1:1:float getX(android.view.MotionEvent,int) -> getX
    1:1:float getY(android.view.MotionEvent,int) -> getY
com.dcloud.android.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> com.dcloud.android.v4.view.MotionEventCompat$BaseMotionEventVersionImpl:
    1:1:void <init>() -> <init>
    1:1:int getPointerId(android.view.MotionEvent,int) -> getPointerId
    1:3:float getX(android.view.MotionEvent,int) -> getX
    1:3:float getY(android.view.MotionEvent,int) -> getY
com.dcloud.android.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> com.dcloud.android.v4.view.MotionEventCompat$EclairMotionEventVersionImpl:
    1:1:void <init>() -> <init>
    1:1:int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    1:1:int getPointerCount(android.view.MotionEvent) -> getPointerCount
    1:1:int getPointerId(android.view.MotionEvent,int) -> getPointerId
    1:1:float getX(android.view.MotionEvent,int) -> getX
    1:1:float getY(android.view.MotionEvent,int) -> getY
com.dcloud.android.v4.view.MotionEventCompat$GingerbreadMotionEventVersionImpl -> com.dcloud.android.v4.view.MotionEventCompat$GingerbreadMotionEventVersionImpl:
    1:1:void <init>() -> <init>
    1:1:int getSource(android.view.MotionEvent) -> getSource
com.dcloud.android.v4.view.MotionEventCompat$HoneycombMr1MotionEventVersionImpl -> com.dcloud.android.v4.view.MotionEventCompat$HoneycombMr1MotionEventVersionImpl:
    1:1:void <init>() -> <init>
    1:1:float getAxisValue(android.view.MotionEvent,int) -> getAxisValue
    2:2:float getAxisValue(android.view.MotionEvent,int,int) -> getAxisValue
com.dcloud.android.v4.view.MotionEventCompatEclair -> com.dcloud.android.v4.view.MotionEventCompatEclair:
    1:1:void <init>() -> <init>
    1:1:int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    1:1:int getPointerCount(android.view.MotionEvent) -> getPointerCount
    1:1:int getPointerId(android.view.MotionEvent,int) -> getPointerId
    1:1:float getX(android.view.MotionEvent,int) -> getX
    1:1:float getY(android.view.MotionEvent,int) -> getY
com.dcloud.android.v4.view.MotionEventCompatGingerbread -> com.dcloud.android.v4.view.MotionEventCompatGingerbread:
    1:1:void <init>() -> <init>
    1:1:int getSource(android.view.MotionEvent) -> getSource
com.dcloud.android.v4.view.MotionEventCompatHoneycombMr1 -> com.dcloud.android.v4.view.MotionEventCompatHoneycombMr1:
    1:1:void <init>() -> <init>
    1:1:float getAxisValue(android.view.MotionEvent,int) -> getAxisValue
    2:2:float getAxisValue(android.view.MotionEvent,int,int) -> getAxisValue
com.dcloud.android.v4.view.NestedScrollingChildHelper -> com.dcloud.android.v4.view.NestedScrollingChildHelper:
    1:2:void <init>(android.view.View) -> <init>
    1:2:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    1:2:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    1:50:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    1:35:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    1:1:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    1:1:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    1:1:void onDetachedFromWindow() -> onDetachedFromWindow
    1:1:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    1:4:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    1:17:boolean startNestedScroll(int) -> startNestedScroll
    1:3:void stopNestedScroll() -> stopNestedScroll
com.dcloud.android.v4.view.NestedScrollingParentHelper -> com.dcloud.android.v4.view.NestedScrollingParentHelper:
    1:2:void <init>(android.view.ViewGroup) -> <init>
    1:1:int getNestedScrollAxes() -> getNestedScrollAxes
    1:1:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    1:1:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
com.dcloud.android.v4.view.ViewCompat -> com.dcloud.android.v4.view.ViewCompat:
    1:19:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:1:com.dcloud.android.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    1:1:boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    1:1:boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    1:1:int combineMeasuredStates(int,int) -> combineMeasuredStates
    1:1:com.dcloud.android.v4.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,com.dcloud.android.v4.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    1:1:void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    1:1:boolean dispatchNestedFling(android.view.View,float,float,boolean) -> dispatchNestedFling
    1:1:boolean dispatchNestedPreFling(android.view.View,float,float) -> dispatchNestedPreFling
    1:1:boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[]) -> dispatchNestedPreScroll
    1:1:boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[]) -> dispatchNestedScroll
    1:1:void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    1:1:int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    1:1:com.dcloud.android.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    1:1:float getAlpha(android.view.View) -> getAlpha
    1:1:android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    1:1:android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    1:1:android.graphics.Rect getClipBounds(android.view.View) -> getClipBounds
    1:1:float getElevation(android.view.View) -> getElevation
    1:1:boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    1:1:int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    1:1:int getLabelFor(android.view.View) -> getLabelFor
    1:1:int getLayerType(android.view.View) -> getLayerType
    1:1:int getLayoutDirection(android.view.View) -> getLayoutDirection
    1:1:int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    1:1:int getMeasuredState(android.view.View) -> getMeasuredState
    1:1:int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    1:1:int getMinimumHeight(android.view.View) -> getMinimumHeight
    1:1:int getMinimumWidth(android.view.View) -> getMinimumWidth
    1:1:int getOverScrollMode(android.view.View) -> getOverScrollMode
    1:1:int getPaddingEnd(android.view.View) -> getPaddingEnd
    1:1:int getPaddingStart(android.view.View) -> getPaddingStart
    1:1:android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    1:1:float getPivotX(android.view.View) -> getPivotX
    1:1:float getPivotY(android.view.View) -> getPivotY
    1:1:float getRotation(android.view.View) -> getRotation
    1:1:float getRotationX(android.view.View) -> getRotationX
    1:1:float getRotationY(android.view.View) -> getRotationY
    1:1:float getScaleX(android.view.View) -> getScaleX
    1:1:float getScaleY(android.view.View) -> getScaleY
    1:1:java.lang.String getTransitionName(android.view.View) -> getTransitionName
    1:1:float getTranslationX(android.view.View) -> getTranslationX
    1:1:float getTranslationY(android.view.View) -> getTranslationY
    1:1:float getTranslationZ(android.view.View) -> getTranslationZ
    1:1:int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    1:1:float getX(android.view.View) -> getX
    1:1:float getY(android.view.View) -> getY
    1:1:float getZ(android.view.View) -> getZ
    1:1:boolean hasAccessibilityDelegate(android.view.View) -> hasAccessibilityDelegate
    1:1:boolean hasNestedScrollingParent(android.view.View) -> hasNestedScrollingParent
    1:1:boolean hasOverlappingRendering(android.view.View) -> hasOverlappingRendering
    1:1:boolean hasTransientState(android.view.View) -> hasTransientState
    1:1:boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
    1:1:boolean isLaidOut(android.view.View) -> isLaidOut
    1:1:boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    1:1:boolean isOpaque(android.view.View) -> isOpaque
    1:1:boolean isPaddingRelative(android.view.View) -> isPaddingRelative
    1:1:void jumpDrawablesToCurrentState(android.view.View) -> jumpDrawablesToCurrentState
    1:5:void offsetLeftAndRight(android.view.View,int) -> offsetLeftAndRight
    1:5:void offsetTopAndBottom(android.view.View,int) -> offsetTopAndBottom
    1:1:com.dcloud.android.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,com.dcloud.android.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
    1:1:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1:1:void onInitializeAccessibilityNodeInfo(android.view.View,com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    1:1:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    1:1:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    1:1:void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    2:2:void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    1:1:void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    1:1:void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    1:1:void requestApplyInsets(android.view.View) -> requestApplyInsets
    1:1:int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    1:1:void setAccessibilityDelegate(android.view.View,com.dcloud.android.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    1:1:void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    1:1:void setActivated(android.view.View,boolean) -> setActivated
    1:1:void setAlpha(android.view.View,float) -> setAlpha
    1:1:void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    1:1:void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    1:1:void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> setChildrenDrawingOrderEnabled
    1:1:void setClipBounds(android.view.View,android.graphics.Rect) -> setClipBounds
    1:1:void setElevation(android.view.View,float) -> setElevation
    1:1:void setFitsSystemWindows(android.view.View,boolean) -> setFitsSystemWindows
    1:1:void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    1:1:void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    1:1:void setLabelFor(android.view.View,int) -> setLabelFor
    1:1:void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    1:1:void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    1:1:void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    1:1:void setNestedScrollingEnabled(android.view.View,boolean) -> setNestedScrollingEnabled
    1:1:void setOnApplyWindowInsetsListener(android.view.View,com.dcloud.android.v4.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    1:1:void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    1:1:void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    1:1:void setPivotX(android.view.View,float) -> setPivotX
    1:1:void setPivotY(android.view.View,float) -> setPivotY
    1:1:void setRotation(android.view.View,float) -> setRotation
    1:1:void setRotationX(android.view.View,float) -> setRotationX
    1:1:void setRotationY(android.view.View,float) -> setRotationY
    1:1:void setSaveFromParentEnabled(android.view.View,boolean) -> setSaveFromParentEnabled
    1:1:void setScaleX(android.view.View,float) -> setScaleX
    1:1:void setScaleY(android.view.View,float) -> setScaleY
    1:1:void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    1:1:void setTranslationX(android.view.View,float) -> setTranslationX
    1:1:void setTranslationY(android.view.View,float) -> setTranslationY
    1:1:void setTranslationZ(android.view.View,float) -> setTranslationZ
    1:1:void setX(android.view.View,float) -> setX
    1:1:void setY(android.view.View,float) -> setY
    1:1:boolean startNestedScroll(android.view.View,int) -> startNestedScroll
    1:1:void stopNestedScroll(android.view.View) -> stopNestedScroll
com.dcloud.android.v4.view.ViewCompat$BaseViewCompatImpl -> com.dcloud.android.v4.view.ViewCompat$BaseViewCompatImpl:
    1:5:void <init>() -> <init>
    1:1:com.dcloud.android.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    1:8:void bindTempDetach() -> bindTempDetach
    1:2:boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    1:2:boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    1:3:boolean canScrollingViewScrollHorizontally(com.dcloud.android.v4.view.ScrollingView,int) -> canScrollingViewScrollHorizontally
    1:3:boolean canScrollingViewScrollVertically(com.dcloud.android.v4.view.ScrollingView,int) -> canScrollingViewScrollVertically
    1:12:void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    1:2:boolean dispatchNestedFling(android.view.View,float,float,boolean) -> dispatchNestedFling
    1:2:boolean dispatchNestedPreFling(android.view.View,float,float) -> dispatchNestedPreFling
    1:2:boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[]) -> dispatchNestedPreScroll
    1:2:boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[]) -> dispatchNestedScroll
    1:12:void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    1:1:android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    1:1:android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    1:1:int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    1:1:int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    1:1:int getMinimumHeight(android.view.View) -> getMinimumHeight
    1:1:int getMinimumWidth(android.view.View) -> getMinimumWidth
    1:1:int getPaddingEnd(android.view.View) -> getPaddingEnd
    1:1:int getPaddingStart(android.view.View) -> getPaddingStart
    1:1:android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    1:1:float getZ(android.view.View) -> getZ
    1:2:boolean hasNestedScrollingParent(android.view.View) -> hasNestedScrollingParent
    1:1:boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
    1:1:boolean isLaidOut(android.view.View) -> isLaidOut
    1:2:boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    1:3:boolean isOpaque(android.view.View) -> isOpaque
    1:1:void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    2:2:void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    1:1:void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    1:1:void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    1:1:int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    1:1:void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    1:1:void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    1:2:void setNestedScrollingEnabled(android.view.View,boolean) -> setNestedScrollingEnabled
    1:1:void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    1:2:boolean startNestedScroll(android.view.View,int) -> startNestedScroll
    1:2:void stopNestedScroll(android.view.View) -> stopNestedScroll
com.dcloud.android.v4.view.ViewCompat$EclairMr1ViewCompatImpl -> com.dcloud.android.v4.view.ViewCompat$EclairMr1ViewCompatImpl:
    1:1:void <init>() -> <init>
    1:1:boolean isOpaque(android.view.View) -> isOpaque
    1:1:void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> setChildrenDrawingOrderEnabled
com.dcloud.android.v4.view.ViewCompat$GBViewCompatImpl -> com.dcloud.android.v4.view.ViewCompat$GBViewCompatImpl:
    1:1:void <init>() -> <init>
    1:1:int getOverScrollMode(android.view.View) -> getOverScrollMode
    1:1:void setOverScrollMode(android.view.View,int) -> setOverScrollMode
com.dcloud.android.v4.view.ViewCompat$HCViewCompatImpl -> com.dcloud.android.v4.view.ViewCompat$HCViewCompatImpl:
    1:1:void <init>() -> <init>
    1:1:int combineMeasuredStates(int,int) -> combineMeasuredStates
    1:1:float getAlpha(android.view.View) -> getAlpha
    1:1:long getFrameTime() -> getFrameTime
    1:1:int getLayerType(android.view.View) -> getLayerType
    1:1:int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    1:1:int getMeasuredState(android.view.View) -> getMeasuredState
    1:1:int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    1:1:float getPivotX(android.view.View) -> getPivotX
    1:1:float getPivotY(android.view.View) -> getPivotY
    1:1:float getRotation(android.view.View) -> getRotation
    1:1:float getRotationX(android.view.View) -> getRotationX
    1:1:float getRotationY(android.view.View) -> getRotationY
    1:1:float getScaleX(android.view.View) -> getScaleX
    1:1:float getScaleY(android.view.View) -> getScaleY
    1:1:float getTranslationX(android.view.View) -> getTranslationX
    1:1:float getTranslationY(android.view.View) -> getTranslationY
    1:1:float getX(android.view.View) -> getX
    1:1:float getY(android.view.View) -> getY
    1:1:void jumpDrawablesToCurrentState(android.view.View) -> jumpDrawablesToCurrentState
    1:1:int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    1:1:void setActivated(android.view.View,boolean) -> setActivated
    1:1:void setAlpha(android.view.View,float) -> setAlpha
    1:3:void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    1:1:void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    1:1:void setPivotX(android.view.View,float) -> setPivotX
    1:1:void setPivotY(android.view.View,float) -> setPivotY
    1:1:void setRotation(android.view.View,float) -> setRotation
    1:1:void setRotationX(android.view.View,float) -> setRotationX
    1:1:void setRotationY(android.view.View,float) -> setRotationY
    1:1:void setSaveFromParentEnabled(android.view.View,boolean) -> setSaveFromParentEnabled
    1:1:void setScaleX(android.view.View,float) -> setScaleX
    1:1:void setScaleY(android.view.View,float) -> setScaleY
    1:1:void setTranslationX(android.view.View,float) -> setTranslationX
    1:1:void setTranslationY(android.view.View,float) -> setTranslationY
    1:1:void setX(android.view.View,float) -> setX
    1:1:void setY(android.view.View,float) -> setY
com.dcloud.android.v4.view.ViewCompat$ICSViewCompatImpl -> com.dcloud.android.v4.view.ViewCompat$ICSViewCompatImpl:
    1:1:void <init>() -> <init>
    1:8:com.dcloud.android.v4.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    1:1:boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    1:1:boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    1:17:boolean hasAccessibilityDelegate(android.view.View) -> hasAccessibilityDelegate
    1:1:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1:1:void onInitializeAccessibilityNodeInfo(android.view.View,com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    1:1:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    1:2:void setAccessibilityDelegate(android.view.View,com.dcloud.android.v4.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    1:1:void setFitsSystemWindows(android.view.View,boolean) -> setFitsSystemWindows
com.dcloud.android.v4.view.ViewCompat$JBViewCompatImpl -> com.dcloud.android.v4.view.ViewCompat$JBViewCompatImpl:
    1:1:void <init>() -> <init>
    1:3:com.dcloud.android.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    1:1:boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    1:1:int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    1:1:int getMinimumHeight(android.view.View) -> getMinimumHeight
    1:1:int getMinimumWidth(android.view.View) -> getMinimumWidth
    1:1:android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    1:1:boolean hasOverlappingRendering(android.view.View) -> hasOverlappingRendering
    1:1:boolean hasTransientState(android.view.View) -> hasTransientState
    1:1:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    1:1:void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    2:2:void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    1:1:void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    1:1:void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    1:1:void requestApplyInsets(android.view.View) -> requestApplyInsets
    1:1:void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    1:1:void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
com.dcloud.android.v4.view.ViewCompat$JbMr1ViewCompatImpl -> com.dcloud.android.v4.view.ViewCompat$JbMr1ViewCompatImpl:
    1:1:void <init>() -> <init>
    1:1:int getLabelFor(android.view.View) -> getLabelFor
    1:1:int getLayoutDirection(android.view.View) -> getLayoutDirection
    1:1:int getPaddingEnd(android.view.View) -> getPaddingEnd
    1:1:int getPaddingStart(android.view.View) -> getPaddingStart
    1:1:int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    1:1:boolean isPaddingRelative(android.view.View) -> isPaddingRelative
    1:1:void setLabelFor(android.view.View,int) -> setLabelFor
    1:1:void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    1:1:void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    1:1:void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
com.dcloud.android.v4.view.ViewCompat$JbMr2ViewCompatImpl -> com.dcloud.android.v4.view.ViewCompat$JbMr2ViewCompatImpl:
    1:1:void <init>() -> <init>
    1:1:android.graphics.Rect getClipBounds(android.view.View) -> getClipBounds
    1:1:void setClipBounds(android.view.View,android.graphics.Rect) -> setClipBounds
com.dcloud.android.v4.view.ViewCompat$KitKatViewCompatImpl -> com.dcloud.android.v4.view.ViewCompat$KitKatViewCompatImpl:
    1:1:void <init>() -> <init>
    1:1:int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    1:1:boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
    1:1:boolean isLaidOut(android.view.View) -> isLaidOut
    1:1:void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    1:1:void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
com.dcloud.android.v4.view.ViewCompat$LollipopViewCompatImpl -> com.dcloud.android.v4.view.ViewCompat$LollipopViewCompatImpl:
    1:1:void <init>() -> <init>
    1:1:com.dcloud.android.v4.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,com.dcloud.android.v4.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    1:1:boolean dispatchNestedFling(android.view.View,float,float,boolean) -> dispatchNestedFling
    1:1:boolean dispatchNestedPreFling(android.view.View,float,float) -> dispatchNestedPreFling
    1:1:boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[]) -> dispatchNestedPreScroll
    1:1:boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[]) -> dispatchNestedScroll
    1:1:android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    1:1:android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    1:1:float getElevation(android.view.View) -> getElevation
    1:1:java.lang.String getTransitionName(android.view.View) -> getTransitionName
    1:1:float getTranslationZ(android.view.View) -> getTranslationZ
    1:1:float getZ(android.view.View) -> getZ
    1:1:boolean hasNestedScrollingParent(android.view.View) -> hasNestedScrollingParent
    1:1:boolean isImportantForAccessibility(android.view.View) -> isImportantForAccessibility
    1:1:boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    1:1:com.dcloud.android.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,com.dcloud.android.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
    1:1:void requestApplyInsets(android.view.View) -> requestApplyInsets
    1:1:void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    1:1:void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    1:1:void setElevation(android.view.View,float) -> setElevation
    1:1:void setNestedScrollingEnabled(android.view.View,boolean) -> setNestedScrollingEnabled
    1:1:void setOnApplyWindowInsetsListener(android.view.View,com.dcloud.android.v4.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    1:1:void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    1:1:void setTranslationZ(android.view.View,float) -> setTranslationZ
    1:1:boolean startNestedScroll(android.view.View,int) -> startNestedScroll
    1:1:void stopNestedScroll(android.view.View) -> stopNestedScroll
com.dcloud.android.v4.view.ViewCompatBase -> com.dcloud.android.v4.view.ViewCompatBase:
    1:1:void <init>() -> <init>
    1:2:android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    1:2:android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    1:13:int getMinimumHeight(android.view.View) -> getMinimumHeight
    1:13:int getMinimumWidth(android.view.View) -> getMinimumWidth
    1:1:boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
    1:1:boolean isLaidOut(android.view.View) -> isLaidOut
    1:2:void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    1:2:void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
com.dcloud.android.v4.view.ViewCompatEclairMr1 -> com.dcloud.android.v4.view.ViewCompatEclairMr1:
    1:1:void <init>() -> <init>
    1:1:boolean isOpaque(android.view.View) -> isOpaque
    1:19:void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> setChildrenDrawingOrderEnabled
com.dcloud.android.v4.view.ViewCompatGingerbread -> com.dcloud.android.v4.view.ViewCompatGingerbread:
    1:1:void <init>() -> <init>
    1:1:int getOverScrollMode(android.view.View) -> getOverScrollMode
    1:1:void setOverScrollMode(android.view.View,int) -> setOverScrollMode
com.dcloud.android.v4.view.ViewCompatHC -> com.dcloud.android.v4.view.ViewCompatHC:
    1:1:void <init>() -> <init>
    1:1:int combineMeasuredStates(int,int) -> combineMeasuredStates
    1:1:float getAlpha(android.view.View) -> getAlpha
    1:1:long getFrameTime() -> getFrameTime
    1:1:int getLayerType(android.view.View) -> getLayerType
    1:1:int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    1:1:int getMeasuredState(android.view.View) -> getMeasuredState
    1:1:int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    1:1:float getPivotX(android.view.View) -> getPivotX
    1:1:float getPivotY(android.view.View) -> getPivotY
    1:1:float getRotation(android.view.View) -> getRotation
    1:1:float getRotationX(android.view.View) -> getRotationX
    1:1:float getRotationY(android.view.View) -> getRotationY
    1:1:float getScaleX(android.view.View) -> getScaleX
    1:1:float getScaleY(android.view.View) -> getScaleY
    1:1:float getTranslationX(android.view.View) -> getTranslationX
    1:1:float getTranslationY(android.view.View) -> getTranslationY
    1:1:float getX(android.view.View) -> getX
    1:1:float getY(android.view.View) -> getY
    1:1:void jumpDrawablesToCurrentState(android.view.View) -> jumpDrawablesToCurrentState
    1:1:int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    1:1:void setActivated(android.view.View,boolean) -> setActivated
    1:1:void setAlpha(android.view.View,float) -> setAlpha
    1:1:void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    1:1:void setPivotX(android.view.View,float) -> setPivotX
    1:1:void setPivotY(android.view.View,float) -> setPivotY
    1:1:void setRotation(android.view.View,float) -> setRotation
    1:1:void setRotationX(android.view.View,float) -> setRotationX
    1:1:void setRotationY(android.view.View,float) -> setRotationY
    1:1:void setSaveFromParentEnabled(android.view.View,boolean) -> setSaveFromParentEnabled
    1:1:void setScaleX(android.view.View,float) -> setScaleX
    1:1:void setScaleY(android.view.View,float) -> setScaleY
    1:1:void setTranslationX(android.view.View,float) -> setTranslationX
    1:1:void setTranslationY(android.view.View,float) -> setTranslationY
    1:1:void setX(android.view.View,float) -> setX
    1:1:void setY(android.view.View,float) -> setY
com.dcloud.android.v4.view.ViewCompatICS -> com.dcloud.android.v4.view.ViewCompatICS:
    1:1:void <init>() -> <init>
    1:1:boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    1:1:boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    1:1:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1:1:void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> onInitializeAccessibilityNodeInfo
    1:1:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    1:1:void setAccessibilityDelegate(android.view.View,java.lang.Object) -> setAccessibilityDelegate
    1:1:void setFitsSystemWindows(android.view.View,boolean) -> setFitsSystemWindows
com.dcloud.android.v4.view.ViewCompatJB -> com.dcloud.android.v4.view.ViewCompatJB:
    1:1:void <init>() -> <init>
    1:1:java.lang.Object getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    1:1:boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    1:1:int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    1:1:int getMinimumHeight(android.view.View) -> getMinimumHeight
    1:1:int getMinimumWidth(android.view.View) -> getMinimumWidth
    1:1:android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    1:1:boolean hasOverlappingRendering(android.view.View) -> hasOverlappingRendering
    1:1:boolean hasTransientState(android.view.View) -> hasTransientState
    1:1:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    1:1:void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    2:2:void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    1:1:void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    1:1:void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    1:1:void requestApplyInsets(android.view.View) -> requestApplyInsets
    1:1:void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    1:1:void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
com.dcloud.android.v4.view.ViewCompatJellybeanMr1 -> com.dcloud.android.v4.view.ViewCompatJellybeanMr1:
    1:1:void <init>() -> <init>
    1:1:int getLabelFor(android.view.View) -> getLabelFor
    1:1:int getLayoutDirection(android.view.View) -> getLayoutDirection
    1:1:int getPaddingEnd(android.view.View) -> getPaddingEnd
    1:1:int getPaddingStart(android.view.View) -> getPaddingStart
    1:1:int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    1:1:boolean isPaddingRelative(android.view.View) -> isPaddingRelative
    1:1:void setLabelFor(android.view.View,int) -> setLabelFor
    1:1:void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    1:1:void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    1:1:void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
com.dcloud.android.v4.view.ViewCompatJellybeanMr2 -> com.dcloud.android.v4.view.ViewCompatJellybeanMr2:
    1:1:void <init>() -> <init>
    1:1:android.graphics.Rect getClipBounds(android.view.View) -> getClipBounds
    1:1:void setClipBounds(android.view.View,android.graphics.Rect) -> setClipBounds
com.dcloud.android.v4.view.ViewCompatKitKat -> com.dcloud.android.v4.view.ViewCompatKitKat:
    1:1:void <init>() -> <init>
    1:1:int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    1:1:boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
    1:1:boolean isLaidOut(android.view.View) -> isLaidOut
    1:1:void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
com.dcloud.android.v4.view.ViewCompatLollipop -> com.dcloud.android.v4.view.ViewCompatLollipop:
    1:1:void <init>() -> <init>
    1:9:com.dcloud.android.v4.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,com.dcloud.android.v4.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    1:1:boolean dispatchNestedFling(android.view.View,float,float,boolean) -> dispatchNestedFling
    1:1:boolean dispatchNestedPreFling(android.view.View,float,float) -> dispatchNestedPreFling
    1:1:boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[]) -> dispatchNestedPreScroll
    1:1:boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[]) -> dispatchNestedScroll
    1:1:android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    1:1:android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    1:1:float getElevation(android.view.View) -> getElevation
    1:1:java.lang.String getTransitionName(android.view.View) -> getTransitionName
    1:1:float getTranslationZ(android.view.View) -> getTranslationZ
    1:1:float getZ(android.view.View) -> getZ
    1:1:boolean hasNestedScrollingParent(android.view.View) -> hasNestedScrollingParent
    1:1:boolean isImportantForAccessibility(android.view.View) -> isImportantForAccessibility
    1:1:boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    1:9:com.dcloud.android.v4.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,com.dcloud.android.v4.view.WindowInsetsCompat) -> onApplyWindowInsets
    1:1:void requestApplyInsets(android.view.View) -> requestApplyInsets
    1:1:void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    1:1:void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    1:1:void setElevation(android.view.View,float) -> setElevation
    1:1:void setNestedScrollingEnabled(android.view.View,boolean) -> setNestedScrollingEnabled
    1:1:void setOnApplyWindowInsetsListener(android.view.View,com.dcloud.android.v4.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    1:1:void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    1:1:void setTranslationZ(android.view.View,float) -> setTranslationZ
    1:1:boolean startNestedScroll(android.view.View,int) -> startNestedScroll
    1:1:void stopNestedScroll(android.view.View) -> stopNestedScroll
com.dcloud.android.v4.view.ViewCompatLollipop$1 -> com.dcloud.android.v4.view.ViewCompatLollipop$1:
    1:1:void <init>(com.dcloud.android.v4.view.OnApplyWindowInsetsListener) -> <init>
    1:5:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
com.dcloud.android.v4.view.ViewParentCompat -> com.dcloud.android.v4.view.ViewParentCompat:
    1:9:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:1:void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int) -> notifySubtreeAccessibilityStateChanged
    1:1:boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    1:1:boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
    1:1:void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> onNestedPreScroll
    1:1:void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> onNestedScroll
    1:1:void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> onNestedScrollAccepted
    1:1:boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> onStartNestedScroll
    1:1:void onStopNestedScroll(android.view.ViewParent,android.view.View) -> onStopNestedScroll
    1:1:boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
com.dcloud.android.v4.view.ViewParentCompat$ViewParentCompatICSImpl -> com.dcloud.android.v4.view.ViewParentCompat$ViewParentCompatICSImpl:
    1:1:void <init>() -> <init>
    1:1:boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
com.dcloud.android.v4.view.ViewParentCompat$ViewParentCompatKitKatImpl -> com.dcloud.android.v4.view.ViewParentCompat$ViewParentCompatKitKatImpl:
    1:1:void <init>() -> <init>
    1:1:void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int) -> notifySubtreeAccessibilityStateChanged
com.dcloud.android.v4.view.ViewParentCompat$ViewParentCompatLollipopImpl -> com.dcloud.android.v4.view.ViewParentCompat$ViewParentCompatLollipopImpl:
    1:1:void <init>() -> <init>
    1:1:boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    1:1:boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
    1:1:void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> onNestedPreScroll
    1:1:void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> onNestedScroll
    1:1:void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> onNestedScrollAccepted
    1:1:boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> onStartNestedScroll
    1:1:void onStopNestedScroll(android.view.ViewParent,android.view.View) -> onStopNestedScroll
com.dcloud.android.v4.view.ViewParentCompat$ViewParentCompatStubImpl -> com.dcloud.android.v4.view.ViewParentCompat$ViewParentCompatStubImpl:
    1:1:void <init>() -> <init>
    1:2:boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    1:2:boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
    1:2:void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> onNestedPreScroll
    1:2:void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> onNestedScroll
    1:2:void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> onNestedScrollAccepted
    1:2:boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> onStartNestedScroll
    1:2:void onStopNestedScroll(android.view.ViewParent,android.view.View) -> onStopNestedScroll
    1:3:boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
com.dcloud.android.v4.view.ViewParentCompatICS -> com.dcloud.android.v4.view.ViewParentCompatICS:
    1:1:void <init>() -> <init>
    1:1:boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
com.dcloud.android.v4.view.ViewParentCompatKitKat -> com.dcloud.android.v4.view.ViewParentCompatKitKat:
    1:1:void <init>() -> <init>
    1:1:void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int) -> notifySubtreeAccessibilityStateChanged
com.dcloud.android.v4.view.ViewParentCompatLollipop -> com.dcloud.android.v4.view.ViewParentCompatLollipop:
    1:1:void <init>() -> <init>
    1:3:boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    1:3:boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
    1:3:void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> onNestedPreScroll
    1:3:void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> onNestedScroll
    1:3:void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> onNestedScrollAccepted
    1:3:boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> onStartNestedScroll
    1:3:void onStopNestedScroll(android.view.ViewParent,android.view.View) -> onStopNestedScroll
com.dcloud.android.v4.view.ViewPropertyAnimatorCompat -> com.dcloud.android.v4.view.ViewPropertyAnimatorCompat:
    1:13:void <clinit>() -> <clinit>
    1:11:void <init>(android.view.View) -> <init>
    1:1:java.lang.Runnable access$000(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat) -> access$000
    1:1:java.lang.Runnable access$002(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,java.lang.Runnable) -> access$002
    1:1:java.lang.Runnable access$100(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat) -> access$100
    1:1:java.lang.Runnable access$102(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,java.lang.Runnable) -> access$102
    1:1:int access$400(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat) -> access$400
    1:1:int access$402(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,int) -> access$402
    1:2:com.dcloud.android.v4.view.ViewPropertyAnimatorCompat alpha(float) -> alpha
    1:2:com.dcloud.android.v4.view.ViewPropertyAnimatorCompat alphaBy(float) -> alphaBy
    1:2:void cancel() -> cancel
    1:2:long getDuration() -> getDuration
    1:2:android.view.animation.Interpolator getInterpolator() -> getInterpolator
    1:2:long getStartDelay() -> getStartDelay
    1:2:com.dcloud.android.v4.view.ViewPropertyAnimatorCompat rotation(float) -> rotation
    1:2:com.dcloud.android.v4.view.ViewPropertyAnimatorCompat rotationBy(float) -> rotationBy
    1:2:com.dcloud.android.v4.view.ViewPropertyAnimatorCompat rotationX(float) -> rotationX
    1:2:com.dcloud.android.v4.view.ViewPropertyAnimatorCompat rotationXBy(float) -> rotationXBy
    1:2:com.dcloud.android.v4.view.ViewPropertyAnimatorCompat rotationY(float) -> rotationY
    1:2:com.dcloud.android.v4.view.ViewPropertyAnimatorCompat rotationYBy(float) -> rotationYBy
    1:2:com.dcloud.android.v4.view.ViewPropertyAnimatorCompat scaleX(float) -> scaleX
    1:2:com.dcloud.android.v4.view.ViewPropertyAnimatorCompat scaleXBy(float) -> scaleXBy
    1:2:com.dcloud.android.v4.view.ViewPropertyAnimatorCompat scaleY(float) -> scaleY
    1:2:com.dcloud.android.v4.view.ViewPropertyAnimatorCompat scaleYBy(float) -> scaleYBy
    1:2:com.dcloud.android.v4.view.ViewPropertyAnimatorCompat setDuration(long) -> setDuration
    1:2:com.dcloud.android.v4.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    1:2:com.dcloud.android.v4.view.ViewPropertyAnimatorCompat setListener(com.dcloud.android.v4.view.ViewPropertyAnimatorListener) -> setListener
    1:2:com.dcloud.android.v4.view.ViewPropertyAnimatorCompat setStartDelay(long) -> setStartDelay
    1:2:com.dcloud.android.v4.view.ViewPropertyAnimatorCompat setUpdateListener(com.dcloud.android.v4.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
    1:2:void start() -> start
    1:2:com.dcloud.android.v4.view.ViewPropertyAnimatorCompat translationX(float) -> translationX
    1:2:com.dcloud.android.v4.view.ViewPropertyAnimatorCompat translationXBy(float) -> translationXBy
    1:2:com.dcloud.android.v4.view.ViewPropertyAnimatorCompat translationY(float) -> translationY
    1:2:com.dcloud.android.v4.view.ViewPropertyAnimatorCompat translationYBy(float) -> translationYBy
    1:2:com.dcloud.android.v4.view.ViewPropertyAnimatorCompat translationZ(float) -> translationZ
    1:2:com.dcloud.android.v4.view.ViewPropertyAnimatorCompat translationZBy(float) -> translationZBy
    1:2:com.dcloud.android.v4.view.ViewPropertyAnimatorCompat withEndAction(java.lang.Runnable) -> withEndAction
    1:2:com.dcloud.android.v4.view.ViewPropertyAnimatorCompat withLayer() -> withLayer
    1:2:com.dcloud.android.v4.view.ViewPropertyAnimatorCompat withStartAction(java.lang.Runnable) -> withStartAction
    1:2:com.dcloud.android.v4.view.ViewPropertyAnimatorCompat x(float) -> x
    1:2:com.dcloud.android.v4.view.ViewPropertyAnimatorCompat xBy(float) -> xBy
    1:2:com.dcloud.android.v4.view.ViewPropertyAnimatorCompat y(float) -> y
    1:2:com.dcloud.android.v4.view.ViewPropertyAnimatorCompat yBy(float) -> yBy
    1:2:com.dcloud.android.v4.view.ViewPropertyAnimatorCompat z(float) -> z
    1:2:com.dcloud.android.v4.view.ViewPropertyAnimatorCompat zBy(float) -> zBy
com.dcloud.android.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl -> com.dcloud.android.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl:
    1:2:void <init>() -> <init>
    1:1:void access$200(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl,com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> access$200
    1:1:void alpha(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> alpha
    1:1:void alphaBy(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> alphaBy
    1:1:void cancel(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> cancel
    1:12:void postStartMessage(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> postStartMessage
    1:4:void removeStartMessage(android.view.View) -> removeStartMessage
    1:1:void rotation(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotation
    1:1:void rotationBy(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationBy
    1:1:void rotationX(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationX
    1:1:void rotationXBy(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationXBy
    1:1:void rotationY(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationY
    1:1:void rotationYBy(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationYBy
    1:1:void scaleX(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleX
    1:1:void scaleXBy(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleXBy
    1:1:void scaleY(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleY
    1:1:void scaleYBy(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleYBy
    1:1:void setListener(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,com.dcloud.android.v4.view.ViewPropertyAnimatorListener) -> setListener
    1:2:void start(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> start
    1:19:void startAnimation(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> startAnimation
    1:1:void translationX(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationX
    1:1:void translationXBy(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationXBy
    1:1:void translationY(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationY
    1:1:void translationYBy(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationYBy
    1:2:void withEndAction(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withEndAction
    1:2:void withStartAction(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withStartAction
    1:1:void x(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> x
    1:1:void xBy(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> xBy
    1:1:void y(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> y
    1:1:void yBy(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> yBy
com.dcloud.android.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl$Starter -> com.dcloud.android.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl$Starter:
    1:1:void <init>(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl,com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,com.dcloud.android.v4.view.ViewPropertyAnimatorCompat$1) -> <init>
    2:4:void <init>(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat$BaseViewPropertyAnimatorCompatImpl,com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> <init>
    1:3:void run() -> run
com.dcloud.android.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl -> com.dcloud.android.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl:
    1:2:void <init>() -> <init>
    1:1:void alpha(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> alpha
    1:1:void alphaBy(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> alphaBy
    1:1:void cancel(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> cancel
    1:1:long getDuration(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getDuration
    1:1:long getStartDelay(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getStartDelay
    1:1:void rotation(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotation
    1:1:void rotationBy(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationBy
    1:1:void rotationX(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationX
    1:1:void rotationXBy(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationXBy
    1:1:void rotationY(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationY
    1:1:void rotationYBy(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> rotationYBy
    1:1:void scaleX(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleX
    1:1:void scaleXBy(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleXBy
    1:1:void scaleY(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleY
    1:1:void scaleYBy(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> scaleYBy
    1:1:void setDuration(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> setDuration
    1:1:void setInterpolator(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,android.view.animation.Interpolator) -> setInterpolator
    1:2:void setListener(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,com.dcloud.android.v4.view.ViewPropertyAnimatorListener) -> setListener
    1:1:void setStartDelay(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,long) -> setStartDelay
    1:1:void start(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> start
    1:1:void translationX(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationX
    1:1:void translationXBy(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationXBy
    1:1:void translationY(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationY
    1:1:void translationYBy(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationYBy
    1:2:void withEndAction(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withEndAction
    1:2:void withLayer(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> withLayer
    1:2:void withStartAction(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withStartAction
    1:1:void x(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> x
    1:1:void xBy(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> xBy
    1:1:void y(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> y
    1:1:void yBy(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> yBy
com.dcloud.android.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$MyVpaListener -> com.dcloud.android.v4.view.ViewPropertyAnimatorCompat$ICSViewPropertyAnimatorCompatImpl$MyVpaListener:
    1:2:void <init>(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat) -> <init>
    1:7:void onAnimationCancel(android.view.View) -> onAnimationCancel
    1:14:void onAnimationEnd(android.view.View) -> onAnimationEnd
    1:13:void onAnimationStart(android.view.View) -> onAnimationStart
com.dcloud.android.v4.view.ViewPropertyAnimatorCompat$JBMr2ViewPropertyAnimatorCompatImpl -> com.dcloud.android.v4.view.ViewPropertyAnimatorCompat$JBMr2ViewPropertyAnimatorCompatImpl:
    1:1:void <init>() -> <init>
    1:1:android.view.animation.Interpolator getInterpolator(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> getInterpolator
com.dcloud.android.v4.view.ViewPropertyAnimatorCompat$JBViewPropertyAnimatorCompatImpl -> com.dcloud.android.v4.view.ViewPropertyAnimatorCompat$JBViewPropertyAnimatorCompatImpl:
    1:1:void <init>() -> <init>
    1:1:void setListener(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,com.dcloud.android.v4.view.ViewPropertyAnimatorListener) -> setListener
    1:1:void withEndAction(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withEndAction
    1:1:void withLayer(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View) -> withLayer
    1:1:void withStartAction(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,java.lang.Runnable) -> withStartAction
com.dcloud.android.v4.view.ViewPropertyAnimatorCompat$KitKatViewPropertyAnimatorCompatImpl -> com.dcloud.android.v4.view.ViewPropertyAnimatorCompat$KitKatViewPropertyAnimatorCompatImpl:
    1:1:void <init>() -> <init>
    1:1:void setUpdateListener(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,com.dcloud.android.v4.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
com.dcloud.android.v4.view.ViewPropertyAnimatorCompat$LollipopViewPropertyAnimatorCompatImpl -> com.dcloud.android.v4.view.ViewPropertyAnimatorCompat$LollipopViewPropertyAnimatorCompatImpl:
    1:1:void <init>() -> <init>
    1:1:void translationZ(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationZ
    1:1:void translationZBy(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> translationZBy
    1:1:void z(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> z
    1:1:void zBy(com.dcloud.android.v4.view.ViewPropertyAnimatorCompat,android.view.View,float) -> zBy
com.dcloud.android.v4.view.ViewPropertyAnimatorCompatICS -> com.dcloud.android.v4.view.ViewPropertyAnimatorCompatICS:
    1:1:void <init>() -> <init>
    1:1:void alpha(android.view.View,float) -> alpha
    1:1:void alphaBy(android.view.View,float) -> alphaBy
    1:1:void cancel(android.view.View) -> cancel
    1:1:long getDuration(android.view.View) -> getDuration
    1:1:long getStartDelay(android.view.View) -> getStartDelay
    1:1:void rotation(android.view.View,float) -> rotation
    1:1:void rotationBy(android.view.View,float) -> rotationBy
    1:1:void rotationX(android.view.View,float) -> rotationX
    1:1:void rotationXBy(android.view.View,float) -> rotationXBy
    1:1:void rotationY(android.view.View,float) -> rotationY
    1:1:void rotationYBy(android.view.View,float) -> rotationYBy
    1:1:void scaleX(android.view.View,float) -> scaleX
    1:1:void scaleXBy(android.view.View,float) -> scaleXBy
    1:1:void scaleY(android.view.View,float) -> scaleY
    1:1:void scaleYBy(android.view.View,float) -> scaleYBy
    1:1:void setDuration(android.view.View,long) -> setDuration
    1:1:void setInterpolator(android.view.View,android.view.animation.Interpolator) -> setInterpolator
    1:18:void setListener(android.view.View,com.dcloud.android.v4.view.ViewPropertyAnimatorListener) -> setListener
    1:1:void setStartDelay(android.view.View,long) -> setStartDelay
    1:1:void start(android.view.View) -> start
    1:1:void translationX(android.view.View,float) -> translationX
    1:1:void translationXBy(android.view.View,float) -> translationXBy
    1:1:void translationY(android.view.View,float) -> translationY
    1:1:void translationYBy(android.view.View,float) -> translationYBy
    1:1:void x(android.view.View,float) -> x
    1:1:void xBy(android.view.View,float) -> xBy
    1:1:void y(android.view.View,float) -> y
    1:1:void yBy(android.view.View,float) -> yBy
com.dcloud.android.v4.view.ViewPropertyAnimatorCompatICS$1 -> com.dcloud.android.v4.view.ViewPropertyAnimatorCompatICS$1:
    1:1:void <init>(com.dcloud.android.v4.view.ViewPropertyAnimatorListener,android.view.View) -> <init>
    1:1:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    1:1:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    1:1:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.dcloud.android.v4.view.ViewPropertyAnimatorCompatJB -> com.dcloud.android.v4.view.ViewPropertyAnimatorCompatJB:
    1:1:void <init>() -> <init>
    1:18:void setListener(android.view.View,com.dcloud.android.v4.view.ViewPropertyAnimatorListener) -> setListener
    1:1:void withEndAction(android.view.View,java.lang.Runnable) -> withEndAction
    1:1:void withLayer(android.view.View) -> withLayer
    1:1:void withStartAction(android.view.View,java.lang.Runnable) -> withStartAction
com.dcloud.android.v4.view.ViewPropertyAnimatorCompatJB$1 -> com.dcloud.android.v4.view.ViewPropertyAnimatorCompatJB$1:
    1:1:void <init>(com.dcloud.android.v4.view.ViewPropertyAnimatorListener,android.view.View) -> <init>
    1:1:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    1:1:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    1:1:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.dcloud.android.v4.view.ViewPropertyAnimatorCompatJellybeanMr2 -> com.dcloud.android.v4.view.ViewPropertyAnimatorCompatJellybeanMr2:
    1:1:void <init>() -> <init>
    1:1:android.view.animation.Interpolator getInterpolator(android.view.View) -> getInterpolator
com.dcloud.android.v4.view.ViewPropertyAnimatorCompatKK -> com.dcloud.android.v4.view.ViewPropertyAnimatorCompatKK:
    1:1:void <init>() -> <init>
    1:1:void setUpdateListener(android.view.View,com.dcloud.android.v4.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
com.dcloud.android.v4.view.ViewPropertyAnimatorCompatKK$1 -> com.dcloud.android.v4.view.ViewPropertyAnimatorCompatKK$1:
    1:1:void <init>(com.dcloud.android.v4.view.ViewPropertyAnimatorUpdateListener,android.view.View) -> <init>
    1:1:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.dcloud.android.v4.view.ViewPropertyAnimatorCompatLollipop -> com.dcloud.android.v4.view.ViewPropertyAnimatorCompatLollipop:
    1:1:void <init>() -> <init>
    1:1:void translationZ(android.view.View,float) -> translationZ
    1:1:void translationZBy(android.view.View,float) -> translationZBy
    1:1:void z(android.view.View,float) -> z
    1:1:void zBy(android.view.View,float) -> zBy
com.dcloud.android.v4.view.WindowCompat -> com.dcloud.android.v4.view.WindowCompat:
    1:1:void <init>() -> <init>
com.dcloud.android.v4.view.WindowInsetsCompat -> com.dcloud.android.v4.view.WindowInsetsCompat:
    1:1:void <init>() -> <init>
com.dcloud.android.v4.view.WindowInsetsCompatApi21 -> com.dcloud.android.v4.view.WindowInsetsCompatApi21:
    1:2:void <init>(android.view.WindowInsets) -> <init>
    1:1:com.dcloud.android.v4.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
    1:1:com.dcloud.android.v4.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    1:1:int getStableInsetBottom() -> getStableInsetBottom
    1:1:int getStableInsetLeft() -> getStableInsetLeft
    1:1:int getStableInsetRight() -> getStableInsetRight
    1:1:int getStableInsetTop() -> getStableInsetTop
    1:1:int getSystemWindowInsetBottom() -> getSystemWindowInsetBottom
    1:1:int getSystemWindowInsetLeft() -> getSystemWindowInsetLeft
    1:1:int getSystemWindowInsetRight() -> getSystemWindowInsetRight
    1:1:int getSystemWindowInsetTop() -> getSystemWindowInsetTop
    1:1:boolean hasInsets() -> hasInsets
    1:1:boolean hasStableInsets() -> hasStableInsets
    1:1:boolean hasSystemWindowInsets() -> hasSystemWindowInsets
    1:1:boolean isConsumed() -> isConsumed
    1:1:boolean isRound() -> isRound
    1:1:com.dcloud.android.v4.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int) -> replaceSystemWindowInsets
    2:2:com.dcloud.android.v4.view.WindowInsetsCompat replaceSystemWindowInsets(android.graphics.Rect) -> replaceSystemWindowInsets
    1:1:android.view.WindowInsets unwrap() -> unwrap
com.dcloud.android.v4.view.accessibility.AccessibilityEventCompatKitKat -> com.dcloud.android.v4.view.accessibility.AccessibilityEventCompatKitKat:
    1:1:void <init>() -> <init>
    1:1:int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> getContentChangeTypes
    1:1:void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat -> com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat:
    1:16:void <clinit>() -> <clinit>
    1:2:void <init>(java.lang.Object) -> <init>
    1:1:com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl access$000() -> access$000
    1:1:void addAction(int) -> addAction
    2:2:void addAction(com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> addAction
    1:1:void addChild(android.view.View) -> addChild
    2:2:void addChild(android.view.View,int) -> addChild
    1:1:boolean canOpenPopup() -> canOpenPopup
    1:9:boolean equals(java.lang.Object) -> equals
    1:6:java.util.List findAccessibilityNodeInfosByText(java.lang.String) -> findAccessibilityNodeInfosByText
    1:9:java.util.List findAccessibilityNodeInfosByViewId(java.lang.String) -> findAccessibilityNodeInfosByViewId
    1:1:com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    1:1:com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int) -> focusSearch
    1:11:java.util.List getActionList() -> getActionList
    1:1:int getActions() -> getActions
    1:1:void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    1:1:void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    1:1:com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat getChild(int) -> getChild
    1:1:int getChildCount() -> getChildCount
    1:1:java.lang.CharSequence getClassName() -> getClassName
    1:3:com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat getCollectionInfo() -> getCollectionInfo
    1:3:com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat getCollectionItemInfo() -> getCollectionItemInfo
    1:1:java.lang.CharSequence getContentDescription() -> getContentDescription
    1:1:java.lang.CharSequence getError() -> getError
    1:1:android.os.Bundle getExtras() -> getExtras
    1:1:java.lang.Object getInfo() -> getInfo
    1:1:int getInputType() -> getInputType
    1:1:com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat getLabelFor() -> getLabelFor
    1:1:com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat getLabeledBy() -> getLabeledBy
    1:1:int getLiveRegion() -> getLiveRegion
    1:1:int getMaxTextLength() -> getMaxTextLength
    1:1:int getMovementGranularities() -> getMovementGranularities
    1:1:java.lang.CharSequence getPackageName() -> getPackageName
    1:1:com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat getParent() -> getParent
    1:3:com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat getRangeInfo() -> getRangeInfo
    1:1:java.lang.CharSequence getText() -> getText
    1:1:int getTextSelectionEnd() -> getTextSelectionEnd
    1:1:int getTextSelectionStart() -> getTextSelectionStart
    1:1:com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat getTraversalAfter() -> getTraversalAfter
    1:1:com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat getTraversalBefore() -> getTraversalBefore
    1:1:java.lang.String getViewIdResourceName() -> getViewIdResourceName
    1:1:com.dcloud.android.v4.view.accessibility.AccessibilityWindowInfoCompat getWindow() -> getWindow
    1:1:int getWindowId() -> getWindowId
    1:1:int hashCode() -> hashCode
    1:1:boolean isAccessibilityFocused() -> isAccessibilityFocused
    1:1:boolean isCheckable() -> isCheckable
    1:1:boolean isChecked() -> isChecked
    1:1:boolean isClickable() -> isClickable
    1:1:boolean isContentInvalid() -> isContentInvalid
    1:1:boolean isDismissable() -> isDismissable
    1:1:boolean isEditable() -> isEditable
    1:1:boolean isEnabled() -> isEnabled
    1:1:boolean isFocusable() -> isFocusable
    1:1:boolean isFocused() -> isFocused
    1:1:boolean isLongClickable() -> isLongClickable
    1:1:boolean isMultiLine() -> isMultiLine
    1:1:boolean isPassword() -> isPassword
    1:1:boolean isScrollable() -> isScrollable
    1:1:boolean isSelected() -> isSelected
    1:1:boolean isVisibleToUser() -> isVisibleToUser
    1:1:com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> obtain
    2:4:com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int) -> obtain
    5:5:com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat obtain() -> obtain
    6:6:com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    1:1:boolean performAction(int) -> performAction
    2:2:boolean performAction(int,android.os.Bundle) -> performAction
    1:1:void recycle() -> recycle
    1:1:boolean refresh() -> refresh
    1:1:boolean removeAction(com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> removeAction
    1:1:boolean removeChild(android.view.View) -> removeChild
    2:2:boolean removeChild(android.view.View,int) -> removeChild
    1:1:void setAccessibilityFocused(boolean) -> setAccessibilityFocused
    1:1:void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    1:1:void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    1:1:void setCanOpenPopup(boolean) -> setCanOpenPopup
    1:1:void setCheckable(boolean) -> setCheckable
    1:1:void setChecked(boolean) -> setChecked
    1:1:void setClassName(java.lang.CharSequence) -> setClassName
    1:1:void setClickable(boolean) -> setClickable
    1:1:void setCollectionInfo(java.lang.Object) -> setCollectionInfo
    1:1:void setCollectionItemInfo(java.lang.Object) -> setCollectionItemInfo
    1:1:void setContentDescription(java.lang.CharSequence) -> setContentDescription
    1:1:void setContentInvalid(boolean) -> setContentInvalid
    1:1:void setDismissable(boolean) -> setDismissable
    1:1:void setEditable(boolean) -> setEditable
    1:1:void setEnabled(boolean) -> setEnabled
    1:1:void setError(java.lang.CharSequence) -> setError
    1:1:void setFocusable(boolean) -> setFocusable
    1:1:void setFocused(boolean) -> setFocused
    1:1:void setInputType(int) -> setInputType
    1:1:void setLabelFor(android.view.View) -> setLabelFor
    2:2:void setLabelFor(android.view.View,int) -> setLabelFor
    1:1:void setLabeledBy(android.view.View) -> setLabeledBy
    2:2:void setLabeledBy(android.view.View,int) -> setLabeledBy
    1:1:void setLiveRegion(int) -> setLiveRegion
    1:1:void setLongClickable(boolean) -> setLongClickable
    1:1:void setMaxTextLength(int) -> setMaxTextLength
    1:1:void setMovementGranularities(int) -> setMovementGranularities
    1:1:void setMultiLine(boolean) -> setMultiLine
    1:1:void setPackageName(java.lang.CharSequence) -> setPackageName
    1:1:void setParent(android.view.View) -> setParent
    2:2:void setParent(android.view.View,int) -> setParent
    1:1:void setPassword(boolean) -> setPassword
    1:1:void setRangeInfo(com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat) -> setRangeInfo
    1:1:void setScrollable(boolean) -> setScrollable
    1:1:void setSelected(boolean) -> setSelected
    1:1:void setSource(android.view.View) -> setSource
    2:2:void setSource(android.view.View,int) -> setSource
    1:1:void setText(java.lang.CharSequence) -> setText
    1:1:void setTextSelection(int,int) -> setTextSelection
    1:1:void setTraversalAfter(android.view.View) -> setTraversalAfter
    2:2:void setTraversalAfter(android.view.View,int) -> setTraversalAfter
    1:1:void setTraversalBefore(android.view.View) -> setTraversalBefore
    2:2:void setTraversalBefore(android.view.View,int) -> setTraversalBefore
    1:1:void setViewIdResourceName(java.lang.String) -> setViewIdResourceName
    1:1:void setVisibleToUser(boolean) -> setVisibleToUser
    1:40:java.lang.String toString() -> toString
    1:1:com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> wrapNonNullInstance
com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat -> com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat:
    1:291:void <clinit>() -> <clinit>
    1:1:void <init>(java.lang.Object,com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat$1) -> <init>
    2:2:void <init>(int,java.lang.CharSequence) -> <init>
    3:4:void <init>(java.lang.Object) -> <init>
    1:1:java.lang.Object access$100(com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> access$100
    1:1:int getId() -> getId
    1:1:java.lang.CharSequence getLabel() -> getLabel
com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi21Impl -> com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi21Impl:
    1:1:void <init>() -> <init>
    1:1:void addAction(java.lang.Object,java.lang.Object) -> addAction
    1:1:int getAccessibilityActionId(java.lang.Object) -> getAccessibilityActionId
    1:1:java.lang.CharSequence getAccessibilityActionLabel(java.lang.Object) -> getAccessibilityActionLabel
    1:1:java.util.List getActionList(java.lang.Object) -> getActionList
    1:1:java.lang.CharSequence getError(java.lang.Object) -> getError
    1:1:int getMaxTextLength(java.lang.Object) -> getMaxTextLength
    1:1:java.lang.Object getWindow(java.lang.Object) -> getWindow
    1:1:boolean isCollectionItemSelected(java.lang.Object) -> isCollectionItemSelected
    1:1:java.lang.Object newAccessibilityAction(int,java.lang.CharSequence) -> newAccessibilityAction
    1:1:java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> obtainCollectionInfo
    1:1:java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> obtainCollectionItemInfo
    1:1:boolean removeAction(java.lang.Object,java.lang.Object) -> removeAction
    1:1:boolean removeChild(java.lang.Object,android.view.View) -> removeChild
    2:2:boolean removeChild(java.lang.Object,android.view.View,int) -> removeChild
    1:1:void setError(java.lang.Object,java.lang.CharSequence) -> setError
    1:1:void setMaxTextLength(java.lang.Object,int) -> setMaxTextLength
com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi22Impl -> com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoApi22Impl:
    1:1:void <init>() -> <init>
    1:1:java.lang.Object getTraversalAfter(java.lang.Object) -> getTraversalAfter
    1:1:java.lang.Object getTraversalBefore(java.lang.Object) -> getTraversalBefore
    1:1:void setTraversalAfter(java.lang.Object,android.view.View) -> setTraversalAfter
    2:2:void setTraversalAfter(java.lang.Object,android.view.View,int) -> setTraversalAfter
    1:1:void setTraversalBefore(java.lang.Object,android.view.View) -> setTraversalBefore
    2:2:void setTraversalBefore(java.lang.Object,android.view.View,int) -> setTraversalBefore
com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl:
    1:1:void <init>() -> <init>
    1:1:void addAction(java.lang.Object,int) -> addAction
    1:1:void addChild(java.lang.Object,android.view.View) -> addChild
    1:1:java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    1:1:int getActions(java.lang.Object) -> getActions
    1:1:void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    1:1:void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    1:1:java.lang.Object getChild(java.lang.Object,int) -> getChild
    1:1:int getChildCount(java.lang.Object) -> getChildCount
    1:1:java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    1:1:java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    1:1:java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    1:1:java.lang.Object getParent(java.lang.Object) -> getParent
    1:1:java.lang.CharSequence getText(java.lang.Object) -> getText
    1:1:int getWindowId(java.lang.Object) -> getWindowId
    1:1:boolean isCheckable(java.lang.Object) -> isCheckable
    1:1:boolean isChecked(java.lang.Object) -> isChecked
    1:1:boolean isClickable(java.lang.Object) -> isClickable
    1:1:boolean isEnabled(java.lang.Object) -> isEnabled
    1:1:boolean isFocusable(java.lang.Object) -> isFocusable
    1:1:boolean isFocused(java.lang.Object) -> isFocused
    1:1:boolean isLongClickable(java.lang.Object) -> isLongClickable
    1:1:boolean isPassword(java.lang.Object) -> isPassword
    1:1:boolean isScrollable(java.lang.Object) -> isScrollable
    1:1:boolean isSelected(java.lang.Object) -> isSelected
    1:1:java.lang.Object obtain() -> obtain
    2:2:java.lang.Object obtain(android.view.View) -> obtain
    3:3:java.lang.Object obtain(java.lang.Object) -> obtain
    1:1:boolean performAction(java.lang.Object,int) -> performAction
    1:1:void recycle(java.lang.Object) -> recycle
    1:1:void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    1:1:void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    1:1:void setCheckable(java.lang.Object,boolean) -> setCheckable
    1:1:void setChecked(java.lang.Object,boolean) -> setChecked
    1:1:void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    1:1:void setClickable(java.lang.Object,boolean) -> setClickable
    1:1:void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    1:1:void setEnabled(java.lang.Object,boolean) -> setEnabled
    1:1:void setFocusable(java.lang.Object,boolean) -> setFocusable
    1:1:void setFocused(java.lang.Object,boolean) -> setFocused
    1:1:void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    1:1:void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    1:1:void setParent(java.lang.Object,android.view.View) -> setParent
    1:1:void setPassword(java.lang.Object,boolean) -> setPassword
    1:1:void setScrollable(java.lang.Object,boolean) -> setScrollable
    1:1:void setSelected(java.lang.Object,boolean) -> setSelected
    1:1:void setSource(java.lang.Object,android.view.View) -> setSource
    1:1:void setText(java.lang.Object,java.lang.CharSequence) -> setText
com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl:
    1:1:void <init>() -> <init>
    1:1:void addChild(java.lang.Object,android.view.View,int) -> addChild
    1:1:java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    1:1:java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    1:1:int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    1:1:boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    1:1:boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    1:1:java.lang.Object obtain(android.view.View,int) -> obtain
    1:1:boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    1:1:void setAccessibilityFocused(java.lang.Object,boolean) -> setAccessibilityFocused
    1:1:void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    1:1:void setParent(java.lang.Object,android.view.View,int) -> setParent
    1:1:void setSource(java.lang.Object,android.view.View,int) -> setSource
    1:1:void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr1Impl -> com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr1Impl:
    1:1:void <init>() -> <init>
    1:1:java.lang.Object getLabelFor(java.lang.Object) -> getLabelFor
    1:1:java.lang.Object getLabeledBy(java.lang.Object) -> getLabeledBy
    1:1:void setLabelFor(java.lang.Object,android.view.View) -> setLabelFor
    2:2:void setLabelFor(java.lang.Object,android.view.View,int) -> setLabelFor
    1:1:void setLabeledBy(java.lang.Object,android.view.View) -> setLabeledBy
    2:2:void setLabeledBy(java.lang.Object,android.view.View,int) -> setLabeledBy
com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl -> com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanMr2Impl:
    1:1:void <init>() -> <init>
    1:1:java.util.List findAccessibilityNodeInfosByViewId(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByViewId
    1:1:int getTextSelectionEnd(java.lang.Object) -> getTextSelectionEnd
    1:1:int getTextSelectionStart(java.lang.Object) -> getTextSelectionStart
    1:1:java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    1:1:boolean isEditable(java.lang.Object) -> isEditable
    1:1:boolean refresh(java.lang.Object) -> refresh
    1:1:void setEditable(java.lang.Object,boolean) -> setEditable
    1:1:void setTextSelection(java.lang.Object,int,int) -> setTextSelection
    1:1:void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl -> com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoKitKatImpl:
    1:1:void <init>() -> <init>
    1:1:boolean canOpenPopup(java.lang.Object) -> canOpenPopup
    1:1:java.lang.Object getCollectionInfo(java.lang.Object) -> getCollectionInfo
    1:1:int getCollectionInfoColumnCount(java.lang.Object) -> getCollectionInfoColumnCount
    1:1:int getCollectionInfoRowCount(java.lang.Object) -> getCollectionInfoRowCount
    1:1:int getCollectionItemColumnIndex(java.lang.Object) -> getCollectionItemColumnIndex
    1:1:int getCollectionItemColumnSpan(java.lang.Object) -> getCollectionItemColumnSpan
    1:1:java.lang.Object getCollectionItemInfo(java.lang.Object) -> getCollectionItemInfo
    1:1:int getCollectionItemRowIndex(java.lang.Object) -> getCollectionItemRowIndex
    1:1:int getCollectionItemRowSpan(java.lang.Object) -> getCollectionItemRowSpan
    1:1:android.os.Bundle getExtras(java.lang.Object) -> getExtras
    1:1:int getInputType(java.lang.Object) -> getInputType
    1:1:int getLiveRegion(java.lang.Object) -> getLiveRegion
    1:1:java.lang.Object getRangeInfo(java.lang.Object) -> getRangeInfo
    1:1:boolean isCollectionInfoHierarchical(java.lang.Object) -> isCollectionInfoHierarchical
    1:1:boolean isCollectionItemHeading(java.lang.Object) -> isCollectionItemHeading
    1:1:boolean isContentInvalid(java.lang.Object) -> isContentInvalid
    1:1:boolean isDismissable(java.lang.Object) -> isDismissable
    1:1:boolean isMultiLine(java.lang.Object) -> isMultiLine
    1:1:java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> obtainCollectionInfo
    1:1:java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> obtainCollectionItemInfo
    1:1:void setCanOpenPopup(java.lang.Object,boolean) -> setCanOpenPopup
    1:1:void setCollectionInfo(java.lang.Object,java.lang.Object) -> setCollectionInfo
    1:1:void setCollectionItemInfo(java.lang.Object,java.lang.Object) -> setCollectionItemInfo
    1:1:void setContentInvalid(java.lang.Object,boolean) -> setContentInvalid
    1:1:void setDismissable(java.lang.Object,boolean) -> setDismissable
    1:1:void setInputType(java.lang.Object,int) -> setInputType
    1:1:void setLiveRegion(java.lang.Object,int) -> setLiveRegion
    1:1:void setMultiLine(java.lang.Object,boolean) -> setMultiLine
    1:1:void setRangeInfo(java.lang.Object,java.lang.Object) -> setRangeInfo
com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl:
    1:1:void <init>() -> <init>
    1:1:java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    1:1:java.util.List findAccessibilityNodeInfosByViewId(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByViewId
    1:1:android.os.Bundle getExtras(java.lang.Object) -> getExtras
com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat -> com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat:
    1:1:void <init>(java.lang.Object,com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat$1) -> <init>
    2:3:void <init>(java.lang.Object) -> <init>
    1:1:int getColumnCount() -> getColumnCount
    1:1:int getRowCount() -> getRowCount
    1:1:boolean isHierarchical() -> isHierarchical
    1:1:com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean,int) -> obtain
com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat -> com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat:
    1:1:void <init>(java.lang.Object,com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat$1) -> <init>
    2:3:void <init>(java.lang.Object) -> <init>
    1:1:java.lang.Object access$300(com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat) -> access$300
    1:1:int getColumnIndex() -> getColumnIndex
    1:1:int getColumnSpan() -> getColumnSpan
    1:1:int getRowIndex() -> getRowIndex
    1:1:int getRowSpan() -> getRowSpan
    1:1:boolean isHeading() -> isHeading
    1:1:boolean isSelected() -> isSelected
    1:1:com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean) -> obtain
com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat -> com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat:
    1:1:void <init>(java.lang.Object,com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat$1) -> <init>
    2:3:void <init>(java.lang.Object) -> <init>
    1:1:java.lang.Object access$600(com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat) -> access$600
    1:1:float getCurrent() -> getCurrent
    1:1:float getMax() -> getMax
    1:1:float getMin() -> getMin
    1:1:int getType() -> getType
com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompatApi21 -> com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompatApi21:
    1:1:void <init>() -> <init>
    1:1:void addAction(java.lang.Object,java.lang.Object) -> addAction
    1:1:int getAccessibilityActionId(java.lang.Object) -> getAccessibilityActionId
    1:1:java.lang.CharSequence getAccessibilityActionLabel(java.lang.Object) -> getAccessibilityActionLabel
    1:1:java.util.List getActionList(java.lang.Object) -> getActionList
    1:1:java.lang.CharSequence getError(java.lang.Object) -> getError
    1:1:int getMaxTextLength(java.lang.Object) -> getMaxTextLength
    1:1:java.lang.Object getWindow(java.lang.Object) -> getWindow
    1:1:java.lang.Object newAccessibilityAction(int,java.lang.CharSequence) -> newAccessibilityAction
    1:1:java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> obtainCollectionInfo
    1:1:java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean,boolean) -> obtainCollectionItemInfo
    1:1:boolean removeAction(java.lang.Object,java.lang.Object) -> removeAction
    1:1:boolean removeChild(java.lang.Object,android.view.View) -> removeChild
    2:2:boolean removeChild(java.lang.Object,android.view.View,int) -> removeChild
    1:1:void setError(java.lang.Object,java.lang.CharSequence) -> setError
    1:1:void setMaxTextLength(java.lang.Object,int) -> setMaxTextLength
com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompatApi21$CollectionItemInfo -> com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompatApi21$CollectionItemInfo:
    1:1:void <init>() -> <init>
    1:1:boolean isSelected(java.lang.Object) -> isSelected
com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompatApi22 -> com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompatApi22:
    1:1:void <init>() -> <init>
com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompatIcs:
    1:1:void <init>() -> <init>
    1:1:void addAction(java.lang.Object,int) -> addAction
    1:1:void addChild(java.lang.Object,android.view.View) -> addChild
    1:1:java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByText
    1:1:int getActions(java.lang.Object) -> getActions
    1:1:void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> getBoundsInParent
    1:1:void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    1:1:java.lang.Object getChild(java.lang.Object,int) -> getChild
    1:1:int getChildCount(java.lang.Object) -> getChildCount
    1:1:java.lang.CharSequence getClassName(java.lang.Object) -> getClassName
    1:1:java.lang.CharSequence getContentDescription(java.lang.Object) -> getContentDescription
    1:1:java.lang.CharSequence getPackageName(java.lang.Object) -> getPackageName
    1:1:java.lang.Object getParent(java.lang.Object) -> getParent
    1:1:java.lang.CharSequence getText(java.lang.Object) -> getText
    1:1:int getWindowId(java.lang.Object) -> getWindowId
    1:1:boolean isCheckable(java.lang.Object) -> isCheckable
    1:1:boolean isChecked(java.lang.Object) -> isChecked
    1:1:boolean isClickable(java.lang.Object) -> isClickable
    1:1:boolean isEnabled(java.lang.Object) -> isEnabled
    1:1:boolean isFocusable(java.lang.Object) -> isFocusable
    1:1:boolean isFocused(java.lang.Object) -> isFocused
    1:1:boolean isLongClickable(java.lang.Object) -> isLongClickable
    1:1:boolean isPassword(java.lang.Object) -> isPassword
    1:1:boolean isScrollable(java.lang.Object) -> isScrollable
    1:1:boolean isSelected(java.lang.Object) -> isSelected
    1:1:java.lang.Object obtain() -> obtain
    2:2:java.lang.Object obtain(android.view.View) -> obtain
    3:3:java.lang.Object obtain(java.lang.Object) -> obtain
    1:1:boolean performAction(java.lang.Object,int) -> performAction
    1:1:void recycle(java.lang.Object) -> recycle
    1:1:void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> setBoundsInParent
    1:1:void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> setBoundsInScreen
    1:1:void setCheckable(java.lang.Object,boolean) -> setCheckable
    1:1:void setChecked(java.lang.Object,boolean) -> setChecked
    1:1:void setClassName(java.lang.Object,java.lang.CharSequence) -> setClassName
    1:1:void setClickable(java.lang.Object,boolean) -> setClickable
    1:1:void setContentDescription(java.lang.Object,java.lang.CharSequence) -> setContentDescription
    1:1:void setEnabled(java.lang.Object,boolean) -> setEnabled
    1:1:void setFocusable(java.lang.Object,boolean) -> setFocusable
    1:1:void setFocused(java.lang.Object,boolean) -> setFocused
    1:1:void setLongClickable(java.lang.Object,boolean) -> setLongClickable
    1:1:void setPackageName(java.lang.Object,java.lang.CharSequence) -> setPackageName
    1:1:void setParent(java.lang.Object,android.view.View) -> setParent
    1:1:void setPassword(java.lang.Object,boolean) -> setPassword
    1:1:void setScrollable(java.lang.Object,boolean) -> setScrollable
    1:1:void setSelected(java.lang.Object,boolean) -> setSelected
    1:1:void setSource(java.lang.Object,android.view.View) -> setSource
    1:1:void setText(java.lang.Object,java.lang.CharSequence) -> setText
com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean:
    1:1:void <init>() -> <init>
    1:1:void addChild(java.lang.Object,android.view.View,int) -> addChild
    1:1:java.lang.Object findFocus(java.lang.Object,int) -> findFocus
    1:1:java.lang.Object focusSearch(java.lang.Object,int) -> focusSearch
    1:1:int getMovementGranularities(java.lang.Object) -> getMovementGranularities
    1:1:boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    1:1:boolean isVisibleToUser(java.lang.Object) -> isVisibleToUser
    1:1:java.lang.Object obtain(android.view.View,int) -> obtain
    1:1:boolean performAction(java.lang.Object,int,android.os.Bundle) -> performAction
    1:1:void setAccesibilityFocused(java.lang.Object,boolean) -> setAccesibilityFocused
    1:1:void setMovementGranularities(java.lang.Object,int) -> setMovementGranularities
    1:1:void setParent(java.lang.Object,android.view.View,int) -> setParent
    1:1:void setSource(java.lang.Object,android.view.View,int) -> setSource
    1:1:void setVisibleToUser(java.lang.Object,boolean) -> setVisibleToUser
com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr1 -> com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr1:
    1:1:void <init>() -> <init>
    1:1:java.lang.Object getLabelFor(java.lang.Object) -> getLabelFor
    1:1:java.lang.Object getLabeledBy(java.lang.Object) -> getLabeledBy
    1:1:void setLabelFor(java.lang.Object,android.view.View) -> setLabelFor
    2:2:void setLabelFor(java.lang.Object,android.view.View,int) -> setLabelFor
    1:1:void setLabeledBy(java.lang.Object,android.view.View) -> setLabeledBy
    2:2:void setLabeledBy(java.lang.Object,android.view.View,int) -> setLabeledBy
com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2 -> com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompatJellybeanMr2:
    1:1:void <init>() -> <init>
    1:1:java.util.List findAccessibilityNodeInfosByViewId(java.lang.Object,java.lang.String) -> findAccessibilityNodeInfosByViewId
    1:1:int getTextSelectionEnd(java.lang.Object) -> getTextSelectionEnd
    1:1:int getTextSelectionStart(java.lang.Object) -> getTextSelectionStart
    1:1:java.lang.String getViewIdResourceName(java.lang.Object) -> getViewIdResourceName
    1:1:boolean isEditable(java.lang.Object) -> isEditable
    1:1:boolean refresh(java.lang.Object) -> refresh
    1:1:void setEditable(java.lang.Object,boolean) -> setEditable
    1:1:void setTextSelection(java.lang.Object,int,int) -> setTextSelection
    1:1:void setViewIdResourceName(java.lang.Object,java.lang.String) -> setViewIdResourceName
com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat -> com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat:
    1:1:void <init>() -> <init>
    1:1:boolean canOpenPopup(java.lang.Object) -> canOpenPopup
    1:1:java.lang.Object getCollectionInfo(java.lang.Object) -> getCollectionInfo
    1:1:java.lang.Object getCollectionItemInfo(java.lang.Object) -> getCollectionItemInfo
    1:1:android.os.Bundle getExtras(java.lang.Object) -> getExtras
    1:1:int getInputType(java.lang.Object) -> getInputType
    1:1:int getLiveRegion(java.lang.Object) -> getLiveRegion
    1:1:java.lang.Object getRangeInfo(java.lang.Object) -> getRangeInfo
    1:1:boolean isContentInvalid(java.lang.Object) -> isContentInvalid
    1:1:boolean isDismissable(java.lang.Object) -> isDismissable
    1:1:boolean isMultiLine(java.lang.Object) -> isMultiLine
    1:1:java.lang.Object obtainCollectionInfo(int,int,boolean,int) -> obtainCollectionInfo
    1:1:java.lang.Object obtainCollectionItemInfo(int,int,int,int,boolean) -> obtainCollectionItemInfo
    1:1:void setCanOpenPopup(java.lang.Object,boolean) -> setCanOpenPopup
    1:1:void setCollectionInfo(java.lang.Object,java.lang.Object) -> setCollectionInfo
    1:1:void setCollectionItemInfo(java.lang.Object,java.lang.Object) -> setCollectionItemInfo
    1:1:void setContentInvalid(java.lang.Object,boolean) -> setContentInvalid
    1:1:void setDismissable(java.lang.Object,boolean) -> setDismissable
    1:1:void setInputType(java.lang.Object,int) -> setInputType
    1:1:void setLiveRegion(java.lang.Object,int) -> setLiveRegion
    1:1:void setMultiLine(java.lang.Object,boolean) -> setMultiLine
    1:1:void setRangeInfo(java.lang.Object,java.lang.Object) -> setRangeInfo
com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$CollectionInfo -> com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$CollectionInfo:
    1:1:void <init>() -> <init>
    1:1:int getColumnCount(java.lang.Object) -> getColumnCount
    1:1:int getRowCount(java.lang.Object) -> getRowCount
    1:1:boolean isHierarchical(java.lang.Object) -> isHierarchical
com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$CollectionItemInfo -> com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$CollectionItemInfo:
    1:1:void <init>() -> <init>
    1:1:int getColumnIndex(java.lang.Object) -> getColumnIndex
    1:1:int getColumnSpan(java.lang.Object) -> getColumnSpan
    1:1:int getRowIndex(java.lang.Object) -> getRowIndex
    1:1:int getRowSpan(java.lang.Object) -> getRowSpan
    1:1:boolean isHeading(java.lang.Object) -> isHeading
com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$RangeInfo -> com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompatKitKat$RangeInfo:
    1:1:void <init>() -> <init>
    1:1:float getCurrent(java.lang.Object) -> getCurrent
    1:1:float getMax(java.lang.Object) -> getMax
    1:1:float getMin(java.lang.Object) -> getMin
    1:1:int getType(java.lang.Object) -> getType
com.dcloud.android.v4.view.accessibility.AccessibilityNodeProviderCompat -> com.dcloud.android.v4.view.accessibility.AccessibilityNodeProviderCompat:
    1:6:void <clinit>() -> <clinit>
    1:2:void <init>() -> <init>
    3:4:void <init>(java.lang.Object) -> <init>
    1:1:java.lang.Object getProvider() -> getProvider
com.dcloud.android.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> com.dcloud.android.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl:
    1:1:void <init>() -> <init>
    1:1:java.lang.Object newAccessibilityNodeProviderBridge(com.dcloud.android.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
com.dcloud.android.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> com.dcloud.android.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1:
    1:1:void <init>(com.dcloud.android.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl,com.dcloud.android.v4.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    1:6:java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    1:7:java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    1:1:boolean performAction(int,int,android.os.Bundle) -> performAction
com.dcloud.android.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl -> com.dcloud.android.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl:
    1:1:void <init>() -> <init>
    1:1:java.lang.Object newAccessibilityNodeProviderBridge(com.dcloud.android.v4.view.accessibility.AccessibilityNodeProviderCompat) -> newAccessibilityNodeProviderBridge
com.dcloud.android.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1 -> com.dcloud.android.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl$1:
    1:1:void <init>(com.dcloud.android.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderKitKatImpl,com.dcloud.android.v4.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    1:6:java.lang.Object createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    1:7:java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    1:5:java.lang.Object findFocus(int) -> findFocus
    1:1:boolean performAction(int,int,android.os.Bundle) -> performAction
com.dcloud.android.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> com.dcloud.android.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl:
    1:1:void <init>() -> <init>
com.dcloud.android.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> com.dcloud.android.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean:
    1:1:void <init>() -> <init>
    1:1:java.lang.Object newAccessibilityNodeProviderBridge(com.dcloud.android.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
com.dcloud.android.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> com.dcloud.android.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1:
    1:1:void <init>(com.dcloud.android.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> <init>
    1:1:android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    1:2:java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    1:1:boolean performAction(int,int,android.os.Bundle) -> performAction
com.dcloud.android.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat -> com.dcloud.android.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat:
    1:1:void <init>() -> <init>
    1:1:java.lang.Object newAccessibilityNodeProviderBridge(com.dcloud.android.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge) -> newAccessibilityNodeProviderBridge
com.dcloud.android.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1 -> com.dcloud.android.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$1:
    1:1:void <init>(com.dcloud.android.v4.view.accessibility.AccessibilityNodeProviderCompatKitKat$AccessibilityNodeInfoBridge) -> <init>
    1:1:android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    1:2:java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    1:1:android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
    1:1:boolean performAction(int,int,android.os.Bundle) -> performAction
com.dcloud.android.v4.view.accessibility.AccessibilityWindowInfoCompat -> com.dcloud.android.v4.view.accessibility.AccessibilityWindowInfoCompat:
    1:4:void <clinit>() -> <clinit>
    1:2:void <init>(java.lang.Object) -> <init>
    1:9:boolean equals(java.lang.Object) -> equals
    1:1:void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    1:1:com.dcloud.android.v4.view.accessibility.AccessibilityWindowInfoCompat getChild(int) -> getChild
    1:1:int getChildCount() -> getChildCount
    1:1:int getId() -> getId
    1:1:int getLayer() -> getLayer
    1:1:com.dcloud.android.v4.view.accessibility.AccessibilityWindowInfoCompat getParent() -> getParent
    1:1:com.dcloud.android.v4.view.accessibility.AccessibilityNodeInfoCompat getRoot() -> getRoot
    1:1:int getType() -> getType
    1:1:int hashCode() -> hashCode
    1:1:boolean isAccessibilityFocused() -> isAccessibilityFocused
    1:1:boolean isActive() -> isActive
    1:1:boolean isFocused() -> isFocused
    1:1:com.dcloud.android.v4.view.accessibility.AccessibilityWindowInfoCompat obtain() -> obtain
    2:2:com.dcloud.android.v4.view.accessibility.AccessibilityWindowInfoCompat obtain(com.dcloud.android.v4.view.accessibility.AccessibilityWindowInfoCompat) -> obtain
    1:1:void recycle() -> recycle
    1:14:java.lang.String toString() -> toString
    1:1:com.dcloud.android.v4.view.accessibility.AccessibilityWindowInfoCompat wrapNonNullInstance(java.lang.Object) -> wrapNonNullInstance
com.dcloud.android.v4.view.accessibility.AccessibilityWindowInfoCompat$AccessibilityWindowInfoApi21Impl -> com.dcloud.android.v4.view.accessibility.AccessibilityWindowInfoCompat$AccessibilityWindowInfoApi21Impl:
    1:1:void <init>() -> <init>
    2:2:void <init>(com.dcloud.android.v4.view.accessibility.AccessibilityWindowInfoCompat$1) -> <init>
    1:1:void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    1:1:java.lang.Object getChild(java.lang.Object,int) -> getChild
    1:1:int getChildCount(java.lang.Object) -> getChildCount
    1:1:int getId(java.lang.Object) -> getId
    1:1:int getLayer(java.lang.Object) -> getLayer
    1:1:java.lang.Object getParent(java.lang.Object) -> getParent
    1:1:java.lang.Object getRoot(java.lang.Object) -> getRoot
    1:1:int getType(java.lang.Object) -> getType
    1:1:boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    1:1:boolean isActive(java.lang.Object) -> isActive
    1:1:boolean isFocused(java.lang.Object) -> isFocused
    1:1:java.lang.Object obtain() -> obtain
    2:2:java.lang.Object obtain(java.lang.Object) -> obtain
    1:1:void recycle(java.lang.Object) -> recycle
com.dcloud.android.v4.view.accessibility.AccessibilityWindowInfoCompat$AccessibilityWindowInfoStubImpl -> com.dcloud.android.v4.view.accessibility.AccessibilityWindowInfoCompat$AccessibilityWindowInfoStubImpl:
    1:1:void <init>() -> <init>
    2:2:void <init>(com.dcloud.android.v4.view.accessibility.AccessibilityWindowInfoCompat$1) -> <init>
com.dcloud.android.v4.view.accessibility.AccessibilityWindowInfoCompatApi21 -> com.dcloud.android.v4.view.accessibility.AccessibilityWindowInfoCompatApi21:
    1:1:void <init>() -> <init>
    1:1:void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> getBoundsInScreen
    1:1:java.lang.Object getChild(java.lang.Object,int) -> getChild
    1:1:int getChildCount(java.lang.Object) -> getChildCount
    1:1:int getId(java.lang.Object) -> getId
    1:1:int getLayer(java.lang.Object) -> getLayer
    1:1:java.lang.Object getParent(java.lang.Object) -> getParent
    1:1:java.lang.Object getRoot(java.lang.Object) -> getRoot
    1:1:int getType(java.lang.Object) -> getType
    1:1:boolean isAccessibilityFocused(java.lang.Object) -> isAccessibilityFocused
    1:1:boolean isActive(java.lang.Object) -> isActive
    1:1:boolean isFocused(java.lang.Object) -> isFocused
    1:1:java.lang.Object obtain() -> obtain
    2:2:java.lang.Object obtain(java.lang.Object) -> obtain
    1:1:void recycle(java.lang.Object) -> recycle
com.dcloud.android.v4.view.animation.FastOutSlowInInterpolator -> com.dcloud.android.v4.view.animation.FastOutSlowInInterpolator:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:1:float getInterpolation(float) -> getInterpolation
com.dcloud.android.v4.view.animation.LookupTableInterpolator -> com.dcloud.android.v4.view.animation.LookupTableInterpolator:
    1:3:void <init>(float[]) -> <init>
    1:9:float getInterpolation(float) -> getInterpolation
com.dcloud.android.v4.widget.CircleImageView -> com.dcloud.android.v4.widget.CircleImageView:
    1:27:void <init>(android.content.Context,int,float,boolean) -> <init>
    28:28:void <init>(android.content.Context,int,float) -> <init>
    1:1:int access$000(com.dcloud.android.v4.widget.CircleImageView) -> access$000
    1:1:int access$002(com.dcloud.android.v4.widget.CircleImageView,int) -> access$002
    1:1:boolean elevationSupported() -> elevationSupported
    1:3:void onAnimationEnd() -> onAnimationEnd
    1:3:void onAnimationStart() -> onAnimationStart
    1:3:void onMeasure(int,int) -> onMeasure
    1:1:void setAnimationListener(android.view.animation.Animation$AnimationListener) -> setAnimationListener
    1:2:void setBackgroundColor(int) -> setBackgroundColor
    1:1:void setBackgroundColorRes(int) -> setBackgroundColorRes
com.dcloud.android.v4.widget.CircleImageView$OvalShadow -> com.dcloud.android.v4.widget.CircleImageView$OvalShadow:
    1:10:void <init>(com.dcloud.android.v4.widget.CircleImageView,int,int) -> <init>
    1:5:void draw(android.graphics.Canvas,android.graphics.Paint) -> draw
com.dcloud.android.v4.widget.MaterialProgressDrawable -> com.dcloud.android.v4.widget.MaterialProgressDrawable:
    1:2:void <clinit>() -> <clinit>
    1:385:void <init>(android.content.Context,android.view.View) -> <init>
    1:1:void access$000(com.dcloud.android.v4.widget.MaterialProgressDrawable,float,com.dcloud.android.v4.widget.MaterialProgressDrawable$Ring) -> access$000
    1:1:float access$100(com.dcloud.android.v4.widget.MaterialProgressDrawable,com.dcloud.android.v4.widget.MaterialProgressDrawable$Ring) -> access$100
    1:1:void access$200(com.dcloud.android.v4.widget.MaterialProgressDrawable,float,com.dcloud.android.v4.widget.MaterialProgressDrawable$Ring) -> access$200
    1:1:android.view.animation.Interpolator access$300() -> access$300
    1:1:float access$400(com.dcloud.android.v4.widget.MaterialProgressDrawable) -> access$400
    1:1:float access$402(com.dcloud.android.v4.widget.MaterialProgressDrawable,float) -> access$402
    1:12:void applyFinishTranslation(float,com.dcloud.android.v4.widget.MaterialProgressDrawable$Ring) -> applyFinishTranslation
    1:5:void draw(android.graphics.Canvas) -> draw
    1:7:int evaluateColorChange(float,int,int) -> evaluateColorChange
    1:1:int getAlpha() -> getAlpha
    1:1:int getIntrinsicHeight() -> getIntrinsicHeight
    1:1:int getIntrinsicWidth() -> getIntrinsicWidth
    1:2:float getMinProgressArc(com.dcloud.android.v4.widget.MaterialProgressDrawable$Ring) -> getMinProgressArc
    1:1:float getRotation() -> getRotation
    1:5:boolean isRunning() -> isRunning
    1:1:void setAlpha(int) -> setAlpha
    1:1:void setArrowScale(float) -> setArrowScale
    1:1:void setBackgroundColor(int) -> setBackgroundColor
    1:1:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    1:2:void setColorSchemeColors(int[]) -> setColorSchemeColors
    1:1:void setProgressRotation(float) -> setProgressRotation
    1:2:void setRotation(float) -> setRotation
    1:11:void setSizeParameters(double,double,double,double,float,float) -> setSizeParameters
    1:2:void setStartEndTrim(float,float) -> setStartEndTrim
    1:85:void setupAnimators() -> setupAnimators
    1:1:void showArrow(boolean) -> showArrow
    1:12:void start() -> start
    1:5:void stop() -> stop
    1:3:void updateRingColor(float,com.dcloud.android.v4.widget.MaterialProgressDrawable$Ring) -> updateRingColor
    1:4:void updateSizes(int) -> updateSizes
com.dcloud.android.v4.widget.MaterialProgressDrawable$1 -> com.dcloud.android.v4.widget.MaterialProgressDrawable$1:
    1:1:void <init>(com.dcloud.android.v4.widget.MaterialProgressDrawable,com.dcloud.android.v4.widget.MaterialProgressDrawable$Ring) -> <init>
    1:46:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
com.dcloud.android.v4.widget.MaterialProgressDrawable$2 -> com.dcloud.android.v4.widget.MaterialProgressDrawable$2:
    1:1:void <init>(com.dcloud.android.v4.widget.MaterialProgressDrawable,com.dcloud.android.v4.widget.MaterialProgressDrawable$Ring) -> <init>
    1:11:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    1:1:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
com.dcloud.android.v4.widget.MaterialProgressDrawable$3 -> com.dcloud.android.v4.widget.MaterialProgressDrawable$3:
    1:1:void <init>(com.dcloud.android.v4.widget.MaterialProgressDrawable) -> <init>
    1:1:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    1:1:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    1:1:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
com.dcloud.android.v4.widget.MaterialProgressDrawable$Ring -> com.dcloud.android.v4.widget.MaterialProgressDrawable$Ring:
    1:41:void <init>(android.graphics.drawable.Drawable$Callback) -> <init>
    1:17:void draw(android.graphics.Canvas,android.graphics.Rect) -> draw
    1:31:void drawTriangle(android.graphics.Canvas,float,float,android.graphics.Rect) -> drawTriangle
    1:1:int getAlpha() -> getAlpha
    1:1:double getCenterRadius() -> getCenterRadius
    1:1:float getEndTrim() -> getEndTrim
    1:1:float getInsets() -> getInsets
    1:1:int getNextColor() -> getNextColor
    1:1:int getNextColorIndex() -> getNextColorIndex
    1:1:float getRotation() -> getRotation
    1:1:float getStartTrim() -> getStartTrim
    1:1:int getStartingColor() -> getStartingColor
    1:1:float getStartingEndTrim() -> getStartingEndTrim
    1:1:float getStartingRotation() -> getStartingRotation
    1:1:float getStartingStartTrim() -> getStartingStartTrim
    1:1:float getStrokeWidth() -> getStrokeWidth
    1:1:void goToNextColor() -> goToNextColor
    1:1:void invalidateSelf() -> invalidateSelf
    1:6:void resetOriginals() -> resetOriginals
    1:1:void setAlpha(int) -> setAlpha
    1:2:void setArrowDimensions(float,float) -> setArrowDimensions
    1:3:void setArrowScale(float) -> setArrowScale
    1:1:void setBackgroundColor(int) -> setBackgroundColor
    1:1:void setCenterRadius(double) -> setCenterRadius
    1:1:void setColor(int) -> setColor
    1:2:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    1:2:void setColorIndex(int) -> setColorIndex
    1:3:void setColors(int[]) -> setColors
    1:2:void setEndTrim(float) -> setEndTrim
    1:8:void setInsets(int,int) -> setInsets
    1:2:void setRotation(float) -> setRotation
    1:3:void setShowArrow(boolean) -> setShowArrow
    1:2:void setStartTrim(float) -> setStartTrim
    1:3:void setStrokeWidth(float) -> setStrokeWidth
    1:3:void storeOriginals() -> storeOriginals
com.dcloud.android.v4.widget.ScrollerCompat -> com.dcloud.android.v4.widget.ScrollerCompat:
    1:7:void <clinit>() -> <clinit>
    1:2:void <init>(android.content.Context,android.view.animation.Interpolator) -> <init>
    1:1:void abortAnimation() -> abortAnimation
    1:1:boolean computeScrollOffset() -> computeScrollOffset
    1:1:com.dcloud.android.v4.widget.ScrollerCompat create(android.content.Context) -> create
    2:2:com.dcloud.android.v4.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> create
    1:1:void fling(int,int,int,int,int,int,int,int) -> fling
    2:2:void fling(int,int,int,int,int,int,int,int,int,int) -> fling
    1:1:float getCurrVelocity() -> getCurrVelocity
    1:1:int getCurrX() -> getCurrX
    1:1:int getCurrY() -> getCurrY
    1:1:int getFinalX() -> getFinalX
    1:1:int getFinalY() -> getFinalY
    1:1:boolean isFinished() -> isFinished
    1:1:boolean isOverScrolled() -> isOverScrolled
    1:1:void notifyHorizontalEdgeReached(int,int,int) -> notifyHorizontalEdgeReached
    1:1:void notifyVerticalEdgeReached(int,int,int) -> notifyVerticalEdgeReached
    1:1:void startScroll(int,int,int,int) -> startScroll
    2:2:void startScroll(int,int,int,int,int) -> startScroll
com.dcloud.android.v4.widget.ScrollerCompat$ScrollerCompatImplBase -> com.dcloud.android.v4.widget.ScrollerCompat$ScrollerCompatImplBase:
    1:1:void <init>() -> <init>
    1:1:void abortAnimation(java.lang.Object) -> abortAnimation
    1:1:boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    1:1:java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    1:1:void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    2:2:void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    1:1:int getCurrX(java.lang.Object) -> getCurrX
    1:1:int getCurrY(java.lang.Object) -> getCurrY
    1:1:int getFinalX(java.lang.Object) -> getFinalX
    1:1:int getFinalY(java.lang.Object) -> getFinalY
    1:1:boolean isFinished(java.lang.Object) -> isFinished
    1:1:void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    2:2:void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
com.dcloud.android.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread -> com.dcloud.android.v4.widget.ScrollerCompat$ScrollerCompatImplGingerbread:
    1:1:void <init>() -> <init>
    1:1:void abortAnimation(java.lang.Object) -> abortAnimation
    1:1:boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    1:1:java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    1:1:void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    2:2:void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    1:1:int getCurrX(java.lang.Object) -> getCurrX
    1:1:int getCurrY(java.lang.Object) -> getCurrY
    1:1:int getFinalX(java.lang.Object) -> getFinalX
    1:1:int getFinalY(java.lang.Object) -> getFinalY
    1:1:boolean isFinished(java.lang.Object) -> isFinished
    1:1:boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    1:1:void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    1:1:void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    1:1:void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    2:2:void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
com.dcloud.android.v4.widget.ScrollerCompat$ScrollerCompatImplIcs -> com.dcloud.android.v4.widget.ScrollerCompat$ScrollerCompatImplIcs:
    1:1:void <init>() -> <init>
    1:1:float getCurrVelocity(java.lang.Object) -> getCurrVelocity
com.dcloud.android.v4.widget.ScrollerCompatGingerbread -> com.dcloud.android.v4.widget.ScrollerCompatGingerbread:
    1:1:void <init>() -> <init>
    1:1:void abortAnimation(java.lang.Object) -> abortAnimation
    1:1:boolean computeScrollOffset(java.lang.Object) -> computeScrollOffset
    1:1:java.lang.Object createScroller(android.content.Context,android.view.animation.Interpolator) -> createScroller
    1:1:void fling(java.lang.Object,int,int,int,int,int,int,int,int) -> fling
    2:2:void fling(java.lang.Object,int,int,int,int,int,int,int,int,int,int) -> fling
    1:1:int getCurrX(java.lang.Object) -> getCurrX
    1:1:int getCurrY(java.lang.Object) -> getCurrY
    1:1:int getFinalX(java.lang.Object) -> getFinalX
    1:1:int getFinalY(java.lang.Object) -> getFinalY
    1:1:boolean isFinished(java.lang.Object) -> isFinished
    1:1:boolean isOverScrolled(java.lang.Object) -> isOverScrolled
    1:1:void notifyHorizontalEdgeReached(java.lang.Object,int,int,int) -> notifyHorizontalEdgeReached
    1:1:void notifyVerticalEdgeReached(java.lang.Object,int,int,int) -> notifyVerticalEdgeReached
    1:1:void startScroll(java.lang.Object,int,int,int,int) -> startScroll
    2:2:void startScroll(java.lang.Object,int,int,int,int,int) -> startScroll
com.dcloud.android.v4.widget.ScrollerCompatIcs -> com.dcloud.android.v4.widget.ScrollerCompatIcs:
    1:1:void <init>() -> <init>
    1:1:float getCurrVelocity(java.lang.Object) -> getCurrVelocity
com.dcloud.android.v4.widget.SwipeRefreshLayout -> com.dcloud.android.v4.widget.SwipeRefreshLayout:
    1:61:void <clinit>() -> <clinit>
    1:1178:void <init>(android.content.Context,android.util.AttributeSet,boolean) -> <init>
    1179:1179:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1:1:void access$000(com.dcloud.android.v4.widget.SwipeRefreshLayout) -> access$000
    1:1:boolean access$100(com.dcloud.android.v4.widget.SwipeRefreshLayout) -> access$100
    1:1:int access$1000(com.dcloud.android.v4.widget.SwipeRefreshLayout) -> access$1000
    1:1:int access$1002(com.dcloud.android.v4.widget.SwipeRefreshLayout,int) -> access$1002
    1:1:void access$1100(com.dcloud.android.v4.widget.SwipeRefreshLayout,int,boolean) -> access$1100
    1:1:float access$1200(com.dcloud.android.v4.widget.SwipeRefreshLayout) -> access$1200
    1:1:void access$1300(com.dcloud.android.v4.widget.SwipeRefreshLayout,float) -> access$1300
    1:1:void access$1400(com.dcloud.android.v4.widget.SwipeRefreshLayout,boolean,boolean) -> access$1400
    1:1:boolean access$1500(com.dcloud.android.v4.widget.SwipeRefreshLayout) -> access$1500
    1:1:float access$1600(com.dcloud.android.v4.widget.SwipeRefreshLayout) -> access$1600
    1:1:void access$1700(com.dcloud.android.v4.widget.SwipeRefreshLayout,float) -> access$1700
    1:1:float access$1800(com.dcloud.android.v4.widget.SwipeRefreshLayout) -> access$1800
    1:1:com.dcloud.android.v4.widget.MaterialProgressDrawable access$200(com.dcloud.android.v4.widget.SwipeRefreshLayout) -> access$200
    1:1:boolean access$302(com.dcloud.android.v4.widget.SwipeRefreshLayout,boolean) -> access$302
    1:1:boolean access$400(com.dcloud.android.v4.widget.SwipeRefreshLayout) -> access$400
    1:1:com.dcloud.android.v4.widget.IRefreshAble$OnRefreshListener access$500(com.dcloud.android.v4.widget.SwipeRefreshLayout) -> access$500
    1:1:com.dcloud.android.v4.widget.CircleImageView access$600(com.dcloud.android.v4.widget.SwipeRefreshLayout) -> access$600
    1:1:void access$700(com.dcloud.android.v4.widget.SwipeRefreshLayout,int) -> access$700
    1:1:boolean access$800(com.dcloud.android.v4.widget.SwipeRefreshLayout) -> access$800
    1:1:void access$900(com.dcloud.android.v4.widget.SwipeRefreshLayout,float) -> access$900
    1:9:void animateOffsetToCorrectPosition(int,android.view.animation.Animation$AnimationListener) -> animateOffsetToCorrectPosition
    1:13:void animateOffsetToStartPosition(int,android.view.animation.Animation$AnimationListener) -> animateOffsetToStartPosition
    1:18:void beginRefresh() -> beginRefresh
    1:12:boolean canChildScrollUp() -> canChildScrollUp
    1:25:void cancelRefresh() -> cancelRefresh
    1:6:void createProgressView() -> createProgressView
    1:4:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    1:1:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    1:1:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    1:1:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    1:1:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    1:1:void endRefresh() -> endRefresh
    1:5:void ensureTarget() -> ensureTarget
    1:5:void finishSpinner(float) -> finishSpinner
    1:1:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    1:1:int getNestedScrollAxes() -> getNestedScrollAxes
    1:1:int getProgressCircleDiameter() -> getProgressCircleDiameter
    1:10:boolean handleTouchEvent(android.view.MotionEvent) -> handleTouchEvent
    1:1:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    1:1:boolean hasRefreshOperator() -> hasRefreshOperator
    1:1:boolean isAlphaUsedForScale() -> isAlphaUsedForScale
    1:1:boolean isAnimationRunning(android.view.animation.Animation) -> isAnimationRunning
    1:3:boolean isDrawAble() -> isDrawAble
    1:1:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    1:1:boolean isRefreshEnable() -> isRefreshEnable
    1:1:boolean isRefreshing() -> isRefreshing
    1:53:void moveSpinner(float) -> moveSpinner
    1:3:void moveToStart(float) -> moveToStart
    1:6:void onInit(android.view.ViewGroup,android.view.View,com.dcloud.android.v4.widget.IRefreshAble$OnRefreshListener) -> onInit
    1:17:void onLayout(boolean,int,int,int,int) -> onLayout
    1:24:void onMeasure(int,int) -> onMeasure
    1:17:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    1:6:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    1:2:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    1:1:void onResize(int,int,float) -> onResize
    1:13:void onSelfDraw(android.graphics.Canvas) -> onSelfDraw
    1:118:boolean onSelfTouchEvent(android.view.MotionEvent) -> onSelfTouchEvent
    1:3:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    1:9:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    1:2:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1:6:void parentInvalidate() -> parentInvalidate
    1:42:void parseData(org.json.JSONObject,int,int,float) -> parseData
    1:9:void peek(int,android.view.animation.Animation$AnimationListener) -> peek
    1:5:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    1:5:void setAnimationProgress(float) -> setAnimationProgress
    1:1:void setColorScheme(int[]) -> setColorScheme
    1:2:void setColorSchemeColors(int[]) -> setColorSchemeColors
    1:6:void setColorSchemeResources(int[]) -> setColorSchemeResources
    1:2:void setColorViewAlpha(int) -> setColorViewAlpha
    1:1:void setDistanceToTriggerSync(int) -> setDistanceToTriggerSync
    1:1:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    1:1:void setOnRefreshListener(com.dcloud.android.v4.widget.IRefreshAble$OnRefreshListener) -> setOnRefreshListener
    1:1:void setProgressBackgroundColor(int) -> setProgressBackgroundColor
    1:2:void setProgressBackgroundColorSchemeColor(int) -> setProgressBackgroundColorSchemeColor
    1:1:void setProgressBackgroundColorSchemeResource(int) -> setProgressBackgroundColorSchemeResource
    1:3:void setProgressViewEndTarget(boolean,int) -> setProgressViewEndTarget
    1:7:void setProgressViewOffset(boolean,int,int,int) -> setProgressViewOffset
    1:1:void setRefreshEnable(boolean) -> setRefreshEnable
    1:15:void setRefreshing(boolean) -> setRefreshing
    16:23:void setRefreshing(boolean,boolean) -> setRefreshing
    1:12:void setSize(int) -> setSize
    1:5:void setTargetOffsetTopAndBottom(int,boolean) -> setTargetOffsetTopAndBottom
    1:16:android.view.animation.Animation startAlphaAnimation(int,int) -> startAlphaAnimation
    1:1:boolean startNestedScroll(int) -> startNestedScroll
    1:1:void startProgressAlphaMaxAnimation() -> startProgressAlphaMaxAnimation
    1:1:void startProgressAlphaStartAnimation() -> startProgressAlphaStartAnimation
    1:10:void startScaleDownAnimation(android.view.animation.Animation$AnimationListener) -> startScaleDownAnimation
    1:20:void startScaleDownReturnToStartAnimation(int,android.view.animation.Animation$AnimationListener) -> startScaleDownReturnToStartAnimation
    1:19:void startScaleUpAnimation(android.view.animation.Animation$AnimationListener) -> startScaleUpAnimation
    1:1:void stopNestedScroll() -> stopNestedScroll
com.dcloud.android.v4.widget.SwipeRefreshLayout$1 -> com.dcloud.android.v4.widget.SwipeRefreshLayout$1:
    1:1:void <init>(com.dcloud.android.v4.widget.SwipeRefreshLayout) -> <init>
    1:24:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    1:1:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
com.dcloud.android.v4.widget.SwipeRefreshLayout$10 -> com.dcloud.android.v4.widget.SwipeRefreshLayout$10:
    1:1:void <init>(com.dcloud.android.v4.widget.SwipeRefreshLayout) -> <init>
    1:3:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
com.dcloud.android.v4.widget.SwipeRefreshLayout$2 -> com.dcloud.android.v4.widget.SwipeRefreshLayout$2:
    1:1:void <init>(com.dcloud.android.v4.widget.SwipeRefreshLayout) -> <init>
    1:1:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
com.dcloud.android.v4.widget.SwipeRefreshLayout$3 -> com.dcloud.android.v4.widget.SwipeRefreshLayout$3:
    1:1:void <init>(com.dcloud.android.v4.widget.SwipeRefreshLayout) -> <init>
    1:1:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
com.dcloud.android.v4.widget.SwipeRefreshLayout$4 -> com.dcloud.android.v4.widget.SwipeRefreshLayout$4:
    1:1:void <init>(com.dcloud.android.v4.widget.SwipeRefreshLayout,int,int) -> <init>
    1:2:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
com.dcloud.android.v4.widget.SwipeRefreshLayout$5 -> com.dcloud.android.v4.widget.SwipeRefreshLayout$5:
    1:2:void <init>(com.dcloud.android.v4.widget.SwipeRefreshLayout) -> <init>
    1:7:void run() -> run
com.dcloud.android.v4.widget.SwipeRefreshLayout$6 -> com.dcloud.android.v4.widget.SwipeRefreshLayout$6:
    1:1:void <init>(com.dcloud.android.v4.widget.SwipeRefreshLayout) -> <init>
    1:2:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.dcloud.android.v4.widget.SwipeRefreshLayout$7 -> com.dcloud.android.v4.widget.SwipeRefreshLayout$7:
    1:1:void <init>(com.dcloud.android.v4.widget.SwipeRefreshLayout) -> <init>
    1:9:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
com.dcloud.android.v4.widget.SwipeRefreshLayout$8 -> com.dcloud.android.v4.widget.SwipeRefreshLayout$8:
    1:1:void <init>(com.dcloud.android.v4.widget.SwipeRefreshLayout) -> <init>
    1:9:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
com.dcloud.android.v4.widget.SwipeRefreshLayout$9 -> com.dcloud.android.v4.widget.SwipeRefreshLayout$9:
    1:1:void <init>(com.dcloud.android.v4.widget.SwipeRefreshLayout) -> <init>
    1:1:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
com.dcloud.android.widget.AbsoluteLayout -> com.dcloud.android.widget.AbsoluteLayout:
    1:37:void <init>(android.content.Context,io.dcloud.common.adapter.ui.AdaFrameView,io.dcloud.common.DHInterface.IApp) -> <init>
    1:1:void access$000(com.dcloud.android.widget.AbsoluteLayout,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> access$000
    1:1:void access$100(com.dcloud.android.widget.AbsoluteLayout,io.dcloud.common.DHInterface.IWebview,java.lang.String,int,int,int,int,int,int,int,int,int) -> access$100
    1:29:void animate(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String) -> animate
    1:16:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    1:24:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    1:17:void doClickEvent(android.view.MotionEvent) -> doClickEvent
    1:2:void endAnimatecallback(io.dcloud.common.DHInterface.IWebview,java.lang.String) -> endAnimatecallback
    1:1:io.dcloud.common.core.ui.g getDrag() -> getDrag
    1:1:io.dcloud.common.adapter.ui.AdaFrameView getFrameView() -> getFrameView
    1:4:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    1:6:void onDraw(android.graphics.Canvas) -> onDraw
    1:3:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1:7:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1:3:void restore() -> restore
    1:16:void runDrawRectF(io.dcloud.common.DHInterface.IWebview,java.lang.String,int,int,int,int,int,int,int,int,int) -> runDrawRectF
    1:4:java.lang.String toString() -> toString
com.dcloud.android.widget.AbsoluteLayout$1 -> com.dcloud.android.widget.AbsoluteLayout$1:
    1:1:void <init>(com.dcloud.android.widget.AbsoluteLayout) -> <init>
    1:1:void onStateChanged(java.lang.String,java.lang.String) -> onStateChanged
com.dcloud.android.widget.AbsoluteLayout$2 -> com.dcloud.android.widget.AbsoluteLayout$2:
    1:1:void <init>(com.dcloud.android.widget.AbsoluteLayout,int,int,io.dcloud.common.DHInterface.IWebview,java.lang.String,int,int,int,int,int,int,int) -> <init>
    1:6:void run() -> run
com.dcloud.android.widget.CapsuleLayout -> com.dcloud.android.widget.CapsuleLayout:
    1:18:void <init>(android.content.Context,float) -> <init>
    1:9:void addButtonView(android.view.View,android.widget.LinearLayout$LayoutParams,com.dcloud.android.widget.CapsuleLayout$ButtonType,android.view.View$OnClickListener) -> addButtonView
    1:5:void addIntervalView(float) -> addIntervalView
    1:21:int checkColorToStyle(int) -> checkColorToStyle
    1:82:void initButtonBackground(android.view.View,com.dcloud.android.widget.CapsuleLayout$ButtonType) -> initButtonBackground
    1:2:void removeAllViews() -> removeAllViews
    1:2:void setAngle(float) -> setAngle
    1:2:void setBackground(android.graphics.drawable.Drawable) -> setBackground
    1:2:void setBackgroundColor(int) -> setBackgroundColor
    1:3:void setButtonSelectColor(android.view.View,com.dcloud.android.widget.CapsuleLayout$ButtonType,int) -> setButtonSelectColor
    1:4:void setRoundColor(int,int,int) -> setRoundColor
    5:6:void setRoundColor(int) -> setRoundColor
    1:12:void updateBackground() -> updateBackground
    1:2:void updateIntervalColor() -> updateIntervalColor
com.dcloud.android.widget.CapsuleLayout$1 -> com.dcloud.android.widget.CapsuleLayout$1:
    1:1:void <clinit>() -> <clinit>
com.dcloud.android.widget.CapsuleLayout$ButtonType -> com.dcloud.android.widget.CapsuleLayout$ButtonType:
    1:4:void <clinit>() -> <clinit>
    1:1:void <init>(java.lang.String,int) -> <init>
    1:1:com.dcloud.android.widget.CapsuleLayout$ButtonType valueOf(java.lang.String) -> valueOf
    1:1:com.dcloud.android.widget.CapsuleLayout$ButtonType[] values() -> values
com.dcloud.android.widget.CapsuleLayout$CapsuleDrawable -> com.dcloud.android.widget.CapsuleLayout$CapsuleDrawable:
    1:1:void <init>(com.dcloud.android.widget.CapsuleLayout) -> <init>
    2:2:void <init>(com.dcloud.android.widget.CapsuleLayout,com.dcloud.android.widget.CapsuleLayout$1) -> <init>
com.dcloud.android.widget.DCProgressView -> com.dcloud.android.widget.DCProgressView:
    1:8:void <init>(android.content.Context) -> <init>
    1:1:void fadeDisappear() -> fadeDisappear
    1:1:void finishProgress() -> finishProgress
    1:1:float getHeightInt() -> getHeightInt
    1:1:boolean isFinish() -> isFinish
    1:3:void onDraw(android.graphics.Canvas) -> onDraw
    1:1:void setAlphaInt(int) -> setAlphaInt
    1:1:void setColorInt(int) -> setColorInt
    1:1:void setCurProgress(int) -> setCurProgress
    1:1:void setHeightInt(int) -> setHeightInt
    1:1:void setMaxProgress(int) -> setMaxProgress
    1:1:void setWebviewProgress(int) -> setWebviewProgress
    1:22:void updateProgress(int) -> updateProgress
com.dcloud.android.widget.DCProgressView$1 -> com.dcloud.android.widget.DCProgressView$1:
    1:1:void <init>(com.dcloud.android.widget.DCProgressView) -> <init>
    1:10:void run() -> run
com.dcloud.android.widget.DCProgressView$2 -> com.dcloud.android.widget.DCProgressView$2:
    1:1:void <init>(com.dcloud.android.widget.DCProgressView) -> <init>
    1:13:void run() -> run
com.dcloud.android.widget.DCWebViewProgressBar -> com.dcloud.android.widget.DCWebViewProgressBar:
    1:8:void <init>(android.content.Context) -> <init>
    1:1:io.dcloud.nineoldandroids.animation.ObjectAnimator access$000(com.dcloud.android.widget.DCWebViewProgressBar,int,int,android.view.animation.Interpolator,io.dcloud.nineoldandroids.animation.AnimatorListenerAdapter) -> access$000
    1:1:void access$100(com.dcloud.android.widget.DCWebViewProgressBar) -> access$100
    1:17:void finishProgress() -> finishProgress
    1:5:io.dcloud.nineoldandroids.animation.ObjectAnimator getProgressAnimation(int,int,android.view.animation.Interpolator,io.dcloud.nineoldandroids.animation.AnimatorListenerAdapter) -> getProgressAnimation
    1:1:void setAlphaInt(int) -> setAlphaInt
    1:14:void setColorInt(int) -> setColorInt
    1:11:void startDismissAnimation() -> startDismissAnimation
    1:24:void startProgress() -> startProgress
com.dcloud.android.widget.DCWebViewProgressBar$1 -> com.dcloud.android.widget.DCWebViewProgressBar$1:
    1:1:void <init>(com.dcloud.android.widget.DCWebViewProgressBar,android.view.animation.Interpolator) -> <init>
    1:13:void onAnimationEnd(io.dcloud.nineoldandroids.animation.Animator) -> onAnimationEnd
com.dcloud.android.widget.DCWebViewProgressBar$1$1 -> com.dcloud.android.widget.DCWebViewProgressBar$1$1:
    1:1:void <init>(com.dcloud.android.widget.DCWebViewProgressBar$1) -> <init>
    1:4:void onAnimationEnd(io.dcloud.nineoldandroids.animation.Animator) -> onAnimationEnd
com.dcloud.android.widget.DCWebViewProgressBar$2 -> com.dcloud.android.widget.DCWebViewProgressBar$2:
    1:1:void <init>(com.dcloud.android.widget.DCWebViewProgressBar) -> <init>
    1:3:void onAnimationEnd(io.dcloud.nineoldandroids.animation.Animator) -> onAnimationEnd
com.dcloud.android.widget.DCWebViewProgressBar$3 -> com.dcloud.android.widget.DCWebViewProgressBar$3:
    1:1:void <init>(com.dcloud.android.widget.DCWebViewProgressBar) -> <init>
    1:1:void onAnimationEnd(io.dcloud.nineoldandroids.animation.Animator) -> onAnimationEnd
com.dcloud.android.widget.RoundAngleImageView -> com.dcloud.android.widget.RoundAngleImageView:
    1:3:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1:9:void onDraw(android.graphics.Canvas) -> onDraw
com.dcloud.android.widget.SlideLayout -> com.dcloud.android.widget.SlideLayout:
    1:50:void <init>(android.content.Context) -> <init>
    1:1:com.dcloud.android.widget.SlideLayout$OnStateChangeListener access$000(com.dcloud.android.widget.SlideLayout) -> access$000
    1:4:void clearChildrenCache() -> clearChildrenCache
    1:9:void computeScroll() -> computeScroll
    1:4:void enableChildrenCache() -> enableChildrenCache
    1:24:void initSlideInfo(org.json.JSONObject,float,int) -> initSlideInfo
    1:53:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1:211:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1:9:void reset() -> reset
    1:4:void setHeight(int) -> setHeight
    1:1:void setInterceptTouchEventEnabled(boolean) -> setInterceptTouchEventEnabled
    1:37:void setOffset(java.lang.String,java.lang.String,float) -> setOffset
    1:1:void setOnStateChangeListener(com.dcloud.android.widget.SlideLayout$OnStateChangeListener) -> setOnStateChangeListener
    1:2:void setState(java.lang.String,java.lang.String) -> setState
    1:4:void setWidth(int) -> setWidth
    1:4:void smoothScrollTo(int,int) -> smoothScrollTo
    1:19:void upSlideTo(int) -> upSlideTo
com.dcloud.android.widget.SlideLayout$1 -> com.dcloud.android.widget.SlideLayout$1:
    1:1:void <init>(com.dcloud.android.widget.SlideLayout,java.lang.String,java.lang.String) -> <init>
    1:1:void run() -> run
com.dcloud.android.widget.SlideLayout$2 -> com.dcloud.android.widget.SlideLayout$2:
    1:1:void <init>(com.dcloud.android.widget.SlideLayout) -> <init>
    1:1:void run() -> run
com.dcloud.android.widget.SlideLayout$3 -> com.dcloud.android.widget.SlideLayout$3:
    1:1:void <init>(com.dcloud.android.widget.SlideLayout) -> <init>
    1:1:void run() -> run
com.dcloud.android.widget.StatusBarView -> com.dcloud.android.widget.StatusBarView:
    1:4:void <init>(android.content.Context) -> <init>
    1:4:void setStatusBarHeight(int) -> setStatusBarHeight
com.dcloud.android.widget.TabView -> com.dcloud.android.widget.TabView:
    1:784:void <init>(android.content.Context,com.alibaba.fastjson.JSONObject,float,io.dcloud.common.DHInterface.IApp) -> <init>
    1:1:com.alibaba.fastjson.JSONObject access$000(com.dcloud.android.widget.TabView) -> access$000
    1:1:com.alibaba.fastjson.JSONArray access$100(com.dcloud.android.widget.TabView) -> access$100
    1:1:android.widget.LinearLayout access$200(com.dcloud.android.widget.TabView) -> access$200
    1:1:io.dcloud.common.DHInterface.ICallBack access$300(com.dcloud.android.widget.TabView) -> access$300
    1:1:int access$400(com.dcloud.android.widget.TabView,int) -> access$400
    1:1:io.dcloud.common.DHInterface.ICallBack access$500(com.dcloud.android.widget.TabView) -> access$500
    1:1:io.dcloud.common.DHInterface.ICallBack access$600(com.dcloud.android.widget.TabView) -> access$600
    1:1:java.lang.String access$700(com.dcloud.android.widget.TabView,java.lang.String) -> access$700
    1:2:void bringMaskToFront() -> bringMaskToFront
    1:5:int commonIndex2ViewIndex(int) -> commonIndex2ViewIndex
    1:9:android.view.ViewGroup getCommonItemByIndex(int) -> getCommonItemByIndex
    1:13:java.lang.String getIconPath(java.lang.String) -> getIconPath
    1:4:int getMidHeight() -> getMidHeight
    1:1:int getTabHeight() -> getTabHeight
    1:1:java.lang.String getTabHeightStr() -> getTabHeightStr
    1:6:void hideTabBarRedDot(com.alibaba.fastjson.JSONObject) -> hideTabBarRedDot
    1:10:void initTabItemStyle() -> initTabItemStyle
    1:14:void initTabStyle() -> initTabStyle
    1:4:int optColor(java.lang.String,java.lang.String) -> optColor
    1:4:void placeholder(java.lang.String,android.widget.ImageView) -> placeholder
    1:6:void removeTabBarBadge(com.alibaba.fastjson.JSONObject) -> removeTabBarBadge
    1:18:void setCommonItemJson(int,java.lang.String,java.lang.String,java.lang.String,boolean) -> setCommonItemJson
    1:87:void setCommonItemStyle(int,com.alibaba.fastjson.JSONObject) -> setCommonItemStyle
    1:34:void setDotBadgeMarginTop(android.view.ViewGroup,android.view.View) -> setDotBadgeMarginTop
    1:1:void setDoubleCallbackListener(io.dcloud.common.DHInterface.ICallBack) -> setDoubleCallbackListener
    1:13:void setMask(com.alibaba.fastjson.JSONObject) -> setMask
    1:1:void setMaskCallbackListener(io.dcloud.common.DHInterface.ICallBack) -> setMaskCallbackListener
    1:1:void setMidCallbackListener(io.dcloud.common.DHInterface.ICallBack) -> setMidCallbackListener
    1:46:void setMidItemStyle(boolean) -> setMidItemStyle
    1:41:void setSelectedStyle() -> setSelectedStyle
    1:1:void setSingleCallbackListener(io.dcloud.common.DHInterface.ICallBack) -> setSingleCallbackListener
    1:12:void setTabBarBadge(com.alibaba.fastjson.JSONObject) -> setTabBarBadge
    1:10:void setTabBarItem(com.alibaba.fastjson.JSONObject) -> setTabBarItem
    1:45:void setTabBarStyle(com.alibaba.fastjson.JSONObject) -> setTabBarStyle
    1:6:void setTabItemStyle() -> setTabItemStyle
    1:10:void showTabBarRedDot(com.alibaba.fastjson.JSONObject) -> showTabBarRedDot
    1:2:void switchTab(int) -> switchTab
    1:5:int viewIndex2CommonIndex(int) -> viewIndex2CommonIndex
com.dcloud.android.widget.TabView$1 -> com.dcloud.android.widget.TabView$1:
    1:1:void <init>(com.dcloud.android.widget.TabView,android.widget.ImageView) -> <init>
    1:4:void onAnimationCompleted(int) -> onAnimationCompleted
com.dcloud.android.widget.TabView$2 -> com.dcloud.android.widget.TabView$2:
    1:4:void <init>(com.dcloud.android.widget.TabView) -> <init>
    1:57:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.dcloud.android.widget.TabView$3 -> com.dcloud.android.widget.TabView$3:
    1:1:void <init>(com.dcloud.android.widget.TabView) -> <init>
    1:5:void onClick(android.view.View) -> onClick
com.dcloud.android.widget.TabView$4 -> com.dcloud.android.widget.TabView$4:
    1:1:void <init>(com.dcloud.android.widget.TabView) -> <init>
    1:2:void onClick(android.view.View) -> onClick
com.dcloud.android.widget.TabView$BackGroundDrawable -> com.dcloud.android.widget.TabView$BackGroundDrawable:
    1:187:void <init>(com.dcloud.android.widget.TabView) -> <init>
    1:21:void draw(android.graphics.Canvas) -> draw
    1:3:android.graphics.Paint getBackgroundColorPaint() -> getBackgroundColorPaint
    1:3:android.graphics.Paint getPaint() -> getPaint
    1:5:android.graphics.Shader getShader(java.util.List,float,float) -> getShader
    1:48:float[] parseGradientDirection(java.lang.String,float,float) -> parseGradientDirection
    1:27:java.util.List parseGradientValues(java.lang.String) -> parseGradientValues
    1:16:android.graphics.Bitmap scaleBitmap(android.graphics.Bitmap,int,int) -> scaleBitmap
    1:3:void setAlpha(int) -> setAlpha
    1:6:void setBackgroundColor(int) -> setBackgroundColor
    1:48:void setBackgroundImage(java.lang.String) -> setBackgroundImage
    1:4:void setBackgroundRepeat(java.lang.String,java.lang.String) -> setBackgroundRepeat
com.dcloud.android.widget.TextViewButton -> com.dcloud.android.widget.TextViewButton:
    1:1:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1:7:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.dcloud.android.widget.photoview.Compat -> com.dcloud.android.widget.photoview.Compat:
    1:1:void <init>() -> <init>
    1:4:void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    1:1:void postOnAnimationJellyBean(android.view.View,java.lang.Runnable) -> postOnAnimationJellyBean
com.dcloud.android.widget.photoview.CustomGestureDetector -> com.dcloud.android.widget.photoview.CustomGestureDetector:
    1:45:void <init>(android.content.Context,com.dcloud.android.widget.photoview.OnGestureListener) -> <init>
    1:1:com.dcloud.android.widget.photoview.OnGestureListener access$000(com.dcloud.android.widget.photoview.CustomGestureDetector) -> access$000
    1:3:float getActiveX(android.view.MotionEvent) -> getActiveX
    1:3:float getActiveY(android.view.MotionEvent) -> getActiveY
    1:1:boolean isDragging() -> isDragging
    1:1:boolean isScaling() -> isScaling
    1:2:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1:227:boolean processTouchEvent(android.view.MotionEvent) -> processTouchEvent
com.dcloud.android.widget.photoview.CustomGestureDetector$1 -> com.dcloud.android.widget.photoview.CustomGestureDetector$1:
    1:1:void <init>(com.dcloud.android.widget.photoview.CustomGestureDetector) -> <init>
    1:8:boolean onScale(android.view.ScaleGestureDetector) -> onScale
com.dcloud.android.widget.photoview.PhotoView -> com.dcloud.android.widget.photoview.PhotoView:
    1:1:void <init>(android.content.Context) -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    3:4:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    5:6:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1:1:com.dcloud.android.widget.photoview.PhotoViewAttacher getAttacher() -> getAttacher
    1:1:void getDisplayMatrix(android.graphics.Matrix) -> getDisplayMatrix
    1:1:android.graphics.RectF getDisplayRect() -> getDisplayRect
    1:1:android.graphics.Matrix getImageMatrix() -> getImageMatrix
    1:1:float getMaximumScale() -> getMaximumScale
    1:1:float getMediumScale() -> getMediumScale
    1:1:float getMinimumScale() -> getMinimumScale
    1:1:float getScale() -> getScale
    1:1:android.widget.ImageView$ScaleType getScaleType() -> getScaleType
    1:4:void init() -> init
    1:1:boolean isZoomEnabled() -> isZoomEnabled
    1:1:void setAllowParentInterceptOnEdge(boolean) -> setAllowParentInterceptOnEdge
    1:1:boolean setDisplayMatrix(android.graphics.Matrix) -> setDisplayMatrix
    1:3:boolean setFrame(int,int,int,int) -> setFrame
    1:4:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    1:3:void setImageResource(int) -> setImageResource
    1:3:void setImageURI(android.net.Uri) -> setImageURI
    1:1:void setMaximumScale(float) -> setMaximumScale
    1:1:void setMediumScale(float) -> setMediumScale
    1:1:void setMinimumScale(float) -> setMinimumScale
    1:1:void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    1:1:void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
    1:1:void setOnLongClickListener(android.view.View$OnLongClickListener) -> setOnLongClickListener
    1:1:void setOnMatrixChangeListener(com.dcloud.android.widget.photoview.OnMatrixChangedListener) -> setOnMatrixChangeListener
    1:1:void setOnOutsidePhotoTapListener(com.dcloud.android.widget.photoview.OnOutsidePhotoTapListener) -> setOnOutsidePhotoTapListener
    1:1:void setOnPhotoTapListener(com.dcloud.android.widget.photoview.OnPhotoTapListener) -> setOnPhotoTapListener
    1:1:void setOnScaleChangeListener(com.dcloud.android.widget.photoview.OnScaleChangedListener) -> setOnScaleChangeListener
    1:1:void setOnSingleFlingListener(com.dcloud.android.widget.photoview.OnSingleFlingListener) -> setOnSingleFlingListener
    1:1:void setRotationBy(float) -> setRotationBy
    1:1:void setRotationTo(float) -> setRotationTo
    1:1:void setScale(float) -> setScale
    2:2:void setScale(float,boolean) -> setScale
    3:3:void setScale(float,float,float,boolean) -> setScale
    1:1:void setScaleLevels(float,float,float) -> setScaleLevels
    1:2:void setScaleType(android.widget.ImageView$ScaleType) -> setScaleType
    1:1:void setZoomTransitionDuration(int) -> setZoomTransitionDuration
    1:1:void setZoomable(boolean) -> setZoomable
com.dcloud.android.widget.photoview.PhotoViewAttacher -> com.dcloud.android.widget.photoview.PhotoViewAttacher:
    1:83:void <init>(android.widget.ImageView) -> <init>
    1:1:android.view.View$OnLongClickListener access$000(com.dcloud.android.widget.photoview.PhotoViewAttacher) -> access$000
    1:1:android.widget.ImageView access$100(com.dcloud.android.widget.photoview.PhotoViewAttacher) -> access$100
    1:1:android.graphics.Matrix access$1000(com.dcloud.android.widget.photoview.PhotoViewAttacher) -> access$1000
    1:1:android.graphics.Matrix access$1100(com.dcloud.android.widget.photoview.PhotoViewAttacher) -> access$1100
    1:1:void access$1200(com.dcloud.android.widget.photoview.PhotoViewAttacher,android.graphics.Matrix) -> access$1200
    1:1:com.dcloud.android.widget.photoview.OnSingleFlingListener access$200(com.dcloud.android.widget.photoview.PhotoViewAttacher) -> access$200
    1:1:float access$300() -> access$300
    1:1:int access$400() -> access$400
    1:1:android.view.View$OnClickListener access$500(com.dcloud.android.widget.photoview.PhotoViewAttacher) -> access$500
    1:1:com.dcloud.android.widget.photoview.OnPhotoTapListener access$600(com.dcloud.android.widget.photoview.PhotoViewAttacher) -> access$600
    1:1:com.dcloud.android.widget.photoview.OnOutsidePhotoTapListener access$700(com.dcloud.android.widget.photoview.PhotoViewAttacher) -> access$700
    1:1:int access$800(com.dcloud.android.widget.photoview.PhotoViewAttacher) -> access$800
    1:1:android.view.animation.Interpolator access$900(com.dcloud.android.widget.photoview.PhotoViewAttacher) -> access$900
    1:3:void cancelFling() -> cancelFling
    1:2:void checkAndDisplayMatrix() -> checkAndDisplayMatrix
    1:69:boolean checkMatrixBounds() -> checkMatrixBounds
    1:1:void getDisplayMatrix(android.graphics.Matrix) -> getDisplayMatrix
    1:2:android.graphics.RectF getDisplayRect() -> getDisplayRect
    3:10:android.graphics.RectF getDisplayRect(android.graphics.Matrix) -> getDisplayRect
    1:3:android.graphics.Matrix getDrawMatrix() -> getDrawMatrix
    1:1:android.graphics.Matrix getImageMatrix() -> getImageMatrix
    1:1:int getImageViewHeight(android.widget.ImageView) -> getImageViewHeight
    1:1:int getImageViewWidth(android.widget.ImageView) -> getImageViewWidth
    1:1:float getMaximumScale() -> getMaximumScale
    1:1:float getMediumScale() -> getMediumScale
    1:1:float getMinimumScale() -> getMinimumScale
    1:1:float getScale() -> getScale
    1:1:android.widget.ImageView$ScaleType getScaleType() -> getScaleType
    1:1:void getSuppMatrix(android.graphics.Matrix) -> getSuppMatrix
    1:2:float getValue(android.graphics.Matrix,int) -> getValue
    1:1:boolean isZoomEnabled() -> isZoomEnabled
    1:28:void onDrag(float,float) -> onDrag
    1:6:void onFling(float,float,float,float) -> onFling
    1:1:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
    1:6:void onScale(float,float,float) -> onScale
    1:67:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    1:4:void resetMatrix() -> resetMatrix
    1:1:void setAllowParentInterceptOnEdge(boolean) -> setAllowParentInterceptOnEdge
    1:4:void setBaseRotation(float) -> setBaseRotation
    1:8:boolean setDisplayMatrix(android.graphics.Matrix) -> setDisplayMatrix
    1:7:void setImageViewMatrix(android.graphics.Matrix) -> setImageViewMatrix
    1:2:void setMaximumScale(float) -> setMaximumScale
    1:2:void setMediumScale(float) -> setMediumScale
    1:2:void setMinimumScale(float) -> setMinimumScale
    1:1:void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    1:1:void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
    1:1:void setOnLongClickListener(android.view.View$OnLongClickListener) -> setOnLongClickListener
    1:1:void setOnMatrixChangeListener(com.dcloud.android.widget.photoview.OnMatrixChangedListener) -> setOnMatrixChangeListener
    1:1:void setOnOutsidePhotoTapListener(com.dcloud.android.widget.photoview.OnOutsidePhotoTapListener) -> setOnOutsidePhotoTapListener
    1:1:void setOnPhotoTapListener(com.dcloud.android.widget.photoview.OnPhotoTapListener) -> setOnPhotoTapListener
    1:1:void setOnScaleChangeListener(com.dcloud.android.widget.photoview.OnScaleChangedListener) -> setOnScaleChangeListener
    1:1:void setOnSingleFlingListener(com.dcloud.android.widget.photoview.OnSingleFlingListener) -> setOnSingleFlingListener
    1:2:void setRotationBy(float) -> setRotationBy
    1:2:void setRotationTo(float) -> setRotationTo
    1:1:void setScale(float) -> setScale
    2:5:void setScale(float,boolean) -> setScale
    6:16:void setScale(float,float,float,boolean) -> setScale
    1:4:void setScaleLevels(float,float,float) -> setScaleLevels
    1:3:void setScaleType(android.widget.ImageView$ScaleType) -> setScaleType
    1:1:void setZoomInterpolator(android.view.animation.Interpolator) -> setZoomInterpolator
    1:1:void setZoomTransitionDuration(int) -> setZoomTransitionDuration
    1:2:void setZoomable(boolean) -> setZoomable
    1:6:void update() -> update
    1:72:void updateBaseMatrix(android.graphics.drawable.Drawable) -> updateBaseMatrix
com.dcloud.android.widget.photoview.PhotoViewAttacher$1 -> com.dcloud.android.widget.photoview.PhotoViewAttacher$1:
    1:1:void <init>(com.dcloud.android.widget.photoview.PhotoViewAttacher) -> <init>
    1:11:boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    1:2:void onLongPress(android.view.MotionEvent) -> onLongPress
com.dcloud.android.widget.photoview.PhotoViewAttacher$2 -> com.dcloud.android.widget.photoview.PhotoViewAttacher$2:
    1:1:void <init>(com.dcloud.android.widget.photoview.PhotoViewAttacher) -> <init>
    1:10:boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    1:23:boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
com.dcloud.android.widget.photoview.PhotoViewAttacher$3 -> com.dcloud.android.widget.photoview.PhotoViewAttacher$3:
    1:1:void <clinit>() -> <clinit>
com.dcloud.android.widget.photoview.PhotoViewAttacher$AnimatedZoomRunnable -> com.dcloud.android.widget.photoview.PhotoViewAttacher$AnimatedZoomRunnable:
    1:6:void <init>(com.dcloud.android.widget.photoview.PhotoViewAttacher,float,float,float,float) -> <init>
    1:3:float interpolate() -> interpolate
    1:9:void run() -> run
com.dcloud.android.widget.photoview.PhotoViewAttacher$FlingRunnable -> com.dcloud.android.widget.photoview.PhotoViewAttacher$FlingRunnable:
    1:2:void <init>(com.dcloud.android.widget.photoview.PhotoViewAttacher,android.content.Context) -> <init>
    1:1:void cancelFling() -> cancelFling
    1:29:void fling(int,int,int,int) -> fling
    1:17:void run() -> run
com.dcloud.android.widget.photoview.Util -> com.dcloud.android.widget.photoview.Util:
    1:1:void <init>() -> <init>
    1:2:void checkZoomLevels(float,float,float) -> checkZoomLevels
    1:1:boolean hasDrawable(android.widget.ImageView) -> hasDrawable
    1:3:boolean isSupportedScaleType(android.widget.ImageView$ScaleType) -> isSupportedScaleType
com.dcloud.android.widget.photoview.Util$1 -> com.dcloud.android.widget.photoview.Util$1:
    1:1:void <clinit>() -> <clinit>
com.dcloud.android.widget.toast.SafeToastContext -> com.dcloud.android.widget.toast.SafeToastContext:
    1:1:void <init>(android.content.Context) -> <init>
    1:1:android.content.Context getApplicationContext() -> getApplicationContext
com.dcloud.android.widget.toast.SafeToastContext$ApplicationContextWrapper -> com.dcloud.android.widget.toast.SafeToastContext$ApplicationContextWrapper:
    1:1:void <init>(com.dcloud.android.widget.toast.SafeToastContext,android.content.Context,com.dcloud.android.widget.toast.SafeToastContext$1) -> <init>
    2:3:void <init>(com.dcloud.android.widget.toast.SafeToastContext,android.content.Context) -> <init>
    1:5:java.lang.Object getSystemService(java.lang.String) -> getSystemService
com.dcloud.android.widget.toast.SafeToastContext$WindowManagerWrapper -> com.dcloud.android.widget.toast.SafeToastContext$WindowManagerWrapper:
    1:1:void <init>(com.dcloud.android.widget.toast.SafeToastContext,android.view.WindowManager,com.dcloud.android.widget.toast.SafeToastContext$1) -> <init>
    2:3:void <init>(com.dcloud.android.widget.toast.SafeToastContext,android.view.WindowManager) -> <init>
    1:6:void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    1:1:android.view.Display getDefaultDisplay() -> getDefaultDisplay
    1:1:void removeView(android.view.View) -> removeView
    1:1:void removeViewImmediate(android.view.View) -> removeViewImmediate
    1:1:void updateViewLayout(android.view.View,android.view.ViewGroup$LayoutParams) -> updateViewLayout
com.dcloud.android.widget.toast.ToastCompat -> com.dcloud.android.widget.toast.ToastCompat:
    1:2:void <init>(android.content.Context) -> <init>
    3:4:void <init>(android.content.Context,android.widget.Toast) -> <init>
    1:1:android.widget.Toast getBaseToast() -> getBaseToast
    1:1:int getDuration() -> getDuration
    1:1:int getGravity() -> getGravity
    1:1:float getHorizontalMargin() -> getHorizontalMargin
    1:1:float getVerticalMargin() -> getVerticalMargin
    1:1:android.view.View getView() -> getView
    1:1:int getXOffset() -> getXOffset
    1:1:int getYOffset() -> getYOffset
    1:3:com.dcloud.android.widget.toast.ToastCompat makeText(android.content.Context,java.lang.CharSequence,int) -> makeText
    4:4:com.dcloud.android.widget.toast.ToastCompat makeText(android.content.Context,int,int) -> makeText
    1:7:void setContextCompat(android.view.View,android.content.Context) -> setContextCompat
    1:1:void setDuration(int) -> setDuration
    1:1:void setGravity(int,int,int) -> setGravity
    1:1:void setMargin(float,float) -> setMargin
    1:1:void setText(int) -> setText
    2:2:void setText(java.lang.CharSequence) -> setText
    1:2:void setView(android.view.View) -> setView
    1:1:void show() -> show
com.dcloud.zxing2.BarcodeFormat -> com.dcloud.zxing2.BarcodeFormat:
    1:50:void <clinit>() -> <clinit>
    1:1:void <init>(java.lang.String,int) -> <init>
    1:1:com.dcloud.zxing2.BarcodeFormat valueOf(java.lang.String) -> valueOf
    1:1:com.dcloud.zxing2.BarcodeFormat[] values() -> values
com.dcloud.zxing2.Binarizer -> com.dcloud.zxing2.Binarizer:
    1:2:void <init>(com.dcloud.zxing2.LuminanceSource) -> <init>
    1:1:int getHeight() -> getHeight
    1:1:com.dcloud.zxing2.LuminanceSource getLuminanceSource() -> getLuminanceSource
    1:1:int getWidth() -> getWidth
com.dcloud.zxing2.BinaryBitmap -> com.dcloud.zxing2.BinaryBitmap:
    1:6:void <init>(com.dcloud.zxing2.Binarizer) -> <init>
    1:2:com.dcloud.zxing2.BinaryBitmap crop(int,int,int,int) -> crop
    1:4:com.dcloud.zxing2.common.BitMatrix getBlackMatrix() -> getBlackMatrix
    1:1:com.dcloud.zxing2.common.BitArray getBlackRow(int,com.dcloud.zxing2.common.BitArray) -> getBlackRow
    1:1:int getHeight() -> getHeight
    1:1:int getWidth() -> getWidth
    1:1:boolean isCropSupported() -> isCropSupported
    1:1:boolean isRotateSupported() -> isRotateSupported
    1:2:com.dcloud.zxing2.BinaryBitmap rotateCounterClockwise() -> rotateCounterClockwise
    1:2:com.dcloud.zxing2.BinaryBitmap rotateCounterClockwise45() -> rotateCounterClockwise45
    1:1:java.lang.String toString() -> toString
com.dcloud.zxing2.ChecksumException -> com.dcloud.zxing2.ChecksumException:
    1:3:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    2:2:void <init>(java.lang.Throwable) -> <init>
    1:1:com.dcloud.zxing2.ChecksumException getChecksumInstance() -> getChecksumInstance
    2:2:com.dcloud.zxing2.ChecksumException getChecksumInstance(java.lang.Throwable) -> getChecksumInstance
com.dcloud.zxing2.DecodeHintType -> com.dcloud.zxing2.DecodeHintType:
    1:71:void <clinit>() -> <clinit>
    1:2:void <init>(java.lang.String,int,java.lang.Class) -> <init>
    1:1:java.lang.Class getValueType() -> getValueType
    1:1:com.dcloud.zxing2.DecodeHintType valueOf(java.lang.String) -> valueOf
    1:1:com.dcloud.zxing2.DecodeHintType[] values() -> values
com.dcloud.zxing2.Dimension -> com.dcloud.zxing2.Dimension:
    1:7:void <init>(int,int) -> <init>
    1:3:boolean equals(java.lang.Object) -> equals
    1:1:int getHeight() -> getHeight
    1:1:int getWidth() -> getWidth
    1:1:int hashCode() -> hashCode
    1:1:java.lang.String toString() -> toString
com.dcloud.zxing2.EncodeHintType -> com.dcloud.zxing2.EncodeHintType:
    1:64:void <clinit>() -> <clinit>
    1:1:void <init>(java.lang.String,int) -> <init>
    1:1:com.dcloud.zxing2.EncodeHintType valueOf(java.lang.String) -> valueOf
    1:1:com.dcloud.zxing2.EncodeHintType[] values() -> values
com.dcloud.zxing2.FormatException -> com.dcloud.zxing2.FormatException:
    1:3:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    2:2:void <init>(java.lang.Throwable) -> <init>
    1:1:com.dcloud.zxing2.FormatException getFormatInstance() -> getFormatInstance
    2:2:com.dcloud.zxing2.FormatException getFormatInstance(java.lang.Throwable) -> getFormatInstance
com.dcloud.zxing2.InvertedLuminanceSource -> com.dcloud.zxing2.InvertedLuminanceSource:
    1:2:void <init>(com.dcloud.zxing2.LuminanceSource) -> <init>
    1:1:com.dcloud.zxing2.LuminanceSource crop(int,int,int,int) -> crop
    1:5:byte[] getMatrix() -> getMatrix
    1:4:byte[] getRow(int,byte[]) -> getRow
    1:1:com.dcloud.zxing2.LuminanceSource invert() -> invert
    1:1:boolean isCropSupported() -> isCropSupported
    1:1:boolean isRotateSupported() -> isRotateSupported
    1:1:com.dcloud.zxing2.LuminanceSource rotateCounterClockwise() -> rotateCounterClockwise
    1:1:com.dcloud.zxing2.LuminanceSource rotateCounterClockwise45() -> rotateCounterClockwise45
com.dcloud.zxing2.LuminanceSource -> com.dcloud.zxing2.LuminanceSource:
    1:3:void <init>(int,int) -> <init>
    1:1:com.dcloud.zxing2.LuminanceSource crop(int,int,int,int) -> crop
    1:1:int getHeight() -> getHeight
    1:1:int getWidth() -> getWidth
    1:1:com.dcloud.zxing2.LuminanceSource invert() -> invert
    1:1:com.dcloud.zxing2.LuminanceSource rotateCounterClockwise() -> rotateCounterClockwise
    1:1:com.dcloud.zxing2.LuminanceSource rotateCounterClockwise45() -> rotateCounterClockwise45
    1:21:java.lang.String toString() -> toString
com.dcloud.zxing2.MultiFormatReader -> com.dcloud.zxing2.MultiFormatReader:
    1:1:void <init>() -> <init>
    1:2:com.dcloud.zxing2.Result decode(com.dcloud.zxing2.BinaryBitmap) -> decode
    3:4:com.dcloud.zxing2.Result decode(com.dcloud.zxing2.BinaryBitmap,java.util.Map) -> decode
    1:10:com.dcloud.zxing2.Result decodeInternal(com.dcloud.zxing2.BinaryBitmap) -> decodeInternal
    1:4:com.dcloud.zxing2.Result decodeWithState(com.dcloud.zxing2.BinaryBitmap) -> decodeWithState
    1:3:void reset() -> reset
    1:60:void setHints(java.util.Map) -> setHints
com.dcloud.zxing2.MultiFormatWriter -> com.dcloud.zxing2.MultiFormatWriter:
    1:1:void <init>() -> <init>
    1:1:com.dcloud.zxing2.common.BitMatrix encode(java.lang.String,com.dcloud.zxing2.BarcodeFormat,int,int) -> encode
    2:97:com.dcloud.zxing2.common.BitMatrix encode(java.lang.String,com.dcloud.zxing2.BarcodeFormat,int,int,java.util.Map) -> encode
com.dcloud.zxing2.MultiFormatWriter$1 -> com.dcloud.zxing2.MultiFormatWriter$1:
    1:1:void <clinit>() -> <clinit>
com.dcloud.zxing2.NotFoundException -> com.dcloud.zxing2.NotFoundException:
    1:3:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:1:com.dcloud.zxing2.NotFoundException getNotFoundInstance() -> getNotFoundInstance
com.dcloud.zxing2.PlanarYUVLuminanceSource -> com.dcloud.zxing2.PlanarYUVLuminanceSource:
    1:14:void <init>(byte[],int,int,int,int,int,int,boolean) -> <init>
    1:1:com.dcloud.zxing2.LuminanceSource crop(int,int,int,int) -> crop
    1:25:byte[] getMatrix() -> getMatrix
    1:10:byte[] getRow(int,byte[]) -> getRow
    1:1:int getThumbnailHeight() -> getThumbnailHeight
    1:1:int getThumbnailWidth() -> getThumbnailWidth
    1:13:int[] renderThumbnail() -> renderThumbnail
    1:8:void reverseHorizontal(int,int) -> reverseHorizontal
com.dcloud.zxing2.RGBLuminanceSource -> com.dcloud.zxing2.RGBLuminanceSource:
    1:23:void <init>(int,int,int[]) -> <init>
    24:33:void <init>(byte[],int,int,int,int,int,int) -> <init>
    1:1:com.dcloud.zxing2.LuminanceSource crop(int,int,int,int) -> crop
    1:25:byte[] getMatrix() -> getMatrix
    1:10:byte[] getRow(int,byte[]) -> getRow
com.dcloud.zxing2.ReaderException -> com.dcloud.zxing2.ReaderException:
    1:2:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    2:2:void <init>(java.lang.Throwable) -> <init>
com.dcloud.zxing2.Result -> com.dcloud.zxing2.Result:
    1:1:void <init>(java.lang.String,byte[],com.dcloud.zxing2.ResultPoint[],com.dcloud.zxing2.BarcodeFormat) -> <init>
    2:8:void <init>(java.lang.String,byte[],com.dcloud.zxing2.ResultPoint[],com.dcloud.zxing2.BarcodeFormat,long) -> <init>
    1:8:void addResultPoints(com.dcloud.zxing2.ResultPoint[]) -> addResultPoints
    1:1:com.dcloud.zxing2.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
    1:1:byte[] getRawBytes() -> getRawBytes
    1:1:java.util.Map getResultMetadata() -> getResultMetadata
    1:1:com.dcloud.zxing2.ResultPoint[] getResultPoints() -> getResultPoints
    1:1:java.lang.String getText() -> getText
    1:1:long getTimestamp() -> getTimestamp
    1:4:void putAllMetadata(java.util.Map) -> putAllMetadata
    1:4:void putMetadata(com.dcloud.zxing2.ResultMetadataType,java.lang.Object) -> putMetadata
    1:1:java.lang.String toString() -> toString
com.dcloud.zxing2.ResultMetadataType -> com.dcloud.zxing2.ResultMetadataType:
    1:67:void <clinit>() -> <clinit>
    1:1:void <init>(java.lang.String,int) -> <init>
    1:1:com.dcloud.zxing2.ResultMetadataType valueOf(java.lang.String) -> valueOf
    1:1:com.dcloud.zxing2.ResultMetadataType[] values() -> values
com.dcloud.zxing2.ResultPoint -> com.dcloud.zxing2.ResultPoint:
    1:3:void <init>(float,float) -> <init>
    1:3:float crossProductZ(com.dcloud.zxing2.ResultPoint,com.dcloud.zxing2.ResultPoint,com.dcloud.zxing2.ResultPoint) -> crossProductZ
    1:1:float distance(com.dcloud.zxing2.ResultPoint,com.dcloud.zxing2.ResultPoint) -> distance
    1:3:boolean equals(java.lang.Object) -> equals
    1:1:float getX() -> getX
    1:1:float getY() -> getY
    1:1:int hashCode() -> hashCode
    1:35:void orderBestPatterns(com.dcloud.zxing2.ResultPoint[]) -> orderBestPatterns
    1:7:java.lang.String toString() -> toString
com.dcloud.zxing2.WriterException -> com.dcloud.zxing2.WriterException:
    1:1:void <init>() -> <init>
    2:2:void <init>(java.lang.String) -> <init>
    3:3:void <init>(java.lang.Throwable) -> <init>
com.dcloud.zxing2.aztec.AztecDetectorResult -> com.dcloud.zxing2.aztec.AztecDetectorResult:
    1:4:void <init>(com.dcloud.zxing2.common.BitMatrix,com.dcloud.zxing2.ResultPoint[],boolean,int,int) -> <init>
    1:1:int getNbDatablocks() -> getNbDatablocks
    1:1:int getNbLayers() -> getNbLayers
    1:1:boolean isCompact() -> isCompact
com.dcloud.zxing2.aztec.AztecReader -> com.dcloud.zxing2.aztec.AztecReader:
    1:1:void <init>() -> <init>
    1:1:com.dcloud.zxing2.Result decode(com.dcloud.zxing2.BinaryBitmap) -> decode
    2:53:com.dcloud.zxing2.Result decode(com.dcloud.zxing2.BinaryBitmap,java.util.Map) -> decode
com.dcloud.zxing2.aztec.AztecWriter -> com.dcloud.zxing2.aztec.AztecWriter:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:1:com.dcloud.zxing2.common.BitMatrix encode(java.lang.String,com.dcloud.zxing2.BarcodeFormat,int,int) -> encode
    2:16:com.dcloud.zxing2.common.BitMatrix encode(java.lang.String,com.dcloud.zxing2.BarcodeFormat,int,int,java.util.Map) -> encode
    17:22:com.dcloud.zxing2.common.BitMatrix encode(java.lang.String,com.dcloud.zxing2.BarcodeFormat,int,int,java.nio.charset.Charset,int,int) -> encode
    1:21:com.dcloud.zxing2.common.BitMatrix renderResult(com.dcloud.zxing2.aztec.encoder.AztecCode,int,int) -> renderResult
com.dcloud.zxing2.aztec.decoder.Decoder -> com.dcloud.zxing2.aztec.decoder.Decoder:
    1:22:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:61:boolean[] correctBits(boolean[]) -> correctBits
    1:6:com.dcloud.zxing2.common.DecoderResult decode(com.dcloud.zxing2.aztec.AztecDetectorResult) -> decode
    1:42:boolean[] extractBits(com.dcloud.zxing2.common.BitMatrix) -> extractBits
    1:19:java.lang.String getCharacter(com.dcloud.zxing2.aztec.decoder.Decoder$Table,int) -> getCharacter
    1:52:java.lang.String getEncodedData(boolean[]) -> getEncodedData
    1:11:com.dcloud.zxing2.aztec.decoder.Decoder$Table getTable(char) -> getTable
    1:1:java.lang.String highLevelDecode(boolean[]) -> highLevelDecode
    1:1:int readCode(boolean[],int,int) -> readCode
com.dcloud.zxing2.aztec.decoder.Decoder$1 -> com.dcloud.zxing2.aztec.decoder.Decoder$1:
    1:1:void <clinit>() -> <clinit>
com.dcloud.zxing2.aztec.decoder.Decoder$Table -> com.dcloud.zxing2.aztec.decoder.Decoder$Table:
    1:7:void <clinit>() -> <clinit>
    1:1:void <init>(java.lang.String,int) -> <init>
    1:1:com.dcloud.zxing2.aztec.decoder.Decoder$Table valueOf(java.lang.String) -> valueOf
    1:1:com.dcloud.zxing2.aztec.decoder.Decoder$Table[] values() -> values
com.dcloud.zxing2.aztec.detector.Detector -> com.dcloud.zxing2.aztec.detector.Detector:
    1:1:void <clinit>() -> <clinit>
    1:2:void <init>(com.dcloud.zxing2.common.BitMatrix) -> <init>
    1:1:com.dcloud.zxing2.aztec.AztecDetectorResult detect() -> detect
    2:27:com.dcloud.zxing2.aztec.AztecDetectorResult detect(boolean) -> detect
    1:1:float distance(com.dcloud.zxing2.aztec.detector.Detector$Point,com.dcloud.zxing2.aztec.detector.Detector$Point) -> distance
    2:2:float distance(com.dcloud.zxing2.ResultPoint,com.dcloud.zxing2.ResultPoint) -> distance
    1:16:com.dcloud.zxing2.ResultPoint[] expandSquare(com.dcloud.zxing2.ResultPoint[],float,float) -> expandSquare
    1:47:void extractParameters(com.dcloud.zxing2.ResultPoint[]) -> extractParameters
    1:54:com.dcloud.zxing2.ResultPoint[] getBullsEyeCorners(com.dcloud.zxing2.aztec.detector.Detector$Point) -> getBullsEyeCorners
    1:14:int getColor(com.dcloud.zxing2.aztec.detector.Detector$Point,com.dcloud.zxing2.aztec.detector.Detector$Point) -> getColor
    1:16:int getCorrectedParameterData(long,boolean) -> getCorrectedParameterData
    1:7:int getDimension() -> getDimension
    1:22:com.dcloud.zxing2.aztec.detector.Detector$Point getFirstDifferent(com.dcloud.zxing2.aztec.detector.Detector$Point,boolean,int,int) -> getFirstDifferent
    1:46:com.dcloud.zxing2.aztec.detector.Detector$Point getMatrixCenter() -> getMatrixCenter
    1:1:com.dcloud.zxing2.ResultPoint[] getMatrixCornerPoints(com.dcloud.zxing2.ResultPoint[]) -> getMatrixCornerPoints
    1:18:int getRotation(int[],int) -> getRotation
    1:1:boolean isValid(int,int) -> isValid
    2:4:boolean isValid(com.dcloud.zxing2.ResultPoint) -> isValid
    1:24:boolean isWhiteOrBlackRectangle(com.dcloud.zxing2.aztec.detector.Detector$Point,com.dcloud.zxing2.aztec.detector.Detector$Point,com.dcloud.zxing2.aztec.detector.Detector$Point,com.dcloud.zxing2.aztec.detector.Detector$Point) -> isWhiteOrBlackRectangle
    1:18:com.dcloud.zxing2.common.BitMatrix sampleGrid(com.dcloud.zxing2.common.BitMatrix,com.dcloud.zxing2.ResultPoint,com.dcloud.zxing2.ResultPoint,com.dcloud.zxing2.ResultPoint,com.dcloud.zxing2.ResultPoint) -> sampleGrid
    1:8:int sampleLine(com.dcloud.zxing2.ResultPoint,com.dcloud.zxing2.ResultPoint,int) -> sampleLine
com.dcloud.zxing2.aztec.detector.Detector$Point -> com.dcloud.zxing2.aztec.detector.Detector$Point:
    1:3:void <init>(int,int) -> <init>
    1:1:int getX() -> getX
    1:1:int getY() -> getY
    1:1:com.dcloud.zxing2.ResultPoint toResultPoint() -> toResultPoint
    1:1:java.lang.String toString() -> toString
com.dcloud.zxing2.aztec.encoder.AztecCode -> com.dcloud.zxing2.aztec.encoder.AztecCode:
    1:1:void <init>() -> <init>
    1:1:int getCodeWords() -> getCodeWords
    1:1:int getLayers() -> getLayers
    1:1:com.dcloud.zxing2.common.BitMatrix getMatrix() -> getMatrix
    1:1:int getSize() -> getSize
    1:1:boolean isCompact() -> isCompact
    1:1:void setCodeWords(int) -> setCodeWords
    1:1:void setCompact(boolean) -> setCompact
    1:1:void setLayers(int) -> setLayers
    1:1:void setMatrix(com.dcloud.zxing2.common.BitMatrix) -> setMatrix
    1:1:void setSize(int) -> setSize
com.dcloud.zxing2.aztec.encoder.BinaryShiftToken -> com.dcloud.zxing2.aztec.encoder.BinaryShiftToken:
    1:3:void <init>(com.dcloud.zxing2.aztec.encoder.Token,int,int) -> <init>
    1:16:void appendTo(com.dcloud.zxing2.common.BitArray,byte[]) -> appendTo
    1:1:java.lang.String toString() -> toString
com.dcloud.zxing2.aztec.encoder.Encoder -> com.dcloud.zxing2.aztec.encoder.Encoder:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:9:int[] bitsToWords(com.dcloud.zxing2.common.BitArray,int,int) -> bitsToWords
    1:12:void drawBullsEye(com.dcloud.zxing2.common.BitMatrix,int,int) -> drawBullsEye
    1:31:void drawModeMessage(com.dcloud.zxing2.common.BitMatrix,boolean,int,com.dcloud.zxing2.common.BitArray) -> drawModeMessage
    1:1:com.dcloud.zxing2.aztec.encoder.AztecCode encode(byte[]) -> encode
    2:151:com.dcloud.zxing2.aztec.encoder.AztecCode encode(byte[],int,int) -> encode
    1:10:com.dcloud.zxing2.common.BitArray generateCheckWords(com.dcloud.zxing2.common.BitArray,int,int) -> generateCheckWords
    1:9:com.dcloud.zxing2.common.BitArray generateModeMessage(boolean,int,int) -> generateModeMessage
    1:7:com.dcloud.zxing2.common.reedsolomon.GenericGF getGF(int) -> getGF
    1:19:com.dcloud.zxing2.common.BitArray stuffBits(com.dcloud.zxing2.common.BitArray,int) -> stuffBits
com.dcloud.zxing2.aztec.encoder.HighLevelEncoder -> com.dcloud.zxing2.aztec.encoder.HighLevelEncoder:
    1:106:void <clinit>() -> <clinit>
    1:2:void <init>(byte[]) -> <init>
    1:39:com.dcloud.zxing2.common.BitArray encode() -> encode
    1:15:java.util.Collection simplifyStates(java.lang.Iterable) -> simplifyStates
    1:34:void updateStateForChar(com.dcloud.zxing2.aztec.encoder.State,int,java.util.Collection) -> updateStateForChar
    1:20:void updateStateForPair(com.dcloud.zxing2.aztec.encoder.State,int,int,java.util.Collection) -> updateStateForPair
    1:5:java.util.Collection updateStateListForChar(java.lang.Iterable,int) -> updateStateListForChar
    1:5:java.util.Collection updateStateListForPair(java.lang.Iterable,int,int) -> updateStateListForPair
com.dcloud.zxing2.aztec.encoder.HighLevelEncoder$1 -> com.dcloud.zxing2.aztec.encoder.HighLevelEncoder$1:
    1:1:void <init>(com.dcloud.zxing2.aztec.encoder.HighLevelEncoder) -> <init>
    1:1:int compare(java.lang.Object,java.lang.Object) -> compare
    2:2:int compare(com.dcloud.zxing2.aztec.encoder.State,com.dcloud.zxing2.aztec.encoder.State) -> compare
com.dcloud.zxing2.aztec.encoder.SimpleToken -> com.dcloud.zxing2.aztec.encoder.SimpleToken:
    1:3:void <init>(com.dcloud.zxing2.aztec.encoder.Token,int,int) -> <init>
    1:1:void appendTo(com.dcloud.zxing2.common.BitArray,byte[]) -> appendTo
    1:3:java.lang.String toString() -> toString
com.dcloud.zxing2.aztec.encoder.State -> com.dcloud.zxing2.aztec.encoder.State:
    1:1:void <clinit>() -> <clinit>
    1:5:void <init>(com.dcloud.zxing2.aztec.encoder.Token,int,int,int) -> <init>
    1:17:com.dcloud.zxing2.aztec.encoder.State addBinaryShiftChar(int) -> addBinaryShiftChar
    1:7:com.dcloud.zxing2.aztec.encoder.State endBinaryShift(int) -> endBinaryShift
    1:1:int getBinaryShiftByteCount() -> getBinaryShiftByteCount
    1:1:int getBitCount() -> getBitCount
    1:1:int getMode() -> getMode
    1:1:com.dcloud.zxing2.aztec.encoder.Token getToken() -> getToken
    1:6:boolean isBetterThanOrEqualTo(com.dcloud.zxing2.aztec.encoder.State) -> isBetterThanOrEqualTo
    1:10:com.dcloud.zxing2.aztec.encoder.State latchAndAppend(int,int) -> latchAndAppend
    1:6:com.dcloud.zxing2.aztec.encoder.State shiftAndAppend(int,int) -> shiftAndAppend
    1:10:com.dcloud.zxing2.common.BitArray toBitArray(byte[]) -> toBitArray
    1:1:java.lang.String toString() -> toString
com.dcloud.zxing2.aztec.encoder.Token -> com.dcloud.zxing2.aztec.encoder.Token:
    1:1:void <clinit>() -> <clinit>
    1:2:void <init>(com.dcloud.zxing2.aztec.encoder.Token) -> <init>
    1:1:com.dcloud.zxing2.aztec.encoder.Token add(int,int) -> add
    1:1:com.dcloud.zxing2.aztec.encoder.Token addBinaryShift(int,int) -> addBinaryShift
    1:1:com.dcloud.zxing2.aztec.encoder.Token getPrevious() -> getPrevious
com.dcloud.zxing2.client.result.AbstractDoCoMoResultParser -> com.dcloud.zxing2.client.result.AbstractDoCoMoResultParser:
    1:1:void <init>() -> <init>
    1:1:java.lang.String[] matchDoCoMoPrefixedField(java.lang.String,java.lang.String,boolean) -> matchDoCoMoPrefixedField
    1:1:java.lang.String matchSingleDoCoMoPrefixedField(java.lang.String,java.lang.String,boolean) -> matchSingleDoCoMoPrefixedField
com.dcloud.zxing2.client.result.AddressBookAUResultParser -> com.dcloud.zxing2.client.result.AddressBookAUResultParser:
    1:1:void <init>() -> <init>
    1:13:java.lang.String[] matchMultipleValuePrefix(java.lang.String,int,java.lang.String,boolean) -> matchMultipleValuePrefix
    1:1:com.dcloud.zxing2.client.result.ParsedResult parse(com.dcloud.zxing2.Result) -> parse
    2:18:com.dcloud.zxing2.client.result.AddressBookParsedResult parse(com.dcloud.zxing2.Result) -> parse
com.dcloud.zxing2.client.result.AddressBookDoCoMoResultParser -> com.dcloud.zxing2.client.result.AddressBookDoCoMoResultParser:
    1:1:void <init>() -> <init>
    1:1:com.dcloud.zxing2.client.result.ParsedResult parse(com.dcloud.zxing2.Result) -> parse
    2:27:com.dcloud.zxing2.client.result.AddressBookParsedResult parse(com.dcloud.zxing2.Result) -> parse
    1:4:java.lang.String parseName(java.lang.String) -> parseName
com.dcloud.zxing2.client.result.AddressBookParsedResult -> com.dcloud.zxing2.client.result.AddressBookParsedResult:
    1:1:void <init>(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[]) -> <init>
    2:18:void <init>(java.lang.String[],java.lang.String[],java.lang.String,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[]) -> <init>
    1:1:java.lang.String[] getAddressTypes() -> getAddressTypes
    1:1:java.lang.String[] getAddresses() -> getAddresses
    1:1:java.lang.String getBirthday() -> getBirthday
    1:15:java.lang.String getDisplayResult() -> getDisplayResult
    1:1:java.lang.String[] getEmailTypes() -> getEmailTypes
    1:1:java.lang.String[] getEmails() -> getEmails
    1:1:java.lang.String[] getGeo() -> getGeo
    1:1:java.lang.String getInstantMessenger() -> getInstantMessenger
    1:1:java.lang.String[] getNames() -> getNames
    1:1:java.lang.String[] getNicknames() -> getNicknames
    1:1:java.lang.String getNote() -> getNote
    1:1:java.lang.String getOrg() -> getOrg
    1:1:java.lang.String[] getPhoneNumbers() -> getPhoneNumbers
    1:1:java.lang.String[] getPhoneTypes() -> getPhoneTypes
    1:1:java.lang.String getPronunciation() -> getPronunciation
    1:1:java.lang.String getTitle() -> getTitle
    1:1:java.lang.String[] getURLs() -> getURLs
com.dcloud.zxing2.client.result.BizcardResultParser -> com.dcloud.zxing2.client.result.BizcardResultParser:
    1:1:void <init>() -> <init>
    1:1:java.lang.String buildName(java.lang.String,java.lang.String) -> buildName
    1:15:java.lang.String[] buildPhoneNumbers(java.lang.String,java.lang.String,java.lang.String) -> buildPhoneNumbers
    1:1:com.dcloud.zxing2.client.result.ParsedResult parse(com.dcloud.zxing2.Result) -> parse
    2:22:com.dcloud.zxing2.client.result.AddressBookParsedResult parse(com.dcloud.zxing2.Result) -> parse
com.dcloud.zxing2.client.result.BookmarkDoCoMoResultParser -> com.dcloud.zxing2.client.result.BookmarkDoCoMoResultParser:
    1:1:void <init>() -> <init>
    1:1:com.dcloud.zxing2.client.result.ParsedResult parse(com.dcloud.zxing2.Result) -> parse
    2:12:com.dcloud.zxing2.client.result.URIParsedResult parse(com.dcloud.zxing2.Result) -> parse
com.dcloud.zxing2.client.result.CalendarParsedResult -> com.dcloud.zxing2.client.result.CalendarParsedResult:
    1:10:void <clinit>() -> <clinit>
    1:31:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,double,double) -> <init>
    1:5:java.text.DateFormat buildDateFormat() -> buildDateFormat
    1:1:java.text.DateFormat buildDateTimeFormat() -> buildDateTimeFormat
    1:3:java.lang.String format(boolean,java.util.Date) -> format
    1:1:java.lang.String[] getAttendees() -> getAttendees
    1:1:java.lang.String getDescription() -> getDescription
    1:9:java.lang.String getDisplayResult() -> getDisplayResult
    1:1:java.util.Date getEnd() -> getEnd
    1:1:double getLatitude() -> getLatitude
    1:1:java.lang.String getLocation() -> getLocation
    1:1:double getLongitude() -> getLongitude
    1:1:java.lang.String getOrganizer() -> getOrganizer
    1:1:java.util.Date getStart() -> getStart
    1:1:java.lang.String getSummary() -> getSummary
    1:1:boolean isEndAllDay() -> isEndAllDay
    1:1:boolean isStartAllDay() -> isStartAllDay
    1:23:java.util.Date parseDate(java.lang.String) -> parseDate
    1:9:long parseDurationMS(java.lang.CharSequence) -> parseDurationMS
com.dcloud.zxing2.client.result.EmailAddressParsedResult -> com.dcloud.zxing2.client.result.EmailAddressParsedResult:
    1:1:void <init>(java.lang.String) -> <init>
    2:7:void <init>(java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String,java.lang.String) -> <init>
    1:1:java.lang.String[] getBCCs() -> getBCCs
    1:1:java.lang.String getBody() -> getBody
    1:1:java.lang.String[] getCCs() -> getCCs
    1:7:java.lang.String getDisplayResult() -> getDisplayResult
    1:1:java.lang.String getEmailAddress() -> getEmailAddress
    1:1:java.lang.String getSubject() -> getSubject
    1:1:java.lang.String[] getTos() -> getTos
com.dcloud.zxing2.client.result.EmailAddressResultParser -> com.dcloud.zxing2.client.result.EmailAddressResultParser:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:1:com.dcloud.zxing2.client.result.ParsedResult parse(com.dcloud.zxing2.Result) -> parse
    2:85:com.dcloud.zxing2.client.result.EmailAddressParsedResult parse(com.dcloud.zxing2.Result) -> parse
com.dcloud.zxing2.client.result.EmailDoCoMoResultParser -> com.dcloud.zxing2.client.result.EmailDoCoMoResultParser:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:1:boolean isBasicallyValidEmailAddress(java.lang.String) -> isBasicallyValidEmailAddress
    1:1:com.dcloud.zxing2.client.result.ParsedResult parse(com.dcloud.zxing2.Result) -> parse
    2:17:com.dcloud.zxing2.client.result.EmailAddressParsedResult parse(com.dcloud.zxing2.Result) -> parse
com.dcloud.zxing2.client.result.ExpandedProductParsedResult -> com.dcloud.zxing2.client.result.ExpandedProductParsedResult:
    1:16:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map) -> <init>
    1:19:boolean equals(java.lang.Object) -> equals
    1:1:boolean equalsOrNull(java.lang.Object,java.lang.Object) -> equalsOrNull
    1:1:java.lang.String getBestBeforeDate() -> getBestBeforeDate
    1:1:java.lang.String getDisplayResult() -> getDisplayResult
    1:1:java.lang.String getExpirationDate() -> getExpirationDate
    1:1:java.lang.String getLotNumber() -> getLotNumber
    1:1:java.lang.String getPackagingDate() -> getPackagingDate
    1:1:java.lang.String getPrice() -> getPrice
    1:1:java.lang.String getPriceCurrency() -> getPriceCurrency
    1:1:java.lang.String getPriceIncrement() -> getPriceIncrement
    1:1:java.lang.String getProductID() -> getProductID
    1:1:java.lang.String getProductionDate() -> getProductionDate
    1:1:java.lang.String getRawText() -> getRawText
    1:1:java.lang.String getSscc() -> getSscc
    1:1:java.util.Map getUncommonAIs() -> getUncommonAIs
    1:1:java.lang.String getWeight() -> getWeight
    1:1:java.lang.String getWeightIncrement() -> getWeightIncrement
    1:1:java.lang.String getWeightType() -> getWeightType
    1:13:int hashCode() -> hashCode
    1:1:int hashNotNull(java.lang.Object) -> hashNotNull
com.dcloud.zxing2.client.result.ExpandedProductResultParser -> com.dcloud.zxing2.client.result.ExpandedProductResultParser:
    1:1:void <init>() -> <init>
    1:20:java.lang.String findAIvalue(int,java.lang.String) -> findAIvalue
    1:18:java.lang.String findValue(int,java.lang.String) -> findValue
    1:1:com.dcloud.zxing2.client.result.ParsedResult parse(com.dcloud.zxing2.Result) -> parse
    2:166:com.dcloud.zxing2.client.result.ExpandedProductParsedResult parse(com.dcloud.zxing2.Result) -> parse
com.dcloud.zxing2.client.result.GeoParsedResult -> com.dcloud.zxing2.client.result.GeoParsedResult:
    1:5:void <init>(double,double,double,java.lang.String) -> <init>
    1:1:double getAltitude() -> getAltitude
    1:15:java.lang.String getDisplayResult() -> getDisplayResult
    1:14:java.lang.String getGeoURI() -> getGeoURI
    1:1:double getLatitude() -> getLatitude
    1:1:double getLongitude() -> getLongitude
    1:1:java.lang.String getQuery() -> getQuery
com.dcloud.zxing2.client.result.GeoResultParser -> com.dcloud.zxing2.client.result.GeoResultParser:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:1:com.dcloud.zxing2.client.result.ParsedResult parse(com.dcloud.zxing2.Result) -> parse
    2:33:com.dcloud.zxing2.client.result.GeoParsedResult parse(com.dcloud.zxing2.Result) -> parse
com.dcloud.zxing2.client.result.ISBNParsedResult -> com.dcloud.zxing2.client.result.ISBNParsedResult:
    1:2:void <init>(java.lang.String) -> <init>
    1:1:java.lang.String getDisplayResult() -> getDisplayResult
    1:1:java.lang.String getISBN() -> getISBN
com.dcloud.zxing2.client.result.ISBNResultParser -> com.dcloud.zxing2.client.result.ISBNResultParser:
    1:1:void <init>() -> <init>
    1:1:com.dcloud.zxing2.client.result.ParsedResult parse(com.dcloud.zxing2.Result) -> parse
    2:15:com.dcloud.zxing2.client.result.ISBNParsedResult parse(com.dcloud.zxing2.Result) -> parse
com.dcloud.zxing2.client.result.ParsedResult -> com.dcloud.zxing2.client.result.ParsedResult:
    1:2:void <init>(com.dcloud.zxing2.client.result.ParsedResultType) -> <init>
    1:1:com.dcloud.zxing2.client.result.ParsedResultType getType() -> getType
    1:6:void maybeAppend(java.lang.String,java.lang.StringBuilder) -> maybeAppend
    7:8:void maybeAppend(java.lang.String[],java.lang.StringBuilder) -> maybeAppend
    1:1:java.lang.String toString() -> toString
com.dcloud.zxing2.client.result.ParsedResultType -> com.dcloud.zxing2.client.result.ParsedResultType:
    1:13:void <clinit>() -> <clinit>
    1:1:void <init>(java.lang.String,int) -> <init>
    1:1:com.dcloud.zxing2.client.result.ParsedResultType valueOf(java.lang.String) -> valueOf
    1:1:com.dcloud.zxing2.client.result.ParsedResultType[] values() -> values
com.dcloud.zxing2.client.result.ProductParsedResult -> com.dcloud.zxing2.client.result.ProductParsedResult:
    1:1:void <init>(java.lang.String) -> <init>
    2:4:void <init>(java.lang.String,java.lang.String) -> <init>
    1:1:java.lang.String getDisplayResult() -> getDisplayResult
    1:1:java.lang.String getNormalizedProductID() -> getNormalizedProductID
    1:1:java.lang.String getProductID() -> getProductID
com.dcloud.zxing2.client.result.ProductResultParser -> com.dcloud.zxing2.client.result.ProductResultParser:
    1:1:void <init>() -> <init>
    1:1:com.dcloud.zxing2.client.result.ParsedResult parse(com.dcloud.zxing2.Result) -> parse
    2:21:com.dcloud.zxing2.client.result.ProductParsedResult parse(com.dcloud.zxing2.Result) -> parse
com.dcloud.zxing2.client.result.ResultParser -> com.dcloud.zxing2.client.result.ResultParser:
    1:26:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:7:void appendKeyValue(java.lang.CharSequence,java.util.Map) -> appendKeyValue
    1:1:int countPrecedingBackslashes(java.lang.CharSequence,int) -> countPrecedingBackslashes
    1:3:java.lang.String getMassagedText(com.dcloud.zxing2.Result) -> getMassagedText
    1:1:boolean isStringOfDigits(java.lang.CharSequence,int) -> isStringOfDigits
    1:1:boolean isSubstringOfDigits(java.lang.CharSequence,int,int) -> isSubstringOfDigits
    1:39:java.lang.String[] matchPrefixedField(java.lang.String,java.lang.String,char,boolean) -> matchPrefixedField
    1:2:java.lang.String matchSinglePrefixedField(java.lang.String,java.lang.String,char,boolean) -> matchSinglePrefixedField
    1:2:void maybeAppend(java.lang.String,java.lang.StringBuilder) -> maybeAppend
    3:5:void maybeAppend(java.lang.String[],java.lang.StringBuilder) -> maybeAppend
    1:1:java.lang.String[] maybeWrap(java.lang.String) -> maybeWrap
    1:7:java.util.Map parseNameValuePairs(java.lang.String) -> parseNameValuePairs
    1:7:com.dcloud.zxing2.client.result.ParsedResult parseResult(com.dcloud.zxing2.Result) -> parseResult
    1:18:java.lang.String unescapeBackslash(java.lang.String) -> unescapeBackslash
    1:3:java.lang.String urlDecode(java.lang.String) -> urlDecode
com.dcloud.zxing2.client.result.SMSMMSResultParser -> com.dcloud.zxing2.client.result.SMSMMSResultParser:
    1:1:void <init>() -> <init>
    1:14:void addNumberVia(java.util.Collection,java.util.Collection,java.lang.String) -> addNumberVia
    1:1:com.dcloud.zxing2.client.result.ParsedResult parse(com.dcloud.zxing2.Result) -> parse
    2:44:com.dcloud.zxing2.client.result.SMSParsedResult parse(com.dcloud.zxing2.Result) -> parse
com.dcloud.zxing2.client.result.SMSParsedResult -> com.dcloud.zxing2.client.result.SMSParsedResult:
    1:5:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    6:10:void <init>(java.lang.String[],java.lang.String[],java.lang.String,java.lang.String) -> <init>
    1:1:java.lang.String getBody() -> getBody
    1:5:java.lang.String getDisplayResult() -> getDisplayResult
    1:1:java.lang.String[] getNumbers() -> getNumbers
    1:32:java.lang.String getSMSURI() -> getSMSURI
    1:1:java.lang.String getSubject() -> getSubject
    1:1:java.lang.String[] getVias() -> getVias
com.dcloud.zxing2.client.result.SMSTOMMSTOResultParser -> com.dcloud.zxing2.client.result.SMSTOMMSTOResultParser:
    1:1:void <init>() -> <init>
    1:1:com.dcloud.zxing2.client.result.ParsedResult parse(com.dcloud.zxing2.Result) -> parse
    2:16:com.dcloud.zxing2.client.result.SMSParsedResult parse(com.dcloud.zxing2.Result) -> parse
com.dcloud.zxing2.client.result.SMTPResultParser -> com.dcloud.zxing2.client.result.SMTPResultParser:
    1:1:void <init>() -> <init>
    1:1:com.dcloud.zxing2.client.result.ParsedResult parse(com.dcloud.zxing2.Result) -> parse
    2:19:com.dcloud.zxing2.client.result.EmailAddressParsedResult parse(com.dcloud.zxing2.Result) -> parse
com.dcloud.zxing2.client.result.TelParsedResult -> com.dcloud.zxing2.client.result.TelParsedResult:
    1:4:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    1:4:java.lang.String getDisplayResult() -> getDisplayResult
    1:1:java.lang.String getNumber() -> getNumber
    1:1:java.lang.String getTelURI() -> getTelURI
    1:1:java.lang.String getTitle() -> getTitle
com.dcloud.zxing2.client.result.TelResultParser -> com.dcloud.zxing2.client.result.TelResultParser:
    1:1:void <init>() -> <init>
    1:1:com.dcloud.zxing2.client.result.ParsedResult parse(com.dcloud.zxing2.Result) -> parse
    2:11:com.dcloud.zxing2.client.result.TelParsedResult parse(com.dcloud.zxing2.Result) -> parse
com.dcloud.zxing2.client.result.TextParsedResult -> com.dcloud.zxing2.client.result.TextParsedResult:
    1:3:void <init>(java.lang.String,java.lang.String) -> <init>
    1:1:java.lang.String getDisplayResult() -> getDisplayResult
    1:1:java.lang.String getLanguage() -> getLanguage
    1:1:java.lang.String getText() -> getText
com.dcloud.zxing2.client.result.URIParsedResult -> com.dcloud.zxing2.client.result.URIParsedResult:
    1:1:void <clinit>() -> <clinit>
    1:3:void <init>(java.lang.String,java.lang.String) -> <init>
    1:4:java.lang.String getDisplayResult() -> getDisplayResult
    1:1:java.lang.String getTitle() -> getTitle
    1:1:java.lang.String getURI() -> getURI
    1:5:boolean isColonFollowedByPortNumber(java.lang.String,int) -> isColonFollowedByPortNumber
    1:1:boolean isPossiblyMaliciousURI() -> isPossiblyMaliciousURI
    1:6:java.lang.String massageURI(java.lang.String) -> massageURI
com.dcloud.zxing2.client.result.URIResultParser -> com.dcloud.zxing2.client.result.URIResultParser:
    1:2:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:10:boolean isBasicallyValidURI(java.lang.String) -> isBasicallyValidURI
    1:1:com.dcloud.zxing2.client.result.ParsedResult parse(com.dcloud.zxing2.Result) -> parse
    2:10:com.dcloud.zxing2.client.result.URIParsedResult parse(com.dcloud.zxing2.Result) -> parse
com.dcloud.zxing2.client.result.URLTOResultParser -> com.dcloud.zxing2.client.result.URLTOResultParser:
    1:1:void <init>() -> <init>
    1:1:com.dcloud.zxing2.client.result.ParsedResult parse(com.dcloud.zxing2.Result) -> parse
    2:12:com.dcloud.zxing2.client.result.URIParsedResult parse(com.dcloud.zxing2.Result) -> parse
com.dcloud.zxing2.client.result.VCardResultParser -> com.dcloud.zxing2.client.result.VCardResultParser:
    1:10:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:45:java.lang.String decodeQuotedPrintable(java.lang.CharSequence,java.lang.String) -> decodeQuotedPrintable
    1:19:void formatNames(java.lang.Iterable) -> formatNames
    1:1:boolean isLikeVCardDate(java.lang.CharSequence) -> isLikeVCardDate
    1:2:java.util.List matchSingleVCardPrefixedField(java.lang.CharSequence,java.lang.String,boolean,boolean) -> matchSingleVCardPrefixedField
    1:90:java.util.List matchVCardPrefixedField(java.lang.CharSequence,java.lang.String,boolean,boolean) -> matchVCardPrefixedField
    1:5:void maybeAppendComponent(java.lang.String[],int,java.lang.StringBuilder) -> maybeAppendComponent
    1:14:void maybeAppendFragment(java.io.ByteArrayOutputStream,java.lang.String,java.lang.StringBuilder) -> maybeAppendFragment
    1:1:com.dcloud.zxing2.client.result.ParsedResult parse(com.dcloud.zxing2.Result) -> parse
    2:46:com.dcloud.zxing2.client.result.AddressBookParsedResult parse(com.dcloud.zxing2.Result) -> parse
    1:1:java.lang.String toPrimaryValue(java.util.List) -> toPrimaryValue
    1:11:java.lang.String[] toPrimaryValues(java.util.Collection) -> toPrimaryValues
    1:22:java.lang.String[] toTypes(java.util.Collection) -> toTypes
com.dcloud.zxing2.client.result.VEventResultParser -> com.dcloud.zxing2.client.result.VEventResultParser:
    1:1:void <init>() -> <init>
    1:2:java.lang.String matchSingleVCardPrefixedField(java.lang.CharSequence,java.lang.String,boolean) -> matchSingleVCardPrefixedField
    1:8:java.lang.String[] matchVCardPrefixedField(java.lang.CharSequence,java.lang.String,boolean) -> matchVCardPrefixedField
    1:1:com.dcloud.zxing2.client.result.ParsedResult parse(com.dcloud.zxing2.Result) -> parse
    2:46:com.dcloud.zxing2.client.result.CalendarParsedResult parse(com.dcloud.zxing2.Result) -> parse
    1:2:java.lang.String stripMailto(java.lang.String) -> stripMailto
com.dcloud.zxing2.client.result.VINParsedResult -> com.dcloud.zxing2.client.result.VINParsedResult:
    1:10:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int,char,java.lang.String) -> <init>
    1:1:java.lang.String getCountryCode() -> getCountryCode
    1:11:java.lang.String getDisplayResult() -> getDisplayResult
    1:1:int getModelYear() -> getModelYear
    1:1:char getPlantCode() -> getPlantCode
    1:1:java.lang.String getSequentialNumber() -> getSequentialNumber
    1:1:java.lang.String getVIN() -> getVIN
    1:1:java.lang.String getVehicleAttributes() -> getVehicleAttributes
    1:1:java.lang.String getVehicleDescriptorSection() -> getVehicleDescriptorSection
    1:1:java.lang.String getVehicleIdentifierSection() -> getVehicleIdentifierSection
    1:1:java.lang.String getWorldManufacturerID() -> getWorldManufacturerID
com.dcloud.zxing2.client.result.VINResultParser -> com.dcloud.zxing2.client.result.VINResultParser:
    1:2:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:1:char checkChar(int) -> checkChar
    1:5:boolean checkChecksum(java.lang.CharSequence) -> checkChecksum
    1:2:java.lang.String countryCode(java.lang.CharSequence) -> countryCode
    1:1:int modelYear(char) -> modelYear
    1:1:com.dcloud.zxing2.client.result.ParsedResult parse(com.dcloud.zxing2.Result) -> parse
    2:23:com.dcloud.zxing2.client.result.VINParsedResult parse(com.dcloud.zxing2.Result) -> parse
    1:1:int vinCharValue(char) -> vinCharValue
    1:1:int vinPositionWeight(int) -> vinPositionWeight
com.dcloud.zxing2.client.result.WifiParsedResult -> com.dcloud.zxing2.client.result.WifiParsedResult:
    1:1:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    2:6:void <init>(java.lang.String,java.lang.String,java.lang.String,boolean) -> <init>
    1:6:java.lang.String getDisplayResult() -> getDisplayResult
    1:1:java.lang.String getNetworkEncryption() -> getNetworkEncryption
    1:1:java.lang.String getPassword() -> getPassword
    1:1:java.lang.String getSsid() -> getSsid
    1:1:boolean isHidden() -> isHidden
com.dcloud.zxing2.client.result.WifiResultParser -> com.dcloud.zxing2.client.result.WifiResultParser:
    1:1:void <init>() -> <init>
    1:1:com.dcloud.zxing2.client.result.ParsedResult parse(com.dcloud.zxing2.Result) -> parse
    2:16:com.dcloud.zxing2.client.result.WifiParsedResult parse(com.dcloud.zxing2.Result) -> parse
com.dcloud.zxing2.common.BitArray -> com.dcloud.zxing2.common.BitArray:
    1:3:void <init>() -> <init>
    4:6:void <init>(int) -> <init>
    7:9:void <init>(int[],int) -> <init>
    1:5:void appendBit(boolean) -> appendBit
    1:4:void appendBitArray(com.dcloud.zxing2.common.BitArray) -> appendBitArray
    1:4:void appendBits(int,int) -> appendBits
    1:3:void clear() -> clear
    1:1:java.lang.Object clone() -> clone
    2:2:com.dcloud.zxing2.common.BitArray clone() -> clone
    1:4:void ensureCapacity(int) -> ensureCapacity
    1:5:boolean equals(java.lang.Object) -> equals
    1:1:void flip(int) -> flip
    1:1:boolean get(int) -> get
    1:1:int[] getBitArray() -> getBitArray
    1:15:int getNextSet(int) -> getNextSet
    1:15:int getNextUnset(int) -> getNextUnset
    1:1:int getSize() -> getSize
    1:1:int getSizeInBytes() -> getSizeInBytes
    1:1:int hashCode() -> hashCode
    1:19:boolean isRange(int,int,boolean) -> isRange
    1:1:int[] makeArray(int) -> makeArray
    1:30:void reverse() -> reverse
    1:1:void set(int) -> set
    1:1:void setBulk(int,int) -> setBulk
    1:16:void setRange(int,int) -> setRange
    1:6:void toBytes(int,byte[],int,int) -> toBytes
    1:8:java.lang.String toString() -> toString
    1:8:void xor(com.dcloud.zxing2.common.BitArray) -> xor
com.dcloud.zxing2.common.BitMatrix -> com.dcloud.zxing2.common.BitMatrix:
    1:1:void <init>(int) -> <init>
    2:10:void <init>(int,int) -> <init>
    11:15:void <init>(int,int,int,int[]) -> <init>
    1:3:void clear() -> clear
    1:1:java.lang.Object clone() -> clone
    2:2:com.dcloud.zxing2.common.BitMatrix clone() -> clone
    1:6:boolean equals(java.lang.Object) -> equals
    1:2:void flip(int,int) -> flip
    1:2:boolean get(int,int) -> get
    1:19:int[] getBottomRightOnBit() -> getBottomRightOnBit
    1:45:int[] getEnclosingRectangle() -> getEnclosingRectangle
    1:1:int getHeight() -> getHeight
    1:11:com.dcloud.zxing2.common.BitArray getRow(int,com.dcloud.zxing2.common.BitArray) -> getRow
    1:1:int getRowSize() -> getRowSize
    1:16:int[] getTopLeftOnBit() -> getTopLeftOnBit
    1:1:int getWidth() -> getWidth
    1:5:int hashCode() -> hashCode
    1:65:com.dcloud.zxing2.common.BitMatrix parse(java.lang.String,java.lang.String,java.lang.String) -> parse
    1:11:void rotate180() -> rotate180
    1:2:void set(int,int) -> set
    1:10:void setRegion(int,int,int,int) -> setRegion
    1:1:void setRow(int,com.dcloud.zxing2.common.BitArray) -> setRow
    1:1:java.lang.String toString() -> toString
    2:2:java.lang.String toString(java.lang.String,java.lang.String) -> toString
    3:10:java.lang.String toString(java.lang.String,java.lang.String,java.lang.String) -> toString
    1:2:void unset(int,int) -> unset
    1:11:void xor(com.dcloud.zxing2.common.BitMatrix) -> xor
com.dcloud.zxing2.common.BitSource -> com.dcloud.zxing2.common.BitSource:
    1:2:void <init>(byte[]) -> <init>
    1:1:int available() -> available
    1:1:int getBitOffset() -> getBitOffset
    1:1:int getByteOffset() -> getByteOffset
    1:36:int readBits(int) -> readBits
com.dcloud.zxing2.common.CharacterSetECI -> com.dcloud.zxing2.common.CharacterSetECI:
    1:68:void <clinit>() -> <clinit>
    1:1:void <init>(java.lang.String,int,int) -> <init>
    2:4:void <init>(java.lang.String,int,int,java.lang.String[]) -> <init>
    5:7:void <init>(java.lang.String,int,int[],java.lang.String[]) -> <init>
    1:1:com.dcloud.zxing2.common.CharacterSetECI getCharacterSetECIByName(java.lang.String) -> getCharacterSetECIByName
    1:2:com.dcloud.zxing2.common.CharacterSetECI getCharacterSetECIByValue(int) -> getCharacterSetECIByValue
    1:1:int getValue() -> getValue
    1:1:com.dcloud.zxing2.common.CharacterSetECI valueOf(java.lang.String) -> valueOf
    1:1:com.dcloud.zxing2.common.CharacterSetECI[] values() -> values
com.dcloud.zxing2.common.DecoderResult -> com.dcloud.zxing2.common.DecoderResult:
    1:1:void <init>(byte[],java.lang.String,java.util.List,java.lang.String) -> <init>
    2:8:void <init>(byte[],java.lang.String,java.util.List,java.lang.String,int,int) -> <init>
    1:1:java.util.List getByteSegments() -> getByteSegments
    1:1:java.lang.String getECLevel() -> getECLevel
    1:1:java.lang.Integer getErasures() -> getErasures
    1:1:java.lang.Integer getErrorsCorrected() -> getErrorsCorrected
    1:1:java.lang.Object getOther() -> getOther
    1:1:byte[] getRawBytes() -> getRawBytes
    1:1:int getStructuredAppendParity() -> getStructuredAppendParity
    1:1:int getStructuredAppendSequenceNumber() -> getStructuredAppendSequenceNumber
    1:1:java.lang.String getText() -> getText
    1:1:boolean hasStructuredAppend() -> hasStructuredAppend
    1:1:void setErasures(java.lang.Integer) -> setErasures
    1:1:void setErrorsCorrected(java.lang.Integer) -> setErrorsCorrected
    1:1:void setOther(java.lang.Object) -> setOther
com.dcloud.zxing2.common.DefaultGridSampler -> com.dcloud.zxing2.common.DefaultGridSampler:
    1:1:void <init>() -> <init>
    1:5:com.dcloud.zxing2.common.BitMatrix sampleGrid(com.dcloud.zxing2.common.BitMatrix,int,int,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> sampleGrid
    6:35:com.dcloud.zxing2.common.BitMatrix sampleGrid(com.dcloud.zxing2.common.BitMatrix,int,int,com.dcloud.zxing2.common.PerspectiveTransform) -> sampleGrid
com.dcloud.zxing2.common.DetectorResult -> com.dcloud.zxing2.common.DetectorResult:
    1:3:void <init>(com.dcloud.zxing2.common.BitMatrix,com.dcloud.zxing2.ResultPoint[]) -> <init>
    1:1:com.dcloud.zxing2.common.BitMatrix getBits() -> getBits
    1:1:com.dcloud.zxing2.ResultPoint[] getPoints() -> getPoints
com.dcloud.zxing2.common.GlobalHistogramBinarizer -> com.dcloud.zxing2.common.GlobalHistogramBinarizer:
    1:1:void <clinit>() -> <clinit>
    1:3:void <init>(com.dcloud.zxing2.LuminanceSource) -> <init>
    1:1:com.dcloud.zxing2.Binarizer createBinarizer(com.dcloud.zxing2.LuminanceSource) -> createBinarizer
    1:47:int estimateBlackPoint(int[]) -> estimateBlackPoint
    1:30:com.dcloud.zxing2.common.BitMatrix getBlackMatrix() -> getBlackMatrix
    1:28:com.dcloud.zxing2.common.BitArray getBlackRow(int,com.dcloud.zxing2.common.BitArray) -> getBlackRow
    1:5:void initArrays(int) -> initArrays
com.dcloud.zxing2.common.GridSampler -> com.dcloud.zxing2.common.GridSampler:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:63:void checkAndNudgePoints(com.dcloud.zxing2.common.BitMatrix,float[]) -> checkAndNudgePoints
    1:1:com.dcloud.zxing2.common.GridSampler getInstance() -> getInstance
    1:1:void setGridSampler(com.dcloud.zxing2.common.GridSampler) -> setGridSampler
com.dcloud.zxing2.common.HybridBinarizer -> com.dcloud.zxing2.common.HybridBinarizer:
    1:1:void <init>(com.dcloud.zxing2.LuminanceSource) -> <init>
    1:66:int[][] calculateBlackPoints(byte[],int,int,int,int) -> calculateBlackPoints
    1:9:void calculateThresholdForBlock(byte[],int,int,int,int,int[][],com.dcloud.zxing2.common.BitMatrix) -> calculateThresholdForBlock
    1:1:com.dcloud.zxing2.Binarizer createBinarizer(com.dcloud.zxing2.LuminanceSource) -> createBinarizer
    1:26:com.dcloud.zxing2.common.BitMatrix getBlackMatrix() -> getBlackMatrix
    1:2:void thresholdBlock(byte[],int,int,int,int,com.dcloud.zxing2.common.BitMatrix) -> thresholdBlock
com.dcloud.zxing2.common.PerspectiveTransform -> com.dcloud.zxing2.common.PerspectiveTransform:
    1:10:void <init>(float,float,float,float,float,float,float,float,float) -> <init>
    1:1:com.dcloud.zxing2.common.PerspectiveTransform buildAdjoint() -> buildAdjoint
    1:3:com.dcloud.zxing2.common.PerspectiveTransform quadrilateralToQuadrilateral(float,float,float,float,float,float,float,float,float,float,float,float,float,float,float,float) -> quadrilateralToQuadrilateral
    1:1:com.dcloud.zxing2.common.PerspectiveTransform quadrilateralToSquare(float,float,float,float,float,float,float,float) -> quadrilateralToSquare
    1:12:com.dcloud.zxing2.common.PerspectiveTransform squareToQuadrilateral(float,float,float,float,float,float,float,float) -> squareToQuadrilateral
    1:1:com.dcloud.zxing2.common.PerspectiveTransform times(com.dcloud.zxing2.common.PerspectiveTransform) -> times
    1:16:void transformPoints(float[]) -> transformPoints
    17:23:void transformPoints(float[],float[]) -> transformPoints
com.dcloud.zxing2.common.StringUtils -> com.dcloud.zxing2.common.StringUtils:
    1:9:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:161:java.lang.String guessEncoding(byte[],java.util.Map) -> guessEncoding
    1:7:java.lang.String guessEncodingSmart(byte[]) -> guessEncodingSmart
com.dcloud.zxing2.common.detector.MathUtils -> com.dcloud.zxing2.common.detector.MathUtils:
    1:1:void <init>() -> <init>
    1:1:float distance(float,float,float,float) -> distance
    2:2:float distance(int,int,int,int) -> distance
com.dcloud.zxing2.common.detector.MonochromeRectangleDetector -> com.dcloud.zxing2.common.detector.MonochromeRectangleDetector:
    1:2:void <init>(com.dcloud.zxing2.common.BitMatrix) -> <init>
    1:43:int[] blackWhiteRange(int,int,int,int,boolean) -> blackWhiteRange
    1:29:com.dcloud.zxing2.ResultPoint[] detect() -> detect
    1:59:com.dcloud.zxing2.ResultPoint findCornerFromCenter(int,int,int,int,int,int,int,int,int) -> findCornerFromCenter
com.dcloud.zxing2.common.detector.WhiteRectangleDetector -> com.dcloud.zxing2.common.detector.WhiteRectangleDetector:
    1:1:void <init>(com.dcloud.zxing2.common.BitMatrix) -> <init>
    2:12:void <init>(com.dcloud.zxing2.common.BitMatrix,int,int,int) -> <init>
    1:17:com.dcloud.zxing2.ResultPoint[] centerEdges(com.dcloud.zxing2.ResultPoint,com.dcloud.zxing2.ResultPoint,com.dcloud.zxing2.ResultPoint,com.dcloud.zxing2.ResultPoint) -> centerEdges
    1:7:boolean containsBlackPoint(int,int,int,boolean) -> containsBlackPoint
    1:208:com.dcloud.zxing2.ResultPoint[] detect() -> detect
    1:9:com.dcloud.zxing2.ResultPoint getBlackPointOnSegment(float,float,float,float) -> getBlackPointOnSegment
com.dcloud.zxing2.common.reedsolomon.GenericGF -> com.dcloud.zxing2.common.reedsolomon.GenericGF:
    1:8:void <clinit>() -> <clinit>
    1:22:void <init>(int,int,int) -> <init>
    1:6:com.dcloud.zxing2.common.reedsolomon.GenericGFPoly buildMonomial(int,int) -> buildMonomial
    1:1:int exp(int) -> exp
    1:1:int getGeneratorBase() -> getGeneratorBase
    1:1:com.dcloud.zxing2.common.reedsolomon.GenericGFPoly getOne() -> getOne
    1:1:int getSize() -> getSize
    1:1:com.dcloud.zxing2.common.reedsolomon.GenericGFPoly getZero() -> getZero
    1:2:int inverse(int) -> inverse
    1:2:int log(int) -> log
    1:1:int multiply(int,int) -> multiply
    1:1:java.lang.String toString() -> toString
com.dcloud.zxing2.common.reedsolomon.GenericGFPoly -> com.dcloud.zxing2.common.reedsolomon.GenericGFPoly:
    1:25:void <init>(com.dcloud.zxing2.common.reedsolomon.GenericGF,int[]) -> <init>
    1:28:com.dcloud.zxing2.common.reedsolomon.GenericGFPoly addOrSubtract(com.dcloud.zxing2.common.reedsolomon.GenericGFPoly) -> addOrSubtract
    1:25:com.dcloud.zxing2.common.reedsolomon.GenericGFPoly[] divide(com.dcloud.zxing2.common.reedsolomon.GenericGFPoly) -> divide
    1:14:int evaluateAt(int) -> evaluateAt
    1:1:int getCoefficient(int) -> getCoefficient
    1:1:int[] getCoefficients() -> getCoefficients
    1:1:int getDegree() -> getDegree
    1:1:boolean isZero() -> isZero
    1:23:com.dcloud.zxing2.common.reedsolomon.GenericGFPoly multiply(com.dcloud.zxing2.common.reedsolomon.GenericGFPoly) -> multiply
    24:34:com.dcloud.zxing2.common.reedsolomon.GenericGFPoly multiply(int) -> multiply
    1:9:com.dcloud.zxing2.common.reedsolomon.GenericGFPoly multiplyByMonomial(int,int) -> multiplyByMonomial
    1:34:java.lang.String toString() -> toString
com.dcloud.zxing2.common.reedsolomon.ReedSolomonDecoder -> com.dcloud.zxing2.common.reedsolomon.ReedSolomonDecoder:
    1:2:void <init>(com.dcloud.zxing2.common.reedsolomon.GenericGF) -> <init>
    1:27:void decode(int[],int) -> decode
    1:14:int[] findErrorLocations(com.dcloud.zxing2.common.reedsolomon.GenericGFPoly) -> findErrorLocations
    1:22:int[] findErrorMagnitudes(com.dcloud.zxing2.common.reedsolomon.GenericGFPoly,int[]) -> findErrorMagnitudes
    1:68:com.dcloud.zxing2.common.reedsolomon.GenericGFPoly[] runEuclideanAlgorithm(com.dcloud.zxing2.common.reedsolomon.GenericGFPoly,com.dcloud.zxing2.common.reedsolomon.GenericGFPoly,int) -> runEuclideanAlgorithm
com.dcloud.zxing2.common.reedsolomon.ReedSolomonEncoder -> com.dcloud.zxing2.common.reedsolomon.ReedSolomonEncoder:
    1:4:void <init>(com.dcloud.zxing2.common.reedsolomon.GenericGF) -> <init>
    1:12:com.dcloud.zxing2.common.reedsolomon.GenericGFPoly buildGenerator(int) -> buildGenerator
    1:18:void encode(int[],int) -> encode
com.dcloud.zxing2.common.reedsolomon.ReedSolomonException -> com.dcloud.zxing2.common.reedsolomon.ReedSolomonException:
    1:1:void <init>(java.lang.String) -> <init>
com.dcloud.zxing2.datamatrix.DataMatrixReader -> com.dcloud.zxing2.datamatrix.DataMatrixReader:
    1:1:void <clinit>() -> <clinit>
    1:5:void <init>() -> <init>
    1:1:com.dcloud.zxing2.Result decode(com.dcloud.zxing2.BinaryBitmap) -> decode
    2:19:com.dcloud.zxing2.Result decode(com.dcloud.zxing2.BinaryBitmap,java.util.Map) -> decode
    1:35:com.dcloud.zxing2.common.BitMatrix extractPureBits(com.dcloud.zxing2.common.BitMatrix) -> extractPureBits
    1:14:int moduleSize(int[],com.dcloud.zxing2.common.BitMatrix) -> moduleSize
com.dcloud.zxing2.datamatrix.DataMatrixWriter -> com.dcloud.zxing2.datamatrix.DataMatrixWriter:
    1:1:void <init>() -> <init>
    1:10:com.dcloud.zxing2.common.BitMatrix convertByteMatrixToBitMatrix(com.dcloud.zxing2.qrcode.encoder.ByteMatrix) -> convertByteMatrixToBitMatrix
    1:1:com.dcloud.zxing2.common.BitMatrix encode(java.lang.String,com.dcloud.zxing2.BarcodeFormat,int,int) -> encode
    2:53:com.dcloud.zxing2.common.BitMatrix encode(java.lang.String,com.dcloud.zxing2.BarcodeFormat,int,int,java.util.Map) -> encode
    1:46:com.dcloud.zxing2.common.BitMatrix encodeLowLevel(com.dcloud.zxing2.datamatrix.encoder.DefaultPlacement,com.dcloud.zxing2.datamatrix.encoder.SymbolInfo) -> encodeLowLevel
com.dcloud.zxing2.datamatrix.decoder.BitMatrixParser -> com.dcloud.zxing2.datamatrix.decoder.BitMatrixParser:
    1:10:void <init>(com.dcloud.zxing2.common.BitMatrix) -> <init>
    1:30:com.dcloud.zxing2.common.BitMatrix extractDataRegion(com.dcloud.zxing2.common.BitMatrix) -> extractDataRegion
    1:1:com.dcloud.zxing2.datamatrix.decoder.Version getVersion() -> getVersion
    1:64:byte[] readCodewords() -> readCodewords
    1:29:int readCorner1(int,int) -> readCorner1
    1:29:int readCorner2(int,int) -> readCorner2
    1:29:int readCorner3(int,int) -> readCorner3
    1:29:int readCorner4(int,int) -> readCorner4
    1:2:boolean readModule(int,int,int,int) -> readModule
    1:29:int readUtah(int,int,int,int) -> readUtah
    1:3:com.dcloud.zxing2.datamatrix.decoder.Version readVersion(com.dcloud.zxing2.common.BitMatrix) -> readVersion
com.dcloud.zxing2.datamatrix.decoder.DataBlock -> com.dcloud.zxing2.datamatrix.decoder.DataBlock:
    1:3:void <init>(int,byte[]) -> <init>
    1:1:byte[] getCodewords() -> getCodewords
    1:56:com.dcloud.zxing2.datamatrix.decoder.DataBlock[] getDataBlocks(byte[],com.dcloud.zxing2.datamatrix.decoder.Version) -> getDataBlocks
    1:1:int getNumDataCodewords() -> getNumDataCodewords
com.dcloud.zxing2.datamatrix.decoder.DecodedBitStreamParser -> com.dcloud.zxing2.datamatrix.decoder.DecodedBitStreamParser:
    1:25:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:55:com.dcloud.zxing2.common.DecoderResult decode(byte[]) -> decode
    1:32:void decodeAnsiX12Segment(com.dcloud.zxing2.common.BitSource,java.lang.StringBuilder) -> decodeAnsiX12Segment
    1:56:com.dcloud.zxing2.datamatrix.decoder.DecodedBitStreamParser$Mode decodeAsciiSegment(com.dcloud.zxing2.common.BitSource,java.lang.StringBuilder,java.lang.StringBuilder) -> decodeAsciiSegment
    1:34:void decodeBase256Segment(com.dcloud.zxing2.common.BitSource,java.lang.StringBuilder,java.util.Collection) -> decodeBase256Segment
    1:146:void decodeC40Segment(com.dcloud.zxing2.common.BitSource,java.lang.StringBuilder) -> decodeC40Segment
    1:23:void decodeEdifactSegment(com.dcloud.zxing2.common.BitSource,java.lang.StringBuilder) -> decodeEdifactSegment
    1:164:void decodeTextSegment(com.dcloud.zxing2.common.BitSource,java.lang.StringBuilder) -> decodeTextSegment
    1:6:void parseTwoBytes(int,int,int[]) -> parseTwoBytes
    1:1:int unrandomize255State(int,int) -> unrandomize255State
com.dcloud.zxing2.datamatrix.decoder.DecodedBitStreamParser$1 -> com.dcloud.zxing2.datamatrix.decoder.DecodedBitStreamParser$1:
    1:1:void <clinit>() -> <clinit>
com.dcloud.zxing2.datamatrix.decoder.DecodedBitStreamParser$Mode -> com.dcloud.zxing2.datamatrix.decoder.DecodedBitStreamParser$Mode:
    1:8:void <clinit>() -> <clinit>
    1:1:void <init>(java.lang.String,int) -> <init>
    1:1:com.dcloud.zxing2.datamatrix.decoder.DecodedBitStreamParser$Mode valueOf(java.lang.String) -> valueOf
    1:1:com.dcloud.zxing2.datamatrix.decoder.DecodedBitStreamParser$Mode[] values() -> values
com.dcloud.zxing2.datamatrix.decoder.Decoder -> com.dcloud.zxing2.datamatrix.decoder.Decoder:
    1:2:void <init>() -> <init>
    1:17:void correctErrors(byte[],int) -> correctErrors
    1:10:com.dcloud.zxing2.common.DecoderResult decode(boolean[][]) -> decode
    11:41:com.dcloud.zxing2.common.DecoderResult decode(com.dcloud.zxing2.common.BitMatrix) -> decode
com.dcloud.zxing2.datamatrix.decoder.Version -> com.dcloud.zxing2.datamatrix.decoder.Version:
    1:1:void <clinit>() -> <clinit>
    1:16:void <init>(int,int,int,int,int,com.dcloud.zxing2.datamatrix.decoder.Version$ECBlocks) -> <init>
    1:1:com.dcloud.zxing2.datamatrix.decoder.Version[] buildVersions() -> buildVersions
    1:1:int getDataRegionSizeColumns() -> getDataRegionSizeColumns
    1:1:int getDataRegionSizeRows() -> getDataRegionSizeRows
    1:1:com.dcloud.zxing2.datamatrix.decoder.Version$ECBlocks getECBlocks() -> getECBlocks
    1:1:int getSymbolSizeColumns() -> getSymbolSizeColumns
    1:1:int getSymbolSizeRows() -> getSymbolSizeRows
    1:1:int getTotalCodewords() -> getTotalCodewords
    1:8:com.dcloud.zxing2.datamatrix.decoder.Version getVersionForDimensions(int,int) -> getVersionForDimensions
    1:1:int getVersionNumber() -> getVersionNumber
    1:1:java.lang.String toString() -> toString
com.dcloud.zxing2.datamatrix.decoder.Version$ECB -> com.dcloud.zxing2.datamatrix.decoder.Version$ECB:
    1:1:void <init>(int,int,com.dcloud.zxing2.datamatrix.decoder.Version$1) -> <init>
    2:4:void <init>(int,int) -> <init>
    1:1:int getCount() -> getCount
    1:1:int getDataCodewords() -> getDataCodewords
com.dcloud.zxing2.datamatrix.decoder.Version$ECBlocks -> com.dcloud.zxing2.datamatrix.decoder.Version$ECBlocks:
    1:1:void <init>(int,com.dcloud.zxing2.datamatrix.decoder.Version$ECB,com.dcloud.zxing2.datamatrix.decoder.Version$1) -> <init>
    2:2:void <init>(int,com.dcloud.zxing2.datamatrix.decoder.Version$ECB,com.dcloud.zxing2.datamatrix.decoder.Version$ECB,com.dcloud.zxing2.datamatrix.decoder.Version$1) -> <init>
    3:5:void <init>(int,com.dcloud.zxing2.datamatrix.decoder.Version$ECB) -> <init>
    6:8:void <init>(int,com.dcloud.zxing2.datamatrix.decoder.Version$ECB,com.dcloud.zxing2.datamatrix.decoder.Version$ECB) -> <init>
    1:1:com.dcloud.zxing2.datamatrix.decoder.Version$ECB[] getECBlocks() -> getECBlocks
    1:1:int getECCodewords() -> getECCodewords
com.dcloud.zxing2.datamatrix.detector.Detector -> com.dcloud.zxing2.datamatrix.detector.Detector:
    1:3:void <init>(com.dcloud.zxing2.common.BitMatrix) -> <init>
    1:31:com.dcloud.zxing2.ResultPoint correctTopRight(com.dcloud.zxing2.ResultPoint,com.dcloud.zxing2.ResultPoint,com.dcloud.zxing2.ResultPoint,com.dcloud.zxing2.ResultPoint,int) -> correctTopRight
    1:28:com.dcloud.zxing2.ResultPoint correctTopRightRectangular(com.dcloud.zxing2.ResultPoint,com.dcloud.zxing2.ResultPoint,com.dcloud.zxing2.ResultPoint,com.dcloud.zxing2.ResultPoint,int,int) -> correctTopRightRectangular
    1:197:com.dcloud.zxing2.common.DetectorResult detect() -> detect
    1:1:int distance(com.dcloud.zxing2.ResultPoint,com.dcloud.zxing2.ResultPoint) -> distance
    1:2:void increment(java.util.Map,com.dcloud.zxing2.ResultPoint) -> increment
    1:1:boolean isValid(com.dcloud.zxing2.ResultPoint) -> isValid
    1:22:com.dcloud.zxing2.common.BitMatrix sampleGrid(com.dcloud.zxing2.common.BitMatrix,com.dcloud.zxing2.ResultPoint,com.dcloud.zxing2.ResultPoint,com.dcloud.zxing2.ResultPoint,com.dcloud.zxing2.ResultPoint,int,int) -> sampleGrid
    1:37:com.dcloud.zxing2.datamatrix.detector.Detector$ResultPointsAndTransitions transitionsBetween(com.dcloud.zxing2.ResultPoint,com.dcloud.zxing2.ResultPoint) -> transitionsBetween
com.dcloud.zxing2.datamatrix.detector.Detector$ResultPointsAndTransitions -> com.dcloud.zxing2.datamatrix.detector.Detector$ResultPointsAndTransitions:
    1:1:void <init>(com.dcloud.zxing2.ResultPoint,com.dcloud.zxing2.ResultPoint,int,com.dcloud.zxing2.datamatrix.detector.Detector$1) -> <init>
    2:5:void <init>(com.dcloud.zxing2.ResultPoint,com.dcloud.zxing2.ResultPoint,int) -> <init>
    1:1:com.dcloud.zxing2.ResultPoint getFrom() -> getFrom
    1:1:com.dcloud.zxing2.ResultPoint getTo() -> getTo
    1:1:int getTransitions() -> getTransitions
    1:1:java.lang.String toString() -> toString
com.dcloud.zxing2.datamatrix.detector.Detector$ResultPointsAndTransitionsComparator -> com.dcloud.zxing2.datamatrix.detector.Detector$ResultPointsAndTransitionsComparator:
    1:1:void <init>() -> <init>
    2:2:void <init>(com.dcloud.zxing2.datamatrix.detector.Detector$1) -> <init>
    1:1:int compare(java.lang.Object,java.lang.Object) -> compare
    2:2:int compare(com.dcloud.zxing2.datamatrix.detector.Detector$ResultPointsAndTransitions,com.dcloud.zxing2.datamatrix.detector.Detector$ResultPointsAndTransitions) -> compare
com.dcloud.zxing2.datamatrix.encoder.ASCIIEncoder -> com.dcloud.zxing2.datamatrix.encoder.ASCIIEncoder:
    1:1:void <init>() -> <init>
    1:83:void encode(com.dcloud.zxing2.datamatrix.encoder.EncoderContext) -> encode
    1:5:char encodeASCIIDigits(char,char) -> encodeASCIIDigits
com.dcloud.zxing2.datamatrix.encoder.Base256Encoder -> com.dcloud.zxing2.datamatrix.encoder.Base256Encoder:
    1:1:void <init>() -> <init>
    1:35:void encode(com.dcloud.zxing2.datamatrix.encoder.EncoderContext) -> encode
    1:1:char randomize255State(char,int) -> randomize255State
com.dcloud.zxing2.datamatrix.encoder.C40Encoder -> com.dcloud.zxing2.datamatrix.encoder.C40Encoder:
    1:1:void <init>() -> <init>
    1:6:int backtrackOneCharacter(com.dcloud.zxing2.datamatrix.encoder.EncoderContext,java.lang.StringBuilder,java.lang.StringBuilder,int) -> backtrackOneCharacter
    1:39:void encode(com.dcloud.zxing2.datamatrix.encoder.EncoderContext) -> encode
    1:35:int encodeChar(char,java.lang.StringBuilder) -> encodeChar
    1:7:java.lang.String encodeToCodewords(java.lang.CharSequence,int) -> encodeToCodewords
    1:36:void handleEOD(com.dcloud.zxing2.datamatrix.encoder.EncoderContext,java.lang.StringBuilder) -> handleEOD
    1:2:void writeNextTriplet(com.dcloud.zxing2.datamatrix.encoder.EncoderContext,java.lang.StringBuilder) -> writeNextTriplet
com.dcloud.zxing2.datamatrix.encoder.DataMatrixSymbolInfo144 -> com.dcloud.zxing2.datamatrix.encoder.DataMatrixSymbolInfo144:
    1:1:void <init>() -> <init>
com.dcloud.zxing2.datamatrix.encoder.DefaultPlacement -> com.dcloud.zxing2.datamatrix.encoder.DefaultPlacement:
    1:6:void <init>(java.lang.CharSequence,int,int) -> <init>
    1:8:void corner1(int) -> corner1
    1:8:void corner2(int) -> corner2
    1:8:void corner3(int) -> corner3
    1:8:void corner4(int) -> corner4
    1:1:boolean getBit(int,int) -> getBit
    1:1:byte[] getBits() -> getBits
    1:1:int getNumcols() -> getNumcols
    1:1:int getNumrows() -> getNumrows
    1:1:boolean hasBit(int,int) -> hasBit
    1:11:void module(int,int,int,int) -> module
    1:41:void place() -> place
    1:1:void setBit(int,int,boolean) -> setBit
    1:8:void utah(int,int,int) -> utah
com.dcloud.zxing2.datamatrix.encoder.EdifactEncoder -> com.dcloud.zxing2.datamatrix.encoder.EdifactEncoder:
    1:1:void <init>() -> <init>
    1:20:void encode(com.dcloud.zxing2.datamatrix.encoder.EncoderContext) -> encode
    1:5:void encodeChar(char,java.lang.StringBuilder) -> encodeChar
    1:23:java.lang.String encodeToCodewords(java.lang.CharSequence,int) -> encodeToCodewords
    1:121:void handleEOD(com.dcloud.zxing2.datamatrix.encoder.EncoderContext,java.lang.CharSequence) -> handleEOD
com.dcloud.zxing2.datamatrix.encoder.EncoderContext -> com.dcloud.zxing2.datamatrix.encoder.EncoderContext:
    1:15:void <init>(java.lang.String) -> <init>
    1:1:int getCodewordCount() -> getCodewordCount
    1:1:java.lang.StringBuilder getCodewords() -> getCodewords
    1:1:char getCurrent() -> getCurrent
    1:1:char getCurrentChar() -> getCurrentChar
    1:1:java.lang.String getMessage() -> getMessage
    1:1:int getNewEncoding() -> getNewEncoding
    1:1:int getRemainingCharacters() -> getRemainingCharacters
    1:1:com.dcloud.zxing2.datamatrix.encoder.SymbolInfo getSymbolInfo() -> getSymbolInfo
    1:1:int getTotalMessageCharCount() -> getTotalMessageCharCount
    1:1:boolean hasMoreCharacters() -> hasMoreCharacters
    1:1:void resetEncoderSignal() -> resetEncoderSignal
    1:1:void resetSymbolInfo() -> resetSymbolInfo
    1:2:void setSizeConstraints(com.dcloud.zxing2.Dimension,com.dcloud.zxing2.Dimension) -> setSizeConstraints
    1:1:void setSkipAtEnd(int) -> setSkipAtEnd
    1:1:void setSymbolShape(com.dcloud.zxing2.datamatrix.encoder.SymbolShapeHint) -> setSymbolShape
    1:1:void signalEncoderChange(int) -> signalEncoderChange
    1:1:void updateSymbolInfo() -> updateSymbolInfo
    2:3:void updateSymbolInfo(int) -> updateSymbolInfo
    1:1:void writeCodeword(char) -> writeCodeword
    1:1:void writeCodewords(java.lang.String) -> writeCodewords
com.dcloud.zxing2.datamatrix.encoder.ErrorCorrection -> com.dcloud.zxing2.datamatrix.encoder.ErrorCorrection:
    1:56:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:1:java.lang.String createECCBlock(java.lang.CharSequence,int) -> createECCBlock
    2:37:java.lang.String createECCBlock(java.lang.CharSequence,int,int,int) -> createECCBlock
    1:37:java.lang.String encodeECC200(java.lang.String,com.dcloud.zxing2.datamatrix.encoder.SymbolInfo) -> encodeECC200
com.dcloud.zxing2.datamatrix.encoder.HighLevelEncoder -> com.dcloud.zxing2.datamatrix.encoder.HighLevelEncoder:
    1:1:void <init>() -> <init>
    1:9:int determineConsecutiveDigitCount(java.lang.CharSequence,int) -> determineConsecutiveDigitCount
    1:1:java.lang.String encodeHighLevel(java.lang.String) -> encodeHighLevel
    2:46:java.lang.String encodeHighLevel(java.lang.String,com.dcloud.zxing2.datamatrix.encoder.SymbolShapeHint,com.dcloud.zxing2.Dimension,com.dcloud.zxing2.Dimension) -> encodeHighLevel
    1:10:int findMinimums(float[],int[],int,byte[]) -> findMinimums
    1:1:int getMinimumCount(byte[]) -> getMinimumCount
    1:3:void illegalCharacter(char) -> illegalCharacter
    1:1:boolean isNativeX12(char) -> isNativeX12
    1:139:int lookAheadTest(java.lang.CharSequence,int,int) -> lookAheadTest
    1:1:char randomize253State(char,int) -> randomize253State
com.dcloud.zxing2.datamatrix.encoder.SymbolInfo -> com.dcloud.zxing2.datamatrix.encoder.SymbolInfo:
    1:37:void <clinit>() -> <clinit>
    1:1:void <init>(boolean,int,int,int,int,int) -> <init>
    2:10:void <init>(boolean,int,int,int,int,int,int,int) -> <init>
    1:1:int getCodewordCount() -> getCodewordCount
    1:1:int getDataCapacity() -> getDataCapacity
    1:1:int getDataLengthForInterleavedBlock(int) -> getDataLengthForInterleavedBlock
    1:1:int getErrorCodewords() -> getErrorCodewords
    1:1:int getErrorLengthForInterleavedBlock(int) -> getErrorLengthForInterleavedBlock
    1:13:int getHorizontalDataRegions() -> getHorizontalDataRegions
    1:1:int getInterleavedBlockCount() -> getInterleavedBlockCount
    1:1:int getSymbolDataHeight() -> getSymbolDataHeight
    1:1:int getSymbolDataWidth() -> getSymbolDataWidth
    1:1:int getSymbolHeight() -> getSymbolHeight
    1:1:int getSymbolWidth() -> getSymbolWidth
    1:13:int getVerticalDataRegions() -> getVerticalDataRegions
    1:1:com.dcloud.zxing2.datamatrix.encoder.SymbolInfo lookup(int) -> lookup
    2:2:com.dcloud.zxing2.datamatrix.encoder.SymbolInfo lookup(int,com.dcloud.zxing2.datamatrix.encoder.SymbolShapeHint) -> lookup
    3:5:com.dcloud.zxing2.datamatrix.encoder.SymbolInfo lookup(int,boolean,boolean) -> lookup
    6:6:com.dcloud.zxing2.datamatrix.encoder.SymbolInfo lookup(int,com.dcloud.zxing2.datamatrix.encoder.SymbolShapeHint,boolean) -> lookup
    7:29:com.dcloud.zxing2.datamatrix.encoder.SymbolInfo lookup(int,com.dcloud.zxing2.datamatrix.encoder.SymbolShapeHint,com.dcloud.zxing2.Dimension,com.dcloud.zxing2.Dimension,boolean) -> lookup
    1:1:void overrideSymbolSet(com.dcloud.zxing2.datamatrix.encoder.SymbolInfo[]) -> overrideSymbolSet
    1:7:java.lang.String toString() -> toString
com.dcloud.zxing2.datamatrix.encoder.SymbolShapeHint -> com.dcloud.zxing2.datamatrix.encoder.SymbolShapeHint:
    1:4:void <clinit>() -> <clinit>
    1:1:void <init>(java.lang.String,int) -> <init>
    1:1:com.dcloud.zxing2.datamatrix.encoder.SymbolShapeHint valueOf(java.lang.String) -> valueOf
    1:1:com.dcloud.zxing2.datamatrix.encoder.SymbolShapeHint[] values() -> values
com.dcloud.zxing2.datamatrix.encoder.TextEncoder -> com.dcloud.zxing2.datamatrix.encoder.TextEncoder:
    1:1:void <init>() -> <init>
    1:53:int encodeChar(char,java.lang.StringBuilder) -> encodeChar
com.dcloud.zxing2.datamatrix.encoder.X12Encoder -> com.dcloud.zxing2.datamatrix.encoder.X12Encoder:
    1:1:void <init>() -> <init>
    1:19:void encode(com.dcloud.zxing2.datamatrix.encoder.EncoderContext) -> encode
    1:13:int encodeChar(char,java.lang.StringBuilder) -> encodeChar
    1:10:void handleEOD(com.dcloud.zxing2.datamatrix.encoder.EncoderContext,java.lang.StringBuilder) -> handleEOD
com.dcloud.zxing2.maxicode.MaxiCodeReader -> com.dcloud.zxing2.maxicode.MaxiCodeReader:
    1:1:void <clinit>() -> <clinit>
    1:7:void <init>() -> <init>
    1:1:com.dcloud.zxing2.Result decode(com.dcloud.zxing2.BinaryBitmap) -> decode
    2:15:com.dcloud.zxing2.Result decode(com.dcloud.zxing2.BinaryBitmap,java.util.Map) -> decode
    1:19:com.dcloud.zxing2.common.BitMatrix extractPureBits(com.dcloud.zxing2.common.BitMatrix) -> extractPureBits
com.dcloud.zxing2.maxicode.decoder.BitMatrixParser -> com.dcloud.zxing2.maxicode.decoder.BitMatrixParser:
    1:1:void <clinit>() -> <clinit>
    1:2:void <init>(com.dcloud.zxing2.common.BitMatrix) -> <init>
    1:9:byte[] readCodewords() -> readCodewords
com.dcloud.zxing2.maxicode.decoder.DecodedBitStreamParser -> com.dcloud.zxing2.maxicode.decoder.DecodedBitStreamParser:
    1:4:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:50:com.dcloud.zxing2.common.DecoderResult decode(byte[],int) -> decode
    1:1:int getBit(int,byte[]) -> getBit
    1:1:int getCountry(byte[]) -> getCountry
    1:7:int getInt(byte[],byte[]) -> getInt
    1:60:java.lang.String getMessage(byte[],int,int) -> getMessage
    1:1:int getPostCode2(byte[]) -> getPostCode2
    1:1:int getPostCode2Length(byte[]) -> getPostCode2Length
    1:9:java.lang.String getPostCode3(byte[]) -> getPostCode3
    1:1:int getServiceClass(byte[]) -> getServiceClass
com.dcloud.zxing2.maxicode.decoder.Decoder -> com.dcloud.zxing2.maxicode.decoder.Decoder:
    1:2:void <init>() -> <init>
    1:17:void correctErrors(byte[],int,int,int,int) -> correctErrors
    1:1:com.dcloud.zxing2.common.DecoderResult decode(com.dcloud.zxing2.common.BitMatrix) -> decode
    2:42:com.dcloud.zxing2.common.DecoderResult decode(com.dcloud.zxing2.common.BitMatrix,java.util.Map) -> decode
com.dcloud.zxing2.multi.ByQuadrantReader -> com.dcloud.zxing2.multi.ByQuadrantReader:
    1:2:void <init>(com.dcloud.zxing2.Reader) -> <init>
    1:1:com.dcloud.zxing2.Result decode(com.dcloud.zxing2.BinaryBitmap) -> decode
    2:42:com.dcloud.zxing2.Result decode(com.dcloud.zxing2.BinaryBitmap,java.util.Map) -> decode
    1:3:void makeAbsolute(com.dcloud.zxing2.ResultPoint[],int,int) -> makeAbsolute
    1:1:void reset() -> reset
com.dcloud.zxing2.multi.GenericMultipleBarcodeReader -> com.dcloud.zxing2.multi.GenericMultipleBarcodeReader:
    1:2:void <init>(com.dcloud.zxing2.Reader) -> <init>
    1:1:com.dcloud.zxing2.Result[] decodeMultiple(com.dcloud.zxing2.BinaryBitmap) -> decodeMultiple
    2:8:com.dcloud.zxing2.Result[] decodeMultiple(com.dcloud.zxing2.BinaryBitmap,java.util.Map) -> decodeMultiple
    1:68:void doDecodeMultiple(com.dcloud.zxing2.BinaryBitmap,java.util.Map,java.util.List,int,int,int) -> doDecodeMultiple
    1:13:com.dcloud.zxing2.Result translateResultPoints(com.dcloud.zxing2.Result,int,int) -> translateResultPoints
com.dcloud.zxing2.multi.qrcode.QRCodeMultiReader -> com.dcloud.zxing2.multi.qrcode.QRCodeMultiReader:
    1:2:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:1:com.dcloud.zxing2.Result[] decodeMultiple(com.dcloud.zxing2.BinaryBitmap) -> decodeMultiple
    2:41:com.dcloud.zxing2.Result[] decodeMultiple(com.dcloud.zxing2.BinaryBitmap,java.util.Map) -> decodeMultiple
    1:60:java.util.List processStructuredAppend(java.util.List) -> processStructuredAppend
com.dcloud.zxing2.multi.qrcode.QRCodeMultiReader$SAComparator -> com.dcloud.zxing2.multi.qrcode.QRCodeMultiReader$SAComparator:
    1:1:void <init>() -> <init>
    2:2:void <init>(com.dcloud.zxing2.multi.qrcode.QRCodeMultiReader$1) -> <init>
    1:1:int compare(java.lang.Object,java.lang.Object) -> compare
    2:3:int compare(com.dcloud.zxing2.Result,com.dcloud.zxing2.Result) -> compare
com.dcloud.zxing2.multi.qrcode.detector.MultiDetector -> com.dcloud.zxing2.multi.qrcode.detector.MultiDetector:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>(com.dcloud.zxing2.common.BitMatrix) -> <init>
    1:23:com.dcloud.zxing2.common.DetectorResult[] detectMulti(java.util.Map) -> detectMulti
com.dcloud.zxing2.multi.qrcode.detector.MultiFinderPatternFinder -> com.dcloud.zxing2.multi.qrcode.detector.MultiFinderPatternFinder:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>(com.dcloud.zxing2.common.BitMatrix) -> <init>
    2:2:void <init>(com.dcloud.zxing2.common.BitMatrix,com.dcloud.zxing2.ResultPointCallback) -> <init>
    1:76:com.dcloud.zxing2.qrcode.detector.FinderPatternInfo[] findMulti(java.util.Map) -> findMulti
    1:123:com.dcloud.zxing2.qrcode.detector.FinderPattern[][] selectMutipleBestPatterns() -> selectMutipleBestPatterns
com.dcloud.zxing2.multi.qrcode.detector.MultiFinderPatternFinder$ModuleSizeComparator -> com.dcloud.zxing2.multi.qrcode.detector.MultiFinderPatternFinder$ModuleSizeComparator:
    1:1:void <init>() -> <init>
    2:2:void <init>(com.dcloud.zxing2.multi.qrcode.detector.MultiFinderPatternFinder$1) -> <init>
    1:1:int compare(java.lang.Object,java.lang.Object) -> compare
    2:2:int compare(com.dcloud.zxing2.qrcode.detector.FinderPattern,com.dcloud.zxing2.qrcode.detector.FinderPattern) -> compare
com.dcloud.zxing2.oned.CodaBarReader -> com.dcloud.zxing2.oned.CodaBarReader:
    1:18:void <clinit>() -> <clinit>
    1:4:void <init>() -> <init>
    1:1:boolean arrayContains(char[],char) -> arrayContains
    1:6:void counterAppend(int) -> counterAppend
    1:79:com.dcloud.zxing2.Result decodeRow(int,com.dcloud.zxing2.common.BitArray,java.util.Map) -> decodeRow
    1:15:int findStartPattern() -> findStartPattern
    1:21:void setCounters(com.dcloud.zxing2.common.BitArray) -> setCounters
    1:44:int toNarrowWidePattern(int) -> toNarrowWidePattern
    1:48:void validatePattern(int) -> validatePattern
com.dcloud.zxing2.oned.CodaBarWriter -> com.dcloud.zxing2.oned.CodaBarWriter:
    1:4:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:91:boolean[] encode(java.lang.String) -> encode
com.dcloud.zxing2.oned.Code128Reader -> com.dcloud.zxing2.oned.Code128Reader:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:16:int decodeCode(com.dcloud.zxing2.common.BitArray,int[],int) -> decodeCode
    1:297:com.dcloud.zxing2.Result decodeRow(int,com.dcloud.zxing2.common.BitArray,java.util.Map) -> decodeRow
    1:42:int[] findStartPattern(com.dcloud.zxing2.common.BitArray) -> findStartPattern
com.dcloud.zxing2.oned.Code128Writer -> com.dcloud.zxing2.oned.Code128Writer:
    1:1:void <init>() -> <init>
    1:5:com.dcloud.zxing2.common.BitMatrix encode(java.lang.String,com.dcloud.zxing2.BarcodeFormat,int,int,java.util.Map) -> encode
    6:120:boolean[] encode(java.lang.String) -> encode
    1:3:boolean isDigits(java.lang.CharSequence,int,int) -> isDigits
com.dcloud.zxing2.oned.Code39Reader -> com.dcloud.zxing2.oned.Code39Reader:
    1:9:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    2:2:void <init>(boolean) -> <init>
    3:7:void <init>(boolean,boolean) -> <init>
    1:152:java.lang.String decodeExtended(java.lang.CharSequence) -> decodeExtended
    1:73:com.dcloud.zxing2.Result decodeRow(int,com.dcloud.zxing2.common.BitArray,java.util.Map) -> decodeRow
    1:31:int[] findAsteriskPattern(com.dcloud.zxing2.common.BitArray,int[]) -> findAsteriskPattern
    1:6:char patternToChar(int) -> patternToChar
    1:28:int toNarrowWidePattern(int[]) -> toNarrowWidePattern
com.dcloud.zxing2.oned.Code39Writer -> com.dcloud.zxing2.oned.Code39Writer:
    1:1:void <init>() -> <init>
    1:5:com.dcloud.zxing2.common.BitMatrix encode(java.lang.String,com.dcloud.zxing2.BarcodeFormat,int,int,java.util.Map) -> encode
    6:42:boolean[] encode(java.lang.String) -> encode
    1:1:void toIntArray(int,int[]) -> toIntArray
com.dcloud.zxing2.oned.Code93Reader -> com.dcloud.zxing2.oned.Code93Reader:
    1:15:void <clinit>() -> <clinit>
    1:3:void <init>() -> <init>
    1:3:void checkChecksums(java.lang.CharSequence) -> checkChecksums
    1:7:void checkOneChecksum(java.lang.CharSequence,int,int) -> checkOneChecksum
    1:151:java.lang.String decodeExtended(java.lang.CharSequence) -> decodeExtended
    1:56:com.dcloud.zxing2.Result decodeRow(int,com.dcloud.zxing2.common.BitArray,java.util.Map) -> decodeRow
    1:31:int[] findAsteriskPattern(com.dcloud.zxing2.common.BitArray) -> findAsteriskPattern
    1:6:char patternToChar(int) -> patternToChar
    1:8:int toPattern(int[]) -> toPattern
com.dcloud.zxing2.oned.Code93Writer -> com.dcloud.zxing2.oned.Code93Writer:
    1:1:void <init>() -> <init>
    1:2:int appendPattern(boolean[],int,int[],boolean) -> appendPattern
    1:8:int computeChecksumIndex(java.lang.String,int) -> computeChecksumIndex
    1:5:com.dcloud.zxing2.common.BitMatrix encode(java.lang.String,com.dcloud.zxing2.BarcodeFormat,int,int,java.util.Map) -> encode
    6:47:boolean[] encode(java.lang.String) -> encode
    1:1:void toIntArray(int,int[]) -> toIntArray
com.dcloud.zxing2.oned.EAN13Reader -> com.dcloud.zxing2.oned.EAN13Reader:
    1:1:void <clinit>() -> <clinit>
    1:2:void <init>() -> <init>
    1:30:int decodeMiddle(com.dcloud.zxing2.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    1:6:void determineFirstDigit(java.lang.StringBuilder,int) -> determineFirstDigit
    1:1:com.dcloud.zxing2.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
com.dcloud.zxing2.oned.EAN13Writer -> com.dcloud.zxing2.oned.EAN13Writer:
    1:1:void <init>() -> <init>
    1:6:com.dcloud.zxing2.common.BitMatrix encode(java.lang.String,com.dcloud.zxing2.BarcodeFormat,int,int,java.util.Map) -> encode
    7:47:boolean[] encode(java.lang.String) -> encode
com.dcloud.zxing2.oned.EAN8Reader -> com.dcloud.zxing2.oned.EAN8Reader:
    1:2:void <init>() -> <init>
    1:23:int decodeMiddle(com.dcloud.zxing2.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    1:1:com.dcloud.zxing2.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
com.dcloud.zxing2.oned.EAN8Writer -> com.dcloud.zxing2.oned.EAN8Writer:
    1:1:void <init>() -> <init>
    1:7:com.dcloud.zxing2.common.BitMatrix encode(java.lang.String,com.dcloud.zxing2.BarcodeFormat,int,int,java.util.Map) -> encode
    8:31:boolean[] encode(java.lang.String) -> encode
com.dcloud.zxing2.oned.EANManufacturerOrgSupport -> com.dcloud.zxing2.oned.EANManufacturerOrgSupport:
    1:4:void <init>() -> <init>
    1:2:void add(int[],java.lang.String) -> add
    0:109:void initIfNeeded() -> initIfNeeded
    1:12:java.lang.String lookupCountryIdentifier(java.lang.String) -> lookupCountryIdentifier
com.dcloud.zxing2.oned.ITFReader -> com.dcloud.zxing2.oned.ITFReader:
    1:18:void <clinit>() -> <clinit>
    1:13:void <init>() -> <init>
    1:13:int decodeDigit(int[]) -> decodeDigit
    1:21:int[] decodeEnd(com.dcloud.zxing2.common.BitArray) -> decodeEnd
    1:21:void decodeMiddle(com.dcloud.zxing2.common.BitArray,int,int,java.lang.StringBuilder) -> decodeMiddle
    1:39:com.dcloud.zxing2.Result decodeRow(int,com.dcloud.zxing2.common.BitArray,java.util.Map) -> decodeRow
    1:9:int[] decodeStart(com.dcloud.zxing2.common.BitArray) -> decodeStart
    1:28:int[] findGuardPattern(com.dcloud.zxing2.common.BitArray,int,int[]) -> findGuardPattern
    1:4:int skipWhiteSpace(com.dcloud.zxing2.common.BitArray) -> skipWhiteSpace
    1:14:void validateQuietZone(com.dcloud.zxing2.common.BitArray,int) -> validateQuietZone
com.dcloud.zxing2.oned.ITFWriter -> com.dcloud.zxing2.oned.ITFWriter:
    1:2:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:6:com.dcloud.zxing2.common.BitMatrix encode(java.lang.String,com.dcloud.zxing2.BarcodeFormat,int,int,java.util.Map) -> encode
    7:29:boolean[] encode(java.lang.String) -> encode
com.dcloud.zxing2.oned.MultiFormatOneDReader -> com.dcloud.zxing2.oned.MultiFormatOneDReader:
    1:47:void <init>(java.util.Map) -> <init>
    1:9:com.dcloud.zxing2.Result decodeRow(int,com.dcloud.zxing2.common.BitArray,java.util.Map) -> decodeRow
    1:2:void reset() -> reset
com.dcloud.zxing2.oned.MultiFormatUPCEANReader -> com.dcloud.zxing2.oned.MultiFormatUPCEANReader:
    1:25:void <init>(java.util.Map) -> <init>
    1:41:com.dcloud.zxing2.Result decodeRow(int,com.dcloud.zxing2.common.BitArray,java.util.Map) -> decodeRow
    1:2:void reset() -> reset
com.dcloud.zxing2.oned.OneDReader -> com.dcloud.zxing2.oned.OneDReader:
    1:1:void <init>() -> <init>
    1:1:com.dcloud.zxing2.Result decode(com.dcloud.zxing2.BinaryBitmap) -> decode
    2:27:com.dcloud.zxing2.Result decode(com.dcloud.zxing2.BinaryBitmap,java.util.Map) -> decode
    1:70:com.dcloud.zxing2.Result doDecode(com.dcloud.zxing2.BinaryBitmap,java.util.Map) -> doDecode
    1:20:float patternMatchVariance(int[],int[],float) -> patternMatchVariance
    1:28:void recordPattern(com.dcloud.zxing2.common.BitArray,int,int[]) -> recordPattern
    1:13:void recordPatternInReverse(com.dcloud.zxing2.common.BitArray,int,int[]) -> recordPatternInReverse
com.dcloud.zxing2.oned.OneDimensionalCodeWriter -> com.dcloud.zxing2.oned.OneDimensionalCodeWriter:
    1:1:void <init>() -> <init>
    1:3:int appendPattern(boolean[],int,int[],boolean) -> appendPattern
    1:1:com.dcloud.zxing2.common.BitMatrix encode(java.lang.String,com.dcloud.zxing2.BarcodeFormat,int,int) -> encode
    2:19:com.dcloud.zxing2.common.BitMatrix encode(java.lang.String,com.dcloud.zxing2.BarcodeFormat,int,int,java.util.Map) -> encode
    1:13:com.dcloud.zxing2.common.BitMatrix renderResult(boolean[],int,int,int) -> renderResult
com.dcloud.zxing2.oned.UPCAReader -> com.dcloud.zxing2.oned.UPCAReader:
    1:3:void <init>() -> <init>
    1:1:com.dcloud.zxing2.Result decode(com.dcloud.zxing2.BinaryBitmap) -> decode
    2:2:com.dcloud.zxing2.Result decode(com.dcloud.zxing2.BinaryBitmap,java.util.Map) -> decode
    1:1:int decodeMiddle(com.dcloud.zxing2.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    1:1:com.dcloud.zxing2.Result decodeRow(int,com.dcloud.zxing2.common.BitArray,int[],java.util.Map) -> decodeRow
    2:2:com.dcloud.zxing2.Result decodeRow(int,com.dcloud.zxing2.common.BitArray,java.util.Map) -> decodeRow
    1:1:com.dcloud.zxing2.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
    1:5:com.dcloud.zxing2.Result maybeReturnResult(com.dcloud.zxing2.Result) -> maybeReturnResult
com.dcloud.zxing2.oned.UPCAWriter -> com.dcloud.zxing2.oned.UPCAWriter:
    1:3:void <init>() -> <init>
    1:1:com.dcloud.zxing2.common.BitMatrix encode(java.lang.String,com.dcloud.zxing2.BarcodeFormat,int,int) -> encode
    2:6:com.dcloud.zxing2.common.BitMatrix encode(java.lang.String,com.dcloud.zxing2.BarcodeFormat,int,int,java.util.Map) -> encode
    1:15:java.lang.String preencode(java.lang.String) -> preencode
com.dcloud.zxing2.oned.UPCEANExtension2Support -> com.dcloud.zxing2.oned.UPCEANExtension2Support:
    1:4:void <init>() -> <init>
    1:33:int decodeMiddle(com.dcloud.zxing2.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    1:17:com.dcloud.zxing2.Result decodeRow(int,com.dcloud.zxing2.common.BitArray,int[]) -> decodeRow
    1:5:java.util.Map parseExtensionString(java.lang.String) -> parseExtensionString
com.dcloud.zxing2.oned.UPCEANExtension5Support -> com.dcloud.zxing2.oned.UPCEANExtension5Support:
    1:1:void <clinit>() -> <clinit>
    1:8:void <init>() -> <init>
    1:34:int decodeMiddle(com.dcloud.zxing2.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    1:17:com.dcloud.zxing2.Result decodeRow(int,com.dcloud.zxing2.common.BitArray,int[]) -> decodeRow
    1:5:int determineCheckDigit(int) -> determineCheckDigit
    1:11:int extensionChecksum(java.lang.CharSequence) -> extensionChecksum
    1:32:java.lang.String parseExtension5String(java.lang.String) -> parseExtension5String
    1:9:java.util.Map parseExtensionString(java.lang.String) -> parseExtensionString
com.dcloud.zxing2.oned.UPCEANExtensionSupport -> com.dcloud.zxing2.oned.UPCEANExtensionSupport:
    1:1:void <clinit>() -> <clinit>
    1:6:void <init>() -> <init>
    1:5:com.dcloud.zxing2.Result decodeRow(int,com.dcloud.zxing2.common.BitArray,int) -> decodeRow
com.dcloud.zxing2.oned.UPCEANReader -> com.dcloud.zxing2.oned.UPCEANReader:
    1:41:void <clinit>() -> <clinit>
    1:4:void <init>() -> <init>
    1:1:boolean checkChecksum(java.lang.String) -> checkChecksum
    1:22:boolean checkStandardUPCEANChecksum(java.lang.CharSequence) -> checkStandardUPCEANChecksum
    1:16:int decodeDigit(com.dcloud.zxing2.common.BitArray,int[],int,int[][]) -> decodeDigit
    1:1:int[] decodeEnd(com.dcloud.zxing2.common.BitArray,int) -> decodeEnd
    1:1:com.dcloud.zxing2.Result decodeRow(int,com.dcloud.zxing2.common.BitArray,java.util.Map) -> decodeRow
    2:90:com.dcloud.zxing2.Result decodeRow(int,com.dcloud.zxing2.common.BitArray,int[],java.util.Map) -> decodeRow
    1:1:int[] findGuardPattern(com.dcloud.zxing2.common.BitArray,int,boolean,int[]) -> findGuardPattern
    2:28:int[] findGuardPattern(com.dcloud.zxing2.common.BitArray,int,boolean,int[],int[]) -> findGuardPattern
    1:12:int[] findStartGuardPattern(com.dcloud.zxing2.common.BitArray) -> findStartGuardPattern
com.dcloud.zxing2.oned.UPCEANWriter -> com.dcloud.zxing2.oned.UPCEANWriter:
    1:1:void <init>() -> <init>
    1:1:int getDefaultMargin() -> getDefaultMargin
com.dcloud.zxing2.oned.UPCEReader -> com.dcloud.zxing2.oned.UPCEReader:
    1:15:void <clinit>() -> <clinit>
    1:2:void <init>() -> <init>
    1:1:boolean checkChecksum(java.lang.String) -> checkChecksum
    1:57:java.lang.String convertUPCEtoUPCA(java.lang.String) -> convertUPCEtoUPCA
    1:1:int[] decodeEnd(com.dcloud.zxing2.common.BitArray,int) -> decodeEnd
    1:22:int decodeMiddle(com.dcloud.zxing2.common.BitArray,int[],java.lang.StringBuilder) -> decodeMiddle
    1:8:void determineNumSysAndCheckDigit(java.lang.StringBuilder,int) -> determineNumSysAndCheckDigit
    1:1:com.dcloud.zxing2.BarcodeFormat getBarcodeFormat() -> getBarcodeFormat
com.dcloud.zxing2.oned.UPCEWriter -> com.dcloud.zxing2.oned.UPCEWriter:
    1:1:void <init>() -> <init>
    1:6:com.dcloud.zxing2.common.BitMatrix encode(java.lang.String,com.dcloud.zxing2.BarcodeFormat,int,int,java.util.Map) -> encode
    7:29:boolean[] encode(java.lang.String) -> encode
com.dcloud.zxing2.oned.rss.AbstractRSSReader -> com.dcloud.zxing2.oned.rss.AbstractRSSReader:
    1:7:void <init>() -> <init>
    1:1:int count(int[]) -> count
    1:8:void decrement(int[],float[]) -> decrement
    1:1:int[] getDataCharacterCounters() -> getDataCharacterCounters
    1:1:int[] getDecodeFinderCounters() -> getDecodeFinderCounters
    1:1:int[] getEvenCounts() -> getEvenCounts
    1:1:float[] getEvenRoundingErrors() -> getEvenRoundingErrors
    1:1:int[] getOddCounts() -> getOddCounts
    1:1:float[] getOddRoundingErrors() -> getOddRoundingErrors
    1:8:void increment(int[],float[]) -> increment
    1:8:boolean isFinderPattern(int[]) -> isFinderPattern
    1:7:int parseFinderValue(int[],int[][]) -> parseFinderValue
com.dcloud.zxing2.oned.rss.DataCharacter -> com.dcloud.zxing2.oned.rss.DataCharacter:
    1:3:void <init>(int,int) -> <init>
    1:5:boolean equals(java.lang.Object) -> equals
    1:1:int getChecksumPortion() -> getChecksumPortion
    1:1:int getValue() -> getValue
    1:1:int hashCode() -> hashCode
    1:1:java.lang.String toString() -> toString
com.dcloud.zxing2.oned.rss.FinderPattern -> com.dcloud.zxing2.oned.rss.FinderPattern:
    1:4:void <init>(int,int[],int,int,int) -> <init>
    1:5:boolean equals(java.lang.Object) -> equals
    1:1:com.dcloud.zxing2.ResultPoint[] getResultPoints() -> getResultPoints
    1:1:int[] getStartEnd() -> getStartEnd
    1:1:int getValue() -> getValue
    1:1:int hashCode() -> hashCode
com.dcloud.zxing2.oned.rss.Pair -> com.dcloud.zxing2.oned.rss.Pair:
    1:2:void <init>(int,int,com.dcloud.zxing2.oned.rss.FinderPattern) -> <init>
    1:1:int getCount() -> getCount
    1:1:com.dcloud.zxing2.oned.rss.FinderPattern getFinderPattern() -> getFinderPattern
    1:1:void incrementCount() -> incrementCount
com.dcloud.zxing2.oned.rss.RSS14Reader -> com.dcloud.zxing2.oned.rss.RSS14Reader:
    1:8:void <clinit>() -> <clinit>
    1:3:void <init>() -> <init>
    1:9:void addOrTally(java.util.Collection,com.dcloud.zxing2.oned.rss.Pair) -> addOrTally
    1:123:void adjustOddEvenCounts(boolean,int) -> adjustOddEvenCounts
    1:3:boolean checkChecksum(com.dcloud.zxing2.oned.rss.Pair,com.dcloud.zxing2.oned.rss.Pair) -> checkChecksum
    1:24:com.dcloud.zxing2.Result constructResult(com.dcloud.zxing2.oned.rss.Pair,com.dcloud.zxing2.oned.rss.Pair) -> constructResult
    1:101:com.dcloud.zxing2.oned.rss.DataCharacter decodeDataCharacter(com.dcloud.zxing2.common.BitArray,com.dcloud.zxing2.oned.rss.FinderPattern,boolean) -> decodeDataCharacter
    1:19:com.dcloud.zxing2.oned.rss.Pair decodePair(com.dcloud.zxing2.common.BitArray,boolean,int,java.util.Map) -> decodePair
    1:22:com.dcloud.zxing2.Result decodeRow(int,com.dcloud.zxing2.common.BitArray,java.util.Map) -> decodeRow
    1:41:int[] findFinderPattern(com.dcloud.zxing2.common.BitArray,int,boolean) -> findFinderPattern
    1:21:com.dcloud.zxing2.oned.rss.FinderPattern parseFoundFinderPattern(com.dcloud.zxing2.common.BitArray,int,boolean,int[]) -> parseFoundFinderPattern
    1:2:void reset() -> reset
com.dcloud.zxing2.oned.rss.RSSUtils -> com.dcloud.zxing2.oned.rss.RSSUtils:
    1:1:void <init>() -> <init>
    1:6:int combins(int,int) -> combins
    1:23:int getRSSvalue(int[],int,boolean) -> getRSSvalue
com.dcloud.zxing2.oned.rss.expanded.BitArrayBuilder -> com.dcloud.zxing2.oned.rss.expanded.BitArrayBuilder:
    1:1:void <init>() -> <init>
    1:35:com.dcloud.zxing2.common.BitArray buildBitArray(java.util.List) -> buildBitArray
com.dcloud.zxing2.oned.rss.expanded.ExpandedPair -> com.dcloud.zxing2.oned.rss.expanded.ExpandedPair:
    1:5:void <init>(com.dcloud.zxing2.oned.rss.DataCharacter,com.dcloud.zxing2.oned.rss.DataCharacter,com.dcloud.zxing2.oned.rss.FinderPattern,boolean) -> <init>
    1:8:boolean equals(java.lang.Object) -> equals
    1:1:boolean equalsOrNull(java.lang.Object,java.lang.Object) -> equalsOrNull
    1:1:com.dcloud.zxing2.oned.rss.FinderPattern getFinderPattern() -> getFinderPattern
    1:1:com.dcloud.zxing2.oned.rss.DataCharacter getLeftChar() -> getLeftChar
    1:1:com.dcloud.zxing2.oned.rss.DataCharacter getRightChar() -> getRightChar
    1:1:int hashCode() -> hashCode
    1:1:int hashNotNull(java.lang.Object) -> hashNotNull
    1:1:boolean mayBeLast() -> mayBeLast
    1:1:boolean mustBeLast() -> mustBeLast
    1:3:java.lang.String toString() -> toString
com.dcloud.zxing2.oned.rss.expanded.ExpandedRow -> com.dcloud.zxing2.oned.rss.expanded.ExpandedRow:
    1:4:void <init>(java.util.List,int,boolean) -> <init>
    1:5:boolean equals(java.lang.Object) -> equals
    1:1:java.util.List getPairs() -> getPairs
    1:1:int getRowNumber() -> getRowNumber
    1:1:int hashCode() -> hashCode
    1:1:boolean isEquivalent(java.util.List) -> isEquivalent
    1:1:boolean isReversed() -> isReversed
    1:1:java.lang.String toString() -> toString
com.dcloud.zxing2.oned.rss.expanded.RSSExpandedReader -> com.dcloud.zxing2.oned.rss.expanded.RSSExpandedReader:
    1:47:void <clinit>() -> <clinit>
    1:66:void <init>() -> <init>
    1:98:void adjustOddEvenCounts(int) -> adjustOddEvenCounts
    1:27:boolean checkChecksum() -> checkChecksum
    1:19:java.util.List checkRows(boolean) -> checkRows
    20:48:java.util.List checkRows(java.util.List,int) -> checkRows
    1:9:com.dcloud.zxing2.Result constructResult(java.util.List) -> constructResult
    1:100:com.dcloud.zxing2.oned.rss.DataCharacter decodeDataCharacter(com.dcloud.zxing2.common.BitArray,com.dcloud.zxing2.oned.rss.FinderPattern,boolean,boolean) -> decodeDataCharacter
    1:13:com.dcloud.zxing2.Result decodeRow(int,com.dcloud.zxing2.common.BitArray,java.util.Map) -> decodeRow
    1:33:java.util.List decodeRow2pairs(int,com.dcloud.zxing2.common.BitArray) -> decodeRow2pairs
    1:66:void findNextPair(com.dcloud.zxing2.common.BitArray,java.util.List,int) -> findNextPair
    1:6:int getNextSecondBar(com.dcloud.zxing2.common.BitArray,int) -> getNextSecondBar
    1:1:java.util.List getRows() -> getRows
    1:1:boolean isNotA1left(com.dcloud.zxing2.oned.rss.FinderPattern,boolean,boolean) -> isNotA1left
    1:6:boolean isPartialRow(java.lang.Iterable,java.lang.Iterable) -> isPartialRow
    1:8:boolean isValidSequence(java.util.List) -> isValidSequence
    1:32:com.dcloud.zxing2.oned.rss.FinderPattern parseFoundFinderPattern(com.dcloud.zxing2.common.BitArray,int,boolean) -> parseFoundFinderPattern
    1:22:void removePartialRows(java.util.List,java.util.List) -> removePartialRows
    1:2:void reset() -> reset
    1:36:com.dcloud.zxing2.oned.rss.expanded.ExpandedPair retrieveNextPair(com.dcloud.zxing2.common.BitArray,java.util.List,int) -> retrieveNextPair
    1:5:void reverseCounters(int[]) -> reverseCounters
    1:25:void storeRow(int,boolean) -> storeRow
com.dcloud.zxing2.oned.rss.expanded.decoders.AI013103decoder -> com.dcloud.zxing2.oned.rss.expanded.decoders.AI013103decoder:
    1:1:void <init>(com.dcloud.zxing2.common.BitArray) -> <init>
    1:1:void addWeightCode(java.lang.StringBuilder,int) -> addWeightCode
com.dcloud.zxing2.oned.rss.expanded.decoders.AI01320xDecoder -> com.dcloud.zxing2.oned.rss.expanded.decoders.AI01320xDecoder:
    1:1:void <init>(com.dcloud.zxing2.common.BitArray) -> <init>
    1:3:void addWeightCode(java.lang.StringBuilder,int) -> addWeightCode
com.dcloud.zxing2.oned.rss.expanded.decoders.AI01392xDecoder -> com.dcloud.zxing2.oned.rss.expanded.decoders.AI01392xDecoder:
    1:1:void <init>(com.dcloud.zxing2.common.BitArray) -> <init>
    1:20:java.lang.String parseInformation() -> parseInformation
com.dcloud.zxing2.oned.rss.expanded.decoders.AI01393xDecoder -> com.dcloud.zxing2.oned.rss.expanded.decoders.AI01393xDecoder:
    1:1:void <init>(com.dcloud.zxing2.common.BitArray) -> <init>
    1:31:java.lang.String parseInformation() -> parseInformation
com.dcloud.zxing2.oned.rss.expanded.decoders.AI013x0x1xDecoder -> com.dcloud.zxing2.oned.rss.expanded.decoders.AI013x0x1xDecoder:
    1:3:void <init>(com.dcloud.zxing2.common.BitArray,java.lang.String,java.lang.String) -> <init>
    1:5:void addWeightCode(java.lang.StringBuilder,int) -> addWeightCode
    1:1:int checkWeight(int) -> checkWeight
    1:27:void encodeCompressedDate(java.lang.StringBuilder,int) -> encodeCompressedDate
    1:12:java.lang.String parseInformation() -> parseInformation
com.dcloud.zxing2.oned.rss.expanded.decoders.AI013x0xDecoder -> com.dcloud.zxing2.oned.rss.expanded.decoders.AI013x0xDecoder:
    1:1:void <init>(com.dcloud.zxing2.common.BitArray) -> <init>
    1:11:java.lang.String parseInformation() -> parseInformation
com.dcloud.zxing2.oned.rss.expanded.decoders.AI01AndOtherAIs -> com.dcloud.zxing2.oned.rss.expanded.decoders.AI01AndOtherAIs:
    1:1:void <init>(com.dcloud.zxing2.common.BitArray) -> <init>
    1:10:java.lang.String parseInformation() -> parseInformation
com.dcloud.zxing2.oned.rss.expanded.decoders.AI01decoder -> com.dcloud.zxing2.oned.rss.expanded.decoders.AI01decoder:
    1:1:void <init>(com.dcloud.zxing2.common.BitArray) -> <init>
    1:10:void appendCheckDigit(java.lang.StringBuilder,int) -> appendCheckDigit
    1:5:void encodeCompressedGtin(java.lang.StringBuilder,int) -> encodeCompressedGtin
    1:11:void encodeCompressedGtinWithoutAI(java.lang.StringBuilder,int,int) -> encodeCompressedGtinWithoutAI
com.dcloud.zxing2.oned.rss.expanded.decoders.AI01weightDecoder -> com.dcloud.zxing2.oned.rss.expanded.decoders.AI01weightDecoder:
    1:1:void <init>(com.dcloud.zxing2.common.BitArray) -> <init>
    1:13:void encodeCompressedWeight(java.lang.StringBuilder,int,int) -> encodeCompressedWeight
com.dcloud.zxing2.oned.rss.expanded.decoders.AbstractExpandedDecoder -> com.dcloud.zxing2.oned.rss.expanded.decoders.AbstractExpandedDecoder:
    1:3:void <init>(com.dcloud.zxing2.common.BitArray) -> <init>
    1:45:com.dcloud.zxing2.oned.rss.expanded.decoders.AbstractExpandedDecoder createDecoder(com.dcloud.zxing2.common.BitArray) -> createDecoder
    1:1:com.dcloud.zxing2.oned.rss.expanded.decoders.GeneralAppIdDecoder getGeneralDecoder() -> getGeneralDecoder
    1:1:com.dcloud.zxing2.common.BitArray getInformation() -> getInformation
com.dcloud.zxing2.oned.rss.expanded.decoders.AnyAIDecoder -> com.dcloud.zxing2.oned.rss.expanded.decoders.AnyAIDecoder:
    1:1:void <init>(com.dcloud.zxing2.common.BitArray) -> <init>
    1:2:java.lang.String parseInformation() -> parseInformation
com.dcloud.zxing2.oned.rss.expanded.decoders.BlockParsedResult -> com.dcloud.zxing2.oned.rss.expanded.decoders.BlockParsedResult:
    1:1:void <init>(boolean) -> <init>
    2:4:void <init>(com.dcloud.zxing2.oned.rss.expanded.decoders.DecodedInformation,boolean) -> <init>
    1:1:com.dcloud.zxing2.oned.rss.expanded.decoders.DecodedInformation getDecodedInformation() -> getDecodedInformation
    1:1:boolean isFinished() -> isFinished
com.dcloud.zxing2.oned.rss.expanded.decoders.CurrentParsingState -> com.dcloud.zxing2.oned.rss.expanded.decoders.CurrentParsingState:
    1:3:void <init>() -> <init>
    1:1:int getPosition() -> getPosition
    1:1:void incrementPosition(int) -> incrementPosition
    1:1:boolean isAlpha() -> isAlpha
    1:1:boolean isIsoIec646() -> isIsoIec646
    1:1:boolean isNumeric() -> isNumeric
    1:1:void setAlpha() -> setAlpha
    1:1:void setIsoIec646() -> setIsoIec646
    1:1:void setNumeric() -> setNumeric
    1:1:void setPosition(int) -> setPosition
com.dcloud.zxing2.oned.rss.expanded.decoders.CurrentParsingState$State -> com.dcloud.zxing2.oned.rss.expanded.decoders.CurrentParsingState$State:
    1:4:void <clinit>() -> <clinit>
    1:1:void <init>(java.lang.String,int) -> <init>
    1:1:com.dcloud.zxing2.oned.rss.expanded.decoders.CurrentParsingState$State valueOf(java.lang.String) -> valueOf
    1:1:com.dcloud.zxing2.oned.rss.expanded.decoders.CurrentParsingState$State[] values() -> values
com.dcloud.zxing2.oned.rss.expanded.decoders.DecodedChar -> com.dcloud.zxing2.oned.rss.expanded.decoders.DecodedChar:
    1:2:void <init>(int,char) -> <init>
    1:1:char getValue() -> getValue
    1:1:boolean isFNC1() -> isFNC1
com.dcloud.zxing2.oned.rss.expanded.decoders.DecodedInformation -> com.dcloud.zxing2.oned.rss.expanded.decoders.DecodedInformation:
    1:4:void <init>(int,java.lang.String) -> <init>
    5:8:void <init>(int,java.lang.String,int) -> <init>
    1:1:java.lang.String getNewString() -> getNewString
    1:1:int getRemainingValue() -> getRemainingValue
    1:1:boolean isRemaining() -> isRemaining
com.dcloud.zxing2.oned.rss.expanded.decoders.DecodedNumeric -> com.dcloud.zxing2.oned.rss.expanded.decoders.DecodedNumeric:
    1:9:void <init>(int,int,int) -> <init>
    1:1:int getFirstDigit() -> getFirstDigit
    1:1:int getSecondDigit() -> getSecondDigit
    1:1:int getValue() -> getValue
    1:1:boolean isAnyFNC1() -> isAnyFNC1
    1:1:boolean isFirstDigitFNC1() -> isFirstDigitFNC1
    1:1:boolean isSecondDigitFNC1() -> isSecondDigitFNC1
com.dcloud.zxing2.oned.rss.expanded.decoders.DecodedObject -> com.dcloud.zxing2.oned.rss.expanded.decoders.DecodedObject:
    1:2:void <init>(int) -> <init>
    1:1:int getNewPosition() -> getNewPosition
com.dcloud.zxing2.oned.rss.expanded.decoders.FieldParser -> com.dcloud.zxing2.oned.rss.expanded.decoders.FieldParser:
    1:151:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:65:java.lang.String parseFieldsInGeneralPurpose(java.lang.String) -> parseFieldsInGeneralPurpose
    1:17:java.lang.String processFixedAI(int,int,java.lang.String) -> processFixedAI
    1:12:java.lang.String processVariableAI(int,int,java.lang.String) -> processVariableAI
com.dcloud.zxing2.oned.rss.expanded.decoders.GeneralAppIdDecoder -> com.dcloud.zxing2.oned.rss.expanded.decoders.GeneralAppIdDecoder:
    1:6:void <init>(com.dcloud.zxing2.common.BitArray) -> <init>
    1:19:java.lang.String decodeAllCodes(java.lang.StringBuilder,int) -> decodeAllCodes
    1:36:com.dcloud.zxing2.oned.rss.expanded.decoders.DecodedChar decodeAlphanumeric(int) -> decodeAlphanumeric
    1:13:com.dcloud.zxing2.oned.rss.expanded.decoders.DecodedInformation decodeGeneralPurposeField(int,java.lang.String) -> decodeGeneralPurposeField
    1:89:com.dcloud.zxing2.oned.rss.expanded.decoders.DecodedChar decodeIsoIec646(int) -> decodeIsoIec646
    1:13:com.dcloud.zxing2.oned.rss.expanded.decoders.DecodedNumeric decodeNumeric(int) -> decodeNumeric
    1:1:int extractNumericValueFromBitArray(int,int) -> extractNumericValueFromBitArray
    2:2:int extractNumericValueFromBitArray(com.dcloud.zxing2.common.BitArray,int,int) -> extractNumericValueFromBitArray
    1:6:boolean isAlphaOr646ToNumericLatch(int) -> isAlphaOr646ToNumericLatch
    1:10:boolean isAlphaTo646ToAlphaLatch(int) -> isAlphaTo646ToAlphaLatch
    1:6:boolean isNumericToAlphaNumericLatch(int) -> isNumericToAlphaNumericLatch
    1:15:boolean isStillAlpha(int) -> isStillAlpha
    1:23:boolean isStillIsoIec646(int) -> isStillIsoIec646
    1:11:boolean isStillNumeric(int) -> isStillNumeric
    1:25:com.dcloud.zxing2.oned.rss.expanded.decoders.BlockParsedResult parseAlphaBlock() -> parseAlphaBlock
    1:20:com.dcloud.zxing2.oned.rss.expanded.decoders.DecodedInformation parseBlocks() -> parseBlocks
    1:24:com.dcloud.zxing2.oned.rss.expanded.decoders.BlockParsedResult parseIsoIec646Block() -> parseIsoIec646Block
    1:27:com.dcloud.zxing2.oned.rss.expanded.decoders.BlockParsedResult parseNumericBlock() -> parseNumericBlock
com.dcloud.zxing2.pdf417.PDF417Common -> com.dcloud.zxing2.pdf417.PDF417Common:
    1:281:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:1:int getBitCountSum(int[]) -> getBitCountSum
    1:5:int getCodeword(int) -> getCodeword
    1:8:int[] toIntArray(java.util.Collection) -> toIntArray
com.dcloud.zxing2.pdf417.PDF417Reader -> com.dcloud.zxing2.pdf417.PDF417Reader:
    1:1:void <init>() -> <init>
    1:1:com.dcloud.zxing2.Result decode(com.dcloud.zxing2.BinaryBitmap) -> decode
    2:7:com.dcloud.zxing2.Result decode(com.dcloud.zxing2.BinaryBitmap,java.util.Map) -> decode
    8:23:com.dcloud.zxing2.Result[] decode(com.dcloud.zxing2.BinaryBitmap,java.util.Map,boolean) -> decode
    1:1:com.dcloud.zxing2.Result[] decodeMultiple(com.dcloud.zxing2.BinaryBitmap) -> decodeMultiple
    2:4:com.dcloud.zxing2.Result[] decodeMultiple(com.dcloud.zxing2.BinaryBitmap,java.util.Map) -> decodeMultiple
    1:5:int getMaxCodewordWidth(com.dcloud.zxing2.ResultPoint[]) -> getMaxCodewordWidth
    1:1:int getMaxWidth(com.dcloud.zxing2.ResultPoint,com.dcloud.zxing2.ResultPoint) -> getMaxWidth
    1:5:int getMinCodewordWidth(com.dcloud.zxing2.ResultPoint[]) -> getMinCodewordWidth
    1:1:int getMinWidth(com.dcloud.zxing2.ResultPoint,com.dcloud.zxing2.ResultPoint) -> getMinWidth
com.dcloud.zxing2.pdf417.PDF417ResultMetadata -> com.dcloud.zxing2.pdf417.PDF417ResultMetadata:
    1:1:void <init>() -> <init>
    1:1:java.lang.String getFileId() -> getFileId
    1:1:int[] getOptionalData() -> getOptionalData
    1:1:int getSegmentIndex() -> getSegmentIndex
    1:1:boolean isLastSegment() -> isLastSegment
    1:1:void setFileId(java.lang.String) -> setFileId
    1:1:void setLastSegment(boolean) -> setLastSegment
    1:1:void setOptionalData(int[]) -> setOptionalData
    1:1:void setSegmentIndex(int) -> setSegmentIndex
com.dcloud.zxing2.pdf417.PDF417Writer -> com.dcloud.zxing2.pdf417.PDF417Writer:
    1:1:void <init>() -> <init>
    1:29:com.dcloud.zxing2.common.BitMatrix bitMatrixFromEncoder(com.dcloud.zxing2.pdf417.encoder.PDF417,java.lang.String,int,int,int,int) -> bitMatrixFromEncoder
    1:7:com.dcloud.zxing2.common.BitMatrix bitMatrixFrombitArray(byte[][],int) -> bitMatrixFrombitArray
    1:40:com.dcloud.zxing2.common.BitMatrix encode(java.lang.String,com.dcloud.zxing2.BarcodeFormat,int,int,java.util.Map) -> encode
    41:41:com.dcloud.zxing2.common.BitMatrix encode(java.lang.String,com.dcloud.zxing2.BarcodeFormat,int,int) -> encode
    1:7:byte[][] rotateArray(byte[][]) -> rotateArray
com.dcloud.zxing2.pdf417.decoder.BarcodeMetadata -> com.dcloud.zxing2.pdf417.decoder.BarcodeMetadata:
    1:6:void <init>(int,int,int,int) -> <init>
    1:1:int getColumnCount() -> getColumnCount
    1:1:int getErrorCorrectionLevel() -> getErrorCorrectionLevel
    1:1:int getRowCount() -> getRowCount
    1:1:int getRowCountLowerPart() -> getRowCountLowerPart
    1:1:int getRowCountUpperPart() -> getRowCountUpperPart
com.dcloud.zxing2.pdf417.decoder.BarcodeValue -> com.dcloud.zxing2.pdf417.decoder.BarcodeValue:
    1:2:void <init>() -> <init>
    1:1:java.lang.Integer getConfidence(int) -> getConfidence
    1:11:int[] getValue() -> getValue
    1:6:void setValue(int) -> setValue
com.dcloud.zxing2.pdf417.decoder.BoundingBox -> com.dcloud.zxing2.pdf417.decoder.BoundingBox:
    1:8:void <init>(com.dcloud.zxing2.common.BitMatrix,com.dcloud.zxing2.ResultPoint,com.dcloud.zxing2.ResultPoint,com.dcloud.zxing2.ResultPoint,com.dcloud.zxing2.ResultPoint) -> <init>
    9:10:void <init>(com.dcloud.zxing2.pdf417.decoder.BoundingBox) -> <init>
    1:35:com.dcloud.zxing2.pdf417.decoder.BoundingBox addMissingRows(int,int,boolean) -> addMissingRows
    1:12:void calculateMinMaxValues() -> calculateMinMaxValues
    1:1:com.dcloud.zxing2.ResultPoint getBottomLeft() -> getBottomLeft
    1:1:com.dcloud.zxing2.ResultPoint getBottomRight() -> getBottomRight
    1:1:int getMaxX() -> getMaxX
    1:1:int getMaxY() -> getMaxY
    1:1:int getMinX() -> getMinX
    1:1:int getMinY() -> getMinY
    1:1:com.dcloud.zxing2.ResultPoint getTopLeft() -> getTopLeft
    1:1:com.dcloud.zxing2.ResultPoint getTopRight() -> getTopRight
    1:6:void init(com.dcloud.zxing2.common.BitMatrix,com.dcloud.zxing2.ResultPoint,com.dcloud.zxing2.ResultPoint,com.dcloud.zxing2.ResultPoint,com.dcloud.zxing2.ResultPoint) -> init
    1:1:com.dcloud.zxing2.pdf417.decoder.BoundingBox merge(com.dcloud.zxing2.pdf417.decoder.BoundingBox,com.dcloud.zxing2.pdf417.decoder.BoundingBox) -> merge
com.dcloud.zxing2.pdf417.decoder.Codeword -> com.dcloud.zxing2.pdf417.decoder.Codeword:
    1:8:void <init>(int,int,int,int) -> <init>
    1:1:int getBucket() -> getBucket
    1:1:int getEndX() -> getEndX
    1:1:int getRowNumber() -> getRowNumber
    1:1:int getStartX() -> getStartX
    1:1:int getValue() -> getValue
    1:1:int getWidth() -> getWidth
    1:1:boolean hasValidRowNumber() -> hasValidRowNumber
    1:1:boolean isValidRowNumber(int) -> isValidRowNumber
    1:1:void setRowNumber(int) -> setRowNumber
    1:1:void setRowNumberAsRowIndicatorColumn() -> setRowNumberAsRowIndicatorColumn
    1:1:java.lang.String toString() -> toString
com.dcloud.zxing2.pdf417.decoder.DecodedBitStreamParser -> com.dcloud.zxing2.pdf417.decoder.DecodedBitStreamParser:
    1:24:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:85:int byteCompaction(int,int[],java.nio.charset.Charset,int,java.lang.StringBuilder) -> byteCompaction
    1:121:com.dcloud.zxing2.common.DecoderResult decode(int[],java.lang.String) -> decode
    1:10:java.lang.String decodeBase900toBase10(int[],int) -> decodeBase900toBase10
    1:42:int decodeMacroBlock(int[],int,com.dcloud.zxing2.pdf417.PDF417ResultMetadata) -> decodeMacroBlock
    1:280:void decodeTextCompaction(int[],int[],int,java.lang.StringBuilder) -> decodeTextCompaction
    1:31:int numericCompaction(int[],int,java.lang.StringBuilder) -> numericCompaction
    1:64:int textCompaction(int[],int,java.lang.StringBuilder) -> textCompaction
com.dcloud.zxing2.pdf417.decoder.DecodedBitStreamParser$1 -> com.dcloud.zxing2.pdf417.decoder.DecodedBitStreamParser$1:
    1:1:void <clinit>() -> <clinit>
com.dcloud.zxing2.pdf417.decoder.DecodedBitStreamParser$Mode -> com.dcloud.zxing2.pdf417.decoder.DecodedBitStreamParser$Mode:
    1:7:void <clinit>() -> <clinit>
    1:1:void <init>(java.lang.String,int) -> <init>
    1:1:com.dcloud.zxing2.pdf417.decoder.DecodedBitStreamParser$Mode valueOf(java.lang.String) -> valueOf
    1:1:com.dcloud.zxing2.pdf417.decoder.DecodedBitStreamParser$Mode[] values() -> values
com.dcloud.zxing2.pdf417.decoder.DetectionResult -> com.dcloud.zxing2.pdf417.decoder.DetectionResult:
    1:5:void <init>(com.dcloud.zxing2.pdf417.decoder.BarcodeMetadata,com.dcloud.zxing2.pdf417.decoder.BoundingBox) -> <init>
    1:2:void adjustIndicatorColumnRowNumbers(com.dcloud.zxing2.pdf417.decoder.DetectionResultColumn) -> adjustIndicatorColumnRowNumbers
    1:2:boolean adjustRowNumber(com.dcloud.zxing2.pdf417.decoder.Codeword,com.dcloud.zxing2.pdf417.decoder.Codeword) -> adjustRowNumber
    1:3:int adjustRowNumberIfValid(int,int,com.dcloud.zxing2.pdf417.decoder.Codeword) -> adjustRowNumberIfValid
    1:12:int adjustRowNumbers() -> adjustRowNumbers
    13:46:void adjustRowNumbers(int,int,com.dcloud.zxing2.pdf417.decoder.Codeword[]) -> adjustRowNumbers
    1:7:int adjustRowNumbersByRow() -> adjustRowNumbersByRow
    1:17:void adjustRowNumbersFromBothRI() -> adjustRowNumbersFromBothRI
    1:16:int adjustRowNumbersFromLRI() -> adjustRowNumbersFromLRI
    1:16:int adjustRowNumbersFromRRI() -> adjustRowNumbersFromRRI
    1:1:int getBarcodeColumnCount() -> getBarcodeColumnCount
    1:1:int getBarcodeECLevel() -> getBarcodeECLevel
    1:1:int getBarcodeRowCount() -> getBarcodeRowCount
    1:1:com.dcloud.zxing2.pdf417.decoder.BoundingBox getBoundingBox() -> getBoundingBox
    1:1:com.dcloud.zxing2.pdf417.decoder.DetectionResultColumn getDetectionResultColumn(int) -> getDetectionResultColumn
    1:9:com.dcloud.zxing2.pdf417.decoder.DetectionResultColumn[] getDetectionResultColumns() -> getDetectionResultColumns
    1:1:void setBoundingBox(com.dcloud.zxing2.pdf417.decoder.BoundingBox) -> setBoundingBox
    1:1:void setDetectionResultColumn(int,com.dcloud.zxing2.pdf417.decoder.DetectionResultColumn) -> setDetectionResultColumn
    1:23:java.lang.String toString() -> toString
com.dcloud.zxing2.pdf417.decoder.DetectionResultColumn -> com.dcloud.zxing2.pdf417.decoder.DetectionResultColumn:
    1:3:void <init>(com.dcloud.zxing2.pdf417.decoder.BoundingBox) -> <init>
    1:1:com.dcloud.zxing2.pdf417.decoder.BoundingBox getBoundingBox() -> getBoundingBox
    1:1:com.dcloud.zxing2.pdf417.decoder.Codeword getCodeword(int) -> getCodeword
    1:15:com.dcloud.zxing2.pdf417.decoder.Codeword getCodewordNearby(int) -> getCodewordNearby
    1:1:com.dcloud.zxing2.pdf417.decoder.Codeword[] getCodewords() -> getCodewords
    1:1:int imageRowToCodewordIndex(int) -> imageRowToCodewordIndex
    1:1:void setCodeword(int,com.dcloud.zxing2.pdf417.decoder.Codeword) -> setCodeword
    1:11:java.lang.String toString() -> toString
com.dcloud.zxing2.pdf417.decoder.DetectionResultRowIndicatorColumn -> com.dcloud.zxing2.pdf417.decoder.DetectionResultRowIndicatorColumn:
    1:2:void <init>(com.dcloud.zxing2.pdf417.decoder.BoundingBox,boolean) -> <init>
    1:60:int adjustCompleteIndicatorColumnRowNumbers(com.dcloud.zxing2.pdf417.decoder.BarcodeMetadata) -> adjustCompleteIndicatorColumnRowNumbers
    1:32:int adjustIncompleteIndicatorColumnRowNumbers(com.dcloud.zxing2.pdf417.decoder.BarcodeMetadata) -> adjustIncompleteIndicatorColumnRowNumbers
    1:51:com.dcloud.zxing2.pdf417.decoder.BarcodeMetadata getBarcodeMetadata() -> getBarcodeMetadata
    1:14:int[] getRowHeights() -> getRowHeights
    1:1:boolean isLeft() -> isLeft
    1:34:void removeIncorrectCodewords(com.dcloud.zxing2.pdf417.decoder.Codeword[],com.dcloud.zxing2.pdf417.decoder.BarcodeMetadata) -> removeIncorrectCodewords
    1:3:void setRowNumbers() -> setRowNumbers
    1:1:java.lang.String toString() -> toString
com.dcloud.zxing2.pdf417.decoder.PDF417CodewordDecoder -> com.dcloud.zxing2.pdf417.decoder.PDF417CodewordDecoder:
    1:16:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:3:int getBitValue(int[]) -> getBitValue
    1:20:int getClosestDecodedValue(int[]) -> getClosestDecodedValue
    1:2:int getDecodedCodewordValue(int[]) -> getDecodedCodewordValue
    1:5:int getDecodedValue(int[]) -> getDecodedValue
    1:13:int[] sampleBitCounts(int[]) -> sampleBitCounts
com.dcloud.zxing2.pdf417.decoder.PDF417ScanningDecoder -> com.dcloud.zxing2.pdf417.decoder.PDF417ScanningDecoder:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:29:com.dcloud.zxing2.pdf417.decoder.BoundingBox adjustBoundingBox(com.dcloud.zxing2.pdf417.decoder.DetectionResultRowIndicatorColumn) -> adjustBoundingBox
    1:15:void adjustCodewordCount(com.dcloud.zxing2.pdf417.decoder.DetectionResult,com.dcloud.zxing2.pdf417.decoder.BarcodeValue[][]) -> adjustCodewordCount
    1:2:int adjustCodewordStartColumn(com.dcloud.zxing2.common.BitMatrix,int,int,boolean,int,int) -> adjustCodewordStartColumn
    1:9:int correctErrors(int[],int[],int) -> correctErrors
    1:19:com.dcloud.zxing2.pdf417.decoder.BarcodeValue[][] createBarcodeMatrix(com.dcloud.zxing2.pdf417.decoder.DetectionResult) -> createBarcodeMatrix
    1:27:com.dcloud.zxing2.common.DecoderResult createDecoderResult(com.dcloud.zxing2.pdf417.decoder.DetectionResult) -> createDecoderResult
    1:38:com.dcloud.zxing2.common.DecoderResult createDecoderResultFromAmbiguousValues(int,int[],int[],int[],int[][]) -> createDecoderResultFromAmbiguousValues
    1:77:com.dcloud.zxing2.common.DecoderResult decode(com.dcloud.zxing2.common.BitMatrix,com.dcloud.zxing2.ResultPoint,com.dcloud.zxing2.ResultPoint,com.dcloud.zxing2.ResultPoint,com.dcloud.zxing2.ResultPoint,int,int) -> decode
    1:13:com.dcloud.zxing2.common.DecoderResult decodeCodewords(int[],int,int[]) -> decodeCodewords
    1:48:com.dcloud.zxing2.pdf417.decoder.Codeword detectCodeword(com.dcloud.zxing2.common.BitMatrix,int,int,boolean,int,int,int,int) -> detectCodeword
    1:13:com.dcloud.zxing2.pdf417.decoder.BarcodeMetadata getBarcodeMetadata(com.dcloud.zxing2.pdf417.decoder.DetectionResultRowIndicatorColumn,com.dcloud.zxing2.pdf417.decoder.DetectionResultRowIndicatorColumn) -> getBarcodeMetadata
    1:12:int[] getBitCountForCodeword(int) -> getBitCountForCodeword
    1:1:int getCodewordBucketNumber(int) -> getCodewordBucketNumber
    2:2:int getCodewordBucketNumber(int[]) -> getCodewordBucketNumber
    1:2:int getMax(int[]) -> getMax
    1:8:int[] getModuleBitCount(com.dcloud.zxing2.common.BitMatrix,int,int,boolean,int,int) -> getModuleBitCount
    1:15:com.dcloud.zxing2.pdf417.decoder.DetectionResultRowIndicatorColumn getRowIndicatorColumn(com.dcloud.zxing2.common.BitMatrix,com.dcloud.zxing2.pdf417.decoder.BoundingBox,com.dcloud.zxing2.ResultPoint,boolean,int,int) -> getRowIndicatorColumn
    1:31:int getStartColumn(com.dcloud.zxing2.pdf417.decoder.DetectionResult,int,int,boolean) -> getStartColumn
    1:1:boolean isValidBarcodeColumn(com.dcloud.zxing2.pdf417.decoder.DetectionResult,int) -> isValidBarcodeColumn
    1:9:com.dcloud.zxing2.pdf417.decoder.DetectionResult merge(com.dcloud.zxing2.pdf417.decoder.DetectionResultRowIndicatorColumn,com.dcloud.zxing2.pdf417.decoder.DetectionResultRowIndicatorColumn) -> merge
    1:18:java.lang.String toString(com.dcloud.zxing2.pdf417.decoder.BarcodeValue[][]) -> toString
    1:20:void verifyCodewordCount(int[],int) -> verifyCodewordCount
com.dcloud.zxing2.pdf417.decoder.ec.ErrorCorrection -> com.dcloud.zxing2.pdf417.decoder.ec.ErrorCorrection:
    1:2:void <init>() -> <init>
    1:49:int decode(int[],int,int[]) -> decode
    1:11:int[] findErrorLocations(com.dcloud.zxing2.pdf417.decoder.ec.ModulusPoly) -> findErrorLocations
    1:16:int[] findErrorMagnitudes(com.dcloud.zxing2.pdf417.decoder.ec.ModulusPoly,com.dcloud.zxing2.pdf417.decoder.ec.ModulusPoly,int[]) -> findErrorMagnitudes
    1:61:com.dcloud.zxing2.pdf417.decoder.ec.ModulusPoly[] runEuclideanAlgorithm(com.dcloud.zxing2.pdf417.decoder.ec.ModulusPoly,com.dcloud.zxing2.pdf417.decoder.ec.ModulusPoly,int) -> runEuclideanAlgorithm
com.dcloud.zxing2.pdf417.decoder.ec.ModulusGF -> com.dcloud.zxing2.pdf417.decoder.ec.ModulusGF:
    1:1:void <clinit>() -> <clinit>
    1:15:void <init>(int,int) -> <init>
    1:1:int add(int,int) -> add
    1:6:com.dcloud.zxing2.pdf417.decoder.ec.ModulusPoly buildMonomial(int,int) -> buildMonomial
    1:1:int exp(int) -> exp
    1:1:com.dcloud.zxing2.pdf417.decoder.ec.ModulusPoly getOne() -> getOne
    1:1:int getSize() -> getSize
    1:1:com.dcloud.zxing2.pdf417.decoder.ec.ModulusPoly getZero() -> getZero
    1:2:int inverse(int) -> inverse
    1:2:int log(int) -> log
    1:1:int multiply(int,int) -> multiply
    1:1:int subtract(int,int) -> subtract
com.dcloud.zxing2.pdf417.decoder.ec.ModulusPoly -> com.dcloud.zxing2.pdf417.decoder.ec.ModulusPoly:
    1:25:void <init>(com.dcloud.zxing2.pdf417.decoder.ec.ModulusGF,int[]) -> <init>
    1:28:com.dcloud.zxing2.pdf417.decoder.ec.ModulusPoly add(com.dcloud.zxing2.pdf417.decoder.ec.ModulusPoly) -> add
    1:25:com.dcloud.zxing2.pdf417.decoder.ec.ModulusPoly[] divide(com.dcloud.zxing2.pdf417.decoder.ec.ModulusPoly) -> divide
    1:14:int evaluateAt(int) -> evaluateAt
    1:1:int getCoefficient(int) -> getCoefficient
    1:1:int[] getCoefficients() -> getCoefficients
    1:1:int getDegree() -> getDegree
    1:1:boolean isZero() -> isZero
    1:20:com.dcloud.zxing2.pdf417.decoder.ec.ModulusPoly multiply(com.dcloud.zxing2.pdf417.decoder.ec.ModulusPoly) -> multiply
    21:31:com.dcloud.zxing2.pdf417.decoder.ec.ModulusPoly multiply(int) -> multiply
    1:9:com.dcloud.zxing2.pdf417.decoder.ec.ModulusPoly multiplyByMonomial(int,int) -> multiplyByMonomial
    1:6:com.dcloud.zxing2.pdf417.decoder.ec.ModulusPoly negative() -> negative
    1:8:com.dcloud.zxing2.pdf417.decoder.ec.ModulusPoly subtract(com.dcloud.zxing2.pdf417.decoder.ec.ModulusPoly) -> subtract
    1:26:java.lang.String toString() -> toString
com.dcloud.zxing2.pdf417.detector.Detector -> com.dcloud.zxing2.pdf417.detector.Detector:
    1:10:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:2:void copyToResult(com.dcloud.zxing2.ResultPoint[],com.dcloud.zxing2.ResultPoint[],int[]) -> copyToResult
    1:9:com.dcloud.zxing2.pdf417.detector.PDF417DetectorResult detect(com.dcloud.zxing2.BinaryBitmap,java.util.Map,boolean) -> detect
    10:49:java.util.List detect(boolean,com.dcloud.zxing2.common.BitMatrix) -> detect
    1:36:int[] findGuardPattern(com.dcloud.zxing2.common.BitMatrix,int,int,int,boolean,int[],int[]) -> findGuardPattern
    1:52:com.dcloud.zxing2.ResultPoint[] findRowsWithPattern(com.dcloud.zxing2.common.BitMatrix,int,int,int,int,int[]) -> findRowsWithPattern
    1:12:com.dcloud.zxing2.ResultPoint[] findVertices(com.dcloud.zxing2.common.BitMatrix,int,int) -> findVertices
    1:22:float patternMatchVariance(int[],int[],float) -> patternMatchVariance
com.dcloud.zxing2.pdf417.detector.PDF417DetectorResult -> com.dcloud.zxing2.pdf417.detector.PDF417DetectorResult:
    1:3:void <init>(com.dcloud.zxing2.common.BitMatrix,java.util.List) -> <init>
    1:1:com.dcloud.zxing2.common.BitMatrix getBits() -> getBits
    1:1:java.util.List getPoints() -> getPoints
com.dcloud.zxing2.pdf417.encoder.BarcodeMatrix -> com.dcloud.zxing2.pdf417.encoder.BarcodeMatrix:
    1:9:void <init>(int,int) -> <init>
    1:1:com.dcloud.zxing2.pdf417.encoder.BarcodeRow getCurrentRow() -> getCurrentRow
    1:1:byte[][] getMatrix() -> getMatrix
    1:4:byte[][] getScaledMatrix(int,int) -> getScaledMatrix
    1:1:void set(int,int,byte) -> set
    1:1:void startRow() -> startRow
com.dcloud.zxing2.pdf417.encoder.BarcodeRow -> com.dcloud.zxing2.pdf417.encoder.BarcodeRow:
    1:3:void <init>(int) -> <init>
    1:1:void addBar(boolean,int) -> addBar
    1:3:byte[] getScaledRow(int) -> getScaledRow
    1:1:void set(int,byte) -> set
    2:2:void set(int,boolean) -> set
com.dcloud.zxing2.pdf417.encoder.Compaction -> com.dcloud.zxing2.pdf417.encoder.Compaction:
    1:5:void <clinit>() -> <clinit>
    1:1:void <init>(java.lang.String,int) -> <init>
    1:1:com.dcloud.zxing2.pdf417.encoder.Compaction valueOf(java.lang.String) -> valueOf
    1:1:com.dcloud.zxing2.pdf417.encoder.Compaction[] values() -> values
com.dcloud.zxing2.pdf417.encoder.Dimensions -> com.dcloud.zxing2.pdf417.encoder.Dimensions:
    1:5:void <init>(int,int,int,int) -> <init>
    1:1:int getMaxCols() -> getMaxCols
    1:1:int getMaxRows() -> getMaxRows
    1:1:int getMinCols() -> getMinCols
    1:1:int getMinRows() -> getMinRows
com.dcloud.zxing2.pdf417.encoder.PDF417 -> com.dcloud.zxing2.pdf417.encoder.PDF417:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    2:9:void <init>(boolean) -> <init>
    1:1:int calculateNumberOfRows(int,int,int) -> calculateNumberOfRows
    1:33:int[] determineDimensions(int,int) -> determineDimensions
    1:8:void encodeChar(int,int,com.dcloud.zxing2.pdf417.encoder.BarcodeRow) -> encodeChar
    1:33:void encodeLowLevel(java.lang.CharSequence,int,int,int,com.dcloud.zxing2.pdf417.encoder.BarcodeMatrix) -> encodeLowLevel
    1:34:void generateBarcodeLogic(java.lang.String,int) -> generateBarcodeLogic
    1:1:com.dcloud.zxing2.pdf417.encoder.BarcodeMatrix getBarcodeMatrix() -> getBarcodeMatrix
    1:1:void setCompact(boolean) -> setCompact
    1:1:void setCompaction(com.dcloud.zxing2.pdf417.encoder.Compaction) -> setCompaction
    1:4:void setDimensions(int,int,int,int) -> setDimensions
    1:1:void setEncoding(java.nio.charset.Charset) -> setEncoding
com.dcloud.zxing2.pdf417.encoder.PDF417ErrorCorrection -> com.dcloud.zxing2.pdf417.encoder.PDF417ErrorCorrection:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:24:java.lang.String generateErrorCorrection(java.lang.CharSequence,int) -> generateErrorCorrection
    1:1:int getErrorCorrectionCodewordCount(int) -> getErrorCorrectionCodewordCount
    1:2:int getRecommendedMinimumErrorCorrectionLevel(int) -> getRecommendedMinimumErrorCorrectionLevel
com.dcloud.zxing2.pdf417.encoder.PDF417HighLevelEncoder -> com.dcloud.zxing2.pdf417.encoder.PDF417HighLevelEncoder:
    1:33:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:23:int determineConsecutiveBinaryCount(java.lang.String,int,java.nio.charset.Charset) -> determineConsecutiveBinaryCount
    1:9:int determineConsecutiveDigitCount(java.lang.CharSequence,int) -> determineConsecutiveDigitCount
    1:23:int determineConsecutiveTextCount(java.lang.CharSequence,int) -> determineConsecutiveTextCount
    1:34:void encodeBinary(byte[],int,int,int,java.lang.StringBuilder) -> encodeBinary
    1:87:java.lang.String encodeHighLevel(java.lang.String,com.dcloud.zxing2.pdf417.encoder.Compaction,java.nio.charset.Charset) -> encodeHighLevel
    1:16:void encodeNumeric(java.lang.String,int,int,java.lang.StringBuilder) -> encodeNumeric
    1:225:int encodeText(java.lang.CharSequence,int,int,java.lang.StringBuilder,int) -> encodeText
    1:11:void encodingECI(int,java.lang.StringBuilder) -> encodingECI
    1:1:boolean isMixed(char) -> isMixed
    1:1:boolean isPunctuation(char) -> isPunctuation
com.dcloud.zxing2.qrcode.QRCodeReader -> com.dcloud.zxing2.qrcode.QRCodeReader:
    1:1:void <clinit>() -> <clinit>
    1:5:void <init>() -> <init>
    1:1:com.dcloud.zxing2.Result decode(com.dcloud.zxing2.BinaryBitmap) -> decode
    2:35:com.dcloud.zxing2.Result decode(com.dcloud.zxing2.BinaryBitmap,java.util.Map) -> decode
    1:73:com.dcloud.zxing2.common.BitMatrix extractPureBits(com.dcloud.zxing2.common.BitMatrix) -> extractPureBits
    1:1:com.dcloud.zxing2.qrcode.decoder.Decoder getDecoder() -> getDecoder
    1:21:float moduleSize(int[],com.dcloud.zxing2.common.BitMatrix) -> moduleSize
com.dcloud.zxing2.qrcode.QRCodeWriter -> com.dcloud.zxing2.qrcode.QRCodeWriter:
    1:1:void <init>() -> <init>
    1:1:com.dcloud.zxing2.common.BitMatrix encode(java.lang.String,com.dcloud.zxing2.BarcodeFormat,int,int) -> encode
    2:30:com.dcloud.zxing2.common.BitMatrix encode(java.lang.String,com.dcloud.zxing2.BarcodeFormat,int,int,java.util.Map) -> encode
    1:27:com.dcloud.zxing2.common.BitMatrix renderResult(com.dcloud.zxing2.qrcode.encoder.QRCode,int,int,int) -> renderResult
com.dcloud.zxing2.qrcode.decoder.BitMatrixParser -> com.dcloud.zxing2.qrcode.decoder.BitMatrixParser:
    1:7:void <init>(com.dcloud.zxing2.common.BitMatrix) -> <init>
    1:1:int copyBit(int,int,int) -> copyBit
    1:5:void mirror() -> mirror
    1:48:byte[] readCodewords() -> readCodewords
    1:34:com.dcloud.zxing2.qrcode.decoder.FormatInformation readFormatInformation() -> readFormatInformation
    1:40:com.dcloud.zxing2.qrcode.decoder.Version readVersion() -> readVersion
    1:6:void remask() -> remask
    1:3:void setMirror(boolean) -> setMirror
com.dcloud.zxing2.qrcode.decoder.DataBlock -> com.dcloud.zxing2.qrcode.decoder.DataBlock:
    1:3:void <init>(int,byte[]) -> <init>
    1:1:byte[] getCodewords() -> getCodewords
    1:59:com.dcloud.zxing2.qrcode.decoder.DataBlock[] getDataBlocks(byte[],com.dcloud.zxing2.qrcode.decoder.Version,com.dcloud.zxing2.qrcode.decoder.ErrorCorrectionLevel) -> getDataBlocks
    1:1:int getNumDataCodewords() -> getNumDataCodewords
com.dcloud.zxing2.qrcode.decoder.DataMask -> com.dcloud.zxing2.qrcode.decoder.DataMask:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>(com.dcloud.zxing2.qrcode.decoder.DataMask$1) -> <init>
    2:2:void <init>() -> <init>
    1:2:com.dcloud.zxing2.qrcode.decoder.DataMask forReference(int) -> forReference
    1:2:void unmaskBitMatrix(com.dcloud.zxing2.common.BitMatrix,int) -> unmaskBitMatrix
com.dcloud.zxing2.qrcode.decoder.DataMask$DataMask000 -> com.dcloud.zxing2.qrcode.decoder.DataMask$DataMask000:
    1:1:void <init>() -> <init>
    2:2:void <init>(com.dcloud.zxing2.qrcode.decoder.DataMask$1) -> <init>
com.dcloud.zxing2.qrcode.decoder.DataMask$DataMask001 -> com.dcloud.zxing2.qrcode.decoder.DataMask$DataMask001:
    1:1:void <init>() -> <init>
    2:2:void <init>(com.dcloud.zxing2.qrcode.decoder.DataMask$1) -> <init>
com.dcloud.zxing2.qrcode.decoder.DataMask$DataMask010 -> com.dcloud.zxing2.qrcode.decoder.DataMask$DataMask010:
    1:1:void <init>() -> <init>
    2:2:void <init>(com.dcloud.zxing2.qrcode.decoder.DataMask$1) -> <init>
    1:1:boolean isMasked(int,int) -> isMasked
com.dcloud.zxing2.qrcode.decoder.DataMask$DataMask011 -> com.dcloud.zxing2.qrcode.decoder.DataMask$DataMask011:
    1:1:void <init>() -> <init>
    2:2:void <init>(com.dcloud.zxing2.qrcode.decoder.DataMask$1) -> <init>
    1:1:boolean isMasked(int,int) -> isMasked
com.dcloud.zxing2.qrcode.decoder.DataMask$DataMask100 -> com.dcloud.zxing2.qrcode.decoder.DataMask$DataMask100:
    1:1:void <init>() -> <init>
    2:2:void <init>(com.dcloud.zxing2.qrcode.decoder.DataMask$1) -> <init>
    1:1:boolean isMasked(int,int) -> isMasked
com.dcloud.zxing2.qrcode.decoder.DataMask$DataMask101 -> com.dcloud.zxing2.qrcode.decoder.DataMask$DataMask101:
    1:1:void <init>() -> <init>
    2:2:void <init>(com.dcloud.zxing2.qrcode.decoder.DataMask$1) -> <init>
    1:1:boolean isMasked(int,int) -> isMasked
com.dcloud.zxing2.qrcode.decoder.DataMask$DataMask110 -> com.dcloud.zxing2.qrcode.decoder.DataMask$DataMask110:
    1:1:void <init>() -> <init>
    2:2:void <init>(com.dcloud.zxing2.qrcode.decoder.DataMask$1) -> <init>
    1:1:boolean isMasked(int,int) -> isMasked
com.dcloud.zxing2.qrcode.decoder.DataMask$DataMask111 -> com.dcloud.zxing2.qrcode.decoder.DataMask$DataMask111:
    1:1:void <init>() -> <init>
    2:2:void <init>(com.dcloud.zxing2.qrcode.decoder.DataMask$1) -> <init>
    1:1:boolean isMasked(int,int) -> isMasked
com.dcloud.zxing2.qrcode.decoder.DecodedBitStreamParser -> com.dcloud.zxing2.qrcode.decoder.DecodedBitStreamParser:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:88:com.dcloud.zxing2.common.DecoderResult decode(byte[],com.dcloud.zxing2.qrcode.decoder.Version,com.dcloud.zxing2.qrcode.decoder.ErrorCorrectionLevel,java.util.Map) -> decode
    1:36:void decodeAlphanumericSegment(com.dcloud.zxing2.common.BitSource,java.lang.StringBuilder,int,boolean) -> decodeAlphanumericSegment
    1:27:java.lang.String decodeByteSegment(com.dcloud.zxing2.common.BitSource,java.lang.StringBuilder,int,com.dcloud.zxing2.common.CharacterSetECI,java.util.Collection,java.util.Map) -> decodeByteSegment
    1:30:void decodeHanziSegment(com.dcloud.zxing2.common.BitSource,java.lang.StringBuilder,int) -> decodeHanziSegment
    1:30:void decodeKanjiSegment(com.dcloud.zxing2.common.BitSource,java.lang.StringBuilder,int) -> decodeKanjiSegment
    1:54:void decodeNumericSegment(com.dcloud.zxing2.common.BitSource,java.lang.StringBuilder,int) -> decodeNumericSegment
    1:16:int parseECIValue(com.dcloud.zxing2.common.BitSource) -> parseECIValue
    1:5:char toAlphaNumericChar(int) -> toAlphaNumericChar
com.dcloud.zxing2.qrcode.decoder.Decoder -> com.dcloud.zxing2.qrcode.decoder.Decoder:
    1:2:void <init>() -> <init>
    1:17:void correctErrors(byte[],int) -> correctErrors
    1:1:com.dcloud.zxing2.common.DecoderResult decode(boolean[][]) -> decode
    2:11:com.dcloud.zxing2.common.DecoderResult decode(boolean[][],java.util.Map) -> decode
    12:12:com.dcloud.zxing2.common.DecoderResult decode(com.dcloud.zxing2.common.BitMatrix) -> decode
    13:63:com.dcloud.zxing2.common.DecoderResult decode(com.dcloud.zxing2.common.BitMatrix,java.util.Map) -> decode
    64:91:com.dcloud.zxing2.common.DecoderResult decode(com.dcloud.zxing2.qrcode.decoder.BitMatrixParser,java.util.Map) -> decode
com.dcloud.zxing2.qrcode.decoder.ErrorCorrectionLevel -> com.dcloud.zxing2.qrcode.decoder.ErrorCorrectionLevel:
    1:19:void <clinit>() -> <clinit>
    1:2:void <init>(java.lang.String,int,int) -> <init>
    1:5:com.dcloud.zxing2.qrcode.decoder.ErrorCorrectionLevel forBits(int) -> forBits
    1:1:int getBits() -> getBits
    1:1:com.dcloud.zxing2.qrcode.decoder.ErrorCorrectionLevel valueOf(java.lang.String) -> valueOf
    1:1:com.dcloud.zxing2.qrcode.decoder.ErrorCorrectionLevel[] values() -> values
com.dcloud.zxing2.qrcode.decoder.FormatInformation -> com.dcloud.zxing2.qrcode.decoder.FormatInformation:
    1:39:void <clinit>() -> <clinit>
    1:5:void <init>(int) -> <init>
    1:8:com.dcloud.zxing2.qrcode.decoder.FormatInformation decodeFormatInformation(int,int) -> decodeFormatInformation
    1:36:com.dcloud.zxing2.qrcode.decoder.FormatInformation doDecodeFormatInformation(int,int) -> doDecodeFormatInformation
    1:5:boolean equals(java.lang.Object) -> equals
    1:1:byte getDataMask() -> getDataMask
    1:1:com.dcloud.zxing2.qrcode.decoder.ErrorCorrectionLevel getErrorCorrectionLevel() -> getErrorCorrectionLevel
    1:1:int hashCode() -> hashCode
    1:1:int numBitsDiffering(int,int) -> numBitsDiffering
com.dcloud.zxing2.qrcode.decoder.Mode -> com.dcloud.zxing2.qrcode.decoder.Mode:
    1:12:void <clinit>() -> <clinit>
    1:3:void <init>(java.lang.String,int,int[],int) -> <init>
    1:11:com.dcloud.zxing2.qrcode.decoder.Mode forBits(int) -> forBits
    1:1:int getBits() -> getBits
    1:10:int getCharacterCountBits(com.dcloud.zxing2.qrcode.decoder.Version) -> getCharacterCountBits
    1:1:com.dcloud.zxing2.qrcode.decoder.Mode valueOf(java.lang.String) -> valueOf
    1:1:com.dcloud.zxing2.qrcode.decoder.Mode[] values() -> values
com.dcloud.zxing2.qrcode.decoder.QRCodeDecoderMetaData -> com.dcloud.zxing2.qrcode.decoder.QRCodeDecoderMetaData:
    1:2:void <init>(boolean) -> <init>
    1:6:void applyMirroredCorrection(com.dcloud.zxing2.ResultPoint[]) -> applyMirroredCorrection
    1:1:boolean isMirrored() -> isMirrored
com.dcloud.zxing2.qrcode.decoder.Version -> com.dcloud.zxing2.qrcode.decoder.Version:
    1:11:void <clinit>() -> <clinit>
    1:11:void <init>(int,int[],com.dcloud.zxing2.qrcode.decoder.Version$ECBlocks[]) -> <init>
    1:33:com.dcloud.zxing2.common.BitMatrix buildFunctionPattern() -> buildFunctionPattern
    1:1:com.dcloud.zxing2.qrcode.decoder.Version[] buildVersions() -> buildVersions
    1:18:com.dcloud.zxing2.qrcode.decoder.Version decodeVersionInformation(int) -> decodeVersionInformation
    1:1:int[] getAlignmentPatternCenters() -> getAlignmentPatternCenters
    1:1:int getDimensionForVersion() -> getDimensionForVersion
    1:1:com.dcloud.zxing2.qrcode.decoder.Version$ECBlocks getECBlocksForLevel(com.dcloud.zxing2.qrcode.decoder.ErrorCorrectionLevel) -> getECBlocksForLevel
    1:8:com.dcloud.zxing2.qrcode.decoder.Version getProvisionalVersionForDimension(int) -> getProvisionalVersionForDimension
    1:1:int getTotalCodewords() -> getTotalCodewords
    1:2:com.dcloud.zxing2.qrcode.decoder.Version getVersionForNumber(int) -> getVersionForNumber
    1:1:int getVersionNumber() -> getVersionNumber
    1:1:java.lang.String toString() -> toString
com.dcloud.zxing2.qrcode.decoder.Version$ECB -> com.dcloud.zxing2.qrcode.decoder.Version$ECB:
    1:3:void <init>(int,int) -> <init>
    1:1:int getCount() -> getCount
    1:1:int getDataCodewords() -> getDataCodewords
com.dcloud.zxing2.qrcode.decoder.Version$ECBlocks -> com.dcloud.zxing2.qrcode.decoder.Version$ECBlocks:
    1:3:void <init>(int,com.dcloud.zxing2.qrcode.decoder.Version$ECB[]) -> <init>
    1:1:com.dcloud.zxing2.qrcode.decoder.Version$ECB[] getECBlocks() -> getECBlocks
    1:1:int getECCodewordsPerBlock() -> getECCodewordsPerBlock
    1:2:int getNumBlocks() -> getNumBlocks
    1:1:int getTotalECCodewords() -> getTotalECCodewords
com.dcloud.zxing2.qrcode.detector.AlignmentPattern -> com.dcloud.zxing2.qrcode.detector.AlignmentPattern:
    1:2:void <init>(float,float,float) -> <init>
    1:3:boolean aboutEquals(float,float,float) -> aboutEquals
    1:4:com.dcloud.zxing2.qrcode.detector.AlignmentPattern combineEstimate(float,float,float) -> combineEstimate
com.dcloud.zxing2.qrcode.detector.AlignmentPatternFinder -> com.dcloud.zxing2.qrcode.detector.AlignmentPatternFinder:
    1:10:void <init>(com.dcloud.zxing2.common.BitMatrix,int,int,int,int,float,com.dcloud.zxing2.ResultPointCallback) -> <init>
    1:1:float centerFromEnd(int[],int) -> centerFromEnd
    1:49:float crossCheckVertical(int,int,int,int) -> crossCheckVertical
    1:66:com.dcloud.zxing2.qrcode.detector.AlignmentPattern find() -> find
    1:4:boolean foundPatternCross(int[]) -> foundPatternCross
    1:16:com.dcloud.zxing2.qrcode.detector.AlignmentPattern handlePossibleCenter(int[],int,int) -> handlePossibleCenter
com.dcloud.zxing2.qrcode.detector.Detector -> com.dcloud.zxing2.qrcode.detector.Detector:
    1:2:void <init>(com.dcloud.zxing2.common.BitMatrix) -> <init>
    1:2:float calculateModuleSize(com.dcloud.zxing2.ResultPoint,com.dcloud.zxing2.ResultPoint,com.dcloud.zxing2.ResultPoint) -> calculateModuleSize
    1:20:float calculateModuleSizeOneWay(com.dcloud.zxing2.ResultPoint,com.dcloud.zxing2.ResultPoint) -> calculateModuleSizeOneWay
    1:13:int computeDimension(com.dcloud.zxing2.ResultPoint,com.dcloud.zxing2.ResultPoint,com.dcloud.zxing2.ResultPoint,float) -> computeDimension
    1:30:com.dcloud.zxing2.common.PerspectiveTransform createTransform(com.dcloud.zxing2.ResultPoint,com.dcloud.zxing2.ResultPoint,com.dcloud.zxing2.ResultPoint,com.dcloud.zxing2.ResultPoint,int) -> createTransform
    1:1:com.dcloud.zxing2.common.DetectorResult detect() -> detect
    2:8:com.dcloud.zxing2.common.DetectorResult detect(java.util.Map) -> detect
    1:24:com.dcloud.zxing2.qrcode.detector.AlignmentPattern findAlignmentInRegion(float,int,int,float) -> findAlignmentInRegion
    1:1:com.dcloud.zxing2.common.BitMatrix getImage() -> getImage
    1:1:com.dcloud.zxing2.ResultPointCallback getResultPointCallback() -> getResultPointCallback
    1:54:com.dcloud.zxing2.common.DetectorResult processFinderPatternInfo(com.dcloud.zxing2.qrcode.detector.FinderPatternInfo) -> processFinderPatternInfo
    1:2:com.dcloud.zxing2.common.BitMatrix sampleGrid(com.dcloud.zxing2.common.BitMatrix,com.dcloud.zxing2.common.PerspectiveTransform,int) -> sampleGrid
    1:48:float sizeOfBlackWhiteBlackRun(int,int,int,int) -> sizeOfBlackWhiteBlackRun
    1:25:float sizeOfBlackWhiteBlackRunBothWays(int,int,int,int) -> sizeOfBlackWhiteBlackRunBothWays
com.dcloud.zxing2.qrcode.detector.FinderPattern -> com.dcloud.zxing2.qrcode.detector.FinderPattern:
    1:1:void <init>(float,float,float) -> <init>
    2:4:void <init>(float,float,float,int) -> <init>
    1:3:boolean aboutEquals(float,float,float) -> aboutEquals
    1:5:com.dcloud.zxing2.qrcode.detector.FinderPattern combineEstimate(float,float,float) -> combineEstimate
    1:1:int getCount() -> getCount
    1:1:float getEstimatedModuleSize() -> getEstimatedModuleSize
com.dcloud.zxing2.qrcode.detector.FinderPatternFinder -> com.dcloud.zxing2.qrcode.detector.FinderPatternFinder:
    1:1:void <init>(com.dcloud.zxing2.common.BitMatrix) -> <init>
    2:6:void <init>(com.dcloud.zxing2.common.BitMatrix,com.dcloud.zxing2.ResultPointCallback) -> <init>
    1:1:float centerFromEnd(int[],int) -> centerFromEnd
    1:76:boolean crossCheckDiagonal(int,int,int,int) -> crossCheckDiagonal
    1:60:float crossCheckHorizontal(int,int,int,int) -> crossCheckHorizontal
    1:63:float crossCheckVertical(int,int,int,int) -> crossCheckVertical
    1:122:com.dcloud.zxing2.qrcode.detector.FinderPatternInfo find(java.util.Map) -> find
    1:18:int findRowSkip() -> findRowSkip
    1:18:boolean foundPatternCross(int[]) -> foundPatternCross
    1:5:int[] getCrossCheckStateCount() -> getCrossCheckStateCount
    1:1:com.dcloud.zxing2.common.BitMatrix getImage() -> getImage
    1:1:java.util.List getPossibleCenters() -> getPossibleCenters
    1:25:boolean handlePossibleCenter(int[],int,int,boolean) -> handlePossibleCenter
    1:18:boolean haveMultiplyConfirmedCenters() -> haveMultiplyConfirmedCenters
    1:52:com.dcloud.zxing2.qrcode.detector.FinderPattern[] selectBestPatterns() -> selectBestPatterns
com.dcloud.zxing2.qrcode.detector.FinderPatternFinder$CenterComparator -> com.dcloud.zxing2.qrcode.detector.FinderPatternFinder$CenterComparator:
    1:1:void <init>(float,com.dcloud.zxing2.qrcode.detector.FinderPatternFinder$1) -> <init>
    2:3:void <init>(float) -> <init>
    1:1:int compare(java.lang.Object,java.lang.Object) -> compare
    2:7:int compare(com.dcloud.zxing2.qrcode.detector.FinderPattern,com.dcloud.zxing2.qrcode.detector.FinderPattern) -> compare
com.dcloud.zxing2.qrcode.detector.FinderPatternFinder$FurthestFromAverageComparator -> com.dcloud.zxing2.qrcode.detector.FinderPatternFinder$FurthestFromAverageComparator:
    1:1:void <init>(float,com.dcloud.zxing2.qrcode.detector.FinderPatternFinder$1) -> <init>
    2:3:void <init>(float) -> <init>
    1:1:int compare(java.lang.Object,java.lang.Object) -> compare
    2:3:int compare(com.dcloud.zxing2.qrcode.detector.FinderPattern,com.dcloud.zxing2.qrcode.detector.FinderPattern) -> compare
com.dcloud.zxing2.qrcode.detector.FinderPatternInfo -> com.dcloud.zxing2.qrcode.detector.FinderPatternInfo:
    1:4:void <init>(com.dcloud.zxing2.qrcode.detector.FinderPattern[]) -> <init>
    1:1:com.dcloud.zxing2.qrcode.detector.FinderPattern getBottomLeft() -> getBottomLeft
    1:1:com.dcloud.zxing2.qrcode.detector.FinderPattern getTopLeft() -> getTopLeft
    1:1:com.dcloud.zxing2.qrcode.detector.FinderPattern getTopRight() -> getTopRight
com.dcloud.zxing2.qrcode.encoder.BlockPair -> com.dcloud.zxing2.qrcode.encoder.BlockPair:
    1:3:void <init>(byte[],byte[]) -> <init>
    1:1:byte[] getDataBytes() -> getDataBytes
    1:1:byte[] getErrorCorrectionBytes() -> getErrorCorrectionBytes
com.dcloud.zxing2.qrcode.encoder.ByteMatrix -> com.dcloud.zxing2.qrcode.encoder.ByteMatrix:
    1:4:void <init>(int,int) -> <init>
    1:3:void clear(byte) -> clear
    1:1:byte get(int,int) -> get
    1:1:byte[][] getArray() -> getArray
    1:1:int getHeight() -> getHeight
    1:1:int getWidth() -> getWidth
    1:1:void set(int,int,byte) -> set
    2:2:void set(int,int,int) -> set
    3:3:void set(int,int,boolean) -> set
    1:26:java.lang.String toString() -> toString
com.dcloud.zxing2.qrcode.encoder.Encoder -> com.dcloud.zxing2.qrcode.encoder.Encoder:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:7:void append8BitBytes(java.lang.String,com.dcloud.zxing2.common.BitArray,java.lang.String) -> append8BitBytes
    1:23:void appendAlphanumericBytes(java.lang.CharSequence,com.dcloud.zxing2.common.BitArray) -> appendAlphanumericBytes
    1:19:void appendBytes(java.lang.String,com.dcloud.zxing2.qrcode.decoder.Mode,com.dcloud.zxing2.common.BitArray,java.lang.String) -> appendBytes
    1:3:void appendECI(com.dcloud.zxing2.common.CharacterSetECI,com.dcloud.zxing2.common.BitArray) -> appendECI
    1:22:void appendKanjiBytes(java.lang.String,com.dcloud.zxing2.common.BitArray) -> appendKanjiBytes
    1:6:void appendLengthInfo(int,com.dcloud.zxing2.qrcode.decoder.Version,com.dcloud.zxing2.qrcode.decoder.Mode,com.dcloud.zxing2.common.BitArray) -> appendLengthInfo
    1:1:void appendModeInfo(com.dcloud.zxing2.qrcode.decoder.Mode,com.dcloud.zxing2.common.BitArray) -> appendModeInfo
    1:18:void appendNumericBytes(java.lang.CharSequence,com.dcloud.zxing2.common.BitArray) -> appendNumericBytes
    1:4:int calculateMaskPenalty(com.dcloud.zxing2.qrcode.encoder.ByteMatrix) -> calculateMaskPenalty
    1:2:int chooseMaskPattern(com.dcloud.zxing2.common.BitArray,com.dcloud.zxing2.qrcode.decoder.ErrorCorrectionLevel,com.dcloud.zxing2.qrcode.decoder.Version,com.dcloud.zxing2.qrcode.encoder.ByteMatrix) -> chooseMaskPattern
    1:1:com.dcloud.zxing2.qrcode.decoder.Mode chooseMode(java.lang.String) -> chooseMode
    2:24:com.dcloud.zxing2.qrcode.decoder.Mode chooseMode(java.lang.String,java.lang.String) -> chooseMode
    1:14:com.dcloud.zxing2.qrcode.decoder.Version chooseVersion(int,com.dcloud.zxing2.qrcode.decoder.ErrorCorrectionLevel) -> chooseVersion
    1:1:com.dcloud.zxing2.qrcode.encoder.QRCode encode(java.lang.String,com.dcloud.zxing2.qrcode.decoder.ErrorCorrectionLevel) -> encode
    2:84:com.dcloud.zxing2.qrcode.encoder.QRCode encode(java.lang.String,com.dcloud.zxing2.qrcode.decoder.ErrorCorrectionLevel,java.util.Map) -> encode
    1:10:byte[] generateECBytes(byte[],int) -> generateECBytes
    1:2:int getAlphanumericCode(int) -> getAlphanumericCode
    1:43:void getNumDataBytesAndNumECBytesForBlockID(int,int,int,int,int[],int[]) -> getNumDataBytesAndNumECBytesForBlockID
    1:59:com.dcloud.zxing2.common.BitArray interleaveWithECBytes(com.dcloud.zxing2.common.BitArray,int,int,int) -> interleaveWithECBytes
    1:10:boolean isOnlyDoubleByteKanji(java.lang.String) -> isOnlyDoubleByteKanji
    1:23:void terminateBits(int,com.dcloud.zxing2.common.BitArray) -> terminateBits
com.dcloud.zxing2.qrcode.encoder.Encoder$1 -> com.dcloud.zxing2.qrcode.encoder.Encoder$1:
    1:1:void <clinit>() -> <clinit>
com.dcloud.zxing2.qrcode.encoder.MaskUtil -> com.dcloud.zxing2.qrcode.encoder.MaskUtil:
    1:1:void <init>() -> <init>
    1:1:int applyMaskPenaltyRule1(com.dcloud.zxing2.qrcode.encoder.ByteMatrix) -> applyMaskPenaltyRule1
    1:8:int applyMaskPenaltyRule1Internal(com.dcloud.zxing2.qrcode.encoder.ByteMatrix,boolean) -> applyMaskPenaltyRule1Internal
    1:7:int applyMaskPenaltyRule2(com.dcloud.zxing2.qrcode.encoder.ByteMatrix) -> applyMaskPenaltyRule2
    1:26:int applyMaskPenaltyRule3(com.dcloud.zxing2.qrcode.encoder.ByteMatrix) -> applyMaskPenaltyRule3
    1:13:int applyMaskPenaltyRule4(com.dcloud.zxing2.qrcode.encoder.ByteMatrix) -> applyMaskPenaltyRule4
    1:7:boolean getDataMaskBit(int,int,int) -> getDataMaskBit
    1:1:boolean isWhiteHorizontal(byte[],int,int) -> isWhiteHorizontal
    1:1:boolean isWhiteVertical(byte[][],int,int,int) -> isWhiteVertical
com.dcloud.zxing2.qrcode.encoder.MatrixUtil -> com.dcloud.zxing2.qrcode.encoder.MatrixUtil:
    1:64:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:8:void buildMatrix(com.dcloud.zxing2.common.BitArray,com.dcloud.zxing2.qrcode.decoder.ErrorCorrectionLevel,com.dcloud.zxing2.qrcode.decoder.Version,int,com.dcloud.zxing2.qrcode.encoder.ByteMatrix) -> buildMatrix
    1:6:int calculateBCHCode(int,int) -> calculateBCHCode
    1:1:void clearMatrix(com.dcloud.zxing2.qrcode.encoder.ByteMatrix) -> clearMatrix
    1:8:void embedBasicPatterns(com.dcloud.zxing2.qrcode.decoder.Version,com.dcloud.zxing2.qrcode.encoder.ByteMatrix) -> embedBasicPatterns
    1:5:void embedDarkDotAtLeftBottomCorner(com.dcloud.zxing2.qrcode.encoder.ByteMatrix) -> embedDarkDotAtLeftBottomCorner
    1:39:void embedDataBits(com.dcloud.zxing2.common.BitArray,int,com.dcloud.zxing2.qrcode.encoder.ByteMatrix) -> embedDataBits
    1:5:void embedHorizontalSeparationPattern(int,int,com.dcloud.zxing2.qrcode.encoder.ByteMatrix) -> embedHorizontalSeparationPattern
    1:1:void embedPositionAdjustmentPattern(int,int,com.dcloud.zxing2.qrcode.encoder.ByteMatrix) -> embedPositionAdjustmentPattern
    1:1:void embedPositionDetectionPattern(int,int,com.dcloud.zxing2.qrcode.encoder.ByteMatrix) -> embedPositionDetectionPattern
    1:26:void embedPositionDetectionPatternsAndSeparators(com.dcloud.zxing2.qrcode.encoder.ByteMatrix) -> embedPositionDetectionPatternsAndSeparators
    1:9:void embedTimingPatterns(com.dcloud.zxing2.qrcode.encoder.ByteMatrix) -> embedTimingPatterns
    1:23:void embedTypeInfo(com.dcloud.zxing2.qrcode.decoder.ErrorCorrectionLevel,int,com.dcloud.zxing2.qrcode.encoder.ByteMatrix) -> embedTypeInfo
    1:5:void embedVerticalSeparationPattern(int,int,com.dcloud.zxing2.qrcode.encoder.ByteMatrix) -> embedVerticalSeparationPattern
    1:16:void makeTypeInfoBits(com.dcloud.zxing2.qrcode.decoder.ErrorCorrectionLevel,int,com.dcloud.zxing2.common.BitArray) -> makeTypeInfoBits
    1:6:void makeVersionInfoBits(com.dcloud.zxing2.qrcode.decoder.Version,com.dcloud.zxing2.common.BitArray) -> makeVersionInfoBits
    1:18:void maybeEmbedPositionAdjustmentPatterns(com.dcloud.zxing2.qrcode.decoder.Version,com.dcloud.zxing2.qrcode.encoder.ByteMatrix) -> maybeEmbedPositionAdjustmentPatterns
    1:16:void maybeEmbedVersionInfo(com.dcloud.zxing2.qrcode.decoder.Version,com.dcloud.zxing2.qrcode.encoder.ByteMatrix) -> maybeEmbedVersionInfo
com.dcloud.zxing2.qrcode.encoder.QRCode -> com.dcloud.zxing2.qrcode.encoder.QRCode:
    1:2:void <init>() -> <init>
    1:1:com.dcloud.zxing2.qrcode.decoder.ErrorCorrectionLevel getECLevel() -> getECLevel
    1:1:int getMaskPattern() -> getMaskPattern
    1:1:com.dcloud.zxing2.qrcode.encoder.ByteMatrix getMatrix() -> getMatrix
    1:1:com.dcloud.zxing2.qrcode.decoder.Mode getMode() -> getMode
    1:1:com.dcloud.zxing2.qrcode.decoder.Version getVersion() -> getVersion
    1:1:void setECLevel(com.dcloud.zxing2.qrcode.decoder.ErrorCorrectionLevel) -> setECLevel
    1:1:void setMaskPattern(int) -> setMaskPattern
    1:1:void setMatrix(com.dcloud.zxing2.qrcode.encoder.ByteMatrix) -> setMatrix
    1:1:void setMode(com.dcloud.zxing2.qrcode.decoder.Mode) -> setMode
    1:1:void setVersion(com.dcloud.zxing2.qrcode.decoder.Version) -> setVersion
    1:18:java.lang.String toString() -> toString
com.dmcbig.mediapicker.MediaPickerR -> com.dmcbig.mediapicker.MediaPickerR:
    1:69:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
com.dmcbig.mediapicker.PickerActivity -> com.dmcbig.mediapicker.PickerActivity:
    1:14:void <init>() -> <init>
    1:1:com.dmcbig.mediapicker.adapter.FolderAdapter access$000(com.dmcbig.mediapicker.PickerActivity) -> access$000
    1:1:java.lang.String access$100(com.dmcbig.mediapicker.PickerActivity,java.lang.String) -> access$100
    1:4:void attachBaseContext(android.content.Context) -> attachBaseContext
    1:34:void createAdapter() -> createAdapter
    1:9:void createFolderAdapter() -> createFolderAdapter
    1:113:java.lang.String decodeFile(java.lang.String) -> decodeFile
    1:31:void done(java.util.ArrayList) -> done
    1:7:void getMediaData() -> getMediaData
    1:7:void getOtherArgs() -> getOtherArgs
    1:13:byte[] inputStream2ByteArr(java.lang.String) -> inputStream2ByteArr
    1:41:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    1:3:void onBackPressed() -> onBackPressed
    1:37:void onClick(android.view.View) -> onClick
    1:1:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    1:52:void onCreate(android.os.Bundle) -> onCreate
    1:3:void onData(java.util.ArrayList) -> onData
    1:2:void onDestroy() -> onDestroy
    1:3:void onPause() -> onPause
    1:1:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    1:3:void onResume() -> onResume
    1:14:void setButtonText() -> setButtonText
    1:9:void setFullScreen(android.app.Activity,boolean) -> setFullScreen
    1:7:void setTitleBar() -> setTitleBar
    1:5:void setTopAndBottomBarColor() -> setTopAndBottomBarColor
    1:3:void setView(java.util.ArrayList) -> setView
com.dmcbig.mediapicker.PickerActivity$1 -> com.dmcbig.mediapicker.PickerActivity$1:
    1:1:void <init>(com.dmcbig.mediapicker.PickerActivity,java.lang.String) -> <init>
    1:2:void onMaxed() -> onMaxed
com.dmcbig.mediapicker.PickerActivity$2 -> com.dmcbig.mediapicker.PickerActivity$2:
    1:1:void <init>(com.dmcbig.mediapicker.PickerActivity) -> <init>
    1:4:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.dmcbig.mediapicker.PickerActivity$3 -> com.dmcbig.mediapicker.PickerActivity$3:
    1:1:void <init>(com.dmcbig.mediapicker.PickerActivity) -> <init>
    1:46:void onItemClick(android.view.View,com.dmcbig.mediapicker.entity.Media,java.util.ArrayList) -> onItemClick
com.dmcbig.mediapicker.PickerActivity$4 -> com.dmcbig.mediapicker.PickerActivity$4:
    1:1:void <init>(com.dmcbig.mediapicker.PickerActivity,java.util.ArrayList) -> <init>
    1:10:void run() -> run
com.dmcbig.mediapicker.PickerActivity$4$1 -> com.dmcbig.mediapicker.PickerActivity$4$1:
    1:1:void <init>(com.dmcbig.mediapicker.PickerActivity$4) -> <init>
    1:4:void run() -> run
com.dmcbig.mediapicker.PickerConfig -> com.dmcbig.mediapicker.PickerConfig:
    1:1:void <init>() -> <init>
com.dmcbig.mediapicker.PreviewActivity -> com.dmcbig.mediapicker.PreviewActivity:
    1:15:void <init>() -> <init>
    1:7:void done(java.util.ArrayList,int) -> done
    1:6:int isSelect(com.dmcbig.mediapicker.entity.Media,java.util.ArrayList) -> isSelect
    1:23:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    1:2:void onBackPressed() -> onBackPressed
    1:28:void onClick(android.view.View) -> onClick
    1:59:void onCreate(android.os.Bundle) -> onCreate
    1:12:void onPageSelected(int) -> onPageSelected
    1:10:void setBarStatus() -> setBarStatus
    1:6:void setDoneView(int) -> setDoneView
    1:9:void setFullScreen(android.app.Activity,boolean) -> setFullScreen
    1:5:void setTopAndBottomBarColor() -> setTopAndBottomBarColor
    1:13:void setView(java.util.ArrayList) -> setView
com.dmcbig.mediapicker.PreviewActivity$AdapterFragment -> com.dmcbig.mediapicker.PreviewActivity$AdapterFragment:
    1:3:void <init>(com.dmcbig.mediapicker.PreviewActivity,androidx.fragment.app.FragmentManager,java.util.List) -> <init>
    1:1:int getCount() -> getCount
    1:1:androidx.fragment.app.Fragment getItem(int) -> getItem
com.dmcbig.mediapicker.TakePhotoActivity -> com.dmcbig.mediapicker.TakePhotoActivity:
    1:3:void <init>() -> <init>
    1:4:java.io.File createImageFile() -> createImageFile
    1:10:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    1:20:void onCreate(android.os.Bundle) -> onCreate
com.dmcbig.mediapicker.adapter.FolderAdapter -> com.dmcbig.mediapicker.adapter.FolderAdapter:
    1:7:void <init>(java.util.ArrayList,android.content.Context) -> <init>
    1:1:int getCount() -> getCount
    1:1:java.lang.Object getItem(int) -> getItem
    2:2:com.dmcbig.mediapicker.entity.Folder getItem(int) -> getItem
    1:1:java.util.ArrayList getSelectMedias() -> getSelectMedias
    1:21:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    1:3:void setSelectIndex(int) -> setSelectIndex
    1:2:void updateAdapter(java.util.ArrayList) -> updateAdapter
com.dmcbig.mediapicker.adapter.FolderAdapter$ViewHolder -> com.dmcbig.mediapicker.adapter.FolderAdapter$ViewHolder:
    1:7:void <init>(com.dmcbig.mediapicker.adapter.FolderAdapter,android.view.View) -> <init>
com.dmcbig.mediapicker.adapter.MediaGridAdapter -> com.dmcbig.mediapicker.adapter.MediaGridAdapter:
    1:173:void <init>(java.util.ArrayList,android.content.Context,java.util.ArrayList,int,long,boolean) -> <init>
    1:1:com.dmcbig.mediapicker.adapter.MediaGridAdapter$OnRecyclerViewItemClickListener access$000(com.dmcbig.mediapicker.adapter.MediaGridAdapter) -> access$000
    1:1:com.dmcbig.mediapicker.adapter.MediaGridAdapter$OnPickerSelectMaxListener access$100(com.dmcbig.mediapicker.adapter.MediaGridAdapter) -> access$100
    1:1:int getItemCount() -> getItemCount
    1:1:int getItemIndex(java.lang.Object) -> getItemIndex
    1:1:int getItemWidth() -> getItemWidth
    1:1:java.util.ArrayList getMedias() -> getMedias
    1:1:java.util.ArrayList getSelectMedias() -> getSelectMedias
    1:7:int isSelect(com.dmcbig.mediapicker.entity.Media) -> isSelect
    1:1:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    2:36:void onBindViewHolder(com.dmcbig.mediapicker.adapter.MediaGridAdapter$MyViewHolder,int) -> onBindViewHolder
    1:1:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    2:3:com.dmcbig.mediapicker.adapter.MediaGridAdapter$MyViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    1:1:void setOnItemClickListener(com.dmcbig.mediapicker.adapter.MediaGridAdapter$OnRecyclerViewItemClickListener) -> setOnItemClickListener
    1:1:void setOnMaxListener(com.dmcbig.mediapicker.adapter.MediaGridAdapter$OnPickerSelectMaxListener) -> setOnMaxListener
    1:5:void setSelectMedias(com.dmcbig.mediapicker.entity.Media) -> setSelectMedias
    1:2:void updateAdapter(java.util.ArrayList) -> updateAdapter
    1:3:void updateSelectAdapter(java.util.ArrayList) -> updateSelectAdapter
com.dmcbig.mediapicker.adapter.MediaGridAdapter$1 -> com.dmcbig.mediapicker.adapter.MediaGridAdapter$1:
    1:1:void <init>(com.dmcbig.mediapicker.adapter.MediaGridAdapter,com.dmcbig.mediapicker.entity.Media,com.dmcbig.mediapicker.adapter.MediaGridAdapter$MyViewHolder) -> <init>
    1:18:void onClick(android.view.View) -> onClick
com.dmcbig.mediapicker.adapter.MediaGridAdapter$MyViewHolder -> com.dmcbig.mediapicker.adapter.MediaGridAdapter$MyViewHolder:
    1:9:void <init>(com.dmcbig.mediapicker.adapter.MediaGridAdapter,android.view.View) -> <init>
com.dmcbig.mediapicker.adapter.SpacingDecoration -> com.dmcbig.mediapicker.adapter.SpacingDecoration:
    1:3:void <init>(int,int) -> <init>
    1:5:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
com.dmcbig.mediapicker.data.ImageLoader -> com.dmcbig.mediapicker.data.ImageLoader:
    1:15:void <init>(android.content.Context,com.dmcbig.mediapicker.data.DataCallback) -> <init>
    1:2:android.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    1:33:void onLoadFinished(android.content.Loader,java.lang.Object) -> onLoadFinished
com.dmcbig.mediapicker.data.LoaderM -> com.dmcbig.mediapicker.data.LoaderM:
    1:1:void <init>() -> <init>
    1:2:java.lang.String getParent(java.lang.String) -> getParent
    1:3:int hasDir(java.util.ArrayList,java.lang.String) -> hasDir
com.dmcbig.mediapicker.data.MediaLoader -> com.dmcbig.mediapicker.data.MediaLoader:
    1:16:void <init>(android.content.Context,com.dmcbig.mediapicker.data.DataCallback) -> <init>
    1:2:android.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    1:37:void onLoadFinished(android.content.Loader,java.lang.Object) -> onLoadFinished
com.dmcbig.mediapicker.data.VideoLoader -> com.dmcbig.mediapicker.data.VideoLoader:
    1:16:void <init>(android.content.Context,com.dmcbig.mediapicker.data.DataCallback) -> <init>
    1:2:android.content.Loader onCreateLoader(int,android.os.Bundle) -> onCreateLoader
    1:32:void onLoadFinished(android.content.Loader,java.lang.Object) -> onLoadFinished
com.dmcbig.mediapicker.entity.Folder -> com.dmcbig.mediapicker.entity.Folder:
    1:1:void <clinit>() -> <clinit>
    1:9:void <init>(java.lang.String) -> <init>
    10:42:void <init>(android.os.Parcel) -> <init>
    1:1:void addMedias(com.dmcbig.mediapicker.entity.Media) -> addMedias
    1:1:java.util.ArrayList getMedias() -> getMedias
    1:3:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.dmcbig.mediapicker.entity.Folder$1 -> com.dmcbig.mediapicker.entity.Folder$1:
    1:1:void <init>() -> <init>
    1:1:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2:2:com.dmcbig.mediapicker.entity.Folder createFromParcel(android.os.Parcel) -> createFromParcel
    1:1:java.lang.Object[] newArray(int) -> newArray
    2:2:com.dmcbig.mediapicker.entity.Folder[] newArray(int) -> newArray
com.dmcbig.mediapicker.entity.Media -> com.dmcbig.mediapicker.entity.Media:
    1:1:void <clinit>() -> <clinit>
    1:13:void <init>(java.lang.String,java.lang.String,long,int,long,int,java.lang.String) -> <init>
    14:22:void <init>(android.os.Parcel) -> <init>
    1:8:void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.dmcbig.mediapicker.entity.Media$1 -> com.dmcbig.mediapicker.entity.Media$1:
    1:1:void <init>() -> <init>
    1:1:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2:2:com.dmcbig.mediapicker.entity.Media createFromParcel(android.os.Parcel) -> createFromParcel
    1:1:java.lang.Object[] newArray(int) -> newArray
    2:2:com.dmcbig.mediapicker.entity.Media[] newArray(int) -> newArray
com.dmcbig.mediapicker.utils.FileUtils -> com.dmcbig.mediapicker.utils.FileUtils:
    1:1:void <init>() -> <init>
    1:12:java.io.File createTmpFile(android.content.Context) -> createTmpFile
    1:3:java.lang.String fileSize(long) -> fileSize
    1:1:java.io.File getCacheDirectory(android.content.Context) -> getCacheDirectory
    2:16:java.io.File getCacheDirectory(android.content.Context,boolean) -> getCacheDirectory
    1:8:java.io.File getExternalCacheDir(android.content.Context) -> getExternalCacheDir
    1:4:java.io.File getIndividualCacheDirectory(android.content.Context,java.lang.String) -> getIndividualCacheDirectory
    1:13:java.lang.String getMimeType(android.content.Context,android.net.Uri) -> getMimeType
    1:1:java.lang.String getMimeTypeByFileName(java.lang.String) -> getMimeTypeByFileName
    1:8:java.lang.String getRealPathFromURI(android.content.Context,android.net.Uri) -> getRealPathFromURI
    1:4:java.lang.String getSizeByUnit(double) -> getSizeByUnit
    1:1:boolean hasExternalStoragePermission(android.content.Context) -> hasExternalStoragePermission
com.dmcbig.mediapicker.utils.ScreenUtils -> com.dmcbig.mediapicker.utils.ScreenUtils:
    1:2:void <init>() -> <init>
    1:2:int dp2px(android.content.Context,float) -> dp2px
    1:2:int getBottomStatusHeight(android.content.Context) -> getBottomStatusHeight
    1:13:int getDpi(android.content.Context) -> getDpi
    1:4:int getScreenHeight(android.content.Context) -> getScreenHeight
    1:4:int getScreenWidth(android.content.Context) -> getScreenWidth
    1:1:int getTitleHeight(android.app.Activity) -> getTitleHeight
    1:1:boolean isScreenOriatationPortrait(android.content.Context) -> isScreenOriatationPortrait
    1:1:float px2dp(android.content.Context,float) -> px2dp
    1:1:float px2sp(android.content.Context,float) -> px2sp
    1:2:int sp2px(android.content.Context,float) -> sp2px
com.dmcbig.mediapicker.view.HackyViewPager -> com.dmcbig.mediapicker.view.HackyViewPager:
    1:1:void <init>(android.content.Context) -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1:1:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
com.dmcbig.mediapicker.view.PreviewFragment -> com.dmcbig.mediapicker.view.PreviewFragment:
    1:1:void <init>() -> <init>
    1:1:boolean access$000(com.dmcbig.mediapicker.view.PreviewFragment,android.content.Context,android.content.Intent) -> access$000
    1:2:boolean isIntentAvailable(android.content.Context,android.content.Intent) -> isIntentAvailable
    1:4:com.dmcbig.mediapicker.view.PreviewFragment newInstance(com.dmcbig.mediapicker.entity.Media,java.lang.String) -> newInstance
    1:2:void onCreate(android.os.Bundle) -> onCreate
    1:1:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    1:1:void onDestroyView() -> onDestroyView
    1:27:void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    1:3:void setPlayView(com.dmcbig.mediapicker.entity.Media) -> setPlayView
com.dmcbig.mediapicker.view.PreviewFragment$1 -> com.dmcbig.mediapicker.view.PreviewFragment$1:
    1:1:void <init>(com.dmcbig.mediapicker.view.PreviewFragment) -> <init>
    1:2:void onPhotoTap(android.widget.ImageView,float,float) -> onPhotoTap
com.dmcbig.mediapicker.view.PreviewFragment$2 -> com.dmcbig.mediapicker.view.PreviewFragment$2:
    1:1:void <init>(com.dmcbig.mediapicker.view.PreviewFragment,com.dmcbig.mediapicker.entity.Media) -> <init>
    1:5:void onClick(android.view.View) -> onClick
com.dmcbig.mediapicker.view.SquareFrameLayout -> com.dmcbig.mediapicker.view.SquareFrameLayout:
    1:1:void <init>(android.content.Context) -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    4:4:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1:2:void onMeasure(int,int) -> onMeasure
com.facebook.animated.drawable.BuildConfig -> com.facebook.animated.drawable.BuildConfig:
    6:6:void <init>() -> <init>
com.facebook.animated.gif.BuildConfig -> com.facebook.animated.gif.BuildConfig:
    6:6:void <init>() -> <init>
com.facebook.animated.gif.GifFrame -> com.facebook.animated.gif.GifFrame:
    32:34:void <init>(long) -> <init>
    43:44:void dispose() -> dispose
    38:39:void finalize() -> finalize
    85:85:int getDisposalMode() -> getDisposalMode
    53:53:int getDurationMs() -> getDurationMs
    63:63:int getHeight() -> getHeight
    81:81:int getTransparentPixelColor() -> getTransparentPixelColor
    58:58:int getWidth() -> getWidth
    68:68:int getXOffset() -> getXOffset
    73:73:int getYOffset() -> getYOffset
    77:77:boolean hasTransparency() -> hasTransparency
    48:49:void renderFrame(int,int,android.graphics.Bitmap) -> renderFrame
com.facebook.animated.gif.GifImage -> com.facebook.animated.gif.GifImage:
    93:94:void <init>() -> <init>
    102:104:void <init>(long) -> <init>
    53:60:com.facebook.animated.gif.GifImage create(byte[]) -> create
    70:73:com.facebook.animated.gif.GifImage create(java.nio.ByteBuffer) -> create
    77:79:com.facebook.animated.gif.GifImage create(long,int) -> create
    84:84:com.facebook.imagepipeline.animated.base.AnimatedImage decode(long,int) -> decode
    89:89:com.facebook.imagepipeline.animated.base.AnimatedImage decode(java.nio.ByteBuffer) -> decode
    113:114:void dispose() -> dispose
    166:166:boolean doesRenderSupportScaling() -> doesRenderSupportScaling
    39:44:void ensure() -> ensure
    108:109:void finalize() -> finalize
    192:201:com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo$DisposalMethod fromGifDisposalMethod(int) -> fromGifDisposalMethod
    133:133:int getDuration() -> getDuration
    25:25:com.facebook.imagepipeline.animated.base.AnimatedImageFrame getFrame(int) -> getFrame
    161:161:com.facebook.animated.gif.GifFrame getFrame(int) -> getFrame
    128:128:int getFrameCount() -> getFrameCount
    138:138:int[] getFrameDurations() -> getFrameDurations
    176:187:com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo getFrameInfo(int) -> getFrameInfo
    123:123:int getHeight() -> getHeight
    146:155:int getLoopCount() -> getLoopCount
    171:171:int getSizeInBytes() -> getSizeInBytes
    118:118:int getWidth() -> getWidth
com.facebook.binaryresource.ByteArrayBinaryResource -> com.facebook.binaryresource.ByteArrayBinaryResource:
    21:23:void <init>(byte[]) -> <init>
    32:32:java.io.InputStream openStream() -> openStream
    41:41:byte[] read() -> read
    27:27:long size() -> size
com.facebook.binaryresource.FileBinaryResource -> com.facebook.binaryresource.FileBinaryResource:
    24:26:void <init>(java.io.File) -> <init>
    66:66:com.facebook.binaryresource.FileBinaryResource createOrNull(java.io.File) -> createOrNull
    49:53:boolean equals(java.lang.Object) -> equals
    29:29:java.io.File getFile() -> getFile
    58:58:int hashCode() -> hashCode
    34:34:java.io.InputStream openStream() -> openStream
    44:44:byte[] read() -> read
    39:39:long size() -> size
com.facebook.cache.common.BaseCacheEventListener -> com.facebook.cache.common.BaseCacheEventListener:
    13:13:void <init>() -> <init>
    45:45:void onCleared() -> onCleared
    41:41:void onEviction(com.facebook.cache.common.CacheEvent) -> onEviction
    17:17:void onHit(com.facebook.cache.common.CacheEvent) -> onHit
    21:21:void onMiss(com.facebook.cache.common.CacheEvent) -> onMiss
    33:33:void onReadException(com.facebook.cache.common.CacheEvent) -> onReadException
    25:25:void onWriteAttempt(com.facebook.cache.common.CacheEvent) -> onWriteAttempt
    37:37:void onWriteException(com.facebook.cache.common.CacheEvent) -> onWriteException
    29:29:void onWriteSuccess(com.facebook.cache.common.CacheEvent) -> onWriteSuccess
com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory -> com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory:
    20:40:void <clinit>() -> <clinit>
    20:20:void <init>(java.lang.String,int) -> <init>
    20:20:com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory valueOf(java.lang.String) -> valueOf
    20:20:com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory[] values() -> values
com.facebook.cache.common.CacheEventListener$EvictionReason -> com.facebook.cache.common.CacheEventListener$EvictionReason:
    60:64:void <clinit>() -> <clinit>
    60:60:void <init>(java.lang.String,int) -> <init>
    60:60:com.facebook.cache.common.CacheEventListener$EvictionReason valueOf(java.lang.String) -> valueOf
    60:60:com.facebook.cache.common.CacheEventListener$EvictionReason[] values() -> values
com.facebook.cache.common.CacheKeyUtil -> com.facebook.cache.common.CacheKeyUtil:
    14:14:void <init>() -> <init>
    44:52:java.lang.String getFirstResourceId(com.facebook.cache.common.CacheKey) -> getFirstResourceId
    22:35:java.util.List getResourceIds(com.facebook.cache.common.CacheKey) -> getResourceIds
    57:57:java.lang.String secureHashKey(com.facebook.cache.common.CacheKey) -> secureHashKey
com.facebook.cache.common.DebuggingCacheKey -> com.facebook.cache.common.DebuggingCacheKey:
    23:26:void <init>(java.lang.String,java.lang.Object,android.net.Uri) -> <init>
    30:30:java.lang.Object getCallerContext() -> getCallerContext
    37:37:android.net.Uri getSourceUri() -> getSourceUri
com.facebook.cache.common.MultiCacheKey -> com.facebook.cache.common.MultiCacheKey:
    29:31:void <init>(java.util.List) -> <init>
    61:66:boolean containsUri(android.net.Uri) -> containsUri
    44:51:boolean equals(java.lang.Object) -> equals
    34:34:java.util.List getCacheKeys() -> getCacheKeys
    71:71:java.lang.String getUriString() -> getUriString
    56:56:int hashCode() -> hashCode
    39:39:java.lang.String toString() -> toString
com.facebook.cache.common.NoOpCacheErrorLogger -> com.facebook.cache.common.NoOpCacheErrorLogger:
    16:16:void <clinit>() -> <clinit>
    18:19:void <init>() -> <init>
    21:25:com.facebook.cache.common.NoOpCacheErrorLogger getInstance() -> getInstance
    41:41:void logError(com.facebook.cache.common.CacheErrorLogger$CacheErrorCategory,java.lang.Class,java.lang.String,java.lang.Throwable) -> logError
com.facebook.cache.common.NoOpCacheEventListener -> com.facebook.cache.common.NoOpCacheEventListener:
    16:16:void <clinit>() -> <clinit>
    18:19:void <init>() -> <init>
    21:25:com.facebook.cache.common.NoOpCacheEventListener getInstance() -> getInstance
    59:59:void onCleared() -> onCleared
    55:55:void onEviction(com.facebook.cache.common.CacheEvent) -> onEviction
    31:31:void onHit(com.facebook.cache.common.CacheEvent) -> onHit
    35:35:void onMiss(com.facebook.cache.common.CacheEvent) -> onMiss
    47:47:void onReadException(com.facebook.cache.common.CacheEvent) -> onReadException
    39:39:void onWriteAttempt(com.facebook.cache.common.CacheEvent) -> onWriteAttempt
    51:51:void onWriteException(com.facebook.cache.common.CacheEvent) -> onWriteException
    43:43:void onWriteSuccess(com.facebook.cache.common.CacheEvent) -> onWriteSuccess
com.facebook.cache.common.SimpleCacheKey -> com.facebook.cache.common.SimpleCacheKey:
    22:24:void <init>(java.lang.String) -> <init>
    50:50:boolean containsUri(android.net.Uri) -> containsUri
    33:40:boolean equals(java.lang.Object) -> equals
    55:55:java.lang.String getUriString() -> getUriString
    45:45:int hashCode() -> hashCode
    28:28:java.lang.String toString() -> toString
com.facebook.cache.common.WriterCallbacks -> com.facebook.cache.common.WriterCallbacks:
    18:18:void <init>() -> <init>
    29:29:com.facebook.cache.common.WriterCallback from(java.io.InputStream) -> from
    45:45:com.facebook.cache.common.WriterCallback from(byte[]) -> from
com.facebook.cache.common.WriterCallbacks$1 -> com.facebook.cache.common.WriterCallbacks$1:
    29:29:void <init>(java.io.InputStream) -> <init>
    32:33:void write(java.io.OutputStream) -> write
com.facebook.cache.common.WriterCallbacks$2 -> com.facebook.cache.common.WriterCallbacks$2:
    45:45:void <init>(byte[]) -> <init>
    48:49:void write(java.io.OutputStream) -> write
com.facebook.cache.disk.DefaultDiskStorage -> com.facebook.cache.disk.DefaultDiskStorage:
    41:61:void <clinit>() -> <clinit>
    98:112:void <init>(java.io.File,int,com.facebook.cache.common.CacheErrorLogger) -> <init>
    39:39:com.facebook.cache.disk.DefaultDiskStorage$FileInfo access$000(com.facebook.cache.disk.DefaultDiskStorage,java.io.File) -> access$000
    39:39:com.facebook.cache.common.CacheErrorLogger access$1000(com.facebook.cache.disk.DefaultDiskStorage) -> access$1000
    39:39:java.io.File access$200(com.facebook.cache.disk.DefaultDiskStorage) -> access$200
    39:39:java.io.File access$300(com.facebook.cache.disk.DefaultDiskStorage) -> access$300
    39:39:com.facebook.common.time.Clock access$400(com.facebook.cache.disk.DefaultDiskStorage) -> access$400
    39:39:java.lang.String access$800(java.lang.String) -> access$800
    39:39:java.lang.Class access$900() -> access$900
    443:444:void clearAll() -> clearAll
    399:399:boolean contains(java.lang.String,java.lang.Object) -> contains
    430:439:long doRemove(java.io.File) -> doRemove
    464:473:com.facebook.cache.disk.DiskStorage$DiskDumpInfoEntry dumpCacheEntry(com.facebook.cache.disk.DiskStorage$Entry) -> dumpCacheEntry
    218:218:java.io.File getContentFileFor(java.lang.String) -> getContentFileFor
    448:460:com.facebook.cache.disk.DiskStorage$DiskDumpInfo getDumpInfo() -> getDumpInfo
    39:39:java.util.Collection getEntries() -> getEntries
    498:500:java.util.List getEntries() -> getEntries
    581:586:java.lang.String getFileTypefromExtension(java.lang.String) -> getFileTypefromExtension
    392:394:java.lang.String getFilename(java.lang.String) -> getFilename
    383:388:com.facebook.binaryresource.BinaryResource getResource(java.lang.String,java.lang.Object) -> getResource
    557:563:com.facebook.cache.disk.DefaultDiskStorage$FileInfo getShardFileInfo(java.io.File) -> getShardFileInfo
    167:169:java.lang.String getStorageName() -> getStorageName
    237:237:java.io.File getSubdirectory(java.lang.String) -> getSubdirectory
    227:228:java.lang.String getSubdirectoryPath(java.lang.String) -> getSubdirectoryPath
    147:152:java.lang.String getVersionSubdirectoryName(int) -> getVersionSubdirectoryName
    362:377:com.facebook.cache.disk.DiskStorage$Inserter insert(java.lang.String,java.lang.Object) -> insert
    157:157:boolean isEnabled() -> isEnabled
    115:142:boolean isExternal(java.io.File,com.facebook.cache.common.CacheErrorLogger) -> isExternal
    162:162:boolean isExternal() -> isExternal
    345:354:void mkdirs(java.io.File,java.lang.String) -> mkdirs
    333:334:void purgeUnexpectedResources() -> purgeUnexpectedResources
    408:413:boolean query(java.lang.String,boolean) -> query
    180:200:void recreateDirectoryIfVersionChanges() -> recreateDirectoryIfVersionChanges
    419:421:long remove(com.facebook.cache.disk.DiskStorage$Entry) -> remove
    426:426:long remove(java.lang.String) -> remove
    404:404:boolean touch(java.lang.String,java.lang.Object) -> touch
    477:488:java.lang.String typeOfBytes(byte[]) -> typeOfBytes
com.facebook.cache.disk.DefaultDiskStorage$EntriesCollector -> com.facebook.cache.disk.DefaultDiskStorage$EntriesCollector:
    244:246:void <init>(com.facebook.cache.disk.DefaultDiskStorage) -> <init>
    244:244:void <init>(com.facebook.cache.disk.DefaultDiskStorage,com.facebook.cache.disk.DefaultDiskStorage$1) -> <init>
    266:266:java.util.List getEntries() -> getEntries
    262:262:void postVisitDirectory(java.io.File) -> postVisitDirectory
    250:250:void preVisitDirectory(java.io.File) -> preVisitDirectory
    254:258:void visitFile(java.io.File) -> visitFile
com.facebook.cache.disk.DefaultDiskStorage$EntryImpl -> com.facebook.cache.disk.DefaultDiskStorage$EntryImpl:
    507:507:void <init>(java.lang.String,java.io.File,com.facebook.cache.disk.DefaultDiskStorage$1) -> <init>
    513:519:void <init>(java.lang.String,java.io.File) -> <init>
    523:523:java.lang.String getId() -> getId
    506:506:com.facebook.binaryresource.BinaryResource getResource() -> getResource
    537:537:com.facebook.binaryresource.FileBinaryResource getResource() -> getResource
    542:545:long getSize() -> getSize
    528:532:long getTimestamp() -> getTimestamp
com.facebook.cache.disk.DefaultDiskStorage$FileInfo -> com.facebook.cache.disk.DefaultDiskStorage$FileInfo:
    594:594:void <init>(java.lang.String,java.lang.String,com.facebook.cache.disk.DefaultDiskStorage$1) -> <init>
    599:602:void <init>(java.lang.String,java.lang.String) -> <init>
    614:615:java.io.File createTempFile(java.io.File) -> createTempFile
    620:639:com.facebook.cache.disk.DefaultDiskStorage$FileInfo fromFile(java.io.File) -> fromFile
    610:610:java.lang.String toPath(java.lang.String) -> toPath
    606:606:java.lang.String toString() -> toString
com.facebook.cache.disk.DefaultDiskStorage$IncompleteFileException -> com.facebook.cache.disk.DefaultDiskStorage$IncompleteFileException:
    207:210:void <init>(long,long) -> <init>
com.facebook.cache.disk.DefaultDiskStorage$InserterImpl -> com.facebook.cache.disk.DefaultDiskStorage$InserterImpl:
    651:654:void <init>(com.facebook.cache.disk.DefaultDiskStorage,java.lang.String,java.io.File) -> <init>
    726:726:boolean cleanUp() -> cleanUp
    694:721:com.facebook.binaryresource.BinaryResource commit(java.lang.Object) -> commit
    660:689:void writeData(com.facebook.cache.common.WriterCallback,java.lang.Object) -> writeData
com.facebook.cache.disk.DefaultDiskStorage$PurgingVisitor -> com.facebook.cache.disk.DefaultDiskStorage$PurgingVisitor:
    279:279:void <init>(com.facebook.cache.disk.DefaultDiskStorage) -> <init>
    279:279:void <init>(com.facebook.cache.disk.DefaultDiskStorage,com.facebook.cache.disk.DefaultDiskStorage$1) -> <init>
    312:320:boolean isExpectedFile(java.io.File) -> isExpectedFile
    327:327:boolean isRecentFile(java.io.File) -> isRecentFile
    299:309:void postVisitDirectory(java.io.File) -> postVisitDirectory
    284:288:void preVisitDirectory(java.io.File) -> preVisitDirectory
    292:295:void visitFile(java.io.File) -> visitFile
com.facebook.cache.disk.DefaultEntryEvictionComparatorSupplier -> com.facebook.cache.disk.DefaultEntryEvictionComparatorSupplier:
    12:12:void <init>() -> <init>
    16:16:com.facebook.cache.disk.EntryEvictionComparator get() -> get
com.facebook.cache.disk.DefaultEntryEvictionComparatorSupplier$1 -> com.facebook.cache.disk.DefaultEntryEvictionComparatorSupplier$1:
    16:16:void <init>(com.facebook.cache.disk.DefaultEntryEvictionComparatorSupplier) -> <init>
    16:16:int compare(java.lang.Object,java.lang.Object) -> compare
    19:21:int compare(com.facebook.cache.disk.DiskStorage$Entry,com.facebook.cache.disk.DiskStorage$Entry) -> compare
com.facebook.cache.disk.DiskCacheConfig -> com.facebook.cache.disk.DiskCacheConfig:
    28:28:void <init>(com.facebook.cache.disk.DiskCacheConfig$Builder,com.facebook.cache.disk.DiskCacheConfig$1) -> <init>
    43:66:void <init>(com.facebook.cache.disk.DiskCacheConfig$Builder) -> <init>
    73:73:java.lang.String getBaseDirectoryName() -> getBaseDirectoryName
    77:77:com.facebook.common.internal.Supplier getBaseDirectoryPathSupplier() -> getBaseDirectoryPathSupplier
    97:97:com.facebook.cache.common.CacheErrorLogger getCacheErrorLogger() -> getCacheErrorLogger
    101:101:com.facebook.cache.common.CacheEventListener getCacheEventListener() -> getCacheEventListener
    109:109:android.content.Context getContext() -> getContext
    81:81:long getDefaultSizeLimit() -> getDefaultSizeLimit
    105:105:com.facebook.common.disk.DiskTrimmableRegistry getDiskTrimmableRegistry() -> getDiskTrimmableRegistry
    93:93:com.facebook.cache.disk.EntryEvictionComparatorSupplier getEntryEvictionComparatorSupplier() -> getEntryEvictionComparatorSupplier
    113:113:boolean getIndexPopulateAtStartupEnabled() -> getIndexPopulateAtStartupEnabled
    85:85:long getLowDiskSpaceSizeLimit() -> getLowDiskSpaceSizeLimit
    89:89:long getMinimumSizeLimit() -> getMinimumSizeLimit
    69:69:int getVersion() -> getVersion
    126:126:com.facebook.cache.disk.DiskCacheConfig$Builder newBuilder(android.content.Context) -> newBuilder
com.facebook.cache.disk.DiskCacheConfig$Builder -> com.facebook.cache.disk.DiskCacheConfig$Builder:
    129:129:void <init>(android.content.Context,com.facebook.cache.disk.DiskCacheConfig$1) -> <init>
    131:148:void <init>(android.content.Context) -> <init>
    129:129:int access$000(com.facebook.cache.disk.DiskCacheConfig$Builder) -> access$000
    129:129:java.lang.String access$100(com.facebook.cache.disk.DiskCacheConfig$Builder) -> access$100
    129:129:android.content.Context access$1000(com.facebook.cache.disk.DiskCacheConfig$Builder) -> access$1000
    129:129:boolean access$1100(com.facebook.cache.disk.DiskCacheConfig$Builder) -> access$1100
    129:129:com.facebook.common.internal.Supplier access$200(com.facebook.cache.disk.DiskCacheConfig$Builder) -> access$200
    129:129:long access$300(com.facebook.cache.disk.DiskCacheConfig$Builder) -> access$300
    129:129:long access$400(com.facebook.cache.disk.DiskCacheConfig$Builder) -> access$400
    129:129:long access$500(com.facebook.cache.disk.DiskCacheConfig$Builder) -> access$500
    129:129:com.facebook.cache.disk.EntryEvictionComparatorSupplier access$600(com.facebook.cache.disk.DiskCacheConfig$Builder) -> access$600
    129:129:com.facebook.cache.common.CacheErrorLogger access$700(com.facebook.cache.disk.DiskCacheConfig$Builder) -> access$700
    129:129:com.facebook.cache.common.CacheEventListener access$800(com.facebook.cache.disk.DiskCacheConfig$Builder) -> access$800
    129:129:com.facebook.common.disk.DiskTrimmableRegistry access$900(com.facebook.cache.disk.DiskCacheConfig$Builder) -> access$900
    252:263:com.facebook.cache.disk.DiskCacheConfig build() -> build
    164:165:com.facebook.cache.disk.DiskCacheConfig$Builder setBaseDirectoryName(java.lang.String) -> setBaseDirectoryName
    175:176:com.facebook.cache.disk.DiskCacheConfig$Builder setBaseDirectoryPath(java.io.File) -> setBaseDirectoryPath
    180:181:com.facebook.cache.disk.DiskCacheConfig$Builder setBaseDirectoryPathSupplier(com.facebook.common.internal.Supplier) -> setBaseDirectoryPathSupplier
    224:225:com.facebook.cache.disk.DiskCacheConfig$Builder setCacheErrorLogger(com.facebook.cache.common.CacheErrorLogger) -> setCacheErrorLogger
    232:233:com.facebook.cache.disk.DiskCacheConfig$Builder setCacheEventListener(com.facebook.cache.common.CacheEventListener) -> setCacheEventListener
    242:243:com.facebook.cache.disk.DiskCacheConfig$Builder setDiskTrimmableRegistry(com.facebook.common.disk.DiskTrimmableRegistry) -> setDiskTrimmableRegistry
    216:217:com.facebook.cache.disk.DiskCacheConfig$Builder setEntryEvictionComparatorSupplier(com.facebook.cache.disk.EntryEvictionComparatorSupplier) -> setEntryEvictionComparatorSupplier
    247:248:com.facebook.cache.disk.DiskCacheConfig$Builder setIndexPopulateAtStartupEnabled(boolean) -> setIndexPopulateAtStartupEnabled
    188:189:com.facebook.cache.disk.DiskCacheConfig$Builder setMaxCacheSize(long) -> setMaxCacheSize
    198:199:com.facebook.cache.disk.DiskCacheConfig$Builder setMaxCacheSizeOnLowDiskSpace(long) -> setMaxCacheSizeOnLowDiskSpace
    208:209:com.facebook.cache.disk.DiskCacheConfig$Builder setMaxCacheSizeOnVeryLowDiskSpace(long) -> setMaxCacheSizeOnVeryLowDiskSpace
    156:157:com.facebook.cache.disk.DiskCacheConfig$Builder setVersion(int) -> setVersion
com.facebook.cache.disk.DiskCacheConfig$Builder$1 -> com.facebook.cache.disk.DiskCacheConfig$Builder$1:
    256:256:void <init>(com.facebook.cache.disk.DiskCacheConfig$Builder) -> <init>
    256:256:java.lang.Object get() -> get
    259:259:java.io.File get() -> get
com.facebook.cache.disk.DiskStorage$DiskDumpInfo -> com.facebook.cache.disk.DiskStorage$DiskDumpInfo:
    41:44:void <init>() -> <init>
com.facebook.cache.disk.DiskStorage$DiskDumpInfoEntry -> com.facebook.cache.disk.DiskStorage$DiskDumpInfoEntry:
    30:35:void <init>(java.lang.String,java.lang.String,float,java.lang.String) -> <init>
com.facebook.cache.disk.DiskStorageCache -> com.facebook.cache.disk.DiskStorageCache:
    44:53:void <clinit>() -> <clinit>
    85:203:void <init>(com.facebook.cache.disk.DiskStorage,com.facebook.cache.disk.EntryEvictionComparatorSupplier,com.facebook.cache.disk.DiskStorageCache$Params,com.facebook.cache.common.CacheEventListener,com.facebook.cache.common.CacheErrorLogger,com.facebook.common.disk.DiskTrimmableRegistry,android.content.Context,java.util.concurrent.Executor,boolean) -> <init>
    42:42:java.lang.Object access$000(com.facebook.cache.disk.DiskStorageCache) -> access$000
    42:42:boolean access$100(com.facebook.cache.disk.DiskStorageCache) -> access$100
    42:42:boolean access$202(com.facebook.cache.disk.DiskStorageCache,boolean) -> access$202
    42:42:java.util.concurrent.CountDownLatch access$300(com.facebook.cache.disk.DiskStorageCache) -> access$300
    222:226:void awaitIndex() -> awaitIndex
    589:600:void clearAll() -> clearAll
    415:457:long clearOldEntries(long) -> clearOldEntries
    340:345:com.facebook.binaryresource.BinaryResource endInsert(com.facebook.cache.disk.DiskStorage$Inserter,com.facebook.cache.common.CacheKey,java.lang.String) -> endInsert
    496:531:void evictAboveSize(long,com.facebook.cache.common.CacheEventListener$EvictionReason) -> evictAboveSize
    585:585:long getCount() -> getCount
    207:207:com.facebook.cache.disk.DiskStorage$DiskDumpInfo getDumpInfo() -> getDumpInfo
    247:281:com.facebook.binaryresource.BinaryResource getResource(com.facebook.cache.common.CacheKey) -> getResource
    581:581:long getSize() -> getSize
    542:554:java.util.Collection getSortedEntries(java.util.Collection) -> getSortedEntries
    619:637:boolean hasKey(com.facebook.cache.common.CacheKey) -> hasKey
    604:614:boolean hasKeySync(com.facebook.cache.common.CacheKey) -> hasKeySync
    352:383:com.facebook.binaryresource.BinaryResource insert(com.facebook.cache.common.CacheKey,com.facebook.cache.common.WriterCallback) -> insert
    212:212:boolean isEnabled() -> isEnabled
    233:233:boolean isIndexReady() -> isIndexReady
    467:488:void maybeEvictFilesInCacheDir() -> maybeEvictFilesInCacheDir
    688:694:boolean maybeUpdateFileCacheSize() -> maybeUpdateFileCacheSize
    699:756:boolean maybeUpdateFileCacheSizeAndIndex() -> maybeUpdateFileCacheSizeAndIndex
    297:317:boolean probe(com.facebook.cache.common.CacheKey) -> probe
    389:406:void remove(com.facebook.cache.common.CacheKey) -> remove
    328:329:com.facebook.cache.disk.DiskStorage$Inserter startInsert(java.lang.String,com.facebook.cache.common.CacheKey) -> startInsert
    661:679:void trimBy(double) -> trimBy
    642:653:void trimToMinimum() -> trimToMinimum
    657:658:void trimToNothing() -> trimToNothing
    565:578:void updateFileCacheSizeLimit() -> updateFileCacheSizeLimit
com.facebook.cache.disk.DiskStorageCache$1 -> com.facebook.cache.disk.DiskStorageCache$1:
    189:189:void <init>(com.facebook.cache.disk.DiskStorageCache) -> <init>
    193:198:void run() -> run
com.facebook.cache.disk.DiskStorageCache$CacheStats -> com.facebook.cache.disk.DiskStorageCache$CacheStats:
    94:98:void <init>() -> <init>
    128:128:long getCount() -> getCount
    124:124:long getSize() -> getSize
    116:121:void increment(long,long) -> increment
    101:101:boolean isInitialized() -> isInitialized
    104:108:void reset() -> reset
    110:114:void set(long,long) -> set
com.facebook.cache.disk.DiskStorageCache$Params -> com.facebook.cache.disk.DiskStorageCache$Params:
    140:144:void <init>(long,long,long) -> <init>
com.facebook.cache.disk.DynamicDefaultDiskStorage -> com.facebook.cache.disk.DynamicDefaultDiskStorage:
    27:27:void <clinit>() -> <clinit>
    54:60:void <init>(int,com.facebook.common.internal.Supplier,java.lang.String,com.facebook.cache.common.CacheErrorLogger) -> <init>
    137:138:void clearAll() -> clearAll
    96:96:boolean contains(java.lang.String,java.lang.Object) -> contains
    187:197:void createRootDirectoryIfNecessary(java.io.File) -> createRootDirectoryIfNecessary
    178:182:void createStorage() -> createStorage
    170:175:void deleteOldStorageIfNecessary() -> deleteOldStorageIfNecessary
    152:158:com.facebook.cache.disk.DiskStorage get() -> get
    142:142:com.facebook.cache.disk.DiskStorage$DiskDumpInfo getDumpInfo() -> getDumpInfo
    122:122:java.util.Collection getEntries() -> getEntries
    91:91:com.facebook.binaryresource.BinaryResource getResource(java.lang.String,java.lang.Object) -> getResource
    83:85:java.lang.String getStorageName() -> getStorageName
    117:117:com.facebook.cache.disk.DiskStorage$Inserter insert(java.lang.String,java.lang.Object) -> insert
    65:67:boolean isEnabled() -> isEnabled
    74:76:boolean isExternal() -> isExternal
    107:113:void purgeUnexpectedResources() -> purgeUnexpectedResources
    127:127:long remove(com.facebook.cache.disk.DiskStorage$Entry) -> remove
    132:132:long remove(java.lang.String) -> remove
    162:165:boolean shouldCreateNewStorage() -> shouldCreateNewStorage
    101:101:boolean touch(java.lang.String,java.lang.Object) -> touch
com.facebook.cache.disk.DynamicDefaultDiskStorage$State -> com.facebook.cache.disk.DynamicDefaultDiskStorage$State:
    44:47:void <init>(java.io.File,com.facebook.cache.disk.DiskStorage) -> <init>
com.facebook.cache.disk.ScoreBasedEvictionComparatorSupplier -> com.facebook.cache.disk.ScoreBasedEvictionComparatorSupplier:
    20:23:void <init>(float,float) -> <init>
    50:52:float calculateScore(com.facebook.cache.disk.DiskStorage$Entry,long) -> calculateScore
    27:27:com.facebook.cache.disk.EntryEvictionComparator get() -> get
com.facebook.cache.disk.ScoreBasedEvictionComparatorSupplier$1 -> com.facebook.cache.disk.ScoreBasedEvictionComparatorSupplier$1:
    27:29:void <init>(com.facebook.cache.disk.ScoreBasedEvictionComparatorSupplier) -> <init>
    27:27:int compare(java.lang.Object,java.lang.Object) -> compare
    36:38:int compare(com.facebook.cache.disk.DiskStorage$Entry,com.facebook.cache.disk.DiskStorage$Entry) -> compare
com.facebook.cache.disk.SettableCacheEvent -> com.facebook.cache.disk.SettableCacheEvent:
    23:23:void <clinit>() -> <clinit>
    53:54:void <init>() -> <init>
    59:59:com.facebook.cache.common.CacheKey getCacheKey() -> getCacheKey
    100:100:long getCacheLimit() -> getCacheLimit
    90:90:long getCacheSize() -> getCacheSize
    122:122:com.facebook.cache.common.CacheEventListener$EvictionReason getEvictionReason() -> getEvictionReason
    111:111:java.io.IOException getException() -> getException
    80:80:long getItemSize() -> getItemSize
    70:70:java.lang.String getResourceId() -> getResourceId
    40:50:com.facebook.cache.disk.SettableCacheEvent obtain() -> obtain
    131:142:void recycle() -> recycle
    145:152:void reset() -> reset
    63:64:com.facebook.cache.disk.SettableCacheEvent setCacheKey(com.facebook.cache.common.CacheKey) -> setCacheKey
    104:105:com.facebook.cache.disk.SettableCacheEvent setCacheLimit(long) -> setCacheLimit
    94:95:com.facebook.cache.disk.SettableCacheEvent setCacheSize(long) -> setCacheSize
    126:127:com.facebook.cache.disk.SettableCacheEvent setEvictionReason(com.facebook.cache.common.CacheEventListener$EvictionReason) -> setEvictionReason
    115:116:com.facebook.cache.disk.SettableCacheEvent setException(java.io.IOException) -> setException
    84:85:com.facebook.cache.disk.SettableCacheEvent setItemSize(long) -> setItemSize
    74:75:com.facebook.cache.disk.SettableCacheEvent setResourceId(java.lang.String) -> setResourceId
com.facebook.common.activitylistener.ActivityListenerManager -> com.facebook.common.activitylistener.ActivityListenerManager:
    23:23:void <init>() -> <init>
    38:44:com.facebook.common.activitylistener.ListenableActivity getListenableActivity(android.content.Context) -> getListenableActivity
    30:35:void register(com.facebook.common.activitylistener.ActivityListener,android.content.Context) -> register
com.facebook.common.activitylistener.ActivityListenerManager$Listener -> com.facebook.common.activitylistener.ActivityListenerManager$Listener:
    50:52:void <init>(com.facebook.common.activitylistener.ActivityListener) -> <init>
    103:109:com.facebook.common.activitylistener.ActivityListener getListenerOrCleanUp(android.app.Activity) -> getListenerOrCleanUp
    56:60:void onActivityCreate(android.app.Activity) -> onActivityCreate
    64:68:void onDestroy(android.app.Activity) -> onDestroy
    96:100:void onPause(android.app.Activity) -> onPause
    88:92:void onResume(android.app.Activity) -> onResume
    72:76:void onStart(android.app.Activity) -> onStart
    80:84:void onStop(android.app.Activity) -> onStop
com.facebook.common.activitylistener.BaseActivityListener -> com.facebook.common.activitylistener.BaseActivityListener:
    12:12:void <init>() -> <init>
    32:32:int getPriority() -> getPriority
    16:16:void onActivityCreate(android.app.Activity) -> onActivityCreate
    28:28:void onDestroy(android.app.Activity) -> onDestroy
    37:37:void onPause(android.app.Activity) -> onPause
    41:41:void onResume(android.app.Activity) -> onResume
    24:24:void onStart(android.app.Activity) -> onStart
    20:20:void onStop(android.app.Activity) -> onStop
com.facebook.common.disk.NoOpDiskTrimmableRegistry -> com.facebook.common.disk.NoOpDiskTrimmableRegistry:
    15:15:void <clinit>() -> <clinit>
    17:18:void <init>() -> <init>
    20:24:com.facebook.common.disk.NoOpDiskTrimmableRegistry getInstance() -> getInstance
    29:29:void registerDiskTrimmable(com.facebook.common.disk.DiskTrimmable) -> registerDiskTrimmable
    33:33:void unregisterDiskTrimmable(com.facebook.common.disk.DiskTrimmable) -> unregisterDiskTrimmable
com.facebook.common.executors.CallerThreadExecutor -> com.facebook.common.executors.CallerThreadExecutor:
    36:36:void <clinit>() -> <clinit>
    42:43:void <init>() -> <init>
    73:73:boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    47:48:void execute(java.lang.Runnable) -> execute
    39:39:com.facebook.common.executors.CallerThreadExecutor getInstance() -> getInstance
    52:52:boolean isShutdown() -> isShutdown
    68:68:boolean isTerminated() -> isTerminated
    58:58:void shutdown() -> shutdown
    62:63:java.util.List shutdownNow() -> shutdownNow
com.facebook.common.executors.ConstrainedExecutorService -> com.facebook.common.executors.ConstrainedExecutorService:
    27:27:void <clinit>() -> <clinit>
    49:60:void <init>(java.lang.String,int,java.util.concurrent.Executor,java.util.concurrent.BlockingQueue) -> <init>
    25:25:java.util.concurrent.BlockingQueue access$100(com.facebook.common.executors.ConstrainedExecutorService) -> access$100
    25:25:java.lang.Class access$200() -> access$200
    25:25:java.lang.String access$300(com.facebook.common.executors.ConstrainedExecutorService) -> access$300
    25:25:java.util.concurrent.atomic.AtomicInteger access$400(com.facebook.common.executors.ConstrainedExecutorService) -> access$400
    25:25:void access$500(com.facebook.common.executors.ConstrainedExecutorService) -> access$500
    160:160:boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    97:113:void execute(java.lang.Runnable) -> execute
    88:88:boolean isIdle() -> isIdle
    150:150:boolean isShutdown() -> isShutdown
    155:155:boolean isTerminated() -> isTerminated
    76:76:com.facebook.common.executors.ConstrainedExecutorService newConstrainedExecutor(java.lang.String,int,int,java.util.concurrent.Executor) -> newConstrainedExecutor
    140:140:void shutdown() -> shutdown
    145:145:java.util.List shutdownNow() -> shutdownNow
    123:136:void startWorkerIfNeeded() -> startWorkerIfNeeded
com.facebook.common.executors.ConstrainedExecutorService$Worker -> com.facebook.common.executors.ConstrainedExecutorService$Worker:
    168:168:void <init>(com.facebook.common.executors.ConstrainedExecutorService) -> <init>
    168:168:void <init>(com.facebook.common.executors.ConstrainedExecutorService,com.facebook.common.executors.ConstrainedExecutorService$1) -> <init>
    173:189:void run() -> run
com.facebook.common.executors.DefaultSerialExecutorService -> com.facebook.common.executors.DefaultSerialExecutorService:
    22:23:void <init>(java.util.concurrent.Executor) -> <init>
    31:33:void execute(java.lang.Runnable) -> execute
com.facebook.common.executors.HandlerExecutorServiceImpl -> com.facebook.common.executors.HandlerExecutorServiceImpl:
    26:28:void <init>(android.os.Handler) -> <init>
    52:52:boolean awaitTermination(long,java.util.concurrent.TimeUnit) -> awaitTermination
    57:58:void execute(java.lang.Runnable) -> execute
    124:124:boolean isHandlerThread() -> isHandlerThread
    42:42:boolean isShutdown() -> isShutdown
    47:47:boolean isTerminated() -> isTerminated
    21:21:java.util.concurrent.RunnableFuture newTaskFor(java.lang.Runnable,java.lang.Object) -> newTaskFor
    21:21:java.util.concurrent.RunnableFuture newTaskFor(java.util.concurrent.Callable) -> newTaskFor
    62:62:com.facebook.common.executors.ScheduledFutureImpl newTaskFor(java.lang.Runnable,java.lang.Object) -> newTaskFor
    67:67:com.facebook.common.executors.ScheduledFutureImpl newTaskFor(java.util.concurrent.Callable) -> newTaskFor
    119:120:void quit() -> quit
    93:95:java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit) -> schedule
    100:102:java.util.concurrent.ScheduledFuture schedule(java.util.concurrent.Callable,long,java.util.concurrent.TimeUnit) -> schedule
    108:108:java.util.concurrent.ScheduledFuture scheduleAtFixedRate(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleAtFixedRate
    114:114:java.util.concurrent.ScheduledFuture scheduleWithFixedDelay(java.lang.Runnable,long,long,java.util.concurrent.TimeUnit) -> scheduleWithFixedDelay
    32:32:void shutdown() -> shutdown
    37:37:java.util.List shutdownNow() -> shutdownNow
    21:21:java.util.concurrent.Future submit(java.lang.Runnable) -> submit
    21:21:java.util.concurrent.Future submit(java.lang.Runnable,java.lang.Object) -> submit
    21:21:java.util.concurrent.Future submit(java.util.concurrent.Callable) -> submit
    72:72:java.util.concurrent.ScheduledFuture submit(java.lang.Runnable) -> submit
    77:80:java.util.concurrent.ScheduledFuture submit(java.lang.Runnable,java.lang.Object) -> submit
    85:88:java.util.concurrent.ScheduledFuture submit(java.util.concurrent.Callable) -> submit
com.facebook.common.executors.ScheduledFutureImpl -> com.facebook.common.executors.ScheduledFutureImpl:
    29:32:void <init>(android.os.Handler,java.util.concurrent.Callable) -> <init>
    34:37:void <init>(android.os.Handler,java.lang.Runnable,java.lang.Object) -> <init>
    56:56:boolean cancel(boolean) -> cancel
    24:24:int compareTo(java.lang.Object) -> compareTo
    46:46:int compareTo(java.util.concurrent.Delayed) -> compareTo
    71:71:java.lang.Object get() -> get
    77:77:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    41:41:long getDelay(java.util.concurrent.TimeUnit) -> getDelay
    61:61:boolean isCancelled() -> isCancelled
    66:66:boolean isDone() -> isDone
    51:52:void run() -> run
com.facebook.common.executors.StatefulRunnable -> com.facebook.common.executors.StatefulRunnable:
    32:34:void <init>() -> <init>
    59:62:void cancel() -> cancel
    85:85:void disposeResult(java.lang.Object) -> disposeResult
    79:79:void onCancellation() -> onCancellation
    74:74:void onFailure(java.lang.Exception) -> onFailure
    68:68:void onSuccess(java.lang.Object) -> onSuccess
    38:56:void run() -> run
com.facebook.common.executors.UiThreadImmediateExecutorService -> com.facebook.common.executors.UiThreadImmediateExecutorService:
    22:22:void <clinit>() -> <clinit>
    25:26:void <init>() -> <init>
    37:42:void execute(java.lang.Runnable) -> execute
    29:32:com.facebook.common.executors.UiThreadImmediateExecutorService getInstance() -> getInstance
com.facebook.common.file.FileTree -> com.facebook.common.file.FileTree:
    18:18:void <init>() -> <init>
    50:57:boolean deleteContents(java.io.File) -> deleteContents
    66:70:boolean deleteRecursively(java.io.File) -> deleteRecursively
    31:43:void walkFileTree(java.io.File,com.facebook.common.file.FileTreeVisitor) -> walkFileTree
com.facebook.common.file.FileUtils -> com.facebook.common.file.FileUtils:
    19:19:void <init>() -> <init>
    27:45:void mkdirs(java.io.File) -> mkdirs
    55:75:void rename(java.io.File,java.io.File) -> rename
com.facebook.common.file.FileUtils$CreateDirectoryException -> com.facebook.common.file.FileUtils$CreateDirectoryException:
    84:85:void <init>(java.lang.String) -> <init>
    88:90:void <init>(java.lang.String,java.lang.Throwable) -> <init>
com.facebook.common.file.FileUtils$FileDeleteException -> com.facebook.common.file.FileUtils$FileDeleteException:
    107:108:void <init>(java.lang.String) -> <init>
com.facebook.common.file.FileUtils$ParentDirNotFoundException -> com.facebook.common.file.FileUtils$ParentDirNotFoundException:
    98:99:void <init>(java.lang.String) -> <init>
com.facebook.common.file.FileUtils$RenameException -> com.facebook.common.file.FileUtils$RenameException:
    116:117:void <init>(java.lang.String) -> <init>
    120:123:void <init>(java.lang.String,java.lang.Throwable) -> <init>
com.facebook.common.internal.AndroidPredicates -> com.facebook.common.internal.AndroidPredicates:
    15:15:void <init>() -> <init>
    27:27:com.facebook.common.internal.Predicate False() -> False
    18:18:com.facebook.common.internal.Predicate True() -> True
com.facebook.common.internal.AndroidPredicates$1 -> com.facebook.common.internal.AndroidPredicates$1:
    18:18:void <init>() -> <init>
    21:21:boolean apply(java.lang.Object) -> apply
com.facebook.common.internal.AndroidPredicates$2 -> com.facebook.common.internal.AndroidPredicates$2:
    27:27:void <init>() -> <init>
    30:30:boolean apply(java.lang.Object) -> apply
com.facebook.common.internal.ByteStreams -> com.facebook.common.internal.ByteStreams:
    40:41:void <init>() -> <init>
    54:66:long copy(java.io.InputStream,java.io.OutputStream) -> copy
    95:108:int read(java.io.InputStream,byte[],int,int) -> read
    197:202:void readFully(java.io.InputStream,byte[],int,int) -> readFully
    120:122:byte[] toByteArray(java.io.InputStream) -> toByteArray
    134:162:byte[] toByteArray(java.io.InputStream,int) -> toByteArray
com.facebook.common.internal.ByteStreams$FastByteArrayOutputStream -> com.facebook.common.internal.ByteStreams$FastByteArrayOutputStream:
    169:169:void <init>() -> <init>
    169:169:void <init>(com.facebook.common.internal.ByteStreams$1) -> <init>
    176:177:void writeTo(byte[],int) -> writeTo
com.facebook.common.internal.Closeables -> com.facebook.common.internal.Closeables:
    34:35:void <clinit>() -> <clinit>
    37:37:void <init>() -> <init>
    70:83:void close(java.io.Closeable,boolean) -> close
    101:105:void closeQuietly(java.io.InputStream) -> closeQuietly
    122:126:void closeQuietly(java.io.Reader) -> closeQuietly
com.facebook.common.internal.CountingOutputStream -> com.facebook.common.internal.CountingOutputStream:
    40:42:void <init>(java.io.OutputStream) -> <init>
    68:69:void close() -> close
    48:48:long getCount() -> getCount
    53:55:void write(byte[],int,int) -> write
    59:61:void write(int) -> write
com.facebook.common.internal.Files -> com.facebook.common.internal.Files:
    34:34:void <init>() -> <init>
    44:53:byte[] readFile(java.io.InputStream,long) -> readFile
    65:71:byte[] toByteArray(java.io.File) -> toByteArray
com.facebook.common.internal.ImmutableList -> com.facebook.common.internal.ImmutableList:
    21:22:void <init>(int) -> <init>
    25:26:void <init>(java.util.List) -> <init>
    29:29:com.facebook.common.internal.ImmutableList copyOf(java.util.List) -> copyOf
    33:35:com.facebook.common.internal.ImmutableList of(java.lang.Object[]) -> of
com.facebook.common.internal.ImmutableMap -> com.facebook.common.internal.ImmutableMap:
    23:24:void <init>(java.util.Map) -> <init>
    89:89:com.facebook.common.internal.ImmutableMap copyOf(java.util.Map) -> copyOf
    27:27:java.util.Map of() -> of
    31:33:java.util.Map of(java.lang.Object,java.lang.Object) -> of
    37:40:java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    45:49:java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    54:59:java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    64:70:java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    75:82:java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
com.facebook.common.internal.ImmutableSet -> com.facebook.common.internal.ImmutableSet:
    22:23:void <init>(java.util.Set) -> <init>
    26:26:com.facebook.common.internal.ImmutableSet copyOf(java.util.Set) -> copyOf
    30:32:com.facebook.common.internal.ImmutableSet of(java.lang.Object[]) -> of
com.facebook.common.internal.Ints -> com.facebook.common.internal.Ints:
    29:29:void <init>() -> <init>
    40:47:int max(int[]) -> max
com.facebook.common.internal.Objects -> com.facebook.common.internal.Objects:
    36:36:void <init>() -> <init>
    53:53:boolean equal(java.lang.Object,java.lang.Object) -> equal
    186:186:java.lang.Object firstNonNull(java.lang.Object,java.lang.Object) -> firstNonNull
    74:74:int hashCode(java.lang.Object[]) -> hashCode
    151:165:java.lang.String simpleName(java.lang.Class) -> simpleName
    117:117:com.facebook.common.internal.Objects$ToStringHelper toStringHelper(java.lang.Object) -> toStringHelper
    131:131:com.facebook.common.internal.Objects$ToStringHelper toStringHelper(java.lang.Class) -> toStringHelper
    143:143:com.facebook.common.internal.Objects$ToStringHelper toStringHelper(java.lang.String) -> toStringHelper
com.facebook.common.internal.Objects$ToStringHelper -> com.facebook.common.internal.Objects$ToStringHelper:
    195:195:void <init>(java.lang.String,com.facebook.common.internal.Objects$1) -> <init>
    197:206:void <init>(java.lang.String) -> <init>
    227:227:com.facebook.common.internal.Objects$ToStringHelper add(java.lang.String,java.lang.Object) -> add
    237:237:com.facebook.common.internal.Objects$ToStringHelper add(java.lang.String,boolean) -> add
    247:247:com.facebook.common.internal.Objects$ToStringHelper add(java.lang.String,char) -> add
    257:257:com.facebook.common.internal.Objects$ToStringHelper add(java.lang.String,double) -> add
    267:267:com.facebook.common.internal.Objects$ToStringHelper add(java.lang.String,float) -> add
    277:277:com.facebook.common.internal.Objects$ToStringHelper add(java.lang.String,int) -> add
    287:287:com.facebook.common.internal.Objects$ToStringHelper add(java.lang.String,long) -> add
    404:406:com.facebook.common.internal.Objects$ToStringHelper$ValueHolder addHolder() -> addHolder
    410:412:com.facebook.common.internal.Objects$ToStringHelper addHolder(java.lang.Object) -> addHolder
    416:419:com.facebook.common.internal.Objects$ToStringHelper addHolder(java.lang.String,java.lang.Object) -> addHolder
    297:297:com.facebook.common.internal.Objects$ToStringHelper addValue(java.lang.Object) -> addValue
    309:309:com.facebook.common.internal.Objects$ToStringHelper addValue(boolean) -> addValue
    321:321:com.facebook.common.internal.Objects$ToStringHelper addValue(char) -> addValue
    333:333:com.facebook.common.internal.Objects$ToStringHelper addValue(double) -> addValue
    345:345:com.facebook.common.internal.Objects$ToStringHelper addValue(float) -> addValue
    357:357:com.facebook.common.internal.Objects$ToStringHelper addValue(int) -> addValue
    369:369:com.facebook.common.internal.Objects$ToStringHelper addValue(long) -> addValue
    216:217:com.facebook.common.internal.Objects$ToStringHelper omitNullValues() -> omitNullValues
    384:400:java.lang.String toString() -> toString
com.facebook.common.internal.Objects$ToStringHelper$ValueHolder -> com.facebook.common.internal.Objects$ToStringHelper$ValueHolder:
    422:422:void <init>() -> <init>
    422:422:void <init>(com.facebook.common.internal.Objects$1) -> <init>
com.facebook.common.internal.Preconditions -> com.facebook.common.internal.Preconditions:
    98:98:void <init>() -> <init>
    316:321:java.lang.String badElementIndex(int,int,java.lang.String) -> badElementIndex
    359:364:java.lang.String badPositionIndex(int,int,java.lang.String) -> badPositionIndex
    388:395:java.lang.String badPositionIndexes(int,int,int) -> badPositionIndexes
    107:110:void checkArgument(boolean) -> checkArgument
    121:124:void checkArgument(boolean,java.lang.Object) -> checkArgument
    144:147:void checkArgument(boolean,java.lang.String,java.lang.Object[]) -> checkArgument
    292:292:int checkElementIndex(int,int) -> checkElementIndex
    309:312:int checkElementIndex(int,int,java.lang.String) -> checkElementIndex
    209:212:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    225:228:java.lang.Object checkNotNull(java.lang.Object,java.lang.Object) -> checkNotNull
    248:252:java.lang.Object checkNotNull(java.lang.Object,java.lang.String,java.lang.Object[]) -> checkNotNull
    336:336:int checkPositionIndex(int,int) -> checkPositionIndex
    352:355:int checkPositionIndex(int,int,java.lang.String) -> checkPositionIndex
    382:385:void checkPositionIndexes(int,int,int) -> checkPositionIndexes
    157:160:void checkState(boolean) -> checkState
    172:175:void checkState(boolean,java.lang.Object) -> checkState
    196:199:void checkState(boolean,java.lang.String,java.lang.Object[]) -> checkState
    410:438:java.lang.String format(java.lang.String,java.lang.Object[]) -> format
com.facebook.common.internal.Sets -> com.facebook.common.internal.Sets:
    33:33:void <init>() -> <init>
    159:159:java.util.concurrent.CopyOnWriteArraySet newCopyOnWriteArraySet() -> newCopyOnWriteArraySet
    41:41:java.util.HashSet newHashSet() -> newHashSet
    52:54:java.util.HashSet newHashSet(java.lang.Object[]) -> newHashSet
    82:84:java.util.HashSet newHashSet(java.lang.Iterable) -> newHashSet
    95:99:java.util.HashSet newHashSet(java.util.Iterator) -> newHashSet
    71:71:java.util.HashSet newHashSetWithCapacity(int) -> newHashSetWithCapacity
    111:111:java.util.Set newIdentityHashSet() -> newIdentityHashSet
    169:169:java.util.LinkedHashSet newLinkedHashSet() -> newLinkedHashSet
    146:146:java.util.Set newSetFromMap(java.util.Map) -> newSetFromMap
com.facebook.common.internal.Suppliers -> com.facebook.common.internal.Suppliers:
    27:36:void <clinit>() -> <clinit>
    11:11:void <init>() -> <init>
    18:18:com.facebook.common.internal.Supplier of(java.lang.Object) -> of
com.facebook.common.internal.Suppliers$1 -> com.facebook.common.internal.Suppliers$1:
    18:18:void <init>(java.lang.Object) -> <init>
    21:21:java.lang.Object get() -> get
com.facebook.common.internal.Suppliers$2 -> com.facebook.common.internal.Suppliers$2:
    28:28:void <init>() -> <init>
    28:28:java.lang.Object get() -> get
    31:31:java.lang.Boolean get() -> get
com.facebook.common.internal.Suppliers$3 -> com.facebook.common.internal.Suppliers$3:
    37:37:void <init>() -> <init>
    37:37:java.lang.Object get() -> get
    40:40:java.lang.Boolean get() -> get
com.facebook.common.internal.Throwables -> com.facebook.common.internal.Throwables:
    38:38:void <init>() -> <init>
    193:199:java.util.List getCausalChain(java.lang.Throwable) -> getCausalChain
    169:172:java.lang.Throwable getRootCause(java.lang.Throwable) -> getRootCause
    210:212:java.lang.String getStackTraceAsString(java.lang.Throwable) -> getStackTraceAsString
    154:155:java.lang.RuntimeException propagate(java.lang.Throwable) -> propagate
    58:61:void propagateIfInstanceOf(java.lang.Throwable,java.lang.Class) -> propagateIfInstanceOf
    78:80:void propagateIfPossible(java.lang.Throwable) -> propagateIfPossible
    103:105:void propagateIfPossible(java.lang.Throwable,java.lang.Class) -> propagateIfPossible
    124:127:void propagateIfPossible(java.lang.Throwable,java.lang.Class,java.lang.Class) -> propagateIfPossible
com.facebook.common.logging.FLog -> com.facebook.common.logging.FLog:
    29:29:void <clinit>() -> <clinit>
    15:15:void <init>() -> <init>
    153:156:void d(java.lang.String,java.lang.String) -> d
    159:162:void d(java.lang.String,java.lang.String,java.lang.Object) -> d
    165:168:void d(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object) -> d
    171:174:void d(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> d
    177:180:void d(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> d
    183:186:void d(java.lang.Class,java.lang.String) -> d
    189:192:void d(java.lang.Class,java.lang.String,java.lang.Object) -> d
    195:198:void d(java.lang.Class,java.lang.String,java.lang.Object,java.lang.Object) -> d
    201:204:void d(java.lang.Class,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> d
    208:211:void d(java.lang.Class,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> d
    214:217:void d(java.lang.String,java.lang.String,java.lang.Object[]) -> d
    220:223:void d(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.Object[]) -> d
    226:229:void d(java.lang.Class,java.lang.String,java.lang.Object[]) -> d
    232:235:void d(java.lang.Class,java.lang.Throwable,java.lang.String,java.lang.Object[]) -> d
    238:241:void d(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    244:247:void d(java.lang.Class,java.lang.String,java.lang.Throwable) -> d
    395:398:void e(java.lang.String,java.lang.String) -> e
    401:404:void e(java.lang.Class,java.lang.String) -> e
    407:410:void e(java.lang.String,java.lang.String,java.lang.Object[]) -> e
    413:416:void e(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.Object[]) -> e
    419:422:void e(java.lang.Class,java.lang.String,java.lang.Object[]) -> e
    425:428:void e(java.lang.Class,java.lang.Throwable,java.lang.String,java.lang.Object[]) -> e
    431:434:void e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
    437:440:void e(java.lang.Class,java.lang.String,java.lang.Throwable) -> e
    491:491:java.lang.String formatString(java.lang.String,java.lang.Object[]) -> formatString
    52:52:int getMinimumLoggingLevel() -> getMinimumLoggingLevel
    495:495:java.lang.String getTag(java.lang.Class) -> getTag
    250:253:void i(java.lang.String,java.lang.String) -> i
    256:259:void i(java.lang.String,java.lang.String,java.lang.Object) -> i
    262:265:void i(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object) -> i
    268:271:void i(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> i
    274:277:void i(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> i
    280:283:void i(java.lang.Class,java.lang.String) -> i
    286:289:void i(java.lang.Class,java.lang.String,java.lang.Object) -> i
    292:295:void i(java.lang.Class,java.lang.String,java.lang.Object,java.lang.Object) -> i
    298:301:void i(java.lang.Class,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> i
    305:308:void i(java.lang.Class,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> i
    311:314:void i(java.lang.String,java.lang.String,java.lang.Object[]) -> i
    317:320:void i(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.Object[]) -> i
    323:326:void i(java.lang.Class,java.lang.String,java.lang.Object[]) -> i
    329:332:void i(java.lang.Class,java.lang.Throwable,java.lang.String,java.lang.Object[]) -> i
    335:338:void i(java.lang.String,java.lang.String,java.lang.Throwable) -> i
    341:344:void i(java.lang.Class,java.lang.String,java.lang.Throwable) -> i
    44:44:boolean isLoggable(int) -> isLoggable
    37:41:void setLoggingDelegate(com.facebook.common.logging.LoggingDelegate) -> setLoggingDelegate
    48:49:void setMinimumLoggingLevel(int) -> setMinimumLoggingLevel
    56:59:void v(java.lang.String,java.lang.String) -> v
    62:65:void v(java.lang.String,java.lang.String,java.lang.Object) -> v
    68:71:void v(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object) -> v
    74:77:void v(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> v
    80:83:void v(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> v
    86:89:void v(java.lang.Class,java.lang.String) -> v
    92:95:void v(java.lang.Class,java.lang.String,java.lang.Object) -> v
    98:101:void v(java.lang.Class,java.lang.String,java.lang.Object,java.lang.Object) -> v
    104:107:void v(java.lang.Class,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object) -> v
    111:114:void v(java.lang.Class,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> v
    117:120:void v(java.lang.String,java.lang.String,java.lang.Object[]) -> v
    123:126:void v(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.Object[]) -> v
    129:132:void v(java.lang.Class,java.lang.String,java.lang.Object[]) -> v
    135:138:void v(java.lang.Class,java.lang.Throwable,java.lang.String,java.lang.Object[]) -> v
    141:144:void v(java.lang.String,java.lang.String,java.lang.Throwable) -> v
    147:150:void v(java.lang.Class,java.lang.String,java.lang.Throwable) -> v
    347:350:void w(java.lang.String,java.lang.String) -> w
    353:356:void w(java.lang.Class,java.lang.String) -> w
    359:362:void w(java.lang.String,java.lang.String,java.lang.Object[]) -> w
    365:368:void w(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.Object[]) -> w
    371:374:void w(java.lang.Class,java.lang.String,java.lang.Object[]) -> w
    377:380:void w(java.lang.Class,java.lang.Throwable,java.lang.String,java.lang.Object[]) -> w
    383:386:void w(java.lang.String,java.lang.String,java.lang.Throwable) -> w
    389:392:void w(java.lang.Class,java.lang.String,java.lang.Throwable) -> w
    443:446:void wtf(java.lang.String,java.lang.String) -> wtf
    449:452:void wtf(java.lang.Class,java.lang.String) -> wtf
    455:458:void wtf(java.lang.String,java.lang.String,java.lang.Object[]) -> wtf
    461:464:void wtf(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.Object[]) -> wtf
    467:470:void wtf(java.lang.Class,java.lang.String,java.lang.Object[]) -> wtf
    473:476:void wtf(java.lang.Class,java.lang.Throwable,java.lang.String,java.lang.Object[]) -> wtf
    479:482:void wtf(java.lang.String,java.lang.String,java.lang.Throwable) -> wtf
    485:488:void wtf(java.lang.Class,java.lang.String,java.lang.Throwable) -> wtf
com.facebook.common.logging.FLogDefaultLoggingDelegate -> com.facebook.common.logging.FLogDefaultLoggingDelegate:
    19:19:void <clinit>() -> <clinit>
    21:29:void <init>() -> <init>
    69:70:void d(java.lang.String,java.lang.String) -> d
    74:75:void d(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    99:100:void e(java.lang.String,java.lang.String) -> e
    104:105:void e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
    25:25:com.facebook.common.logging.FLogDefaultLoggingDelegate getInstance() -> getInstance
    49:49:int getMinimumLoggingLevel() -> getMinimumLoggingLevel
    147:147:java.lang.String getMsg(java.lang.String,java.lang.Throwable) -> getMsg
    151:157:java.lang.String getStackTraceString(java.lang.Throwable) -> getStackTraceString
    79:80:void i(java.lang.String,java.lang.String) -> i
    84:85:void i(java.lang.String,java.lang.String,java.lang.Throwable) -> i
    54:54:boolean isLoggable(int) -> isLoggable
    127:128:void log(int,java.lang.String,java.lang.String) -> log
    139:142:java.lang.String prefixTag(java.lang.String) -> prefixTag
    131:132:void println(int,java.lang.String,java.lang.String) -> println
    135:136:void println(int,java.lang.String,java.lang.String,java.lang.Throwable) -> println
    38:39:void setApplicationTag(java.lang.String) -> setApplicationTag
    44:45:void setMinimumLoggingLevel(int) -> setMinimumLoggingLevel
    59:60:void v(java.lang.String,java.lang.String) -> v
    64:65:void v(java.lang.String,java.lang.String,java.lang.Throwable) -> v
    89:90:void w(java.lang.String,java.lang.String) -> w
    94:95:void w(java.lang.String,java.lang.String,java.lang.Throwable) -> w
    113:114:void wtf(java.lang.String,java.lang.String) -> wtf
    122:123:void wtf(java.lang.String,java.lang.String,java.lang.Throwable) -> wtf
com.facebook.common.media.MediaUtils -> com.facebook.common.media.MediaUtils:
    21:22:void <clinit>() -> <clinit>
    18:18:void <init>() -> <init>
    54:58:java.lang.String extractExtension(java.lang.String) -> extractExtension
    37:50:java.lang.String extractMime(java.lang.String) -> extractMime
    66:66:boolean isNonNativeSupportedMimeType(java.lang.String) -> isNonNativeSupportedMimeType
    25:25:boolean isPhoto(java.lang.String) -> isPhoto
    33:33:boolean isThreeD(java.lang.String) -> isThreeD
    29:29:boolean isVideo(java.lang.String) -> isVideo
com.facebook.common.media.MimeTypeMapWrapper -> com.facebook.common.media.MimeTypeMapWrapper:
    18:26:void <clinit>() -> <clinit>
    16:16:void <init>() -> <init>
    31:35:java.lang.String getExtensionFromMimeType(java.lang.String) -> getExtensionFromMimeType
    39:43:java.lang.String getMimeTypeFromExtension(java.lang.String) -> getMimeTypeFromExtension
    47:47:boolean hasExtension(java.lang.String) -> hasExtension
    51:51:boolean hasMimeType(java.lang.String) -> hasMimeType
com.facebook.common.memory.MemoryTrimType -> com.facebook.common.memory.MemoryTrimType:
    17:32:void <clinit>() -> <clinit>
    36:38:void <init>(java.lang.String,int,double) -> <init>
    42:42:double getSuggestedTrimRatio() -> getSuggestedTrimRatio
    17:17:com.facebook.common.memory.MemoryTrimType valueOf(java.lang.String) -> valueOf
    17:17:com.facebook.common.memory.MemoryTrimType[] values() -> values
com.facebook.common.memory.NoOpMemoryTrimmableRegistry -> com.facebook.common.memory.NoOpMemoryTrimmableRegistry:
    14:14:void <clinit>() -> <clinit>
    16:17:void <init>() -> <init>
    19:23:com.facebook.common.memory.NoOpMemoryTrimmableRegistry getInstance() -> getInstance
    28:28:void registerMemoryTrimmable(com.facebook.common.memory.MemoryTrimmable) -> registerMemoryTrimmable
    32:32:void unregisterMemoryTrimmable(com.facebook.common.memory.MemoryTrimmable) -> unregisterMemoryTrimmable
com.facebook.common.memory.PooledByteArrayBufferedInputStream -> com.facebook.common.memory.PooledByteArrayBufferedInputStream:
    48:55:void <init>(java.io.InputStream,byte[],com.facebook.common.references.ResourceReleaser) -> <init>
    84:86:int available() -> available
    91:96:void close() -> close
    121:132:boolean ensureDataInBuffer() -> ensureDataInBuffer
    136:139:void ensureNotClosed() -> ensureNotClosed
    143:148:void finalize() -> finalize
    59:65:int read() -> read
    70:79:int read(byte[],int,int) -> read
    100:109:long skip(long) -> skip
com.facebook.common.memory.PooledByteBuffer$ClosedException -> com.facebook.common.memory.PooledByteBuffer$ClosedException:
    73:74:void <init>() -> <init>
com.facebook.common.memory.PooledByteBufferInputStream -> com.facebook.common.memory.PooledByteBufferInputStream:
    34:39:void <init>(com.facebook.common.memory.PooledByteBuffer) -> <init>
    46:46:int available() -> available
    57:58:void mark(int) -> mark
    66:66:boolean markSupported() -> markSupported
    71:74:int read() -> read
    79:79:int read(byte[]) -> read
    92:111:int read(byte[],int,int) -> read
    121:122:void reset() -> reset
    131:134:long skip(long) -> skip
com.facebook.common.memory.PooledByteBufferOutputStream -> com.facebook.common.memory.PooledByteBufferOutputStream:
    26:26:void <init>() -> <init>
    45:50:void close() -> close
com.facebook.common.memory.PooledByteStreams -> com.facebook.common.memory.PooledByteStreams:
    30:31:void <init>(com.facebook.common.memory.ByteArrayPool) -> <init>
    34:38:void <init>(com.facebook.common.memory.ByteArrayPool,int) -> <init>
    48:61:long copy(java.io.InputStream,java.io.OutputStream) -> copy
    77:92:long copy(java.io.InputStream,java.io.OutputStream,long) -> copy
com.facebook.common.references.CloseableReference -> com.facebook.common.references.CloseableReference:
    64:70:void <clinit>() -> <clinit>
    66:85:void <init>(com.facebook.common.references.SharedReference) -> <init>
    66:89:void <init>(java.lang.Object,com.facebook.common.references.ResourceReleaser) -> <init>
    62:62:java.lang.Object clone() -> clone
    130:132:com.facebook.common.references.CloseableReference clone() -> clone
    135:139:com.facebook.common.references.CloseableReference cloneOrNull() -> cloneOrNull
    203:203:com.facebook.common.references.CloseableReference cloneOrNull(com.facebook.common.references.CloseableReference) -> cloneOrNull
    216:223:java.util.List cloneOrNull(java.util.Collection) -> cloneOrNull
    178:186:void close() -> close
    232:235:void closeSafely(com.facebook.common.references.CloseableReference) -> closeSafely
    243:248:void closeSafely(java.lang.Iterable) -> closeSafely
    255:272:void finalize() -> finalize
    121:123:java.lang.Object get() -> get
    157:157:com.facebook.common.references.SharedReference getUnderlyingReferenceTestOnly() -> getUnderlyingReferenceTestOnly
    165:165:int getValueHash() -> getValueHash
    147:147:boolean isValid() -> isValid
    193:193:boolean isValid(com.facebook.common.references.CloseableReference) -> isValid
    97:100:com.facebook.common.references.CloseableReference of(java.io.Closeable) -> of
    110:113:com.facebook.common.references.CloseableReference of(java.lang.Object,com.facebook.common.references.ResourceReleaser) -> of
com.facebook.common.references.CloseableReference$1 -> com.facebook.common.references.CloseableReference$1:
    71:71:void <init>() -> <init>
    71:71:void release(java.lang.Object) -> release
    75:79:void release(java.io.Closeable) -> release
com.facebook.common.references.OOMSoftReference -> com.facebook.common.references.OOMSoftReference:
    42:46:void <init>() -> <init>
    60:72:void clear() -> clear
    56:56:java.lang.Object get() -> get
    49:52:void set(java.lang.Object) -> set
com.facebook.common.references.SharedReference -> com.facebook.common.references.SharedReference:
    100:100:void <clinit>() -> <clinit>
    116:121:void <init>(java.lang.Object,com.facebook.common.references.ResourceReleaser) -> <init>
    130:138:void addLiveReference(java.lang.Object) -> addLiveReference
    191:194:void addReference() -> addReference
    197:202:boolean addReferenceIfValid() -> addReferenceIfValid
    225:230:int decreaseRefCount() -> decreaseRefCount
    210:219:void deleteReference() -> deleteReference
    238:241:void ensureValid() -> ensureValid
    168:168:java.lang.Object get() -> get
    248:248:int getRefCountTestOnly() -> getRefCountTestOnly
    176:176:boolean isValid() -> isValid
    184:184:boolean isValid(com.facebook.common.references.SharedReference) -> isValid
    147:161:void removeLiveReference(java.lang.Object) -> removeLiveReference
com.facebook.common.references.SharedReference$NullReferenceException -> com.facebook.common.references.SharedReference$NullReferenceException:
    257:258:void <init>() -> <init>
com.facebook.common.statfs.StatFsHelper -> com.facebook.common.statfs.StatFsHelper:
    51:51:void <clinit>() -> <clinit>
    53:80:void <init>() -> <init>
    291:291:android.os.StatFs createStatFs(java.lang.String) -> createStatFs
    86:99:void ensureInitialized() -> ensureInitialized
    184:200:long getAvailableStorageSpace(com.facebook.common.statfs.StatFsHelper$StorageType) -> getAvailableStorageSpace
    130:146:long getFreeStorageSpace(com.facebook.common.statfs.StatFsHelper$StorageType) -> getFreeStorageSpace
    65:69:com.facebook.common.statfs.StatFsHelper getInstance() -> getInstance
    157:173:long getTotalStorageSpace(com.facebook.common.statfs.StatFsHelper$StorageType) -> getTotalStorageSpace
    212:221:void maybeUpdateStats() -> maybeUpdateStats
    231:240:void resetStats() -> resetStats
    113:119:boolean testLowDiskSpace(com.facebook.common.statfs.StatFsHelper$StorageType,long) -> testLowDiskSpace
    249:252:void updateStats() -> updateStats
    260:287:android.os.StatFs updateStatsHelper(android.os.StatFs,java.io.File) -> updateStatsHelper
com.facebook.common.statfs.StatFsHelper$StorageType -> com.facebook.common.statfs.StatFsHelper$StorageType:
    37:39:void <clinit>() -> <clinit>
    37:37:void <init>(java.lang.String,int) -> <init>
    37:37:com.facebook.common.statfs.StatFsHelper$StorageType valueOf(java.lang.String) -> valueOf
    37:37:com.facebook.common.statfs.StatFsHelper$StorageType[] values() -> values
com.facebook.common.streams.LimitedInputStream -> com.facebook.common.streams.LimitedInputStream:
    22:31:void <init>(java.io.InputStream,int) -> <init>
    72:72:int available() -> available
    77:81:void mark(int) -> mark
    35:44:int read() -> read
    49:59:int read(byte[],int,int) -> read
    85:95:void reset() -> reset
    64:67:long skip(long) -> skip
com.facebook.common.streams.TailAppendingInputStream -> com.facebook.common.streams.TailAppendingInputStream:
    24:32:void <init>(java.io.InputStream,byte[]) -> <init>
    83:87:void mark(int) -> mark
    36:40:int read() -> read
    45:45:int read(byte[]) -> read
    50:68:int read(byte[],int,int) -> read
    90:93:int readNextTailByte() -> readNextTailByte
    73:79:void reset() -> reset
com.facebook.common.time.AwakeTimeSinceBootClock -> com.facebook.common.time.AwakeTimeSinceBootClock:
    18:18:void <clinit>() -> <clinit>
    20:21:void <init>() -> <init>
    29:29:com.facebook.common.time.AwakeTimeSinceBootClock get() -> get
    36:36:long now() -> now
com.facebook.common.time.CurrentThreadTimeClock -> com.facebook.common.time.CurrentThreadTimeClock:
    16:16:void <init>() -> <init>
    20:20:long now() -> now
com.facebook.common.time.RealtimeSinceBootClock -> com.facebook.common.time.RealtimeSinceBootClock:
    22:22:void <clinit>() -> <clinit>
    24:25:void <init>() -> <init>
    33:33:com.facebook.common.time.RealtimeSinceBootClock get() -> get
    39:39:long now() -> now
com.facebook.common.time.SystemClock -> com.facebook.common.time.SystemClock:
    15:15:void <clinit>() -> <clinit>
    17:18:void <init>() -> <init>
    21:21:com.facebook.common.time.SystemClock get() -> get
    26:26:long now() -> now
com.facebook.common.util.ByteConstants -> com.facebook.common.util.ByteConstants:
    14:15:void <init>() -> <init>
com.facebook.common.util.ExceptionWithNoStacktrace -> com.facebook.common.util.ExceptionWithNoStacktrace:
    19:20:void <init>(java.lang.String) -> <init>
    16:16:java.lang.Throwable fillInStackTrace() -> fillInStackTrace
com.facebook.common.util.HashCodeUtil -> com.facebook.common.util.HashCodeUtil:
    17:17:void <init>() -> <init>
    31:32:int hashCode(java.lang.Object) -> hashCode
    38:40:int hashCode(java.lang.Object,java.lang.Object) -> hashCode
    47:50:int hashCode(java.lang.Object,java.lang.Object,java.lang.Object) -> hashCode
    58:62:int hashCode(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> hashCode
    71:76:int hashCode(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> hashCode
    86:92:int hashCode(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> hashCode
    97:98:int hashCode(int) -> hashCode
    104:106:int hashCode(int,int) -> hashCode
    113:116:int hashCode(int,int,int) -> hashCode
    124:128:int hashCode(int,int,int,int) -> hashCode
    137:142:int hashCode(int,int,int,int,int) -> hashCode
    152:158:int hashCode(int,int,int,int,int,int) -> hashCode
com.facebook.common.util.Hex -> com.facebook.common.util.Hex:
    21:49:void <clinit>() -> <clinit>
    19:19:void <init>() -> <init>
    57:60:java.lang.String byte2Hex(int) -> byte2Hex
    89:129:byte[] decodeHex(java.lang.String) -> decodeHex
    69:82:java.lang.String encodeHex(byte[],boolean) -> encodeHex
    133:135:byte[] hexStringToByteArray(java.lang.String) -> hexStringToByteArray
com.facebook.common.util.SecureHashUtil -> com.facebook.common.util.SecureHashUtil:
    65:65:void <clinit>() -> <clinit>
    20:20:void <init>() -> <init>
    73:79:java.lang.String convertToHex(byte[]) -> convertToHex
    84:91:java.lang.String makeHash(byte[],java.lang.String) -> makeHash
    99:110:java.lang.String makeHash(java.io.InputStream,java.lang.String) -> makeHash
    51:53:java.lang.String makeMD5Hash(java.lang.String) -> makeMD5Hash
    58:58:java.lang.String makeMD5Hash(byte[]) -> makeMD5Hash
    62:62:java.lang.String makeMD5Hash(java.io.InputStream) -> makeMD5Hash
    24:26:java.lang.String makeSHA1Hash(java.lang.String) -> makeSHA1Hash
    31:31:java.lang.String makeSHA1Hash(byte[]) -> makeSHA1Hash
    40:45:java.lang.String makeSHA1HashBase64(byte[]) -> makeSHA1HashBase64
    35:35:java.lang.String makeSHA256Hash(byte[]) -> makeSHA256Hash
com.facebook.common.util.StreamUtil -> com.facebook.common.util.StreamUtil:
    19:19:void <init>() -> <init>
    26:26:byte[] getBytesFromStream(java.io.InputStream) -> getBytesFromStream
    37:50:byte[] getBytesFromStream(java.io.InputStream,int) -> getBytesFromStream
    62:80:long skip(java.io.InputStream,long) -> skip
com.facebook.common.util.StreamUtil$1 -> com.facebook.common.util.StreamUtil$1:
    37:37:void <init>(int) -> <init>
    42:45:byte[] toByteArray() -> toByteArray
com.facebook.common.util.TriState -> com.facebook.common.util.TriState:
    16:19:void <clinit>() -> <clinit>
    16:16:void <init>(java.lang.String,int) -> <init>
    59:67:boolean asBoolean() -> asBoolean
    81:89:boolean asBoolean(boolean) -> asBoolean
    102:110:java.lang.Boolean asBooleanObject() -> asBooleanObject
    129:136:com.facebook.common.util.TriState fromDbValue(int) -> fromDbValue
    116:123:int getDbValue() -> getDbValue
    25:25:boolean isSet() -> isSet
    16:16:com.facebook.common.util.TriState valueOf(java.lang.String) -> valueOf
    42:42:com.facebook.common.util.TriState valueOf(boolean) -> valueOf
    47:47:com.facebook.common.util.TriState valueOf(java.lang.Boolean) -> valueOf
    16:16:com.facebook.common.util.TriState[] values() -> values
com.facebook.common.util.TriState$1 -> com.facebook.common.util.TriState$1:
    59:59:void <clinit>() -> <clinit>
com.facebook.common.util.UriUtil -> com.facebook.common.util.UriUtil:
    38:39:void <clinit>() -> <clinit>
    19:19:void <init>() -> <init>
    207:226:java.lang.String getRealPathFromUri(android.content.ContentResolver,android.net.Uri) -> getRealPathFromUri
    185:185:java.lang.String getSchemeOrNull(android.net.Uri) -> getSchemeOrNull
    236:236:android.net.Uri getUriForFile(java.io.File) -> getUriForFile
    263:267:android.net.Uri getUriForQualifiedResource(java.lang.String,int) -> getUriForQualifiedResource
    248:251:android.net.Uri getUriForResourceId(int) -> getUriForResourceId
    176:176:boolean isDataUri(android.net.Uri) -> isDataUri
    146:147:boolean isLocalAssetUri(android.net.Uri) -> isLocalAssetUri
    134:136:boolean isLocalCameraUri(android.net.Uri) -> isLocalCameraUri
    122:124:boolean isLocalContactUri(android.net.Uri) -> isLocalContactUri
    111:112:boolean isLocalContentUri(android.net.Uri) -> isLocalContentUri
    100:101:boolean isLocalFileUri(android.net.Uri) -> isLocalFileUri
    157:158:boolean isLocalResourceUri(android.net.Uri) -> isLocalResourceUri
    89:90:boolean isNetworkUri(android.net.Uri) -> isNetworkUri
    168:169:boolean isQualifiedResourceUri(android.net.Uri) -> isQualifiedResourceUri
    195:195:android.net.Uri parseUriOrNull(java.lang.String) -> parseUriOrNull
    70:78:java.net.URL uriToUrl(android.net.Uri) -> uriToUrl
com.facebook.common.webp.WebpSupportStatus -> com.facebook.common.webp.WebpSupportStatus:
    17:89:void <clinit>() -> <clinit>
    16:16:void <init>() -> <init>
    59:62:byte[] asciiBytes(java.lang.String) -> asciiBytes
    145:148:boolean isAnimatedWebpHeader(byte[],int) -> isAnimatedWebpHeader
    163:164:boolean isExtendedWebpHeader(byte[],int,int) -> isExtendedWebpHeader
    170:173:boolean isExtendedWebpHeaderWithAlpha(byte[],int) -> isExtendedWebpHeaderWithAlpha
    98:119:boolean isExtendedWebpSupported() -> isExtendedWebpSupported
    156:156:boolean isLosslessWebpHeader(byte[],int) -> isLosslessWebpHeader
    152:152:boolean isSimpleWebpHeader(byte[],int) -> isSimpleWebpHeader
    189:191:boolean isWebpHeader(byte[],int,int) -> isWebpHeader
    126:141:boolean isWebpSupportedByPlatform(byte[],int,int) -> isWebpSupportedByPlatform
    30:42:com.facebook.common.webp.WebpBitmapFactory loadWebpBitmapFactoryIfExists() -> loadWebpBitmapFactoryIfExists
    198:211:boolean matchBytePattern(byte[],int,byte[]) -> matchBytePattern
com.facebook.datasource.AbstractDataSource -> com.facebook.datasource.AbstractDataSource:
    46:58:void <init>() -> <init>
    100:117:boolean close() -> close
    129:129:void closeResult(java.lang.Object) -> closeResult
    89:89:java.lang.Throwable getFailureCause() -> getFailureCause
    94:94:float getProgress() -> getProgress
    78:78:java.lang.Object getResult() -> getResult
    83:83:boolean hasFailed() -> hasFailed
    325:325:boolean hasMultipleResults() -> hasMultipleResults
    72:72:boolean hasResult() -> hasResult
    62:62:boolean isClosed() -> isClosed
    67:67:boolean isFinished() -> isFinished
    167:180:void notifyDataSubscriber(com.facebook.datasource.DataSubscriber,java.util.concurrent.Executor,boolean,boolean) -> notifyDataSubscriber
    155:160:void notifyDataSubscribers() -> notifyDataSubscribers
    310:321:void notifyProgressUpdate() -> notifyProgressUpdate
    233:237:boolean setFailure(java.lang.Throwable) -> setFailure
    288:294:boolean setFailureInternal(java.lang.Throwable) -> setFailureInternal
    255:259:boolean setProgress(float) -> setProgress
    298:305:boolean setProgressInternal(float) -> setProgressInternal
    208:212:boolean setResult(java.lang.Object,boolean) -> setResult
    263:283:boolean setResultInternal(java.lang.Object,boolean) -> setResultInternal
    133:152:void subscribe(com.facebook.datasource.DataSubscriber,java.util.concurrent.Executor) -> subscribe
    183:183:boolean wasCancelled() -> wasCancelled
com.facebook.datasource.AbstractDataSource$1 -> com.facebook.datasource.AbstractDataSource$1:
    168:168:void <init>(com.facebook.datasource.AbstractDataSource,boolean,com.facebook.datasource.DataSubscriber,boolean) -> <init>
    171:178:void run() -> run
com.facebook.datasource.AbstractDataSource$2 -> com.facebook.datasource.AbstractDataSource$2:
    314:314:void <init>(com.facebook.datasource.AbstractDataSource,com.facebook.datasource.DataSubscriber) -> <init>
    317:318:void run() -> run
com.facebook.datasource.AbstractDataSource$DataSourceStatus -> com.facebook.datasource.AbstractDataSource$DataSourceStatus:
    31:39:void <clinit>() -> <clinit>
    31:31:void <init>(java.lang.String,int) -> <init>
    31:31:com.facebook.datasource.AbstractDataSource$DataSourceStatus valueOf(java.lang.String) -> valueOf
    31:31:com.facebook.datasource.AbstractDataSource$DataSourceStatus[] values() -> values
com.facebook.datasource.BaseBooleanSubscriber -> com.facebook.datasource.BaseBooleanSubscriber:
    27:27:void <init>() -> <init>
    48:48:void onCancellation(com.facebook.datasource.DataSource) -> onCancellation
    40:44:void onFailure(com.facebook.datasource.DataSource) -> onFailure
    31:35:void onNewResult(com.facebook.datasource.DataSource) -> onNewResult
    52:52:void onProgressUpdate(com.facebook.datasource.DataSource) -> onProgressUpdate
com.facebook.datasource.BaseDataSubscriber -> com.facebook.datasource.BaseDataSubscriber:
    36:36:void <init>() -> <init>
    65:65:void onCancellation(com.facebook.datasource.DataSource) -> onCancellation
    57:61:void onFailure(com.facebook.datasource.DataSource) -> onFailure
    44:52:void onNewResult(com.facebook.datasource.DataSource) -> onNewResult
    69:69:void onProgressUpdate(com.facebook.datasource.DataSource) -> onProgressUpdate
com.facebook.datasource.DataSources -> com.facebook.datasource.DataSources:
    20:21:void <init>() -> <init>
    36:36:com.facebook.common.internal.Supplier getFailedDataSourceSupplier(java.lang.Throwable) -> getFailedDataSourceSupplier
    30:32:com.facebook.datasource.DataSource immediateDataSource(java.lang.Object) -> immediateDataSource
    24:26:com.facebook.datasource.DataSource immediateFailedDataSource(java.lang.Throwable) -> immediateFailedDataSource
    59:116:java.lang.Object waitForFinalResult(com.facebook.datasource.DataSource) -> waitForFinalResult
com.facebook.datasource.DataSources$1 -> com.facebook.datasource.DataSources$1:
    36:36:void <init>(java.lang.Throwable) -> <init>
    36:36:java.lang.Object get() -> get
    39:39:com.facebook.datasource.DataSource get() -> get
com.facebook.datasource.DataSources$2 -> com.facebook.datasource.DataSources$2:
    64:64:void <init>(com.facebook.datasource.DataSources$ValueHolder,java.util.concurrent.CountDownLatch,com.facebook.datasource.DataSources$ValueHolder) -> <init>
    91:92:void onCancellation(com.facebook.datasource.DataSource) -> onCancellation
    82:86:void onFailure(com.facebook.datasource.DataSource) -> onFailure
    68:77:void onNewResult(com.facebook.datasource.DataSource) -> onNewResult
    97:97:void onProgressUpdate(com.facebook.datasource.DataSource) -> onProgressUpdate
com.facebook.datasource.DataSources$3 -> com.facebook.datasource.DataSources$3:
    99:99:void <init>() -> <init>
    104:105:void execute(java.lang.Runnable) -> execute
com.facebook.datasource.DataSources$ValueHolder -> com.facebook.datasource.DataSources$ValueHolder:
    119:121:void <init>() -> <init>
    119:119:void <init>(com.facebook.datasource.DataSources$1) -> <init>
com.facebook.datasource.FirstAvailableDataSourceSupplier -> com.facebook.datasource.FirstAvailableDataSourceSupplier:
    30:33:void <init>(java.util.List) -> <init>
    26:26:java.util.List access$100(com.facebook.datasource.FirstAvailableDataSourceSupplier) -> access$100
    37:37:com.facebook.datasource.FirstAvailableDataSourceSupplier create(java.util.List) -> create
    52:59:boolean equals(java.lang.Object) -> equals
    25:25:java.lang.Object get() -> get
    42:42:com.facebook.datasource.DataSource get() -> get
    47:47:int hashCode() -> hashCode
    64:66:java.lang.String toString() -> toString
com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource -> com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource:
    72:80:void <init>(com.facebook.datasource.FirstAvailableDataSourceSupplier) -> <init>
    70:70:void access$200(com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource,com.facebook.datasource.DataSource) -> access$200
    70:70:void access$300(com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource,com.facebook.datasource.DataSource) -> access$300
    143:148:boolean clearCurrentDataSource(com.facebook.datasource.DataSource) -> clearCurrentDataSource
    99:112:boolean close() -> close
    199:202:void closeSafely(com.facebook.datasource.DataSource) -> closeSafely
    153:153:com.facebook.datasource.DataSource getDataSourceWithResult() -> getDataSourceWithResult
    128:132:com.facebook.common.internal.Supplier getNextSupplier() -> getNextSupplier
    84:86:java.lang.Object getResult() -> getResult
    90:92:boolean hasResult() -> hasResult
    159:175:void maybeSetDataSourceWithResult(com.facebook.datasource.DataSource,boolean) -> maybeSetDataSourceWithResult
    178:187:void onDataSourceFailed(com.facebook.datasource.DataSource) -> onDataSourceFailed
    190:196:void onDataSourceNewResult(com.facebook.datasource.DataSource) -> onDataSourceNewResult
    135:140:boolean setCurrentDataSource(com.facebook.datasource.DataSource) -> setCurrentDataSource
    116:123:boolean startNextDataSource() -> startNextDataSource
com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource$InternalDataSubscriber -> com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource$InternalDataSubscriber:
    204:204:void <init>(com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource) -> <init>
    204:204:void <init>(com.facebook.datasource.FirstAvailableDataSourceSupplier$FirstAvailableDataSource,com.facebook.datasource.FirstAvailableDataSourceSupplier$1) -> <init>
    213:213:void onCancellation(com.facebook.datasource.DataSource) -> onCancellation
    208:209:void onFailure(com.facebook.datasource.DataSource) -> onFailure
    217:222:void onNewResult(com.facebook.datasource.DataSource) -> onNewResult
    226:228:void onProgressUpdate(com.facebook.datasource.DataSource) -> onProgressUpdate
com.facebook.datasource.IncreasingQualityDataSourceSupplier -> com.facebook.datasource.IncreasingQualityDataSourceSupplier:
    41:45:void <init>(java.util.List,boolean) -> <init>
    35:35:boolean access$000(com.facebook.datasource.IncreasingQualityDataSourceSupplier) -> access$000
    35:35:java.util.List access$100(com.facebook.datasource.IncreasingQualityDataSourceSupplier) -> access$100
    57:57:com.facebook.datasource.IncreasingQualityDataSourceSupplier create(java.util.List) -> create
    72:72:com.facebook.datasource.IncreasingQualityDataSourceSupplier create(java.util.List,boolean) -> create
    87:94:boolean equals(java.lang.Object) -> equals
    34:34:java.lang.Object get() -> get
    77:77:com.facebook.datasource.DataSource get() -> get
    82:82:int hashCode() -> hashCode
    99:101:java.lang.String toString() -> toString
com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource -> com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource:
    116:120:void <init>(com.facebook.datasource.IncreasingQualityDataSourceSupplier) -> <init>
    105:105:void access$200(com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource,int,com.facebook.datasource.DataSource) -> access$200
    105:105:void access$300(com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource,int,com.facebook.datasource.DataSource) -> access$300
    186:205:boolean close() -> close
    274:277:void closeSafely(com.facebook.datasource.DataSource) -> closeSafely
    123:146:void ensureDataSourceInitialized() -> ensureDataSourceInitialized
    155:155:com.facebook.datasource.DataSource getAndClearDataSource(int) -> getAndClearDataSource
    150:150:com.facebook.datasource.DataSource getDataSource(int) -> getDataSource
    160:160:com.facebook.datasource.DataSource getDataSourceWithResult() -> getDataSourceWithResult
    165:171:java.lang.Object getResult() -> getResult
    175:181:boolean hasResult() -> hasResult
    227:231:void maybeSetFailure() -> maybeSetFailure
    239:260:void maybeSetIndexOfDataSourceWithResult(int,com.facebook.datasource.DataSource,boolean) -> maybeSetIndexOfDataSourceWithResult
    219:224:void onDataSourceFailed(int,com.facebook.datasource.DataSource) -> onDataSourceFailed
    209:216:void onDataSourceNewResult(int,com.facebook.datasource.DataSource) -> onDataSourceNewResult
    263:270:com.facebook.datasource.DataSource tryGetAndClearDataSource(int,com.facebook.datasource.DataSource) -> tryGetAndClearDataSource
com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource$InternalDataSubscriber -> com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource$InternalDataSubscriber:
    282:284:void <init>(com.facebook.datasource.IncreasingQualityDataSourceSupplier$IncreasingQualityDataSource,int) -> <init>
    302:302:void onCancellation(com.facebook.datasource.DataSource) -> onCancellation
    297:298:void onFailure(com.facebook.datasource.DataSource) -> onFailure
    288:293:void onNewResult(com.facebook.datasource.DataSource) -> onNewResult
    306:309:void onProgressUpdate(com.facebook.datasource.DataSource) -> onProgressUpdate
com.facebook.datasource.RetainingDataSourceSupplier -> com.facebook.datasource.RetainingDataSourceSupplier:
    19:24:void <init>() -> <init>
    18:18:java.lang.Object get() -> get
    28:31:com.facebook.datasource.DataSource get() -> get
    35:41:void replaceSupplier(com.facebook.common.internal.Supplier) -> replaceSupplier
com.facebook.datasource.RetainingDataSourceSupplier$RetainingDataSource -> com.facebook.datasource.RetainingDataSourceSupplier$RetainingDataSource:
    43:44:void <init>() -> <init>
    43:43:void <init>(com.facebook.datasource.RetainingDataSourceSupplier$1) -> <init>
    43:43:void access$200(com.facebook.datasource.RetainingDataSourceSupplier$RetainingDataSource,com.facebook.datasource.DataSource) -> access$200
    43:43:void access$300(com.facebook.datasource.RetainingDataSourceSupplier$RetainingDataSource,com.facebook.datasource.DataSource) -> access$300
    43:43:void access$400(com.facebook.datasource.RetainingDataSourceSupplier$RetainingDataSource,com.facebook.datasource.DataSource) -> access$400
    84:94:boolean close() -> close
    114:117:void closeSafely(com.facebook.datasource.DataSource) -> closeSafely
    73:73:java.lang.Object getResult() -> getResult
    145:145:boolean hasMultipleResults() -> hasMultipleResults
    78:78:boolean hasResult() -> hasResult
    105:105:void onDataSourceFailed(com.facebook.datasource.DataSource) -> onDataSourceFailed
    98:101:void onDataSourceNewResult(com.facebook.datasource.DataSource) -> onDataSourceNewResult
    108:111:void onDatasourceProgress(com.facebook.datasource.DataSource) -> onDatasourceProgress
    50:68:void setSupplier(com.facebook.common.internal.Supplier) -> setSupplier
com.facebook.datasource.RetainingDataSourceSupplier$RetainingDataSource$InternalDataSubscriber -> com.facebook.datasource.RetainingDataSourceSupplier$RetainingDataSource$InternalDataSubscriber:
    119:119:void <init>(com.facebook.datasource.RetainingDataSourceSupplier$RetainingDataSource) -> <init>
    119:119:void <init>(com.facebook.datasource.RetainingDataSourceSupplier$RetainingDataSource,com.facebook.datasource.RetainingDataSourceSupplier$1) -> <init>
    135:135:void onCancellation(com.facebook.datasource.DataSource) -> onCancellation
    131:132:void onFailure(com.facebook.datasource.DataSource) -> onFailure
    122:127:void onNewResult(com.facebook.datasource.DataSource) -> onNewResult
    139:140:void onProgressUpdate(com.facebook.datasource.DataSource) -> onProgressUpdate
com.facebook.datasource.SimpleDataSource -> com.facebook.datasource.SimpleDataSource:
    17:18:void <init>() -> <init>
    24:24:com.facebook.datasource.SimpleDataSource create() -> create
    71:71:boolean setFailure(java.lang.Throwable) -> setFailure
    82:82:boolean setProgress(float) -> setProgress
    44:44:boolean setResult(java.lang.Object,boolean) -> setResult
    52:52:boolean setResult(java.lang.Object) -> setResult
com.facebook.drawee.BuildConfig -> com.facebook.drawee.BuildConfig:
    6:6:void <init>() -> <init>
com.facebook.drawee.backends.pipeline.BuildConfig -> com.facebook.drawee.backends.pipeline.BuildConfig:
    6:6:void <init>() -> <init>
com.facebook.drawee.backends.pipeline.DefaultDrawableFactory -> com.facebook.drawee.backends.pipeline.DefaultDrawableFactory:
    28:31:void <init>(android.content.res.Resources,com.facebook.imagepipeline.drawable.DrawableFactory) -> <init>
    42:66:android.graphics.drawable.Drawable createDrawable(com.facebook.imagepipeline.image.CloseableImage) -> createDrawable
    81:82:boolean hasTransformableExifOrientation(com.facebook.imagepipeline.image.CloseableStaticBitmap) -> hasTransformableExifOrientation
    74:75:boolean hasTransformableRotationAngle(com.facebook.imagepipeline.image.CloseableStaticBitmap) -> hasTransformableRotationAngle
    35:35:boolean supportsImageType(com.facebook.imagepipeline.image.CloseableImage) -> supportsImageType
com.facebook.drawee.backends.pipeline.DraweeConfig -> com.facebook.drawee.backends.pipeline.DraweeConfig:
    21:21:void <init>(com.facebook.drawee.backends.pipeline.DraweeConfig$Builder,com.facebook.drawee.backends.pipeline.DraweeConfig$1) -> <init>
    29:37:void <init>(com.facebook.drawee.backends.pipeline.DraweeConfig$Builder) -> <init>
    41:41:com.facebook.common.internal.ImmutableList getCustomDrawableFactories() -> getCustomDrawableFactories
    54:54:com.facebook.common.internal.Supplier getDebugOverlayEnabledSupplier() -> getDebugOverlayEnabledSupplier
    46:46:com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory getPipelineDraweeControllerFactory() -> getPipelineDraweeControllerFactory
    50:50:com.facebook.drawee.backends.pipeline.DraweeConfig$Builder newBuilder() -> newBuilder
com.facebook.drawee.backends.pipeline.DraweeConfig$Builder -> com.facebook.drawee.backends.pipeline.DraweeConfig$Builder:
    57:57:void <init>() -> <init>
    57:57:java.util.List access$000(com.facebook.drawee.backends.pipeline.DraweeConfig$Builder) -> access$000
    57:57:com.facebook.common.internal.Supplier access$100(com.facebook.drawee.backends.pipeline.DraweeConfig$Builder) -> access$100
    57:57:com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory access$200(com.facebook.drawee.backends.pipeline.DraweeConfig$Builder) -> access$200
    71:75:com.facebook.drawee.backends.pipeline.DraweeConfig$Builder addCustomDrawableFactory(com.facebook.imagepipeline.drawable.DrawableFactory) -> addCustomDrawableFactory
    115:115:com.facebook.drawee.backends.pipeline.DraweeConfig build() -> build
    98:100:com.facebook.drawee.backends.pipeline.DraweeConfig$Builder setDebugOverlayEnabledSupplier(com.facebook.common.internal.Supplier) -> setDebugOverlayEnabledSupplier
    86:86:com.facebook.drawee.backends.pipeline.DraweeConfig$Builder setDrawDebugOverlay(boolean) -> setDrawDebugOverlay
    110:111:com.facebook.drawee.backends.pipeline.DraweeConfig$Builder setPipelineDraweeControllerFactory(com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory) -> setPipelineDraweeControllerFactory
com.facebook.drawee.backends.pipeline.Fresco -> com.facebook.drawee.backends.pipeline.Fresco:
    29:32:void <clinit>() -> <clinit>
    34:34:void <init>() -> <init>
    106:106:com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier getDraweeControllerBuilderSupplier() -> getDraweeControllerBuilderSupplier
    120:120:com.facebook.imagepipeline.core.ImagePipeline getImagePipeline() -> getImagePipeline
    115:115:com.facebook.imagepipeline.core.ImagePipelineFactory getImagePipelineFactory() -> getImagePipelineFactory
    132:132:boolean hasBeenInitialized() -> hasBeenInitialized
    38:39:void initialize(android.content.Context) -> initialize
    45:46:void initialize(android.content.Context,com.facebook.imagepipeline.core.ImagePipelineConfig) -> initialize
    53:89:void initialize(android.content.Context,com.facebook.imagepipeline.core.ImagePipelineConfig,com.facebook.drawee.backends.pipeline.DraweeConfig) -> initialize
    93:102:void initializeDrawee(android.content.Context,com.facebook.drawee.backends.pipeline.DraweeConfig) -> initializeDrawee
    111:111:com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder newDraweeControllerBuilder() -> newDraweeControllerBuilder
    125:128:void shutDown() -> shutDown
com.facebook.drawee.backends.pipeline.PipelineDraweeController -> com.facebook.drawee.backends.pipeline.PipelineDraweeController:
    60:60:void <clinit>() -> <clinit>
    100:105:void <init>(android.content.res.Resources,com.facebook.drawee.components.DeferredReleaser,com.facebook.imagepipeline.drawable.DrawableFactory,java.util.concurrent.Executor,com.facebook.imagepipeline.cache.MemoryCache,com.facebook.common.internal.ImmutableList) -> <init>
    175:185:void addImageOriginListener(com.facebook.drawee.backends.pipeline.info.ImageOriginListener) -> addImageOriginListener
    161:166:void addRequestListener(com.facebook.imagepipeline.listener.RequestListener) -> addRequestListener
    200:203:void clearImageOriginListeners() -> clearImageOriginListeners
    57:57:android.graphics.drawable.Drawable createDrawable(java.lang.Object) -> createDrawable
    253:279:android.graphics.drawable.Drawable createDrawable(com.facebook.common.references.CloseableReference) -> createDrawable
    216:216:com.facebook.cache.common.CacheKey getCacheKey() -> getCacheKey
    57:57:java.lang.Object getCachedImage() -> getCachedImage
    380:396:com.facebook.common.references.CloseableReference getCachedImage() -> getCachedImage
    237:247:com.facebook.datasource.DataSource getDataSource() -> getDataSource
    413:413:com.facebook.common.internal.Supplier getDataSourceSupplier() -> getDataSourceSupplier
    57:57:int getImageHash(java.lang.Object) -> getImageHash
    363:363:int getImageHash(com.facebook.common.references.CloseableReference) -> getImageHash
    57:57:java.lang.Object getImageInfo(java.lang.Object) -> getImageInfo
    357:358:com.facebook.imagepipeline.image.ImageInfo getImageInfo(com.facebook.common.references.CloseableReference) -> getImageInfo
    220:232:com.facebook.imagepipeline.listener.RequestListener getRequestListener() -> getRequestListener
    212:212:android.content.res.Resources getResources() -> getResources
    206:209:void init(com.facebook.common.internal.Supplier) -> init
    123:136:void initialize(com.facebook.common.internal.Supplier,java.lang.String,com.facebook.cache.common.CacheKey,java.lang.Object,com.facebook.common.internal.ImmutableList,com.facebook.drawee.backends.pipeline.info.ImageOriginListener) -> initialize
    139:150:void initializePerformanceMonitoring(com.facebook.drawee.backends.pipeline.info.ImagePerfDataListener) -> initializePerformanceMonitoring
    308:311:boolean isSameImageRequest(com.facebook.drawee.interfaces.DraweeController) -> isSameImageRequest
    286:297:android.graphics.drawable.Drawable maybeCreateDrawableFromFactories(com.facebook.common.internal.ImmutableList,com.facebook.imagepipeline.image.CloseableImage) -> maybeCreateDrawableFromFactories
    315:353:void maybeUpdateDebugOverlay(com.facebook.imagepipeline.image.CloseableImage) -> maybeUpdateDebugOverlay
    57:57:void onImageLoadedFromCacheImmediately(java.lang.String,java.lang.Object) -> onImageLoadedFromCacheImmediately
    404:410:void onImageLoadedFromCacheImmediately(java.lang.String,com.facebook.common.references.CloseableReference) -> onImageLoadedFromCacheImmediately
    373:376:void releaseDrawable(android.graphics.drawable.Drawable) -> releaseDrawable
    57:57:void releaseImage(java.lang.Object) -> releaseImage
    368:369:void releaseImage(com.facebook.common.references.CloseableReference) -> releaseImage
    187:197:void removeImageOriginListener(com.facebook.drawee.backends.pipeline.info.ImageOriginListener) -> removeImageOriginListener
    168:173:void removeRequestListener(com.facebook.imagepipeline.listener.RequestListener) -> removeRequestListener
    158:159:void setCustomDrawableFactories(com.facebook.common.internal.ImmutableList) -> setCustomDrawableFactories
    153:154:void setDrawDebugOverlay(boolean) -> setDrawDebugOverlay
    302:304:void setHierarchy(com.facebook.drawee.interfaces.DraweeHierarchy) -> setHierarchy
    418:421:java.lang.String toString() -> toString
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder -> com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder:
    58:61:void <init>(android.content.Context,com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory,com.facebook.imagepipeline.core.ImagePipeline,java.util.Set) -> <init>
    183:191:com.facebook.imagepipeline.request.ImageRequest$RequestLevel convertCacheLevelToRequestLevel(com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel) -> convertCacheLevelToRequestLevel
    142:156:com.facebook.cache.common.CacheKey getCacheKey() -> getCacheKey
    39:39:com.facebook.datasource.DataSource getDataSourceForRequest(com.facebook.drawee.interfaces.DraweeController,java.lang.String,java.lang.Object,java.lang.Object,com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel) -> getDataSourceForRequest
    166:170:com.facebook.datasource.DataSource getDataSourceForRequest(com.facebook.drawee.interfaces.DraweeController,java.lang.String,com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel) -> getDataSourceForRequest
    175:178:com.facebook.imagepipeline.listener.RequestListener getRequestListener(com.facebook.drawee.interfaces.DraweeController) -> getRequestListener
    39:39:com.facebook.drawee.controller.AbstractDraweeController obtainController() -> obtainController
    113:136:com.facebook.drawee.backends.pipeline.PipelineDraweeController obtainController() -> obtainController
    84:85:com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder setCustomDrawableFactories(com.facebook.common.internal.ImmutableList) -> setCustomDrawableFactories
    90:91:com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder setCustomDrawableFactories(com.facebook.imagepipeline.drawable.DrawableFactory[]) -> setCustomDrawableFactories
    95:96:com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder setCustomDrawableFactory(com.facebook.imagepipeline.drawable.DrawableFactory) -> setCustomDrawableFactory
    101:102:com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder setImageOriginListener(com.facebook.drawee.backends.pipeline.info.ImageOriginListener) -> setImageOriginListener
    107:108:com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder setPerfDataListener(com.facebook.drawee.backends.pipeline.info.ImagePerfDataListener) -> setPerfDataListener
    39:39:com.facebook.drawee.interfaces.SimpleDraweeControllerBuilder setUri(android.net.Uri) -> setUri
    39:39:com.facebook.drawee.interfaces.SimpleDraweeControllerBuilder setUri(java.lang.String) -> setUri
    65:71:com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder setUri(android.net.Uri) -> setUri
    76:79:com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder setUri(java.lang.String) -> setUri
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder$1 -> com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder$1:
    183:183:void <clinit>() -> <clinit>
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier -> com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier:
    29:30:void <init>(android.content.Context) -> <init>
    35:36:void <init>(android.content.Context,com.facebook.drawee.backends.pipeline.DraweeConfig) -> <init>
    42:43:void <init>(android.content.Context,com.facebook.imagepipeline.core.ImagePipelineFactory,com.facebook.drawee.backends.pipeline.DraweeConfig) -> <init>
    49:71:void <init>(android.content.Context,com.facebook.imagepipeline.core.ImagePipelineFactory,java.util.Set,com.facebook.drawee.backends.pipeline.DraweeConfig) -> <init>
    20:20:java.lang.Object get() -> get
    75:75:com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder get() -> get
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory -> com.facebook.drawee.backends.pipeline.PipelineDraweeControllerFactory:
    22:22:void <init>() -> <init>
    40:47:void init(android.content.res.Resources,com.facebook.drawee.components.DeferredReleaser,com.facebook.imagepipeline.drawable.DrawableFactory,java.util.concurrent.Executor,com.facebook.imagepipeline.cache.MemoryCache,com.facebook.common.internal.ImmutableList,com.facebook.common.internal.Supplier) -> init
    71:71:com.facebook.drawee.backends.pipeline.PipelineDraweeController internalCreateController(android.content.res.Resources,com.facebook.drawee.components.DeferredReleaser,com.facebook.imagepipeline.drawable.DrawableFactory,java.util.concurrent.Executor,com.facebook.imagepipeline.cache.MemoryCache,com.facebook.common.internal.ImmutableList) -> internalCreateController
    50:61:com.facebook.drawee.backends.pipeline.PipelineDraweeController newController() -> newController
com.facebook.drawee.backends.pipeline.debug.DebugOverlayImageOriginListener -> com.facebook.drawee.backends.pipeline.debug.DebugOverlayImageOriginListener:
    15:17:void <init>() -> <init>
    25:25:java.lang.String getImageOrigin() -> getImageOrigin
    21:22:void onImageLoaded(java.lang.String,int,boolean) -> onImageLoaded
com.facebook.drawee.backends.pipeline.info.ForwardingImageOriginListener -> com.facebook.drawee.backends.pipeline.info.ForwardingImageOriginListener:
    21:23:void <init>(java.util.Set) -> <init>
    25:28:void <init>(com.facebook.drawee.backends.pipeline.info.ImageOriginListener[]) -> <init>
    30:32:void addImageOriginListener(com.facebook.drawee.backends.pipeline.info.ImageOriginListener) -> addImageOriginListener
    39:51:void onImageLoaded(java.lang.String,int,boolean) -> onImageLoaded
    34:36:void removeImageOriginListener(com.facebook.drawee.backends.pipeline.info.ImageOriginListener) -> removeImageOriginListener
com.facebook.drawee.backends.pipeline.info.ImageOriginRequestListener -> com.facebook.drawee.backends.pipeline.info.ImageOriginRequestListener:
    22:25:void <init>(java.lang.String,com.facebook.drawee.backends.pipeline.info.ImageOriginListener) -> <init>
    33:34:void init(java.lang.String) -> init
    38:42:void onUltimateProducerReached(java.lang.String,java.lang.String,boolean) -> onUltimateProducerReached
com.facebook.drawee.backends.pipeline.info.ImageOriginUtils -> com.facebook.drawee.backends.pipeline.info.ImageOriginUtils:
    68:68:void <init>() -> <init>
    44:64:int mapProducerNameToImageOrigin(java.lang.String) -> mapProducerNameToImageOrigin
    24:38:java.lang.String toString(int) -> toString
com.facebook.drawee.backends.pipeline.info.ImagePerfData -> com.facebook.drawee.backends.pipeline.info.ImagePerfData:
    65:86:void <init>(java.lang.String,java.lang.String,com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,com.facebook.imagepipeline.image.ImageInfo,long,long,long,long,long,long,long,int,boolean,int,int,int,long,long,java.lang.String) -> <init>
    187:205:java.lang.String createDebugString() -> createDebugString
    105:105:java.lang.Object getCallerContext() -> getCallerContext
    183:183:java.lang.String getComponentTag() -> getComponentTag
    126:126:long getControllerFailureTimeMs() -> getControllerFailureTimeMs
    122:122:long getControllerFinalImageSetTimeMs() -> getControllerFinalImageSetTimeMs
    90:90:java.lang.String getControllerId() -> getControllerId
    118:118:long getControllerIntermediateImageSetTimeMs() -> getControllerIntermediateImageSetTimeMs
    114:114:long getControllerSubmitTimeMs() -> getControllerSubmitTimeMs
    154:158:long getFinalImageLoadTimeMs() -> getFinalImageLoadTimeMs
    110:110:com.facebook.imagepipeline.image.ImageInfo getImageInfo() -> getImageInfo
    138:138:int getImageOrigin() -> getImageOrigin
    100:100:com.facebook.imagepipeline.request.ImageRequest getImageRequest() -> getImageRequest
    134:134:long getImageRequestEndTimeMs() -> getImageRequestEndTimeMs
    130:130:long getImageRequestStartTimeMs() -> getImageRequestStartTimeMs
    162:166:long getIntermediateImageLoadTimeMs() -> getIntermediateImageLoadTimeMs
    178:178:long getInvisibilityEventTimeMs() -> getInvisibilityEventTimeMs
    150:150:int getOnScreenHeightPx() -> getOnScreenHeightPx
    146:146:int getOnScreenWidthPx() -> getOnScreenWidthPx
    95:95:java.lang.String getRequestId() -> getRequestId
    174:174:long getVisibilityEventTimeMs() -> getVisibilityEventTimeMs
    170:170:int getVisibilityState() -> getVisibilityState
    142:142:boolean isPrefetch() -> isPrefetch
com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor -> com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor:
    38:42:void <init>(com.facebook.common.time.MonotonicClock,com.facebook.drawee.backends.pipeline.PipelineDraweeController) -> <init>
    71:78:void addImagePerfDataListener(com.facebook.drawee.backends.pipeline.info.ImagePerfDataListener) -> addImagePerfDataListener
    120:126:void addViewportData() -> addViewportData
    88:91:void clearImagePerfDataListeners() -> clearImagePerfDataListeners
    109:117:void notifyListenersOfVisibilityStateUpdate(com.facebook.drawee.backends.pipeline.info.ImagePerfState,int) -> notifyListenersOfVisibilityStateUpdate
    94:105:void notifyStatusUpdated(com.facebook.drawee.backends.pipeline.info.ImagePerfState,int) -> notifyStatusUpdated
    81:85:void removeImagePerfDataListener(com.facebook.drawee.backends.pipeline.info.ImagePerfDataListener) -> removeImagePerfDataListener
    153:156:void reset() -> reset
    45:68:void setEnabled(boolean) -> setEnabled
    129:150:void setupListeners() -> setupListeners
com.facebook.drawee.backends.pipeline.info.ImagePerfState -> com.facebook.drawee.backends.pipeline.info.ImagePerfState:
    15:48:void <init>() -> <init>
    87:87:int getImageLoadStatus() -> getImageLoadStatus
    53:79:void reset() -> reset
    103:104:void setCallerContext(java.lang.Object) -> setCallerContext
    167:168:void setComponentTag(java.lang.String) -> setComponentTag
    123:124:void setControllerCancelTimeMs(long) -> setControllerCancelTimeMs
    119:120:void setControllerFailureTimeMs(long) -> setControllerFailureTimeMs
    115:116:void setControllerFinalImageSetTimeMs(long) -> setControllerFinalImageSetTimeMs
    91:92:void setControllerId(java.lang.String) -> setControllerId
    111:112:void setControllerIntermediateImageSetTimeMs(long) -> setControllerIntermediateImageSetTimeMs
    107:108:void setControllerSubmitTimeMs(long) -> setControllerSubmitTimeMs
    151:152:void setImageInfo(com.facebook.imagepipeline.image.ImageInfo) -> setImageInfo
    82:83:void setImageLoadStatus(int) -> setImageLoadStatus
    143:144:void setImageOrigin(int) -> setImageOrigin
    99:100:void setImageRequest(com.facebook.imagepipeline.request.ImageRequest) -> setImageRequest
    131:132:void setImageRequestEndTimeMs(long) -> setImageRequestEndTimeMs
    127:128:void setImageRequestStartTimeMs(long) -> setImageRequestStartTimeMs
    139:140:void setInvisibilityEventTimeMs(long) -> setInvisibilityEventTimeMs
    159:160:void setOnScreenHeight(int) -> setOnScreenHeight
    155:156:void setOnScreenWidth(int) -> setOnScreenWidth
    147:148:void setPrefetch(boolean) -> setPrefetch
    95:96:void setRequestId(java.lang.String) -> setRequestId
    135:136:void setVisibilityEventTimeMs(long) -> setVisibilityEventTimeMs
    163:164:void setVisible(boolean) -> setVisible
    171:171:com.facebook.drawee.backends.pipeline.info.ImagePerfData snapshot() -> snapshot
com.facebook.drawee.backends.pipeline.info.ImagePerfUtils -> com.facebook.drawee.backends.pipeline.info.ImagePerfUtils:
    30:30:void <init>() -> <init>
    12:26:java.lang.String toString(int) -> toString
com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener -> com.facebook.drawee.backends.pipeline.info.internal.ImagePerfControllerListener:
    27:31:void <init>(com.facebook.common.time.MonotonicClock,com.facebook.drawee.backends.pipeline.info.ImagePerfState,com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor) -> <init>
    71:79:void onFailure(java.lang.String,java.lang.Throwable) -> onFailure
    20:20:void onFinalImageSet(java.lang.String,java.lang.Object,android.graphics.drawable.Animatable) -> onFinalImageSet
    59:67:void onFinalImageSet(java.lang.String,com.facebook.imagepipeline.image.ImageInfo,android.graphics.drawable.Animatable) -> onFinalImageSet
    20:20:void onIntermediateImageSet(java.lang.String,java.lang.Object) -> onIntermediateImageSet
    47:54:void onIntermediateImageSet(java.lang.String,com.facebook.imagepipeline.image.ImageInfo) -> onIntermediateImageSet
    83:96:void onRelease(java.lang.String) -> onRelease
    35:43:void onSubmit(java.lang.String,java.lang.Object) -> onSubmit
    109:114:void reportViewInvisible(long) -> reportViewInvisible
    100:105:void reportViewVisible(long) -> reportViewVisible
com.facebook.drawee.backends.pipeline.info.internal.ImagePerfImageOriginListener -> com.facebook.drawee.backends.pipeline.info.internal.ImagePerfImageOriginListener:
    21:24:void <init>(com.facebook.drawee.backends.pipeline.info.ImagePerfState,com.facebook.drawee.backends.pipeline.info.ImagePerfMonitor) -> <init>
    28:30:void onImageLoaded(java.lang.String,int,boolean) -> onImageLoaded
com.facebook.drawee.backends.pipeline.info.internal.ImagePerfRequestListener -> com.facebook.drawee.backends.pipeline.info.internal.ImagePerfRequestListener:
    19:22:void <init>(com.facebook.common.time.MonotonicClock,com.facebook.drawee.backends.pipeline.info.ImagePerfState) -> <init>
    56:59:void onRequestCancellation(java.lang.String) -> onRequestCancellation
    47:52:void onRequestFailure(com.facebook.imagepipeline.request.ImageRequest,java.lang.String,java.lang.Throwable,boolean) -> onRequestFailure
    27:33:void onRequestStart(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,java.lang.String,boolean) -> onRequestStart
    37:42:void onRequestSuccess(com.facebook.imagepipeline.request.ImageRequest,java.lang.String,boolean) -> onRequestSuccess
com.facebook.drawee.components.DeferredReleaser -> com.facebook.drawee.components.DeferredReleaser:
    34:34:void <clinit>() -> <clinit>
    50:59:void <init>() -> <init>
    32:32:void access$000() -> access$000
    32:32:java.util.Set access$100(com.facebook.drawee.components.DeferredReleaser) -> access$100
    95:97:void cancelDeferredRelease(com.facebook.drawee.components.DeferredReleaser$Releasable) -> cancelDeferredRelease
    100:101:void ensureOnUiThread() -> ensureOnUiThread
    36:40:com.facebook.drawee.components.DeferredReleaser getInstance() -> getInstance
    78:88:void scheduleDeferredRelease(com.facebook.drawee.components.DeferredReleaser$Releasable) -> scheduleDeferredRelease
com.facebook.drawee.components.DeferredReleaser$1 -> com.facebook.drawee.components.DeferredReleaser$1:
    59:59:void <init>(com.facebook.drawee.components.DeferredReleaser) -> <init>
    62:67:void run() -> run
com.facebook.drawee.components.DraweeEventTracker -> com.facebook.drawee.components.DraweeEventTracker:
    23:25:void <clinit>() -> <clinit>
    20:55:void <init>() -> <init>
    65:66:void disable() -> disable
    58:58:com.facebook.drawee.components.DraweeEventTracker newInstance() -> newInstance
    69:76:void recordEvent(com.facebook.drawee.components.DraweeEventTracker$Event) -> recordEvent
    80:80:java.lang.String toString() -> toString
com.facebook.drawee.components.DraweeEventTracker$Event -> com.facebook.drawee.components.DraweeEventTracker$Event:
    27:51:void <clinit>() -> <clinit>
    27:27:void <init>(java.lang.String,int) -> <init>
    27:27:com.facebook.drawee.components.DraweeEventTracker$Event valueOf(java.lang.String) -> valueOf
    27:27:com.facebook.drawee.components.DraweeEventTracker$Event[] values() -> values
com.facebook.drawee.components.RetryManager -> com.facebook.drawee.components.RetryManager:
    20:22:void <init>() -> <init>
    32:35:void init() -> init
    46:46:boolean isTapToRetryEnabled() -> isTapToRetryEnabled
    25:25:com.facebook.drawee.components.RetryManager newInstance() -> newInstance
    62:63:void notifyTapToRetry() -> notifyTapToRetry
    42:43:void reset() -> reset
    54:55:void setMaxTapToRetryAttemps(int) -> setMaxTapToRetryAttemps
    50:51:void setTapToRetryEnabled(boolean) -> setTapToRetryEnabled
    58:58:boolean shouldRetryOnTap() -> shouldRetryOnTap
com.facebook.drawee.controller.AbstractDraweeController -> com.facebook.drawee.controller.AbstractDraweeController:
    69:69:void <clinit>() -> <clinit>
    72:110:void <init>(com.facebook.drawee.components.DeferredReleaser,java.util.concurrent.Executor,java.lang.String,java.lang.Object) -> <init>
    44:44:void access$000(com.facebook.drawee.controller.AbstractDraweeController,java.lang.String,com.facebook.datasource.DataSource,java.lang.Object,float,boolean,boolean,boolean) -> access$000
    44:44:void access$100(com.facebook.drawee.controller.AbstractDraweeController,java.lang.String,com.facebook.datasource.DataSource,java.lang.Throwable,boolean) -> access$100
    44:44:void access$200(com.facebook.drawee.controller.AbstractDraweeController,java.lang.String,com.facebook.datasource.DataSource,float,boolean) -> access$200
    260:274:void addControllerListener(com.facebook.drawee.controller.ControllerListener) -> addControllerListener
    692:692:android.graphics.drawable.Animatable getAnimatable() -> getAnimatable
    725:725:java.lang.Object getCachedImage() -> getCachedImage
    217:217:java.lang.Object getCallerContext() -> getCallerContext
    249:249:java.lang.String getContentDescription() -> getContentDescription
    290:293:com.facebook.drawee.controller.ControllerListener getControllerListener() -> getControllerListener
    355:355:android.graphics.drawable.Drawable getControllerOverlay() -> getControllerOverlay
    230:230:com.facebook.drawee.gestures.GestureDetector getGestureDetector() -> getGestureDetector
    306:306:com.facebook.drawee.interfaces.DraweeHierarchy getHierarchy() -> getHierarchy
    212:212:java.lang.String getId() -> getId
    702:702:java.lang.String getImageClass(java.lang.Object) -> getImageClass
    706:706:int getImageHash(java.lang.Object) -> getImageHash
    222:225:com.facebook.drawee.components.RetryManager getRetryManager() -> getRetryManager
    124:168:void init(java.lang.String,java.lang.Object) -> init
    120:122:void initialize(java.lang.String,java.lang.Object) -> initialize
    655:662:boolean isExpectedDataSource(java.lang.String,com.facebook.datasource.DataSource) -> isExpectedDataSource
    679:688:void logMessageAndFailure(java.lang.String,java.lang.Throwable) -> logMessageAndFailure
    666:676:void logMessageAndImage(java.lang.String,java.lang.Object) -> logMessageAndImage
    360:381:void onAttach() -> onAttach
    440:449:boolean onClick() -> onClick
    385:397:void onDetach() -> onDetach
    599:636:void onFailureInternal(java.lang.String,com.facebook.datasource.DataSource,java.lang.Throwable,boolean) -> onFailureInternal
    728:728:void onImageLoadedFromCacheImmediately(java.lang.String,java.lang.Object) -> onImageLoadedFromCacheImmediately
    537:595:void onNewResultInternal(java.lang.String,com.facebook.datasource.DataSource,java.lang.Object,float,boolean,boolean,boolean) -> onNewResultInternal
    644:652:void onProgressUpdateInternal(java.lang.String,com.facebook.datasource.DataSource,float,boolean) -> onProgressUpdateInternal
    414:424:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    401:410:void onViewportVisibilityHint(boolean) -> onViewportVisibilityHint
    172:183:void release() -> release
    186:208:void releaseFetch() -> releaseFetch
    278:286:void removeControllerListener(com.facebook.drawee.controller.ControllerListener) -> removeControllerListener
    255:256:void setContentDescription(java.lang.String) -> setContentDescription
    347:351:void setControllerOverlay(android.graphics.drawable.Drawable) -> setControllerOverlay
    299:300:void setControllerViewportVisibilityListener(com.facebook.drawee.controller.ControllerViewportVisibilityListener) -> setControllerViewportVisibilityListener
    235:239:void setGestureDetector(com.facebook.drawee.gestures.GestureDetector) -> setGestureDetector
    317:343:void setHierarchy(com.facebook.drawee.interfaces.DraweeHierarchy) -> setHierarchy
    243:244:void setRetainImageOnFailure(boolean) -> setRetainImageOnFailure
    429:429:boolean shouldHandleGesture() -> shouldHandleGesture
    435:435:boolean shouldRetryOnTap() -> shouldRetryOnTap
    453:526:void submitRequest() -> submitRequest
    715:721:java.lang.String toString() -> toString
com.facebook.drawee.controller.AbstractDraweeController$1 -> com.facebook.drawee.controller.AbstractDraweeController$1:
    493:493:void <init>(com.facebook.drawee.controller.AbstractDraweeController,java.lang.String,boolean) -> <init>
    512:513:void onFailureImpl(com.facebook.datasource.DataSource) -> onFailureImpl
    498:508:void onNewResultImpl(com.facebook.datasource.DataSource) -> onNewResultImpl
    517:520:void onProgressUpdate(com.facebook.datasource.DataSource) -> onProgressUpdate
com.facebook.drawee.controller.AbstractDraweeController$InternalForwardingListener -> com.facebook.drawee.controller.AbstractDraweeController$InternalForwardingListener:
    53:53:void <init>() -> <init>
    56:65:com.facebook.drawee.controller.AbstractDraweeController$InternalForwardingListener createInternal(com.facebook.drawee.controller.ControllerListener,com.facebook.drawee.controller.ControllerListener) -> createInternal
com.facebook.drawee.controller.AbstractDraweeControllerBuilder -> com.facebook.drawee.controller.AbstractDraweeControllerBuilder:
    40:73:void <clinit>() -> <clinit>
    77:81:void <init>(android.content.Context,java.util.Set) -> <init>
    33:33:com.facebook.drawee.interfaces.DraweeController build() -> build
    287:295:com.facebook.drawee.controller.AbstractDraweeController build() -> build
    311:323:com.facebook.drawee.controller.AbstractDraweeController buildController() -> buildController
    328:328:java.lang.String generateUniqueControllerId() -> generateUniqueControllerId
    230:230:boolean getAutoPlayAnimations() -> getAutoPlayAnimations
    114:114:java.lang.Object getCallerContext() -> getCallerContext
    268:268:java.lang.String getContentDescription() -> getContentDescription
    448:448:android.content.Context getContext() -> getContext
    243:243:com.facebook.drawee.controller.ControllerListener getControllerListener() -> getControllerListener
    256:256:com.facebook.drawee.controller.ControllerViewportVisibilityListener getControllerViewportVisibilityListener() -> getControllerViewportVisibilityListener
    197:197:com.facebook.common.internal.Supplier getDataSourceSupplier() -> getDataSourceSupplier
    388:388:com.facebook.common.internal.Supplier getDataSourceSupplierForRequest(com.facebook.drawee.interfaces.DraweeController,java.lang.String,java.lang.Object) -> getDataSourceSupplierForRequest
    398:399:com.facebook.common.internal.Supplier getDataSourceSupplierForRequest(com.facebook.drawee.interfaces.DraweeController,java.lang.String,java.lang.Object,com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel) -> getDataSourceSupplierForRequest
    370:382:com.facebook.common.internal.Supplier getFirstAvailableDataSourceSupplier(com.facebook.drawee.interfaces.DraweeController,java.lang.String,java.lang.Object[],boolean) -> getFirstAvailableDataSourceSupplier
    176:176:java.lang.Object[] getFirstAvailableImageRequests() -> getFirstAvailableImageRequests
    126:126:java.lang.Object getImageRequest() -> getImageRequest
    138:138:java.lang.Object getLowResImageRequest() -> getLowResImageRequest
    281:281:com.facebook.drawee.interfaces.DraweeController getOldController() -> getOldController
    219:219:boolean getRetainImageOnFailure() -> getRetainImageOnFailure
    208:208:boolean getTapToRetryEnabled() -> getTapToRetryEnabled
    473:473:com.facebook.drawee.controller.AbstractDraweeControllerBuilder getThis() -> getThis
    85:96:void init() -> init
    415:426:void maybeAttachListeners(com.facebook.drawee.controller.AbstractDraweeController) -> maybeAttachListeners
    439:444:void maybeBuildAndSetGestureDetector(com.facebook.drawee.controller.AbstractDraweeController) -> maybeBuildAndSetGestureDetector
    430:435:void maybeBuildAndSetRetryManager(com.facebook.drawee.controller.AbstractDraweeController) -> maybeBuildAndSetRetryManager
    334:362:com.facebook.common.internal.Supplier obtainDataSourceSupplier(com.facebook.drawee.interfaces.DraweeController,java.lang.String) -> obtainDataSourceSupplier
    100:101:com.facebook.drawee.controller.AbstractDraweeControllerBuilder reset() -> reset
    224:225:com.facebook.drawee.controller.AbstractDraweeControllerBuilder setAutoPlayAnimations(boolean) -> setAutoPlayAnimations
    33:33:com.facebook.drawee.interfaces.SimpleDraweeControllerBuilder setCallerContext(java.lang.Object) -> setCallerContext
    107:108:com.facebook.drawee.controller.AbstractDraweeControllerBuilder setCallerContext(java.lang.Object) -> setCallerContext
    261:262:com.facebook.drawee.controller.AbstractDraweeControllerBuilder setContentDescription(java.lang.String) -> setContentDescription
    236:237:com.facebook.drawee.controller.AbstractDraweeControllerBuilder setControllerListener(com.facebook.drawee.controller.ControllerListener) -> setControllerListener
    249:250:com.facebook.drawee.controller.AbstractDraweeControllerBuilder setControllerViewportVisibilityListener(com.facebook.drawee.controller.ControllerViewportVisibilityListener) -> setControllerViewportVisibilityListener
    185:186:com.facebook.drawee.controller.AbstractDraweeControllerBuilder setDataSourceSupplier(com.facebook.common.internal.Supplier) -> setDataSourceSupplier
    147:147:com.facebook.drawee.controller.AbstractDraweeControllerBuilder setFirstAvailableImageRequests(java.lang.Object[]) -> setFirstAvailableImageRequests
    161:166:com.facebook.drawee.controller.AbstractDraweeControllerBuilder setFirstAvailableImageRequests(java.lang.Object[],boolean) -> setFirstAvailableImageRequests
    119:120:com.facebook.drawee.controller.AbstractDraweeControllerBuilder setImageRequest(java.lang.Object) -> setImageRequest
    131:132:com.facebook.drawee.controller.AbstractDraweeControllerBuilder setLowResImageRequest(java.lang.Object) -> setLowResImageRequest
    33:33:com.facebook.drawee.interfaces.SimpleDraweeControllerBuilder setOldController(com.facebook.drawee.interfaces.DraweeController) -> setOldController
    274:275:com.facebook.drawee.controller.AbstractDraweeControllerBuilder setOldController(com.facebook.drawee.interfaces.DraweeController) -> setOldController
    213:214:com.facebook.drawee.controller.AbstractDraweeControllerBuilder setRetainImageOnFailure(boolean) -> setRetainImageOnFailure
    202:203:com.facebook.drawee.controller.AbstractDraweeControllerBuilder setTapToRetryEnabled(boolean) -> setTapToRetryEnabled
    300:307:void validate() -> validate
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$1 -> com.facebook.drawee.controller.AbstractDraweeControllerBuilder$1:
    41:41:void <init>() -> <init>
    44:47:void onFinalImageSet(java.lang.String,java.lang.Object,android.graphics.drawable.Animatable) -> onFinalImageSet
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$2 -> com.facebook.drawee.controller.AbstractDraweeControllerBuilder$2:
    399:399:void <init>(com.facebook.drawee.controller.AbstractDraweeControllerBuilder,com.facebook.drawee.interfaces.DraweeController,java.lang.String,java.lang.Object,java.lang.Object,com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel) -> <init>
    399:399:java.lang.Object get() -> get
    402:402:com.facebook.datasource.DataSource get() -> get
    408:408:java.lang.String toString() -> toString
com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel -> com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel:
    476:484:void <clinit>() -> <clinit>
    476:476:void <init>(java.lang.String,int) -> <init>
    476:476:com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel valueOf(java.lang.String) -> valueOf
    476:476:com.facebook.drawee.controller.AbstractDraweeControllerBuilder$CacheLevel[] values() -> values
com.facebook.drawee.controller.BaseControllerListener -> com.facebook.drawee.controller.BaseControllerListener:
    18:18:void <clinit>() -> <clinit>
    16:16:void <init>() -> <init>
    24:24:com.facebook.drawee.controller.ControllerListener getNoOpListener() -> getNoOpListener
    48:48:void onFailure(java.lang.String,java.lang.Throwable) -> onFailure
    36:36:void onFinalImageSet(java.lang.String,java.lang.Object,android.graphics.drawable.Animatable) -> onFinalImageSet
    44:44:void onIntermediateImageFailed(java.lang.String,java.lang.Throwable) -> onIntermediateImageFailed
    40:40:void onIntermediateImageSet(java.lang.String,java.lang.Object) -> onIntermediateImageSet
    52:52:void onRelease(java.lang.String) -> onRelease
    29:29:void onSubmit(java.lang.String,java.lang.Object) -> onSubmit
com.facebook.drawee.controller.ForwardingControllerListener -> com.facebook.drawee.controller.ForwardingControllerListener:
    25:28:void <init>() -> <init>
    49:51:void addListener(com.facebook.drawee.controller.ControllerListener) -> addListener
    60:62:void clearListeners() -> clearListeners
    31:31:com.facebook.drawee.controller.ForwardingControllerListener create() -> create
    36:38:com.facebook.drawee.controller.ForwardingControllerListener of(com.facebook.drawee.controller.ControllerListener) -> of
    43:46:com.facebook.drawee.controller.ForwardingControllerListener of(com.facebook.drawee.controller.ControllerListener,com.facebook.drawee.controller.ControllerListener) -> of
    64:66:void onException(java.lang.String,java.lang.Throwable) -> onException
    136:149:void onFailure(java.lang.String,java.lang.Throwable) -> onFailure
    88:101:void onFinalImageSet(java.lang.String,java.lang.Object,android.graphics.drawable.Animatable) -> onFinalImageSet
    121:133:void onIntermediateImageFailed(java.lang.String,java.lang.Throwable) -> onIntermediateImageFailed
    105:117:void onIntermediateImageSet(java.lang.String,java.lang.Object) -> onIntermediateImageSet
    152:165:void onRelease(java.lang.String) -> onRelease
    69:82:void onSubmit(java.lang.String,java.lang.Object) -> onSubmit
    53:58:void removeListener(com.facebook.drawee.controller.ControllerListener) -> removeListener
com.facebook.drawee.debug.DebugControllerOverlayDrawable -> com.facebook.drawee.debug.DebugControllerOverlayDrawable:
    70:89:void <init>() -> <init>
    249:255:void addDebugText(android.graphics.Canvas,java.lang.String,java.lang.Object[]) -> addDebugText
    262:314:int determineOverlayColor(int,int,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> determineOverlayColor
    171:215:void draw(android.graphics.Canvas) -> draw
    227:227:int getOpacity() -> getOpacity
    161:167:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    323:325:void onFinalImageSet(long) -> onFinalImageSet
    234:246:void prepareDebugTextParameters(android.graphics.Rect,int,int) -> prepareDebugTextParameters
    92:102:void reset() -> reset
    219:219:void setAlpha(int) -> setAlpha
    133:136:void setAnimationInfo(int,int) -> setAnimationInfo
    223:223:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    117:119:void setControllerId(java.lang.String) -> setControllerId
    127:130:void setDimensions(int,int) -> setDimensions
    318:319:void setFinalImageTimeMs(long) -> setFinalImageTimeMs
    152:153:void setImageFormat(java.lang.String) -> setImageFormat
    122:124:void setImageId(java.lang.String) -> setImageId
    148:149:void setImageSize(int) -> setImageSize
    139:141:void setOrigin(java.lang.String) -> setOrigin
    156:157:void setScaleType(com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setScaleType
    112:114:void setTextGravity(int) -> setTextGravity
com.facebook.drawee.debug.listener.ImageLoadingTimeControllerListener -> com.facebook.drawee.debug.listener.ImageLoadingTimeControllerListener:
    19:28:void <init>(com.facebook.drawee.debug.listener.ImageLoadingTimeListener) -> <init>
    38:42:void onFinalImageSet(java.lang.String,java.lang.Object,android.graphics.drawable.Animatable) -> onFinalImageSet
    32:33:void onSubmit(java.lang.String,java.lang.Object) -> onSubmit
com.facebook.drawee.drawable.ArrayDrawable -> com.facebook.drawee.drawable.ArrayDrawable:
    33:60:void <init>(android.graphics.drawable.Drawable[]) -> <init>
    303:303:com.facebook.drawee.drawable.DrawableParent createDrawableParentForIndex(int) -> createDrawableParentForIndex
    179:185:void draw(android.graphics.Canvas) -> draw
    77:79:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    294:299:com.facebook.drawee.drawable.DrawableParent getDrawableParentForIndex(int) -> getDrawableParentForIndex
    120:127:int getIntrinsicHeight() -> getIntrinsicHeight
    108:115:int getIntrinsicWidth() -> getIntrinsicWidth
    67:67:int getNumberOfLayers() -> getNumberOfLayers
    221:231:int getOpacity() -> getOpacity
    189:204:boolean getPadding(android.graphics.Rect) -> getPadding
    358:363:void getRootBounds(android.graphics.RectF) -> getRootBounds
    349:354:void getTransform(android.graphics.Matrix) -> getTransform
    322:323:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    142:150:boolean isStateful() -> isStateful
    209:216:android.graphics.drawable.Drawable mutate() -> mutate
    132:138:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    167:174:boolean onLevelChange(int) -> onLevelChange
    155:162:boolean onStateChange(int[]) -> onStateChange
    327:328:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    236:243:void setAlpha(int) -> setAlpha
    247:254:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    258:265:void setDither(boolean) -> setDither
    85:102:android.graphics.drawable.Drawable setDrawable(int,android.graphics.drawable.Drawable) -> setDrawable
    269:276:void setFilterBitmap(boolean) -> setFilterBitmap
    368:374:void setHotspot(float,float) -> setHotspot
    340:341:void setTransformCallback(com.facebook.drawee.drawable.TransformCallback) -> setTransformCallback
    280:287:boolean setVisible(boolean,boolean) -> setVisible
    332:333:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
com.facebook.drawee.drawable.ArrayDrawable$1 -> com.facebook.drawee.drawable.ArrayDrawable$1:
    303:303:void <init>(com.facebook.drawee.drawable.ArrayDrawable,int) -> <init>
    311:311:android.graphics.drawable.Drawable getDrawable() -> getDrawable
    306:306:android.graphics.drawable.Drawable setDrawable(android.graphics.drawable.Drawable) -> setDrawable
com.facebook.drawee.drawable.AutoRotateDrawable -> com.facebook.drawee.drawable.AutoRotateDrawable:
    44:45:void <init>(android.graphics.drawable.Drawable,int) -> <init>
    30:58:void <init>(android.graphics.drawable.Drawable,int,boolean) -> <init>
    20:20:android.graphics.drawable.Drawable cloneDrawable() -> cloneDrawable
    106:107:com.facebook.drawee.drawable.AutoRotateDrawable cloneDrawable() -> cloneDrawable
    80:95:void draw(android.graphics.Canvas) -> draw
    128:128:int getIncrement() -> getIncrement
    64:68:void reset() -> reset
    99:102:void run() -> run
    121:125:void scheduleNextFrame() -> scheduleNextFrame
    75:76:void setClockwise(boolean) -> setClockwise
com.facebook.drawee.drawable.DrawableProperties -> com.facebook.drawee.drawable.DrawableProperties:
    18:26:void <init>() -> <init>
    47:62:void applyTo(android.graphics.drawable.Drawable) -> applyTo
    29:30:void setAlpha(int) -> setAlpha
    33:35:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    38:39:void setDither(boolean) -> setDither
    42:43:void setFilterBitmap(boolean) -> setFilterBitmap
com.facebook.drawee.drawable.DrawableUtils -> com.facebook.drawee.drawable.DrawableUtils:
    17:17:void <init>() -> <init>
    25:30:android.graphics.drawable.Drawable cloneDrawable(android.graphics.drawable.Drawable) -> cloneDrawable
    40:49:void copyProperties(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> copyProperties
    109:115:int getOpacityFromColor(int) -> getOpacityFromColor
    91:100:int multiplyColorAlpha(int,int) -> multiplyColorAlpha
    76:82:void setCallbacks(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable$Callback,com.facebook.drawee.drawable.TransformCallback) -> setCallbacks
    59:63:void setDrawableProperties(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.DrawableProperties) -> setDrawableProperties
com.facebook.drawee.drawable.FadeDrawable -> com.facebook.drawee.drawable.FadeDrawable:
    85:86:void <init>(android.graphics.drawable.Drawable[]) -> <init>
    97:108:void <init>(android.graphics.drawable.Drawable[],boolean) -> <init>
    121:122:void beginBatchMode() -> beginBatchMode
    275:312:void draw(android.graphics.Canvas) -> draw
    315:321:void drawDrawableWithAlpha(android.graphics.Canvas,android.graphics.drawable.Drawable,int) -> drawDrawableWithAlpha
    128:130:void endBatchMode() -> endBatchMode
    196:199:void fadeInAllLayers() -> fadeInAllLayers
    177:180:void fadeInLayer(int) -> fadeInLayer
    205:208:void fadeOutAllLayers() -> fadeOutAllLayers
    187:190:void fadeOutLayer(int) -> fadeOutLayer
    215:219:void fadeToLayer(int) -> fadeToLayer
    228:232:void fadeUpToLayer(int) -> fadeUpToLayer
    238:243:void finishTransitionImmediately() -> finishTransitionImmediately
    332:332:int getAlpha() -> getAlpha
    341:341:long getCurrentTimeMs() -> getCurrentTimeMs
    148:148:int getTransitionDuration() -> getTransitionDuration
    351:351:int getTransitionState() -> getTransitionState
    112:115:void invalidateSelf() -> invalidateSelf
    355:355:boolean isLayerOn(int) -> isLayerOn
    168:170:void reset() -> reset
    155:162:void resetInternal() -> resetInternal
    325:329:void setAlpha(int) -> setAlpha
    136:141:void setTransitionDuration(int) -> setTransitionDuration
    251:270:boolean updateAlphas(float) -> updateAlphas
com.facebook.drawee.drawable.ForwardingDrawable -> com.facebook.drawee.drawable.ForwardingDrawable:
    44:44:void <clinit>() -> <clinit>
    36:54:void <init>(android.graphics.drawable.Drawable) -> <init>
    184:187:void draw(android.graphics.Canvas) -> draw
    148:152:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    227:227:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    239:239:android.graphics.drawable.Drawable getDrawable() -> getDrawable
    200:204:int getIntrinsicHeight() -> getIntrinsicHeight
    191:195:int getIntrinsicWidth() -> getIntrinsicWidth
    90:94:int getOpacity() -> getOpacity
    209:213:boolean getPadding(android.graphics.Rect) -> getPadding
    269:274:void getParentTransform(android.graphics.Matrix) -> getParentTransform
    283:288:void getRootBounds(android.graphics.RectF) -> getRootBounds
    278:279:void getTransform(android.graphics.Matrix) -> getTransform
    296:301:void getTransformedBounds(android.graphics.RectF) -> getTransformedBounds
    246:247:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    157:161:boolean isStateful() -> isStateful
    218:222:android.graphics.drawable.Drawable mutate() -> mutate
    141:144:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    175:179:boolean onLevelChange(int) -> onLevelChange
    166:170:boolean onStateChange(int[]) -> onStateChange
    251:252:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    99:103:void setAlpha(int) -> setAlpha
    107:111:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    65:67:android.graphics.drawable.Drawable setCurrent(android.graphics.drawable.Drawable) -> setCurrent
    78:85:android.graphics.drawable.Drawable setCurrentWithoutInvalidate(android.graphics.drawable.Drawable) -> setCurrentWithoutInvalidate
    115:119:void setDither(boolean) -> setDither
    234:234:android.graphics.drawable.Drawable setDrawable(android.graphics.drawable.Drawable) -> setDrawable
    123:127:void setFilterBitmap(boolean) -> setFilterBitmap
    306:309:void setHotspot(float,float) -> setHotspot
    263:264:void setTransformCallback(com.facebook.drawee.drawable.TransformCallback) -> setTransformCallback
    131:136:boolean setVisible(boolean,boolean) -> setVisible
    256:257:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
com.facebook.drawee.drawable.MatrixDrawable -> com.facebook.drawee.drawable.MatrixDrawable:
    30:41:void <init>(android.graphics.drawable.Drawable,android.graphics.Matrix) -> <init>
    101:116:void configureBounds() -> configureBounds
    91:95:void configureBoundsIfUnderlyingChanged() -> configureBoundsIfUnderlyingChanged
    71:82:void draw(android.graphics.Canvas) -> draw
    56:56:android.graphics.Matrix getMatrix() -> getMatrix
    124:128:void getTransform(android.graphics.Matrix) -> getTransform
    86:88:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    45:48:android.graphics.drawable.Drawable setCurrent(android.graphics.drawable.Drawable) -> setCurrent
    64:67:void setMatrix(android.graphics.Matrix) -> setMatrix
com.facebook.drawee.drawable.OrientedDrawable -> com.facebook.drawee.drawable.OrientedDrawable:
    38:39:void <init>(android.graphics.drawable.Drawable,int) -> <init>
    29:54:void <init>(android.graphics.drawable.Drawable,int,int) -> <init>
    58:68:void draw(android.graphics.Canvas) -> draw
    83:88:int getIntrinsicHeight() -> getIntrinsicHeight
    72:77:int getIntrinsicWidth() -> getIntrinsicWidth
    135:139:void getTransform(android.graphics.Matrix) -> getTransform
    94:131:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
com.facebook.drawee.drawable.ProgressBarDrawable -> com.facebook.drawee.drawable.ProgressBarDrawable:
    21:33:void <init>() -> <init>
    163:172:android.graphics.drawable.Drawable cloneDrawable() -> cloneDrawable
    149:159:void draw(android.graphics.Canvas) -> draw
    194:204:void drawBar(android.graphics.Canvas,int) -> drawBar
    176:182:void drawHorizontalBar(android.graphics.Canvas,int,int) -> drawHorizontalBar
    185:191:void drawVerticalBar(android.graphics.Canvas,int,int) -> drawVerticalBar
    58:58:int getBackgroundColor() -> getBackgroundColor
    86:86:int getBarWidth() -> getBarWidth
    45:45:int getColor() -> getColor
    96:96:boolean getHideWhenZero() -> getHideWhenZero
    122:122:boolean getIsVertical() -> getIsVertical
    144:144:int getOpacity() -> getOpacity
    72:73:boolean getPadding(android.graphics.Rect) -> getPadding
    109:109:int getRadius() -> getRadius
    127:129:boolean onLevelChange(int) -> onLevelChange
    134:135:void setAlpha(int) -> setAlpha
    50:54:void setBackgroundColor(int) -> setBackgroundColor
    78:82:void setBarWidth(int) -> setBarWidth
    37:41:void setColor(int) -> setColor
    139:140:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    91:92:void setHideWhenZero(boolean) -> setHideWhenZero
    114:118:void setIsVertical(boolean) -> setIsVertical
    63:67:void setPadding(int) -> setPadding
    101:105:void setRadius(int) -> setRadius
com.facebook.drawee.drawable.RoundedBitmapDrawable -> com.facebook.drawee.drawable.RoundedBitmapDrawable:
    24:38:void <init>(android.content.res.Resources,android.graphics.Bitmap,android.graphics.Paint) -> <init>
    41:42:void <init>(android.content.res.Resources,android.graphics.Bitmap) -> <init>
    46:71:void draw(android.graphics.Canvas) -> draw
    95:95:com.facebook.drawee.drawable.RoundedBitmapDrawable fromBitmapDrawable(android.content.res.Resources,android.graphics.drawable.BitmapDrawable) -> fromBitmapDrawable
    123:123:android.graphics.Paint getPaint() -> getPaint
    108:114:void setAlpha(int) -> setAlpha
    118:120:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    103:103:boolean shouldRound() -> shouldRound
    74:83:void updatePaint() -> updatePaint
com.facebook.drawee.drawable.RoundedColorDrawable -> com.facebook.drawee.drawable.RoundedColorDrawable:
    27:49:void <init>(int) -> <init>
    69:71:void <init>(float[],int) -> <init>
    80:82:void <init>(float,int) -> <init>
    92:101:void draw(android.graphics.Canvas) -> draw
    58:58:com.facebook.drawee.drawable.RoundedColorDrawable fromColorDrawable(android.graphics.drawable.ColorDrawable) -> fromColorDrawable
    263:263:int getAlpha() -> getAlpha
    199:199:int getBorderColor() -> getBorderColor
    205:205:float getBorderWidth() -> getBorderWidth
    174:174:int getColor() -> getColor
    284:284:int getOpacity() -> getOpacity
    220:220:float getPadding() -> getPadding
    142:142:float[] getRadii() -> getRadii
    240:240:boolean getScaleDownInsideBorders() -> getScaleDownInsideBorders
    118:118:boolean isCircle() -> isCircle
    86:88:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    250:254:void setAlpha(int) -> setAlpha
    184:194:void setBorder(int,float) -> setBorder
    110:113:void setCircle(boolean) -> setCircle
    163:167:void setColor(int) -> setColor
    274:274:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    210:215:void setPadding(float) -> setPadding
    129:137:void setRadii(float[]) -> setRadii
    152:156:void setRadius(float) -> setRadius
    230:235:void setScaleDownInsideBorders(boolean) -> setScaleDownInsideBorders
    288:321:void updatePath() -> updatePath
com.facebook.drawee.drawable.RoundedCornersDrawable -> com.facebook.drawee.drawable.RoundedCornersDrawable:
    43:67:void <init>(android.graphics.drawable.Drawable) -> <init>
    245:316:void draw(android.graphics.Canvas) -> draw
    165:165:int getBorderColor() -> getBorderColor
    171:171:float getBorderWidth() -> getBorderWidth
    146:146:int getOverlayColor() -> getOverlayColor
    184:184:float getPadding() -> getPadding
    131:131:float[] getRadii() -> getRadii
    202:202:boolean getScaleDownInsideBorders() -> getScaleDownInsideBorders
    94:94:boolean isCircle() -> isCircle
    207:209:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    156:160:void setBorder(int,float) -> setBorder
    86:89:void setCircle(boolean) -> setCircle
    140:142:void setOverlayColor(int) -> setOverlayColor
    176:179:void setPadding(float) -> setPadding
    118:126:void setRadii(float[]) -> setRadii
    104:107:void setRadius(float) -> setRadius
    194:197:void setScaleDownInsideBorders(boolean) -> setScaleDownInsideBorders
    75:77:void setType(com.facebook.drawee.drawable.RoundedCornersDrawable$Type) -> setType
    212:241:void updatePath() -> updatePath
com.facebook.drawee.drawable.RoundedCornersDrawable$1 -> com.facebook.drawee.drawable.RoundedCornersDrawable$1:
    246:246:void <clinit>() -> <clinit>
com.facebook.drawee.drawable.RoundedCornersDrawable$Type -> com.facebook.drawee.drawable.RoundedCornersDrawable$Type:
    28:40:void <clinit>() -> <clinit>
    28:28:void <init>(java.lang.String,int) -> <init>
    28:28:com.facebook.drawee.drawable.RoundedCornersDrawable$Type valueOf(java.lang.String) -> valueOf
    28:28:com.facebook.drawee.drawable.RoundedCornersDrawable$Type[] values() -> values
com.facebook.drawee.drawable.RoundedDrawable -> com.facebook.drawee.drawable.RoundedDrawable:
    37:73:void <init>(android.graphics.drawable.Drawable) -> <init>
    361:362:void clearColorFilter() -> clearColorFilter
    377:384:void draw(android.graphics.Canvas) -> draw
    367:367:int getAlpha() -> getAlpha
    156:156:int getBorderColor() -> getBorderColor
    162:162:float getBorderWidth() -> getBorderWidth
    356:356:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    332:332:int getIntrinsicHeight() -> getIntrinsicHeight
    327:327:int getIntrinsicWidth() -> getIntrinsicWidth
    337:337:int getOpacity() -> getOpacity
    181:181:float getPadding() -> getPadding
    135:135:float[] getRadii() -> getRadii
    201:201:boolean getScaleDownInsideBorders() -> getScaleDownInsideBorders
    92:92:boolean isCircle() -> isCircle
    322:323:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    372:373:void setAlpha(int) -> setAlpha
    145:151:void setBorder(int,float) -> setBorder
    84:87:void setCircle(boolean) -> setCircle
    343:344:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    349:350:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    171:176:void setPadding(float) -> setPadding
    117:130:void setRadii(float[]) -> setRadii
    102:107:void setRadius(float) -> setRadius
    191:196:void setScaleDownInsideBorders(boolean) -> setScaleDownInsideBorders
    207:208:void setTransformCallback(com.facebook.drawee.drawable.TransformCallback) -> setTransformCallback
    317:317:boolean shouldRound() -> shouldRound
    271:310:void updatePath() -> updatePath
    211:268:void updateTransform() -> updateTransform
com.facebook.drawee.drawable.RoundedNinePatchDrawable -> com.facebook.drawee.drawable.RoundedNinePatchDrawable:
    16:17:void <init>(android.graphics.drawable.NinePatchDrawable) -> <init>
    21:38:void draw(android.graphics.Canvas) -> draw
com.facebook.drawee.drawable.ScaleTypeDrawable -> com.facebook.drawee.drawable.ScaleTypeDrawable:
    34:55:void <init>(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> <init>
    34:68:void <init>(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType,android.graphics.PointF) -> <init>
    172:211:void configureBounds() -> configureBounds
    153:165:void configureBoundsIfUnderlyingChanged() -> configureBoundsIfUnderlyingChanged
    134:145:void draw(android.graphics.Canvas) -> draw
    108:108:android.graphics.PointF getFocusPoint() -> getFocusPoint
    83:83:com.facebook.drawee.drawable.ScalingUtils$ScaleType getScaleType() -> getScaleType
    219:226:void getTransform(android.graphics.Matrix) -> getTransform
    149:150:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    72:75:android.graphics.drawable.Drawable setCurrent(android.graphics.drawable.Drawable) -> setCurrent
    119:130:void setFocusPoint(android.graphics.PointF) -> setFocusPoint
    91:99:void setScaleType(com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setScaleType
com.facebook.drawee.drawable.ScalingUtils -> com.facebook.drawee.drawable.ScalingUtils:
    19:19:void <init>() -> <init>
    114:133:com.facebook.drawee.drawable.ScaleTypeDrawable getActiveScaleTypeDrawable(android.graphics.drawable.Drawable) -> getActiveScaleTypeDrawable
com.facebook.drawee.drawable.ScalingUtils$AbstractScaleType -> com.facebook.drawee.drawable.ScalingUtils$AbstractScaleType:
    139:139:void <init>() -> <init>
    149:152:android.graphics.Matrix getTransform(android.graphics.Matrix,android.graphics.Rect,int,int,float,float) -> getTransform
com.facebook.drawee.drawable.ScalingUtils$InterpolatingScaleType -> com.facebook.drawee.drawable.ScalingUtils$InterpolatingScaleType:
    448:467:void <init>(com.facebook.drawee.drawable.ScalingUtils$ScaleType,com.facebook.drawee.drawable.ScalingUtils$ScaleType,android.graphics.Rect,android.graphics.Rect,android.graphics.PointF,android.graphics.PointF) -> <init>
    474:475:void <init>(com.facebook.drawee.drawable.ScalingUtils$ScaleType,com.facebook.drawee.drawable.ScalingUtils$ScaleType,android.graphics.Rect,android.graphics.Rect) -> <init>
    478:479:void <init>(com.facebook.drawee.drawable.ScalingUtils$ScaleType,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> <init>
    490:490:android.graphics.Rect getBoundsFrom() -> getBoundsFrom
    494:494:android.graphics.Rect getBoundsTo() -> getBoundsTo
    498:498:android.graphics.PointF getFocusPointFrom() -> getFocusPointFrom
    502:502:android.graphics.PointF getFocusPointTo() -> getFocusPointTo
    482:482:com.facebook.drawee.drawable.ScalingUtils$ScaleType getScaleTypeFrom() -> getScaleTypeFrom
    486:486:com.facebook.drawee.drawable.ScalingUtils$ScaleType getScaleTypeTo() -> getScaleTypeTo
    525:525:java.lang.Object getState() -> getState
    536:561:android.graphics.Matrix getTransform(android.graphics.Matrix,android.graphics.Rect,int,int,float,float) -> getTransform
    520:520:float getValue() -> getValue
    513:514:void setValue(float) -> setValue
    566:571:java.lang.String toString() -> toString
com.facebook.drawee.drawable.ScalingUtils$ScaleType -> com.facebook.drawee.drawable.ScalingUtils$ScaleType:
    35:90:void <clinit>() -> <clinit>
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeCenter -> com.facebook.drawee.drawable.ScalingUtils$ScaleTypeCenter:
    302:302:void <clinit>() -> <clinit>
    300:300:void <init>() -> <init>
    314:317:void getTransformImpl(android.graphics.Matrix,android.graphics.Rect,int,int,float,float,float,float) -> getTransformImpl
    321:321:java.lang.String toString() -> toString
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeCenterCrop -> com.facebook.drawee.drawable.ScalingUtils$ScaleTypeCenterCrop:
    354:354:void <clinit>() -> <clinit>
    352:352:void <init>() -> <init>
    367:378:void getTransformImpl(android.graphics.Matrix,android.graphics.Rect,int,int,float,float,float,float) -> getTransformImpl
    382:382:java.lang.String toString() -> toString
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeCenterInside -> com.facebook.drawee.drawable.ScalingUtils$ScaleTypeCenterInside:
    327:327:void <clinit>() -> <clinit>
    325:325:void <init>() -> <init>
    339:344:void getTransformImpl(android.graphics.Matrix,android.graphics.Rect,int,int,float,float,float,float) -> getTransformImpl
    348:348:java.lang.String toString() -> toString
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitBottomStart -> com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitBottomStart:
    221:221:void <clinit>() -> <clinit>
    219:219:void <init>() -> <init>
    233:238:void getTransformImpl(android.graphics.Matrix,android.graphics.Rect,int,int,float,float,float,float) -> getTransformImpl
    242:242:java.lang.String toString() -> toString
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitCenter -> com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitCenter:
    248:248:void <clinit>() -> <clinit>
    246:246:void <init>() -> <init>
    260:265:void getTransformImpl(android.graphics.Matrix,android.graphics.Rect,int,int,float,float,float,float) -> getTransformImpl
    269:269:java.lang.String toString() -> toString
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitEnd -> com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitEnd:
    275:275:void <clinit>() -> <clinit>
    273:273:void <init>() -> <init>
    287:292:void getTransformImpl(android.graphics.Matrix,android.graphics.Rect,int,int,float,float,float,float) -> getTransformImpl
    296:296:java.lang.String toString() -> toString
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitStart -> com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitStart:
    194:194:void <clinit>() -> <clinit>
    192:192:void <init>() -> <init>
    206:211:void getTransformImpl(android.graphics.Matrix,android.graphics.Rect,int,int,float,float,float,float) -> getTransformImpl
    215:215:java.lang.String toString() -> toString
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitXY -> com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFitXY:
    168:168:void <clinit>() -> <clinit>
    166:166:void <init>() -> <init>
    180:184:void getTransformImpl(android.graphics.Matrix,android.graphics.Rect,int,int,float,float,float,float) -> getTransformImpl
    188:188:java.lang.String toString() -> toString
com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFocusCrop -> com.facebook.drawee.drawable.ScalingUtils$ScaleTypeFocusCrop:
    388:388:void <clinit>() -> <clinit>
    386:386:void <init>() -> <init>
    401:414:void getTransformImpl(android.graphics.Matrix,android.graphics.Rect,int,int,float,float,float,float) -> getTransformImpl
    418:418:java.lang.String toString() -> toString
com.facebook.drawee.generic.GenericDraweeHierarchy -> com.facebook.drawee.generic.GenericDraweeHierarchy:
    93:164:void <init>(com.facebook.drawee.generic.GenericDraweeHierarchyBuilder) -> <init>
    172:174:android.graphics.drawable.Drawable buildActualImageBranch(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType,android.graphics.PointF,android.graphics.ColorFilter) -> buildActualImageBranch
    181:183:android.graphics.drawable.Drawable buildBranch(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> buildBranch
    213:216:void fadeInLayer(int) -> fadeInLayer
    205:210:void fadeOutBranches() -> fadeOutBranches
    219:222:void fadeOutLayer(int) -> fadeOutLayer
    411:412:void getActualImageBounds(android.graphics.RectF) -> getActualImageBounds
    398:401:com.facebook.drawee.drawable.ScalingUtils$ScaleType getActualImageScaleType() -> getActualImageScaleType
    382:382:int getFadeDuration() -> getFadeDuration
    327:334:com.facebook.drawee.drawable.DrawableParent getParentDrawableAtIndex(int) -> getParentDrawableAtIndex
    584:584:com.facebook.drawee.generic.RoundingParams getRoundingParams() -> getRoundingParams
    357:361:com.facebook.drawee.drawable.ScaleTypeDrawable getScaleTypeDrawableAtIndex(int) -> getScaleTypeDrawableAtIndex
    250:250:android.graphics.drawable.Drawable getTopLevelDrawable() -> getTopLevelDrawable
    589:589:boolean hasImage() -> hasImage
    429:429:boolean hasPlaceholderImage() -> hasPlaceholderImage
    369:370:boolean hasScaleTypeDrawableAtIndex(int) -> hasScaleTypeDrawableAtIndex
    255:257:void reset() -> reset
    187:188:void resetActualImages() -> resetActualImages
    191:202:void resetFade() -> resetFade
    406:407:void setActualImageColorFilter(android.graphics.ColorFilter) -> setActualImageColorFilter
    387:389:void setActualImageFocusPoint(android.graphics.PointF) -> setActualImageFocusPoint
    393:395:void setActualImageScaleType(com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setActualImageScaleType
    549:550:void setBackgroundImage(android.graphics.drawable.Drawable) -> setBackgroundImage
    342:348:void setChildDrawableAtIndex(int,android.graphics.drawable.Drawable) -> setChildDrawableAtIndex
    313:314:void setControllerOverlay(android.graphics.drawable.Drawable) -> setControllerOverlay
    377:378:void setFadeDuration(int) -> setFadeDuration
    289:297:void setFailure(java.lang.Throwable) -> setFailure
    459:460:void setFailureImage(android.graphics.drawable.Drawable) -> setFailureImage
    464:466:void setFailureImage(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setFailureImage
    474:475:void setFailureImage(int) -> setFailureImage
    484:485:void setFailureImage(int,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setFailureImage
    261:272:void setImage(android.graphics.drawable.Drawable,float,boolean) -> setImage
    561:565:void setOverlayImage(int,android.graphics.drawable.Drawable) -> setOverlayImage
    569:570:void setOverlayImage(android.graphics.drawable.Drawable) -> setOverlayImage
    416:417:void setPlaceholderImage(android.graphics.drawable.Drawable) -> setPlaceholderImage
    421:423:void setPlaceholderImage(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setPlaceholderImage
    444:445:void setPlaceholderImage(int) -> setPlaceholderImage
    454:455:void setPlaceholderImage(int,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setPlaceholderImage
    434:436:void setPlaceholderImageFocusPoint(android.graphics.PointF) -> setPlaceholderImageFocusPoint
    225:244:void setProgress(float) -> setProgress
    276:285:void setProgress(float,boolean) -> setProgress
    519:520:void setProgressBarImage(android.graphics.drawable.Drawable) -> setProgressBarImage
    524:526:void setProgressBarImage(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setProgressBarImage
    534:535:void setProgressBarImage(int) -> setProgressBarImage
    544:545:void setProgressBarImage(int,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setProgressBarImage
    301:309:void setRetry(java.lang.Throwable) -> setRetry
    489:490:void setRetryImage(android.graphics.drawable.Drawable) -> setRetryImage
    494:496:void setRetryImage(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setRetryImage
    504:505:void setRetryImage(int) -> setRetryImage
    514:515:void setRetryImage(int,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setRetryImage
    574:579:void setRoundingParams(com.facebook.drawee.generic.RoundingParams) -> setRoundingParams
com.facebook.drawee.generic.GenericDraweeHierarchyBuilder -> com.facebook.drawee.generic.GenericDraweeHierarchyBuilder:
    34:36:void <clinit>() -> <clinit>
    68:71:void <init>(android.content.res.Resources) -> <init>
    643:644:com.facebook.drawee.generic.GenericDraweeHierarchy build() -> build
    531:531:android.graphics.ColorFilter getActualImageColorFilter() -> getActualImageColorFilter
    513:513:android.graphics.PointF getActualImageFocusPoint() -> getActualImageFocusPoint
    490:490:com.facebook.drawee.drawable.ScalingUtils$ScaleType getActualImageScaleType() -> getActualImageScaleType
    549:549:android.graphics.drawable.Drawable getBackground() -> getBackground
    166:166:float getDesiredAspectRatio() -> getDesiredAspectRatio
    145:145:int getFadeDuration() -> getFadeDuration
    347:347:android.graphics.drawable.Drawable getFailureImage() -> getFailureImage
    366:366:com.facebook.drawee.drawable.ScalingUtils$ScaleType getFailureImageScaleType() -> getFailureImageScaleType
    585:585:java.util.List getOverlays() -> getOverlays
    195:195:android.graphics.drawable.Drawable getPlaceholderImage() -> getPlaceholderImage
    214:214:com.facebook.drawee.drawable.ScalingUtils$ScaleType getPlaceholderImageScaleType() -> getPlaceholderImageScaleType
    609:609:android.graphics.drawable.Drawable getPressedStateOverlay() -> getPressedStateOverlay
    423:423:android.graphics.drawable.Drawable getProgressBarImage() -> getProgressBarImage
    442:442:com.facebook.drawee.drawable.ScalingUtils$ScaleType getProgressBarImageScaleType() -> getProgressBarImageScaleType
    125:125:android.content.res.Resources getResources() -> getResources
    271:271:android.graphics.drawable.Drawable getRetryImage() -> getRetryImage
    290:290:com.facebook.drawee.drawable.ScalingUtils$ScaleType getRetryImageScaleType() -> getRetryImageScaleType
    628:628:com.facebook.drawee.generic.RoundingParams getRoundingParams() -> getRoundingParams
    81:107:void init() -> init
    74:74:com.facebook.drawee.generic.GenericDraweeHierarchyBuilder newInstance(android.content.res.Resources) -> newInstance
    115:116:com.facebook.drawee.generic.GenericDraweeHierarchyBuilder reset() -> reset
    523:524:com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setActualImageColorFilter(android.graphics.ColorFilter) -> setActualImageColorFilter
    505:506:com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setActualImageFocusPoint(android.graphics.PointF) -> setActualImageFocusPoint
    483:485:com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setActualImageScaleType(com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setActualImageScaleType
    541:542:com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setBackground(android.graphics.drawable.Drawable) -> setBackground
    158:159:com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setDesiredAspectRatio(float) -> setDesiredAspectRatio
    137:138:com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setFadeDuration(int) -> setFadeDuration
    328:329:com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setFailureImage(android.graphics.drawable.Drawable) -> setFailureImage
    339:340:com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setFailureImage(int) -> setFailureImage
    378:380:com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setFailureImage(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setFailureImage
    392:394:com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setFailureImage(int,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setFailureImage
    360:361:com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setFailureImageScaleType(com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setFailureImageScaleType
    573:578:com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setOverlay(android.graphics.drawable.Drawable) -> setOverlay
    562:563:com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setOverlays(java.util.List) -> setOverlays
    176:177:com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setPlaceholderImage(android.graphics.drawable.Drawable) -> setPlaceholderImage
    187:188:com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setPlaceholderImage(int) -> setPlaceholderImage
    226:228:com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setPlaceholderImage(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setPlaceholderImage
    240:242:com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setPlaceholderImage(int,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setPlaceholderImage
    208:209:com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setPlaceholderImageScaleType(com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setPlaceholderImageScaleType
    595:602:com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setPressedStateOverlay(android.graphics.drawable.Drawable) -> setPressedStateOverlay
    404:405:com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setProgressBarImage(android.graphics.drawable.Drawable) -> setProgressBarImage
    415:416:com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setProgressBarImage(int) -> setProgressBarImage
    454:456:com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setProgressBarImage(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setProgressBarImage
    468:470:com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setProgressBarImage(int,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setProgressBarImage
    436:437:com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setProgressBarImageScaleType(com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setProgressBarImageScaleType
    252:253:com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setRetryImage(android.graphics.drawable.Drawable) -> setRetryImage
    263:264:com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setRetryImage(int) -> setRetryImage
    302:304:com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setRetryImage(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setRetryImage
    316:318:com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setRetryImage(int,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setRetryImage
    284:285:com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setRetryImageScaleType(com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setRetryImageScaleType
    619:620:com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setRoundingParams(com.facebook.drawee.generic.RoundingParams) -> setRoundingParams
    632:637:void validate() -> validate
com.facebook.drawee.generic.GenericDraweeHierarchyInflater -> com.facebook.drawee.generic.GenericDraweeHierarchyInflater:
    61:61:void <init>() -> <init>
    267:268:android.graphics.drawable.Drawable getDrawable(android.content.Context,android.content.res.TypedArray,int) -> getDrawable
    256:259:com.facebook.drawee.generic.RoundingParams getRoundingParams(com.facebook.drawee.generic.GenericDraweeHierarchyBuilder) -> getRoundingParams
    279:302:com.facebook.drawee.drawable.ScalingUtils$ScaleType getScaleTypeFromXml(android.content.res.TypedArray,int) -> getScaleTypeFromXml
    78:87:com.facebook.drawee.generic.GenericDraweeHierarchyBuilder inflateBuilder(android.content.Context,android.util.AttributeSet) -> inflateBuilder
    69:69:com.facebook.drawee.generic.GenericDraweeHierarchy inflateHierarchy(android.content.Context,android.util.AttributeSet) -> inflateHierarchy
    106:251:com.facebook.drawee.generic.GenericDraweeHierarchyBuilder updateBuilder(com.facebook.drawee.generic.GenericDraweeHierarchyBuilder,android.content.Context,android.util.AttributeSet) -> updateBuilder
com.facebook.drawee.generic.RootDrawable -> com.facebook.drawee.generic.RootDrawable:
    38:47:void <init>(android.graphics.drawable.Drawable) -> <init>
    75:86:void draw(android.graphics.Canvas) -> draw
    56:56:int getIntrinsicHeight() -> getIntrinsicHeight
    51:51:int getIntrinsicWidth() -> getIntrinsicWidth
    89:91:void setControllerOverlay(android.graphics.drawable.Drawable) -> setControllerOverlay
    61:62:void setVisibilityCallback(com.facebook.drawee.drawable.VisibilityCallback) -> setVisibilityCallback
    66:69:boolean setVisible(boolean,boolean) -> setVisible
com.facebook.drawee.generic.RoundingParams -> com.facebook.drawee.generic.RoundingParams:
    20:53:void <init>() -> <init>
    169:169:com.facebook.drawee.generic.RoundingParams asCircle() -> asCircle
    267:304:boolean equals(java.lang.Object) -> equals
    183:184:com.facebook.drawee.generic.RoundingParams fromCornersRadii(float,float,float,float) -> fromCornersRadii
    189:189:com.facebook.drawee.generic.RoundingParams fromCornersRadii(float[]) -> fromCornersRadii
    174:174:com.facebook.drawee.generic.RoundingParams fromCornersRadius(float) -> fromCornersRadius
    218:218:int getBorderColor() -> getBorderColor
    204:204:float getBorderWidth() -> getBorderWidth
    125:125:float[] getCornersRadii() -> getCornersRadii
    161:164:float[] getOrCreateRoundedCornersRadii() -> getOrCreateRoundedCornersRadii
    157:157:int getOverlayColor() -> getOverlayColor
    245:245:float getPadding() -> getPadding
    68:68:boolean getRoundAsCircle() -> getRoundAsCircle
    141:141:com.facebook.drawee.generic.RoundingParams$RoundingMethod getRoundingMethod() -> getRoundingMethod
    262:262:boolean getScaleDownInsideBorders() -> getScaleDownInsideBorders
    309:318:int hashCode() -> hashCode
    227:230:com.facebook.drawee.generic.RoundingParams setBorder(int,float) -> setBorder
    212:213:com.facebook.drawee.generic.RoundingParams setBorderColor(int) -> setBorderColor
    197:199:com.facebook.drawee.generic.RoundingParams setBorderWidth(float) -> setBorderWidth
    96:101:com.facebook.drawee.generic.RoundingParams setCornersRadii(float,float,float,float) -> setCornersRadii
    112:115:com.facebook.drawee.generic.RoundingParams setCornersRadii(float[]) -> setCornersRadii
    78:79:com.facebook.drawee.generic.RoundingParams setCornersRadius(float) -> setCornersRadius
    150:152:com.facebook.drawee.generic.RoundingParams setOverlayColor(int) -> setOverlayColor
    238:240:com.facebook.drawee.generic.RoundingParams setPadding(float) -> setPadding
    62:63:com.facebook.drawee.generic.RoundingParams setRoundAsCircle(boolean) -> setRoundAsCircle
    135:136:com.facebook.drawee.generic.RoundingParams setRoundingMethod(com.facebook.drawee.generic.RoundingParams$RoundingMethod) -> setRoundingMethod
    256:257:com.facebook.drawee.generic.RoundingParams setScaleDownInsideBorders(boolean) -> setScaleDownInsideBorders
com.facebook.drawee.generic.RoundingParams$RoundingMethod -> com.facebook.drawee.generic.RoundingParams$RoundingMethod:
    22:43:void <clinit>() -> <clinit>
    22:22:void <init>(java.lang.String,int) -> <init>
    22:22:com.facebook.drawee.generic.RoundingParams$RoundingMethod valueOf(java.lang.String) -> valueOf
    22:22:com.facebook.drawee.generic.RoundingParams$RoundingMethod[] values() -> values
com.facebook.drawee.generic.WrappingUtils -> com.facebook.drawee.generic.WrappingUtils:
    54:54:void <clinit>() -> <clinit>
    36:36:void <init>() -> <init>
    299:323:android.graphics.drawable.Drawable applyLeafRounding(android.graphics.drawable.Drawable,com.facebook.drawee.generic.RoundingParams,android.content.res.Resources) -> applyLeafRounding
    330:335:void applyRoundingParams(com.facebook.drawee.drawable.Rounded,com.facebook.drawee.generic.RoundingParams) -> applyRoundingParams
    353:359:com.facebook.drawee.drawable.DrawableParent findDrawableParentForLeaf(com.facebook.drawee.drawable.DrawableParent) -> findDrawableParentForLeaf
    263:282:android.graphics.drawable.Drawable maybeApplyLeafRounding(android.graphics.drawable.Drawable,com.facebook.drawee.generic.RoundingParams,android.content.res.Resources) -> maybeApplyLeafRounding
    117:120:android.graphics.drawable.Drawable maybeWrapWithMatrix(android.graphics.drawable.Drawable,android.graphics.Matrix) -> maybeWrapWithMatrix
    225:239:android.graphics.drawable.Drawable maybeWrapWithRoundedOverlayColor(android.graphics.drawable.Drawable,com.facebook.drawee.generic.RoundingParams) -> maybeWrapWithRoundedOverlayColor
    68:68:android.graphics.drawable.Drawable maybeWrapWithScaleType(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> maybeWrapWithScaleType
    85:101:android.graphics.drawable.Drawable maybeWrapWithScaleType(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType,android.graphics.PointF) -> maybeWrapWithScaleType
    341:346:void resetRoundingParams(com.facebook.drawee.drawable.Rounded) -> resetRoundingParams
    191:210:void updateLeafRounding(com.facebook.drawee.drawable.DrawableParent,com.facebook.drawee.generic.RoundingParams,android.content.res.Resources) -> updateLeafRounding
    149:173:void updateOverlayColorRounding(com.facebook.drawee.drawable.DrawableParent,com.facebook.drawee.generic.RoundingParams) -> updateOverlayColorRounding
    126:130:com.facebook.drawee.drawable.ScaleTypeDrawable wrapChildWithScaleType(com.facebook.drawee.drawable.DrawableParent,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> wrapChildWithScaleType
com.facebook.drawee.gestures.GestureDetector -> com.facebook.drawee.gestures.GestureDetector:
    43:47:void <init>(android.content.Context) -> <init>
    56:58:void init() -> init
    76:76:boolean isCapturingGesture() -> isCapturingGesture
    51:51:com.facebook.drawee.gestures.GestureDetector newInstance(android.content.Context) -> newInstance
    81:117:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    65:67:void reset() -> reset
    71:72:void setClickListener(com.facebook.drawee.gestures.GestureDetector$ClickListener) -> setClickListener
com.facebook.drawee.view.AspectRatioMeasure -> com.facebook.drawee.view.AspectRatioMeasure:
    17:17:void <init>() -> <init>
    74:74:boolean shouldAdjust(int) -> shouldAdjust
    56:70:void updateMeasureSpec(com.facebook.drawee.view.AspectRatioMeasure$Spec,float,android.view.ViewGroup$LayoutParams,int,int) -> updateMeasureSpec
com.facebook.drawee.view.AspectRatioMeasure$Spec -> com.facebook.drawee.view.AspectRatioMeasure$Spec:
    22:22:void <init>() -> <init>
com.facebook.drawee.view.DraweeHolder -> com.facebook.drawee.view.DraweeHolder:
    45:78:void <init>(com.facebook.drawee.interfaces.DraweeHierarchy) -> <init>
    259:268:void attachController() -> attachController
    282:287:void attachOrDetachController() -> attachOrDetachController
    61:63:com.facebook.drawee.view.DraweeHolder create(com.facebook.drawee.interfaces.DraweeHierarchy,android.content.Context) -> create
    271:279:void detachController() -> detachController
    206:206:com.facebook.drawee.interfaces.DraweeController getController() -> getController
    255:255:com.facebook.drawee.components.DraweeEventTracker getDraweeEventTracker() -> getDraweeEventTracker
    231:231:com.facebook.drawee.interfaces.DraweeHierarchy getHierarchy() -> getHierarchy
    243:243:android.graphics.drawable.Drawable getTopLevelDrawable() -> getTopLevelDrawable
    238:238:boolean hasHierarchy() -> hasHierarchy
    101:101:boolean isAttached() -> isAttached
    251:251:boolean isControllerValid() -> isControllerValid
    87:90:void onAttach() -> onAttach
    111:114:void onDetach() -> onDetach
    147:163:void onDraw() -> onDraw
    122:125:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    133:139:void onVisibilityChange(boolean) -> onVisibilityChange
    68:68:void registerWithContext(android.content.Context) -> registerWithContext
    179:200:void setController(com.facebook.drawee.interfaces.DraweeController) -> setController
    213:225:void setHierarchy(com.facebook.drawee.interfaces.DraweeHierarchy) -> setHierarchy
    169:173:void setVisibilityCallback(com.facebook.drawee.drawable.VisibilityCallback) -> setVisibilityCallback
    291:296:java.lang.String toString() -> toString
com.facebook.drawee.view.DraweeTransition -> com.facebook.drawee.view.DraweeTransition:
    63:68:void <init>(com.facebook.drawee.drawable.ScalingUtils$ScaleType,com.facebook.drawee.drawable.ScalingUtils$ScaleType,android.graphics.PointF,android.graphics.PointF) -> <init>
    71:72:void <init>(com.facebook.drawee.drawable.ScalingUtils$ScaleType,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> <init>
    32:32:com.facebook.drawee.drawable.ScalingUtils$ScaleType access$000(com.facebook.drawee.view.DraweeTransition) -> access$000
    32:32:android.graphics.PointF access$100(com.facebook.drawee.view.DraweeTransition) -> access$100
    81:82:void captureEndValues(android.transition.TransitionValues) -> captureEndValues
    76:77:void captureStartValues(android.transition.TransitionValues) -> captureStartValues
    127:132:void captureValues(android.transition.TransitionValues) -> captureValues
    87:123:android.animation.Animator createAnimator(android.view.ViewGroup,android.transition.TransitionValues,android.transition.TransitionValues) -> createAnimator
    44:44:android.transition.TransitionSet createTransitionSet(com.facebook.drawee.drawable.ScalingUtils$ScaleType,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> createTransitionSet
    52:56:android.transition.TransitionSet createTransitionSet(com.facebook.drawee.drawable.ScalingUtils$ScaleType,com.facebook.drawee.drawable.ScalingUtils$ScaleType,android.graphics.PointF,android.graphics.PointF) -> createTransitionSet
com.facebook.drawee.view.DraweeTransition$1 -> com.facebook.drawee.view.DraweeTransition$1:
    105:105:void <init>(com.facebook.drawee.view.DraweeTransition,com.facebook.drawee.drawable.ScalingUtils$InterpolatingScaleType) -> <init>
    108:110:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.facebook.drawee.view.DraweeTransition$2 -> com.facebook.drawee.view.DraweeTransition$2:
    113:113:void <init>(com.facebook.drawee.view.DraweeTransition,com.facebook.drawee.view.GenericDraweeView) -> <init>
    116:120:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.facebook.drawee.view.DraweeView -> com.facebook.drawee.view.DraweeView:
    50:50:void <clinit>() -> <clinit>
    44:60:void <init>(android.content.Context) -> <init>
    44:65:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    44:70:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:76:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    189:190:void doAttach() -> doAttach
    198:199:void doDetach() -> doDetach
    272:272:float getAspectRatio() -> getAspectRatio
    137:137:com.facebook.drawee.interfaces.DraweeController getController() -> getController
    116:116:com.facebook.drawee.interfaces.DraweeHierarchy getHierarchy() -> getHierarchy
    126:126:android.graphics.drawable.Drawable getTopLevelDrawable() -> getTopLevelDrawable
    142:142:boolean hasController() -> hasController
    121:121:boolean hasHierarchy() -> hasHierarchy
    81:106:void init(android.content.Context) -> init
    301:307:void maybeOverrideVisibilityHandling() -> maybeOverrideVisibilityHandling
    175:176:void onAttach() -> onAttach
    147:150:void onAttachedToWindow() -> onAttachedToWindow
    180:181:void onDetach() -> onDetach
    154:157:void onDetachedFromWindow() -> onDetachedFromWindow
    168:171:void onFinishTemporaryDetach() -> onFinishTemporaryDetach
    281:290:void onMeasure(int,int) -> onMeasure
    161:164:void onStartTemporaryDetach() -> onStartTemporaryDetach
    203:206:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    296:298:void onVisibilityChanged(android.view.View,int) -> onVisibilityChanged
    261:266:void setAspectRatio(float) -> setAspectRatio
    131:133:void setController(com.facebook.drawee.interfaces.DraweeController) -> setController
    54:55:void setGlobalLegacyVisibilityHandlingEnabled(boolean) -> setGlobalLegacyVisibilityHandlingEnabled
    110:112:void setHierarchy(com.facebook.drawee.interfaces.DraweeHierarchy) -> setHierarchy
    228:231:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    216:219:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    240:243:void setImageResource(int) -> setImageResource
    252:255:void setImageURI(android.net.Uri) -> setImageURI
    276:277:void setLegacyVisibilityHandlingEnabled(boolean) -> setLegacyVisibilityHandlingEnabled
    311:313:java.lang.String toString() -> toString
com.facebook.drawee.view.GenericDraweeView -> com.facebook.drawee.view.GenericDraweeView:
    29:31:void <init>(android.content.Context,com.facebook.drawee.generic.GenericDraweeHierarchy) -> <init>
    34:36:void <init>(android.content.Context) -> <init>
    39:41:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    44:46:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    50:52:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    55:65:void inflateHierarchy(android.content.Context,android.util.AttributeSet) -> inflateHierarchy
com.facebook.drawee.view.MultiDraweeHolder -> com.facebook.drawee.view.MultiDraweeHolder:
    32:35:void <init>() -> <init>
    88:89:void add(com.facebook.drawee.view.DraweeHolder) -> add
    92:98:void add(int,com.facebook.drawee.view.DraweeHolder) -> add
    79:85:void clear() -> clear
    118:124:void draw(android.graphics.Canvas) -> draw
    109:109:com.facebook.drawee.view.DraweeHolder get(int) -> get
    44:51:void onAttach() -> onAttach
    60:67:void onDetach() -> onDetach
    70:75:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    101:106:void remove(int) -> remove
    113:113:int size() -> size
    128:133:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
com.facebook.drawee.view.SimpleDraweeView -> com.facebook.drawee.view.SimpleDraweeView:
    53:55:void <init>(android.content.Context,com.facebook.drawee.generic.GenericDraweeHierarchy) -> <init>
    58:60:void <init>(android.content.Context) -> <init>
    63:65:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    68:70:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    74:76:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    121:121:com.facebook.drawee.controller.AbstractDraweeControllerBuilder getControllerBuilder() -> getControllerBuilder
    80:118:void init(android.content.Context,android.util.AttributeSet) -> init
    42:43:void initialize(com.facebook.common.internal.Supplier) -> initialize
    194:195:void setActualImageResource(int) -> setActualImageResource
    209:210:void setActualImageResource(int,java.lang.Object) -> setActualImageResource
    130:134:void setImageRequest(com.facebook.imagepipeline.request.ImageRequest) -> setImageRequest
    221:222:void setImageResource(int) -> setImageResource
    144:145:void setImageURI(android.net.Uri) -> setImageURI
    153:154:void setImageURI(java.lang.String) -> setImageURI
    163:170:void setImageURI(android.net.Uri,java.lang.Object) -> setImageURI
    179:181:void setImageURI(java.lang.String,java.lang.Object) -> setImageURI
    47:48:void shutDown() -> shutDown
com.facebook.fbcore.BuildConfig -> com.facebook.fbcore.BuildConfig:
    6:6:void <init>() -> <init>
com.facebook.fresco.animation.backend.AnimationBackendDelegate -> com.facebook.fresco.animation.backend.AnimationBackendDelegate:
    31:40:void <init>(com.facebook.fresco.animation.backend.AnimationBackend) -> <init>
    137:146:void applyBackendProperties(com.facebook.fresco.animation.backend.AnimationBackend) -> applyBackendProperties
    93:96:void clear() -> clear
    59:59:boolean drawFrame(android.graphics.drawable.Drawable,android.graphics.Canvas,int) -> drawFrame
    132:132:com.facebook.fresco.animation.backend.AnimationBackend getAnimationBackend() -> getAnimationBackend
    44:44:int getFrameCount() -> getFrameCount
    49:49:int getFrameDurationMs(int) -> getFrameDurationMs
    107:109:int getIntrinsicHeight() -> getIntrinsicHeight
    100:102:int getIntrinsicWidth() -> getIntrinsicWidth
    54:54:int getLoopCount() -> getLoopCount
    88:88:int getSizeInBytes() -> getSizeInBytes
    64:68:void setAlpha(int) -> setAlpha
    119:123:void setAnimationBackend(com.facebook.fresco.animation.backend.AnimationBackend) -> setAnimationBackend
    80:84:void setBounds(android.graphics.Rect) -> setBounds
    72:76:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck -> com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck:
    68:104:void <init>(com.facebook.fresco.animation.backend.AnimationBackend,com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck$InactivityListener,com.facebook.common.time.MonotonicClock,java.util.concurrent.ScheduledExecutorService) -> <init>
    27:27:boolean access$002(com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck,boolean) -> access$002
    27:27:boolean access$100(com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck) -> access$100
    27:27:com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck$InactivityListener access$200(com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck) -> access$200
    27:27:void access$300(com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck) -> access$300
    45:45:com.facebook.fresco.animation.backend.AnimationBackendDelegate createForBackend(com.facebook.fresco.animation.backend.AnimationBackend,com.facebook.common.time.MonotonicClock,java.util.concurrent.ScheduledExecutorService) -> createForBackend
    54:54:com.facebook.fresco.animation.backend.AnimationBackendDelegate createForBackend(com.facebook.fresco.animation.backend.AnimationBackend,com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck$InactivityListener,com.facebook.common.time.MonotonicClock,java.util.concurrent.ScheduledExecutorService) -> createForBackend
    108:111:boolean drawFrame(android.graphics.drawable.Drawable,android.graphics.Canvas,int) -> drawFrame
    119:119:long getInactivityCheckPollingTimeMs() -> getInactivityCheckPollingTimeMs
    127:127:long getInactivityThresholdMs() -> getInactivityThresholdMs
    135:135:boolean isInactive() -> isInactive
    138:146:void maybeScheduleInactivityCheck() -> maybeScheduleInactivityCheck
    123:124:void setInactivityCheckPollingTimeMs(long) -> setInactivityCheckPollingTimeMs
    115:116:void setInactivityListener(com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck$InactivityListener) -> setInactivityListener
    131:132:void setInactivityThresholdMs(long) -> setInactivityThresholdMs
com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck$1 -> com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck$1:
    79:79:void <init>(com.facebook.fresco.animation.backend.AnimationBackendDelegateWithInactivityCheck) -> <init>
    82:92:void run() -> run
com.facebook.fresco.animation.bitmap.BitmapAnimationBackend -> com.facebook.fresco.animation.bitmap.BitmapAnimationBackend:
    90:90:void <clinit>() -> <clinit>
    106:126:void <init>(com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory,com.facebook.fresco.animation.bitmap.BitmapFrameCache,com.facebook.fresco.animation.backend.AnimationInformation,com.facebook.fresco.animation.bitmap.BitmapFrameRenderer,com.facebook.fresco.animation.bitmap.preparation.BitmapFramePreparationStrategy,com.facebook.fresco.animation.bitmap.preparation.BitmapFramePreparer) -> <init>
    275:276:void clear() -> clear
    337:358:boolean drawBitmapAndCache(int,com.facebook.common.references.CloseableReference,android.graphics.Canvas,int) -> drawBitmapAndCache
    161:181:boolean drawFrame(android.graphics.drawable.Drawable,android.graphics.Canvas,int) -> drawFrame
    185:237:boolean drawFrameOrFallback(android.graphics.Canvas,int,int) -> drawFrameOrFallback
    143:143:int getFrameCount() -> getFrameCount
    148:148:int getFrameDurationMs(int) -> getFrameDurationMs
    265:265:int getIntrinsicHeight() -> getIntrinsicHeight
    260:260:int getIntrinsicWidth() -> getIntrinsicWidth
    153:153:int getLoopCount() -> getLoopCount
    270:270:int getSizeInBytes() -> getSizeInBytes
    280:281:void onInactive() -> onInactive
    308:317:boolean renderFrameInBitmap(int,com.facebook.common.references.CloseableReference) -> renderFrameInBitmap
    243:244:void setAlpha(int) -> setAlpha
    134:135:void setBitmapConfig(android.graphics.Bitmap$Config) -> setBitmapConfig
    253:256:void setBounds(android.graphics.Rect) -> setBounds
    248:249:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    138:139:void setFrameListener(com.facebook.fresco.animation.bitmap.BitmapAnimationBackend$FrameListener) -> setFrameListener
    285:294:void updateBitmapDimensions() -> updateBitmapDimensions
com.facebook.fresco.animation.bitmap.cache.FrescoFrameCache -> com.facebook.fresco.animation.bitmap.cache.FrescoFrameCache:
    31:31:void <clinit>() -> <clinit>
    42:46:void <init>(com.facebook.imagepipeline.animated.impl.AnimatedFrameCache,boolean) -> <init>
    84:92:void clear() -> clear
    74:74:boolean contains(int) -> contains
    187:201:com.facebook.common.references.CloseableReference convertToBitmapReferenceAndClose(com.facebook.common.references.CloseableReference) -> convertToBitmapReferenceAndClose
    225:227:com.facebook.common.references.CloseableReference createImageReference(com.facebook.common.references.CloseableReference) -> createImageReference
    207:210:int getBitmapSizeBytes(com.facebook.common.references.CloseableReference) -> getBitmapSizeBytes
    214:217:int getBitmapSizeBytes(com.facebook.imagepipeline.image.CloseableImage) -> getBitmapSizeBytes
    65:69:com.facebook.common.references.CloseableReference getBitmapToReuseForFrame(int,int,int) -> getBitmapToReuseForFrame
    51:51:com.facebook.common.references.CloseableReference getCachedFrame(int) -> getCachedFrame
    57:57:com.facebook.common.references.CloseableReference getFallbackFrame(int) -> getFallbackFrame
    153:158:int getPreparedPendingFramesSizeBytes() -> getPreparedPendingFramesSizeBytes
    80:80:int getSizeInBytes() -> getSizeInBytes
    121:146:void onFramePrepared(int,com.facebook.common.references.CloseableReference,int) -> onFramePrepared
    98:115:void onFrameRendered(int,com.facebook.common.references.CloseableReference,int) -> onFrameRendered
    161:173:void removePreparedReference(int) -> removePreparedReference
    151:151:void setFrameCacheListener(com.facebook.fresco.animation.bitmap.BitmapFrameCache$FrameCacheListener) -> setFrameCacheListener
com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache -> com.facebook.fresco.animation.bitmap.cache.KeepLastFrameCache:
    20:24:void <init>() -> <init>
    73:75:void clear() -> clear
    110:117:void closeAndResetLastBitmapReference() -> closeAndResetLastBitmapReference
    62:62:boolean contains(int) -> contains
    53:56:com.facebook.common.references.CloseableReference getBitmapToReuseForFrame(int,int,int) -> getBitmapToReuseForFrame
    35:39:com.facebook.common.references.CloseableReference getCachedFrame(int) -> getCachedFrame
    45:45:com.facebook.common.references.CloseableReference getFallbackFrame(int) -> getFallbackFrame
    66:69:int getSizeInBytes() -> getSizeInBytes
    103:103:void onFramePrepared(int,com.facebook.common.references.CloseableReference,int) -> onFramePrepared
    81:96:void onFrameRendered(int,com.facebook.common.references.CloseableReference,int) -> onFrameRendered
    107:108:void setFrameCacheListener(com.facebook.fresco.animation.bitmap.BitmapFrameCache$FrameCacheListener) -> setFrameCacheListener
com.facebook.fresco.animation.bitmap.cache.NoOpCache -> com.facebook.fresco.animation.bitmap.cache.NoOpCache:
    18:18:void <init>() -> <init>
    54:54:void clear() -> clear
    43:43:boolean contains(int) -> contains
    38:38:com.facebook.common.references.CloseableReference getBitmapToReuseForFrame(int,int,int) -> getBitmapToReuseForFrame
    23:23:com.facebook.common.references.CloseableReference getCachedFrame(int) -> getCachedFrame
    29:29:com.facebook.common.references.CloseableReference getFallbackFrame(int) -> getFallbackFrame
    48:48:int getSizeInBytes() -> getSizeInBytes
    70:70:void onFramePrepared(int,com.facebook.common.references.CloseableReference,int) -> onFramePrepared
    62:62:void onFrameRendered(int,com.facebook.common.references.CloseableReference,int) -> onFrameRendered
    75:75:void setFrameCacheListener(com.facebook.fresco.animation.bitmap.BitmapFrameCache$FrameCacheListener) -> setFrameCacheListener
com.facebook.fresco.animation.bitmap.preparation.DefaultBitmapFramePreparer -> com.facebook.fresco.animation.bitmap.preparation.DefaultBitmapFramePreparer:
    27:27:void <clinit>() -> <clinit>
    39:45:void <init>(com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory,com.facebook.fresco.animation.bitmap.BitmapFrameRenderer,android.graphics.Bitmap$Config,java.util.concurrent.ExecutorService) -> <init>
    24:24:java.lang.Class access$000() -> access$000
    24:24:android.util.SparseArray access$100(com.facebook.fresco.animation.bitmap.preparation.DefaultBitmapFramePreparer) -> access$100
    24:24:android.graphics.Bitmap$Config access$200(com.facebook.fresco.animation.bitmap.preparation.DefaultBitmapFramePreparer) -> access$200
    24:24:com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory access$300(com.facebook.fresco.animation.bitmap.preparation.DefaultBitmapFramePreparer) -> access$300
    24:24:com.facebook.fresco.animation.bitmap.BitmapFrameRenderer access$400(com.facebook.fresco.animation.bitmap.preparation.DefaultBitmapFramePreparer) -> access$400
    77:79:int getUniqueId(com.facebook.fresco.animation.backend.AnimationBackend,int) -> getUniqueId
    53:73:boolean prepareFrame(com.facebook.fresco.animation.bitmap.BitmapFrameCache,com.facebook.fresco.animation.backend.AnimationBackend,int) -> prepareFrame
com.facebook.fresco.animation.bitmap.preparation.DefaultBitmapFramePreparer$FrameDecodeRunnable -> com.facebook.fresco.animation.bitmap.preparation.DefaultBitmapFramePreparer$FrameDecodeRunnable:
    93:98:void <init>(com.facebook.fresco.animation.bitmap.preparation.DefaultBitmapFramePreparer,com.facebook.fresco.animation.backend.AnimationBackend,com.facebook.fresco.animation.bitmap.BitmapFrameCache,int,int) -> <init>
    125:167:boolean prepareFrameAndCache(int,int) -> prepareFrameAndCache
    176:188:boolean renderFrameAndCache(int,com.facebook.common.references.CloseableReference,int) -> renderFrameAndCache
    104:120:void run() -> run
com.facebook.fresco.animation.bitmap.preparation.FixedNumberBitmapFramePreparationStrategy -> com.facebook.fresco.animation.bitmap.preparation.FixedNumberBitmapFramePreparationStrategy:
    19:19:void <clinit>() -> <clinit>
    25:26:void <init>() -> <init>
    28:30:void <init>(int) -> <init>
    38:51:void prepareFrames(com.facebook.fresco.animation.bitmap.preparation.BitmapFramePreparer,com.facebook.fresco.animation.bitmap.BitmapFrameCache,com.facebook.fresco.animation.backend.AnimationBackend,int) -> prepareFrames
com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation -> com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendAnimationInformation:
    21:23:void <init>(com.facebook.imagepipeline.animated.base.AnimatedDrawableBackend) -> <init>
    27:27:int getFrameCount() -> getFrameCount
    32:32:int getFrameDurationMs(int) -> getFrameDurationMs
    37:37:int getLoopCount() -> getLoopCount
com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer -> com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer:
    24:24:void <clinit>() -> <clinit>
    31:52:void <init>(com.facebook.fresco.animation.bitmap.BitmapFrameCache,com.facebook.imagepipeline.animated.base.AnimatedDrawableBackend) -> <init>
    22:22:com.facebook.fresco.animation.bitmap.BitmapFrameCache access$000(com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer) -> access$000
    70:70:int getIntrinsicHeight() -> getIntrinsicHeight
    65:65:int getIntrinsicWidth() -> getIntrinsicWidth
    76:81:boolean renderFrame(int,android.graphics.Bitmap) -> renderFrame
    56:61:void setBounds(android.graphics.Rect) -> setBounds
com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer$1 -> com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer$1:
    32:32:void <init>(com.facebook.fresco.animation.bitmap.wrapper.AnimatedDrawableBackendFrameRenderer) -> <init>
    41:41:com.facebook.common.references.CloseableReference getCachedBitmap(int) -> getCachedBitmap
    36:36:void onIntermediateResult(int,android.graphics.Bitmap) -> onIntermediateResult
com.facebook.fresco.animation.drawable.AnimatedDrawable2 -> com.facebook.fresco.animation.drawable.AnimatedDrawable2:
    51:53:void <clinit>() -> <clinit>
    102:103:void <init>() -> <init>
    70:109:void <init>(com.facebook.fresco.animation.backend.AnimationBackend) -> <init>
    29:29:java.lang.Runnable access$000(com.facebook.fresco.animation.drawable.AnimatedDrawable2) -> access$000
    450:453:com.facebook.fresco.animation.frame.FrameScheduler createSchedulerForBackendAndDelayMethod(com.facebook.fresco.animation.backend.AnimationBackend) -> createSchedulerForBackendAndDelayMethod
    181:250:void draw(android.graphics.Canvas) -> draw
    484:487:void dropCaches() -> dropCaches
    302:302:com.facebook.fresco.animation.backend.AnimationBackend getAnimationBackend() -> getAnimationBackend
    306:306:long getDroppedFrames() -> getDroppedFrames
    360:360:int getFrameCount() -> getFrameCount
    121:124:int getIntrinsicHeight() -> getIntrinsicHeight
    113:116:int getIntrinsicWidth() -> getIntrinsicWidth
    373:375:int getLoopCount() -> getLoopCount
    340:350:long getLoopDurationMs() -> getLoopDurationMs
    276:276:int getOpacity() -> getOpacity
    310:310:long getStartTimeMs() -> getStartTimeMs
    314:314:boolean isInfiniteAnimation() -> isInfiniteAnimation
    168:168:boolean isRunning() -> isRunning
    324:332:void jumpToFrame(int) -> jumpToFrame
    444:444:long now() -> now
    173:177:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    431:436:void onFrameDropped() -> onFrameDropped
    469:479:boolean onLevelChange(int) -> onLevelChange
    426:428:void scheduleNextFrame(long) -> scheduleNextFrame
    254:261:void setAlpha(int) -> setAlpha
    287:298:void setAnimationBackend(com.facebook.fresco.animation.backend.AnimationBackend) -> setAnimationBackend
    406:409:void setAnimationListener(com.facebook.fresco.animation.drawable.AnimationListener) -> setAnimationListener
    265:272:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    417:418:void setDrawListener(com.facebook.fresco.animation.drawable.AnimatedDrawable2$DrawListener) -> setDrawListener
    386:387:void setFrameSchedulingDelayMs(long) -> setFrameSchedulingDelayMs
    397:398:void setFrameSchedulingOffsetMs(long) -> setFrameSchedulingOffsetMs
    132:142:void start() -> start
    149:159:void stop() -> stop
com.facebook.fresco.animation.drawable.AnimatedDrawable2$1 -> com.facebook.fresco.animation.drawable.AnimatedDrawable2$1:
    90:90:void <init>(com.facebook.fresco.animation.drawable.AnimatedDrawable2) -> <init>
    95:98:void run() -> run
com.facebook.fresco.animation.drawable.AnimatedDrawable2DebugDrawListener -> com.facebook.fresco.animation.drawable.AnimatedDrawable2DebugDrawListener:
    18:18:void <clinit>() -> <clinit>
    16:20:void <init>() -> <init>
    39:76:void onDraw(com.facebook.fresco.animation.drawable.AnimatedDrawable2,com.facebook.fresco.animation.frame.FrameScheduler,int,boolean,boolean,long,long,long,long,long,long,long) -> onDraw
com.facebook.fresco.animation.drawable.BaseAnimationListener -> com.facebook.fresco.animation.drawable.BaseAnimationListener:
    15:15:void <init>() -> <init>
    35:35:void onAnimationFrame(com.facebook.fresco.animation.drawable.AnimatedDrawable2,int) -> onAnimationFrame
    31:31:void onAnimationRepeat(com.facebook.fresco.animation.drawable.AnimatedDrawable2) -> onAnimationRepeat
    27:27:void onAnimationReset(com.facebook.fresco.animation.drawable.AnimatedDrawable2) -> onAnimationReset
    19:19:void onAnimationStart(com.facebook.fresco.animation.drawable.AnimatedDrawable2) -> onAnimationStart
    23:23:void onAnimationStop(com.facebook.fresco.animation.drawable.AnimatedDrawable2) -> onAnimationStop
com.facebook.fresco.animation.drawable.animator.AnimatedDrawable2ValueAnimatorHelper -> com.facebook.fresco.animation.drawable.animator.AnimatedDrawable2ValueAnimatorHelper:
    60:61:void <init>() -> <init>
    51:51:android.animation.ValueAnimator$AnimatorUpdateListener createAnimatorUpdateListener(com.facebook.fresco.animation.drawable.AnimatedDrawable2) -> createAnimatorUpdateListener
    24:30:android.animation.ValueAnimator createValueAnimator(com.facebook.fresco.animation.drawable.AnimatedDrawable2,int) -> createValueAnimator
    34:46:android.animation.ValueAnimator createValueAnimator(com.facebook.fresco.animation.drawable.AnimatedDrawable2) -> createValueAnimator
com.facebook.fresco.animation.drawable.animator.AnimatedDrawable2ValueAnimatorHelper$1 -> com.facebook.fresco.animation.drawable.animator.AnimatedDrawable2ValueAnimatorHelper$1:
    51:51:void <init>(com.facebook.fresco.animation.drawable.AnimatedDrawable2) -> <init>
    55:56:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.facebook.fresco.animation.drawable.animator.AnimatedDrawableValueAnimatorHelper -> com.facebook.fresco.animation.drawable.animator.AnimatedDrawableValueAnimatorHelper:
    83:84:void <init>() -> <init>
    72:80:android.animation.ValueAnimator$AnimatorUpdateListener createAnimatorUpdateListener(android.graphics.drawable.Drawable) -> createAnimatorUpdateListener
    33:42:android.animation.ValueAnimator createValueAnimator(android.graphics.drawable.Drawable,int) -> createValueAnimator
    53:60:android.animation.ValueAnimator createValueAnimator(android.graphics.drawable.Drawable) -> createValueAnimator
com.facebook.fresco.animation.factory.AnimatedFactoryV2Impl -> com.facebook.fresco.animation.factory.AnimatedFactoryV2Impl:
    64:69:void <init>(com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory,com.facebook.imagepipeline.core.ExecutorSupplier,com.facebook.imagepipeline.cache.CountingMemoryCache,boolean) -> <init>
    45:45:com.facebook.imagepipeline.animated.factory.AnimatedImageFactory access$000(com.facebook.fresco.animation.factory.AnimatedFactoryV2Impl) -> access$000
    45:45:com.facebook.imagepipeline.animated.util.AnimatedDrawableUtil access$100(com.facebook.fresco.animation.factory.AnimatedFactoryV2Impl) -> access$100
    45:45:boolean access$200(com.facebook.fresco.animation.factory.AnimatedFactoryV2Impl) -> access$200
    170:181:com.facebook.imagepipeline.animated.factory.AnimatedImageFactory buildAnimatedImageFactory() -> buildAnimatedImageFactory
    109:130:com.facebook.fresco.animation.factory.ExperimentalBitmapAnimationDrawableFactory createDrawableFactory() -> createDrawableFactory
    152:166:com.facebook.imagepipeline.animated.impl.AnimatedDrawableBackendProvider getAnimatedDrawableBackendProvider() -> getAnimatedDrawableBackendProvider
    74:77:com.facebook.imagepipeline.drawable.DrawableFactory getAnimatedDrawableFactory(android.content.Context) -> getAnimatedDrawableFactory
    138:141:com.facebook.imagepipeline.animated.util.AnimatedDrawableUtil getAnimatedDrawableUtil() -> getAnimatedDrawableUtil
    145:148:com.facebook.imagepipeline.animated.factory.AnimatedImageFactory getAnimatedImageFactory() -> getAnimatedImageFactory
    82:82:com.facebook.imagepipeline.decoder.ImageDecoder getGifDecoder(android.graphics.Bitmap$Config) -> getGifDecoder
    96:96:com.facebook.imagepipeline.decoder.ImageDecoder getWebPDecoder(android.graphics.Bitmap$Config) -> getWebPDecoder
com.facebook.fresco.animation.factory.AnimatedFactoryV2Impl$1 -> com.facebook.fresco.animation.factory.AnimatedFactoryV2Impl$1:
    82:82:void <init>(com.facebook.fresco.animation.factory.AnimatedFactoryV2Impl,android.graphics.Bitmap$Config) -> <init>
    89:89:com.facebook.imagepipeline.image.CloseableImage decode(com.facebook.imagepipeline.image.EncodedImage,int,com.facebook.imagepipeline.image.QualityInfo,com.facebook.imagepipeline.common.ImageDecodeOptions) -> decode
com.facebook.fresco.animation.factory.AnimatedFactoryV2Impl$2 -> com.facebook.fresco.animation.factory.AnimatedFactoryV2Impl$2:
    96:96:void <init>(com.facebook.fresco.animation.factory.AnimatedFactoryV2Impl,android.graphics.Bitmap$Config) -> <init>
    103:103:com.facebook.imagepipeline.image.CloseableImage decode(com.facebook.imagepipeline.image.EncodedImage,int,com.facebook.imagepipeline.image.QualityInfo,com.facebook.imagepipeline.common.ImageDecodeOptions) -> decode
com.facebook.fresco.animation.factory.AnimatedFactoryV2Impl$3 -> com.facebook.fresco.animation.factory.AnimatedFactoryV2Impl$3:
    109:109:void <init>(com.facebook.fresco.animation.factory.AnimatedFactoryV2Impl) -> <init>
    109:109:java.lang.Object get() -> get
    112:112:java.lang.Integer get() -> get
com.facebook.fresco.animation.factory.AnimatedFactoryV2Impl$4 -> com.facebook.fresco.animation.factory.AnimatedFactoryV2Impl$4:
    119:119:void <init>(com.facebook.fresco.animation.factory.AnimatedFactoryV2Impl) -> <init>
    119:119:java.lang.Object get() -> get
    122:122:java.lang.Integer get() -> get
com.facebook.fresco.animation.factory.AnimatedFactoryV2Impl$5 -> com.facebook.fresco.animation.factory.AnimatedFactoryV2Impl$5:
    154:154:void <init>(com.facebook.fresco.animation.factory.AnimatedFactoryV2Impl) -> <init>
    158:162:com.facebook.imagepipeline.animated.base.AnimatedDrawableBackend get(com.facebook.imagepipeline.animated.base.AnimatedImageResult,android.graphics.Rect) -> get
com.facebook.fresco.animation.factory.AnimatedFactoryV2Impl$6 -> com.facebook.fresco.animation.factory.AnimatedFactoryV2Impl$6:
    171:171:void <init>(com.facebook.fresco.animation.factory.AnimatedFactoryV2Impl) -> <init>
    174:178:com.facebook.imagepipeline.animated.base.AnimatedDrawableBackend get(com.facebook.imagepipeline.animated.base.AnimatedImageResult,android.graphics.Rect) -> get
com.facebook.fresco.animation.factory.ExperimentalBitmapAnimationDrawableFactory -> com.facebook.fresco.animation.factory.ExperimentalBitmapAnimationDrawableFactory:
    72:81:void <init>(com.facebook.imagepipeline.animated.impl.AnimatedDrawableBackendProvider,java.util.concurrent.ScheduledExecutorService,java.util.concurrent.ExecutorService,com.facebook.common.time.MonotonicClock,com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory,com.facebook.imagepipeline.cache.CountingMemoryCache,com.facebook.common.internal.Supplier,com.facebook.common.internal.Supplier) -> <init>
    136:138:com.facebook.imagepipeline.animated.base.AnimatedDrawableBackend createAnimatedDrawableBackend(com.facebook.imagepipeline.animated.base.AnimatedImageResult) -> createAnimatedDrawableBackend
    157:158:com.facebook.imagepipeline.animated.impl.AnimatedFrameCache createAnimatedFrameCache(com.facebook.imagepipeline.animated.base.AnimatedImageResult) -> createAnimatedFrameCache
    96:120:com.facebook.fresco.animation.backend.AnimationBackend createAnimationBackend(com.facebook.imagepipeline.animated.base.AnimatedImageResult) -> createAnimationBackend
    142:151:com.facebook.fresco.animation.bitmap.BitmapFrameCache createBitmapFrameCache(com.facebook.imagepipeline.animated.base.AnimatedImageResult) -> createBitmapFrameCache
    127:127:com.facebook.fresco.animation.bitmap.preparation.BitmapFramePreparer createBitmapFramePreparer(com.facebook.fresco.animation.bitmap.BitmapFrameRenderer) -> createBitmapFramePreparer
    48:48:android.graphics.drawable.Drawable createDrawable(com.facebook.imagepipeline.image.CloseableImage) -> createDrawable
    90:92:com.facebook.fresco.animation.drawable.AnimatedDrawable2 createDrawable(com.facebook.imagepipeline.image.CloseableImage) -> createDrawable
    85:85:boolean supportsImageType(com.facebook.imagepipeline.image.CloseableImage) -> supportsImageType
com.facebook.fresco.animation.factory.ExperimentalBitmapAnimationDrawableFactory$AnimationFrameCacheKey -> com.facebook.fresco.animation.factory.ExperimentalBitmapAnimationDrawableFactory$AnimationFrameCacheKey:
    168:170:void <init>(int) -> <init>
    174:174:boolean containsUri(android.net.Uri) -> containsUri
    179:179:java.lang.String getUriString() -> getUriString
com.facebook.fresco.animation.frame.DropFramesFrameScheduler -> com.facebook.fresco.animation.frame.DropFramesFrameScheduler:
    21:25:void <init>(com.facebook.fresco.animation.backend.AnimationInformation) -> <init>
    29:36:int getFrameNumberToRender(long,long) -> getFrameNumberToRender
    97:103:int getFrameNumberWithinLoop(long) -> getFrameNumberWithinLoop
    41:49:long getLoopDurationMs() -> getLoopDurationMs
    63:87:long getTargetRenderTimeForNextFrameMs(long) -> getTargetRenderTimeForNextFrameMs
    54:58:long getTargetRenderTimeMs(int) -> getTargetRenderTimeMs
    92:92:boolean isInfiniteAnimation() -> isInfiniteAnimation
com.facebook.imageformat.DefaultImageFormatChecker -> com.facebook.imageformat.DefaultImageFormatChecker:
    131:252:void <clinit>() -> <clinit>
    18:28:void <init>() -> <init>
    54:84:com.facebook.imageformat.ImageFormat determineFormat(byte[],int) -> determineFormat
    40:40:int getHeaderSize() -> getHeaderSize
    105:124:com.facebook.imageformat.ImageFormat getWebpFormat(byte[],int) -> getWebpFormat
    213:216:boolean isBmpHeader(byte[],int) -> isBmpHeader
    191:195:boolean isGifHeader(byte[],int) -> isGifHeader
    264:285:boolean isHeifHeader(byte[],int) -> isHeifHeader
    235:238:boolean isIcoHeader(byte[],int) -> isIcoHeader
    146:147:boolean isJpegHeader(byte[],int) -> isJpegHeader
    170:171:boolean isPngHeader(byte[],int) -> isPngHeader
com.facebook.imageformat.DefaultImageFormats -> com.facebook.imageformat.DefaultImageFormats:
    18:29:void <clinit>() -> <clinit>
    82:83:void <init>() -> <init>
    64:79:java.util.List getDefaultFormats() -> getDefaultFormats
    51:51:boolean isStaticWebpFormat(com.facebook.imageformat.ImageFormat) -> isStaticWebpFormat
    40:40:boolean isWebpFormat(com.facebook.imageformat.ImageFormat) -> isWebpFormat
com.facebook.imageformat.ImageFormat -> com.facebook.imageformat.ImageFormat:
    37:37:void <clinit>() -> <clinit>
    42:45:void <init>(java.lang.String,java.lang.String) -> <init>
    53:53:java.lang.String getFileExtension() -> getFileExtension
    62:62:java.lang.String getName() -> getName
    58:58:java.lang.String toString() -> toString
com.facebook.imageformat.ImageFormatChecker -> com.facebook.imageformat.ImageFormatChecker:
    32:36:void <init>() -> <init>
    45:62:com.facebook.imageformat.ImageFormat determineImageFormat(java.io.InputStream) -> determineImageFormat
    130:130:com.facebook.imageformat.ImageFormat getImageFormat(java.io.InputStream) -> getImageFormat
    153:160:com.facebook.imageformat.ImageFormat getImageFormat(java.lang.String) -> getImageFormat
    139:141:com.facebook.imageformat.ImageFormat getImageFormat_WrapIOException(java.io.InputStream) -> getImageFormat_WrapIOException
    112:116:com.facebook.imageformat.ImageFormatChecker getInstance() -> getInstance
    90:104:int readHeaderFromStream(int,java.io.InputStream,byte[]) -> readHeaderFromStream
    40:42:void setCustomImageFormatCheckers(java.util.List) -> setCustomImageFormatCheckers
    66:72:void updateMaxHeaderLength() -> updateMaxHeaderLength
com.facebook.imageformat.ImageFormatCheckerUtils -> com.facebook.imageformat.ImageFormatCheckerUtils:
    102:102:void <init>() -> <init>
    25:30:byte[] asciiBytes(java.lang.String) -> asciiBytes
    70:99:int indexOfPattern(byte[],int,byte[],int) -> indexOfPattern
    44:56:boolean startsWithPattern(byte[],byte[]) -> startsWithPattern
com.facebook.imagepipeline.BuildConfig -> com.facebook.imagepipeline.BuildConfig:
    6:6:void <init>() -> <init>
com.facebook.imagepipeline.animated.BuildConfig -> com.facebook.imagepipeline.animated.BuildConfig:
    6:6:void <init>() -> <init>
com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo -> com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo:
    56:64:void <init>(int,int,int,int,int,com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo$BlendOperation,com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo$DisposalMethod) -> <init>
com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo$BlendOperation -> com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo$BlendOperation:
    34:38:void <clinit>() -> <clinit>
    34:34:void <init>(java.lang.String,int) -> <init>
    34:34:com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo$BlendOperation valueOf(java.lang.String) -> valueOf
    34:34:com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo$BlendOperation[] values() -> values
com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo$DisposalMethod -> com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo$DisposalMethod:
    18:27:void <clinit>() -> <clinit>
    18:18:void <init>(java.lang.String,int) -> <init>
    18:18:com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo$DisposalMethod valueOf(java.lang.String) -> valueOf
    18:18:com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo$DisposalMethod[] values() -> values
com.facebook.imagepipeline.animated.base.AnimatedDrawableOptions -> com.facebook.imagepipeline.animated.base.AnimatedDrawableOptions:
    21:21:void <clinit>() -> <clinit>
    47:52:void <init>(com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder) -> <init>
    60:60:com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder newBuilder() -> newBuilder
com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder -> com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder:
    13:17:void <init>() -> <init>
    109:109:com.facebook.imagepipeline.animated.base.AnimatedDrawableOptions build() -> build
    47:47:boolean getAllowPrefetching() -> getAllowPrefetching
    89:89:boolean getEnableDebugging() -> getEnableDebugging
    26:26:boolean getForceKeepAllFramesInMemory() -> getForceKeepAllFramesInMemory
    68:68:int getMaximumBytes() -> getMaximumBytes
    57:58:com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder setAllowPrefetching(boolean) -> setAllowPrefetching
    99:100:com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder setEnableDebugging(boolean) -> setEnableDebugging
    37:38:com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder setForceKeepAllFramesInMemory(boolean) -> setForceKeepAllFramesInMemory
    79:80:com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder setMaximumBytes(int) -> setMaximumBytes
com.facebook.imagepipeline.animated.base.AnimatedImageResult -> com.facebook.imagepipeline.animated.base.AnimatedImageResult:
    27:32:void <init>(com.facebook.imagepipeline.animated.base.AnimatedImageResultBuilder) -> <init>
    34:37:void <init>(com.facebook.imagepipeline.animated.base.AnimatedImage) -> <init>
    118:123:void dispose() -> dispose
    46:46:com.facebook.imagepipeline.animated.base.AnimatedImageResult forAnimatedImage(com.facebook.imagepipeline.animated.base.AnimatedImage) -> forAnimatedImage
    86:90:com.facebook.common.references.CloseableReference getDecodedFrame(int) -> getDecodedFrame
    75:75:int getFrameForPreview() -> getFrameForPreview
    65:65:com.facebook.imagepipeline.animated.base.AnimatedImage getImage() -> getImage
    112:112:com.facebook.common.references.CloseableReference getPreviewBitmap() -> getPreviewBitmap
    101:101:boolean hasDecodedFrame(int) -> hasDecodedFrame
    56:56:com.facebook.imagepipeline.animated.base.AnimatedImageResultBuilder newBuilder(com.facebook.imagepipeline.animated.base.AnimatedImage) -> newBuilder
com.facebook.imagepipeline.animated.base.AnimatedImageResultBuilder -> com.facebook.imagepipeline.animated.base.AnimatedImageResultBuilder:
    24:26:void <init>(com.facebook.imagepipeline.animated.base.AnimatedImage) -> <init>
    111:116:com.facebook.imagepipeline.animated.base.AnimatedImageResult build() -> build
    87:87:java.util.List getDecodedFrames() -> getDecodedFrames
    65:65:int getFrameForPreview() -> getFrameForPreview
    34:34:com.facebook.imagepipeline.animated.base.AnimatedImage getImage() -> getImage
    44:44:com.facebook.common.references.CloseableReference getPreviewBitmap() -> getPreviewBitmap
    98:99:com.facebook.imagepipeline.animated.base.AnimatedImageResultBuilder setDecodedFrames(java.util.List) -> setDecodedFrames
    75:76:com.facebook.imagepipeline.animated.base.AnimatedImageResultBuilder setFrameForPreview(int) -> setFrameForPreview
    54:55:com.facebook.imagepipeline.animated.base.AnimatedImageResultBuilder setPreviewBitmap(com.facebook.common.references.CloseableReference) -> setPreviewBitmap
com.facebook.imagepipeline.animated.base.DelegatingAnimatedDrawableBackend -> com.facebook.imagepipeline.animated.base.DelegatingAnimatedDrawableBackend:
    22:24:void <init>(com.facebook.imagepipeline.animated.base.AnimatedDrawableBackend) -> <init>
    117:118:void dropCaches() -> dropCaches
    32:32:com.facebook.imagepipeline.animated.base.AnimatedImageResult getAnimatedImageResult() -> getAnimatedImageResult
    27:27:com.facebook.imagepipeline.animated.base.AnimatedDrawableBackend getDelegate() -> getDelegate
    37:37:int getDurationMs() -> getDurationMs
    92:92:int getDurationMsForFrame(int) -> getDurationMsForFrame
    42:42:int getFrameCount() -> getFrameCount
    97:97:int getFrameForPreview() -> getFrameForPreview
    82:82:int getFrameForTimestampMs(int) -> getFrameForTimestampMs
    72:72:com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo getFrameInfo(int) -> getFrameInfo
    57:57:int getHeight() -> getHeight
    47:47:int getLoopCount() -> getLoopCount
    102:102:int getMemoryUsage() -> getMemoryUsage
    107:107:com.facebook.common.references.CloseableReference getPreDecodedFrame(int) -> getPreDecodedFrame
    67:67:int getRenderedHeight() -> getRenderedHeight
    62:62:int getRenderedWidth() -> getRenderedWidth
    87:87:int getTimestampMsForFrame(int) -> getTimestampMsForFrame
    52:52:int getWidth() -> getWidth
    112:112:boolean hasPreDecodedFrame(int) -> hasPreDecodedFrame
    77:78:void renderFrame(int,android.graphics.Canvas) -> renderFrame
com.facebook.imagepipeline.animated.factory.AnimatedFactoryProvider -> com.facebook.imagepipeline.animated.factory.AnimatedFactoryProvider:
    20:20:void <clinit>() -> <clinit>
    16:16:void <init>() -> <init>
    27:51:com.facebook.imagepipeline.animated.factory.AnimatedFactory getAnimatedFactory(com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory,com.facebook.imagepipeline.core.ExecutorSupplier,com.facebook.imagepipeline.cache.CountingMemoryCache,boolean) -> getAnimatedFactory
com.facebook.imagepipeline.animated.factory.AnimatedImageFactoryImpl -> com.facebook.imagepipeline.animated.factory.AnimatedImageFactoryImpl:
    41:56:void <clinit>() -> <clinit>
    60:63:void <init>(com.facebook.imagepipeline.animated.impl.AnimatedDrawableBackendProvider,com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory) -> <init>
    228:234:com.facebook.common.references.CloseableReference createBitmap(int,int,android.graphics.Bitmap$Config) -> createBitmap
    166:188:com.facebook.common.references.CloseableReference createPreviewBitmap(com.facebook.imagepipeline.animated.base.AnimatedImage,android.graphics.Bitmap$Config,int) -> createPreviewBitmap
    194:220:java.util.List decodeAllFrames(com.facebook.imagepipeline.animated.base.AnimatedImage,android.graphics.Bitmap$Config) -> decodeAllFrames
    76:92:com.facebook.imagepipeline.image.CloseableImage decodeGif(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.common.ImageDecodeOptions,android.graphics.Bitmap$Config) -> decodeGif
    107:123:com.facebook.imagepipeline.image.CloseableImage decodeWebP(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.common.ImageDecodeOptions,android.graphics.Bitmap$Config) -> decodeWebP
    131:158:com.facebook.imagepipeline.image.CloseableImage getCloseableImage(com.facebook.imagepipeline.common.ImageDecodeOptions,com.facebook.imagepipeline.animated.base.AnimatedImage,android.graphics.Bitmap$Config) -> getCloseableImage
    46:49:com.facebook.imagepipeline.animated.factory.AnimatedImageDecoder loadIfPresent(java.lang.String) -> loadIfPresent
com.facebook.imagepipeline.animated.factory.AnimatedImageFactoryImpl$1 -> com.facebook.imagepipeline.animated.factory.AnimatedImageFactoryImpl$1:
    176:176:void <init>(com.facebook.imagepipeline.animated.factory.AnimatedImageFactoryImpl) -> <init>
    184:184:com.facebook.common.references.CloseableReference getCachedBitmap(int) -> getCachedBitmap
    180:180:void onIntermediateResult(int,android.graphics.Bitmap) -> onIntermediateResult
com.facebook.imagepipeline.animated.factory.AnimatedImageFactoryImpl$2 -> com.facebook.imagepipeline.animated.factory.AnimatedImageFactoryImpl$2:
    201:201:void <init>(com.facebook.imagepipeline.animated.factory.AnimatedImageFactoryImpl,java.util.List) -> <init>
    209:209:com.facebook.common.references.CloseableReference getCachedBitmap(int) -> getCachedBitmap
    205:205:void onIntermediateResult(int,android.graphics.Bitmap) -> onIntermediateResult
com.facebook.imagepipeline.animated.impl.AnimatedDrawableBackendImpl -> com.facebook.imagepipeline.animated.impl.AnimatedDrawableBackendImpl:
    39:64:void <init>(com.facebook.imagepipeline.animated.util.AnimatedDrawableUtil,com.facebook.imagepipeline.animated.base.AnimatedImageResult,android.graphics.Rect,boolean) -> <init>
    261:266:void clearTempBitmap() -> clearTempBitmap
    257:259:void dropCaches() -> dropCaches
    145:150:com.facebook.imagepipeline.animated.base.AnimatedDrawableBackend forNewBounds(android.graphics.Rect) -> forNewBounds
    79:79:com.facebook.imagepipeline.animated.base.AnimatedImageResult getAnimatedImageResult() -> getAnimatedImageResult
    67:74:android.graphics.Rect getBoundsToUse(com.facebook.imagepipeline.animated.base.AnimatedImage,android.graphics.Rect) -> getBoundsToUse
    84:84:int getDurationMs() -> getDurationMs
    135:135:int getDurationMsForFrame(int) -> getDurationMsForFrame
    89:89:int getFrameCount() -> getFrameCount
    140:140:int getFrameForPreview() -> getFrameForPreview
    124:124:int getFrameForTimestampMs(int) -> getFrameForTimestampMs
    119:119:com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo getFrameInfo(int) -> getFrameInfo
    104:104:int getHeight() -> getHeight
    94:94:int getLoopCount() -> getLoopCount
    155:161:int getMemoryUsage() -> getMemoryUsage
    166:166:com.facebook.common.references.CloseableReference getPreDecodedFrame(int) -> getPreDecodedFrame
    114:114:int getRenderedHeight() -> getRenderedHeight
    109:109:int getRenderedWidth() -> getRenderedWidth
    129:130:int getTimestampMsForFrame(int) -> getTimestampMsForFrame
    99:99:int getWidth() -> getWidth
    171:171:boolean hasPreDecodedFrame(int) -> hasPreDecodedFrame
    190:199:void prepareTempBitmapForThisSize(int,int) -> prepareTempBitmapForThisSize
    176:186:void renderFrame(int,android.graphics.Canvas) -> renderFrame
    226:254:void renderImageDoesNotSupportScaling(android.graphics.Canvas,com.facebook.imagepipeline.animated.base.AnimatedImageFrame) -> renderImageDoesNotSupportScaling
    202:222:void renderImageSupportsScaling(android.graphics.Canvas,com.facebook.imagepipeline.animated.base.AnimatedImageFrame) -> renderImageSupportsScaling
com.facebook.imagepipeline.animated.impl.AnimatedFrameCache -> com.facebook.imagepipeline.animated.impl.AnimatedFrameCache:
    85:95:void <init>(com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.cache.CountingMemoryCache) -> <init>
    117:117:com.facebook.common.references.CloseableReference cache(int,com.facebook.common.references.CloseableReference) -> cache
    134:134:boolean contains(int) -> contains
    127:127:com.facebook.common.references.CloseableReference get(int) -> get
    149:157:com.facebook.common.references.CloseableReference getForReuse() -> getForReuse
    172:172:com.facebook.imagepipeline.animated.impl.AnimatedFrameCache$FrameKey keyFor(int) -> keyFor
    97:103:void onReusabilityChange(com.facebook.cache.common.CacheKey,boolean) -> onReusabilityChange
    161:168:com.facebook.cache.common.CacheKey popFirstFreeItemKey() -> popFirstFreeItemKey
com.facebook.imagepipeline.animated.impl.AnimatedFrameCache$1 -> com.facebook.imagepipeline.animated.impl.AnimatedFrameCache$1:
    89:89:void <init>(com.facebook.imagepipeline.animated.impl.AnimatedFrameCache) -> <init>
    89:89:void onExclusivityChanged(java.lang.Object,boolean) -> onExclusivityChanged
    92:93:void onExclusivityChanged(com.facebook.cache.common.CacheKey,boolean) -> onExclusivityChanged
com.facebook.imagepipeline.animated.impl.AnimatedFrameCache$FrameKey -> com.facebook.imagepipeline.animated.impl.AnimatedFrameCache$FrameKey:
    35:38:void <init>(com.facebook.cache.common.CacheKey,int) -> <init>
    68:68:boolean containsUri(android.net.Uri) -> containsUri
    50:58:boolean equals(java.lang.Object) -> equals
    73:73:java.lang.String getUriString() -> getUriString
    63:63:int hashCode() -> hashCode
    42:45:java.lang.String toString() -> toString
com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor -> com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor:
    66:73:void <init>(com.facebook.imagepipeline.animated.base.AnimatedDrawableBackend,com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor$Callback) -> <init>
    186:192:void disposeToBackground(android.graphics.Canvas,com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo) -> disposeToBackground
    202:220:com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor$FrameNeededResult isFrameNeededForRendering(int) -> isFrameNeededForRendering
    238:241:boolean isFullFrame(com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo) -> isFullFrame
    225:234:boolean isKeyFrame(int) -> isKeyFrame
    149:182:int prepareCanvasWithClosestCachedFrame(int,android.graphics.Canvas) -> prepareCanvasWithClosestCachedFrame
    82:119:void renderFrame(int,android.graphics.Bitmap) -> renderFrame
com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor$1 -> com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor$1:
    151:151:void <clinit>() -> <clinit>
com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor$FrameNeededResult -> com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor$FrameNeededResult:
    124:135:void <clinit>() -> <clinit>
    124:124:void <init>(java.lang.String,int) -> <init>
    124:124:com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor$FrameNeededResult valueOf(java.lang.String) -> valueOf
    124:124:com.facebook.imagepipeline.animated.impl.AnimatedImageCompositor$FrameNeededResult[] values() -> values
com.facebook.imagepipeline.animated.util.AnimatedDrawableUtil -> com.facebook.imagepipeline.animated.util.AnimatedDrawableUtil:
    18:18:void <init>() -> <init>
    35:40:void fixFrameDurations(int[]) -> fixFrameDurations
    82:86:int getFrameForTimestampMs(int[],int) -> getFrameForTimestampMs
    64:70:int[] getFrameTimeStampsFromDurations(int[]) -> getFrameTimeStampsFromDurations
    92:98:int getSizeOfBitmap(android.graphics.Bitmap) -> getSizeOfBitmap
    49:53:int getTotalDurationFromFrameDurations(int[]) -> getTotalDurationFromFrameDurations
    114:125:boolean isOutsideRange(int,int,int) -> isOutsideRange
com.facebook.imagepipeline.bitmaps.ArtBitmapFactory -> com.facebook.imagepipeline.bitmaps.ArtBitmapFactory:
    28:30:void <init>(com.facebook.imagepipeline.memory.BitmapPool) -> <init>
    46:52:com.facebook.common.references.CloseableReference createBitmapInternal(int,int,android.graphics.Bitmap$Config) -> createBitmapInternal
com.facebook.imagepipeline.bitmaps.EmptyJpegGenerator -> com.facebook.imagepipeline.bitmaps.EmptyJpegGenerator:
    27:53:void <clinit>() -> <clinit>
    161:163:void <init>(com.facebook.common.memory.PooledByteBufferFactory) -> <init>
    166:181:com.facebook.common.references.CloseableReference generate(short,short) -> generate
com.facebook.imagepipeline.bitmaps.GingerbreadBitmapFactory -> com.facebook.imagepipeline.bitmaps.GingerbreadBitmapFactory:
    16:16:void <init>() -> <init>
    33:34:com.facebook.common.references.CloseableReference createBitmapInternal(int,int,android.graphics.Bitmap$Config) -> createBitmapInternal
com.facebook.imagepipeline.bitmaps.HoneycombBitmapCreator -> com.facebook.imagepipeline.bitmaps.HoneycombBitmapCreator:
    30:33:void <init>(com.facebook.imagepipeline.memory.PoolFactory) -> <init>
    39:67:android.graphics.Bitmap createNakedBitmap(int,int,android.graphics.Bitmap$Config) -> createNakedBitmap
    74:86:android.graphics.BitmapFactory$Options getBitmapFactoryOptions(int,android.graphics.Bitmap$Config) -> getBitmapFactoryOptions
com.facebook.imagepipeline.bitmaps.HoneycombBitmapFactory -> com.facebook.imagepipeline.bitmaps.HoneycombBitmapFactory:
    29:29:void <clinit>() -> <clinit>
    35:38:void <init>(com.facebook.imagepipeline.bitmaps.EmptyJpegGenerator,com.facebook.imagepipeline.platform.PlatformDecoder) -> <init>
    57:85:com.facebook.common.references.CloseableReference createBitmapInternal(int,int,android.graphics.Bitmap$Config) -> createBitmapInternal
    91:92:com.facebook.common.references.CloseableReference createFallbackBitmap(int,int,android.graphics.Bitmap$Config) -> createFallbackBitmap
com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory -> com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory:
    25:25:void <init>() -> <init>
    736:742:void checkFinalImageBounds(android.graphics.Bitmap,int,int,int,int) -> checkFinalImageBounds
    711:713:void checkWidthHeight(int,int) -> checkWidthHeight
    722:724:void checkXYSign(int,int) -> checkXYSign
    41:41:com.facebook.common.references.CloseableReference createBitmap(int,int,android.graphics.Bitmap$Config) -> createBitmap
    55:55:com.facebook.common.references.CloseableReference createBitmap(int,int) -> createBitmap
    74:74:com.facebook.common.references.CloseableReference createBitmap(int,int,android.graphics.Bitmap$Config,java.lang.Object) -> createBitmap
    92:92:com.facebook.common.references.CloseableReference createBitmap(int,int,java.lang.Object) -> createBitmap
    108:108:com.facebook.common.references.CloseableReference createBitmap(android.graphics.Bitmap) -> createBitmap
    125:125:com.facebook.common.references.CloseableReference createBitmap(android.graphics.Bitmap,java.lang.Object) -> createBitmap
    150:150:com.facebook.common.references.CloseableReference createBitmap(android.graphics.Bitmap,int,int,int,int) -> createBitmap
    177:177:com.facebook.common.references.CloseableReference createBitmap(android.graphics.Bitmap,int,int,int,int,java.lang.Object) -> createBitmap
    209:209:com.facebook.common.references.CloseableReference createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean) -> createBitmap
    304:356:com.facebook.common.references.CloseableReference createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean,java.lang.Object) -> createBitmap
    378:378:com.facebook.common.references.CloseableReference createBitmap(android.util.DisplayMetrics,int,int,android.graphics.Bitmap$Config) -> createBitmap
    402:402:com.facebook.common.references.CloseableReference createBitmap(android.util.DisplayMetrics,int,int,android.graphics.Bitmap$Config,java.lang.Object) -> createBitmap
    424:424:com.facebook.common.references.CloseableReference createBitmap(int,int,android.graphics.Bitmap$Config,boolean) -> createBitmap
    448:448:com.facebook.common.references.CloseableReference createBitmap(int,int,android.graphics.Bitmap$Config,boolean,java.lang.Object) -> createBitmap
    472:472:com.facebook.common.references.CloseableReference createBitmap(android.util.DisplayMetrics,int,int,android.graphics.Bitmap$Config,boolean) -> createBitmap
    498:514:com.facebook.common.references.CloseableReference createBitmap(android.util.DisplayMetrics,int,int,android.graphics.Bitmap$Config,boolean,java.lang.Object) -> createBitmap
    534:534:com.facebook.common.references.CloseableReference createBitmap(int[],int,int,android.graphics.Bitmap$Config) -> createBitmap
    556:559:com.facebook.common.references.CloseableReference createBitmap(int[],int,int,android.graphics.Bitmap$Config,java.lang.Object) -> createBitmap
    582:582:com.facebook.common.references.CloseableReference createBitmap(android.util.DisplayMetrics,int[],int,int,android.graphics.Bitmap$Config) -> createBitmap
    608:608:com.facebook.common.references.CloseableReference createBitmap(android.util.DisplayMetrics,int[],int,int,android.graphics.Bitmap$Config,java.lang.Object) -> createBitmap
    635:635:com.facebook.common.references.CloseableReference createBitmap(android.util.DisplayMetrics,int[],int,int,int,int,android.graphics.Bitmap$Config) -> createBitmap
    664:672:com.facebook.common.references.CloseableReference createBitmap(android.util.DisplayMetrics,int[],int,int,int,int,android.graphics.Bitmap$Config,java.lang.Object) -> createBitmap
    238:238:com.facebook.common.references.CloseableReference createScaledBitmap(android.graphics.Bitmap,int,int,boolean) -> createScaledBitmap
    261:270:com.facebook.common.references.CloseableReference createScaledBitmap(android.graphics.Bitmap,int,int,boolean,java.lang.Object) -> createScaledBitmap
    682:701:android.graphics.Bitmap$Config getSuitableBitmapConfig(android.graphics.Bitmap) -> getSuitableBitmapConfig
    753:761:void setPropertyFromSourceBitmap(android.graphics.Bitmap,android.graphics.Bitmap) -> setPropertyFromSourceBitmap
com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory$1 -> com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory$1:
    687:687:void <clinit>() -> <clinit>
com.facebook.imagepipeline.bitmaps.PlatformBitmapFactoryProvider -> com.facebook.imagepipeline.bitmaps.PlatformBitmapFactoryProvider:
    16:16:void <init>() -> <init>
    28:34:com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory buildPlatformBitmapFactory(com.facebook.imagepipeline.memory.PoolFactory,com.facebook.imagepipeline.platform.PlatformDecoder) -> buildPlatformBitmapFactory
com.facebook.imagepipeline.bitmaps.SimpleBitmapReleaser -> com.facebook.imagepipeline.bitmaps.SimpleBitmapReleaser:
    27:27:void <init>() -> <init>
    21:24:com.facebook.imagepipeline.bitmaps.SimpleBitmapReleaser getInstance() -> getInstance
    16:16:void release(java.lang.Object) -> release
    31:32:void release(android.graphics.Bitmap) -> release
com.facebook.imagepipeline.cache.BitmapCountingMemoryCacheFactory -> com.facebook.imagepipeline.cache.BitmapCountingMemoryCacheFactory:
    15:15:void <init>() -> <init>
    20:20:com.facebook.imagepipeline.cache.CountingMemoryCache get(com.facebook.common.internal.Supplier,com.facebook.common.memory.MemoryTrimmableRegistry) -> get
    31:44:com.facebook.imagepipeline.cache.CountingMemoryCache get(com.facebook.common.internal.Supplier,com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.cache.CountingMemoryCache$CacheTrimStrategy) -> get
com.facebook.imagepipeline.cache.BitmapCountingMemoryCacheFactory$1 -> com.facebook.imagepipeline.cache.BitmapCountingMemoryCacheFactory$1:
    32:32:void <init>() -> <init>
    32:32:int getSizeInBytes(java.lang.Object) -> getSizeInBytes
    35:35:int getSizeInBytes(com.facebook.imagepipeline.image.CloseableImage) -> getSizeInBytes
com.facebook.imagepipeline.cache.BitmapMemoryCacheFactory -> com.facebook.imagepipeline.cache.BitmapMemoryCacheFactory:
    13:13:void <init>() -> <init>
    19:38:com.facebook.imagepipeline.cache.InstrumentedMemoryCache get(com.facebook.imagepipeline.cache.CountingMemoryCache,com.facebook.imagepipeline.cache.ImageCacheStatsTracker) -> get
com.facebook.imagepipeline.cache.BitmapMemoryCacheFactory$1 -> com.facebook.imagepipeline.cache.BitmapMemoryCacheFactory$1:
    21:21:void <init>(com.facebook.imagepipeline.cache.ImageCacheStatsTracker) -> <init>
    21:21:void onCacheHit(java.lang.Object) -> onCacheHit
    24:25:void onCacheHit(com.facebook.cache.common.CacheKey) -> onCacheHit
    29:30:void onCacheMiss() -> onCacheMiss
    34:35:void onCachePut() -> onCachePut
com.facebook.imagepipeline.cache.BitmapMemoryCacheKey -> com.facebook.imagepipeline.cache.BitmapMemoryCacheKey:
    46:62:void <init>(java.lang.String,com.facebook.imagepipeline.common.ResizeOptions,com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.common.ImageDecodeOptions,com.facebook.cache.common.CacheKey,java.lang.String,java.lang.Object) -> <init>
    86:86:boolean containsUri(android.net.Uri) -> containsUri
    66:76:boolean equals(java.lang.Object) -> equals
    114:114:java.lang.Object getCallerContext() -> getCallerContext
    118:118:long getInBitmapCacheSince() -> getInBitmapCacheSince
    96:96:java.lang.String getPostprocessorName() -> getPostprocessorName
    91:91:java.lang.String getUriString() -> getUriString
    81:81:int hashCode() -> hashCode
    101:110:java.lang.String toString() -> toString
com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy -> com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy:
    22:22:void <init>() -> <init>
    27:43:double getTrimRatio(com.facebook.common.memory.MemoryTrimType) -> getTrimRatio
com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy$1 -> com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy$1:
    27:27:void <clinit>() -> <clinit>
com.facebook.imagepipeline.cache.BufferedDiskCache -> com.facebook.imagepipeline.cache.BufferedDiskCache:
    37:37:void <clinit>() -> <clinit>
    53:61:void <init>(com.facebook.cache.disk.FileCache,com.facebook.common.memory.PooledByteBufferFactory,com.facebook.common.memory.PooledByteStreams,java.util.concurrent.Executor,java.util.concurrent.Executor,com.facebook.imagepipeline.cache.ImageCacheStatsTracker) -> <init>
    36:36:boolean access$000(com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.cache.common.CacheKey) -> access$000
    36:36:com.facebook.imagepipeline.cache.StagingArea access$100(com.facebook.imagepipeline.cache.BufferedDiskCache) -> access$100
    36:36:java.lang.Class access$200() -> access$200
    36:36:com.facebook.imagepipeline.cache.ImageCacheStatsTracker access$300(com.facebook.imagepipeline.cache.BufferedDiskCache) -> access$300
    36:36:com.facebook.common.memory.PooledByteBuffer access$400(com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.cache.common.CacheKey) -> access$400
    36:36:void access$500(com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.EncodedImage) -> access$500
    36:36:com.facebook.cache.disk.FileCache access$600(com.facebook.imagepipeline.cache.BufferedDiskCache) -> access$600
    36:36:com.facebook.common.memory.PooledByteStreams access$700(com.facebook.imagepipeline.cache.BufferedDiskCache) -> access$700
    155:167:boolean checkInStagingAreaAndFileCache(com.facebook.cache.common.CacheKey) -> checkInStagingAreaAndFileCache
    331:347:bolts.Task clearAll() -> clearAll
    83:86:bolts.Task contains(com.facebook.cache.common.CacheKey) -> contains
    91:107:bolts.Task containsAsync(com.facebook.cache.common.CacheKey) -> containsAsync
    72:72:boolean containsSync(com.facebook.cache.common.CacheKey) -> containsSync
    117:120:boolean diskCheckSync(com.facebook.cache.common.CacheKey) -> diskCheckSync
    352:354:bolts.Task foundPinnedImage(com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.EncodedImage) -> foundPinnedImage
    133:143:bolts.Task get(com.facebook.cache.common.CacheKey,java.util.concurrent.atomic.AtomicBoolean) -> get
    174:234:bolts.Task getAsync(com.facebook.cache.common.CacheKey,java.util.concurrent.atomic.AtomicBoolean) -> getAsync
    246:291:void put(com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.EncodedImage) -> put
    360:388:com.facebook.common.memory.PooledByteBuffer readFromDiskCache(com.facebook.cache.common.CacheKey) -> readFromDiskCache
    297:323:bolts.Task remove(com.facebook.cache.common.CacheKey) -> remove
    399:415:void writeToDiskCache(com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.EncodedImage) -> writeToDiskCache
com.facebook.imagepipeline.cache.BufferedDiskCache$1 -> com.facebook.imagepipeline.cache.BufferedDiskCache$1:
    92:92:void <init>(com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.cache.common.CacheKey) -> <init>
    92:92:java.lang.Object call() -> call
    95:95:java.lang.Boolean call() -> call
com.facebook.imagepipeline.cache.BufferedDiskCache$2 -> com.facebook.imagepipeline.cache.BufferedDiskCache$2:
    175:175:void <init>(com.facebook.imagepipeline.cache.BufferedDiskCache,java.util.concurrent.atomic.AtomicBoolean,com.facebook.cache.common.CacheKey) -> <init>
    175:175:java.lang.Object call() -> call
    179:220:com.facebook.imagepipeline.image.EncodedImage call() -> call
com.facebook.imagepipeline.cache.BufferedDiskCache$3 -> com.facebook.imagepipeline.cache.BufferedDiskCache$3:
    262:262:void <init>(com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.EncodedImage) -> <init>
    266:277:void run() -> run
com.facebook.imagepipeline.cache.BufferedDiskCache$4 -> com.facebook.imagepipeline.cache.BufferedDiskCache$4:
    301:301:void <init>(com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.cache.common.CacheKey) -> <init>
    301:301:java.lang.Object call() -> call
    305:315:java.lang.Void call() -> call
com.facebook.imagepipeline.cache.BufferedDiskCache$5 -> com.facebook.imagepipeline.cache.BufferedDiskCache$5:
    334:334:void <init>(com.facebook.imagepipeline.cache.BufferedDiskCache) -> <init>
    334:334:java.lang.Object call() -> call
    337:339:java.lang.Void call() -> call
com.facebook.imagepipeline.cache.BufferedDiskCache$6 -> com.facebook.imagepipeline.cache.BufferedDiskCache$6:
    402:402:void <init>(com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.image.EncodedImage) -> <init>
    405:406:void write(java.io.OutputStream) -> write
com.facebook.imagepipeline.cache.CountingLruMap -> com.facebook.imagepipeline.cache.CountingLruMap:
    26:33:void <init>(com.facebook.imagepipeline.cache.ValueDescriptor) -> <init>
    120:124:java.util.ArrayList clear() -> clear
    75:75:boolean contains(java.lang.Object) -> contains
    81:81:java.lang.Object get(java.lang.Object) -> get
    47:47:int getCount() -> getCount
    58:58:java.lang.Object getFirstKey() -> getFirstKey
    37:37:java.util.ArrayList getKeys() -> getKeys
    63:70:java.util.ArrayList getMatchingEntries(com.facebook.common.internal.Predicate) -> getMatchingEntries
    52:52:int getSizeInBytes() -> getSizeInBytes
    128:128:int getValueSizeInBytes(java.lang.Object) -> getValueSizeInBytes
    42:42:java.util.ArrayList getValues() -> getValues
    88:93:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    98:101:java.lang.Object remove(java.lang.Object) -> remove
    105:116:java.util.ArrayList removeAll(com.facebook.common.internal.Predicate) -> removeAll
com.facebook.imagepipeline.cache.CountingMemoryCache -> com.facebook.imagepipeline.cache.CountingMemoryCache:
    98:98:void <clinit>() -> <clinit>
    110:136:void <init>(com.facebook.imagepipeline.cache.ValueDescriptor,com.facebook.imagepipeline.cache.CountingMemoryCache$CacheTrimStrategy,com.facebook.common.internal.Supplier) -> <init>
    41:41:void access$000(com.facebook.imagepipeline.cache.CountingMemoryCache,com.facebook.imagepipeline.cache.CountingMemoryCache$Entry) -> access$000
    157:157:com.facebook.common.references.CloseableReference cache(java.lang.Object,com.facebook.common.references.CloseableReference) -> cache
    170:197:com.facebook.common.references.CloseableReference cache(java.lang.Object,com.facebook.common.references.CloseableReference,com.facebook.imagepipeline.cache.CountingMemoryCache$EntryStateObserver) -> cache
    201:205:boolean canCacheNewValue(java.lang.Object) -> canCacheNewValue
    323:331:void clear() -> clear
    341:341:boolean contains(com.facebook.common.internal.Predicate) -> contains
    352:352:boolean contains(java.lang.Object) -> contains
    487:491:void decreaseClientCount(com.facebook.imagepipeline.cache.CountingMemoryCache$Entry) -> decreaseClientCount
    215:228:com.facebook.common.references.CloseableReference get(java.lang.Object) -> get
    502:502:int getCount() -> getCount
    522:522:int getEvictionQueueCount() -> getEvictionQueueCount
    527:527:int getEvictionQueueSizeInBytes() -> getEvictionQueueSizeInBytes
    512:512:int getInUseCount() -> getInUseCount
    517:517:int getInUseSizeInBytes() -> getInUseSizeInBytes
    507:507:int getSizeInBytes() -> getSizeInBytes
    480:484:void increaseClientCount(com.facebook.imagepipeline.cache.CountingMemoryCache$Entry) -> increaseClientCount
    473:477:void makeOrphan(com.facebook.imagepipeline.cache.CountingMemoryCache$Entry) -> makeOrphan
    464:470:void makeOrphans(java.util.ArrayList) -> makeOrphans
    261:266:boolean maybeAddToExclusives(com.facebook.imagepipeline.cache.CountingMemoryCache$Entry) -> maybeAddToExclusives
    436:441:void maybeClose(java.util.ArrayList) -> maybeClose
    391:403:void maybeEvictEntries() -> maybeEvictEntries
    458:461:void maybeNotifyExclusiveEntryInsertion(com.facebook.imagepipeline.cache.CountingMemoryCache$Entry) -> maybeNotifyExclusiveEntryInsertion
    444:449:void maybeNotifyExclusiveEntryRemoval(java.util.ArrayList) -> maybeNotifyExclusiveEntryRemoval
    452:455:void maybeNotifyExclusiveEntryRemoval(com.facebook.imagepipeline.cache.CountingMemoryCache$Entry) -> maybeNotifyExclusiveEntryRemoval
    375:381:void maybeUpdateCacheParams() -> maybeUpdateCacheParams
    232:235:com.facebook.common.references.CloseableReference newClientReference(com.facebook.imagepipeline.cache.CountingMemoryCache$Entry) -> newClientReference
    495:497:com.facebook.common.references.CloseableReference referenceToClose(com.facebook.imagepipeline.cache.CountingMemoryCache$Entry) -> referenceToClose
    246:258:void releaseClientReference(com.facebook.imagepipeline.cache.CountingMemoryCache$Entry) -> releaseClientReference
    307:316:int removeAll(com.facebook.common.internal.Predicate) -> removeAll
    276:295:com.facebook.common.references.CloseableReference reuse(java.lang.Object) -> reuse
    359:370:void trim(com.facebook.common.memory.MemoryTrimType) -> trim
    413:426:java.util.ArrayList trimExclusivelyOwnedEntries(int,int) -> trimExclusivelyOwnedEntries
    140:140:com.facebook.imagepipeline.cache.ValueDescriptor wrapValueDescriptor(com.facebook.imagepipeline.cache.ValueDescriptor) -> wrapValueDescriptor
com.facebook.imagepipeline.cache.CountingMemoryCache$1 -> com.facebook.imagepipeline.cache.CountingMemoryCache$1:
    140:140:void <init>(com.facebook.imagepipeline.cache.CountingMemoryCache,com.facebook.imagepipeline.cache.ValueDescriptor) -> <init>
    140:140:int getSizeInBytes(java.lang.Object) -> getSizeInBytes
    143:143:int getSizeInBytes(com.facebook.imagepipeline.cache.CountingMemoryCache$Entry) -> getSizeInBytes
com.facebook.imagepipeline.cache.CountingMemoryCache$2 -> com.facebook.imagepipeline.cache.CountingMemoryCache$2:
    236:236:void <init>(com.facebook.imagepipeline.cache.CountingMemoryCache,com.facebook.imagepipeline.cache.CountingMemoryCache$Entry) -> <init>
    239:240:void release(java.lang.Object) -> release
com.facebook.imagepipeline.cache.CountingMemoryCache$Entry -> com.facebook.imagepipeline.cache.CountingMemoryCache$Entry:
    78:84:void <init>(java.lang.Object,com.facebook.common.references.CloseableReference,com.facebook.imagepipeline.cache.CountingMemoryCache$EntryStateObserver) -> <init>
    92:92:com.facebook.imagepipeline.cache.CountingMemoryCache$Entry of(java.lang.Object,com.facebook.common.references.CloseableReference,com.facebook.imagepipeline.cache.CountingMemoryCache$EntryStateObserver) -> of
com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier -> com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier:
    26:28:void <init>(android.app.ActivityManager) -> <init>
    18:18:java.lang.Object get() -> get
    32:33:com.facebook.imagepipeline.cache.MemoryCacheParams get() -> get
    41:53:int getMaxCacheSize() -> getMaxCacheSize
com.facebook.imagepipeline.cache.DefaultCacheKeyFactory -> com.facebook.imagepipeline.cache.DefaultCacheKeyFactory:
    22:22:void <clinit>() -> <clinit>
    24:25:void <init>() -> <init>
    36:40:com.facebook.cache.common.CacheKey getBitmapCacheKey(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object) -> getBitmapCacheKey
    85:85:android.net.Uri getCacheKeySourceUri(android.net.Uri) -> getCacheKeySourceUri
    70:70:com.facebook.cache.common.CacheKey getEncodedCacheKey(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object) -> getEncodedCacheKey
    78:78:com.facebook.cache.common.CacheKey getEncodedCacheKey(com.facebook.imagepipeline.request.ImageRequest,android.net.Uri,java.lang.Object) -> getEncodedCacheKey
    27:31:com.facebook.imagepipeline.cache.DefaultCacheKeyFactory getInstance() -> getInstance
    48:62:com.facebook.cache.common.CacheKey getPostprocessedBitmapCacheKey(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object) -> getPostprocessedBitmapCacheKey
com.facebook.imagepipeline.cache.DefaultEncodedMemoryCacheParamsSupplier -> com.facebook.imagepipeline.cache.DefaultEncodedMemoryCacheParamsSupplier:
    16:16:void <init>() -> <init>
    16:16:java.lang.Object get() -> get
    24:26:com.facebook.imagepipeline.cache.MemoryCacheParams get() -> get
    35:41:int getMaxCacheSize() -> getMaxCacheSize
com.facebook.imagepipeline.cache.EncodedCountingMemoryCacheFactory -> com.facebook.imagepipeline.cache.EncodedCountingMemoryCacheFactory:
    15:15:void <init>() -> <init>
    21:36:com.facebook.imagepipeline.cache.CountingMemoryCache get(com.facebook.common.internal.Supplier,com.facebook.common.memory.MemoryTrimmableRegistry) -> get
com.facebook.imagepipeline.cache.EncodedCountingMemoryCacheFactory$1 -> com.facebook.imagepipeline.cache.EncodedCountingMemoryCacheFactory$1:
    22:22:void <init>() -> <init>
    22:22:int getSizeInBytes(java.lang.Object) -> getSizeInBytes
    25:25:int getSizeInBytes(com.facebook.common.memory.PooledByteBuffer) -> getSizeInBytes
com.facebook.imagepipeline.cache.EncodedMemoryCacheFactory -> com.facebook.imagepipeline.cache.EncodedMemoryCacheFactory:
    13:13:void <init>() -> <init>
    19:38:com.facebook.imagepipeline.cache.InstrumentedMemoryCache get(com.facebook.imagepipeline.cache.CountingMemoryCache,com.facebook.imagepipeline.cache.ImageCacheStatsTracker) -> get
com.facebook.imagepipeline.cache.EncodedMemoryCacheFactory$1 -> com.facebook.imagepipeline.cache.EncodedMemoryCacheFactory$1:
    21:21:void <init>(com.facebook.imagepipeline.cache.ImageCacheStatsTracker) -> <init>
    21:21:void onCacheHit(java.lang.Object) -> onCacheHit
    24:25:void onCacheHit(com.facebook.cache.common.CacheKey) -> onCacheHit
    29:30:void onCacheMiss() -> onCacheMiss
    34:35:void onCachePut() -> onCachePut
com.facebook.imagepipeline.cache.InstrumentedMemoryCache -> com.facebook.imagepipeline.cache.InstrumentedMemoryCache:
    18:21:void <init>(com.facebook.imagepipeline.cache.MemoryCache,com.facebook.imagepipeline.cache.MemoryCacheTracker) -> <init>
    36:37:com.facebook.common.references.CloseableReference cache(java.lang.Object,com.facebook.common.references.CloseableReference) -> cache
    47:47:boolean contains(com.facebook.common.internal.Predicate) -> contains
    52:52:boolean contains(java.lang.Object) -> contains
    25:31:com.facebook.common.references.CloseableReference get(java.lang.Object) -> get
    42:42:int removeAll(com.facebook.common.internal.Predicate) -> removeAll
com.facebook.imagepipeline.cache.MemoryCacheParams -> com.facebook.imagepipeline.cache.MemoryCacheParams:
    37:43:void <init>(int,int,int,int,int) -> <init>
com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy -> com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy:
    23:23:void <init>() -> <init>
    27:38:double getTrimRatio(com.facebook.common.memory.MemoryTrimType) -> getTrimRatio
com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy$1 -> com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy$1:
    27:27:void <clinit>() -> <clinit>
com.facebook.imagepipeline.cache.NoOpImageCacheStatsTracker -> com.facebook.imagepipeline.cache.NoOpImageCacheStatsTracker:
    16:16:void <clinit>() -> <clinit>
    18:19:void <init>() -> <init>
    21:25:com.facebook.imagepipeline.cache.NoOpImageCacheStatsTracker getInstance() -> getInstance
    34:34:void onBitmapCacheHit(com.facebook.cache.common.CacheKey) -> onBitmapCacheHit
    38:38:void onBitmapCacheMiss() -> onBitmapCacheMiss
    30:30:void onBitmapCachePut() -> onBitmapCachePut
    69:69:void onDiskCacheGetFail() -> onDiskCacheGetFail
    61:61:void onDiskCacheHit(com.facebook.cache.common.CacheKey) -> onDiskCacheHit
    65:65:void onDiskCacheMiss() -> onDiskCacheMiss
    46:46:void onMemoryCacheHit(com.facebook.cache.common.CacheKey) -> onMemoryCacheHit
    50:50:void onMemoryCacheMiss() -> onMemoryCacheMiss
    42:42:void onMemoryCachePut() -> onMemoryCachePut
    54:54:void onStagingAreaHit(com.facebook.cache.common.CacheKey) -> onStagingAreaHit
    58:58:void onStagingAreaMiss() -> onStagingAreaMiss
    73:73:void registerBitmapMemoryCache(com.facebook.imagepipeline.cache.CountingMemoryCache) -> registerBitmapMemoryCache
    77:77:void registerEncodedMemoryCache(com.facebook.imagepipeline.cache.CountingMemoryCache) -> registerEncodedMemoryCache
com.facebook.imagepipeline.cache.StagingArea -> com.facebook.imagepipeline.cache.StagingArea:
    29:29:void <clinit>() -> <clinit>
    34:36:void <init>() -> <init>
    63:73:void clearAll() -> clearAll
    161:182:boolean containsKey(com.facebook.cache.common.CacheKey) -> containsKey
    134:155:com.facebook.imagepipeline.image.EncodedImage get(com.facebook.cache.common.CacheKey) -> get
    39:39:com.facebook.imagepipeline.cache.StagingArea getInstance() -> getInstance
    188:190:void logStats() -> logStats
    48:56:void put(com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.EncodedImage) -> put
    81:92:boolean remove(com.facebook.cache.common.CacheKey) -> remove
    102:127:boolean remove(com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.EncodedImage) -> remove
com.facebook.imagepipeline.common.BytesRange -> com.facebook.imagepipeline.common.BytesRange:
    53:56:void <init>(int,int) -> <init>
    68:72:boolean contains(com.facebook.imagepipeline.common.BytesRange) -> contains
    89:96:boolean equals(java.lang.Object) -> equals
    111:112:com.facebook.imagepipeline.common.BytesRange from(int) -> from
    143:169:com.facebook.imagepipeline.common.BytesRange fromContentRangeHeader(java.lang.String) -> fromContentRangeHeader
    101:101:int hashCode() -> hashCode
    59:59:java.lang.String toHttpRangeHeaderValue() -> toHttpRangeHeaderValue
    122:123:com.facebook.imagepipeline.common.BytesRange toMax(int) -> toMax
    77:77:java.lang.String toString() -> toString
    81:84:java.lang.String valueOrEmpty(int) -> valueOrEmpty
com.facebook.imagepipeline.common.ImageDecodeOptions -> com.facebook.imagepipeline.common.ImageDecodeOptions:
    23:23:void <clinit>() -> <clinit>
    73:83:void <init>(com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder) -> <init>
    91:91:com.facebook.imagepipeline.common.ImageDecodeOptions defaults() -> defaults
    105:118:boolean equals(java.lang.Object) -> equals
    123:132:int hashCode() -> hashCode
    100:100:com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder newBuilder() -> newBuilder
    137:146:java.lang.String toString() -> toString
com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder -> com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder:
    20:31:void <init>() -> <init>
    243:243:com.facebook.imagepipeline.common.ImageDecodeOptions build() -> build
    188:188:android.graphics.Bitmap$Config getBitmapConfig() -> getBitmapConfig
    234:234:com.facebook.imagepipeline.transformation.BitmapTransformation getBitmapTransformation() -> getBitmapTransformation
    170:170:com.facebook.imagepipeline.decoder.ImageDecoder getCustomImageDecoder() -> getCustomImageDecoder
    122:122:boolean getDecodeAllFrames() -> getDecodeAllFrames
    91:91:boolean getDecodePreviewFrame() -> getDecodePreviewFrame
    179:179:boolean getForceStaticImage() -> getForceStaticImage
    71:71:int getMinDecodeIntervalMs() -> getMinDecodeIntervalMs
    206:206:boolean getTransformToSRGB() -> getTransformToSRGB
    100:100:boolean getUseLastFrameForPreview() -> getUseLastFrameForPreview
    196:197:com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder setBitmapConfig(android.graphics.Bitmap$Config) -> setBitmapConfig
    228:229:com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder setBitmapTransformation(com.facebook.imagepipeline.transformation.BitmapTransformation) -> setBitmapTransformation
    159:160:com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder setCustomImageDecoder(com.facebook.imagepipeline.decoder.ImageDecoder) -> setCustomImageDecoder
    134:135:com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder setDecodeAllFrames(boolean) -> setDecodeAllFrames
    81:82:com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder setDecodePreviewFrame(boolean) -> setDecodePreviewFrame
    145:146:com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder setForceStaticImage(boolean) -> setForceStaticImage
    40:48:com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder setFrom(com.facebook.imagepipeline.common.ImageDecodeOptions) -> setFrom
    61:62:com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder setMinDecodeIntervalMs(int) -> setMinDecodeIntervalMs
    216:217:com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder setTransformToSRGB(boolean) -> setTransformToSRGB
    110:111:com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder setUseLastFrameForPreview(boolean) -> setUseLastFrameForPreview
com.facebook.imagepipeline.common.Priority -> com.facebook.imagepipeline.common.Priority:
    15:34:void <clinit>() -> <clinit>
    15:15:void <init>(java.lang.String,int) -> <init>
    45:54:com.facebook.imagepipeline.common.Priority getHigherPriority(com.facebook.imagepipeline.common.Priority,com.facebook.imagepipeline.common.Priority) -> getHigherPriority
    15:15:com.facebook.imagepipeline.common.Priority valueOf(java.lang.String) -> valueOf
    15:15:com.facebook.imagepipeline.common.Priority[] values() -> values
com.facebook.imagepipeline.common.ResizeOptions -> com.facebook.imagepipeline.common.ResizeOptions:
    61:62:void <init>(int,int) -> <init>
    68:69:void <init>(int,int,float) -> <init>
    75:82:void <init>(int,int,float,float) -> <init>
    93:100:boolean equals(java.lang.Object) -> equals
    42:45:com.facebook.imagepipeline.common.ResizeOptions forDimensions(int,int) -> forDimensions
    52:55:com.facebook.imagepipeline.common.ResizeOptions forSquareSize(int) -> forSquareSize
    86:86:int hashCode() -> hashCode
    106:106:java.lang.String toString() -> toString
com.facebook.imagepipeline.common.RotationOptions -> com.facebook.imagepipeline.common.RotationOptions:
    63:69:void <clinit>() -> <clinit>
    114:117:void <init>(int,boolean) -> <init>
    82:82:com.facebook.imagepipeline.common.RotationOptions autoRotate() -> autoRotate
    100:100:com.facebook.imagepipeline.common.RotationOptions autoRotateAtRenderTime() -> autoRotateAtRenderTime
    141:141:boolean canDeferUntilRendered() -> canDeferUntilRendered
    90:90:com.facebook.imagepipeline.common.RotationOptions disableRotation() -> disableRotation
    151:158:boolean equals(java.lang.Object) -> equals
    111:111:com.facebook.imagepipeline.common.RotationOptions forceRotation(int) -> forceRotation
    134:137:int getForcedAngle() -> getForcedAngle
    146:146:int hashCode() -> hashCode
    124:124:boolean rotationEnabled() -> rotationEnabled
    164:164:java.lang.String toString() -> toString
    120:120:boolean useImageMetadata() -> useImageMetadata
com.facebook.imagepipeline.common.TooManyBitmapsException -> com.facebook.imagepipeline.common.TooManyBitmapsException:
    16:17:void <init>() -> <init>
    20:21:void <init>(java.lang.String) -> <init>
com.facebook.imagepipeline.core.DefaultExecutorSupplier -> com.facebook.imagepipeline.core.DefaultExecutorSupplier:
    30:52:void <init>(int) -> <init>
    71:71:java.util.concurrent.Executor forBackgroundTasks() -> forBackgroundTasks
    66:66:java.util.concurrent.Executor forDecode() -> forDecode
    76:76:java.util.concurrent.Executor forLightweightBackgroundTasks() -> forLightweightBackgroundTasks
    56:56:java.util.concurrent.Executor forLocalStorageRead() -> forLocalStorageRead
    61:61:java.util.concurrent.Executor forLocalStorageWrite() -> forLocalStorageWrite
com.facebook.imagepipeline.core.DiskStorageCacheFactory -> com.facebook.imagepipeline.core.DiskStorageCacheFactory:
    24:26:void <init>(com.facebook.imagepipeline.core.DiskStorageFactory) -> <init>
    31:31:com.facebook.cache.disk.DiskStorageCache buildDiskStorageCache(com.facebook.cache.disk.DiskCacheConfig,com.facebook.cache.disk.DiskStorage) -> buildDiskStorageCache
    38:52:com.facebook.cache.disk.DiskStorageCache buildDiskStorageCache(com.facebook.cache.disk.DiskCacheConfig,com.facebook.cache.disk.DiskStorage,java.util.concurrent.Executor) -> buildDiskStorageCache
    57:57:com.facebook.cache.disk.FileCache get(com.facebook.cache.disk.DiskCacheConfig) -> get
com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory -> com.facebook.imagepipeline.core.DynamicDefaultDiskStorageFactory:
    16:16:void <init>() -> <init>
    20:24:com.facebook.cache.disk.DiskStorage get(com.facebook.cache.disk.DiskCacheConfig) -> get
com.facebook.imagepipeline.core.ImagePipeline -> com.facebook.imagepipeline.core.ImagePipeline:
    51:51:void <clinit>() -> <clinit>
    78:91:void <init>(com.facebook.imagepipeline.core.ProducerSequenceFactory,java.util.Set,com.facebook.common.internal.Supplier,com.facebook.imagepipeline.cache.MemoryCache,com.facebook.imagepipeline.cache.MemoryCache,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue,com.facebook.common.internal.Supplier,com.facebook.common.internal.Supplier) -> <init>
    49:49:com.facebook.imagepipeline.cache.BufferedDiskCache access$000(com.facebook.imagepipeline.core.ImagePipeline) -> access$000
    493:495:void clearCaches() -> clearCaches
    485:487:void clearDiskCaches() -> clearDiskCaches
    470:479:void clearMemoryCaches() -> clearMemoryCaches
    462:464:void evictFromCache(android.net.Uri) -> evictFromCache
    439:440:void evictFromDiskCache(android.net.Uri) -> evictFromDiskCache
    448:451:void evictFromDiskCache(com.facebook.imagepipeline.request.ImageRequest) -> evictFromDiskCache
    426:429:void evictFromMemoryCache(android.net.Uri) -> evictFromMemoryCache
    212:212:com.facebook.datasource.DataSource fetchDecodedImage(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object) -> fetchDecodedImage
    228:228:com.facebook.datasource.DataSource fetchDecodedImage(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,com.facebook.imagepipeline.listener.RequestListener) -> fetchDecodedImage
    246:246:com.facebook.datasource.DataSource fetchDecodedImage(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,com.facebook.imagepipeline.request.ImageRequest$RequestLevel) -> fetchDecodedImage
    268:277:com.facebook.datasource.DataSource fetchDecodedImage(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,com.facebook.imagepipeline.request.ImageRequest$RequestLevel,com.facebook.imagepipeline.listener.RequestListener) -> fetchDecodedImage
    295:295:com.facebook.datasource.DataSource fetchEncodedImage(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object) -> fetchEncodedImage
    311:333:com.facebook.datasource.DataSource fetchEncodedImage(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,com.facebook.imagepipeline.listener.RequestListener) -> fetchEncodedImage
    194:194:com.facebook.datasource.DataSource fetchImageFromBitmapCache(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object) -> fetchImageFromBitmapCache
    99:99:java.lang.String generateUniqueFutureId() -> generateUniqueFutureId
    515:515:com.facebook.imagepipeline.cache.MemoryCache getBitmapMemoryCache() -> getBitmapMemoryCache
    638:653:com.facebook.cache.common.CacheKey getCacheKey(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object) -> getCacheKey
    821:821:com.facebook.imagepipeline.cache.CacheKeyFactory getCacheKeyFactory() -> getCacheKeyFactory
    664:673:com.facebook.common.references.CloseableReference getCachedImage(com.facebook.cache.common.CacheKey) -> getCachedImage
    115:115:com.facebook.common.internal.Supplier getDataSourceSupplier(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,com.facebook.imagepipeline.request.ImageRequest$RequestLevel) -> getDataSourceSupplier
    145:145:com.facebook.common.internal.Supplier getDataSourceSupplier(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,com.facebook.imagepipeline.request.ImageRequest$RequestLevel,com.facebook.imagepipeline.listener.RequestListener) -> getDataSourceSupplier
    169:169:com.facebook.common.internal.Supplier getEncodedImageDataSourceSupplier(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object) -> getEncodedImageDataSourceSupplier
    742:742:com.facebook.imagepipeline.core.ProducerSequenceFactory getProducerSequenceFactory() -> getProducerSequenceFactory
    778:788:com.facebook.imagepipeline.listener.RequestListener getRequestListenerForRequest(com.facebook.imagepipeline.request.ImageRequest,com.facebook.imagepipeline.listener.RequestListener) -> getRequestListenerForRequest
    677:681:boolean hasCachedImage(com.facebook.cache.common.CacheKey) -> hasCachedImage
    504:508:boolean isInBitmapMemoryCache(android.net.Uri) -> isInBitmapMemoryCache
    525:533:boolean isInBitmapMemoryCache(com.facebook.imagepipeline.request.ImageRequest) -> isInBitmapMemoryCache
    602:602:com.facebook.datasource.DataSource isInDiskCache(android.net.Uri) -> isInDiskCache
    612:633:com.facebook.datasource.DataSource isInDiskCache(com.facebook.imagepipeline.request.ImageRequest) -> isInDiskCache
    547:548:boolean isInDiskCacheSync(android.net.Uri) -> isInDiskCacheSync
    562:566:boolean isInDiskCacheSync(android.net.Uri,com.facebook.imagepipeline.request.ImageRequest$CacheChoice) -> isInDiskCacheSync
    578:587:boolean isInDiskCacheSync(com.facebook.imagepipeline.request.ImageRequest) -> isInDiskCacheSync
    814:814:com.facebook.common.internal.Supplier isLazyDataSource() -> isLazyDataSource
    810:810:boolean isPaused() -> isPaused
    802:803:void pause() -> pause
    793:793:com.facebook.common.internal.Predicate predicateForUri(android.net.Uri) -> predicateForUri
    349:370:com.facebook.datasource.DataSource prefetchToBitmapCache(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object) -> prefetchToBitmapCache
    386:386:com.facebook.datasource.DataSource prefetchToDiskCache(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object) -> prefetchToDiskCache
    403:416:com.facebook.datasource.DataSource prefetchToDiskCache(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,com.facebook.imagepipeline.common.Priority) -> prefetchToDiskCache
    806:807:void resume() -> resume
    690:717:com.facebook.datasource.DataSource submitFetchRequest(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.request.ImageRequest,com.facebook.imagepipeline.request.ImageRequest$RequestLevel,java.lang.Object,com.facebook.imagepipeline.listener.RequestListener) -> submitFetchRequest
    726:736:com.facebook.datasource.DataSource submitFetchRequest(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.producers.SettableProducerContext,com.facebook.imagepipeline.listener.RequestListener) -> submitFetchRequest
    751:772:com.facebook.datasource.DataSource submitPrefetchRequest(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.request.ImageRequest,com.facebook.imagepipeline.request.ImageRequest$RequestLevel,java.lang.Object,com.facebook.imagepipeline.common.Priority) -> submitPrefetchRequest
com.facebook.imagepipeline.core.ImagePipeline$1 -> com.facebook.imagepipeline.core.ImagePipeline$1:
    115:115:void <init>(com.facebook.imagepipeline.core.ImagePipeline,com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,com.facebook.imagepipeline.request.ImageRequest$RequestLevel) -> <init>
    115:115:java.lang.Object get() -> get
    118:118:com.facebook.datasource.DataSource get() -> get
    123:125:java.lang.String toString() -> toString
com.facebook.imagepipeline.core.ImagePipeline$2 -> com.facebook.imagepipeline.core.ImagePipeline$2:
    145:145:void <init>(com.facebook.imagepipeline.core.ImagePipeline,com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,com.facebook.imagepipeline.request.ImageRequest$RequestLevel,com.facebook.imagepipeline.listener.RequestListener) -> <init>
    145:145:java.lang.Object get() -> get
    148:148:com.facebook.datasource.DataSource get() -> get
    153:153:java.lang.String toString() -> toString
com.facebook.imagepipeline.core.ImagePipeline$3 -> com.facebook.imagepipeline.core.ImagePipeline$3:
    169:169:void <init>(com.facebook.imagepipeline.core.ImagePipeline,com.facebook.imagepipeline.request.ImageRequest,java.lang.Object) -> <init>
    169:169:java.lang.Object get() -> get
    172:172:com.facebook.datasource.DataSource get() -> get
    177:179:java.lang.String toString() -> toString
com.facebook.imagepipeline.core.ImagePipeline$4 -> com.facebook.imagepipeline.core.ImagePipeline$4:
    471:471:void <init>(com.facebook.imagepipeline.core.ImagePipeline) -> <init>
    471:471:boolean apply(java.lang.Object) -> apply
    474:474:boolean apply(com.facebook.cache.common.CacheKey) -> apply
com.facebook.imagepipeline.core.ImagePipeline$5 -> com.facebook.imagepipeline.core.ImagePipeline$5:
    626:626:void <init>(com.facebook.imagepipeline.core.ImagePipeline,com.facebook.datasource.SimpleDataSource) -> <init>
    626:626:java.lang.Object then(bolts.Task) -> then
    629:630:java.lang.Void then(bolts.Task) -> then
com.facebook.imagepipeline.core.ImagePipeline$6 -> com.facebook.imagepipeline.core.ImagePipeline$6:
    616:616:void <init>(com.facebook.imagepipeline.core.ImagePipeline,com.facebook.cache.common.CacheKey) -> <init>
    616:616:java.lang.Object then(bolts.Task) -> then
    619:622:bolts.Task then(bolts.Task) -> then
com.facebook.imagepipeline.core.ImagePipeline$7 -> com.facebook.imagepipeline.core.ImagePipeline$7:
    793:793:void <init>(com.facebook.imagepipeline.core.ImagePipeline,android.net.Uri) -> <init>
    793:793:boolean apply(java.lang.Object) -> apply
    796:796:boolean apply(com.facebook.cache.common.CacheKey) -> apply
com.facebook.imagepipeline.core.ImagePipeline$8 -> com.facebook.imagepipeline.core.ImagePipeline$8:
    581:581:void <clinit>() -> <clinit>
com.facebook.imagepipeline.core.ImagePipelineConfig -> com.facebook.imagepipeline.core.ImagePipelineConfig:
    99:99:void <clinit>() -> <clinit>
    64:64:void <init>(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder,com.facebook.imagepipeline.core.ImagePipelineConfig$1) -> <init>
    101:215:void <init>(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> <init>
    251:251:android.graphics.Bitmap$Config getBitmapConfig() -> getBitmapConfig
    255:255:com.facebook.common.internal.Supplier getBitmapMemoryCacheParamsSupplier() -> getBitmapMemoryCacheParamsSupplier
    259:259:com.facebook.imagepipeline.cache.CountingMemoryCache$CacheTrimStrategy getBitmapMemoryCacheTrimStrategy() -> getBitmapMemoryCacheTrimStrategy
    263:263:com.facebook.imagepipeline.cache.CacheKeyFactory getCacheKeyFactory() -> getCacheKeyFactory
    267:267:android.content.Context getContext() -> getContext
    271:271:com.facebook.imagepipeline.core.ImagePipelineConfig$DefaultImageRequestConfig getDefaultImageRequestConfig() -> getDefaultImageRequestConfig
    234:240:com.facebook.cache.disk.DiskCacheConfig getDefaultMainDiskCacheConfig(android.content.Context) -> getDefaultMainDiskCacheConfig
    287:287:com.facebook.common.internal.Supplier getEncodedMemoryCacheParamsSupplier() -> getEncodedMemoryCacheParamsSupplier
    291:291:com.facebook.imagepipeline.core.ExecutorSupplier getExecutorSupplier() -> getExecutorSupplier
    366:366:com.facebook.imagepipeline.core.ImagePipelineExperiments getExperiments() -> getExperiments
    275:275:com.facebook.imagepipeline.core.FileCacheFactory getFileCacheFactory() -> getFileCacheFactory
    295:295:com.facebook.imagepipeline.cache.ImageCacheStatsTracker getImageCacheStatsTracker() -> getImageCacheStatsTracker
    300:300:com.facebook.imagepipeline.decoder.ImageDecoder getImageDecoder() -> getImageDecoder
    362:362:com.facebook.imagepipeline.decoder.ImageDecoderConfig getImageDecoderConfig() -> getImageDecoderConfig
    305:305:com.facebook.imagepipeline.transcoder.ImageTranscoderFactory getImageTranscoderFactory() -> getImageTranscoderFactory
    375:382:com.facebook.imagepipeline.transcoder.ImageTranscoderFactory getImageTranscoderFactory(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> getImageTranscoderFactory
    311:311:java.lang.Integer getImageTranscoderType() -> getImageTranscoderType
    315:315:com.facebook.common.internal.Supplier getIsPrefetchEnabledSupplier() -> getIsPrefetchEnabledSupplier
    319:319:com.facebook.cache.disk.DiskCacheConfig getMainDiskCacheConfig() -> getMainDiskCacheConfig
    328:328:int getMemoryChunkType() -> getMemoryChunkType
    389:394:int getMemoryChunkType(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder,com.facebook.imagepipeline.core.ImagePipelineExperiments) -> getMemoryChunkType
    323:323:com.facebook.common.memory.MemoryTrimmableRegistry getMemoryTrimmableRegistry() -> getMemoryTrimmableRegistry
    332:332:com.facebook.imagepipeline.producers.NetworkFetcher getNetworkFetcher() -> getNetworkFetcher
    337:337:com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory getPlatformBitmapFactory() -> getPlatformBitmapFactory
    341:341:com.facebook.imagepipeline.memory.PoolFactory getPoolFactory() -> getPoolFactory
    345:345:com.facebook.imagepipeline.decoder.ProgressiveJpegConfig getProgressiveJpegConfig() -> getProgressiveJpegConfig
    349:349:java.util.Set getRequestListeners() -> getRequestListeners
    357:357:com.facebook.cache.disk.DiskCacheConfig getSmallImageDiskCacheConfig() -> getSmallImageDiskCacheConfig
    283:283:boolean isDiskCacheEnabled() -> isDiskCacheEnabled
    279:279:boolean isDownsampleEnabled() -> isDownsampleEnabled
    353:353:boolean isResizeAndRotateEnabledForNetwork() -> isResizeAndRotateEnabledForNetwork
    370:370:com.facebook.imagepipeline.core.ImagePipelineConfig$Builder newBuilder(android.content.Context) -> newBuilder
    247:248:void resetDefaultRequestConfig() -> resetDefaultRequestConfig
    221:230:void setWebpBitmapFactory(com.facebook.common.webp.WebpBitmapFactory,com.facebook.imagepipeline.core.ImagePipelineExperiments,com.facebook.common.webp.BitmapCreator) -> setWebpBitmapFactory
com.facebook.imagepipeline.core.ImagePipelineConfig$1 -> com.facebook.imagepipeline.core.ImagePipelineConfig$1:
    140:140:void <init>(com.facebook.imagepipeline.core.ImagePipelineConfig) -> <init>
    140:140:java.lang.Object get() -> get
    143:143:java.lang.Boolean get() -> get
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder -> com.facebook.imagepipeline.core.ImagePipelineConfig$Builder:
    417:417:void <init>(android.content.Context,com.facebook.imagepipeline.core.ImagePipelineConfig$1) -> <init>
    424:452:void <init>(android.content.Context) -> <init>
    417:417:com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder access$100(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$100
    417:417:com.facebook.imagepipeline.cache.ImageCacheStatsTracker access$1000(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$1000
    417:417:com.facebook.imagepipeline.decoder.ImageDecoder access$1100(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$1100
    417:417:java.lang.Integer access$1200(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$1200
    417:417:com.facebook.common.internal.Supplier access$1300(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$1300
    417:417:com.facebook.cache.disk.DiskCacheConfig access$1400(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$1400
    417:417:com.facebook.common.memory.MemoryTrimmableRegistry access$1500(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$1500
    417:417:int access$1600(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$1600
    417:417:com.facebook.imagepipeline.producers.NetworkFetcher access$1700(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$1700
    417:417:com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory access$1800(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$1800
    417:417:com.facebook.imagepipeline.memory.PoolFactory access$1900(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$1900
    417:417:com.facebook.common.internal.Supplier access$200(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$200
    417:417:com.facebook.imagepipeline.decoder.ProgressiveJpegConfig access$2000(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$2000
    417:417:java.util.Set access$2100(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$2100
    417:417:boolean access$2200(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$2200
    417:417:com.facebook.cache.disk.DiskCacheConfig access$2300(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$2300
    417:417:com.facebook.imagepipeline.decoder.ImageDecoderConfig access$2400(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$2400
    417:417:com.facebook.imagepipeline.core.ExecutorSupplier access$2500(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$2500
    417:417:boolean access$2600(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$2600
    417:417:com.facebook.imagepipeline.transcoder.ImageTranscoderFactory access$2800(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$2800
    417:417:java.lang.Integer access$2900(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$2900
    417:417:android.content.Context access$300(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$300
    417:417:com.facebook.imagepipeline.cache.CountingMemoryCache$CacheTrimStrategy access$400(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$400
    417:417:android.graphics.Bitmap$Config access$500(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$500
    417:417:com.facebook.imagepipeline.cache.CacheKeyFactory access$600(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$600
    417:417:com.facebook.imagepipeline.core.FileCacheFactory access$700(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$700
    417:417:boolean access$800(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$800
    417:417:com.facebook.common.internal.Supplier access$900(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> access$900
    614:614:com.facebook.imagepipeline.core.ImagePipelineConfig build() -> build
    610:610:com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder experiment() -> experiment
    530:530:java.lang.Integer getImageTranscoderType() -> getImageTranscoderType
    561:561:java.lang.Integer getMemoryChunkType() -> getMemoryChunkType
    497:497:boolean isDiskCacheEnabled() -> isDiskCacheEnabled
    488:488:boolean isDownsampleEnabled() -> isDownsampleEnabled
    461:463:com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setBitmapMemoryCacheParamsSupplier(com.facebook.common.internal.Supplier) -> setBitmapMemoryCacheParamsSupplier
    468:469:com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setBitmapMemoryCacheTrimStrategy(com.facebook.imagepipeline.cache.CountingMemoryCache$CacheTrimStrategy) -> setBitmapMemoryCacheTrimStrategy
    455:456:com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setBitmapsConfig(android.graphics.Bitmap$Config) -> setBitmapsConfig
    473:474:com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setCacheKeyFactory(com.facebook.imagepipeline.cache.CacheKeyFactory) -> setCacheKeyFactory
    501:502:com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setDiskCacheEnabled(boolean) -> setDiskCacheEnabled
    492:493:com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setDownsampleEnabled(boolean) -> setDownsampleEnabled
    507:509:com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setEncodedMemoryCacheParamsSupplier(com.facebook.common.internal.Supplier) -> setEncodedMemoryCacheParamsSupplier
    513:514:com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setExecutorSupplier(com.facebook.imagepipeline.core.ExecutorSupplier) -> setExecutorSupplier
    483:484:com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setFileCacheFactory(com.facebook.imagepipeline.core.FileCacheFactory) -> setFileCacheFactory
    478:479:com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setHttpConnectionTimeout(int) -> setHttpConnectionTimeout
    518:519:com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setImageCacheStatsTracker(com.facebook.imagepipeline.cache.ImageCacheStatsTracker) -> setImageCacheStatsTracker
    523:524:com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setImageDecoder(com.facebook.imagepipeline.decoder.ImageDecoder) -> setImageDecoder
    605:606:com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setImageDecoderConfig(com.facebook.imagepipeline.decoder.ImageDecoderConfig) -> setImageDecoderConfig
    539:540:com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setImageTranscoderFactory(com.facebook.imagepipeline.transcoder.ImageTranscoderFactory) -> setImageTranscoderFactory
    534:535:com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setImageTranscoderType(int) -> setImageTranscoderType
    544:545:com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setIsPrefetchEnabledSupplier(com.facebook.common.internal.Supplier) -> setIsPrefetchEnabledSupplier
    549:550:com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setMainDiskCacheConfig(com.facebook.cache.disk.DiskCacheConfig) -> setMainDiskCacheConfig
    565:566:com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setMemoryChunkType(int) -> setMemoryChunkType
    554:555:com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setMemoryTrimmableRegistry(com.facebook.common.memory.MemoryTrimmableRegistry) -> setMemoryTrimmableRegistry
    570:571:com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setNetworkFetcher(com.facebook.imagepipeline.producers.NetworkFetcher) -> setNetworkFetcher
    575:576:com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setPlatformBitmapFactory(com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory) -> setPlatformBitmapFactory
    580:581:com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setPoolFactory(com.facebook.imagepipeline.memory.PoolFactory) -> setPoolFactory
    585:586:com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setProgressiveJpegConfig(com.facebook.imagepipeline.decoder.ProgressiveJpegConfig) -> setProgressiveJpegConfig
    590:591:com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setRequestListeners(java.util.Set) -> setRequestListeners
    595:596:com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setResizeAndRotateEnabledForNetwork(boolean) -> setResizeAndRotateEnabledForNetwork
    600:601:com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setSmallImageDiskCacheConfig(com.facebook.cache.disk.DiskCacheConfig) -> setSmallImageDiskCacheConfig
com.facebook.imagepipeline.core.ImagePipelineConfig$DefaultImageRequestConfig -> com.facebook.imagepipeline.core.ImagePipelineConfig$DefaultImageRequestConfig:
    401:401:void <init>(com.facebook.imagepipeline.core.ImagePipelineConfig$1) -> <init>
    403:406:void <init>() -> <init>
    413:413:boolean isProgressiveRenderingEnabled() -> isProgressiveRenderingEnabled
    409:410:void setProgressiveRenderingEnabled(boolean) -> setProgressiveRenderingEnabled
com.facebook.imagepipeline.core.ImagePipelineExperiments -> com.facebook.imagepipeline.core.ImagePipelineExperiments:
    33:33:void <init>(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder,com.facebook.imagepipeline.core.ImagePipelineExperiments$1) -> <init>
    52:73:void <init>(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder) -> <init>
    125:125:boolean getBitmapPrepareToDrawForPrefetch() -> getBitmapPrepareToDrawForPrefetch
    104:104:int getBitmapPrepareToDrawMaxSizeBytes() -> getBitmapPrepareToDrawMaxSizeBytes
    100:100:int getBitmapPrepareToDrawMinSizeBytes() -> getBitmapPrepareToDrawMinSizeBytes
    129:129:int getMaxBitmapSize() -> getMaxBitmapSize
    116:116:com.facebook.imagepipeline.core.ImagePipelineExperiments$ProducerFactoryMethod getProducerFactoryMethod() -> getProducerFactoryMethod
    96:96:boolean getUseBitmapPrepareToDraw() -> getUseBitmapPrepareToDraw
    76:76:boolean getUseDownsamplingRatioForResizing() -> getUseDownsamplingRatioForResizing
    92:92:com.facebook.common.webp.WebpBitmapFactory getWebpBitmapFactory() -> getWebpBitmapFactory
    88:88:com.facebook.common.webp.WebpBitmapFactory$WebpErrorLogger getWebpErrorLogger() -> getWebpErrorLogger
    84:84:boolean isDecodeCancellationEnabled() -> isDecodeCancellationEnabled
    137:137:boolean isGingerbreadDecoderEnabled() -> isGingerbreadDecoderEnabled
    133:133:com.facebook.common.internal.Supplier isLazyDataSource() -> isLazyDataSource
    108:108:boolean isNativeCodeDisabled() -> isNativeCodeDisabled
    112:112:boolean isPartialImageCachingEnabled() -> isPartialImageCachingEnabled
    80:80:boolean isWebpSupportEnabled() -> isWebpSupportEnabled
    121:121:com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder newBuilder(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> newBuilder
    141:141:boolean shouldDownscaleFrameToDrawableDimensions() -> shouldDownscaleFrameToDrawableDimensions
com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder -> com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder:
    147:166:void <init>(com.facebook.imagepipeline.core.ImagePipelineConfig$Builder) -> <init>
    144:144:boolean access$000(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder) -> access$000
    144:144:com.facebook.common.webp.WebpBitmapFactory$WebpErrorLogger access$100(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder) -> access$100
    144:144:boolean access$1000(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder) -> access$1000
    144:144:com.facebook.imagepipeline.core.ImagePipelineExperiments$ProducerFactoryMethod access$1100(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder) -> access$1100
    144:144:boolean access$200(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder) -> access$200
    144:144:com.facebook.common.webp.WebpBitmapFactory access$300(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder) -> access$300
    144:144:boolean access$400(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder) -> access$400
    144:144:boolean access$500(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder) -> access$500
    144:144:int access$600(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder) -> access$600
    144:144:int access$700(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder) -> access$700
    144:144:int access$800(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder) -> access$800
    144:144:boolean access$900(com.facebook.imagepipeline.core.ImagePipelineExperiments$Builder) -> access$900
    290:290:com.facebook.imagepipeline.core.ImagePipelineExperiments build() -> build
    190:190:boolean isPartialImageCachingEnabled() -> isPartialImageCachingEnabled
    235:239:com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setBitmapPrepareToDraw(boolean,int,int,boolean) -> setBitmapPrepareToDraw
    200:201:com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setDecodeCancellationEnabled(boolean) -> setDecodeCancellationEnabled
    279:280:com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setGingerbreadDecoderEnabled(boolean) -> setGingerbreadDecoderEnabled
    273:274:com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setLazyDataSource(com.facebook.common.internal.Supplier) -> setLazyDataSource
    246:247:com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setMaxBitmapSize(int) -> setMaxBitmapSize
    257:258:com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setNativeCodeDisabled(boolean) -> setNativeCodeDisabled
    185:186:com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setPartialImageCachingEnabled(boolean) -> setPartialImageCachingEnabled
    267:268:com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setProducerFactoryMethod(com.facebook.imagepipeline.core.ImagePipelineExperiments$ProducerFactoryMethod) -> setProducerFactoryMethod
    285:286:com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setShouldDownscaleFrameToDrawableDimensions(boolean) -> setShouldDownscaleFrameToDrawableDimensions
    175:176:com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setUseDownsampligRatioForResizing(boolean) -> setUseDownsampligRatioForResizing
    212:213:com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setWebpBitmapFactory(com.facebook.common.webp.WebpBitmapFactory) -> setWebpBitmapFactory
    206:207:com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setWebpErrorLogger(com.facebook.common.webp.WebpBitmapFactory$WebpErrorLogger) -> setWebpErrorLogger
    169:170:com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setWebpSupportEnabled(boolean) -> setWebpSupportEnabled
com.facebook.imagepipeline.core.ImagePipelineExperiments$DefaultProducerFactoryMethod -> com.facebook.imagepipeline.core.ImagePipelineExperiments$DefaultProducerFactoryMethod:
    318:318:void <init>() -> <init>
    341:341:com.facebook.imagepipeline.core.ProducerFactory createProducerFactory(android.content.Context,com.facebook.common.memory.ByteArrayPool,com.facebook.imagepipeline.decoder.ImageDecoder,com.facebook.imagepipeline.decoder.ProgressiveJpegConfig,boolean,boolean,boolean,com.facebook.imagepipeline.core.ExecutorSupplier,com.facebook.common.memory.PooledByteBufferFactory,com.facebook.imagepipeline.cache.MemoryCache,com.facebook.imagepipeline.cache.MemoryCache,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory,int,int,boolean,int) -> createProducerFactory
com.facebook.imagepipeline.core.ImagePipelineFactory -> com.facebook.imagepipeline.core.ImagePipelineFactory:
    59:61:void <clinit>() -> <clinit>
    138:149:void <init>(com.facebook.imagepipeline.core.ImagePipelineConfig) -> <init>
    166:167:com.facebook.imagepipeline.drawable.DrawableFactory getAnimatedDrawableFactory(android.content.Context) -> getAnimatedDrawableFactory
    153:161:com.facebook.imagepipeline.animated.factory.AnimatedFactory getAnimatedFactory() -> getAnimatedFactory
    172:179:com.facebook.imagepipeline.cache.CountingMemoryCache getBitmapCountingMemoryCache() -> getBitmapCountingMemoryCache
    183:189:com.facebook.imagepipeline.cache.InstrumentedMemoryCache getBitmapMemoryCache() -> getBitmapMemoryCache
    193:198:com.facebook.imagepipeline.cache.CountingMemoryCache getEncodedCountingMemoryCache() -> getEncodedCountingMemoryCache
    202:208:com.facebook.imagepipeline.cache.InstrumentedMemoryCache getEncodedMemoryCache() -> getEncodedMemoryCache
    212:244:com.facebook.imagepipeline.decoder.ImageDecoder getImageDecoder() -> getImageDecoder
    270:285:com.facebook.imagepipeline.core.ImagePipeline getImagePipeline() -> getImagePipeline
    390:405:com.facebook.imagepipeline.transcoder.ImageTranscoderFactory getImageTranscoderFactory() -> getImageTranscoderFactory
    68:68:com.facebook.imagepipeline.core.ImagePipelineFactory getInstance() -> getInstance
    248:258:com.facebook.imagepipeline.cache.BufferedDiskCache getMainBufferedDiskCache() -> getMainBufferedDiskCache
    262:266:com.facebook.cache.disk.FileCache getMainFileCache() -> getMainFileCache
    289:294:com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory getPlatformBitmapFactory() -> getPlatformBitmapFactory
    298:303:com.facebook.imagepipeline.platform.PlatformDecoder getPlatformDecoder() -> getPlatformDecoder
    307:333:com.facebook.imagepipeline.core.ProducerFactory getProducerFactory() -> getProducerFactory
    338:356:com.facebook.imagepipeline.core.ProducerSequenceFactory getProducerSequenceFactory() -> getProducerSequenceFactory
    368:378:com.facebook.imagepipeline.cache.BufferedDiskCache getSmallImageBufferedDiskCache() -> getSmallImageBufferedDiskCache
    360:364:com.facebook.cache.disk.FileCache getSmallImageFileCache() -> getSmallImageFileCache
    105:105:boolean hasBeenInitialized() -> hasBeenInitialized
    82:90:void initialize(android.content.Context) -> initialize
    93:101:void initialize(com.facebook.imagepipeline.core.ImagePipelineConfig) -> initialize
    78:79:void setInstance(com.facebook.imagepipeline.core.ImagePipelineFactory) -> setInstance
    109:115:void shutDown() -> shutDown
com.facebook.imagepipeline.core.PriorityThreadFactory -> com.facebook.imagepipeline.core.PriorityThreadFactory:
    32:33:void <init>(int) -> <init>
    22:39:void <init>(int,java.lang.String,boolean) -> <init>
    16:16:int access$000(com.facebook.imagepipeline.core.PriorityThreadFactory) -> access$000
    43:60:java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.facebook.imagepipeline.core.PriorityThreadFactory$1 -> com.facebook.imagepipeline.core.PriorityThreadFactory$1:
    43:43:void <init>(com.facebook.imagepipeline.core.PriorityThreadFactory,java.lang.Runnable) -> <init>
    47:52:void run() -> run
com.facebook.imagepipeline.core.ProducerFactory -> com.facebook.imagepipeline.core.ProducerFactory:
    121:148:void <init>(android.content.Context,com.facebook.common.memory.ByteArrayPool,com.facebook.imagepipeline.decoder.ImageDecoder,com.facebook.imagepipeline.decoder.ProgressiveJpegConfig,boolean,boolean,boolean,com.facebook.imagepipeline.core.ExecutorSupplier,com.facebook.common.memory.PooledByteBufferFactory,com.facebook.imagepipeline.cache.MemoryCache,com.facebook.imagepipeline.cache.MemoryCache,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory,int,int,boolean,int) -> <init>
    152:152:com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer newAddImageTransformMetaDataProducer(com.facebook.imagepipeline.producers.Producer) -> newAddImageTransformMetaDataProducer
    338:338:com.facebook.imagepipeline.producers.ThreadHandoffProducer newBackgroundThreadHandoffProducer(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue) -> newBackgroundThreadHandoffProducer
    157:157:com.facebook.imagepipeline.producers.BitmapMemoryCacheGetProducer newBitmapMemoryCacheGetProducer(com.facebook.imagepipeline.producers.Producer) -> newBitmapMemoryCacheGetProducer
    162:162:com.facebook.imagepipeline.producers.BitmapMemoryCacheKeyMultiplexProducer newBitmapMemoryCacheKeyMultiplexProducer(com.facebook.imagepipeline.producers.Producer) -> newBitmapMemoryCacheKeyMultiplexProducer
    167:167:com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer newBitmapMemoryCacheProducer(com.facebook.imagepipeline.producers.Producer) -> newBitmapMemoryCacheProducer
    361:361:com.facebook.imagepipeline.producers.BitmapPrepareProducer newBitmapPrepareProducer(com.facebook.imagepipeline.producers.Producer) -> newBitmapPrepareProducer
    173:173:com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer newBranchOnSeparateImagesProducer(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.producers.Producer) -> newBranchOnSeparateImagesProducer
    177:177:com.facebook.imagepipeline.producers.DataFetchProducer newDataFetchProducer() -> newDataFetchProducer
    181:183:com.facebook.imagepipeline.producers.DecodeProducer newDecodeProducer(com.facebook.imagepipeline.producers.Producer) -> newDecodeProducer
    195:195:com.facebook.imagepipeline.producers.DiskCacheReadProducer newDiskCacheReadProducer(com.facebook.imagepipeline.producers.Producer) -> newDiskCacheReadProducer
    205:205:com.facebook.imagepipeline.producers.DiskCacheWriteProducer newDiskCacheWriteProducer(com.facebook.imagepipeline.producers.Producer) -> newDiskCacheWriteProducer
    225:225:com.facebook.imagepipeline.producers.EncodedCacheKeyMultiplexProducer newEncodedCacheKeyMultiplexProducer(com.facebook.imagepipeline.producers.Producer) -> newEncodedCacheKeyMultiplexProducer
    232:232:com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer newEncodedMemoryCacheProducer(com.facebook.imagepipeline.producers.Producer) -> newEncodedMemoryCacheProducer
    239:240:com.facebook.imagepipeline.producers.LocalAssetFetchProducer newLocalAssetFetchProducer() -> newLocalAssetFetchProducer
    246:247:com.facebook.imagepipeline.producers.LocalContentUriFetchProducer newLocalContentUriFetchProducer() -> newLocalContentUriFetchProducer
    253:254:com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer newLocalContentUriThumbnailFetchProducer() -> newLocalContentUriThumbnailFetchProducer
    260:261:com.facebook.imagepipeline.producers.LocalExifThumbnailProducer newLocalExifThumbnailProducer() -> newLocalExifThumbnailProducer
    272:273:com.facebook.imagepipeline.producers.LocalFileFetchProducer newLocalFileFetchProducer() -> newLocalFileFetchProducer
    285:286:com.facebook.imagepipeline.producers.LocalResourceFetchProducer newLocalResourceFetchProducer() -> newLocalResourceFetchProducer
    292:293:com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer newLocalVideoThumbnailProducer() -> newLocalVideoThumbnailProducer
    298:298:com.facebook.imagepipeline.producers.NetworkFetchProducer newNetworkFetchProducer(com.facebook.imagepipeline.producers.NetworkFetcher) -> newNetworkFetchProducer
    305:305:com.facebook.imagepipeline.producers.NullProducer newNullProducer() -> newNullProducer
    215:215:com.facebook.imagepipeline.producers.PartialDiskCacheProducer newPartialDiskCacheProducer(com.facebook.imagepipeline.producers.Producer) -> newPartialDiskCacheProducer
    310:310:com.facebook.imagepipeline.producers.PostprocessedBitmapMemoryCacheProducer newPostprocessorBitmapMemoryCacheProducer(com.facebook.imagepipeline.producers.Producer) -> newPostprocessorBitmapMemoryCacheProducer
    316:317:com.facebook.imagepipeline.producers.PostprocessorProducer newPostprocessorProducer(com.facebook.imagepipeline.producers.Producer) -> newPostprocessorProducer
    278:279:com.facebook.imagepipeline.producers.QualifiedResourceFetchProducer newQualifiedResourceFetchProducer() -> newQualifiedResourceFetchProducer
    324:325:com.facebook.imagepipeline.producers.ResizeAndRotateProducer newResizeAndRotateProducer(com.facebook.imagepipeline.producers.Producer,boolean,com.facebook.imagepipeline.transcoder.ImageTranscoderFactory) -> newResizeAndRotateProducer
    333:333:com.facebook.imagepipeline.producers.SwallowResultProducer newSwallowResultProducer(com.facebook.imagepipeline.producers.Producer) -> newSwallowResultProducer
    345:347:com.facebook.imagepipeline.producers.ThrottlingProducer newThrottlingProducer(com.facebook.imagepipeline.producers.Producer) -> newThrottlingProducer
    268:268:com.facebook.imagepipeline.producers.ThumbnailBranchProducer newThumbnailBranchProducer(com.facebook.imagepipeline.producers.ThumbnailProducer[]) -> newThumbnailBranchProducer
    353:354:com.facebook.imagepipeline.producers.WebpTranscodeProducer newWebpTranscodeProducer(com.facebook.imagepipeline.producers.Producer) -> newWebpTranscodeProducer
com.facebook.imagepipeline.core.ProducerSequenceFactory -> com.facebook.imagepipeline.core.ProducerSequenceFactory:
    111:126:void <init>(android.content.ContentResolver,com.facebook.imagepipeline.core.ProducerFactory,com.facebook.imagepipeline.producers.NetworkFetcher,boolean,boolean,com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue,boolean,boolean,boolean,boolean,com.facebook.imagepipeline.transcoder.ImageTranscoderFactory) -> <init>
    483:509:com.facebook.imagepipeline.producers.Producer getBackgroundLocalFileFetchToEncodeMemorySequence() -> getBackgroundLocalFileFetchToEncodeMemorySequence
    369:390:com.facebook.imagepipeline.producers.Producer getBackgroundNetworkFetchToEncodedMemorySequence() -> getBackgroundNetworkFetchToEncodedMemorySequence
    301:335:com.facebook.imagepipeline.producers.Producer getBasicDecodedImageSequence(com.facebook.imagepipeline.request.ImageRequest) -> getBasicDecodedImageSequence
    818:827:com.facebook.imagepipeline.producers.Producer getBitmapPrepareSequence(com.facebook.imagepipeline.producers.Producer) -> getBitmapPrepareSequence
    421:449:com.facebook.imagepipeline.producers.Producer getCommonNetworkFetchToEncodedMemorySequence() -> getCommonNetworkFetchToEncodedMemorySequence
    634:646:com.facebook.imagepipeline.producers.Producer getDataFetchSequence() -> getDataFetchSequence
    288:295:com.facebook.imagepipeline.producers.Producer getDecodedImagePrefetchProducerSequence(com.facebook.imagepipeline.request.ImageRequest) -> getDecodedImagePrefetchProducerSequence
    805:811:com.facebook.imagepipeline.producers.Producer getDecodedImagePrefetchSequence(com.facebook.imagepipeline.producers.Producer) -> getDecodedImagePrefetchSequence
    261:277:com.facebook.imagepipeline.producers.Producer getDecodedImageProducerSequence(com.facebook.imagepipeline.request.ImageRequest) -> getDecodedImageProducerSequence
    230:242:com.facebook.imagepipeline.producers.Producer getEncodedImagePrefetchProducerSequence(com.facebook.imagepipeline.request.ImageRequest) -> getEncodedImagePrefetchProducerSequence
    138:157:com.facebook.imagepipeline.producers.Producer getEncodedImageProducerSequence(com.facebook.imagepipeline.request.ImageRequest) -> getEncodedImageProducerSequence
    619:626:com.facebook.imagepipeline.producers.Producer getLocalAssetFetchSequence() -> getLocalAssetFetchSequence
    557:570:com.facebook.imagepipeline.producers.Producer getLocalContentUriFetchSequence() -> getLocalContentUriFetchSequence
    196:217:com.facebook.imagepipeline.producers.Producer getLocalFileFetchEncodedImageProducerSequence() -> getLocalFileFetchEncodedImageProducerSequence
    456:476:com.facebook.imagepipeline.producers.Producer getLocalFileFetchToEncodedMemoryPrefetchSequence() -> getLocalFileFetchToEncodedMemoryPrefetchSequence
    521:528:com.facebook.imagepipeline.producers.Producer getLocalImageFileFetchSequence() -> getLocalImageFileFetchSequence
    601:608:com.facebook.imagepipeline.producers.Producer getLocalResourceFetchSequence() -> getLocalResourceFetchSequence
    536:543:com.facebook.imagepipeline.producers.Producer getLocalVideoFileFetchSequence() -> getLocalVideoFileFetchSequence
    167:188:com.facebook.imagepipeline.producers.Producer getNetworkFetchEncodedImageProducerSequence() -> getNetworkFetchEncodedImageProducerSequence
    345:362:com.facebook.imagepipeline.producers.Producer getNetworkFetchSequence() -> getNetworkFetchSequence
    397:417:com.facebook.imagepipeline.producers.Producer getNetworkFetchToEncodedMemoryPrefetchSequence() -> getNetworkFetchToEncodedMemoryPrefetchSequence
    790:798:com.facebook.imagepipeline.producers.Producer getPostprocessorSequence(com.facebook.imagepipeline.producers.Producer) -> getPostprocessorSequence
    582:589:com.facebook.imagepipeline.producers.Producer getQualifiedResourceFetchSequence() -> getQualifiedResourceFetchSequence
    831:832:java.lang.String getShortenedUriString(android.net.Uri) -> getShortenedUriString
    742:750:com.facebook.imagepipeline.producers.Producer newBitmapCacheGetToBitmapCacheSequence(com.facebook.imagepipeline.producers.Producer) -> newBitmapCacheGetToBitmapCacheSequence
    685:694:com.facebook.imagepipeline.producers.Producer newBitmapCacheGetToDecodeSequence(com.facebook.imagepipeline.producers.Producer) -> newBitmapCacheGetToDecodeSequence
    656:658:com.facebook.imagepipeline.producers.Producer newBitmapCacheGetToLocalTransformSequence(com.facebook.imagepipeline.producers.Producer) -> newBitmapCacheGetToLocalTransformSequence
    671:674:com.facebook.imagepipeline.producers.Producer newBitmapCacheGetToLocalTransformSequence(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.producers.ThumbnailProducer[]) -> newBitmapCacheGetToLocalTransformSequence
    718:732:com.facebook.imagepipeline.producers.Producer newDiskCacheSequence(com.facebook.imagepipeline.producers.Producer) -> newDiskCacheSequence
    704:713:com.facebook.imagepipeline.producers.Producer newEncodedCacheMultiplexToTranscodeSequence(com.facebook.imagepipeline.producers.Producer) -> newEncodedCacheMultiplexToTranscodeSequence
    780:782:com.facebook.imagepipeline.producers.Producer newLocalThumbnailProducer(com.facebook.imagepipeline.producers.ThumbnailProducer[]) -> newLocalThumbnailProducer
    765:774:com.facebook.imagepipeline.producers.Producer newLocalTransformationsSequence(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.producers.ThumbnailProducer[]) -> newLocalTransformationsSequence
    247:251:void validateEncodedImageRequest(com.facebook.imagepipeline.request.ImageRequest) -> validateEncodedImageRequest
com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter -> com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter:
    38:65:void <init>(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.producers.SettableProducerContext,com.facebook.imagepipeline.listener.RequestListener) -> <init>
    29:29:void access$000(com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter,java.lang.Throwable) -> access$000
    29:29:void access$100(com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter) -> access$100
    29:29:boolean access$200(com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter,float) -> access$200
    124:131:boolean close() -> close
    68:68:com.facebook.imagepipeline.producers.Consumer createConsumer() -> createConsumer
    119:119:com.facebook.imagepipeline.request.ImageRequest getImageRequest() -> getImageRequest
    113:115:void onCancellationImpl() -> onCancellationImpl
    104:111:void onFailureImpl(java.lang.Throwable) -> onFailureImpl
    92:101:void onNewResultImpl(java.lang.Object,int) -> onNewResultImpl
com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter$1 -> com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter$1:
    68:68:void <init>(com.facebook.imagepipeline.datasource.AbstractProducerToDataSourceAdapter) -> <init>
    81:82:void onCancellationImpl() -> onCancellationImpl
    76:77:void onFailureImpl(java.lang.Throwable) -> onFailureImpl
    71:72:void onNewResultImpl(java.lang.Object,int) -> onNewResultImpl
    86:87:void onProgressUpdateImpl(float) -> onProgressUpdateImpl
com.facebook.imagepipeline.datasource.BaseBitmapDataSubscriber -> com.facebook.imagepipeline.datasource.BaseBitmapDataSubscriber:
    43:43:void <init>() -> <init>
    48:64:void onNewResultImpl(com.facebook.datasource.DataSource) -> onNewResultImpl
com.facebook.imagepipeline.datasource.BaseBitmapReferenceDataSubscriber -> com.facebook.imagepipeline.datasource.BaseBitmapReferenceDataSubscriber:
    45:45:void <init>() -> <init>
    50:67:void onNewResultImpl(com.facebook.datasource.DataSource) -> onNewResultImpl
com.facebook.imagepipeline.datasource.BaseListBitmapDataSubscriber -> com.facebook.imagepipeline.datasource.BaseListBitmapDataSubscriber:
    43:43:void <init>() -> <init>
    48:72:void onNewResultImpl(com.facebook.datasource.DataSource) -> onNewResultImpl
com.facebook.imagepipeline.datasource.CloseableProducerToDataSourceAdapter -> com.facebook.imagepipeline.datasource.CloseableProducerToDataSourceAdapter:
    47:48:void <init>(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.producers.SettableProducerContext,com.facebook.imagepipeline.listener.RequestListener) -> <init>
    24:24:void closeResult(java.lang.Object) -> closeResult
    58:59:void closeResult(com.facebook.common.references.CloseableReference) -> closeResult
    32:40:com.facebook.datasource.DataSource create(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.producers.SettableProducerContext,com.facebook.imagepipeline.listener.RequestListener) -> create
    24:24:java.lang.Object getResult() -> getResult
    53:53:com.facebook.common.references.CloseableReference getResult() -> getResult
    24:24:void onNewResultImpl(java.lang.Object,int) -> onNewResultImpl
    63:64:void onNewResultImpl(com.facebook.common.references.CloseableReference,int) -> onNewResultImpl
com.facebook.imagepipeline.datasource.ListDataSource -> com.facebook.imagepipeline.datasource.ListDataSource:
    36:39:void <init>(com.facebook.datasource.DataSource[]) -> <init>
    31:31:void access$100(com.facebook.imagepipeline.datasource.ListDataSource,com.facebook.datasource.DataSource) -> access$100
    31:31:void access$200(com.facebook.imagepipeline.datasource.ListDataSource) -> access$200
    31:31:void access$300(com.facebook.imagepipeline.datasource.ListDataSource) -> access$300
    31:31:void access$400(com.facebook.imagepipeline.datasource.ListDataSource) -> access$400
    76:82:boolean close() -> close
    43:53:com.facebook.imagepipeline.datasource.ListDataSource create(com.facebook.datasource.DataSource[]) -> create
    31:31:java.lang.Object getResult() -> getResult
    58:66:java.util.List getResult() -> getResult
    71:71:boolean hasResult() -> hasResult
    92:92:boolean increaseAndCheckIfLast() -> increaseAndCheckIfLast
    100:101:void onDataSourceCancelled() -> onDataSourceCancelled
    96:97:void onDataSourceFailed(com.facebook.datasource.DataSource) -> onDataSourceFailed
    86:89:void onDataSourceFinished() -> onDataSourceFinished
    104:109:void onDataSourceProgress() -> onDataSourceProgress
com.facebook.imagepipeline.datasource.ListDataSource$InternalDataSubscriber -> com.facebook.imagepipeline.datasource.ListDataSource$InternalDataSubscriber:
    111:112:void <init>(com.facebook.imagepipeline.datasource.ListDataSource) -> <init>
    111:111:void <init>(com.facebook.imagepipeline.datasource.ListDataSource,com.facebook.imagepipeline.datasource.ListDataSource$1) -> <init>
    130:131:void onCancellation(com.facebook.datasource.DataSource) -> onCancellation
    125:126:void onFailure(com.facebook.datasource.DataSource) -> onFailure
    135:138:void onNewResult(com.facebook.datasource.DataSource) -> onNewResult
    142:143:void onProgressUpdate(com.facebook.datasource.DataSource) -> onProgressUpdate
    115:120:boolean tryFinish() -> tryFinish
com.facebook.imagepipeline.datasource.ProducerToDataSourceAdapter -> com.facebook.imagepipeline.datasource.ProducerToDataSourceAdapter:
    39:40:void <init>(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.producers.SettableProducerContext,com.facebook.imagepipeline.listener.RequestListener) -> <init>
    29:29:com.facebook.datasource.DataSource create(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.producers.SettableProducerContext,com.facebook.imagepipeline.listener.RequestListener) -> create
com.facebook.imagepipeline.datasource.SettableDataSource -> com.facebook.imagepipeline.datasource.SettableDataSource:
    33:34:void <init>() -> <init>
    23:23:void closeResult(java.lang.Object) -> closeResult
    90:91:void closeResult(com.facebook.common.references.CloseableReference) -> closeResult
    30:30:com.facebook.imagepipeline.datasource.SettableDataSource create() -> create
    23:23:java.lang.Object getResult() -> getResult
    85:85:com.facebook.common.references.CloseableReference getResult() -> getResult
    49:50:boolean set(com.facebook.common.references.CloseableReference) -> set
    63:63:boolean setException(java.lang.Throwable) -> setException
    74:74:boolean setProgress(float) -> setProgress
com.facebook.imagepipeline.decoder.DecodeException -> com.facebook.imagepipeline.decoder.DecodeException:
    17:19:void <init>(java.lang.String,com.facebook.imagepipeline.image.EncodedImage) -> <init>
    22:24:void <init>(java.lang.String,java.lang.Throwable,com.facebook.imagepipeline.image.EncodedImage) -> <init>
    27:27:com.facebook.imagepipeline.image.EncodedImage getEncodedImage() -> getEncodedImage
com.facebook.imagepipeline.decoder.DefaultImageDecoder -> com.facebook.imagepipeline.decoder.DefaultImageDecoder:
    77:78:void <init>(com.facebook.imagepipeline.decoder.ImageDecoder,com.facebook.imagepipeline.decoder.ImageDecoder,com.facebook.imagepipeline.platform.PlatformDecoder) -> <init>
    48:89:void <init>(com.facebook.imagepipeline.decoder.ImageDecoder,com.facebook.imagepipeline.decoder.ImageDecoder,com.facebook.imagepipeline.platform.PlatformDecoder,java.util.Map) -> <init>
    106:121:com.facebook.imagepipeline.image.CloseableImage decode(com.facebook.imagepipeline.image.EncodedImage,int,com.facebook.imagepipeline.image.QualityInfo,com.facebook.imagepipeline.common.ImageDecodeOptions) -> decode
    205:205:com.facebook.imagepipeline.image.CloseableImage decodeAnimatedWebp(com.facebook.imagepipeline.image.EncodedImage,int,com.facebook.imagepipeline.image.QualityInfo,com.facebook.imagepipeline.common.ImageDecodeOptions) -> decodeAnimatedWebp
    135:138:com.facebook.imagepipeline.image.CloseableImage decodeGif(com.facebook.imagepipeline.image.EncodedImage,int,com.facebook.imagepipeline.image.QualityInfo,com.facebook.imagepipeline.common.ImageDecodeOptions) -> decodeGif
    176:187:com.facebook.imagepipeline.image.CloseableStaticBitmap decodeJpeg(com.facebook.imagepipeline.image.EncodedImage,int,com.facebook.imagepipeline.image.QualityInfo,com.facebook.imagepipeline.common.ImageDecodeOptions) -> decodeJpeg
    148:159:com.facebook.imagepipeline.image.CloseableStaticBitmap decodeStaticImage(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.common.ImageDecodeOptions) -> decodeStaticImage
    210:219:void maybeApplyTransformation(com.facebook.imagepipeline.transformation.BitmapTransformation,com.facebook.common.references.CloseableReference) -> maybeApplyTransformation
com.facebook.imagepipeline.decoder.DefaultImageDecoder$1 -> com.facebook.imagepipeline.decoder.DefaultImageDecoder$1:
    49:49:void <init>(com.facebook.imagepipeline.decoder.DefaultImageDecoder) -> <init>
    56:66:com.facebook.imagepipeline.image.CloseableImage decode(com.facebook.imagepipeline.image.EncodedImage,int,com.facebook.imagepipeline.image.QualityInfo,com.facebook.imagepipeline.common.ImageDecodeOptions) -> decode
com.facebook.imagepipeline.decoder.ImageDecoderConfig -> com.facebook.imagepipeline.decoder.ImageDecoderConfig:
    18:18:void <init>(com.facebook.imagepipeline.decoder.ImageDecoderConfig$Builder,com.facebook.imagepipeline.decoder.ImageDecoderConfig$1) -> <init>
    24:27:void <init>(com.facebook.imagepipeline.decoder.ImageDecoderConfig$Builder) -> <init>
    30:30:java.util.Map getCustomImageDecoders() -> getCustomImageDecoders
    34:34:java.util.List getCustomImageFormats() -> getCustomImageFormats
    38:38:com.facebook.imagepipeline.decoder.ImageDecoderConfig$Builder newBuilder() -> newBuilder
com.facebook.imagepipeline.decoder.ImageDecoderConfig$Builder -> com.facebook.imagepipeline.decoder.ImageDecoderConfig$Builder:
    40:40:void <init>() -> <init>
    40:40:java.util.Map access$000(com.facebook.imagepipeline.decoder.ImageDecoderConfig$Builder) -> access$000
    40:40:java.util.List access$100(com.facebook.imagepipeline.decoder.ImageDecoderConfig$Builder) -> access$100
    56:61:com.facebook.imagepipeline.decoder.ImageDecoderConfig$Builder addDecodingCapability(com.facebook.imageformat.ImageFormat,com.facebook.imageformat.ImageFormat$FormatChecker,com.facebook.imagepipeline.decoder.ImageDecoder) -> addDecodingCapability
    82:82:com.facebook.imagepipeline.decoder.ImageDecoderConfig build() -> build
    74:78:com.facebook.imagepipeline.decoder.ImageDecoderConfig$Builder overrideDecoder(com.facebook.imageformat.ImageFormat,com.facebook.imagepipeline.decoder.ImageDecoder) -> overrideDecoder
com.facebook.imagepipeline.decoder.ProgressiveJpegParser -> com.facebook.imagepipeline.decoder.ProgressiveJpegParser:
    93:102:void <init>(com.facebook.common.memory.ByteArrayPool) -> <init>
    151:237:boolean doParseMoreData(java.io.InputStream) -> doParseMoreData
    244:252:boolean doesMarkerStartSegment(int) -> doesMarkerStartSegment
    270:270:int getBestScanEndOffset() -> getBestScanEndOffset
    277:277:int getBestScanNumber() -> getBestScanNumber
    284:284:boolean isEndMarkerRead() -> isEndMarkerRead
    263:263:boolean isJpeg() -> isJpeg
    256:260:void newScanOrImageEndFound(int) -> newScanOrImageEndFound
    116:141:boolean parseMoreData(com.facebook.imagepipeline.image.EncodedImage) -> parseMoreData
com.facebook.imagepipeline.decoder.SimpleProgressiveJpegConfig -> com.facebook.imagepipeline.decoder.SimpleProgressiveJpegConfig:
    40:41:void <init>() -> <init>
    45:47:void <init>(com.facebook.imagepipeline.decoder.SimpleProgressiveJpegConfig$DynamicValueConfig) -> <init>
    51:61:int getNextScanNumberToDecode(int) -> getNextScanNumberToDecode
    66:68:com.facebook.imagepipeline.image.QualityInfo getQualityInfo(int) -> getQualityInfo
com.facebook.imagepipeline.decoder.SimpleProgressiveJpegConfig$DefaultDynamicValueConfig -> com.facebook.imagepipeline.decoder.SimpleProgressiveJpegConfig$DefaultDynamicValueConfig:
    27:27:void <init>() -> <init>
    27:27:void <init>(com.facebook.imagepipeline.decoder.SimpleProgressiveJpegConfig$1) -> <init>
    33:33:int getGoodEnoughScanNumber() -> getGoodEnoughScanNumber
    29:29:java.util.List getScansToDecode() -> getScansToDecode
com.facebook.imagepipeline.filter.InPlaceRoundFilter -> com.facebook.imagepipeline.filter.InPlaceRoundFilter:
    19:19:void <init>() -> <init>
    29:132:void roundBitmapInPlace(android.graphics.Bitmap) -> roundBitmapInPlace
com.facebook.imagepipeline.filter.IterativeBoxBlurFilter -> com.facebook.imagepipeline.filter.IterativeBoxBlurFilter:
    15:15:void <init>() -> <init>
    189:189:int bound(int,int,int) -> bound
    37:57:void boxBlurBitmapInPlace(android.graphics.Bitmap,int,int) -> boxBlurBitmapInPlace
    60:102:void fastBoxBlur(android.graphics.Bitmap,int,int) -> fastBoxBlur
    114:143:void internalHorizontalBlur(int[],int[],int,int,int,int[]) -> internalHorizontalBlur
    155:186:void internalVerticalBlur(int[],int[],int,int,int,int,int[]) -> internalVerticalBlur
com.facebook.imagepipeline.filter.RenderScriptBlurFilter -> com.facebook.imagepipeline.filter.RenderScriptBlurFilter:
    19:19:void <init>() -> <init>
    36:61:void blurBitmap(android.graphics.Bitmap,android.graphics.Bitmap,android.content.Context,int) -> blurBitmap
    64:64:boolean canUseRenderScript() -> canUseRenderScript
com.facebook.imagepipeline.filter.XferRoundFilter -> com.facebook.imagepipeline.filter.XferRoundFilter:
    27:27:void <init>() -> <init>
    54:54:boolean canUseXferRoundFilter() -> canUseXferRoundFilter
    31:51:void xferRoundBitmap(android.graphics.Bitmap,android.graphics.Bitmap,boolean) -> xferRoundBitmap
com.facebook.imagepipeline.image.CloseableAnimatedImage -> com.facebook.imagepipeline.image.CloseableAnimatedImage:
    22:24:void <init>(com.facebook.imagepipeline.animated.base.AnimatedImageResult) -> <init>
    39:47:void close() -> close
    33:33:int getHeight() -> getHeight
    69:69:com.facebook.imagepipeline.animated.base.AnimatedImage getImage() -> getImage
    65:65:com.facebook.imagepipeline.animated.base.AnimatedImageResult getImageResult() -> getImageResult
    56:56:int getSizeInBytes() -> getSizeInBytes
    28:28:int getWidth() -> getWidth
    51:51:boolean isClosed() -> isClosed
    61:61:boolean isStateful() -> isStateful
com.facebook.imagepipeline.image.CloseableBitmap -> com.facebook.imagepipeline.image.CloseableBitmap:
    14:14:void <init>() -> <init>
com.facebook.imagepipeline.image.CloseableImage -> com.facebook.imagepipeline.image.CloseableImage:
    16:16:void <init>() -> <init>
    58:71:void finalize() -> finalize
    41:41:com.facebook.imagepipeline.image.QualityInfo getQualityInfo() -> getQualityInfo
    50:50:boolean isStateful() -> isStateful
com.facebook.imagepipeline.image.CloseableStaticBitmap -> com.facebook.imagepipeline.image.CloseableStaticBitmap:
    48:49:void <init>(android.graphics.Bitmap,com.facebook.common.references.ResourceReleaser,com.facebook.imagepipeline.image.QualityInfo,int) -> <init>
    62:70:void <init>(android.graphics.Bitmap,com.facebook.common.references.ResourceReleaser,com.facebook.imagepipeline.image.QualityInfo,int,int) -> <init>
    82:83:void <init>(com.facebook.common.references.CloseableReference,com.facebook.imagepipeline.image.QualityInfo,int) -> <init>
    95:101:void <init>(com.facebook.common.references.CloseableReference,com.facebook.imagepipeline.image.QualityInfo,int,int) -> <init>
    147:147:com.facebook.common.references.CloseableReference cloneUnderlyingBitmapReference() -> cloneUnderlyingBitmapReference
    108:112:void close() -> close
    132:134:com.facebook.common.references.CloseableReference convertToBitmapReference() -> convertToBitmapReference
    114:118:com.facebook.common.references.CloseableReference detachBitmapReference() -> detachBitmapReference
    207:207:int getBitmapHeight(android.graphics.Bitmap) -> getBitmapHeight
    203:203:int getBitmapWidth(android.graphics.Bitmap) -> getBitmapWidth
    219:219:int getExifOrientation() -> getExifOrientation
    194:199:int getHeight() -> getHeight
    225:225:com.facebook.imagepipeline.image.QualityInfo getQualityInfo() -> getQualityInfo
    214:214:int getRotationAngle() -> getRotationAngle
    173:173:int getSizeInBytes() -> getSizeInBytes
    165:165:android.graphics.Bitmap getUnderlyingBitmap() -> getUnderlyingBitmap
    181:186:int getWidth() -> getWidth
    155:155:boolean isClosed() -> isClosed
com.facebook.imagepipeline.image.EncodedImage -> com.facebook.imagepipeline.image.EncodedImage:
    62:76:void <init>(com.facebook.common.references.CloseableReference) -> <init>
    62:82:void <init>(com.facebook.common.internal.Supplier) -> <init>
    85:87:void <init>(com.facebook.common.internal.Supplier,int) -> <init>
    95:95:com.facebook.imagepipeline.image.EncodedImage cloneOrNull(com.facebook.imagepipeline.image.EncodedImage) -> cloneOrNull
    100:115:com.facebook.imagepipeline.image.EncodedImage cloneOrNull() -> cloneOrNull
    123:124:void close() -> close
    442:445:void closeSafely(com.facebook.imagepipeline.image.EncodedImage) -> closeSafely
    416:425:void copyMetaDataFrom(com.facebook.imagepipeline.image.EncodedImage) -> copyMetaDataFrom
    140:140:com.facebook.common.references.CloseableReference getByteBufferRef() -> getByteBufferRef
    274:274:com.facebook.imagepipeline.common.BytesRange getBytesRange() -> getBytesRange
    259:260:android.graphics.ColorSpace getColorSpace() -> getColorSpace
    235:236:int getExifOrientation() -> getExifOrientation
    315:335:java.lang.String getFirstBytesAsHexString(int) -> getFirstBytesAsHexString
    249:250:int getHeight() -> getHeight
    220:221:com.facebook.imageformat.ImageFormat getImageFormat() -> getImageFormat
    150:162:java.io.InputStream getInputStream() -> getInputStream
    229:230:int getRotationAngle() -> getRotationAngle
    269:269:int getSampleSize() -> getSampleSize
    303:306:int getSize() -> getSize
    461:463:com.facebook.common.references.SharedReference getUnderlyingReferenceTestOnly() -> getUnderlyingReferenceTestOnly
    241:242:int getWidth() -> getWidth
    282:293:boolean isCompleteAt(int) -> isCompleteAt
    431:431:boolean isMetaDataAvailable(com.facebook.imagepipeline.image.EncodedImage) -> isMetaDataAvailable
    131:131:boolean isValid() -> isValid
    452:452:boolean isValid(com.facebook.imagepipeline.image.EncodedImage) -> isValid
    347:371:void parseMetaData() -> parseMetaData
    340:343:void parseMetaDataIfNeeded() -> parseMetaDataIfNeeded
    387:407:com.facebook.imageutils.ImageMetaData readImageMetaData() -> readImageMetaData
    377:382:android.util.Pair readWebPImageSize() -> readWebPImageSize
    213:214:void setBytesRange(com.facebook.imagepipeline.common.BytesRange) -> setBytesRange
    195:196:void setExifOrientation(int) -> setExifOrientation
    176:177:void setHeight(int) -> setHeight
    169:170:void setImageFormat(com.facebook.imageformat.ImageFormat) -> setImageFormat
    190:191:void setRotationAngle(int) -> setRotationAngle
    200:201:void setSampleSize(int) -> setSampleSize
    209:210:void setStreamSize(int) -> setStreamSize
    183:184:void setWidth(int) -> setWidth
com.facebook.imagepipeline.image.ImmutableQualityInfo -> com.facebook.imagepipeline.image.ImmutableQualityInfo:
    15:15:void <clinit>() -> <clinit>
    24:28:void <init>(int,boolean,boolean) -> <init>
    52:59:boolean equals(java.lang.Object) -> equals
    32:32:int getQuality() -> getQuality
    47:47:int hashCode() -> hashCode
    42:42:boolean isOfFullQuality() -> isOfFullQuality
    37:37:boolean isOfGoodEnoughQuality() -> isOfGoodEnoughQuality
    68:68:com.facebook.imagepipeline.image.QualityInfo of(int,boolean,boolean) -> of
com.facebook.imagepipeline.listener.BaseRequestListener -> com.facebook.imagepipeline.listener.BaseRequestListener:
    13:13:void <init>() -> <init>
    40:40:void onProducerEvent(java.lang.String,java.lang.String,java.lang.String) -> onProducerEvent
    58:58:void onProducerFinishWithCancellation(java.lang.String,java.lang.String,java.util.Map) -> onProducerFinishWithCancellation
    53:53:void onProducerFinishWithFailure(java.lang.String,java.lang.String,java.lang.Throwable,java.util.Map) -> onProducerFinishWithFailure
    45:45:void onProducerFinishWithSuccess(java.lang.String,java.lang.String,java.util.Map) -> onProducerFinishWithSuccess
    36:36:void onProducerStart(java.lang.String,java.lang.String) -> onProducerStart
    32:32:void onRequestCancellation(java.lang.String) -> onRequestCancellation
    28:28:void onRequestFailure(com.facebook.imagepipeline.request.ImageRequest,java.lang.String,java.lang.Throwable,boolean) -> onRequestFailure
    18:18:void onRequestStart(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,java.lang.String,boolean) -> onRequestStart
    23:23:void onRequestSuccess(com.facebook.imagepipeline.request.ImageRequest,java.lang.String,boolean) -> onRequestSuccess
    62:62:void onUltimateProducerReached(java.lang.String,java.lang.String,boolean) -> onUltimateProducerReached
    66:66:boolean requiresExtraMap(java.lang.String) -> requiresExtraMap
com.facebook.imagepipeline.listener.ForwardingRequestListener -> com.facebook.imagepipeline.listener.ForwardingRequestListener:
    23:30:void <init>(java.util.Set) -> <init>
    32:39:void <init>(com.facebook.imagepipeline.listener.RequestListener[]) -> <init>
    42:43:void addRequestListener(com.facebook.imagepipeline.listener.RequestListener) -> addRequestListener
    209:210:void onException(java.lang.String,java.lang.Throwable) -> onException
    125:135:void onProducerEvent(java.lang.String,java.lang.String,java.lang.String) -> onProducerEvent
    110:120:void onProducerFinishWithCancellation(java.lang.String,java.lang.String,java.util.Map) -> onProducerFinishWithCancellation
    95:105:void onProducerFinishWithFailure(java.lang.String,java.lang.String,java.lang.Throwable,java.util.Map) -> onProducerFinishWithFailure
    77:87:void onProducerFinishWithSuccess(java.lang.String,java.lang.String,java.util.Map) -> onProducerFinishWithSuccess
    62:72:void onProducerStart(java.lang.String,java.lang.String) -> onProducerStart
    185:195:void onRequestCancellation(java.lang.String) -> onRequestCancellation
    171:181:void onRequestFailure(com.facebook.imagepipeline.request.ImageRequest,java.lang.String,java.lang.Throwable,boolean) -> onRequestFailure
    48:58:void onRequestStart(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,java.lang.String,boolean) -> onRequestStart
    153:163:void onRequestSuccess(com.facebook.imagepipeline.request.ImageRequest,java.lang.String,boolean) -> onRequestSuccess
    139:149:void onUltimateProducerReached(java.lang.String,java.lang.String,boolean) -> onUltimateProducerReached
    199:205:boolean requiresExtraMap(java.lang.String) -> requiresExtraMap
com.facebook.imagepipeline.listener.RequestLoggingListener -> com.facebook.imagepipeline.listener.RequestLoggingListener:
    30:33:void <init>() -> <init>
    229:232:long getElapsedTime(java.lang.Long,long) -> getElapsedTime
    236:236:long getTime() -> getTime
    136:150:void onProducerEvent(java.lang.String,java.lang.String,java.lang.String) -> onProducerEvent
    117:132:void onProducerFinishWithCancellation(java.lang.String,java.lang.String,java.util.Map) -> onProducerFinishWithCancellation
    94:111:void onProducerFinishWithFailure(java.lang.String,java.lang.String,java.lang.Throwable,java.util.Map) -> onProducerFinishWithFailure
    72:87:void onProducerFinishWithSuccess(java.lang.String,java.lang.String,java.util.Map) -> onProducerFinishWithSuccess
    54:66:void onProducerStart(java.lang.String,java.lang.String) -> onProducerStart
    210:221:void onRequestCancellation(java.lang.String) -> onRequestCancellation
    195:207:void onRequestFailure(com.facebook.imagepipeline.request.ImageRequest,java.lang.String,java.lang.Throwable,boolean) -> onRequestFailure
    40:51:void onRequestStart(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,java.lang.String,boolean) -> onRequestStart
    177:188:void onRequestSuccess(com.facebook.imagepipeline.request.ImageRequest,java.lang.String,boolean) -> onRequestSuccess
    156:171:void onUltimateProducerReached(java.lang.String,java.lang.String,boolean) -> onUltimateProducerReached
    225:225:boolean requiresExtraMap(java.lang.String) -> requiresExtraMap
com.facebook.imagepipeline.memory.BasePool -> com.facebook.imagepipeline.memory.BasePool:
    113:183:void <init>(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker) -> <init>
    736:758:boolean canAllocate(int) -> canAllocate
    451:453:void ensurePoolSizeInvariant() -> ensurePoolSizeInvariant
    510:519:void fillBuckets(android.util.SparseIntArray) -> fillBuckets
    212:301:java.lang.Object get(int) -> get
    689:701:com.facebook.imagepipeline.memory.Bucket getBucket(int) -> getBucket
    679:679:com.facebook.imagepipeline.memory.Bucket getBucketIfPresent(int) -> getBucketIfPresent
    781:798:java.util.Map getStats() -> getStats
    196:196:java.lang.Object getValue(com.facebook.imagepipeline.memory.Bucket) -> getValue
    492:502:void initBuckets() -> initBuckets
    189:191:void initialize() -> initialize
    717:723:boolean isMaxSizeSoftCapExceeded() -> isMaxSizeSoftCapExceeded
    443:444:boolean isReusable(java.lang.Object) -> isReusable
    461:486:void legacyInitBuckets(android.util.SparseIntArray) -> legacyInitBuckets
    767:776:void logStats() -> logStats
    705:706:com.facebook.imagepipeline.memory.Bucket newBucket(int) -> newBucket
    432:432:void onParamsChanged() -> onParamsChanged
    523:542:java.util.List refillBuckets() -> refillBuckets
    316:376:void release(java.lang.Object) -> release
    386:387:void trim(com.facebook.common.memory.MemoryTrimType) -> trim
    555:597:void trimToNothing() -> trimToNothing
    628:670:void trimToSize(int) -> trimToSize
    607:611:void trimToSoftCap() -> trimToSoftCap
com.facebook.imagepipeline.memory.BasePool$Counter -> com.facebook.imagepipeline.memory.BasePool$Counter:
    809:809:void <init>() -> <init>
    829:840:void decrement(int) -> decrement
    820:822:void increment(int) -> increment
    846:848:void reset() -> reset
com.facebook.imagepipeline.memory.BasePool$InvalidSizeException -> com.facebook.imagepipeline.memory.BasePool$InvalidSizeException:
    865:866:void <init>(java.lang.Object) -> <init>
com.facebook.imagepipeline.memory.BasePool$InvalidValueException -> com.facebook.imagepipeline.memory.BasePool$InvalidValueException:
    856:857:void <init>(java.lang.Object) -> <init>
com.facebook.imagepipeline.memory.BasePool$PoolSizeViolationException -> com.facebook.imagepipeline.memory.BasePool$PoolSizeViolationException:
    884:890:void <init>(int,int,int,int) -> <init>
com.facebook.imagepipeline.memory.BasePool$SizeTooLargeException -> com.facebook.imagepipeline.memory.BasePool$SizeTooLargeException:
    874:875:void <init>(java.lang.Object) -> <init>
com.facebook.imagepipeline.memory.BitmapCounter -> com.facebook.imagepipeline.memory.BitmapCounter:
    38:53:void <init>(int,int) -> <init>
    77:87:void decrease(android.graphics.Bitmap) -> decrease
    93:93:int getCount() -> getCount
    104:104:int getMaxCount() -> getMaxCount
    108:108:int getMaxSize() -> getMaxSize
    112:112:com.facebook.common.references.ResourceReleaser getReleaser() -> getReleaser
    100:100:long getSize() -> getSize
    62:69:boolean increase(android.graphics.Bitmap) -> increase
com.facebook.imagepipeline.memory.BitmapCounter$1 -> com.facebook.imagepipeline.memory.BitmapCounter$1:
    43:43:void <init>(com.facebook.imagepipeline.memory.BitmapCounter) -> <init>
    43:43:void release(java.lang.Object) -> release
    47:51:void release(android.graphics.Bitmap) -> release
com.facebook.imagepipeline.memory.BitmapCounterConfig -> com.facebook.imagepipeline.memory.BitmapCounterConfig:
    13:17:void <init>(com.facebook.imagepipeline.memory.BitmapCounterConfig$Builder) -> <init>
    20:20:int getMaxBitmapCount() -> getMaxBitmapCount
    28:28:com.facebook.imagepipeline.memory.BitmapCounterConfig$Builder newBuilder() -> newBuilder
    24:25:void setMaxBitmapCount(int) -> setMaxBitmapCount
com.facebook.imagepipeline.memory.BitmapCounterConfig$Builder -> com.facebook.imagepipeline.memory.BitmapCounterConfig$Builder:
    31:31:void <init>(com.facebook.imagepipeline.memory.BitmapCounterConfig$1) -> <init>
    33:35:void <init>() -> <init>
    47:47:com.facebook.imagepipeline.memory.BitmapCounterConfig build() -> build
    43:43:int getMaxBitmapCount() -> getMaxBitmapCount
    38:39:com.facebook.imagepipeline.memory.BitmapCounterConfig$Builder setMaxBitmapCount(int) -> setMaxBitmapCount
com.facebook.imagepipeline.memory.BitmapCounterProvider -> com.facebook.imagepipeline.memory.BitmapCounterProvider:
    14:28:void <clinit>() -> <clinit>
    13:13:void <init>() -> <init>
    51:58:com.facebook.imagepipeline.memory.BitmapCounter get() -> get
    33:37:int getMaxSizeHardCap() -> getMaxSizeHardCap
    42:47:void initialize(com.facebook.imagepipeline.memory.BitmapCounterConfig) -> initialize
com.facebook.imagepipeline.memory.BitmapPoolBackend -> com.facebook.imagepipeline.memory.BitmapPoolBackend:
    17:17:void <init>() -> <init>
    17:17:java.lang.Object get(int) -> get
    31:36:android.graphics.Bitmap get(int) -> get
    17:17:int getSize(java.lang.Object) -> getSize
    41:41:int getSize(android.graphics.Bitmap) -> getSize
    45:56:boolean isReusable(android.graphics.Bitmap) -> isReusable
    17:17:void put(java.lang.Object) -> put
    23:26:void put(android.graphics.Bitmap) -> put
com.facebook.imagepipeline.memory.Bucket -> com.facebook.imagepipeline.memory.Bucket:
    61:72:void <init>(int,int,int,boolean) -> <init>
    144:145:void addToFreeList(java.lang.Object) -> addToFreeList
    153:155:void decrementInUseCount() -> decrementInUseCount
    95:99:java.lang.Object get() -> get
    83:83:int getFreeListSize() -> getFreeListSize
    158:158:int getInUseCount() -> getInUseCount
    118:119:void incrementInUseCount() -> incrementInUseCount
    79:79:boolean isMaxLengthExceeded() -> isMaxLengthExceeded
    109:109:java.lang.Object pop() -> pop
    126:141:void release(java.lang.Object) -> release
com.facebook.imagepipeline.memory.BucketMap -> com.facebook.imagepipeline.memory.BucketMap:
    20:21:void <init>() -> <init>
    52:60:java.lang.Object acquire(int) -> acquire
    149:153:void maybePrune(com.facebook.imagepipeline.memory.BucketMap$LinkedEntry) -> maybePrune
    119:134:void moveToFront(com.facebook.imagepipeline.memory.BucketMap$LinkedEntry) -> moveToFront
    96:116:void prune(com.facebook.imagepipeline.memory.BucketMap$LinkedEntry) -> prune
    68:78:void release(int,java.lang.Object) -> release
    137:145:java.lang.Object removeFromEnd() -> removeFromEnd
    84:93:int valueCount() -> valueCount
com.facebook.imagepipeline.memory.BucketMap$LinkedEntry -> com.facebook.imagepipeline.memory.BucketMap$LinkedEntry:
    26:26:void <init>(com.facebook.imagepipeline.memory.BucketMap$LinkedEntry,int,java.util.LinkedList,com.facebook.imagepipeline.memory.BucketMap$LinkedEntry,com.facebook.imagepipeline.memory.BucketMap$1) -> <init>
    33:38:void <init>(com.facebook.imagepipeline.memory.BucketMap$LinkedEntry,int,java.util.LinkedList,com.facebook.imagepipeline.memory.BucketMap$LinkedEntry) -> <init>
    42:42:java.lang.String toString() -> toString
com.facebook.imagepipeline.memory.BucketsBitmapPool -> com.facebook.imagepipeline.memory.BucketsBitmapPool:
    42:44:void <init>(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker) -> <init>
    29:29:java.lang.Object alloc(int) -> alloc
    54:56:android.graphics.Bitmap alloc(int) -> alloc
    29:29:void free(java.lang.Object) -> free
    66:68:void free(android.graphics.Bitmap) -> free
    77:77:int getBucketedSize(int) -> getBucketedSize
    29:29:int getBucketedSizeForValue(java.lang.Object) -> getBucketedSizeForValue
    89:90:int getBucketedSizeForValue(android.graphics.Bitmap) -> getBucketedSizeForValue
    100:100:int getSizeInBytes(int) -> getSizeInBytes
    29:29:java.lang.Object getValue(com.facebook.imagepipeline.memory.Bucket) -> getValue
    122:126:android.graphics.Bitmap getValue(com.facebook.imagepipeline.memory.Bucket) -> getValue
    29:29:boolean isReusable(java.lang.Object) -> isReusable
    114:116:boolean isReusable(android.graphics.Bitmap) -> isReusable
com.facebook.imagepipeline.memory.BufferMemoryChunk -> com.facebook.imagepipeline.memory.BufferMemoryChunk:
    34:38:void <init>(int) -> <init>
    41:43:void close() -> close
    92:129:void copy(int,com.facebook.imagepipeline.memory.MemoryChunk,int,int) -> copy
    153:167:void doCopy(int,com.facebook.imagepipeline.memory.MemoryChunk,int,int) -> doCopy
    139:139:java.nio.ByteBuffer getByteBuffer() -> getByteBuffer
    133:133:long getNativePtr() -> getNativePtr
    52:52:int getSize() -> getSize
    144:144:long getUniqueId() -> getUniqueId
    47:47:boolean isClosed() -> isClosed
    70:78:int read(int,byte[],int,int) -> read
    82:86:byte read(int) -> read
    57:65:int write(int,byte[],int,int) -> write
com.facebook.imagepipeline.memory.BufferMemoryChunkPool -> com.facebook.imagepipeline.memory.BufferMemoryChunkPool:
    20:21:void <init>(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker) -> <init>
    13:13:com.facebook.imagepipeline.memory.MemoryChunk alloc(int) -> alloc
    13:13:java.lang.Object alloc(int) -> alloc
    25:25:com.facebook.imagepipeline.memory.BufferMemoryChunk alloc(int) -> alloc
com.facebook.imagepipeline.memory.DefaultBitmapPoolParams -> com.facebook.imagepipeline.memory.DefaultBitmapPoolParams:
    43:43:void <clinit>() -> <clinit>
    22:23:void <init>() -> <init>
    46:48:com.facebook.imagepipeline.memory.PoolParams get() -> get
    32:36:int getMaxSizeHardCap() -> getMaxSizeHardCap
com.facebook.imagepipeline.memory.DefaultByteArrayPoolParams -> com.facebook.imagepipeline.memory.DefaultByteArrayPoolParams:
    16:16:void <init>() -> <init>
    38:40:com.facebook.imagepipeline.memory.PoolParams get() -> get
com.facebook.imagepipeline.memory.DefaultFlexByteArrayPoolParams -> com.facebook.imagepipeline.memory.DefaultFlexByteArrayPoolParams:
    22:22:void <clinit>() -> <clinit>
    24:25:void <init>() -> <init>
    28:32:android.util.SparseIntArray generateBuckets(int,int,int) -> generateBuckets
    36:39:com.facebook.imagepipeline.memory.PoolParams get() -> get
com.facebook.imagepipeline.memory.DefaultNativeMemoryChunkPoolParams -> com.facebook.imagepipeline.memory.DefaultNativeMemoryChunkPoolParams:
    17:17:void <init>() -> <init>
    30:44:com.facebook.imagepipeline.memory.PoolParams get() -> get
    69:73:int getMaxSizeHardCap() -> getMaxSizeHardCap
    54:60:int getMaxSizeSoftCap() -> getMaxSizeSoftCap
com.facebook.imagepipeline.memory.DummyBitmapPool -> com.facebook.imagepipeline.memory.DummyBitmapPool:
    13:13:void <init>() -> <init>
    13:13:java.lang.Object get(int) -> get
    22:24:android.graphics.Bitmap get(int) -> get
    13:13:void release(java.lang.Object) -> release
    30:31:void release(android.graphics.Bitmap) -> release
    18:18:void trim(com.facebook.common.memory.MemoryTrimType) -> trim
com.facebook.imagepipeline.memory.FlexByteArrayPool -> com.facebook.imagepipeline.memory.FlexByteArrayPool:
    32:44:void <init>(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams) -> <init>
    47:47:com.facebook.common.references.CloseableReference get(int) -> get
    59:59:int getMinBufferSize() -> getMinBufferSize
    55:55:java.util.Map getStats() -> getStats
    51:52:void release(byte[]) -> release
com.facebook.imagepipeline.memory.FlexByteArrayPool$1 -> com.facebook.imagepipeline.memory.FlexByteArrayPool$1:
    38:38:void <init>(com.facebook.imagepipeline.memory.FlexByteArrayPool) -> <init>
    38:38:void release(java.lang.Object) -> release
    41:42:void release(byte[]) -> release
com.facebook.imagepipeline.memory.FlexByteArrayPool$SoftRefByteArrayPool -> com.facebook.imagepipeline.memory.FlexByteArrayPool$SoftRefByteArrayPool:
    67:68:void <init>(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker) -> <init>
    72:73:com.facebook.imagepipeline.memory.Bucket newBucket(int) -> newBucket
com.facebook.imagepipeline.memory.GenericByteArrayPool -> com.facebook.imagepipeline.memory.GenericByteArrayPool:
    40:47:void <init>(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker) -> <init>
    26:26:java.lang.Object alloc(int) -> alloc
    64:64:byte[] alloc(int) -> alloc
    26:26:void free(java.lang.Object) -> free
    73:75:void free(byte[]) -> free
    99:113:int getBucketedSize(int) -> getBucketedSize
    26:26:int getBucketedSizeForValue(java.lang.Object) -> getBucketedSizeForValue
    123:124:int getBucketedSizeForValue(byte[]) -> getBucketedSizeForValue
    54:54:int getMinBufferSize() -> getMinBufferSize
    84:84:int getSizeInBytes(int) -> getSizeInBytes
com.facebook.imagepipeline.memory.LruBitmapPool -> com.facebook.imagepipeline.memory.LruBitmapPool:
    17:34:void <init>(int,int,com.facebook.imagepipeline.memory.PoolStatsTracker,com.facebook.common.memory.MemoryTrimmableRegistry) -> <init>
    71:72:android.graphics.Bitmap alloc(int) -> alloc
    15:15:java.lang.Object get(int) -> get
    55:66:android.graphics.Bitmap get(int) -> get
    15:15:void release(java.lang.Object) -> release
    77:85:void release(android.graphics.Bitmap) -> release
    38:39:void trim(com.facebook.common.memory.MemoryTrimType) -> trim
    41:52:void trimTo(int) -> trimTo
com.facebook.imagepipeline.memory.LruBucketsPoolBackend -> com.facebook.imagepipeline.memory.LruBucketsPoolBackend:
    24:27:void <init>() -> <init>
    32:32:java.lang.Object get(int) -> get
    53:58:java.lang.Object maybeRemoveFromCurrentItems(java.lang.Object) -> maybeRemoveFromCurrentItems
    49:49:java.lang.Object pop() -> pop
    38:44:void put(java.lang.Object) -> put
    63:63:int valueCount() -> valueCount
com.facebook.imagepipeline.memory.MemoryChunkPool -> com.facebook.imagepipeline.memory.MemoryChunkPool:
    30:37:void <init>(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker) -> <init>
    15:15:java.lang.Object alloc(int) -> alloc
    15:15:void free(java.lang.Object) -> free
    49:51:void free(com.facebook.imagepipeline.memory.MemoryChunk) -> free
    60:73:int getBucketedSize(int) -> getBucketedSize
    15:15:int getBucketedSizeForValue(java.lang.Object) -> getBucketedSizeForValue
    78:79:int getBucketedSizeForValue(com.facebook.imagepipeline.memory.MemoryChunk) -> getBucketedSizeForValue
    41:41:int getMinBufferSize() -> getMinBufferSize
    55:55:int getSizeInBytes(int) -> getSizeInBytes
    15:15:boolean isReusable(java.lang.Object) -> isReusable
    84:85:boolean isReusable(com.facebook.imagepipeline.memory.MemoryChunk) -> isReusable
com.facebook.imagepipeline.memory.MemoryChunkUtil -> com.facebook.imagepipeline.memory.MemoryChunkUtil:
    11:11:void <init>() -> <init>
    18:19:int adjustByteCount(int,int,int) -> adjustByteCount
    29:34:void checkBounds(int,int,int,int,int) -> checkBounds
com.facebook.imagepipeline.memory.MemoryPooledByteBuffer -> com.facebook.imagepipeline.memory.MemoryPooledByteBuffer:
    32:37:void <init>(com.facebook.common.references.CloseableReference,int) -> <init>
    91:94:void close() -> close
    103:107:void ensureValid() -> ensureValid
    77:77:java.nio.ByteBuffer getByteBuffer() -> getByteBuffer
    69:71:long getNativePtr() -> getNativePtr
    82:82:boolean isClosed() -> isClosed
    52:56:byte read(int) -> read
    60:65:int read(int,byte[],int,int) -> read
    46:48:int size() -> size
com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory -> com.facebook.imagepipeline.memory.MemoryPooledByteBufferFactory:
    30:33:void <init>(com.facebook.imagepipeline.memory.MemoryChunkPool,com.facebook.common.memory.PooledByteStreams) -> <init>
    95:96:com.facebook.imagepipeline.memory.MemoryPooledByteBuffer newByteBuf(java.io.InputStream,com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream) -> newByteBuf
    24:24:com.facebook.common.memory.PooledByteBuffer newByteBuffer(int) -> newByteBuffer
    24:24:com.facebook.common.memory.PooledByteBuffer newByteBuffer(java.io.InputStream) -> newByteBuffer
    24:24:com.facebook.common.memory.PooledByteBuffer newByteBuffer(java.io.InputStream,int) -> newByteBuffer
    24:24:com.facebook.common.memory.PooledByteBuffer newByteBuffer(byte[]) -> newByteBuffer
    37:42:com.facebook.imagepipeline.memory.MemoryPooledByteBuffer newByteBuffer(int) -> newByteBuffer
    48:52:com.facebook.imagepipeline.memory.MemoryPooledByteBuffer newByteBuffer(java.io.InputStream) -> newByteBuffer
    58:66:com.facebook.imagepipeline.memory.MemoryPooledByteBuffer newByteBuffer(byte[]) -> newByteBuffer
    73:78:com.facebook.imagepipeline.memory.MemoryPooledByteBuffer newByteBuffer(java.io.InputStream,int) -> newByteBuffer
    24:24:com.facebook.common.memory.PooledByteBufferOutputStream newOutputStream() -> newOutputStream
    24:24:com.facebook.common.memory.PooledByteBufferOutputStream newOutputStream(int) -> newOutputStream
    101:101:com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream newOutputStream() -> newOutputStream
    106:106:com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream newOutputStream(int) -> newOutputStream
com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream -> com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream:
    33:34:void <init>(com.facebook.imagepipeline.memory.MemoryChunkPool) -> <init>
    46:52:void <init>(com.facebook.imagepipeline.memory.MemoryChunkPool,int) -> <init>
    122:126:void close() -> close
    154:157:void ensureValid() -> ensureValid
    137:146:void realloc(int) -> realloc
    73:73:int size() -> size
    21:21:com.facebook.common.memory.PooledByteBuffer toByteBuffer() -> toByteBuffer
    63:64:com.facebook.imagepipeline.memory.MemoryPooledByteBuffer toByteBuffer() -> toByteBuffer
    84:87:void write(int) -> write
    105:113:void write(byte[],int,int) -> write
com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream$InvalidStreamException -> com.facebook.imagepipeline.memory.MemoryPooledByteBufferOutputStream$InvalidStreamException:
    164:165:void <init>() -> <init>
com.facebook.imagepipeline.memory.NativeMemoryChunk -> com.facebook.imagepipeline.memory.NativeMemoryChunk:
    31:32:void <clinit>() -> <clinit>
    47:52:void <init>(int) -> <init>
    55:59:void <init>() -> <init>
    62:67:void close() -> close
    130:168:void copy(int,com.facebook.imagepipeline.memory.MemoryChunk,int,int) -> copy
    176:183:void doCopy(int,com.facebook.imagepipeline.memory.MemoryChunk,int,int) -> doCopy
    192:207:void finalize() -> finalize
    119:119:java.nio.ByteBuffer getByteBuffer() -> getByteBuffer
    113:113:long getNativePtr() -> getNativePtr
    76:76:int getSize() -> getSize
    124:124:long getUniqueId() -> getUniqueId
    71:71:boolean isClosed() -> isClosed
    93:100:int read(int,byte[],int,int) -> read
    104:108:byte read(int) -> read
    81:88:int write(int,byte[],int,int) -> write
com.facebook.imagepipeline.memory.NativeMemoryChunkPool -> com.facebook.imagepipeline.memory.NativeMemoryChunkPool:
    20:21:void <init>(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams,com.facebook.imagepipeline.memory.PoolStatsTracker) -> <init>
    13:13:com.facebook.imagepipeline.memory.MemoryChunk alloc(int) -> alloc
    13:13:java.lang.Object alloc(int) -> alloc
    25:25:com.facebook.imagepipeline.memory.NativeMemoryChunk alloc(int) -> alloc
com.facebook.imagepipeline.memory.NoOpPoolStatsTracker -> com.facebook.imagepipeline.memory.NoOpPoolStatsTracker:
    14:14:void <clinit>() -> <clinit>
    16:17:void <init>() -> <init>
    19:23:com.facebook.imagepipeline.memory.NoOpPoolStatsTracker getInstance() -> getInstance
    44:44:void onAlloc(int) -> onAlloc
    48:48:void onFree(int) -> onFree
    40:40:void onHardCapReached() -> onHardCapReached
    36:36:void onSoftCapReached() -> onSoftCapReached
    52:52:void onValueRelease(int) -> onValueRelease
    32:32:void onValueReuse(int) -> onValueReuse
    28:28:void setBasePool(com.facebook.imagepipeline.memory.BasePool) -> setBasePool
com.facebook.imagepipeline.memory.OOMSoftReferenceBucket -> com.facebook.imagepipeline.memory.OOMSoftReferenceBucket:
    23:25:void <init>(int,int,int) -> <init>
    38:44:void addToFreeList(java.lang.Object) -> addToFreeList
    29:33:java.lang.Object pop() -> pop
com.facebook.imagepipeline.memory.PoolConfig -> com.facebook.imagepipeline.memory.PoolConfig:
    21:21:void <init>(com.facebook.imagepipeline.memory.PoolConfig$Builder,com.facebook.imagepipeline.memory.PoolConfig$1) -> <init>
    41:89:void <init>(com.facebook.imagepipeline.memory.PoolConfig$Builder) -> <init>
    132:132:int getBitmapPoolMaxBitmapSize() -> getBitmapPoolMaxBitmapSize
    128:128:int getBitmapPoolMaxPoolSize() -> getBitmapPoolMaxPoolSize
    92:92:com.facebook.imagepipeline.memory.PoolParams getBitmapPoolParams() -> getBitmapPoolParams
    96:96:com.facebook.imagepipeline.memory.PoolStatsTracker getBitmapPoolStatsTracker() -> getBitmapPoolStatsTracker
    124:124:java.lang.String getBitmapPoolType() -> getBitmapPoolType
    112:112:com.facebook.imagepipeline.memory.PoolParams getFlexByteArrayPoolParams() -> getFlexByteArrayPoolParams
    104:104:com.facebook.imagepipeline.memory.PoolParams getMemoryChunkPoolParams() -> getMemoryChunkPoolParams
    108:108:com.facebook.imagepipeline.memory.PoolStatsTracker getMemoryChunkPoolStatsTracker() -> getMemoryChunkPoolStatsTracker
    100:100:com.facebook.common.memory.MemoryTrimmableRegistry getMemoryTrimmableRegistry() -> getMemoryTrimmableRegistry
    116:116:com.facebook.imagepipeline.memory.PoolParams getSmallByteArrayPoolParams() -> getSmallByteArrayPoolParams
    120:120:com.facebook.imagepipeline.memory.PoolStatsTracker getSmallByteArrayPoolStatsTracker() -> getSmallByteArrayPoolStatsTracker
    136:136:boolean isRegisterLruBitmapPoolAsMemoryTrimmable() -> isRegisterLruBitmapPoolAsMemoryTrimmable
    140:140:com.facebook.imagepipeline.memory.PoolConfig$Builder newBuilder() -> newBuilder
com.facebook.imagepipeline.memory.PoolConfig$Builder -> com.facebook.imagepipeline.memory.PoolConfig$Builder:
    143:143:void <init>(com.facebook.imagepipeline.memory.PoolConfig$1) -> <init>
    158:159:void <init>() -> <init>
    143:143:com.facebook.imagepipeline.memory.PoolParams access$000(com.facebook.imagepipeline.memory.PoolConfig$Builder) -> access$000
    143:143:com.facebook.imagepipeline.memory.PoolStatsTracker access$100(com.facebook.imagepipeline.memory.PoolConfig$Builder) -> access$100
    143:143:int access$1000(com.facebook.imagepipeline.memory.PoolConfig$Builder) -> access$1000
    143:143:boolean access$1100(com.facebook.imagepipeline.memory.PoolConfig$Builder) -> access$1100
    143:143:com.facebook.imagepipeline.memory.PoolParams access$200(com.facebook.imagepipeline.memory.PoolConfig$Builder) -> access$200
    143:143:com.facebook.common.memory.MemoryTrimmableRegistry access$300(com.facebook.imagepipeline.memory.PoolConfig$Builder) -> access$300
    143:143:com.facebook.imagepipeline.memory.PoolParams access$400(com.facebook.imagepipeline.memory.PoolConfig$Builder) -> access$400
    143:143:com.facebook.imagepipeline.memory.PoolStatsTracker access$500(com.facebook.imagepipeline.memory.PoolConfig$Builder) -> access$500
    143:143:com.facebook.imagepipeline.memory.PoolParams access$600(com.facebook.imagepipeline.memory.PoolConfig$Builder) -> access$600
    143:143:com.facebook.imagepipeline.memory.PoolStatsTracker access$700(com.facebook.imagepipeline.memory.PoolConfig$Builder) -> access$700
    143:143:java.lang.String access$800(com.facebook.imagepipeline.memory.PoolConfig$Builder) -> access$800
    143:143:int access$900(com.facebook.imagepipeline.memory.PoolConfig$Builder) -> access$900
    206:206:com.facebook.imagepipeline.memory.PoolConfig build() -> build
    220:221:com.facebook.imagepipeline.memory.PoolConfig$Builder setBitmapPoolMaxBitmapSize(int) -> setBitmapPoolMaxBitmapSize
    215:216:com.facebook.imagepipeline.memory.PoolConfig$Builder setBitmapPoolMaxPoolSize(int) -> setBitmapPoolMaxPoolSize
    162:163:com.facebook.imagepipeline.memory.PoolConfig$Builder setBitmapPoolParams(com.facebook.imagepipeline.memory.PoolParams) -> setBitmapPoolParams
    168:169:com.facebook.imagepipeline.memory.PoolConfig$Builder setBitmapPoolStatsTracker(com.facebook.imagepipeline.memory.PoolStatsTracker) -> setBitmapPoolStatsTracker
    210:211:com.facebook.imagepipeline.memory.PoolConfig$Builder setBitmapPoolType(java.lang.String) -> setBitmapPoolType
    173:174:com.facebook.imagepipeline.memory.PoolConfig$Builder setFlexByteArrayPoolParams(com.facebook.imagepipeline.memory.PoolParams) -> setFlexByteArrayPoolParams
    178:179:com.facebook.imagepipeline.memory.PoolConfig$Builder setMemoryTrimmableRegistry(com.facebook.common.memory.MemoryTrimmableRegistry) -> setMemoryTrimmableRegistry
    183:184:com.facebook.imagepipeline.memory.PoolConfig$Builder setNativeMemoryChunkPoolParams(com.facebook.imagepipeline.memory.PoolParams) -> setNativeMemoryChunkPoolParams
    189:190:com.facebook.imagepipeline.memory.PoolConfig$Builder setNativeMemoryChunkPoolStatsTracker(com.facebook.imagepipeline.memory.PoolStatsTracker) -> setNativeMemoryChunkPoolStatsTracker
    226:227:void setRegisterLruBitmapPoolAsMemoryTrimmable(boolean) -> setRegisterLruBitmapPoolAsMemoryTrimmable
    194:195:com.facebook.imagepipeline.memory.PoolConfig$Builder setSmallByteArrayPoolParams(com.facebook.imagepipeline.memory.PoolParams) -> setSmallByteArrayPoolParams
    200:202:com.facebook.imagepipeline.memory.PoolConfig$Builder setSmallByteArrayPoolStatsTracker(com.facebook.imagepipeline.memory.PoolStatsTracker) -> setSmallByteArrayPoolStatsTracker
com.facebook.imagepipeline.memory.PoolFactory -> com.facebook.imagepipeline.memory.PoolFactory:
    37:39:void <init>(com.facebook.imagepipeline.memory.PoolConfig) -> <init>
    42:74:com.facebook.imagepipeline.memory.BitmapPool getBitmapPool() -> getBitmapPool
    78:85:com.facebook.imagepipeline.memory.BufferMemoryChunkPool getBufferMemoryChunkPool() -> getBufferMemoryChunkPool
    89:94:com.facebook.imagepipeline.memory.FlexByteArrayPool getFlexByteArrayPool() -> getFlexByteArrayPool
    98:98:int getFlexByteArrayPoolMaxNumThreads() -> getFlexByteArrayPoolMaxNumThreads
    152:158:com.facebook.imagepipeline.memory.MemoryChunkPool getMemoryChunkPool(int) -> getMemoryChunkPool
    102:109:com.facebook.imagepipeline.memory.NativeMemoryChunkPool getNativeMemoryChunkPool() -> getNativeMemoryChunkPool
    113:113:com.facebook.common.memory.PooledByteBufferFactory getPooledByteBufferFactory() -> getPooledByteBufferFactory
    117:122:com.facebook.common.memory.PooledByteBufferFactory getPooledByteBufferFactory(int) -> getPooledByteBufferFactory
    126:129:com.facebook.common.memory.PooledByteStreams getPooledByteStreams() -> getPooledByteStreams
    133:138:com.facebook.imagepipeline.memory.SharedByteArray getSharedByteArray() -> getSharedByteArray
    142:148:com.facebook.common.memory.ByteArrayPool getSmallByteArrayPool() -> getSmallByteArrayPool
com.facebook.imagepipeline.memory.PoolParams -> com.facebook.imagepipeline.memory.PoolParams:
    72:73:void <init>(int,android.util.SparseIntArray) -> <init>
    82:83:void <init>(int,int,android.util.SparseIntArray) -> <init>
    100:108:void <init>(int,int,android.util.SparseIntArray,int,int,int) -> <init>
com.facebook.imagepipeline.memory.SharedByteArray -> com.facebook.imagepipeline.memory.SharedByteArray:
    61:78:void <init>(com.facebook.common.memory.MemoryTrimmableRegistry,com.facebook.imagepipeline.memory.PoolParams) -> <init>
    133:137:byte[] allocateByteArray(int) -> allocateByteArray
    87:95:com.facebook.common.references.CloseableReference get(int) -> get
    128:129:int getBucketedSize(int) -> getBucketedSize
    100:105:byte[] getByteArray(int) -> getByteArray
    116:124:void trim(com.facebook.common.memory.MemoryTrimType) -> trim
com.facebook.imagepipeline.memory.SharedByteArray$1 -> com.facebook.imagepipeline.memory.SharedByteArray$1:
    70:70:void <init>(com.facebook.imagepipeline.memory.SharedByteArray) -> <init>
    70:70:void release(java.lang.Object) -> release
    73:74:void release(byte[]) -> release
com.facebook.imagepipeline.nativecode.Bitmaps -> com.facebook.imagepipeline.nativecode.Bitmaps:
    24:25:void <clinit>() -> <clinit>
    21:21:void <init>() -> <init>
    40:50:void copyBitmap(android.graphics.Bitmap,android.graphics.Bitmap) -> copyBitmap
com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder -> com.facebook.imagepipeline.nativecode.DalvikPurgeableDecoder:
    39:42:void <clinit>() -> <clinit>
    47:49:void <init>() -> <init>
    54:54:com.facebook.common.references.CloseableReference decodeFromEncodedImage(com.facebook.imagepipeline.image.EncodedImage,android.graphics.Bitmap$Config,android.graphics.Rect) -> decodeFromEncodedImage
    85:94:com.facebook.common.references.CloseableReference decodeFromEncodedImageWithColorSpace(com.facebook.imagepipeline.image.EncodedImage,android.graphics.Bitmap$Config,android.graphics.Rect,boolean) -> decodeFromEncodedImageWithColorSpace
    63:63:com.facebook.common.references.CloseableReference decodeJPEGFromEncodedImage(com.facebook.imagepipeline.image.EncodedImage,android.graphics.Bitmap$Config,android.graphics.Rect,int) -> decodeJPEGFromEncodedImage
    118:127:com.facebook.common.references.CloseableReference decodeJPEGFromEncodedImageWithColorSpace(com.facebook.imagepipeline.image.EncodedImage,android.graphics.Bitmap$Config,android.graphics.Rect,int,boolean) -> decodeJPEGFromEncodedImageWithColorSpace
    174:177:boolean endsWithEOI(com.facebook.common.references.CloseableReference,int) -> endsWithEOI
    157:169:android.graphics.BitmapFactory$Options getBitmapFactoryOptions(int,android.graphics.Bitmap$Config) -> getBitmapFactoryOptions
    189:212:com.facebook.common.references.CloseableReference pinBitmap(android.graphics.Bitmap) -> pinBitmap
com.facebook.imagepipeline.nativecode.ImagePipelineNativeLoader -> com.facebook.imagepipeline.nativecode.ImagePipelineNativeLoader:
    35:37:void <clinit>() -> <clinit>
    30:30:void <init>() -> <init>
    40:41:void load() -> load
com.facebook.imagepipeline.nativecode.NativeBlurFilter -> com.facebook.imagepipeline.nativecode.NativeBlurFilter:
    21:22:void <clinit>() -> <clinit>
    18:18:void <init>() -> <init>
    45:50:void iterativeBoxBlur(android.graphics.Bitmap,int,int) -> iterativeBoxBlur
com.facebook.imagepipeline.nativecode.NativeFiltersLoader -> com.facebook.imagepipeline.nativecode.NativeFiltersLoader:
    13:13:void <init>() -> <init>
    16:17:void load() -> load
com.facebook.imagepipeline.nativecode.NativeImageTranscoderFactory -> com.facebook.imagepipeline.nativecode.NativeImageTranscoderFactory:
    15:15:void <init>() -> <init>
    20:31:com.facebook.imagepipeline.transcoder.ImageTranscoderFactory getNativeImageTranscoderFactory(int,boolean) -> getNativeImageTranscoderFactory
com.facebook.imagepipeline.nativecode.NativeJpegTranscoder -> com.facebook.imagepipeline.nativecode.NativeJpegTranscoder:
    47:48:void <clinit>() -> <clinit>
    51:55:void <init>(boolean,int,boolean) -> <init>
    62:65:boolean canResize(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.common.ResizeOptions) -> canResize
    72:72:boolean canTranscode(com.facebook.imageformat.ImageFormat) -> canTranscode
    77:77:java.lang.String getIdentifier() -> getIdentifier
    89:128:com.facebook.imagepipeline.transcoder.ImageTranscodeResult transcode(com.facebook.imagepipeline.image.EncodedImage,java.io.OutputStream,com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.common.ResizeOptions,com.facebook.imageformat.ImageFormat,java.lang.Integer) -> transcode
    151:165:void transcodeJpeg(java.io.InputStream,java.io.OutputStream,int,int,int) -> transcodeJpeg
    193:208:void transcodeJpegWithExifOrientation(java.io.InputStream,java.io.OutputStream,int,int,int) -> transcodeJpegWithExifOrientation
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderFactory -> com.facebook.imagepipeline.nativecode.NativeJpegTranscoderFactory:
    23:26:void <init>(int,boolean) -> <init>
    32:35:com.facebook.imagepipeline.transcoder.ImageTranscoder createImageTranscoder(com.facebook.imageformat.ImageFormat,boolean) -> createImageTranscoder
com.facebook.imagepipeline.nativecode.NativeJpegTranscoderSoLoader -> com.facebook.imagepipeline.nativecode.NativeJpegTranscoderSoLoader:
    13:13:void <init>() -> <init>
    16:31:void ensure() -> ensure
com.facebook.imagepipeline.nativecode.NativeRoundingFilter -> com.facebook.imagepipeline.nativecode.NativeRoundingFilter:
    19:20:void <clinit>() -> <clinit>
    16:16:void <init>() -> <init>
    23:24:void toCircle(android.graphics.Bitmap) -> toCircle
    36:38:void toCircle(android.graphics.Bitmap,boolean) -> toCircle
    42:44:void toCircleWithBorder(android.graphics.Bitmap,int,int,boolean) -> toCircleWithBorder
com.facebook.imagepipeline.nativecode.WebpTranscoderFactory -> com.facebook.imagepipeline.nativecode.WebpTranscoderFactory:
    17:28:void <clinit>() -> <clinit>
    13:13:void <init>() -> <init>
    31:31:com.facebook.imagepipeline.nativecode.WebpTranscoder getWebpTranscoder() -> getWebpTranscoder
com.facebook.imagepipeline.platform.ArtDecoder -> com.facebook.imagepipeline.platform.ArtDecoder:
    24:25:void <init>(com.facebook.imagepipeline.memory.BitmapPool,int,androidx.core.util.Pools$SynchronizedPool) -> <init>
    29:29:int getBitmapSize(int,int,android.graphics.BitmapFactory$Options) -> getBitmapSize
com.facebook.imagepipeline.platform.DefaultDecoder -> com.facebook.imagepipeline.platform.DefaultDecoder:
    39:60:void <clinit>() -> <clinit>
    49:69:void <init>(com.facebook.imagepipeline.memory.BitmapPool,int,androidx.core.util.Pools$SynchronizedPool) -> <init>
    74:74:com.facebook.common.references.CloseableReference decodeFromEncodedImage(com.facebook.imagepipeline.image.EncodedImage,android.graphics.Bitmap$Config,android.graphics.Rect) -> decodeFromEncodedImage
    104:114:com.facebook.common.references.CloseableReference decodeFromEncodedImageWithColorSpace(com.facebook.imagepipeline.image.EncodedImage,android.graphics.Bitmap$Config,android.graphics.Rect,boolean) -> decodeFromEncodedImageWithColorSpace
    189:287:com.facebook.common.references.CloseableReference decodeFromStream(java.io.InputStream,android.graphics.BitmapFactory$Options,android.graphics.Rect,boolean) -> decodeFromStream
    83:83:com.facebook.common.references.CloseableReference decodeJPEGFromEncodedImage(com.facebook.imagepipeline.image.EncodedImage,android.graphics.Bitmap$Config,android.graphics.Rect,int) -> decodeJPEGFromEncodedImage
    137:158:com.facebook.common.references.CloseableReference decodeJPEGFromEncodedImageWithColorSpace(com.facebook.imagepipeline.image.EncodedImage,android.graphics.Bitmap$Config,android.graphics.Rect,int,boolean) -> decodeJPEGFromEncodedImageWithColorSpace
    172:172:com.facebook.common.references.CloseableReference decodeStaticImageFromStream(java.io.InputStream,android.graphics.BitmapFactory$Options,android.graphics.Rect) -> decodeStaticImageFromStream
    295:310:android.graphics.BitmapFactory$Options getDecodeOptionsForStream(com.facebook.imagepipeline.image.EncodedImage,android.graphics.Bitmap$Config) -> getDecodeOptionsForStream
com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder -> com.facebook.imagepipeline.platform.GingerbreadPurgeableDecoder:
    44:46:void <init>() -> <init>
    82:101:android.os.MemoryFile copyToMemoryFile(com.facebook.common.references.CloseableReference,int,byte[]) -> copyToMemoryFile
    58:58:android.graphics.Bitmap decodeByteArrayAsPurgeable(com.facebook.common.references.CloseableReference,android.graphics.BitmapFactory$Options) -> decodeByteArrayAsPurgeable
    130:144:android.graphics.Bitmap decodeFileDescriptorAsPurgeable(com.facebook.common.references.CloseableReference,int,byte[],android.graphics.BitmapFactory$Options) -> decodeFileDescriptorAsPurgeable
    74:75:android.graphics.Bitmap decodeJPEGByteArrayAsPurgeable(com.facebook.common.references.CloseableReference,int,android.graphics.BitmapFactory$Options) -> decodeJPEGByteArrayAsPurgeable
    105:113:java.lang.reflect.Method getFileDescriptorMethod() -> getFileDescriptorMethod
    118:121:java.io.FileDescriptor getMemoryFileDescriptor(android.os.MemoryFile) -> getMemoryFileDescriptor
com.facebook.imagepipeline.platform.KitKatPurgeableDecoder -> com.facebook.imagepipeline.platform.KitKatPurgeableDecoder:
    34:36:void <init>(com.facebook.imagepipeline.memory.FlexByteArrayPool) -> <init>
    47:60:android.graphics.Bitmap decodeByteArrayAsPurgeable(com.facebook.common.references.CloseableReference,android.graphics.BitmapFactory$Options) -> decodeByteArrayAsPurgeable
    75:94:android.graphics.Bitmap decodeJPEGByteArrayAsPurgeable(com.facebook.common.references.CloseableReference,int,android.graphics.BitmapFactory$Options) -> decodeJPEGByteArrayAsPurgeable
    100:102:void putEOI(byte[],int) -> putEOI
com.facebook.imagepipeline.platform.OreoDecoder -> com.facebook.imagepipeline.platform.OreoDecoder:
    25:26:void <init>(com.facebook.imagepipeline.memory.BitmapPool,int,androidx.core.util.Pools$SynchronizedPool) -> <init>
    33:35:int getBitmapSize(int,int,android.graphics.BitmapFactory$Options) -> getBitmapSize
    40:41:boolean hasColorGamutMismatch(android.graphics.BitmapFactory$Options) -> hasColorGamutMismatch
com.facebook.imagepipeline.platform.PlatformDecoderFactory -> com.facebook.imagepipeline.platform.PlatformDecoderFactory:
    16:16:void <init>() -> <init>
    27:39:com.facebook.imagepipeline.platform.PlatformDecoder buildPlatformDecoder(com.facebook.imagepipeline.memory.PoolFactory,boolean) -> buildPlatformDecoder
com.facebook.imagepipeline.platform.PreverificationHelper -> com.facebook.imagepipeline.platform.PreverificationHelper:
    15:15:void <init>() -> <init>
    19:19:boolean shouldUseHardwareBitmapConfig(android.graphics.Bitmap$Config) -> shouldUseHardwareBitmapConfig
com.facebook.imagepipeline.postprocessors.BlurPostProcessor -> com.facebook.imagepipeline.postprocessors.BlurPostProcessor:
    28:28:void <clinit>() -> <clinit>
    43:51:void <init>(int,android.content.Context,int) -> <init>
    61:62:void <init>(int,android.content.Context) -> <init>
    81:90:com.facebook.cache.common.CacheKey getPostprocessorCacheKey() -> getPostprocessorCacheKey
    66:71:void process(android.graphics.Bitmap,android.graphics.Bitmap) -> process
    75:76:void process(android.graphics.Bitmap) -> process
com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor -> com.facebook.imagepipeline.postprocessors.IterativeBoxBlurPostProcessor:
    33:34:void <init>(int) -> <init>
    36:41:void <init>(int,int) -> <init>
    51:55:com.facebook.cache.common.CacheKey getPostprocessorCacheKey() -> getPostprocessorCacheKey
    45:46:void process(android.graphics.Bitmap) -> process
com.facebook.imagepipeline.postprocessors.RoundAsCirclePostprocessor -> com.facebook.imagepipeline.postprocessors.RoundAsCirclePostprocessor:
    24:25:void <init>() -> <init>
    27:29:void <init>(boolean) -> <init>
    39:46:com.facebook.cache.common.CacheKey getPostprocessorCacheKey() -> getPostprocessorCacheKey
    33:34:void process(android.graphics.Bitmap) -> process
com.facebook.imagepipeline.postprocessors.RoundPostprocessor -> com.facebook.imagepipeline.postprocessors.RoundPostprocessor:
    21:21:void <clinit>() -> <clinit>
    27:28:void <init>() -> <init>
    30:32:void <init>(boolean) -> <init>
    53:60:com.facebook.cache.common.CacheKey getPostprocessorCacheKey() -> getPostprocessorCacheKey
    36:43:void process(android.graphics.Bitmap,android.graphics.Bitmap) -> process
    47:48:void process(android.graphics.Bitmap) -> process
com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer -> com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer:
    21:23:void <init>(com.facebook.imagepipeline.producers.Producer) -> <init>
    27:28:void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResults
com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer$AddImageTransformMetaDataConsumer -> com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer$AddImageTransformMetaDataConsumer:
    30:30:void <init>(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.AddImageTransformMetaDataProducer$1) -> <init>
    34:35:void <init>(com.facebook.imagepipeline.producers.Consumer) -> <init>
    30:30:void onNewResultImpl(java.lang.Object,int) -> onNewResultImpl
    39:47:void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int) -> onNewResultImpl
com.facebook.imagepipeline.producers.BaseConsumer -> com.facebook.imagepipeline.producers.BaseConsumer:
    35:37:void <init>() -> <init>
    44:44:boolean isLast(int) -> isLast
    52:52:boolean isNotLast(int) -> isNotLast
    117:127:void onCancellation() -> onCancellation
    104:114:void onFailure(java.lang.Throwable) -> onFailure
    91:101:void onNewResult(java.lang.Object,int) -> onNewResult
    135:144:void onProgressUpdate(float) -> onProgressUpdate
    165:165:void onProgressUpdateImpl(float) -> onProgressUpdateImpl
    171:172:void onUnhandledException(java.lang.Exception) -> onUnhandledException
    87:87:int simpleStatusForIsLast(boolean) -> simpleStatusForIsLast
    80:80:boolean statusHasAnyFlag(int,int) -> statusHasAnyFlag
    73:73:boolean statusHasFlag(int,int) -> statusHasFlag
    66:66:int turnOffStatusFlag(int,int) -> turnOffStatusFlag
    59:59:int turnOnStatusFlag(int,int) -> turnOnStatusFlag
com.facebook.imagepipeline.producers.BaseNetworkFetcher -> com.facebook.imagepipeline.producers.BaseNetworkFetcher:
    19:19:void <init>() -> <init>
    35:35:java.util.Map getExtraMap(com.facebook.imagepipeline.producers.FetchState,int) -> getExtraMap
    30:30:void onFetchCompletion(com.facebook.imagepipeline.producers.FetchState,int) -> onFetchCompletion
    24:24:boolean shouldPropagate(com.facebook.imagepipeline.producers.FetchState) -> shouldPropagate
com.facebook.imagepipeline.producers.BaseProducerContext -> com.facebook.imagepipeline.producers.BaseProducerContext:
    46:59:void <init>(com.facebook.imagepipeline.request.ImageRequest,java.lang.String,com.facebook.imagepipeline.producers.ProducerListener,java.lang.Object,com.facebook.imagepipeline.request.ImageRequest$RequestLevel,boolean,boolean,com.facebook.imagepipeline.common.Priority) -> <init>
    107:118:void addCallbacks(com.facebook.imagepipeline.producers.ProducerContextCallbacks) -> addCallbacks
    205:211:void callOnCancellationRequested(java.util.List) -> callOnCancellationRequested
    232:238:void callOnIsIntermediateResultExpectedChanged(java.util.List) -> callOnIsIntermediateResultExpectedChanged
    218:224:void callOnIsPrefetchChanged(java.util.List) -> callOnIsPrefetchChanged
    244:250:void callOnPriorityChanged(java.util.List) -> callOnPriorityChanged
    124:125:void cancel() -> cancel
    192:197:java.util.List cancelNoCallbacks() -> cancelNoCallbacks
    78:78:java.lang.Object getCallerContext() -> getCallerContext
    68:68:java.lang.String getId() -> getId
    63:63:com.facebook.imagepipeline.request.ImageRequest getImageRequest() -> getImageRequest
    73:73:com.facebook.imagepipeline.producers.ProducerListener getListener() -> getListener
    83:83:com.facebook.imagepipeline.request.ImageRequest$RequestLevel getLowestPermittedRequestLevel() -> getLowestPermittedRequestLevel
    93:93:com.facebook.imagepipeline.common.Priority getPriority() -> getPriority
    102:102:boolean isCancelled() -> isCancelled
    98:98:boolean isIntermediateResultExpected() -> isIntermediateResultExpected
    88:88:boolean isPrefetch() -> isPrefetch
    174:179:java.util.List setIsIntermediateResultExpectedNoCallbacks(boolean) -> setIsIntermediateResultExpectedNoCallbacks
    137:142:java.util.List setIsPrefetchNoCallbacks(boolean) -> setIsPrefetchNoCallbacks
    155:160:java.util.List setPriorityNoCallbacks(com.facebook.imagepipeline.common.Priority) -> setPriorityNoCallbacks
com.facebook.imagepipeline.producers.BaseProducerContextCallbacks -> com.facebook.imagepipeline.producers.BaseProducerContextCallbacks:
    13:13:void <init>() -> <init>
    17:17:void onCancellationRequested() -> onCancellationRequested
    25:25:void onIsIntermediateResultExpectedChanged() -> onIsIntermediateResultExpectedChanged
    21:21:void onIsPrefetchChanged() -> onIsPrefetchChanged
    29:29:void onPriorityChanged() -> onPriorityChanged
com.facebook.imagepipeline.producers.BitmapMemoryCacheGetProducer -> com.facebook.imagepipeline.producers.BitmapMemoryCacheGetProducer:
    27:28:void <init>(com.facebook.imagepipeline.cache.MemoryCache,com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.producers.Producer) -> <init>
    41:41:java.lang.String getProducerName() -> getProducerName
    36:36:com.facebook.imagepipeline.producers.Consumer wrapConsumer(com.facebook.imagepipeline.producers.Consumer,com.facebook.cache.common.CacheKey,boolean) -> wrapConsumer
com.facebook.imagepipeline.producers.BitmapMemoryCacheKeyMultiplexProducer -> com.facebook.imagepipeline.producers.BitmapMemoryCacheKeyMultiplexProducer:
    29:31:void <init>(com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.producers.Producer) -> <init>
    20:20:java.io.Closeable cloneOrNull(java.io.Closeable) -> cloneOrNull
    44:44:com.facebook.common.references.CloseableReference cloneOrNull(com.facebook.common.references.CloseableReference) -> cloneOrNull
    20:20:java.lang.Object getKey(com.facebook.imagepipeline.producers.ProducerContext) -> getKey
    35:39:android.util.Pair getKey(com.facebook.imagepipeline.producers.ProducerContext) -> getKey
com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer -> com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer:
    35:39:void <init>(com.facebook.imagepipeline.cache.MemoryCache,com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.producers.Producer) -> <init>
    23:23:com.facebook.imagepipeline.cache.MemoryCache access$000(com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer) -> access$000
    181:181:java.lang.String getProducerName() -> getProducerName
    46:111:void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResults
    117:117:com.facebook.imagepipeline.producers.Consumer wrapConsumer(com.facebook.imagepipeline.producers.Consumer,com.facebook.cache.common.CacheKey,boolean) -> wrapConsumer
com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer$1 -> com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer$1:
    118:118:void <init>(com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.cache.common.CacheKey,boolean) -> <init>
    118:118:void onNewResultImpl(java.lang.Object,int) -> onNewResultImpl
    123:176:void onNewResultImpl(com.facebook.common.references.CloseableReference,int) -> onNewResultImpl
com.facebook.imagepipeline.producers.BitmapPrepareProducer -> com.facebook.imagepipeline.producers.BitmapPrepareProducer:
    43:49:void <init>(com.facebook.imagepipeline.producers.Producer,int,int,boolean) -> <init>
    56:63:void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResults
com.facebook.imagepipeline.producers.BitmapPrepareProducer$BitmapPrepareConsumer -> com.facebook.imagepipeline.producers.BitmapPrepareProducer$BitmapPrepareConsumer:
    75:78:void <init>(com.facebook.imagepipeline.producers.Consumer,int,int) -> <init>
    89:115:void internalPrepareBitmap(com.facebook.common.references.CloseableReference) -> internalPrepareBitmap
    65:65:void onNewResultImpl(java.lang.Object,int) -> onNewResultImpl
    84:86:void onNewResultImpl(com.facebook.common.references.CloseableReference,int) -> onNewResultImpl
com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer -> com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer:
    25:28:void <init>(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.producers.Producer) -> <init>
    19:19:com.facebook.imagepipeline.producers.Producer access$100(com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer) -> access$100
    34:36:void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResults
com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer -> com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$OnFirstImageConsumer:
    38:38:void <init>(com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer$1) -> <init>
    44:47:void <init>(com.facebook.imagepipeline.producers.BranchOnSeparateImagesProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> <init>
    72:73:void onFailureImpl(java.lang.Throwable) -> onFailureImpl
    38:38:void onNewResultImpl(java.lang.Object,int) -> onNewResultImpl
    51:68:void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int) -> onNewResultImpl
com.facebook.imagepipeline.producers.DataFetchProducer -> com.facebook.imagepipeline.producers.DataFetchProducer:
    39:40:void <init>(com.facebook.common.memory.PooledByteBufferFactory) -> <init>
    61:70:byte[] getData(java.lang.String) -> getData
    44:45:com.facebook.imagepipeline.image.EncodedImage getEncodedImage(com.facebook.imagepipeline.request.ImageRequest) -> getEncodedImage
    50:50:java.lang.String getProducerName() -> getProducerName
    76:80:boolean isBase64(java.lang.String) -> isBase64
com.facebook.imagepipeline.producers.DecodeProducer -> com.facebook.imagepipeline.producers.DecodeProducer:
    79:89:void <init>(com.facebook.common.memory.ByteArrayPool,java.util.concurrent.Executor,com.facebook.imagepipeline.decoder.ImageDecoder,com.facebook.imagepipeline.decoder.ProgressiveJpegConfig,boolean,boolean,boolean,com.facebook.imagepipeline.producers.Producer,int) -> <init>
    47:47:boolean access$000(com.facebook.imagepipeline.producers.DecodeProducer) -> access$000
    47:47:boolean access$100(com.facebook.imagepipeline.producers.DecodeProducer) -> access$100
    47:47:java.util.concurrent.Executor access$300(com.facebook.imagepipeline.producers.DecodeProducer) -> access$300
    47:47:com.facebook.imagepipeline.decoder.ImageDecoder access$700(com.facebook.imagepipeline.producers.DecodeProducer) -> access$700
    96:122:void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResults
com.facebook.imagepipeline.producers.DecodeProducer$LocalImagesProgressiveDecoder -> com.facebook.imagepipeline.producers.DecodeProducer$LocalImagesProgressiveDecoder:
    430:432:void <init>(com.facebook.imagepipeline.producers.DecodeProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,boolean,int) -> <init>
    444:444:int getIntermediateImageEndOffset(com.facebook.imagepipeline.image.EncodedImage) -> getIntermediateImageEndOffset
    449:449:com.facebook.imagepipeline.image.QualityInfo getQualityInfo() -> getQualityInfo
    435:439:boolean updateDecodeJob(com.facebook.imagepipeline.image.EncodedImage,int) -> updateDecodeJob
com.facebook.imagepipeline.producers.DecodeProducer$NetworkImagesProgressiveDecoder -> com.facebook.imagepipeline.producers.DecodeProducer$NetworkImagesProgressiveDecoder:
    465:470:void <init>(com.facebook.imagepipeline.producers.DecodeProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,com.facebook.imagepipeline.decoder.ProgressiveJpegParser,com.facebook.imagepipeline.decoder.ProgressiveJpegConfig,boolean,int) -> <init>
    500:500:int getIntermediateImageEndOffset(com.facebook.imagepipeline.image.EncodedImage) -> getIntermediateImageEndOffset
    505:505:com.facebook.imagepipeline.image.QualityInfo getQualityInfo() -> getQualityInfo
    473:495:boolean updateDecodeJob(com.facebook.imagepipeline.image.EncodedImage,int) -> updateDecodeJob
com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder -> com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder:
    127:187:void <init>(com.facebook.imagepipeline.producers.DecodeProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,boolean,int) -> <init>
    124:124:void access$200(com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder,com.facebook.imagepipeline.image.EncodedImage,int) -> access$200
    124:124:com.facebook.imagepipeline.producers.ProducerContext access$400(com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder) -> access$400
    124:124:com.facebook.imagepipeline.producers.JobScheduler access$500(com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder) -> access$500
    124:124:void access$600(com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder) -> access$600
    237:323:void doDecode(com.facebook.imagepipeline.image.EncodedImage,int) -> doDecode
    334:364:java.util.Map getExtraMap(com.facebook.imagepipeline.image.CloseableImage,long,com.facebook.imagepipeline.image.QualityInfo,boolean,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> getExtraMap
    415:417:void handleCancellation() -> handleCancellation
    407:409:void handleError(java.lang.Throwable) -> handleError
    394:401:void handleResult(com.facebook.imagepipeline.image.CloseableImage,int) -> handleResult
    372:372:boolean isFinished() -> isFinished
    380:388:void maybeFinish(boolean) -> maybeFinish
    226:227:void onCancellationImpl() -> onCancellationImpl
    221:222:void onFailureImpl(java.lang.Throwable) -> onFailureImpl
    124:124:void onNewResultImpl(java.lang.Object,int) -> onNewResultImpl
    192:212:void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int) -> onNewResultImpl
    216:217:void onProgressUpdateImpl(float) -> onProgressUpdateImpl
    231:231:boolean updateDecodeJob(com.facebook.imagepipeline.image.EncodedImage,int) -> updateDecodeJob
com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder$1 -> com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder$1:
    150:150:void <init>(com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder,com.facebook.imagepipeline.producers.DecodeProducer,com.facebook.imagepipeline.producers.ProducerContext,int) -> <init>
    153:168:void run(com.facebook.imagepipeline.image.EncodedImage,int) -> run
com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder$2 -> com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder$2:
    172:172:void <init>(com.facebook.imagepipeline.producers.DecodeProducer$ProgressiveDecoder,com.facebook.imagepipeline.producers.DecodeProducer,boolean) -> <init>
    182:185:void onCancellationRequested() -> onCancellationRequested
    175:178:void onIsIntermediateResultExpectedChanged() -> onIsIntermediateResultExpectedChanged
com.facebook.imagepipeline.producers.DelegatingConsumer -> com.facebook.imagepipeline.producers.DelegatingConsumer:
    16:18:void <init>(com.facebook.imagepipeline.producers.Consumer) -> <init>
    21:21:com.facebook.imagepipeline.producers.Consumer getConsumer() -> getConsumer
    31:32:void onCancellationImpl() -> onCancellationImpl
    26:27:void onFailureImpl(java.lang.Throwable) -> onFailureImpl
    36:37:void onProgressUpdateImpl(float) -> onProgressUpdateImpl
com.facebook.imagepipeline.producers.DiskCacheReadProducer -> com.facebook.imagepipeline.producers.DiskCacheReadProducer:
    52:57:void <init>(com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.producers.Producer) -> <init>
    37:37:boolean access$000(bolts.Task) -> access$000
    37:37:com.facebook.imagepipeline.producers.Producer access$100(com.facebook.imagepipeline.producers.DiskCacheReadProducer) -> access$100
    145:157:java.util.Map getExtraMap(com.facebook.imagepipeline.producers.ProducerListener,java.lang.String,boolean,int) -> getExtraMap
    123:124:boolean isTaskCancelled(bolts.Task) -> isTaskCancelled
    130:137:void maybeStartInputProducer(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> maybeStartInputProducer
    86:88:bolts.Continuation onFinishDiskReads(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> onFinishDiskReads
    62:81:void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResults
    164:171:void subscribeTaskForRequestCancellation(java.util.concurrent.atomic.AtomicBoolean,com.facebook.imagepipeline.producers.ProducerContext) -> subscribeTaskForRequestCancellation
com.facebook.imagepipeline.producers.DiskCacheReadProducer$1 -> com.facebook.imagepipeline.producers.DiskCacheReadProducer$1:
    88:88:void <init>(com.facebook.imagepipeline.producers.DiskCacheReadProducer,com.facebook.imagepipeline.producers.ProducerListener,java.lang.String,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> <init>
    88:88:java.lang.Object then(bolts.Task) -> then
    92:117:java.lang.Void then(bolts.Task) -> then
com.facebook.imagepipeline.producers.DiskCacheReadProducer$2 -> com.facebook.imagepipeline.producers.DiskCacheReadProducer$2:
    165:165:void <init>(com.facebook.imagepipeline.producers.DiskCacheReadProducer,java.util.concurrent.atomic.AtomicBoolean) -> <init>
    168:169:void onCancellationRequested() -> onCancellationRequested
com.facebook.imagepipeline.producers.DiskCacheWriteProducer -> com.facebook.imagepipeline.producers.DiskCacheWriteProducer:
    43:48:void <init>(com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.producers.Producer) -> <init>
    59:78:void maybeStartInputProducer(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> maybeStartInputProducer
    53:54:void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResults
com.facebook.imagepipeline.producers.DiskCacheWriteProducer$DiskCacheWriteConsumer -> com.facebook.imagepipeline.producers.DiskCacheWriteProducer$DiskCacheWriteConsumer:
    86:86:void <init>(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.producers.DiskCacheWriteProducer$1) -> <init>
    100:105:void <init>(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.CacheKeyFactory) -> <init>
    86:86:void onNewResultImpl(java.lang.Object,int) -> onNewResultImpl
    111:130:void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int) -> onNewResultImpl
com.facebook.imagepipeline.producers.EncodedCacheKeyMultiplexProducer -> com.facebook.imagepipeline.producers.EncodedCacheKeyMultiplexProducer:
    27:29:void <init>(com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.producers.Producer) -> <init>
    19:19:java.io.Closeable cloneOrNull(java.io.Closeable) -> cloneOrNull
    40:40:com.facebook.imagepipeline.image.EncodedImage cloneOrNull(com.facebook.imagepipeline.image.EncodedImage) -> cloneOrNull
    19:19:java.lang.Object getKey(com.facebook.imagepipeline.producers.ProducerContext) -> getKey
    32:36:android.util.Pair getKey(com.facebook.imagepipeline.producers.ProducerContext) -> getKey
com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer -> com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer:
    36:40:void <init>(com.facebook.imagepipeline.cache.MemoryCache,com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.producers.Producer) -> <init>
    46:109:void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResults
com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer$EncodedMemoryCacheConsumer -> com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer$EncodedMemoryCacheConsumer:
    123:127:void <init>(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.cache.MemoryCache,com.facebook.cache.common.CacheKey,boolean) -> <init>
    111:111:void onNewResultImpl(java.lang.Object,int) -> onNewResultImpl
    132:179:void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int) -> onNewResultImpl
com.facebook.imagepipeline.producers.FetchState -> com.facebook.imagepipeline.producers.FetchState:
    30:34:void <init>(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> <init>
    37:37:com.facebook.imagepipeline.producers.Consumer getConsumer() -> getConsumer
    41:41:com.facebook.imagepipeline.producers.ProducerContext getContext() -> getContext
    45:45:java.lang.String getId() -> getId
    57:57:long getLastIntermediateResultTimeMs() -> getLastIntermediateResultTimeMs
    49:49:com.facebook.imagepipeline.producers.ProducerListener getListener() -> getListener
    65:65:int getOnNewResultStatusFlags() -> getOnNewResultStatusFlags
    78:78:com.facebook.imagepipeline.common.BytesRange getResponseBytesRange() -> getResponseBytesRange
    53:53:android.net.Uri getUri() -> getUri
    61:62:void setLastIntermediateResultTimeMs(long) -> setLastIntermediateResultTimeMs
    73:74:void setOnNewResultStatusFlags(int) -> setOnNewResultStatusFlags
    86:87:void setResponseBytesRange(com.facebook.imagepipeline.common.BytesRange) -> setResponseBytesRange
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher -> com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher:
    44:45:void <init>() -> <init>
    48:50:void <init>(int) -> <init>
    53:55:void <init>(java.util.concurrent.ExecutorService) -> <init>
    59:59:com.facebook.imagepipeline.producers.FetchState createFetchState(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> createFetchState
    111:137:java.net.HttpURLConnection downloadFrom(android.net.Uri,int) -> downloadFrom
    167:167:java.lang.String error(java.lang.String,java.lang.Object[]) -> error
    64:80:void fetch(com.facebook.imagepipeline.producers.FetchState,com.facebook.imagepipeline.producers.NetworkFetcher$Callback) -> fetch
    84:108:void fetchSync(com.facebook.imagepipeline.producers.FetchState,com.facebook.imagepipeline.producers.NetworkFetcher$Callback) -> fetchSync
    153:162:boolean isHttpRedirect(int) -> isHttpRedirect
    148:148:boolean isHttpSuccess(int) -> isHttpSuccess
    143:144:java.net.HttpURLConnection openConnectionTo(android.net.Uri) -> openConnectionTo
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$1 -> com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$1:
    65:65:void <init>(com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher,com.facebook.imagepipeline.producers.FetchState,com.facebook.imagepipeline.producers.NetworkFetcher$Callback) -> <init>
    68:69:void run() -> run
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$2 -> com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher$2:
    72:72:void <init>(com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher,java.util.concurrent.Future,com.facebook.imagepipeline.producers.NetworkFetcher$Callback) -> <init>
    75:78:void onCancellationRequested() -> onCancellationRequested
com.facebook.imagepipeline.producers.JobScheduler -> com.facebook.imagepipeline.producers.JobScheduler:
    66:87:void <init>(java.util.concurrent.Executor,com.facebook.imagepipeline.producers.JobScheduler$JobRunnable,int) -> <init>
    22:22:void access$000(com.facebook.imagepipeline.producers.JobScheduler) -> access$000
    22:22:void access$100(com.facebook.imagepipeline.producers.JobScheduler) -> access$100
    97:103:void clearJob() -> clearJob
    187:208:void doJob() -> doJob
    175:180:void enqueueJob(long) -> enqueueJob
    243:243:long getQueuedTime() -> getQueuedTime
    211:227:void onJobFinished() -> onJobFinished
    140:168:boolean scheduleJob() -> scheduleJob
    232:234:boolean shouldProcess(com.facebook.imagepipeline.image.EncodedImage,int) -> shouldProcess
    183:184:void submitJob() -> submitJob
    115:125:boolean updateJob(com.facebook.imagepipeline.image.EncodedImage,int) -> updateJob
com.facebook.imagepipeline.producers.JobScheduler$1 -> com.facebook.imagepipeline.producers.JobScheduler$1:
    70:70:void <init>(com.facebook.imagepipeline.producers.JobScheduler) -> <init>
    73:74:void run() -> run
com.facebook.imagepipeline.producers.JobScheduler$2 -> com.facebook.imagepipeline.producers.JobScheduler$2:
    76:76:void <init>(com.facebook.imagepipeline.producers.JobScheduler) -> <init>
    79:80:void run() -> run
com.facebook.imagepipeline.producers.JobScheduler$3 -> com.facebook.imagepipeline.producers.JobScheduler$3:
    147:147:void <clinit>() -> <clinit>
com.facebook.imagepipeline.producers.JobScheduler$JobStartExecutorSupplier -> com.facebook.imagepipeline.producers.JobScheduler$JobStartExecutorSupplier:
    27:27:void <init>() -> <init>
    32:35:java.util.concurrent.ScheduledExecutorService get() -> get
com.facebook.imagepipeline.producers.JobScheduler$JobState -> com.facebook.imagepipeline.producers.JobScheduler$JobState:
    49:50:void <clinit>() -> <clinit>
    50:50:void <init>(java.lang.String,int) -> <init>
    49:49:com.facebook.imagepipeline.producers.JobScheduler$JobState valueOf(java.lang.String) -> valueOf
    49:49:com.facebook.imagepipeline.producers.JobScheduler$JobState[] values() -> values
com.facebook.imagepipeline.producers.LocalAssetFetchProducer -> com.facebook.imagepipeline.producers.LocalAssetFetchProducer:
    31:33:void <init>(java.util.concurrent.Executor,com.facebook.common.memory.PooledByteBufferFactory,android.content.res.AssetManager) -> <init>
    66:66:java.lang.String getAssetName(com.facebook.imagepipeline.request.ImageRequest) -> getAssetName
    37:39:com.facebook.imagepipeline.image.EncodedImage getEncodedImage(com.facebook.imagepipeline.request.ImageRequest) -> getEncodedImage
    43:56:int getLength(com.facebook.imagepipeline.request.ImageRequest) -> getLength
    62:62:java.lang.String getProducerName() -> getProducerName
com.facebook.imagepipeline.producers.LocalContentUriFetchProducer -> com.facebook.imagepipeline.producers.LocalContentUriFetchProducer:
    34:34:void <clinit>() -> <clinit>
    45:47:void <init>(java.util.concurrent.Executor,com.facebook.common.memory.PooledByteBufferFactory,android.content.ContentResolver) -> <init>
    88:105:com.facebook.imagepipeline.image.EncodedImage getCameraImage(android.net.Uri) -> getCameraImage
    51:83:com.facebook.imagepipeline.image.EncodedImage getEncodedImage(com.facebook.imagepipeline.request.ImageRequest) -> getEncodedImage
    109:109:int getLength(java.lang.String) -> getLength
    114:114:java.lang.String getProducerName() -> getProducerName
com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer -> com.facebook.imagepipeline.producers.LocalContentUriThumbnailFetchProducer:
    35:48:void <clinit>() -> <clinit>
    58:60:void <init>(java.util.concurrent.Executor,com.facebook.common.memory.PooledByteBufferFactory,android.content.ContentResolver) -> <init>
    64:66:boolean canProvideImageForSize(com.facebook.imagepipeline.common.ResizeOptions) -> canProvideImageForSize
    87:109:com.facebook.imagepipeline.image.EncodedImage getCameraImage(android.net.Uri,com.facebook.imagepipeline.common.ResizeOptions) -> getCameraImage
    72:81:com.facebook.imagepipeline.image.EncodedImage getEncodedImage(com.facebook.imagepipeline.request.ImageRequest) -> getEncodedImage
    168:168:int getLength(java.lang.String) -> getLength
    173:173:java.lang.String getProducerName() -> getProducerName
    177:186:int getRotationAngle(java.lang.String) -> getRotationAngle
    117:144:com.facebook.imagepipeline.image.EncodedImage getThumbnail(com.facebook.imagepipeline.common.ResizeOptions,int) -> getThumbnail
    152:163:int getThumbnailKind(com.facebook.imagepipeline.common.ResizeOptions) -> getThumbnailKind
com.facebook.imagepipeline.producers.LocalExifThumbnailProducer -> com.facebook.imagepipeline.producers.LocalExifThumbnailProducer:
    54:58:void <init>(java.util.concurrent.Executor,com.facebook.common.memory.PooledByteBufferFactory,android.content.ContentResolver) -> <init>
    40:40:com.facebook.common.memory.PooledByteBufferFactory access$000(com.facebook.imagepipeline.producers.LocalExifThumbnailProducer) -> access$000
    40:40:com.facebook.imagepipeline.image.EncodedImage access$100(com.facebook.imagepipeline.producers.LocalExifThumbnailProducer,com.facebook.common.memory.PooledByteBuffer,android.media.ExifInterface) -> access$100
    142:158:com.facebook.imagepipeline.image.EncodedImage buildEncodedImage(com.facebook.common.memory.PooledByteBuffer,android.media.ExifInterface) -> buildEncodedImage
    73:73:boolean canProvideImageForSize(com.facebook.imagepipeline.common.ResizeOptions) -> canProvideImageForSize
    168:172:boolean canReadAsFile(java.lang.String) -> canReadAsFile
    125:136:android.media.ExifInterface getExifInterface(android.net.Uri) -> getExifInterface
    163:164:int getRotationAngle(android.media.ExifInterface) -> getRotationAngle
    84:122:void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResults
com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$1 -> com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$1:
    89:89:void <init>(com.facebook.imagepipeline.producers.LocalExifThumbnailProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerListener,java.lang.String,java.lang.String,com.facebook.imagepipeline.request.ImageRequest) -> <init>
    89:89:void disposeResult(java.lang.Object) -> disposeResult
    106:107:void disposeResult(com.facebook.imagepipeline.image.EncodedImage) -> disposeResult
    89:89:java.util.Map getExtraMapOnSuccess(java.lang.Object) -> getExtraMapOnSuccess
    111:111:java.util.Map getExtraMapOnSuccess(com.facebook.imagepipeline.image.EncodedImage) -> getExtraMapOnSuccess
    89:89:java.lang.Object getResult() -> getResult
    92:101:com.facebook.imagepipeline.image.EncodedImage getResult() -> getResult
com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$2 -> com.facebook.imagepipeline.producers.LocalExifThumbnailProducer$2:
    115:115:void <init>(com.facebook.imagepipeline.producers.LocalExifThumbnailProducer,com.facebook.imagepipeline.producers.StatefulProducerRunnable) -> <init>
    118:119:void onCancellationRequested() -> onCancellationRequested
com.facebook.imagepipeline.producers.LocalFetchProducer -> com.facebook.imagepipeline.producers.LocalFetchProducer:
    31:34:void <init>(java.util.concurrent.Executor,com.facebook.common.memory.PooledByteBufferFactory) -> <init>
    80:90:com.facebook.imagepipeline.image.EncodedImage getByteBufferBackedEncodedImage(java.io.InputStream,int) -> getByteBufferBackedEncodedImage
    97:97:com.facebook.imagepipeline.image.EncodedImage getEncodedImage(java.io.InputStream,int) -> getEncodedImage
    41:74:void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResults
com.facebook.imagepipeline.producers.LocalFetchProducer$1 -> com.facebook.imagepipeline.producers.LocalFetchProducer$1:
    46:46:void <init>(com.facebook.imagepipeline.producers.LocalFetchProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerListener,java.lang.String,java.lang.String,com.facebook.imagepipeline.request.ImageRequest,com.facebook.imagepipeline.producers.ProducerListener,java.lang.String) -> <init>
    46:46:void disposeResult(java.lang.Object) -> disposeResult
    62:63:void disposeResult(com.facebook.imagepipeline.image.EncodedImage) -> disposeResult
    46:46:java.lang.Object getResult() -> getResult
    50:57:com.facebook.imagepipeline.image.EncodedImage getResult() -> getResult
com.facebook.imagepipeline.producers.LocalFetchProducer$2 -> com.facebook.imagepipeline.producers.LocalFetchProducer$2:
    67:67:void <init>(com.facebook.imagepipeline.producers.LocalFetchProducer,com.facebook.imagepipeline.producers.StatefulProducerRunnable) -> <init>
    70:71:void onCancellationRequested() -> onCancellationRequested
com.facebook.imagepipeline.producers.LocalFileFetchProducer -> com.facebook.imagepipeline.producers.LocalFileFetchProducer:
    27:28:void <init>(java.util.concurrent.Executor,com.facebook.common.memory.PooledByteBufferFactory) -> <init>
    32:34:com.facebook.imagepipeline.image.EncodedImage getEncodedImage(com.facebook.imagepipeline.request.ImageRequest) -> getEncodedImage
    39:39:java.lang.String getProducerName() -> getProducerName
com.facebook.imagepipeline.producers.LocalResourceFetchProducer -> com.facebook.imagepipeline.producers.LocalResourceFetchProducer:
    31:33:void <init>(java.util.concurrent.Executor,com.facebook.common.memory.PooledByteBufferFactory,android.content.res.Resources) -> <init>
    37:39:com.facebook.imagepipeline.image.EncodedImage getEncodedImage(com.facebook.imagepipeline.request.ImageRequest) -> getEncodedImage
    43:56:int getLength(com.facebook.imagepipeline.request.ImageRequest) -> getLength
    62:62:java.lang.String getProducerName() -> getProducerName
    66:66:int getResourceId(com.facebook.imagepipeline.request.ImageRequest) -> getResourceId
com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer -> com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer:
    46:49:void <init>(java.util.concurrent.Executor,android.content.ContentResolver) -> <init>
    37:37:java.lang.String access$000(com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer,com.facebook.imagepipeline.request.ImageRequest) -> access$000
    37:37:int access$100(com.facebook.imagepipeline.request.ImageRequest) -> access$100
    116:119:int calculateKind(com.facebook.imagepipeline.request.ImageRequest) -> calculateKind
    123:149:java.lang.String getLocalFilePath(com.facebook.imagepipeline.request.ImageRequest) -> getLocalFilePath
    56:113:void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResults
com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer$1 -> com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer$1:
    61:61:void <init>(com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerListener,java.lang.String,java.lang.String,com.facebook.imagepipeline.producers.ProducerListener,java.lang.String,com.facebook.imagepipeline.request.ImageRequest) -> <init>
    61:61:void disposeResult(java.lang.Object) -> disposeResult
    102:103:void disposeResult(com.facebook.common.references.CloseableReference) -> disposeResult
    61:61:java.util.Map getExtraMapOnSuccess(java.lang.Object) -> getExtraMapOnSuccess
    97:97:java.util.Map getExtraMapOnSuccess(com.facebook.common.references.CloseableReference) -> getExtraMapOnSuccess
    61:61:java.lang.Object getResult() -> getResult
    76:89:com.facebook.common.references.CloseableReference getResult() -> getResult
    70:72:void onFailure(java.lang.Exception) -> onFailure
    61:61:void onSuccess(java.lang.Object) -> onSuccess
    64:66:void onSuccess(com.facebook.common.references.CloseableReference) -> onSuccess
com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer$2 -> com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer$2:
    106:106:void <init>(com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer,com.facebook.imagepipeline.producers.StatefulProducerRunnable) -> <init>
    109:110:void onCancellationRequested() -> onCancellationRequested
com.facebook.imagepipeline.producers.MultiplexProducer -> com.facebook.imagepipeline.producers.MultiplexProducer:
    54:57:void <init>(com.facebook.imagepipeline.producers.Producer) -> <init>
    39:39:com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer access$100(com.facebook.imagepipeline.producers.MultiplexProducer,java.lang.Object) -> access$100
    39:39:void access$700(com.facebook.imagepipeline.producers.MultiplexProducer,java.lang.Object,com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer) -> access$700
    39:39:com.facebook.imagepipeline.producers.Producer access$900(com.facebook.imagepipeline.producers.MultiplexProducer) -> access$900
    100:103:com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer createAndPutNewMultiplexer(java.lang.Object) -> createAndPutNewMultiplexer
    97:97:com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer getExistingMultiplexer(java.lang.Object) -> getExistingMultiplexer
    62:94:void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResults
    106:110:void removeMultiplexer(java.lang.Object,com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer) -> removeMultiplexer
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer -> com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer:
    182:185:void <init>(com.facebook.imagepipeline.producers.MultiplexProducer,java.lang.Object) -> <init>
    130:130:void access$000(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer) -> access$000
    130:130:java.util.concurrent.CopyOnWriteArraySet access$200(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer) -> access$200
    130:130:com.facebook.imagepipeline.producers.BaseProducerContext access$300(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer) -> access$300
    130:130:java.util.List access$400(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer) -> access$400
    130:130:java.util.List access$500(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer) -> access$500
    130:130:java.util.List access$600(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer) -> access$600
    258:310:void addCallbacks(android.util.Pair,com.facebook.imagepipeline.producers.ProducerContext) -> addCallbacks
    199:248:boolean addNewConsumer(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> addNewConsumer
    495:501:void closeSafely(java.io.Closeable) -> closeSafely
    376:382:boolean computeIsIntermediateResultExpected() -> computeIsIntermediateResultExpected
    358:364:boolean computeIsPrefetch() -> computeIsPrefetch
    393:398:com.facebook.imagepipeline.common.Priority computePriority() -> computePriority
    458:471:void onCancelled(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$ForwardingConsumer) -> onCancelled
    403:423:void onFailure(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$ForwardingConsumer,java.lang.Throwable) -> onFailure
    430:455:void onNextResult(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$ForwardingConsumer,java.io.Closeable,int) -> onNextResult
    475:491:void onProgressUpdate(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$ForwardingConsumer,float) -> onProgressUpdate
    320:348:void startInputProducerIfHasAttachedConsumers() -> startInputProducerIfHasAttachedConsumers
    368:373:java.util.List updateIsIntermediateResultExpected() -> updateIsIntermediateResultExpected
    351:355:java.util.List updateIsPrefetch() -> updateIsPrefetch
    386:390:java.util.List updatePriority() -> updatePriority
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$1 -> com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$1:
    259:259:void <init>(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer,android.util.Pair) -> <init>
    262:292:void onCancellationRequested() -> onCancellationRequested
    301:303:void onIsIntermediateResultExpectedChanged() -> onIsIntermediateResultExpectedChanged
    296:297:void onIsPrefetchChanged() -> onIsPrefetchChanged
    307:308:void onPriorityChanged() -> onPriorityChanged
com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$ForwardingConsumer -> com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer$ForwardingConsumer:
    506:506:void <init>(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer) -> <init>
    506:506:void <init>(com.facebook.imagepipeline.producers.MultiplexProducer$Multiplexer,com.facebook.imagepipeline.producers.MultiplexProducer$1) -> <init>
    538:547:void onCancellationImpl() -> onCancellationImpl
    524:533:void onFailureImpl(java.lang.Throwable) -> onFailureImpl
    506:506:void onNewResultImpl(java.lang.Object,int) -> onNewResultImpl
    510:519:void onNewResultImpl(java.io.Closeable,int) -> onNewResultImpl
    552:561:void onProgressUpdateImpl(float) -> onProgressUpdateImpl
com.facebook.imagepipeline.producers.NetworkFetchProducer -> com.facebook.imagepipeline.producers.NetworkFetchProducer:
    54:58:void <init>(com.facebook.common.memory.PooledByteBufferFactory,com.facebook.common.memory.ByteArrayPool,com.facebook.imagepipeline.producers.NetworkFetcher) -> <init>
    34:34:void access$000(com.facebook.imagepipeline.producers.NetworkFetchProducer,com.facebook.imagepipeline.producers.FetchState,java.lang.Throwable) -> access$000
    34:34:void access$100(com.facebook.imagepipeline.producers.NetworkFetchProducer,com.facebook.imagepipeline.producers.FetchState) -> access$100
    120:134:float calculateProgress(int,int) -> calculateProgress
    209:212:java.util.Map getExtraMap(com.facebook.imagepipeline.producers.FetchState,int) -> getExtraMap
    156:165:void handleFinalResult(com.facebook.common.memory.PooledByteBufferOutputStream,com.facebook.imagepipeline.producers.FetchState) -> handleFinalResult
    140:152:void maybeHandleIntermediateResult(com.facebook.common.memory.PooledByteBufferOutputStream,com.facebook.imagepipeline.producers.FetchState) -> maybeHandleIntermediateResult
    172:184:void notifyConsumer(com.facebook.common.memory.PooledByteBufferOutputStream,int,com.facebook.imagepipeline.common.BytesRange,com.facebook.imagepipeline.producers.Consumer) -> notifyConsumer
    195:198:void onCancellation(com.facebook.imagepipeline.producers.FetchState) -> onCancellation
    187:192:void onFailure(com.facebook.imagepipeline.producers.FetchState,java.lang.Throwable) -> onFailure
    95:117:void onResponse(com.facebook.imagepipeline.producers.FetchState,java.io.InputStream,int) -> onResponse
    62:89:void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResults
    201:204:boolean shouldPropagateIntermediateResults(com.facebook.imagepipeline.producers.FetchState) -> shouldPropagateIntermediateResults
com.facebook.imagepipeline.producers.NetworkFetchProducer$1 -> com.facebook.imagepipeline.producers.NetworkFetchProducer$1:
    67:67:void <init>(com.facebook.imagepipeline.producers.NetworkFetchProducer,com.facebook.imagepipeline.producers.FetchState) -> <init>
    86:87:void onCancellation() -> onCancellation
    81:82:void onFailure(java.lang.Throwable) -> onFailure
    70:77:void onResponse(java.io.InputStream,int) -> onResponse
com.facebook.imagepipeline.producers.NullProducer -> com.facebook.imagepipeline.producers.NullProducer:
    16:16:void <init>() -> <init>
    25:26:void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResults
com.facebook.imagepipeline.producers.PartialDiskCacheProducer -> com.facebook.imagepipeline.producers.PartialDiskCacheProducer:
    65:71:void <init>(com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.common.memory.PooledByteBufferFactory,com.facebook.common.memory.ByteArrayPool,com.facebook.imagepipeline.producers.Producer) -> <init>
    49:49:boolean access$000(bolts.Task) -> access$000
    49:49:void access$100(com.facebook.imagepipeline.producers.PartialDiskCacheProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.EncodedImage) -> access$100
    219:221:android.net.Uri createUriForPartialCacheKey(com.facebook.imagepipeline.request.ImageRequest) -> createUriForPartialCacheKey
    190:202:java.util.Map getExtraMap(com.facebook.imagepipeline.producers.ProducerListener,java.lang.String,boolean,int) -> getExtraMap
    179:180:boolean isTaskCancelled(bolts.Task) -> isTaskCancelled
    104:106:bolts.Continuation onFinishDiskReads(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,com.facebook.cache.common.CacheKey) -> onFinishDiskReads
    76:98:void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResults
    167:176:void startInputProducer(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,com.facebook.cache.common.CacheKey,com.facebook.imagepipeline.image.EncodedImage) -> startInputProducer
    209:216:void subscribeTaskForRequestCancellation(java.util.concurrent.atomic.AtomicBoolean,com.facebook.imagepipeline.producers.ProducerContext) -> subscribeTaskForRequestCancellation
com.facebook.imagepipeline.producers.PartialDiskCacheProducer$1 -> com.facebook.imagepipeline.producers.PartialDiskCacheProducer$1:
    106:106:void <init>(com.facebook.imagepipeline.producers.PartialDiskCacheProducer,com.facebook.imagepipeline.producers.ProducerListener,java.lang.String,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,com.facebook.cache.common.CacheKey) -> <init>
    106:106:java.lang.Object then(bolts.Task) -> then
    110:157:java.lang.Void then(bolts.Task) -> then
com.facebook.imagepipeline.producers.PartialDiskCacheProducer$2 -> com.facebook.imagepipeline.producers.PartialDiskCacheProducer$2:
    210:210:void <init>(com.facebook.imagepipeline.producers.PartialDiskCacheProducer,java.util.concurrent.atomic.AtomicBoolean) -> <init>
    213:214:void onCancellationRequested() -> onCancellationRequested
com.facebook.imagepipeline.producers.PartialDiskCacheProducer$PartialDiskCacheConsumer -> com.facebook.imagepipeline.producers.PartialDiskCacheProducer$PartialDiskCacheConsumer:
    233:233:void <init>(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.cache.common.CacheKey,com.facebook.common.memory.PooledByteBufferFactory,com.facebook.common.memory.ByteArrayPool,com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.producers.PartialDiskCacheProducer$1) -> <init>
    251:257:void <init>(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.cache.BufferedDiskCache,com.facebook.cache.common.CacheKey,com.facebook.common.memory.PooledByteBufferFactory,com.facebook.common.memory.ByteArrayPool,com.facebook.imagepipeline.image.EncodedImage) -> <init>
    306:328:void copy(java.io.InputStream,java.io.OutputStream,int) -> copy
    293:302:com.facebook.common.memory.PooledByteBufferOutputStream merge(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.image.EncodedImage) -> merge
    233:233:void onNewResultImpl(java.lang.Object,int) -> onNewResultImpl
    261:289:void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int) -> onNewResultImpl
    331:342:void sendFinalResultToConsumer(com.facebook.common.memory.PooledByteBufferOutputStream) -> sendFinalResultToConsumer
com.facebook.imagepipeline.producers.PostprocessedBitmapMemoryCacheProducer -> com.facebook.imagepipeline.producers.PostprocessedBitmapMemoryCacheProducer:
    37:41:void <init>(com.facebook.imagepipeline.cache.MemoryCache,com.facebook.imagepipeline.cache.CacheKeyFactory,com.facebook.imagepipeline.producers.Producer) -> <init>
    140:140:java.lang.String getProducerName() -> getProducerName
    48:85:void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResults
com.facebook.imagepipeline.producers.PostprocessedBitmapMemoryCacheProducer$CachedPostprocessorConsumer -> com.facebook.imagepipeline.producers.PostprocessedBitmapMemoryCacheProducer$CachedPostprocessorConsumer:
    102:107:void <init>(com.facebook.imagepipeline.producers.Consumer,com.facebook.cache.common.CacheKey,boolean,com.facebook.imagepipeline.cache.MemoryCache,boolean) -> <init>
    87:87:void onNewResultImpl(java.lang.Object,int) -> onNewResultImpl
    114:136:void onNewResultImpl(com.facebook.common.references.CloseableReference,int) -> onNewResultImpl
com.facebook.imagepipeline.producers.PostprocessorProducer -> com.facebook.imagepipeline.producers.PostprocessorProducer:
    44:48:void <init>(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory,java.util.concurrent.Executor) -> <init>
    32:32:java.util.concurrent.Executor access$800(com.facebook.imagepipeline.producers.PostprocessorProducer) -> access$800
    32:32:com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory access$900(com.facebook.imagepipeline.producers.PostprocessorProducer) -> access$900
    54:68:void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResults
com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer -> com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer:
    83:110:void <init>(com.facebook.imagepipeline.producers.PostprocessorProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerListener,java.lang.String,com.facebook.imagepipeline.request.Postprocessor,com.facebook.imagepipeline.producers.ProducerContext) -> <init>
    73:73:void access$200(com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer) -> access$200
    73:73:com.facebook.common.references.CloseableReference access$300(com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer) -> access$300
    73:73:com.facebook.common.references.CloseableReference access$302(com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer,com.facebook.common.references.CloseableReference) -> access$302
    73:73:int access$400(com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer) -> access$400
    73:73:boolean access$502(com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer,boolean) -> access$502
    73:73:void access$600(com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer,com.facebook.common.references.CloseableReference,int) -> access$600
    73:73:void access$700(com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer) -> access$700
    187:194:void clearRunningAndStartIfDirty() -> clearRunningAndStartIfDirty
    284:293:boolean close() -> close
    208:230:void doPostprocessing(com.facebook.common.references.CloseableReference,int) -> doPostprocessing
    234:237:java.util.Map getExtraMap(com.facebook.imagepipeline.producers.ProducerListener,java.lang.String,com.facebook.imagepipeline.request.Postprocessor) -> getExtraMap
    279:279:boolean isClosed() -> isClosed
    273:276:void maybeNotifyOnCancellation() -> maybeNotifyOnCancellation
    267:270:void maybeNotifyOnFailure(java.lang.Throwable) -> maybeNotifyOnFailure
    260:264:void maybeNotifyOnNewResult(com.facebook.common.references.CloseableReference,int) -> maybeNotifyOnNewResult
    134:135:void onCancellationImpl() -> onCancellationImpl
    129:130:void onFailureImpl(java.lang.Throwable) -> onFailureImpl
    73:73:void onNewResultImpl(java.lang.Object,int) -> onNewResultImpl
    116:125:void onNewResultImpl(com.facebook.common.references.CloseableReference,int) -> onNewResultImpl
    245:255:com.facebook.common.references.CloseableReference postprocessInternal(com.facebook.imagepipeline.image.CloseableImage) -> postprocessInternal
    196:202:boolean setRunningIfDirtyAndNotRunning() -> setRunningIfDirtyAndNotRunning
    241:241:boolean shouldPostprocess(com.facebook.imagepipeline.image.CloseableImage) -> shouldPostprocess
    159:183:void submitPostprocessing() -> submitPostprocessing
    142:156:void updateSourceImageRef(com.facebook.common.references.CloseableReference,int) -> updateSourceImageRef
com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer$1 -> com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer$1:
    104:104:void <init>(com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer,com.facebook.imagepipeline.producers.PostprocessorProducer) -> <init>
    107:108:void onCancellationRequested() -> onCancellationRequested
com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer$2 -> com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer$2:
    160:160:void <init>(com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer) -> <init>
    165:181:void run() -> run
com.facebook.imagepipeline.producers.PostprocessorProducer$RepeatedPostprocessorConsumer -> com.facebook.imagepipeline.producers.PostprocessorProducer$RepeatedPostprocessorConsumer:
    328:328:void <init>(com.facebook.imagepipeline.producers.PostprocessorProducer,com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer,com.facebook.imagepipeline.request.RepeatedPostprocessor,com.facebook.imagepipeline.producers.ProducerContext,com.facebook.imagepipeline.producers.PostprocessorProducer$1) -> <init>
    332:353:void <init>(com.facebook.imagepipeline.producers.PostprocessorProducer,com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer,com.facebook.imagepipeline.request.RepeatedPostprocessor,com.facebook.imagepipeline.producers.ProducerContext) -> <init>
    328:328:boolean access$1000(com.facebook.imagepipeline.producers.PostprocessorProducer$RepeatedPostprocessorConsumer) -> access$1000
    415:424:boolean close() -> close
    376:379:void onCancellationImpl() -> onCancellationImpl
    369:372:void onFailureImpl(java.lang.Throwable) -> onFailureImpl
    328:328:void onNewResultImpl(java.lang.Object,int) -> onNewResultImpl
    360:365:void onNewResultImpl(com.facebook.common.references.CloseableReference,int) -> onNewResultImpl
    403:411:void setSourceImageRef(com.facebook.common.references.CloseableReference) -> setSourceImageRef
    382:384:void update() -> update
    388:399:void updateInternal() -> updateInternal
com.facebook.imagepipeline.producers.PostprocessorProducer$RepeatedPostprocessorConsumer$1 -> com.facebook.imagepipeline.producers.PostprocessorProducer$RepeatedPostprocessorConsumer$1:
    345:345:void <init>(com.facebook.imagepipeline.producers.PostprocessorProducer$RepeatedPostprocessorConsumer,com.facebook.imagepipeline.producers.PostprocessorProducer) -> <init>
    348:351:void onCancellationRequested() -> onCancellationRequested
com.facebook.imagepipeline.producers.PostprocessorProducer$SingleUsePostprocessorConsumer -> com.facebook.imagepipeline.producers.PostprocessorProducer$SingleUsePostprocessorConsumer:
    300:300:void <init>(com.facebook.imagepipeline.producers.PostprocessorProducer,com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer,com.facebook.imagepipeline.producers.PostprocessorProducer$1) -> <init>
    304:306:void <init>(com.facebook.imagepipeline.producers.PostprocessorProducer,com.facebook.imagepipeline.producers.PostprocessorProducer$PostprocessorConsumer) -> <init>
    300:300:void onNewResultImpl(java.lang.Object,int) -> onNewResultImpl
    312:316:void onNewResultImpl(com.facebook.common.references.CloseableReference,int) -> onNewResultImpl
com.facebook.imagepipeline.producers.ProducerConstants -> com.facebook.imagepipeline.producers.ProducerConstants:
    17:17:void <init>() -> <init>
com.facebook.imagepipeline.producers.QualifiedResourceFetchProducer -> com.facebook.imagepipeline.producers.QualifiedResourceFetchProducer:
    33:35:void <init>(java.util.concurrent.Executor,com.facebook.common.memory.PooledByteBufferFactory,android.content.ContentResolver) -> <init>
    39:42:com.facebook.imagepipeline.image.EncodedImage getEncodedImage(com.facebook.imagepipeline.request.ImageRequest) -> getEncodedImage
    47:47:java.lang.String getProducerName() -> getProducerName
com.facebook.imagepipeline.producers.RemoveImageTransformMetaDataProducer -> com.facebook.imagepipeline.producers.RemoveImageTransformMetaDataProducer:
    25:27:void <init>(com.facebook.imagepipeline.producers.Producer) -> <init>
    33:34:void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResults
com.facebook.imagepipeline.producers.RemoveImageTransformMetaDataProducer$RemoveImageTransformMetaDataConsumer -> com.facebook.imagepipeline.producers.RemoveImageTransformMetaDataProducer$RemoveImageTransformMetaDataConsumer:
    36:36:void <init>(com.facebook.imagepipeline.producers.RemoveImageTransformMetaDataProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.RemoveImageTransformMetaDataProducer$1) -> <init>
    40:42:void <init>(com.facebook.imagepipeline.producers.RemoveImageTransformMetaDataProducer,com.facebook.imagepipeline.producers.Consumer) -> <init>
    36:36:void onNewResultImpl(java.lang.Object,int) -> onNewResultImpl
    46:55:void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int) -> onNewResultImpl
com.facebook.imagepipeline.producers.ResizeAndRotateProducer -> com.facebook.imagepipeline.producers.ResizeAndRotateProducer:
    66:72:void <init>(java.util.concurrent.Executor,com.facebook.common.memory.PooledByteBufferFactory,com.facebook.imagepipeline.producers.Producer,boolean,com.facebook.imagepipeline.transcoder.ImageTranscoderFactory) -> <init>
    45:45:java.util.concurrent.Executor access$300(com.facebook.imagepipeline.producers.ResizeAndRotateProducer) -> access$300
    45:45:com.facebook.common.util.TriState access$700(com.facebook.imagepipeline.request.ImageRequest,com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.transcoder.ImageTranscoder) -> access$700
    45:45:com.facebook.common.memory.PooledByteBufferFactory access$800(com.facebook.imagepipeline.producers.ResizeAndRotateProducer) -> access$800
    78:81:void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResults
    323:325:boolean shouldRotate(com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.image.EncodedImage) -> shouldRotate
    330:334:boolean shouldRotateUsingExifOrientation(com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.image.EncodedImage) -> shouldRotateUsingExifOrientation
    308:319:com.facebook.common.util.TriState shouldTransform(com.facebook.imagepipeline.request.ImageRequest,com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.transcoder.ImageTranscoder) -> shouldTransform
com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer -> com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer:
    96:141:void <init>(com.facebook.imagepipeline.producers.ResizeAndRotateProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,boolean,com.facebook.imagepipeline.transcoder.ImageTranscoderFactory) -> <init>
    83:83:boolean access$000(com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer) -> access$000
    83:83:com.facebook.imagepipeline.transcoder.ImageTranscoderFactory access$100(com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer) -> access$100
    83:83:void access$200(com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer,com.facebook.imagepipeline.image.EncodedImage,int,com.facebook.imagepipeline.transcoder.ImageTranscoder) -> access$200
    83:83:com.facebook.imagepipeline.producers.ProducerContext access$400(com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer) -> access$400
    83:83:com.facebook.imagepipeline.producers.JobScheduler access$500(com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer) -> access$500
    83:83:boolean access$602(com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer,boolean) -> access$602
    219:274:void doTransform(com.facebook.imagepipeline.image.EncodedImage,int,com.facebook.imagepipeline.transcoder.ImageTranscoder) -> doTransform
    182:188:void forwardNewResult(com.facebook.imagepipeline.image.EncodedImage,int,com.facebook.imageformat.ImageFormat) -> forwardNewResult
    209:214:com.facebook.imagepipeline.image.EncodedImage getCloneWithRotationApplied(com.facebook.imagepipeline.image.EncodedImage,int) -> getCloneWithRotationApplied
    281:300:java.util.Map getExtraMap(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.common.ResizeOptions,com.facebook.imagepipeline.transcoder.ImageTranscodeResult,java.lang.String) -> getExtraMap
    191:195:com.facebook.imagepipeline.image.EncodedImage getNewResultForImagesWithoutExifData(com.facebook.imagepipeline.image.EncodedImage) -> getNewResultForImagesWithoutExifData
    199:204:com.facebook.imagepipeline.image.EncodedImage getNewResultsForJpegOrHeif(com.facebook.imagepipeline.image.EncodedImage) -> getNewResultsForJpegOrHeif
    83:83:void onNewResultImpl(java.lang.Object,int) -> onNewResultImpl
    145:178:void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int) -> onNewResultImpl
com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer$1 -> com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer$1:
    111:111:void <init>(com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer,com.facebook.imagepipeline.producers.ResizeAndRotateProducer) -> <init>
    114:120:void run(com.facebook.imagepipeline.image.EncodedImage,int) -> run
com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer$2 -> com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer$2:
    125:125:void <init>(com.facebook.imagepipeline.producers.ResizeAndRotateProducer$TransformingConsumer,com.facebook.imagepipeline.producers.ResizeAndRotateProducer,com.facebook.imagepipeline.producers.Consumer) -> <init>
    135:139:void onCancellationRequested() -> onCancellationRequested
    128:131:void onIsIntermediateResultExpectedChanged() -> onIsIntermediateResultExpectedChanged
com.facebook.imagepipeline.producers.SettableProducerContext -> com.facebook.imagepipeline.producers.SettableProducerContext:
    21:30:void <init>(com.facebook.imagepipeline.producers.ProducerContext) -> <init>
    33:42:void <init>(com.facebook.imagepipeline.request.ImageRequest,com.facebook.imagepipeline.producers.ProducerContext) -> <init>
    53:62:void <init>(com.facebook.imagepipeline.request.ImageRequest,java.lang.String,com.facebook.imagepipeline.producers.ProducerListener,java.lang.Object,com.facebook.imagepipeline.request.ImageRequest$RequestLevel,boolean,boolean,com.facebook.imagepipeline.common.Priority) -> <init>
    77:79:void setIsIntermediateResultExpected(boolean) -> setIsIntermediateResultExpected
    69:70:void setIsPrefetch(boolean) -> setIsPrefetch
    86:87:void setPriority(com.facebook.imagepipeline.common.Priority) -> setPriority
com.facebook.imagepipeline.producers.StatefulProducerRunnable -> com.facebook.imagepipeline.producers.StatefulProducerRunnable:
    32:39:void <init>(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerListener,java.lang.String,java.lang.String) -> <init>
    81:81:java.util.Map getExtraMapOnCancellation() -> getExtraMapOnCancellation
    76:76:java.util.Map getExtraMapOnFailure(java.lang.Exception) -> getExtraMapOnFailure
    71:71:java.util.Map getExtraMapOnSuccess(java.lang.Object) -> getExtraMapOnSuccess
    62:67:void onCancellation() -> onCancellation
    52:58:void onFailure(java.lang.Exception) -> onFailure
    43:48:void onSuccess(java.lang.Object) -> onSuccess
com.facebook.imagepipeline.producers.SwallowResultProducer -> com.facebook.imagepipeline.producers.SwallowResultProducer:
    18:20:void <init>(com.facebook.imagepipeline.producers.Producer) -> <init>
    24:33:void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResults
com.facebook.imagepipeline.producers.SwallowResultProducer$1 -> com.facebook.imagepipeline.producers.SwallowResultProducer$1:
    24:24:void <init>(com.facebook.imagepipeline.producers.SwallowResultProducer,com.facebook.imagepipeline.producers.Consumer) -> <init>
    27:30:void onNewResultImpl(java.lang.Object,int) -> onNewResultImpl
com.facebook.imagepipeline.producers.ThreadHandoffProducer -> com.facebook.imagepipeline.producers.ThreadHandoffProducer:
    24:27:void <init>(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue) -> <init>
    16:16:com.facebook.imagepipeline.producers.Producer access$000(com.facebook.imagepipeline.producers.ThreadHandoffProducer) -> access$000
    16:16:com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue access$100(com.facebook.imagepipeline.producers.ThreadHandoffProducer) -> access$100
    31:58:void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResults
com.facebook.imagepipeline.producers.ThreadHandoffProducer$1 -> com.facebook.imagepipeline.producers.ThreadHandoffProducer$1:
    34:34:void <init>(com.facebook.imagepipeline.producers.ThreadHandoffProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerListener,java.lang.String,java.lang.String,com.facebook.imagepipeline.producers.ProducerListener,java.lang.String,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> <init>
    42:42:void disposeResult(java.lang.Object) -> disposeResult
    46:46:java.lang.Object getResult() -> getResult
    37:39:void onSuccess(java.lang.Object) -> onSuccess
com.facebook.imagepipeline.producers.ThreadHandoffProducer$2 -> com.facebook.imagepipeline.producers.ThreadHandoffProducer$2:
    50:50:void <init>(com.facebook.imagepipeline.producers.ThreadHandoffProducer,com.facebook.imagepipeline.producers.StatefulProducerRunnable) -> <init>
    53:55:void onCancellationRequested() -> onCancellationRequested
com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue -> com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue:
    16:23:void <init>(java.util.concurrent.Executor) -> <init>
    25:31:void addToQueueOrExecute(java.lang.Runnable) -> addToQueueOrExecute
    43:47:void execInQueue() -> execInQueue
    54:54:boolean isQueueing() -> isQueueing
    49:51:void remove(java.lang.Runnable) -> remove
    33:35:void startQueueing() -> startQueueing
    37:40:void stopQueuing() -> stopQueuing
com.facebook.imagepipeline.producers.ThrottlingProducer -> com.facebook.imagepipeline.producers.ThrottlingProducer:
    36:42:void <init>(int,java.util.concurrent.Executor,com.facebook.imagepipeline.producers.Producer) -> <init>
    20:20:java.util.concurrent.ConcurrentLinkedQueue access$100(com.facebook.imagepipeline.producers.ThrottlingProducer) -> access$100
    20:20:int access$210(com.facebook.imagepipeline.producers.ThrottlingProducer) -> access$210
    20:20:java.util.concurrent.Executor access$300(com.facebook.imagepipeline.producers.ThrottlingProducer) -> access$300
    46:63:void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResults
    66:69:void produceResultsInternal(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResultsInternal
com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer -> com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer:
    71:71:void <init>(com.facebook.imagepipeline.producers.ThrottlingProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ThrottlingProducer$1) -> <init>
    73:75:void <init>(com.facebook.imagepipeline.producers.ThrottlingProducer,com.facebook.imagepipeline.producers.Consumer) -> <init>
    93:95:void onCancellationImpl() -> onCancellationImpl
    87:89:void onFailureImpl(java.lang.Throwable) -> onFailureImpl
    79:83:void onNewResultImpl(java.lang.Object,int) -> onNewResultImpl
    99:115:void onRequestFinished() -> onRequestFinished
com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1 -> com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer$1:
    108:108:void <init>(com.facebook.imagepipeline.producers.ThrottlingProducer$ThrottlerConsumer,android.util.Pair) -> <init>
    111:112:void run() -> run
com.facebook.imagepipeline.producers.ThumbnailBranchProducer -> com.facebook.imagepipeline.producers.ThumbnailBranchProducer:
    27:30:void <init>(com.facebook.imagepipeline.producers.ThumbnailProducer[]) -> <init>
    23:23:boolean access$000(com.facebook.imagepipeline.producers.ThumbnailBranchProducer,int,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> access$000
    108:114:int findFirstProducerForSize(int,com.facebook.imagepipeline.common.ResizeOptions) -> findFirstProducerForSize
    36:44:void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResults
    95:104:boolean produceResultsFromThumbnailProducer(int,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResultsFromThumbnailProducer
com.facebook.imagepipeline.producers.ThumbnailBranchProducer$ThumbnailConsumer -> com.facebook.imagepipeline.producers.ThumbnailBranchProducer$ThumbnailConsumer:
    54:59:void <init>(com.facebook.imagepipeline.producers.ThumbnailBranchProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext,int) -> <init>
    82:88:void onFailureImpl(java.lang.Throwable) -> onFailureImpl
    46:46:void onNewResultImpl(java.lang.Object,int) -> onNewResultImpl
    63:78:void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int) -> onNewResultImpl
com.facebook.imagepipeline.producers.ThumbnailSizeChecker -> com.facebook.imagepipeline.producers.ThumbnailSizeChecker:
    18:18:void <init>() -> <init>
    65:65:int getAcceptableSize(int) -> getAcceptableSize
    40:45:boolean isImageBigEnough(int,int,com.facebook.imagepipeline.common.ResizeOptions) -> isImageBigEnough
    50:60:boolean isImageBigEnough(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.common.ResizeOptions) -> isImageBigEnough
com.facebook.imagepipeline.producers.WebpTranscodeProducer -> com.facebook.imagepipeline.producers.WebpTranscodeProducer:
    46:50:void <init>(java.util.concurrent.Executor,com.facebook.common.memory.PooledByteBufferFactory,com.facebook.imagepipeline.producers.Producer) -> <init>
    34:34:com.facebook.common.util.TriState access$000(com.facebook.imagepipeline.image.EncodedImage) -> access$000
    34:34:void access$100(com.facebook.imagepipeline.producers.WebpTranscodeProducer,com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> access$100
    34:34:com.facebook.common.memory.PooledByteBufferFactory access$200(com.facebook.imagepipeline.producers.WebpTranscodeProducer) -> access$200
    34:34:void access$300(com.facebook.imagepipeline.image.EncodedImage,com.facebook.common.memory.PooledByteBufferOutputStream) -> access$300
    172:190:void doTranscode(com.facebook.imagepipeline.image.EncodedImage,com.facebook.common.memory.PooledByteBufferOutputStream) -> doTranscode
    54:55:void produceResults(com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> produceResults
    150:166:com.facebook.common.util.TriState shouldTranscode(com.facebook.imagepipeline.image.EncodedImage) -> shouldTranscode
    96:147:void transcodeLastResult(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> transcodeLastResult
com.facebook.imagepipeline.producers.WebpTranscodeProducer$1 -> com.facebook.imagepipeline.producers.WebpTranscodeProducer$1:
    103:103:void <init>(com.facebook.imagepipeline.producers.WebpTranscodeProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerListener,java.lang.String,java.lang.String,com.facebook.imagepipeline.image.EncodedImage) -> <init>
    103:103:void disposeResult(java.lang.Object) -> disposeResult
    125:126:void disposeResult(com.facebook.imagepipeline.image.EncodedImage) -> disposeResult
    103:103:java.lang.Object getResult() -> getResult
    106:119:com.facebook.imagepipeline.image.EncodedImage getResult() -> getResult
    142:144:void onCancellation() -> onCancellation
    136:138:void onFailure(java.lang.Exception) -> onFailure
    103:103:void onSuccess(java.lang.Object) -> onSuccess
    130:132:void onSuccess(com.facebook.imagepipeline.image.EncodedImage) -> onSuccess
com.facebook.imagepipeline.producers.WebpTranscodeProducer$WebpTranscodeConsumer -> com.facebook.imagepipeline.producers.WebpTranscodeProducer$WebpTranscodeConsumer:
    63:67:void <init>(com.facebook.imagepipeline.producers.WebpTranscodeProducer,com.facebook.imagepipeline.producers.Consumer,com.facebook.imagepipeline.producers.ProducerContext) -> <init>
    57:57:void onNewResultImpl(java.lang.Object,int) -> onNewResultImpl
    72:89:void onNewResultImpl(com.facebook.imagepipeline.image.EncodedImage,int) -> onNewResultImpl
com.facebook.imagepipeline.request.BasePostprocessor -> com.facebook.imagepipeline.request.BasePostprocessor:
    30:30:void <clinit>() -> <clinit>
    23:23:void <init>() -> <init>
    34:34:java.lang.String getName() -> getName
    106:106:com.facebook.cache.common.CacheKey getPostprocessorCacheKey() -> getPostprocessorCacheKey
    115:124:void internalCopyBitmap(android.graphics.Bitmap,android.graphics.Bitmap) -> internalCopyBitmap
    54:64:com.facebook.common.references.CloseableReference process(android.graphics.Bitmap,com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory) -> process
    84:86:void process(android.graphics.Bitmap,android.graphics.Bitmap) -> process
    97:97:void process(android.graphics.Bitmap) -> process
com.facebook.imagepipeline.request.BaseRepeatedPostProcessor -> com.facebook.imagepipeline.request.BaseRepeatedPostProcessor:
    10:10:void <init>() -> <init>
    20:20:com.facebook.imagepipeline.request.RepeatedPostprocessorRunner getCallback() -> getCallback
    15:17:void setCallback(com.facebook.imagepipeline.request.RepeatedPostprocessorRunner) -> setCallback
    24:28:void update() -> update
com.facebook.imagepipeline.request.ImageRequest -> com.facebook.imagepipeline.request.ImageRequest:
    117:143:void <init>(com.facebook.imagepipeline.request.ImageRequestBuilder) -> <init>
    239:256:boolean equals(java.lang.Object) -> equals
    106:106:com.facebook.imagepipeline.request.ImageRequest fromFile(java.io.File) -> fromFile
    110:110:com.facebook.imagepipeline.request.ImageRequest fromUri(android.net.Uri) -> fromUri
    114:114:com.facebook.imagepipeline.request.ImageRequest fromUri(java.lang.String) -> fromUri
    178:178:boolean getAutoRotateEnabled() -> getAutoRotateEnabled
    183:183:com.facebook.imagepipeline.common.BytesRange getBytesRange() -> getBytesRange
    146:146:com.facebook.imagepipeline.request.ImageRequest$CacheChoice getCacheChoice() -> getCacheChoice
    187:187:com.facebook.imagepipeline.common.ImageDecodeOptions getImageDecodeOptions() -> getImageDecodeOptions
    195:195:boolean getLocalThumbnailPreviewsEnabled() -> getLocalThumbnailPreviewsEnabled
    203:203:com.facebook.imagepipeline.request.ImageRequest$RequestLevel getLowestPermittedRequestLevel() -> getLowestPermittedRequestLevel
    230:230:com.facebook.imagepipeline.request.Postprocessor getPostprocessor() -> getPostprocessor
    162:162:int getPreferredHeight() -> getPreferredHeight
    158:158:int getPreferredWidth() -> getPreferredWidth
    199:199:com.facebook.imagepipeline.common.Priority getPriority() -> getPriority
    191:191:boolean getProgressiveRenderingEnabled() -> getProgressiveRenderingEnabled
    234:234:com.facebook.imagepipeline.listener.RequestListener getRequestListener() -> getRequestListener
    166:166:com.facebook.imagepipeline.common.ResizeOptions getResizeOptions() -> getResizeOptions
    219:219:java.lang.Boolean getResizingAllowedOverride() -> getResizingAllowedOverride
    170:170:com.facebook.imagepipeline.common.RotationOptions getRotationOptions() -> getRotationOptions
    222:226:java.io.File getSourceFile() -> getSourceFile
    150:150:android.net.Uri getSourceUri() -> getSourceUri
    154:154:int getSourceUriType() -> getSourceUriType
    340:362:int getSourceUriType(android.net.Uri) -> getSourceUriType
    261:263:int hashCode() -> hashCode
    207:207:boolean isDiskCacheEnabled() -> isDiskCacheEnabled
    211:211:boolean isMemoryCacheEnabled() -> isMemoryCacheEnabled
    215:215:java.lang.Boolean shouldDecodePrefetches() -> shouldDecodePrefetches
    277:287:java.lang.String toString() -> toString
com.facebook.imagepipeline.request.ImageRequest$CacheChoice -> com.facebook.imagepipeline.request.ImageRequest$CacheChoice:
    293:299:void <clinit>() -> <clinit>
    293:293:void <init>(java.lang.String,int) -> <init>
    293:293:com.facebook.imagepipeline.request.ImageRequest$CacheChoice valueOf(java.lang.String) -> valueOf
    293:293:com.facebook.imagepipeline.request.ImageRequest$CacheChoice[] values() -> values
com.facebook.imagepipeline.request.ImageRequest$RequestLevel -> com.facebook.imagepipeline.request.ImageRequest$RequestLevel:
    306:317:void <clinit>() -> <clinit>
    321:323:void <init>(java.lang.String,int,int) -> <init>
    330:330:com.facebook.imagepipeline.request.ImageRequest$RequestLevel getMax(com.facebook.imagepipeline.request.ImageRequest$RequestLevel,com.facebook.imagepipeline.request.ImageRequest$RequestLevel) -> getMax
    326:326:int getValue() -> getValue
    306:306:com.facebook.imagepipeline.request.ImageRequest$RequestLevel valueOf(java.lang.String) -> valueOf
    306:306:com.facebook.imagepipeline.request.ImageRequest$RequestLevel[] values() -> values
com.facebook.imagepipeline.request.ImageRequestBuilder -> com.facebook.imagepipeline.request.ImageRequestBuilder:
    31:101:void <init>() -> <init>
    339:340:com.facebook.imagepipeline.request.ImageRequest build() -> build
    265:266:com.facebook.imagepipeline.request.ImageRequestBuilder disableDiskCache() -> disableDiskCache
    276:277:com.facebook.imagepipeline.request.ImageRequestBuilder disableMemoryCache() -> disableMemoryCache
    85:97:com.facebook.imagepipeline.request.ImageRequestBuilder fromRequest(com.facebook.imagepipeline.request.ImageRequest) -> fromRequest
    205:205:com.facebook.imagepipeline.common.BytesRange getBytesRange() -> getBytesRange
    230:230:com.facebook.imagepipeline.request.ImageRequest$CacheChoice getCacheChoice() -> getCacheChoice
    214:214:com.facebook.imagepipeline.common.ImageDecodeOptions getImageDecodeOptions() -> getImageDecodeOptions
    133:133:com.facebook.imagepipeline.request.ImageRequest$RequestLevel getLowestPermittedRequestLevel() -> getLowestPermittedRequestLevel
    312:312:com.facebook.imagepipeline.request.Postprocessor getPostprocessor() -> getPostprocessor
    331:331:com.facebook.imagepipeline.listener.RequestListener getRequestListener() -> getRequestListener
    297:297:com.facebook.imagepipeline.common.Priority getRequestPriority() -> getRequestPriority
    163:163:com.facebook.imagepipeline.common.ResizeOptions getResizeOptions() -> getResizeOptions
    358:358:java.lang.Boolean getResizingAllowedOverride() -> getResizingAllowedOverride
    182:182:com.facebook.imagepipeline.common.RotationOptions getRotationOptions() -> getRotationOptions
    118:118:android.net.Uri getSourceUri() -> getSourceUri
    271:271:boolean isDiskCacheEnabled() -> isDiskCacheEnabled
    260:260:boolean isLocalThumbnailPreviewsEnabled() -> isLocalThumbnailPreviewsEnabled
    282:282:boolean isMemoryCacheEnabled() -> isMemoryCacheEnabled
    245:245:boolean isProgressiveRenderingEnabled() -> isProgressiveRenderingEnabled
    75:75:com.facebook.imagepipeline.request.ImageRequestBuilder newBuilderWithResourceId(int) -> newBuilderWithResourceId
    55:55:com.facebook.imagepipeline.request.ImageRequestBuilder newBuilderWithSource(android.net.Uri) -> newBuilderWithSource
    144:147:com.facebook.imagepipeline.request.ImageRequestBuilder setAutoRotateEnabled(boolean) -> setAutoRotateEnabled
    198:199:com.facebook.imagepipeline.request.ImageRequestBuilder setBytesRange(com.facebook.imagepipeline.common.BytesRange) -> setBytesRange
    224:225:com.facebook.imagepipeline.request.ImageRequestBuilder setCacheChoice(com.facebook.imagepipeline.request.ImageRequest$CacheChoice) -> setCacheChoice
    209:210:com.facebook.imagepipeline.request.ImageRequestBuilder setImageDecodeOptions(com.facebook.imagepipeline.common.ImageDecodeOptions) -> setImageDecodeOptions
    254:255:com.facebook.imagepipeline.request.ImageRequestBuilder setLocalThumbnailPreviewsEnabled(boolean) -> setLocalThumbnailPreviewsEnabled
    127:128:com.facebook.imagepipeline.request.ImageRequestBuilder setLowestPermittedRequestLevel(com.facebook.imagepipeline.request.ImageRequest$RequestLevel) -> setLowestPermittedRequestLevel
    306:307:com.facebook.imagepipeline.request.ImageRequestBuilder setPostprocessor(com.facebook.imagepipeline.request.Postprocessor) -> setPostprocessor
    239:240:com.facebook.imagepipeline.request.ImageRequestBuilder setProgressiveRenderingEnabled(boolean) -> setProgressiveRenderingEnabled
    323:324:com.facebook.imagepipeline.request.ImageRequestBuilder setRequestListener(com.facebook.imagepipeline.listener.RequestListener) -> setRequestListener
    291:292:com.facebook.imagepipeline.request.ImageRequestBuilder setRequestPriority(com.facebook.imagepipeline.common.Priority) -> setRequestPriority
    157:158:com.facebook.imagepipeline.request.ImageRequestBuilder setResizeOptions(com.facebook.imagepipeline.common.ResizeOptions) -> setResizeOptions
    353:354:com.facebook.imagepipeline.request.ImageRequestBuilder setResizingAllowedOverride(java.lang.Boolean) -> setResizingAllowedOverride
    176:177:com.facebook.imagepipeline.request.ImageRequestBuilder setRotationOptions(com.facebook.imagepipeline.common.RotationOptions) -> setRotationOptions
    348:349:com.facebook.imagepipeline.request.ImageRequestBuilder setShouldDecodePrefetches(java.lang.Boolean) -> setShouldDecodePrefetches
    110:113:com.facebook.imagepipeline.request.ImageRequestBuilder setSource(android.net.Uri) -> setSource
    344:344:java.lang.Boolean shouldDecodePrefetches() -> shouldDecodePrefetches
    371:395:void validate() -> validate
com.facebook.imagepipeline.request.ImageRequestBuilder$BuilderException -> com.facebook.imagepipeline.request.ImageRequestBuilder$BuilderException:
    364:365:void <init>(java.lang.String) -> <init>
com.facebook.imagepipeline.systrace.DefaultFrescoSystrace -> com.facebook.imagepipeline.systrace.DefaultFrescoSystrace:
    23:23:void <init>() -> <init>
    30:30:void beginSection(java.lang.String) -> beginSection
    38:38:com.facebook.imagepipeline.systrace.FrescoSystrace$ArgsBuilder beginSectionWithArgs(java.lang.String) -> beginSectionWithArgs
    46:46:void endSection() -> endSection
    50:50:boolean isTracing() -> isTracing
com.facebook.imagepipeline.systrace.DefaultFrescoSystrace$DefaultArgsBuilder -> com.facebook.imagepipeline.systrace.DefaultFrescoSystrace$DefaultArgsBuilder:
    62:64:void <init>(java.lang.String) -> <init>
    80:85:com.facebook.imagepipeline.systrace.FrescoSystrace$ArgsBuilder arg(java.lang.String,java.lang.Object) -> arg
    90:91:com.facebook.imagepipeline.systrace.FrescoSystrace$ArgsBuilder arg(java.lang.String,int) -> arg
    96:97:com.facebook.imagepipeline.systrace.FrescoSystrace$ArgsBuilder arg(java.lang.String,long) -> arg
    102:103:com.facebook.imagepipeline.systrace.FrescoSystrace$ArgsBuilder arg(java.lang.String,double) -> arg
    70:76:void flush() -> flush
com.facebook.imagepipeline.systrace.FrescoSystrace -> com.facebook.imagepipeline.systrace.FrescoSystrace:
    32:34:void <clinit>() -> <clinit>
    81:81:void <init>() -> <init>
    88:89:void beginSection(java.lang.String) -> beginSection
    92:92:com.facebook.imagepipeline.systrace.FrescoSystrace$ArgsBuilder beginSectionWithArgs(java.lang.String) -> beginSectionWithArgs
    96:97:void endSection() -> endSection
    104:111:com.facebook.imagepipeline.systrace.FrescoSystrace$Systrace getInstance() -> getInstance
    100:100:boolean isTracing() -> isTracing
    84:85:void provide(com.facebook.imagepipeline.systrace.FrescoSystrace$Systrace) -> provide
com.facebook.imagepipeline.systrace.FrescoSystrace$NoOpArgsBuilder -> com.facebook.imagepipeline.systrace.FrescoSystrace$NoOpArgsBuilder:
    114:114:void <init>() -> <init>
    114:114:void <init>(com.facebook.imagepipeline.systrace.FrescoSystrace$1) -> <init>
    121:121:com.facebook.imagepipeline.systrace.FrescoSystrace$ArgsBuilder arg(java.lang.String,java.lang.Object) -> arg
    126:126:com.facebook.imagepipeline.systrace.FrescoSystrace$ArgsBuilder arg(java.lang.String,int) -> arg
    131:131:com.facebook.imagepipeline.systrace.FrescoSystrace$ArgsBuilder arg(java.lang.String,long) -> arg
    136:136:com.facebook.imagepipeline.systrace.FrescoSystrace$ArgsBuilder arg(java.lang.String,double) -> arg
    117:117:void flush() -> flush
com.facebook.imagepipeline.transcoder.DownsampleUtil -> com.facebook.imagepipeline.transcoder.DownsampleUtil:
    22:22:void <init>() -> <init>
    71:98:float determineDownsampleRatio(com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.common.ResizeOptions,com.facebook.imagepipeline.image.EncodedImage) -> determineDownsampleRatio
    40:63:int determineSampleSize(com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.common.ResizeOptions,com.facebook.imagepipeline.image.EncodedImage,int) -> determineSampleSize
    135:141:int getRotationAngle(com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.image.EncodedImage) -> getRotationAngle
    103:114:int ratioToSampleSize(float) -> ratioToSampleSize
    119:130:int ratioToSampleSizeJPEG(float) -> ratioToSampleSizeJPEG
    146:151:int roundToPowerOfTwo(int) -> roundToPowerOfTwo
com.facebook.imagepipeline.transcoder.ImageTranscodeResult -> com.facebook.imagepipeline.transcoder.ImageTranscodeResult:
    16:18:void <init>(int) -> <init>
    22:22:int getTranscodeStatus() -> getTranscodeStatus
    27:27:java.lang.String toString() -> toString
com.facebook.imagepipeline.transcoder.JpegTranscoderUtils -> com.facebook.imagepipeline.transcoder.JpegTranscoderUtils:
    32:37:void <clinit>() -> <clinit>
    20:20:void <init>() -> <init>
    168:168:int calculateDownsampleNumerator(int) -> calculateDownsampleNumerator
    138:152:float determineResizeRatio(com.facebook.imagepipeline.common.ResizeOptions,int,int) -> determineResizeRatio
    235:241:int extractOrientationFromMetadata(com.facebook.imagepipeline.image.EncodedImage) -> extractOrientationFromMetadata
    122:133:int getForceRotatedInvertedExifOrientation(com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.image.EncodedImage) -> getForceRotatedInvertedExifOrientation
    103:110:int getRotationAngle(com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.image.EncodedImage) -> getRotationAngle
    71:99:int getSoftwareNumerator(com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.common.ResizeOptions,com.facebook.imagepipeline.image.EncodedImage,boolean) -> getSoftwareNumerator
    182:199:android.graphics.Matrix getTransformationMatrix(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.common.RotationOptions) -> getTransformationMatrix
    211:231:android.graphics.Matrix getTransformationMatrixFromInvertedExif(int) -> getTransformationMatrixFromInvertedExif
    51:62:boolean isExifOrientationAllowed(int) -> isExifOrientationAllowed
    46:46:boolean isRotationAngleAllowed(int) -> isRotationAngleAllowed
    157:157:int roundNumerator(float,float) -> roundNumerator
com.facebook.imagepipeline.transcoder.MultiImageTranscoderFactory -> com.facebook.imagepipeline.transcoder.MultiImageTranscoderFactory:
    30:35:void <init>(int,boolean,com.facebook.imagepipeline.transcoder.ImageTranscoderFactory,java.lang.Integer) -> <init>
    40:52:com.facebook.imagepipeline.transcoder.ImageTranscoder createImageTranscoder(com.facebook.imageformat.ImageFormat,boolean) -> createImageTranscoder
    59:62:com.facebook.imagepipeline.transcoder.ImageTranscoder getCustomImageTranscoder(com.facebook.imageformat.ImageFormat,boolean) -> getCustomImageTranscoder
    82:92:com.facebook.imagepipeline.transcoder.ImageTranscoder getImageTranscoderWithType(com.facebook.imageformat.ImageFormat,boolean) -> getImageTranscoderWithType
    68:70:com.facebook.imagepipeline.transcoder.ImageTranscoder getNativeImageTranscoder(com.facebook.imageformat.ImageFormat,boolean) -> getNativeImageTranscoder
    75:76:com.facebook.imagepipeline.transcoder.ImageTranscoder getSimpleImageTranscoder(com.facebook.imageformat.ImageFormat,boolean) -> getSimpleImageTranscoder
com.facebook.imagepipeline.transcoder.SimpleImageTranscoder -> com.facebook.imagepipeline.transcoder.SimpleImageTranscoder:
    31:34:void <init>(boolean,int) -> <init>
    102:106:boolean canResize(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.common.ResizeOptions) -> canResize
    113:113:boolean canTranscode(com.facebook.imageformat.ImageFormat) -> canTranscode
    118:118:java.lang.String getIdentifier() -> getIdentifier
    144:158:android.graphics.Bitmap$CompressFormat getOutputFormat(com.facebook.imageformat.ImageFormat) -> getOutputFormat
    126:133:int getSampleSize(com.facebook.imagepipeline.image.EncodedImage,com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.common.ResizeOptions) -> getSampleSize
    44:93:com.facebook.imagepipeline.transcoder.ImageTranscodeResult transcode(com.facebook.imagepipeline.image.EncodedImage,java.io.OutputStream,com.facebook.imagepipeline.common.RotationOptions,com.facebook.imagepipeline.common.ResizeOptions,com.facebook.imageformat.ImageFormat,java.lang.Integer) -> transcode
com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory -> com.facebook.imagepipeline.transcoder.SimpleImageTranscoderFactory:
    16:18:void <init>(int) -> <init>
    22:22:com.facebook.imagepipeline.transcoder.ImageTranscoder createImageTranscoder(com.facebook.imageformat.ImageFormat,boolean) -> createImageTranscoder
com.facebook.imagepipelinebase.BuildConfig -> com.facebook.imagepipelinebase.BuildConfig:
    6:6:void <init>() -> <init>
com.facebook.imageutils.BitmapUtil -> com.facebook.imageutils.BitmapUtil:
    30:30:void <clinit>() -> <clinit>
    27:27:void <init>() -> <init>
    81:81:android.util.Pair decodeDimensions(byte[]) -> decodeDimensions
    91:97:android.util.Pair decodeDimensions(android.net.Uri) -> decodeDimensions
    108:123:android.util.Pair decodeDimensions(java.io.InputStream) -> decodeDimensions
    135:152:com.facebook.imageutils.ImageMetaData decodeDimensionsAndColorSpace(java.io.InputStream) -> decodeDimensionsAndColorSpace
    165:177:int getPixelSizeForBitmapConfig(android.graphics.Bitmap$Config) -> getPixelSizeForBitmapConfig
    190:190:int getSizeInByteForBitmap(int,int,android.graphics.Bitmap$Config) -> getSizeInByteForBitmap
    49:69:int getSizeInBytes(android.graphics.Bitmap) -> getSizeInBytes
com.facebook.imageutils.BitmapUtil$1 -> com.facebook.imageutils.BitmapUtil$1:
    165:165:void <clinit>() -> <clinit>
com.facebook.imageutils.HeifExifUtil -> com.facebook.imageutils.HeifExifUtil:
    22:22:void <init>() -> <init>
    27:31:int getOrientation(java.io.InputStream) -> getOrientation
com.facebook.imageutils.HeifExifUtil$HeifExifUtilAndroidN -> com.facebook.imageutils.HeifExifUtil$HeifExifUtilAndroidN:
    36:36:void <init>() -> <init>
    41:46:int getOrientation(java.io.InputStream) -> getOrientation
com.facebook.imageutils.ImageMetaData -> com.facebook.imageutils.ImageMetaData:
    20:23:void <init>(int,int,android.graphics.ColorSpace) -> <init>
    30:30:android.graphics.ColorSpace getColorSpace() -> getColorSpace
    26:26:android.util.Pair getDimensions() -> getDimensions
com.facebook.imageutils.JfifUtil -> com.facebook.imageutils.JfifUtil:
    37:38:void <init>() -> <init>
    46:46:int getAutoRotateAngleFromOrientation(int) -> getAutoRotateAngleFromOrientation
    56:56:int getOrientation(byte[]) -> getOrientation
    69:75:int getOrientation(java.io.InputStream) -> getOrientation
    124:140:boolean isSOFn(int) -> isSOFn
    150:165:int moveToAPP1EXIF(java.io.InputStream) -> moveToAPP1EXIF
    87:119:boolean moveToMarker(java.io.InputStream,int) -> moveToMarker
com.facebook.imageutils.StreamProcessor -> com.facebook.imageutils.StreamProcessor:
    16:16:void <init>() -> <init>
    28:40:int readPackedInt(java.io.InputStream,int,boolean) -> readPackedInt
com.facebook.imageutils.TiffUtil -> com.facebook.imageutils.TiffUtil:
    20:20:void <clinit>() -> <clinit>
    18:18:void <init>() -> <init>
    34:45:int getAutoRotateAngleFromOrientation(int) -> getAutoRotateAngleFromOrientation
    162:177:int getOrientationFromTiffEntry(java.io.InputStream,int,boolean) -> getOrientationFromTiffEntry
    133:150:int moveToTiffEntryWithTag(java.io.InputStream,int,boolean,int) -> moveToTiffEntryWithTag
    56:73:int readOrientationFromTIFF(java.io.InputStream,int) -> readOrientationFromTIFF
    94:116:int readTiffHeader(java.io.InputStream,int,com.facebook.imageutils.TiffUtil$TiffHeader) -> readTiffHeader
com.facebook.imageutils.TiffUtil$TiffHeader -> com.facebook.imageutils.TiffUtil$TiffHeader:
    79:79:void <init>() -> <init>
    79:79:void <init>(com.facebook.imageutils.TiffUtil$1) -> <init>
com.facebook.imageutils.WebpUtil -> com.facebook.imageutils.WebpUtil:
    34:35:void <init>() -> <init>
    158:166:boolean compare(byte[],java.lang.String) -> compare
    189:191:int get2BytesAsInt(java.io.InputStream) -> get2BytesAsInt
    208:208:byte getByte(java.io.InputStream) -> getByte
    170:174:java.lang.String getHeader(byte[]) -> getHeader
    178:182:int getInt(java.io.InputStream) -> getInt
    204:204:short getShort(java.io.InputStream) -> getShort
    47:84:android.util.Pair getSize(java.io.InputStream) -> getSize
    97:107:android.util.Pair getVP8Dimension(java.io.InputStream) -> getVP8Dimension
    120:133:android.util.Pair getVP8LDimension(java.io.InputStream) -> getVP8LDimension
    145:147:android.util.Pair getVP8XDimension(java.io.InputStream) -> getVP8XDimension
    212:212:boolean isBitOne(byte,int) -> isBitOne
    195:198:int read3Bytes(java.io.InputStream) -> read3Bytes
com.facebook.nativefilters.BuildConfig -> com.facebook.nativefilters.BuildConfig:
    6:6:void <init>() -> <init>
com.facebook.nativeimagetranscoder.BuildConfig -> com.facebook.nativeimagetranscoder.BuildConfig:
    6:6:void <init>() -> <init>
com.facebook.soloader.Api18TraceUtils -> com.facebook.soloader.Api18TraceUtils:
    28:28:void <init>() -> <init>
    31:32:void beginTraceSection(java.lang.String) -> beginTraceSection
    35:36:void endSection() -> endSection
com.facebook.soloader.ApkSoSource -> com.facebook.soloader.ApkSoSource:
    47:48:void <init>(android.content.Context,java.lang.String,int) -> <init>
    51:59:void <init>(android.content.Context,java.io.File,java.lang.String,int) -> <init>
    29:29:int access$000(com.facebook.soloader.ApkSoSource) -> access$000
    120:151:byte[] getDepsBlock() -> getDepsBlock
    63:63:com.facebook.soloader.UnpackingSoSource$Unpacker makeUnpacker() -> makeUnpacker
com.facebook.soloader.ApkSoSource$ApkUnpacker -> com.facebook.soloader.ApkSoSource$ApkUnpacker:
    71:75:void <init>(com.facebook.soloader.ApkSoSource,com.facebook.soloader.ExtractFromZipSoSource) -> <init>
    80:114:boolean shouldExtract(java.util.zip.ZipEntry,java.lang.String) -> shouldExtract
com.facebook.soloader.ApplicationSoSource -> com.facebook.soloader.ApplicationSoSource:
    34:46:void <init>(android.content.Context,int) -> <init>
    97:98:void addToLdLibraryPath(java.util.Collection) -> addToLdLibraryPath
    56:74:boolean checkAndMaybeUpdate() -> checkAndMaybeUpdate
    81:81:int loadLibrary(java.lang.String,int,android.os.StrictMode$ThreadPolicy) -> loadLibrary
    92:93:void prepare(int) -> prepare
    102:102:java.lang.String toString() -> toString
    87:87:java.io.File unpackLibrary(java.lang.String) -> unpackLibrary
com.facebook.soloader.DirectorySoSource -> com.facebook.soloader.DirectorySoSource:
    44:47:void <init>(java.io.File,int) -> <init>
    136:137:void addToLdLibraryPath(java.util.Collection) -> addToLdLibraryPath
    111:120:java.lang.String[] getDependencies(java.io.File) -> getDependencies
    95:108:void loadDependencies(java.io.File,int,android.os.StrictMode$ThreadPolicy) -> loadDependencies
    52:52:int loadLibrary(java.lang.String,int,android.os.StrictMode$ThreadPolicy) -> loadLibrary
    59:90:int loadLibraryFrom(java.lang.String,int,java.io.File,android.os.StrictMode$ThreadPolicy) -> loadLibraryFrom
    143:154:java.lang.String toString() -> toString
    126:131:java.io.File unpackLibrary(java.lang.String) -> unpackLibrary
com.facebook.soloader.Elf32_Dyn -> com.facebook.soloader.Elf32_Dyn:
    19:19:void <init>() -> <init>
com.facebook.soloader.Elf32_Ehdr -> com.facebook.soloader.Elf32_Ehdr:
    19:19:void <init>() -> <init>
com.facebook.soloader.Elf32_Phdr -> com.facebook.soloader.Elf32_Phdr:
    19:19:void <init>() -> <init>
com.facebook.soloader.Elf32_Shdr -> com.facebook.soloader.Elf32_Shdr:
    19:19:void <init>() -> <init>
com.facebook.soloader.Elf64_Dyn -> com.facebook.soloader.Elf64_Dyn:
    19:19:void <init>() -> <init>
com.facebook.soloader.Elf64_Ehdr -> com.facebook.soloader.Elf64_Ehdr:
    19:19:void <init>() -> <init>
com.facebook.soloader.Elf64_Phdr -> com.facebook.soloader.Elf64_Phdr:
    19:19:void <init>() -> <init>
com.facebook.soloader.Elf64_Shdr -> com.facebook.soloader.Elf64_Shdr:
    19:19:void <init>() -> <init>
com.facebook.soloader.ExoSoSource -> com.facebook.soloader.ExoSoSource:
    39:40:void <init>(android.content.Context,java.lang.String) -> <init>
    44:44:com.facebook.soloader.UnpackingSoSource$Unpacker makeUnpacker() -> makeUnpacker
com.facebook.soloader.ExoSoSource$ExoUnpacker -> com.facebook.soloader.ExoSoSource$ExoUnpacker:
    51:114:void <init>(com.facebook.soloader.ExoSoSource,com.facebook.soloader.UnpackingSoSource) -> <init>
    47:47:com.facebook.soloader.ExoSoSource$FileDso[] access$100(com.facebook.soloader.ExoSoSource$ExoUnpacker) -> access$100
    118:118:com.facebook.soloader.UnpackingSoSource$DsoManifest getDsoManifest() -> getDsoManifest
    123:123:com.facebook.soloader.UnpackingSoSource$InputDsoIterator openDsoIterator() -> openDsoIterator
com.facebook.soloader.ExoSoSource$ExoUnpacker$FileBackedInputDsoIterator -> com.facebook.soloader.ExoSoSource$ExoUnpacker$FileBackedInputDsoIterator:
    126:126:void <init>(com.facebook.soloader.ExoSoSource$ExoUnpacker) -> <init>
    126:126:void <init>(com.facebook.soloader.ExoSoSource$ExoUnpacker,com.facebook.soloader.ExoSoSource$1) -> <init>
    131:131:boolean hasNext() -> hasNext
    136:146:com.facebook.soloader.UnpackingSoSource$InputDso next() -> next
com.facebook.soloader.ExoSoSource$FileDso -> com.facebook.soloader.ExoSoSource$FileDso:
    154:156:void <init>(java.lang.String,java.lang.String,java.io.File) -> <init>
com.facebook.soloader.ExtractFromZipSoSource -> com.facebook.soloader.ExtractFromZipSoSource:
    49:52:void <init>(android.content.Context,java.lang.String,java.io.File,java.lang.String) -> <init>
    56:56:com.facebook.soloader.UnpackingSoSource$Unpacker makeUnpacker() -> makeUnpacker
com.facebook.soloader.ExtractFromZipSoSource$ZipDso -> com.facebook.soloader.ExtractFromZipSoSource$ZipDso:
    179:182:void <init>(java.lang.String,java.util.zip.ZipEntry,int) -> <init>
    192:192:int compareTo(java.lang.Object) -> compareTo
    185:187:java.lang.String makePseudoHash(java.util.zip.ZipEntry) -> makePseudoHash
com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker -> com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker:
    65:68:void <init>(com.facebook.soloader.ExtractFromZipSoSource,com.facebook.soloader.UnpackingSoSource) -> <init>
    59:59:com.facebook.soloader.ExtractFromZipSoSource$ZipDso[] access$100(com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker) -> access$100
    59:59:java.util.zip.ZipFile access$200(com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker) -> access$200
    132:133:void close() -> close
    71:116:com.facebook.soloader.ExtractFromZipSoSource$ZipDso[] ensureDsos() -> ensureDsos
    137:137:com.facebook.soloader.UnpackingSoSource$DsoManifest getDsoManifest() -> getDsoManifest
    142:142:com.facebook.soloader.UnpackingSoSource$InputDsoIterator openDsoIterator() -> openDsoIterator
    127:127:boolean shouldExtract(java.util.zip.ZipEntry,java.lang.String) -> shouldExtract
com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker$ZipBackedInputDsoIterator -> com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker$ZipBackedInputDsoIterator:
    145:145:void <init>(com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker) -> <init>
    145:145:void <init>(com.facebook.soloader.ExtractFromZipSoSource$ZipUnpacker,com.facebook.soloader.ExtractFromZipSoSource$1) -> <init>
    151:152:boolean hasNext() -> hasNext
    157:168:com.facebook.soloader.UnpackingSoSource$InputDso next() -> next
com.facebook.soloader.FileLocker -> com.facebook.soloader.FileLocker:
    34:46:void <init>(java.io.File) -> <init>
    51:57:void close() -> close
    31:31:com.facebook.soloader.FileLocker lock(java.io.File) -> lock
com.facebook.soloader.MergedSoMapping -> com.facebook.soloader.MergedSoMapping:
    21:21:void <init>() -> <init>
    27:27:void invokeJniOnload(java.lang.String) -> invokeJniOnload
    23:23:java.lang.String mapLibName(java.lang.String) -> mapLibName
com.facebook.soloader.MinElf -> com.facebook.soloader.MinElf:
    32:32:void <init>() -> <init>
    46:51:java.lang.String[] extract_DT_NEEDED(java.io.File) -> extract_DT_NEEDED
    68:234:java.lang.String[] extract_DT_NEEDED(java.nio.channels.FileChannel) -> extract_DT_NEEDED
    270:271:long get64(java.nio.channels.FileChannel,java.nio.ByteBuffer,long) -> get64
    239:245:java.lang.String getSz(java.nio.channels.FileChannel,java.nio.ByteBuffer,long) -> getSz
    282:283:int getu16(java.nio.channels.FileChannel,java.nio.ByteBuffer,long) -> getu16
    276:277:long getu32(java.nio.channels.FileChannel,java.nio.ByteBuffer,long) -> getu32
    288:289:short getu8(java.nio.channels.FileChannel,java.nio.ByteBuffer,long) -> getu8
    250:266:void read(java.nio.channels.FileChannel,java.nio.ByteBuffer,int,long) -> read
com.facebook.soloader.MinElf$ElfError -> com.facebook.soloader.MinElf$ElfError:
    294:295:void <init>(java.lang.String) -> <init>
com.facebook.soloader.NativeLibrary -> com.facebook.soloader.NativeLibrary:
    33:33:void <clinit>() -> <clinit>
    41:47:void <init>(java.util.List) -> <init>
    89:92:void ensureLoaded() -> ensureLoaded
    106:106:java.lang.UnsatisfiedLinkError getError() -> getError
    103:103:void initialNativeCheck() -> initialNativeCheck
    55:80:boolean loadLibraries() -> loadLibraries
com.facebook.soloader.NoopSoSource -> com.facebook.soloader.NoopSoSource:
    25:25:void <init>() -> <init>
    28:28:int loadLibrary(java.lang.String,int,android.os.StrictMode$ThreadPolicy) -> loadLibrary
    33:33:java.io.File unpackLibrary(java.lang.String) -> unpackLibrary
com.facebook.soloader.SoLoader -> com.facebook.soloader.SoLoader:
    82:161:void <clinit>() -> <clinit>
    70:70:void <init>() -> <init>
    840:864:boolean areSoSourcesAbisSupported() -> areSoSourcesAbisSupported
    778:786:void assertInitialized() -> assertInitialized
    439:440:void deinitForTest() -> deinitForTest
    648:741:void doLoadLibraryBySoName(java.lang.String,int,android.os.StrictMode$ThreadPolicy) -> doLoadLibraryBySoName
    414:428:java.lang.reflect.Method getNativeLoadRuntimeMethod() -> getNativeLoadRuntimeMethod
    164:165:void init(android.content.Context,int) -> init
    178:185:void init(android.content.Context,int,com.facebook.soloader.SoFileLoader) -> init
    190:194:void init(android.content.Context,boolean) -> init
    331:410:void initSoLoader(com.facebook.soloader.SoFileLoader) -> initSoLoader
    198:314:void initSoSources(android.content.Context,int,com.facebook.soloader.SoFileLoader) -> initSoSources
    484:484:boolean loadLibrary(java.lang.String) -> loadLibrary
    497:530:boolean loadLibrary(java.lang.String,int) -> loadLibrary
    539:540:void loadLibraryBySoName(java.lang.String,int,android.os.StrictMode$ThreadPolicy) -> loadLibraryBySoName
    552:625:boolean loadLibraryBySoName(java.lang.String,java.lang.String,java.lang.String,int,android.os.StrictMode$ThreadPolicy) -> loadLibraryBySoName
    816:830:java.lang.String makeLdLibraryPath() -> makeLdLibraryPath
    745:758:java.lang.String makeNonZipPath(java.lang.String) -> makeNonZipPath
    317:328:int makePrepareFlags() -> makePrepareFlags
    795:809:void prependSoSource(com.facebook.soloader.SoSource) -> prependSoSource
    460:466:void resetStatus() -> resetStatus
    434:435:void setInTestMode() -> setInTestMode
    455:456:void setSoFileLoader(com.facebook.soloader.SoFileLoader) -> setSoFileLoader
    444:451:void setSoSources(com.facebook.soloader.SoSource[]) -> setSoSources
    473:474:void setSystemLoadLibraryWrapper(com.facebook.soloader.SystemLoadLibraryWrapper) -> setSystemLoadLibraryWrapper
    637:641:java.io.File unpackLibraryAndDependencies(java.lang.String) -> unpackLibraryAndDependencies
    762:774:java.io.File unpackLibraryBySoName(java.lang.String) -> unpackLibraryBySoName
com.facebook.soloader.SoLoader$1 -> com.facebook.soloader.SoLoader$1:
    347:347:void <init>(boolean,java.lang.String,java.lang.String,java.lang.Runtime,java.lang.reflect.Method) -> <init>
    390:407:java.lang.String getLibHash(java.lang.String) -> getLibHash
    350:384:void load(java.lang.String,int) -> load
com.facebook.soloader.SoLoader$Api14Utils -> com.facebook.soloader.SoLoader$Api14Utils:
    869:869:void <init>() -> <init>
    871:886:java.lang.String getClassLoaderLdLoadLibrary() -> getClassLoaderLdLoadLibrary
com.facebook.soloader.SoLoader$WrongAbiError -> com.facebook.soloader.SoLoader$WrongAbiError:
    478:480:void <init>(java.lang.Throwable) -> <init>
com.facebook.soloader.SoSource -> com.facebook.soloader.SoSource:
    25:25:void <init>() -> <init>
    100:100:void addToLdLibraryPath(java.util.Collection) -> addToLdLibraryPath
    109:109:java.lang.String[] getSoSourceAbis() -> getSoSourceAbis
    70:70:void prepare(int) -> prepare
    119:119:java.lang.String toString() -> toString
com.facebook.soloader.SysUtil -> com.facebook.soloader.SysUtil:
    34:34:void <init>() -> <init>
    165:175:int copyBytes(java.io.RandomAccessFile,java.io.InputStream,int,byte[]) -> copyBytes
    56:59:void deleteOrThrow(java.io.File) -> deleteOrThrow
    99:113:void dumbDeleteRecursive(java.io.File) -> dumbDeleteRecursive
    84:87:void fallocateIfSupported(java.io.FileDescriptor,long) -> fallocateIfSupported
    46:52:int findAbiScore(java.lang.String[],java.lang.String) -> findAbiScore
    179:195:void fsyncRecursive(java.io.File) -> fsyncRecursive
    212:225:int getAppVersionCode(android.content.Context) -> getAppVersionCode
    69:72:java.lang.String[] getSupportedAbis() -> getSupportedAbis
    198:208:byte[] makeApkDepBlock(java.io.File,android.content.Context) -> makeApkDepBlock
    148:151:void mkdirOrThrow(java.io.File) -> mkdirOrThrow
com.facebook.soloader.SysUtil$LollipopSysdeps -> com.facebook.soloader.SysUtil$LollipopSysdeps:
    121:121:void <init>() -> <init>
    130:138:void fallocateIfSupported(java.io.FileDescriptor,long) -> fallocateIfSupported
    124:124:java.lang.String[] getSupportedAbis() -> getSupportedAbis
com.facebook.soloader.UnpackingSoSource -> com.facebook.soloader.UnpackingSoSource:
    58:63:void <init>(android.content.Context,java.lang.String) -> <init>
    58:68:void <init>(android.content.Context,java.io.File) -> <init>
    39:39:void access$000(java.io.File,byte) -> access$000
    184:211:void deleteUnmentionedFiles(com.facebook.soloader.UnpackingSoSource$Dso[]) -> deleteUnmentionedFiles
    214:245:void extractDso(com.facebook.soloader.UnpackingSoSource$InputDso,byte[]) -> extractDso
    395:407:byte[] getDepsBlock() -> getDepsBlock
    437:444:java.lang.Object getLibraryLock(java.lang.String) -> getLibraryLock
    78:82:java.lang.String[] getSoSourceAbis() -> getSoSourceAbis
    71:71:java.io.File getSoStorePath(android.content.Context,java.lang.String) -> getSoStorePath
    461:466:int loadLibrary(java.lang.String,int,android.os.StrictMode$ThreadPolicy) -> loadLibrary
    415:434:void prepare(int) -> prepare
    449:456:void prepare(java.lang.String) -> prepare
    291:380:boolean refreshLocked(com.facebook.soloader.FileLocker,int,byte[]) -> refreshLocked
    251:285:void regenerate(byte,com.facebook.soloader.UnpackingSoSource$DsoManifest,com.facebook.soloader.UnpackingSoSource$InputDsoIterator) -> regenerate
    86:87:void setSoSourceAbis(java.lang.String[]) -> setSoSourceAbis
    172:178:void writeState(java.io.File,byte) -> writeState
com.facebook.soloader.UnpackingSoSource$1 -> com.facebook.soloader.UnpackingSoSource$1:
    338:338:void <init>(com.facebook.soloader.UnpackingSoSource,java.io.File,byte[],com.facebook.soloader.UnpackingSoSource$DsoManifest,java.io.File,com.facebook.soloader.FileLocker) -> <init>
    343:371:void run() -> run
com.facebook.soloader.UnpackingSoSource$Dso -> com.facebook.soloader.UnpackingSoSource$Dso:
    93:96:void <init>(java.lang.String,java.lang.String) -> <init>
com.facebook.soloader.UnpackingSoSource$DsoManifest -> com.facebook.soloader.UnpackingSoSource$DsoManifest:
    102:104:void <init>(com.facebook.soloader.UnpackingSoSource$Dso[]) -> <init>
    110:124:com.facebook.soloader.UnpackingSoSource$DsoManifest read(java.io.DataInput) -> read
    128:134:void write(java.io.DataOutput) -> write
com.facebook.soloader.UnpackingSoSource$InputDso -> com.facebook.soloader.UnpackingSoSource$InputDso:
    140:143:void <init>(com.facebook.soloader.UnpackingSoSource$Dso,java.io.InputStream) -> <init>
    147:148:void close() -> close
com.facebook.soloader.UnpackingSoSource$InputDsoIterator -> com.facebook.soloader.UnpackingSoSource$InputDsoIterator:
    151:151:void <init>() -> <init>
    159:159:void close() -> close
com.facebook.soloader.UnpackingSoSource$Unpacker -> com.facebook.soloader.UnpackingSoSource$Unpacker:
    162:162:void <init>() -> <init>
    168:168:void close() -> close
com.facebook.widget.text.span.BetterImageSpan -> com.facebook.widget.text.span.BetterImageSpan:
    66:67:void <init>(android.graphics.drawable.Drawable) -> <init>
    62:73:void <init>(android.graphics.drawable.Drawable,int) -> <init>
    126:131:void draw(android.graphics.Canvas,java.lang.CharSequence,int,int,float,int,int,int,android.graphics.Paint) -> draw
    76:76:android.graphics.drawable.Drawable getDrawable() -> getDrawable
    141:150:int getOffsetAboveBaseline(android.graphics.Paint$FontMetricsInt) -> getOffsetAboveBaseline
    89:112:int getSize(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt) -> getSize
    47:54:int normalizeAlignment(int) -> normalizeAlignment
    134:138:void updateBounds() -> updateBounds
com.huawei.hms.ads.identifier.AdvertisingIdClient -> com.huawei.hms.ads.identifier.AdvertisingIdClient:
    1:6:com.huawei.hms.ads.identifier.AdvertisingIdClient$Info requestAdvertisingIdInfo(android.content.Context) -> requestAdvertisingIdInfo
com.mobai.BuildConfig -> com.mobai.BuildConfig:
    7:7:void <clinit>() -> <clinit>
    6:6:void <init>() -> <init>
com.mobai.MobaiTcpModule -> com.mobai.MobaiTcpModule:
    14:21:void <init>() -> <init>
    14:14:com.taobao.weex.bridge.JSCallback access$000(com.mobai.MobaiTcpModule) -> access$000
    51:58:void connect(com.alibaba.fastjson.JSONObject,com.taobao.weex.bridge.JSCallback) -> connect
    62:64:void sendStr(com.alibaba.fastjson.JSONObject) -> sendStr
com.mobai.MobaiTcpModule$1 -> com.mobai.MobaiTcpModule$1:
    21:21:void <init>(com.mobai.MobaiTcpModule) -> <init>
    24:26:void onConnect(com.mobai.utils.SocketTransceiver) -> onConnect
    30:31:void onConnectFailed() -> onConnectFailed
    40:41:void onDisconnect(com.mobai.utils.SocketTransceiver) -> onDisconnect
    35:36:void onReceive(com.mobai.utils.SocketTransceiver,java.lang.String) -> onReceive
com.mobai.uniapp.BuildConfig -> com.mobai.uniapp.BuildConfig:
    7:7:void <clinit>() -> <clinit>
    6:6:void <init>() -> <init>
com.mobai.utils.OutJSON -> com.mobai.utils.OutJSON:
    8:12:void <init>(int,java.lang.String,java.lang.Object) -> <init>
    15:15:int getCode() -> getCode
    23:23:java.lang.Object getData() -> getData
    19:19:java.lang.String getMsg() -> getMsg
com.mobai.utils.SocketTransceiver -> com.mobai.utils.SocketTransceiver:
    24:27:void <init>(java.net.Socket) -> <init>
    35:35:java.net.InetAddress getInetAddress() -> getInetAddress
    89:122:void run() -> run
    71:80:boolean send(java.lang.String) -> send
    44:46:void start() -> start
    54:61:void stop() -> stop
com.mobai.utils.TcpClient -> com.mobai.utils.TcpClient:
    6:9:void <init>() -> <init>
    6:6:boolean access$002(com.mobai.utils.TcpClient,boolean) -> access$002
    27:30:void connect(java.lang.String,int) -> connect
    64:68:void disconnect() -> disconnect
    85:85:com.mobai.utils.SocketTransceiver getTransceiver() -> getTransceiver
    76:76:boolean isConnected() -> isConnected
    35:56:void run() -> run
com.mobai.utils.TcpClient$1 -> com.mobai.utils.TcpClient$1:
    36:36:void <init>(com.mobai.utils.TcpClient,java.net.Socket) -> <init>
    45:47:void onDisconnect(java.net.InetAddress) -> onDisconnect
    40:41:void onReceive(java.net.InetAddress,java.lang.String) -> onReceive
com.netease.nis.sdkwrapper.Utils -> com.netease.nis.sdkwrapper.Utils:
    18:19:void <clinit>() -> <clinit>
    16:16:void <init>() -> <init>
    26:44:java.lang.String doTypeShort(java.lang.String) -> doTypeShort
    49:55:java.lang.String getFieldSCDesc(java.lang.Class,java.lang.String,java.lang.String) -> getFieldSCDesc
    93:119:java.lang.Object getStaticFO(java.lang.String,java.lang.String) -> getStaticFO
    79:89:void showRiskMessage(android.content.Context,java.lang.String) -> showRiskMessage
    61:74:java.lang.String vGetFieldSCDesc(java.lang.Class,java.lang.String,java.lang.String) -> vGetFieldSCDesc
com.nostra13.dcloudimageloader.BuildConfig -> com.nostra13.dcloudimageloader.BuildConfig:
    1:1:void <init>() -> <init>
com.nostra13.dcloudimageloader.cache.disc.BaseDiscCache -> com.nostra13.dcloudimageloader.cache.disc.BaseDiscCache:
    1:1:void <init>(java.io.File) -> <init>
    2:11:void <init>(java.io.File,com.nostra13.dcloudimageloader.cache.disc.naming.FileNameGenerator) -> <init>
    1:8:void clear() -> clear
    1:2:java.io.File get(java.lang.String) -> get
com.nostra13.dcloudimageloader.cache.disc.LimitedDiscCache -> com.nostra13.dcloudimageloader.cache.disc.LimitedDiscCache:
    1:1:void <init>(java.io.File,int) -> <init>
    2:6:void <init>(java.io.File,com.nostra13.dcloudimageloader.cache.disc.naming.FileNameGenerator,int) -> <init>
    1:1:java.util.Map access$000(com.nostra13.dcloudimageloader.cache.disc.LimitedDiscCache) -> access$000
    1:1:java.util.concurrent.atomic.AtomicInteger access$100(com.nostra13.dcloudimageloader.cache.disc.LimitedDiscCache) -> access$100
    1:19:void calculateCacheSizeAndFillUsageMap() -> calculateCacheSizeAndFillUsageMap
    1:3:void clear() -> clear
    1:4:java.io.File get(java.lang.String) -> get
    1:16:void put(java.lang.String,java.io.File) -> put
    1:35:int removeNext() -> removeNext
com.nostra13.dcloudimageloader.cache.disc.LimitedDiscCache$1 -> com.nostra13.dcloudimageloader.cache.disc.LimitedDiscCache$1:
    1:1:void <init>(com.nostra13.dcloudimageloader.cache.disc.LimitedDiscCache) -> <init>
    1:12:void run() -> run
com.nostra13.dcloudimageloader.cache.disc.impl.FileCountLimitedDiscCache -> com.nostra13.dcloudimageloader.cache.disc.impl.FileCountLimitedDiscCache:
    1:1:void <init>(java.io.File,int) -> <init>
    2:2:void <init>(java.io.File,com.nostra13.dcloudimageloader.cache.disc.naming.FileNameGenerator,int) -> <init>
com.nostra13.dcloudimageloader.cache.disc.impl.LimitedAgeDiscCache -> com.nostra13.dcloudimageloader.cache.disc.impl.LimitedAgeDiscCache:
    1:1:void <init>(java.io.File,long) -> <init>
    2:4:void <init>(java.io.File,com.nostra13.dcloudimageloader.cache.disc.naming.FileNameGenerator,long) -> <init>
    1:16:java.io.File get(java.lang.String) -> get
    1:3:void put(java.lang.String,java.io.File) -> put
com.nostra13.dcloudimageloader.cache.disc.impl.TotalSizeLimitedDiscCache -> com.nostra13.dcloudimageloader.cache.disc.impl.TotalSizeLimitedDiscCache:
    1:1:void <init>(java.io.File,int) -> <init>
    2:4:void <init>(java.io.File,com.nostra13.dcloudimageloader.cache.disc.naming.FileNameGenerator,int) -> <init>
    1:1:int getSize(java.io.File) -> getSize
com.nostra13.dcloudimageloader.cache.disc.impl.UnlimitedDiscCache -> com.nostra13.dcloudimageloader.cache.disc.impl.UnlimitedDiscCache:
    1:1:void <init>(java.io.File) -> <init>
    2:2:void <init>(java.io.File,com.nostra13.dcloudimageloader.cache.disc.naming.FileNameGenerator) -> <init>
com.nostra13.dcloudimageloader.cache.disc.naming.HashCodeFileNameGenerator -> com.nostra13.dcloudimageloader.cache.disc.naming.HashCodeFileNameGenerator:
    1:1:void <init>() -> <init>
    1:1:java.lang.String generate(java.lang.String) -> generate
com.nostra13.dcloudimageloader.cache.disc.naming.Md5FileNameGenerator -> com.nostra13.dcloudimageloader.cache.disc.naming.Md5FileNameGenerator:
    1:1:void <init>() -> <init>
    1:3:java.lang.String generate(java.lang.String) -> generate
    1:5:byte[] getMD5(byte[]) -> getMD5
com.nostra13.dcloudimageloader.cache.memory.BaseMemoryCache -> com.nostra13.dcloudimageloader.cache.memory.BaseMemoryCache:
    1:4:void <init>() -> <init>
    1:1:void clear() -> clear
    1:3:android.graphics.Bitmap get(java.lang.String) -> get
    1:3:java.util.Collection keys() -> keys
    1:1:boolean put(java.lang.String,android.graphics.Bitmap) -> put
    1:2:android.graphics.Bitmap remove(java.lang.String) -> remove
com.nostra13.dcloudimageloader.cache.memory.LimitedMemoryCache -> com.nostra13.dcloudimageloader.cache.memory.LimitedMemoryCache:
    1:9:void <init>(int) -> <init>
    1:3:void clear() -> clear
    1:1:int getSizeLimit() -> getSizeLimit
    1:17:boolean put(java.lang.String,android.graphics.Bitmap) -> put
    1:7:android.graphics.Bitmap remove(java.lang.String) -> remove
com.nostra13.dcloudimageloader.cache.memory.impl.FIFOLimitedMemoryCache -> com.nostra13.dcloudimageloader.cache.memory.impl.FIFOLimitedMemoryCache:
    1:2:void <init>(int) -> <init>
    1:2:void clear() -> clear
    1:1:java.lang.ref.Reference createReference(android.graphics.Bitmap) -> createReference
    1:1:int getSize(android.graphics.Bitmap) -> getSize
    1:2:boolean put(java.lang.String,android.graphics.Bitmap) -> put
    1:5:android.graphics.Bitmap remove(java.lang.String) -> remove
    1:1:android.graphics.Bitmap removeNext() -> removeNext
com.nostra13.dcloudimageloader.cache.memory.impl.FuzzyKeyMemoryCache -> com.nostra13.dcloudimageloader.cache.memory.impl.FuzzyKeyMemoryCache:
    1:3:void <init>(com.nostra13.dcloudimageloader.cache.memory.MemoryCacheAware,java.util.Comparator) -> <init>
    1:1:void clear() -> clear
    1:1:android.graphics.Bitmap get(java.lang.String) -> get
    1:1:java.util.Collection keys() -> keys
    1:14:boolean put(java.lang.String,android.graphics.Bitmap) -> put
    1:1:android.graphics.Bitmap remove(java.lang.String) -> remove
com.nostra13.dcloudimageloader.cache.memory.impl.LRULimitedMemoryCache -> com.nostra13.dcloudimageloader.cache.memory.impl.LRULimitedMemoryCache:
    1:2:void <init>(int) -> <init>
    1:2:void clear() -> clear
    1:1:java.lang.ref.Reference createReference(android.graphics.Bitmap) -> createReference
    1:2:android.graphics.Bitmap get(java.lang.String) -> get
    1:1:int getSize(android.graphics.Bitmap) -> getSize
    1:2:boolean put(java.lang.String,android.graphics.Bitmap) -> put
    1:2:android.graphics.Bitmap remove(java.lang.String) -> remove
    1:8:android.graphics.Bitmap removeNext() -> removeNext
com.nostra13.dcloudimageloader.cache.memory.impl.LargestLimitedMemoryCache -> com.nostra13.dcloudimageloader.cache.memory.impl.LargestLimitedMemoryCache:
    1:2:void <init>(int) -> <init>
    1:2:void clear() -> clear
    1:1:java.lang.ref.Reference createReference(android.graphics.Bitmap) -> createReference
    1:1:int getSize(android.graphics.Bitmap) -> getSize
    1:2:boolean put(java.lang.String,android.graphics.Bitmap) -> put
    1:5:android.graphics.Bitmap remove(java.lang.String) -> remove
    1:17:android.graphics.Bitmap removeNext() -> removeNext
com.nostra13.dcloudimageloader.cache.memory.impl.LimitedAgeMemoryCache -> com.nostra13.dcloudimageloader.cache.memory.impl.LimitedAgeMemoryCache:
    1:11:void <init>(com.nostra13.dcloudimageloader.cache.memory.MemoryCacheAware,long) -> <init>
    1:2:void clear() -> clear
    1:7:android.graphics.Bitmap get(java.lang.String) -> get
    1:1:java.util.Collection keys() -> keys
    1:3:boolean put(java.lang.String,android.graphics.Bitmap) -> put
    1:2:android.graphics.Bitmap remove(java.lang.String) -> remove
com.nostra13.dcloudimageloader.cache.memory.impl.LruMemoryCache -> com.nostra13.dcloudimageloader.cache.memory.impl.LruMemoryCache:
    1:7:void <init>(int) -> <init>
    1:1:void clear() -> clear
    1:4:android.graphics.Bitmap get(java.lang.String) -> get
    1:3:java.util.Collection keys() -> keys
    1:11:boolean put(java.lang.String,android.graphics.Bitmap) -> put
    1:8:android.graphics.Bitmap remove(java.lang.String) -> remove
    1:1:int sizeOf(java.lang.String,android.graphics.Bitmap) -> sizeOf
    1:1:java.lang.String toString() -> toString
    1:35:void trimToSize(int) -> trimToSize
com.nostra13.dcloudimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache -> com.nostra13.dcloudimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache:
    1:2:void <init>(int) -> <init>
    1:2:void clear() -> clear
    1:1:java.lang.ref.Reference createReference(android.graphics.Bitmap) -> createReference
    1:6:android.graphics.Bitmap get(java.lang.String) -> get
    1:1:int getSize(android.graphics.Bitmap) -> getSize
    1:2:boolean put(java.lang.String,android.graphics.Bitmap) -> put
    1:5:android.graphics.Bitmap remove(java.lang.String) -> remove
    1:17:android.graphics.Bitmap removeNext() -> removeNext
com.nostra13.dcloudimageloader.cache.memory.impl.WeakMemoryCache -> com.nostra13.dcloudimageloader.cache.memory.impl.WeakMemoryCache:
    1:1:void <init>() -> <init>
    1:1:java.lang.ref.Reference createReference(android.graphics.Bitmap) -> createReference
com.nostra13.dcloudimageloader.core.DefaultConfigurationFactory -> com.nostra13.dcloudimageloader.core.DefaultConfigurationFactory:
    1:1:void <init>() -> <init>
    1:1:com.nostra13.dcloudimageloader.core.display.BitmapDisplayer createBitmapDisplayer() -> createBitmapDisplayer
    1:8:com.nostra13.dcloudimageloader.cache.disc.DiscCacheAware createDiscCache(android.content.Context,com.nostra13.dcloudimageloader.cache.disc.naming.FileNameGenerator,int,int) -> createDiscCache
    1:3:java.util.concurrent.Executor createExecutor(int,int,com.nostra13.dcloudimageloader.core.assist.QueueProcessingType) -> createExecutor
    1:1:com.nostra13.dcloudimageloader.cache.disc.naming.FileNameGenerator createFileNameGenerator() -> createFileNameGenerator
    1:1:com.nostra13.dcloudimageloader.core.decode.ImageDecoder createImageDecoder(boolean) -> createImageDecoder
    1:1:com.nostra13.dcloudimageloader.core.download.ImageDownloader createImageDownloader(android.content.Context) -> createImageDownloader
    1:8:com.nostra13.dcloudimageloader.cache.memory.MemoryCacheAware createMemoryCache(int) -> createMemoryCache
    1:6:com.nostra13.dcloudimageloader.cache.disc.DiscCacheAware createReserveDiscCache(java.io.File) -> createReserveDiscCache
    1:1:java.util.concurrent.ThreadFactory createThreadFactory(int) -> createThreadFactory
com.nostra13.dcloudimageloader.core.DefaultConfigurationFactory$DefaultThreadFactory -> com.nostra13.dcloudimageloader.core.DefaultConfigurationFactory$DefaultThreadFactory:
    1:1:void <clinit>() -> <clinit>
    1:10:void <init>(int) -> <init>
    1:6:java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.nostra13.dcloudimageloader.core.DisplayBitmapTask -> com.nostra13.dcloudimageloader.core.DisplayBitmapTask:
    1:9:void <init>(android.graphics.Bitmap,com.nostra13.dcloudimageloader.core.ImageLoadingInfo,com.nostra13.dcloudimageloader.core.ImageLoaderEngine,com.nostra13.dcloudimageloader.core.assist.LoadedFrom) -> <init>
    1:2:boolean isViewWasReused() -> isViewWasReused
    1:20:void run() -> run
    1:1:void setLoggingEnabled(boolean) -> setLoggingEnabled
com.nostra13.dcloudimageloader.core.DisplayImageOptions -> com.nostra13.dcloudimageloader.core.DisplayImageOptions:
    1:1:void <init>(com.nostra13.dcloudimageloader.core.DisplayImageOptions$Builder,com.nostra13.dcloudimageloader.core.DisplayImageOptions$1) -> <init>
    2:21:void <init>(com.nostra13.dcloudimageloader.core.DisplayImageOptions$Builder) -> <init>
    1:1:int access$1900(com.nostra13.dcloudimageloader.core.DisplayImageOptions) -> access$1900
    1:1:int access$2000(com.nostra13.dcloudimageloader.core.DisplayImageOptions) -> access$2000
    1:1:int access$2100(com.nostra13.dcloudimageloader.core.DisplayImageOptions) -> access$2100
    1:1:android.graphics.drawable.Drawable access$2200(com.nostra13.dcloudimageloader.core.DisplayImageOptions) -> access$2200
    1:1:android.graphics.drawable.Drawable access$2300(com.nostra13.dcloudimageloader.core.DisplayImageOptions) -> access$2300
    1:1:android.graphics.drawable.Drawable access$2400(com.nostra13.dcloudimageloader.core.DisplayImageOptions) -> access$2400
    1:1:boolean access$2500(com.nostra13.dcloudimageloader.core.DisplayImageOptions) -> access$2500
    1:1:boolean access$2600(com.nostra13.dcloudimageloader.core.DisplayImageOptions) -> access$2600
    1:1:boolean access$2700(com.nostra13.dcloudimageloader.core.DisplayImageOptions) -> access$2700
    1:1:com.nostra13.dcloudimageloader.core.assist.ImageScaleType access$2800(com.nostra13.dcloudimageloader.core.DisplayImageOptions) -> access$2800
    1:1:android.graphics.BitmapFactory$Options access$2900(com.nostra13.dcloudimageloader.core.DisplayImageOptions) -> access$2900
    1:1:int access$3000(com.nostra13.dcloudimageloader.core.DisplayImageOptions) -> access$3000
    1:1:boolean access$3100(com.nostra13.dcloudimageloader.core.DisplayImageOptions) -> access$3100
    1:1:java.lang.Object access$3200(com.nostra13.dcloudimageloader.core.DisplayImageOptions) -> access$3200
    1:1:com.nostra13.dcloudimageloader.core.process.BitmapProcessor access$3300(com.nostra13.dcloudimageloader.core.DisplayImageOptions) -> access$3300
    1:1:com.nostra13.dcloudimageloader.core.process.BitmapProcessor access$3400(com.nostra13.dcloudimageloader.core.DisplayImageOptions) -> access$3400
    1:1:com.nostra13.dcloudimageloader.core.display.BitmapDisplayer access$3500(com.nostra13.dcloudimageloader.core.DisplayImageOptions) -> access$3500
    1:1:android.os.Handler access$3600(com.nostra13.dcloudimageloader.core.DisplayImageOptions) -> access$3600
    1:1:boolean access$3700(com.nostra13.dcloudimageloader.core.DisplayImageOptions) -> access$3700
    1:1:com.nostra13.dcloudimageloader.core.DisplayImageOptions createSimple() -> createSimple
    1:1:android.graphics.BitmapFactory$Options getDecodingOptions() -> getDecodingOptions
    1:1:int getDelayBeforeLoading() -> getDelayBeforeLoading
    1:1:com.nostra13.dcloudimageloader.core.display.BitmapDisplayer getDisplayer() -> getDisplayer
    1:1:java.lang.Object getExtraForDownloader() -> getExtraForDownloader
    1:8:android.os.Handler getHandler() -> getHandler
    1:1:android.graphics.drawable.Drawable getImageForEmptyUri(android.content.res.Resources) -> getImageForEmptyUri
    1:1:android.graphics.drawable.Drawable getImageOnFail(android.content.res.Resources) -> getImageOnFail
    1:1:android.graphics.drawable.Drawable getImageOnLoading(android.content.res.Resources) -> getImageOnLoading
    1:1:com.nostra13.dcloudimageloader.core.assist.ImageScaleType getImageScaleType() -> getImageScaleType
    1:1:com.nostra13.dcloudimageloader.core.process.BitmapProcessor getPostProcessor() -> getPostProcessor
    1:1:com.nostra13.dcloudimageloader.core.process.BitmapProcessor getPreProcessor() -> getPreProcessor
    1:1:boolean isCacheInMemory() -> isCacheInMemory
    1:1:boolean isCacheOnDisc() -> isCacheOnDisc
    1:1:boolean isConsiderExifParams() -> isConsiderExifParams
    1:1:boolean isResetViewBeforeLoading() -> isResetViewBeforeLoading
    1:1:boolean isSyncLoading() -> isSyncLoading
    1:1:boolean shouldDelayBeforeLoading() -> shouldDelayBeforeLoading
    1:1:boolean shouldPostProcess() -> shouldPostProcess
    1:1:boolean shouldPreProcess() -> shouldPreProcess
    1:1:boolean shouldShowImageForEmptyUri() -> shouldShowImageForEmptyUri
    1:1:boolean shouldShowImageOnFail() -> shouldShowImageOnFail
    1:1:boolean shouldShowImageOnLoading() -> shouldShowImageOnLoading
com.nostra13.dcloudimageloader.core.DisplayImageOptions$Builder -> com.nostra13.dcloudimageloader.core.DisplayImageOptions$Builder:
    1:34:void <init>() -> <init>
    1:1:int access$000(com.nostra13.dcloudimageloader.core.DisplayImageOptions$Builder) -> access$000
    1:1:int access$100(com.nostra13.dcloudimageloader.core.DisplayImageOptions$Builder) -> access$100
    1:1:android.graphics.BitmapFactory$Options access$1000(com.nostra13.dcloudimageloader.core.DisplayImageOptions$Builder) -> access$1000
    1:1:int access$1100(com.nostra13.dcloudimageloader.core.DisplayImageOptions$Builder) -> access$1100
    1:1:boolean access$1200(com.nostra13.dcloudimageloader.core.DisplayImageOptions$Builder) -> access$1200
    1:1:java.lang.Object access$1300(com.nostra13.dcloudimageloader.core.DisplayImageOptions$Builder) -> access$1300
    1:1:com.nostra13.dcloudimageloader.core.process.BitmapProcessor access$1400(com.nostra13.dcloudimageloader.core.DisplayImageOptions$Builder) -> access$1400
    1:1:com.nostra13.dcloudimageloader.core.process.BitmapProcessor access$1500(com.nostra13.dcloudimageloader.core.DisplayImageOptions$Builder) -> access$1500
    1:1:com.nostra13.dcloudimageloader.core.display.BitmapDisplayer access$1600(com.nostra13.dcloudimageloader.core.DisplayImageOptions$Builder) -> access$1600
    1:1:android.os.Handler access$1700(com.nostra13.dcloudimageloader.core.DisplayImageOptions$Builder) -> access$1700
    1:1:boolean access$1800(com.nostra13.dcloudimageloader.core.DisplayImageOptions$Builder) -> access$1800
    1:1:int access$200(com.nostra13.dcloudimageloader.core.DisplayImageOptions$Builder) -> access$200
    1:1:android.graphics.drawable.Drawable access$300(com.nostra13.dcloudimageloader.core.DisplayImageOptions$Builder) -> access$300
    1:1:android.graphics.drawable.Drawable access$400(com.nostra13.dcloudimageloader.core.DisplayImageOptions$Builder) -> access$400
    1:1:android.graphics.drawable.Drawable access$500(com.nostra13.dcloudimageloader.core.DisplayImageOptions$Builder) -> access$500
    1:1:boolean access$600(com.nostra13.dcloudimageloader.core.DisplayImageOptions$Builder) -> access$600
    1:1:boolean access$700(com.nostra13.dcloudimageloader.core.DisplayImageOptions$Builder) -> access$700
    1:1:boolean access$800(com.nostra13.dcloudimageloader.core.DisplayImageOptions$Builder) -> access$800
    1:1:com.nostra13.dcloudimageloader.core.assist.ImageScaleType access$900(com.nostra13.dcloudimageloader.core.DisplayImageOptions$Builder) -> access$900
    1:2:com.nostra13.dcloudimageloader.core.DisplayImageOptions$Builder bitmapConfig(android.graphics.Bitmap$Config) -> bitmapConfig
    1:1:com.nostra13.dcloudimageloader.core.DisplayImageOptions build() -> build
    1:1:com.nostra13.dcloudimageloader.core.DisplayImageOptions$Builder cacheInMemory() -> cacheInMemory
    2:2:com.nostra13.dcloudimageloader.core.DisplayImageOptions$Builder cacheInMemory(boolean) -> cacheInMemory
    1:1:com.nostra13.dcloudimageloader.core.DisplayImageOptions$Builder cacheOnDisc() -> cacheOnDisc
    2:2:com.nostra13.dcloudimageloader.core.DisplayImageOptions$Builder cacheOnDisc(boolean) -> cacheOnDisc
    1:19:com.nostra13.dcloudimageloader.core.DisplayImageOptions$Builder cloneFrom(com.nostra13.dcloudimageloader.core.DisplayImageOptions) -> cloneFrom
    1:1:com.nostra13.dcloudimageloader.core.DisplayImageOptions$Builder considerExifParams(boolean) -> considerExifParams
    1:2:com.nostra13.dcloudimageloader.core.DisplayImageOptions$Builder decodingOptions(android.graphics.BitmapFactory$Options) -> decodingOptions
    1:1:com.nostra13.dcloudimageloader.core.DisplayImageOptions$Builder delayBeforeLoading(int) -> delayBeforeLoading
    1:2:com.nostra13.dcloudimageloader.core.DisplayImageOptions$Builder displayer(com.nostra13.dcloudimageloader.core.display.BitmapDisplayer) -> displayer
    1:1:com.nostra13.dcloudimageloader.core.DisplayImageOptions$Builder extraForDownloader(java.lang.Object) -> extraForDownloader
    1:1:com.nostra13.dcloudimageloader.core.DisplayImageOptions$Builder handler(android.os.Handler) -> handler
    1:1:com.nostra13.dcloudimageloader.core.DisplayImageOptions$Builder imageScaleType(com.nostra13.dcloudimageloader.core.assist.ImageScaleType) -> imageScaleType
    1:1:com.nostra13.dcloudimageloader.core.DisplayImageOptions$Builder postProcessor(com.nostra13.dcloudimageloader.core.process.BitmapProcessor) -> postProcessor
    1:1:com.nostra13.dcloudimageloader.core.DisplayImageOptions$Builder preProcessor(com.nostra13.dcloudimageloader.core.process.BitmapProcessor) -> preProcessor
    1:1:com.nostra13.dcloudimageloader.core.DisplayImageOptions$Builder resetViewBeforeLoading() -> resetViewBeforeLoading
    2:2:com.nostra13.dcloudimageloader.core.DisplayImageOptions$Builder resetViewBeforeLoading(boolean) -> resetViewBeforeLoading
    1:1:com.nostra13.dcloudimageloader.core.DisplayImageOptions$Builder showImageForEmptyUri(int) -> showImageForEmptyUri
    2:2:com.nostra13.dcloudimageloader.core.DisplayImageOptions$Builder showImageForEmptyUri(android.graphics.drawable.Drawable) -> showImageForEmptyUri
    1:1:com.nostra13.dcloudimageloader.core.DisplayImageOptions$Builder showImageOnFail(int) -> showImageOnFail
    2:2:com.nostra13.dcloudimageloader.core.DisplayImageOptions$Builder showImageOnFail(android.graphics.drawable.Drawable) -> showImageOnFail
    1:1:com.nostra13.dcloudimageloader.core.DisplayImageOptions$Builder showImageOnLoading(int) -> showImageOnLoading
    2:2:com.nostra13.dcloudimageloader.core.DisplayImageOptions$Builder showImageOnLoading(android.graphics.drawable.Drawable) -> showImageOnLoading
    1:1:com.nostra13.dcloudimageloader.core.DisplayImageOptions$Builder showStubImage(int) -> showStubImage
    1:1:com.nostra13.dcloudimageloader.core.DisplayImageOptions$Builder syncLoading(boolean) -> syncLoading
com.nostra13.dcloudimageloader.core.ImageLoader -> com.nostra13.dcloudimageloader.core.ImageLoader:
    1:2:void <init>() -> <init>
    1:1:void cancelDisplayTask(com.nostra13.dcloudimageloader.core.imageaware.ImageAware) -> cancelDisplayTask
    2:2:void cancelDisplayTask(android.widget.ImageView) -> cancelDisplayTask
    1:2:void checkConfiguration() -> checkConfiguration
    1:2:void clearDiscCache() -> clearDiscCache
    1:2:void clearMemoryCache() -> clearMemoryCache
    1:1:void denyNetworkDownloads(boolean) -> denyNetworkDownloads
    1:7:void destroy() -> destroy
    1:1:void displayImage(java.lang.String,com.nostra13.dcloudimageloader.core.imageaware.ImageAware) -> displayImage
    2:2:void displayImage(java.lang.String,com.nostra13.dcloudimageloader.core.imageaware.ImageAware,com.nostra13.dcloudimageloader.core.assist.ImageLoadingListener) -> displayImage
    3:3:void displayImage(java.lang.String,com.nostra13.dcloudimageloader.core.imageaware.ImageAware,com.nostra13.dcloudimageloader.core.DisplayImageOptions) -> displayImage
    4:63:void displayImage(java.lang.String,com.nostra13.dcloudimageloader.core.imageaware.ImageAware,com.nostra13.dcloudimageloader.core.DisplayImageOptions,com.nostra13.dcloudimageloader.core.assist.ImageLoadingListener) -> displayImage
    64:64:void displayImage(java.lang.String,android.widget.ImageView) -> displayImage
    65:65:void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.dcloudimageloader.core.DisplayImageOptions) -> displayImage
    66:66:void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.dcloudimageloader.core.assist.ImageLoadingListener) -> displayImage
    67:67:void displayImage(java.lang.String,android.widget.ImageView,com.nostra13.dcloudimageloader.core.DisplayImageOptions,com.nostra13.dcloudimageloader.core.assist.ImageLoadingListener) -> displayImage
    1:2:com.nostra13.dcloudimageloader.cache.disc.DiscCacheAware getDiscCache() -> getDiscCache
    1:10:com.nostra13.dcloudimageloader.core.ImageLoader getInstance() -> getInstance
    1:1:java.lang.String getLoadingUriForView(com.nostra13.dcloudimageloader.core.imageaware.ImageAware) -> getLoadingUriForView
    2:2:java.lang.String getLoadingUriForView(android.widget.ImageView) -> getLoadingUriForView
    1:2:com.nostra13.dcloudimageloader.cache.memory.MemoryCacheAware getMemoryCache() -> getMemoryCache
    1:1:void handleSlowNetwork(boolean) -> handleSlowNetwork
    0:10:void init(com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration) -> init
    1:1:boolean isInited() -> isInited
    1:1:void loadImage(java.lang.String,com.nostra13.dcloudimageloader.core.assist.ImageLoadingListener) -> loadImage
    2:2:void loadImage(java.lang.String,com.nostra13.dcloudimageloader.core.assist.ImageSize,com.nostra13.dcloudimageloader.core.assist.ImageLoadingListener) -> loadImage
    3:3:void loadImage(java.lang.String,com.nostra13.dcloudimageloader.core.DisplayImageOptions,com.nostra13.dcloudimageloader.core.assist.ImageLoadingListener) -> loadImage
    4:14:void loadImage(java.lang.String,com.nostra13.dcloudimageloader.core.assist.ImageSize,com.nostra13.dcloudimageloader.core.DisplayImageOptions,com.nostra13.dcloudimageloader.core.assist.ImageLoadingListener) -> loadImage
    1:1:android.graphics.Bitmap loadImageSync(java.lang.String) -> loadImageSync
    2:2:android.graphics.Bitmap loadImageSync(java.lang.String,com.nostra13.dcloudimageloader.core.DisplayImageOptions) -> loadImageSync
    3:3:android.graphics.Bitmap loadImageSync(java.lang.String,com.nostra13.dcloudimageloader.core.assist.ImageSize) -> loadImageSync
    4:10:android.graphics.Bitmap loadImageSync(java.lang.String,com.nostra13.dcloudimageloader.core.assist.ImageSize,com.nostra13.dcloudimageloader.core.DisplayImageOptions) -> loadImageSync
    1:1:void pause() -> pause
    1:1:void resume() -> resume
    1:1:void stop() -> stop
com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration -> com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration:
    1:1:void <init>(com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration$Builder,com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration$1) -> <init>
    2:27:void <init>(com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration$Builder) -> <init>
    1:1:com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration createDefault(android.content.Context) -> createDefault
    1:12:com.nostra13.dcloudimageloader.core.assist.ImageSize getMaxImageSize() -> getMaxImageSize
com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration$Builder -> com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration$Builder:
    1:1:void <clinit>() -> <clinit>
    1:39:void <init>(android.content.Context) -> <init>
    1:1:android.content.Context access$000(com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration$Builder) -> access$000
    1:1:int access$100(com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration$Builder) -> access$100
    1:1:int access$1000(com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration$Builder) -> access$1000
    1:1:int access$1100(com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration$Builder) -> access$1100
    1:1:com.nostra13.dcloudimageloader.core.assist.QueueProcessingType access$1200(com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration$Builder) -> access$1200
    1:1:com.nostra13.dcloudimageloader.cache.disc.DiscCacheAware access$1300(com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration$Builder) -> access$1300
    1:1:com.nostra13.dcloudimageloader.cache.memory.MemoryCacheAware access$1400(com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration$Builder) -> access$1400
    1:1:com.nostra13.dcloudimageloader.core.DisplayImageOptions access$1500(com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration$Builder) -> access$1500
    1:1:boolean access$1600(com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration$Builder) -> access$1600
    1:1:com.nostra13.dcloudimageloader.core.download.ImageDownloader access$1700(com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration$Builder) -> access$1700
    1:1:com.nostra13.dcloudimageloader.core.decode.ImageDecoder access$1800(com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration$Builder) -> access$1800
    1:1:boolean access$1900(com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration$Builder) -> access$1900
    1:1:int access$200(com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration$Builder) -> access$200
    1:1:boolean access$2000(com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration$Builder) -> access$2000
    1:1:int access$300(com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration$Builder) -> access$300
    1:1:int access$400(com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration$Builder) -> access$400
    1:1:android.graphics.Bitmap$CompressFormat access$500(com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration$Builder) -> access$500
    1:1:int access$600(com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration$Builder) -> access$600
    1:1:com.nostra13.dcloudimageloader.core.process.BitmapProcessor access$700(com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration$Builder) -> access$700
    1:1:java.util.concurrent.Executor access$800(com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration$Builder) -> access$800
    1:1:java.util.concurrent.Executor access$900(com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration$Builder) -> access$900
    1:2:com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration build() -> build
    1:1:com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration$Builder defaultDisplayImageOptions(com.nostra13.dcloudimageloader.core.DisplayImageOptions) -> defaultDisplayImageOptions
    1:1:com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration$Builder denyCacheImageMultipleSizesInMemory() -> denyCacheImageMultipleSizesInMemory
    1:9:com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration$Builder discCache(com.nostra13.dcloudimageloader.cache.disc.DiscCacheAware) -> discCache
    1:5:com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration$Builder discCacheExtraOptions(int,int,android.graphics.Bitmap$CompressFormat,int,com.nostra13.dcloudimageloader.core.process.BitmapProcessor) -> discCacheExtraOptions
    1:7:com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration$Builder discCacheFileCount(int) -> discCacheFileCount
    1:5:com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration$Builder discCacheFileNameGenerator(com.nostra13.dcloudimageloader.cache.disc.naming.FileNameGenerator) -> discCacheFileNameGenerator
    1:6:com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration$Builder discCacheSize(int) -> discCacheSize
    1:1:com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration$Builder imageDecoder(com.nostra13.dcloudimageloader.core.decode.ImageDecoder) -> imageDecoder
    1:1:com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration$Builder imageDownloader(com.nostra13.dcloudimageloader.core.download.ImageDownloader) -> imageDownloader
    1:38:void initEmptyFieldsWithDefaultValues() -> initEmptyFieldsWithDefaultValues
    1:5:com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration$Builder memoryCache(com.nostra13.dcloudimageloader.cache.memory.MemoryCacheAware) -> memoryCache
    1:2:com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration$Builder memoryCacheExtraOptions(int,int) -> memoryCacheExtraOptions
    1:6:com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration$Builder memoryCacheSize(int) -> memoryCacheSize
    1:9:com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration$Builder memoryCacheSizePercentage(int) -> memoryCacheSizePercentage
    1:5:com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration$Builder taskExecutor(java.util.concurrent.Executor) -> taskExecutor
    1:5:com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration$Builder taskExecutorForCachedImages(java.util.concurrent.Executor) -> taskExecutorForCachedImages
    1:5:com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration$Builder tasksProcessingOrder(com.nostra13.dcloudimageloader.core.assist.QueueProcessingType) -> tasksProcessingOrder
    1:5:com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration$Builder threadPoolSize(int) -> threadPoolSize
    1:10:com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration$Builder threadPriority(int) -> threadPriority
    1:1:com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration$Builder writeDebugLogs() -> writeDebugLogs
com.nostra13.dcloudimageloader.core.ImageLoaderEngine -> com.nostra13.dcloudimageloader.core.ImageLoaderEngine:
    1:12:void <init>(com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration) -> <init>
    1:1:void access$000(com.nostra13.dcloudimageloader.core.ImageLoaderEngine) -> access$000
    1:1:java.util.concurrent.Executor access$100(com.nostra13.dcloudimageloader.core.ImageLoaderEngine) -> access$100
    1:1:java.util.concurrent.Executor access$200(com.nostra13.dcloudimageloader.core.ImageLoaderEngine) -> access$200
    1:1:void cancelDisplayTaskFor(com.nostra13.dcloudimageloader.core.imageaware.ImageAware) -> cancelDisplayTaskFor
    1:1:java.util.concurrent.Executor createTaskExecutor() -> createTaskExecutor
    1:1:void denyNetworkDownloads(boolean) -> denyNetworkDownloads
    1:1:java.lang.String getLoadingUriForView(com.nostra13.dcloudimageloader.core.imageaware.ImageAware) -> getLoadingUriForView
    1:4:java.util.concurrent.locks.ReentrantLock getLockForUri(java.lang.String) -> getLockForUri
    1:1:java.util.concurrent.atomic.AtomicBoolean getPause() -> getPause
    1:1:void handleSlowNetwork(boolean) -> handleSlowNetwork
    1:6:void initExecutorsIfNeed() -> initExecutorsIfNeed
    1:1:boolean isNetworkDenied() -> isNetworkDenied
    1:1:boolean isSlowNetwork() -> isSlowNetwork
    1:1:void pause() -> pause
    1:1:void prepareDisplayTaskFor(com.nostra13.dcloudimageloader.core.imageaware.ImageAware,java.lang.String) -> prepareDisplayTaskFor
    1:5:void resume() -> resume
    1:10:void stop() -> stop
    1:1:void submit(com.nostra13.dcloudimageloader.core.LoadAndDisplayImageTask) -> submit
    2:3:void submit(com.nostra13.dcloudimageloader.core.ProcessAndDisplayImageTask) -> submit
com.nostra13.dcloudimageloader.core.ImageLoaderEngine$1 -> com.nostra13.dcloudimageloader.core.ImageLoaderEngine$1:
    1:1:void <init>(com.nostra13.dcloudimageloader.core.ImageLoaderEngine,com.nostra13.dcloudimageloader.core.LoadAndDisplayImageTask) -> <init>
    1:6:void run() -> run
com.nostra13.dcloudimageloader.core.ImageLoaderL -> com.nostra13.dcloudimageloader.core.ImageLoaderL:
    1:2:void <init>() -> <init>
    1:2:void checkConfiguration() -> checkConfiguration
    1:8:com.nostra13.dcloudimageloader.core.ImageLoaderL getInstance() -> getInstance
com.nostra13.dcloudimageloader.core.ImageLoadingInfo -> com.nostra13.dcloudimageloader.core.ImageLoadingInfo:
    1:8:void <init>(java.lang.String,com.nostra13.dcloudimageloader.core.imageaware.ImageAware,com.nostra13.dcloudimageloader.core.assist.ImageSize,java.lang.String,com.nostra13.dcloudimageloader.core.DisplayImageOptions,com.nostra13.dcloudimageloader.core.assist.ImageLoadingListener,java.util.concurrent.locks.ReentrantLock) -> <init>
com.nostra13.dcloudimageloader.core.LoadAndDisplayImageTask -> com.nostra13.dcloudimageloader.core.LoadAndDisplayImageTask:
    1:18:void <init>(com.nostra13.dcloudimageloader.core.ImageLoaderEngine,com.nostra13.dcloudimageloader.core.ImageLoadingInfo,android.os.Handler) -> <init>
    1:1:com.nostra13.dcloudimageloader.core.ImageLoaderConfiguration access$000(com.nostra13.dcloudimageloader.core.LoadAndDisplayImageTask) -> access$000
    1:3:boolean checkTaskIsInterrupted() -> checkTaskIsInterrupted
    1:1:boolean checkTaskIsNotActual() -> checkTaskIsNotActual
    1:4:boolean checkViewCollected() -> checkViewCollected
    1:5:boolean checkViewReused() -> checkViewReused
    1:9:android.graphics.Bitmap decodeImage(java.lang.String) -> decodeImage
    1:12:boolean delayIfNeed() -> delayIfNeed
    1:17:void downloadImage(java.io.File) -> downloadImage
    1:28:boolean downloadSizedImage(java.io.File,int,int) -> downloadSizedImage
    1:5:void fireCancelEvent() -> fireCancelEvent
    1:5:void fireFailEvent(com.nostra13.dcloudimageloader.core.assist.FailReason$FailType,java.lang.Throwable) -> fireFailEvent
    1:6:com.nostra13.dcloudimageloader.core.download.ImageDownloader getDownloader() -> getDownloader
    1:8:java.io.File getImageFileInDiscCache() -> getImageFileInDiscCache
    1:1:java.lang.String getLoadingUri() -> getLoadingUri
    1:2:void log(java.lang.String) -> log
    3:4:void log(java.lang.String,java.lang.Object[]) -> log
    1:152:void run() -> run
    1:23:java.lang.String tryCacheImageOnDisc(java.io.File) -> tryCacheImageOnDisc
    1:49:android.graphics.Bitmap tryLoadBitmap() -> tryLoadBitmap
    1:23:boolean waitIfPaused() -> waitIfPaused
com.nostra13.dcloudimageloader.core.LoadAndDisplayImageTask$1 -> com.nostra13.dcloudimageloader.core.LoadAndDisplayImageTask$1:
    1:1:void <init>(com.nostra13.dcloudimageloader.core.LoadAndDisplayImageTask,com.nostra13.dcloudimageloader.core.assist.FailReason$FailType,java.lang.Throwable) -> <init>
    1:5:void run() -> run
com.nostra13.dcloudimageloader.core.LoadAndDisplayImageTask$2 -> com.nostra13.dcloudimageloader.core.LoadAndDisplayImageTask$2:
    1:1:void <init>(com.nostra13.dcloudimageloader.core.LoadAndDisplayImageTask) -> <init>
    1:1:void run() -> run
com.nostra13.dcloudimageloader.core.ProcessAndDisplayImageTask -> com.nostra13.dcloudimageloader.core.ProcessAndDisplayImageTask:
    1:5:void <init>(com.nostra13.dcloudimageloader.core.ImageLoaderEngine,android.graphics.Bitmap,com.nostra13.dcloudimageloader.core.ImageLoadingInfo,android.os.Handler) -> <init>
    1:12:void run() -> run
com.nostra13.dcloudimageloader.core.assist.DiscCacheUtil -> com.nostra13.dcloudimageloader.core.assist.DiscCacheUtil:
    1:1:void <init>() -> <init>
    1:2:java.io.File findInCache(java.lang.String,com.nostra13.dcloudimageloader.cache.disc.DiscCacheAware) -> findInCache
    1:2:boolean removeFromCache(java.lang.String,com.nostra13.dcloudimageloader.cache.disc.DiscCacheAware) -> removeFromCache
com.nostra13.dcloudimageloader.core.assist.FailReason -> com.nostra13.dcloudimageloader.core.assist.FailReason:
    1:3:void <init>(com.nostra13.dcloudimageloader.core.assist.FailReason$FailType,java.lang.Throwable) -> <init>
    1:1:java.lang.Throwable getCause() -> getCause
    1:1:com.nostra13.dcloudimageloader.core.assist.FailReason$FailType getType() -> getType
com.nostra13.dcloudimageloader.core.assist.FailReason$FailType -> com.nostra13.dcloudimageloader.core.assist.FailReason$FailType:
    1:6:void <clinit>() -> <clinit>
    1:1:void <init>(java.lang.String,int) -> <init>
    1:1:com.nostra13.dcloudimageloader.core.assist.FailReason$FailType valueOf(java.lang.String) -> valueOf
    1:1:com.nostra13.dcloudimageloader.core.assist.FailReason$FailType[] values() -> values
com.nostra13.dcloudimageloader.core.assist.FlushedInputStream -> com.nostra13.dcloudimageloader.core.assist.FlushedInputStream:
    1:1:void <init>(java.io.InputStream) -> <init>
    1:3:long skip(long) -> skip
com.nostra13.dcloudimageloader.core.assist.ImageScaleType -> com.nostra13.dcloudimageloader.core.assist.ImageScaleType:
    1:6:void <clinit>() -> <clinit>
    1:1:void <init>(java.lang.String,int) -> <init>
    1:1:com.nostra13.dcloudimageloader.core.assist.ImageScaleType valueOf(java.lang.String) -> valueOf
    1:1:com.nostra13.dcloudimageloader.core.assist.ImageScaleType[] values() -> values
com.nostra13.dcloudimageloader.core.assist.ImageSize -> com.nostra13.dcloudimageloader.core.assist.ImageSize:
    1:3:void <init>(int,int) -> <init>
    4:10:void <init>(int,int,int) -> <init>
    1:1:int getHeight() -> getHeight
    1:1:int getWidth() -> getWidth
    1:1:com.nostra13.dcloudimageloader.core.assist.ImageSize scale(float) -> scale
    1:1:com.nostra13.dcloudimageloader.core.assist.ImageSize scaleDown(int) -> scaleDown
    1:1:java.lang.String toString() -> toString
com.nostra13.dcloudimageloader.core.assist.LoadedFrom -> com.nostra13.dcloudimageloader.core.assist.LoadedFrom:
    1:4:void <clinit>() -> <clinit>
    1:1:void <init>(java.lang.String,int) -> <init>
    1:1:com.nostra13.dcloudimageloader.core.assist.LoadedFrom valueOf(java.lang.String) -> valueOf
    1:1:com.nostra13.dcloudimageloader.core.assist.LoadedFrom[] values() -> values
com.nostra13.dcloudimageloader.core.assist.MemoryCacheUtil -> com.nostra13.dcloudimageloader.core.assist.MemoryCacheUtil:
    1:1:void <init>() -> <init>
    1:1:java.util.Comparator createFuzzyKeyComparator() -> createFuzzyKeyComparator
    1:4:java.util.List findCacheKeysForImageUri(java.lang.String,com.nostra13.dcloudimageloader.cache.memory.MemoryCacheAware) -> findCacheKeysForImageUri
    1:4:java.util.List findCachedBitmapsForImageUri(java.lang.String,com.nostra13.dcloudimageloader.cache.memory.MemoryCacheAware) -> findCachedBitmapsForImageUri
    1:1:java.lang.String generateKey(java.lang.String,com.nostra13.dcloudimageloader.core.assist.ImageSize) -> generateKey
    1:3:void removeFromCache(java.lang.String,com.nostra13.dcloudimageloader.cache.memory.MemoryCacheAware) -> removeFromCache
com.nostra13.dcloudimageloader.core.assist.MemoryCacheUtil$1 -> com.nostra13.dcloudimageloader.core.assist.MemoryCacheUtil$1:
    1:1:void <init>() -> <init>
    1:1:int compare(java.lang.Object,java.lang.Object) -> compare
    2:4:int compare(java.lang.String,java.lang.String) -> compare
com.nostra13.dcloudimageloader.core.assist.PauseOnScrollListener -> com.nostra13.dcloudimageloader.core.assist.PauseOnScrollListener:
    1:1:void <init>(com.nostra13.dcloudimageloader.core.ImageLoader,boolean,boolean) -> <init>
    2:6:void <init>(com.nostra13.dcloudimageloader.core.ImageLoader,boolean,boolean,android.widget.AbsListView$OnScrollListener) -> <init>
    1:2:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    1:19:void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
com.nostra13.dcloudimageloader.core.assist.QueueProcessingType -> com.nostra13.dcloudimageloader.core.assist.QueueProcessingType:
    1:3:void <clinit>() -> <clinit>
    1:1:void <init>(java.lang.String,int) -> <init>
    1:1:com.nostra13.dcloudimageloader.core.assist.QueueProcessingType valueOf(java.lang.String) -> valueOf
    1:1:com.nostra13.dcloudimageloader.core.assist.QueueProcessingType[] values() -> values
com.nostra13.dcloudimageloader.core.assist.SimpleImageLoadingListener -> com.nostra13.dcloudimageloader.core.assist.SimpleImageLoadingListener:
    1:1:void <init>() -> <init>
com.nostra13.dcloudimageloader.core.assist.SyncImageLoadingListener -> com.nostra13.dcloudimageloader.core.assist.SyncImageLoadingListener:
    1:1:void <init>() -> <init>
    1:1:android.graphics.Bitmap getLoadedBitmap() -> getLoadedBitmap
    1:1:void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
com.nostra13.dcloudimageloader.core.assist.ViewScaleType -> com.nostra13.dcloudimageloader.core.assist.ViewScaleType:
    1:3:void <clinit>() -> <clinit>
    1:1:void <init>(java.lang.String,int) -> <init>
    1:13:com.nostra13.dcloudimageloader.core.assist.ViewScaleType fromImageView(android.widget.ImageView) -> fromImageView
    1:1:com.nostra13.dcloudimageloader.core.assist.ViewScaleType valueOf(java.lang.String) -> valueOf
    1:1:com.nostra13.dcloudimageloader.core.assist.ViewScaleType[] values() -> values
com.nostra13.dcloudimageloader.core.assist.ViewScaleType$1 -> com.nostra13.dcloudimageloader.core.assist.ViewScaleType$1:
    1:1:void <clinit>() -> <clinit>
com.nostra13.dcloudimageloader.core.assist.deque.LIFOLinkedBlockingDeque -> com.nostra13.dcloudimageloader.core.assist.deque.LIFOLinkedBlockingDeque:
    1:1:void <init>() -> <init>
    1:1:boolean offer(java.lang.Object) -> offer
    1:1:java.lang.Object remove() -> remove
com.nostra13.dcloudimageloader.core.assist.deque.LinkedBlockingDeque -> com.nostra13.dcloudimageloader.core.assist.deque.LinkedBlockingDeque:
    1:1:void <init>() -> <init>
    2:32:void <init>(int) -> <init>
    33:48:void <init>(java.util.Collection) -> <init>
    1:1:boolean add(java.lang.Object) -> add
    1:2:void addFirst(java.lang.Object) -> addFirst
    1:2:void addLast(java.lang.Object) -> addLast
    1:16:void clear() -> clear
    1:16:boolean contains(java.lang.Object) -> contains
    1:1:java.util.Iterator descendingIterator() -> descendingIterator
    1:1:int drainTo(java.util.Collection) -> drainTo
    2:17:int drainTo(java.util.Collection,int) -> drainTo
    1:1:java.lang.Object element() -> element
    1:2:java.lang.Object getFirst() -> getFirst
    1:2:java.lang.Object getLast() -> getLast
    1:1:java.util.Iterator iterator() -> iterator
    1:11:boolean linkFirst(com.nostra13.dcloudimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> linkFirst
    1:11:boolean linkLast(com.nostra13.dcloudimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> linkLast
    1:1:boolean offer(java.lang.Object) -> offer
    2:2:boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offer
    1:9:boolean offerFirst(java.lang.Object) -> offerFirst
    10:29:boolean offerFirst(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerFirst
    1:9:boolean offerLast(java.lang.Object) -> offerLast
    10:29:boolean offerLast(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offerLast
    1:1:java.lang.Object peek() -> peek
    1:7:java.lang.Object peekFirst() -> peekFirst
    1:7:java.lang.Object peekLast() -> peekLast
    1:1:java.lang.Object poll() -> poll
    2:2:java.lang.Object poll(long,java.util.concurrent.TimeUnit) -> poll
    1:7:java.lang.Object pollFirst() -> pollFirst
    8:26:java.lang.Object pollFirst(long,java.util.concurrent.TimeUnit) -> pollFirst
    1:7:java.lang.Object pollLast() -> pollLast
    8:26:java.lang.Object pollLast(long,java.util.concurrent.TimeUnit) -> pollLast
    1:1:java.lang.Object pop() -> pop
    1:1:void push(java.lang.Object) -> push
    1:1:void put(java.lang.Object) -> put
    1:10:void putFirst(java.lang.Object) -> putFirst
    1:10:void putLast(java.lang.Object) -> putLast
    1:11:void readObject(java.io.ObjectInputStream) -> readObject
    1:7:int remainingCapacity() -> remainingCapacity
    1:1:java.lang.Object remove() -> remove
    2:2:boolean remove(java.lang.Object) -> remove
    1:2:java.lang.Object removeFirst() -> removeFirst
    1:22:boolean removeFirstOccurrence(java.lang.Object) -> removeFirstOccurrence
    1:2:java.lang.Object removeLast() -> removeLast
    1:22:boolean removeLastOccurrence(java.lang.Object) -> removeLastOccurrence
    1:7:int size() -> size
    1:1:java.lang.Object take() -> take
    1:10:java.lang.Object takeFirst() -> takeFirst
    1:10:java.lang.Object takeLast() -> takeLast
    1:13:java.lang.Object[] toArray() -> toArray
    14:31:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    1:36:java.lang.String toString() -> toString
    1:14:void unlink(com.nostra13.dcloudimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> unlink
    1:14:java.lang.Object unlinkFirst() -> unlinkFirst
    1:14:java.lang.Object unlinkLast() -> unlinkLast
    1:15:void writeObject(java.io.ObjectOutputStream) -> writeObject
com.nostra13.dcloudimageloader.core.assist.deque.LinkedBlockingDeque$AbstractItr -> com.nostra13.dcloudimageloader.core.assist.deque.LinkedBlockingDeque$AbstractItr:
    1:10:void <init>(com.nostra13.dcloudimageloader.core.assist.deque.LinkedBlockingDeque) -> <init>
    1:9:void advance() -> advance
    1:1:boolean hasNext() -> hasNext
    1:6:java.lang.Object next() -> next
    1:13:void remove() -> remove
    1:7:com.nostra13.dcloudimageloader.core.assist.deque.LinkedBlockingDeque$Node succ(com.nostra13.dcloudimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> succ
com.nostra13.dcloudimageloader.core.assist.deque.LinkedBlockingDeque$DescendingItr -> com.nostra13.dcloudimageloader.core.assist.deque.LinkedBlockingDeque$DescendingItr:
    1:1:void <init>(com.nostra13.dcloudimageloader.core.assist.deque.LinkedBlockingDeque) -> <init>
    2:2:void <init>(com.nostra13.dcloudimageloader.core.assist.deque.LinkedBlockingDeque,com.nostra13.dcloudimageloader.core.assist.deque.LinkedBlockingDeque$1) -> <init>
    1:1:com.nostra13.dcloudimageloader.core.assist.deque.LinkedBlockingDeque$Node firstNode() -> firstNode
    1:1:com.nostra13.dcloudimageloader.core.assist.deque.LinkedBlockingDeque$Node nextNode(com.nostra13.dcloudimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> nextNode
com.nostra13.dcloudimageloader.core.assist.deque.LinkedBlockingDeque$Itr -> com.nostra13.dcloudimageloader.core.assist.deque.LinkedBlockingDeque$Itr:
    1:1:void <init>(com.nostra13.dcloudimageloader.core.assist.deque.LinkedBlockingDeque) -> <init>
    2:2:void <init>(com.nostra13.dcloudimageloader.core.assist.deque.LinkedBlockingDeque,com.nostra13.dcloudimageloader.core.assist.deque.LinkedBlockingDeque$1) -> <init>
    1:1:com.nostra13.dcloudimageloader.core.assist.deque.LinkedBlockingDeque$Node firstNode() -> firstNode
    1:1:com.nostra13.dcloudimageloader.core.assist.deque.LinkedBlockingDeque$Node nextNode(com.nostra13.dcloudimageloader.core.assist.deque.LinkedBlockingDeque$Node) -> nextNode
com.nostra13.dcloudimageloader.core.assist.deque.LinkedBlockingDeque$Node -> com.nostra13.dcloudimageloader.core.assist.deque.LinkedBlockingDeque$Node:
    1:2:void <init>(java.lang.Object) -> <init>
com.nostra13.dcloudimageloader.core.decode.BaseImageDecoder -> com.nostra13.dcloudimageloader.core.decode.BaseImageDecoder:
    1:2:void <init>(boolean) -> <init>
    1:1:boolean canDefineExifParams(java.lang.String,java.lang.String) -> canDefineExifParams
    1:30:android.graphics.Bitmap considerExactScaleAndOrientaiton(android.graphics.Bitmap,com.nostra13.dcloudimageloader.core.decode.ImageDecodingInfo,int,boolean) -> considerExactScaleAndOrientaiton
    1:9:android.graphics.Bitmap decode(com.nostra13.dcloudimageloader.core.decode.ImageDecodingInfo) -> decode
    1:4:android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.BitmapFactory$Options) -> decodeStream
    1:28:com.nostra13.dcloudimageloader.core.decode.BaseImageDecoder$ExifInfo defineExifOrientation(java.lang.String) -> defineExifOrientation
    1:12:com.nostra13.dcloudimageloader.core.decode.BaseImageDecoder$ImageFileInfo defineImageSizeAndRotation(java.io.InputStream,com.nostra13.dcloudimageloader.core.decode.ImageDecodingInfo) -> defineImageSizeAndRotation
    1:1:java.io.InputStream getImageStream(com.nostra13.dcloudimageloader.core.decode.ImageDecodingInfo) -> getImageStream
    1:13:android.graphics.BitmapFactory$Options prepareDecodingOptions(com.nostra13.dcloudimageloader.core.assist.ImageSize,com.nostra13.dcloudimageloader.core.decode.ImageDecodingInfo) -> prepareDecodingOptions
    1:3:java.io.InputStream resetStream(java.io.InputStream,com.nostra13.dcloudimageloader.core.decode.ImageDecodingInfo) -> resetStream
com.nostra13.dcloudimageloader.core.decode.BaseImageDecoder$ExifInfo -> com.nostra13.dcloudimageloader.core.decode.BaseImageDecoder$ExifInfo:
    1:3:void <init>() -> <init>
    4:6:void <init>(int,boolean) -> <init>
com.nostra13.dcloudimageloader.core.decode.BaseImageDecoder$ImageFileInfo -> com.nostra13.dcloudimageloader.core.decode.BaseImageDecoder$ImageFileInfo:
    1:3:void <init>(com.nostra13.dcloudimageloader.core.assist.ImageSize,com.nostra13.dcloudimageloader.core.decode.BaseImageDecoder$ExifInfo) -> <init>
com.nostra13.dcloudimageloader.core.decode.ImageDecodingInfo -> com.nostra13.dcloudimageloader.core.decode.ImageDecodingInfo:
    1:11:void <init>(java.lang.String,java.lang.String,com.nostra13.dcloudimageloader.core.assist.ImageSize,com.nostra13.dcloudimageloader.core.assist.ViewScaleType,com.nostra13.dcloudimageloader.core.download.ImageDownloader,com.nostra13.dcloudimageloader.core.DisplayImageOptions) -> <init>
    1:17:void copyOptions(android.graphics.BitmapFactory$Options,android.graphics.BitmapFactory$Options) -> copyOptions
    1:1:void copyOptions10(android.graphics.BitmapFactory$Options,android.graphics.BitmapFactory$Options) -> copyOptions10
    1:2:void copyOptions11(android.graphics.BitmapFactory$Options,android.graphics.BitmapFactory$Options) -> copyOptions11
    1:1:android.graphics.BitmapFactory$Options getDecodingOptions() -> getDecodingOptions
    1:1:com.nostra13.dcloudimageloader.core.download.ImageDownloader getDownloader() -> getDownloader
    1:1:java.lang.Object getExtraForDownloader() -> getExtraForDownloader
    1:1:java.lang.String getImageKey() -> getImageKey
    1:1:com.nostra13.dcloudimageloader.core.assist.ImageScaleType getImageScaleType() -> getImageScaleType
    1:1:java.lang.String getImageUri() -> getImageUri
    1:1:com.nostra13.dcloudimageloader.core.assist.ImageSize getTargetSize() -> getTargetSize
    1:1:com.nostra13.dcloudimageloader.core.assist.ViewScaleType getViewScaleType() -> getViewScaleType
    1:1:boolean shouldConsiderExifParams() -> shouldConsiderExifParams
com.nostra13.dcloudimageloader.core.display.FadeInBitmapDisplayer -> com.nostra13.dcloudimageloader.core.display.FadeInBitmapDisplayer:
    1:1:void <init>(int) -> <init>
    2:6:void <init>(int,boolean,boolean,boolean) -> <init>
    1:4:void animate(android.view.View,int) -> animate
    1:3:android.graphics.Bitmap display(android.graphics.Bitmap,com.nostra13.dcloudimageloader.core.imageaware.ImageAware,com.nostra13.dcloudimageloader.core.assist.LoadedFrom) -> display
com.nostra13.dcloudimageloader.core.display.RoundedBitmapDisplayer -> com.nostra13.dcloudimageloader.core.display.RoundedBitmapDisplayer:
    1:2:void <init>(int) -> <init>
    1:6:android.graphics.Bitmap display(android.graphics.Bitmap,com.nostra13.dcloudimageloader.core.imageaware.ImageAware,com.nostra13.dcloudimageloader.core.assist.LoadedFrom) -> display
    1:10:android.graphics.Bitmap getRoundedCornerBitmap(android.graphics.Bitmap,int,android.graphics.Rect,android.graphics.Rect,int,int) -> getRoundedCornerBitmap
    1:191:android.graphics.Bitmap roundCorners(android.graphics.Bitmap,com.nostra13.dcloudimageloader.core.imageaware.ImageViewAware,int) -> roundCorners
com.nostra13.dcloudimageloader.core.display.SimpleBitmapDisplayer -> com.nostra13.dcloudimageloader.core.display.SimpleBitmapDisplayer:
    1:1:void <init>() -> <init>
    1:1:android.graphics.Bitmap display(android.graphics.Bitmap,com.nostra13.dcloudimageloader.core.imageaware.ImageAware,com.nostra13.dcloudimageloader.core.assist.LoadedFrom) -> display
com.nostra13.dcloudimageloader.core.download.BaseImageDownloader -> com.nostra13.dcloudimageloader.core.download.BaseImageDownloader:
    1:4:void <init>(android.content.Context) -> <init>
    5:8:void <init>(android.content.Context,int,int) -> <init>
    1:9:java.net.HttpURLConnection createConnection(java.lang.String,java.lang.Object) -> createConnection
    1:20:java.io.InputStream getStream(java.lang.String,java.lang.Object) -> getStream
    1:2:java.io.InputStream getStreamFromAssets(java.lang.String,java.lang.Object) -> getStreamFromAssets
    1:3:java.io.InputStream getStreamFromContent(java.lang.String,java.lang.Object) -> getStreamFromContent
    1:7:java.io.InputStream getStreamFromDrawable(java.lang.String,java.lang.Object) -> getStreamFromDrawable
    1:2:java.io.InputStream getStreamFromFile(java.lang.String,java.lang.Object) -> getStreamFromFile
    1:7:java.io.InputStream getStreamFromNetwork(java.lang.String,java.lang.Object) -> getStreamFromNetwork
    1:1:java.io.InputStream getStreamFromOtherSource(java.lang.String,java.lang.Object) -> getStreamFromOtherSource
    1:1:java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]) -> newInstance
    1:11:void trustAllHosts(javax.net.ssl.HttpsURLConnection) -> trustAllHosts
com.nostra13.dcloudimageloader.core.download.BaseImageDownloader$1 -> com.nostra13.dcloudimageloader.core.download.BaseImageDownloader$1:
    1:1:void <clinit>() -> <clinit>
com.nostra13.dcloudimageloader.core.download.ImageDownloader$Scheme -> com.nostra13.dcloudimageloader.core.download.ImageDownloader$Scheme:
    1:8:void <clinit>() -> <clinit>
    1:3:void <init>(java.lang.String,int,java.lang.String) -> <init>
    1:1:boolean belongsTo(java.lang.String) -> belongsTo
    1:5:java.lang.String crop(java.lang.String) -> crop
    1:12:com.nostra13.dcloudimageloader.core.download.ImageDownloader$Scheme ofUri(java.lang.String) -> ofUri
    1:1:com.nostra13.dcloudimageloader.core.download.ImageDownloader$Scheme valueOf(java.lang.String) -> valueOf
    1:1:com.nostra13.dcloudimageloader.core.download.ImageDownloader$Scheme[] values() -> values
    1:1:java.lang.String wrap(java.lang.String) -> wrap
com.nostra13.dcloudimageloader.core.download.NetworkDeniedImageDownloader -> com.nostra13.dcloudimageloader.core.download.NetworkDeniedImageDownloader:
    1:2:void <init>(com.nostra13.dcloudimageloader.core.download.ImageDownloader) -> <init>
    1:7:java.io.InputStream getStream(java.lang.String,java.lang.Object) -> getStream
com.nostra13.dcloudimageloader.core.download.SlowNetworkImageDownloader -> com.nostra13.dcloudimageloader.core.download.SlowNetworkImageDownloader:
    1:2:void <init>(com.nostra13.dcloudimageloader.core.download.ImageDownloader) -> <init>
    1:5:java.io.InputStream getStream(java.lang.String,java.lang.Object) -> getStream
com.nostra13.dcloudimageloader.core.imageaware.ImageNonViewAware -> com.nostra13.dcloudimageloader.core.imageaware.ImageNonViewAware:
    1:3:void <init>(com.nostra13.dcloudimageloader.core.assist.ImageSize,com.nostra13.dcloudimageloader.core.assist.ViewScaleType) -> <init>
    1:1:int getHeight() -> getHeight
    1:1:int getId() -> getId
    1:1:com.nostra13.dcloudimageloader.core.assist.ViewScaleType getScaleType() -> getScaleType
    1:1:int getWidth() -> getWidth
com.nostra13.dcloudimageloader.core.imageaware.ImageViewAware -> com.nostra13.dcloudimageloader.core.imageaware.ImageViewAware:
    1:1:void <init>(android.widget.ImageView) -> <init>
    2:4:void <init>(android.widget.ImageView,boolean) -> <init>
    1:17:int getHeight() -> getHeight
    1:2:int getId() -> getId
    1:2:com.nostra13.dcloudimageloader.core.assist.ViewScaleType getScaleType() -> getScaleType
    1:17:int getWidth() -> getWidth
    1:1:android.view.View getWrappedView() -> getWrappedView
    2:2:android.widget.ImageView getWrappedView() -> getWrappedView
    1:1:boolean isCollected() -> isCollected
    1:3:boolean setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    1:3:boolean setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
com.nostra13.dcloudimageloader.utils.ImageSizeUtils -> com.nostra13.dcloudimageloader.utils.ImageSizeUtils:
    1:4:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:54:int computeImageSampleSize(com.nostra13.dcloudimageloader.core.assist.ImageSize,com.nostra13.dcloudimageloader.core.assist.ImageSize,com.nostra13.dcloudimageloader.core.assist.ViewScaleType,boolean) -> computeImageSampleSize
    1:11:float computeImageScale(com.nostra13.dcloudimageloader.core.assist.ImageSize,com.nostra13.dcloudimageloader.core.assist.ImageSize,com.nostra13.dcloudimageloader.core.assist.ViewScaleType,boolean) -> computeImageScale
    1:9:int computeMinImageSampleSize(com.nostra13.dcloudimageloader.core.assist.ImageSize) -> computeMinImageSampleSize
    1:3:int considerMaxTextureSize(int,int,int,boolean) -> considerMaxTextureSize
    1:15:com.nostra13.dcloudimageloader.core.assist.ImageSize defineTargetSizeForView(com.nostra13.dcloudimageloader.core.imageaware.ImageAware,com.nostra13.dcloudimageloader.core.assist.ImageSize) -> defineTargetSizeForView
com.nostra13.dcloudimageloader.utils.ImageSizeUtils$1 -> com.nostra13.dcloudimageloader.utils.ImageSizeUtils$1:
    1:1:void <clinit>() -> <clinit>
com.nostra13.dcloudimageloader.utils.IoUtils -> com.nostra13.dcloudimageloader.utils.IoUtils:
    1:1:void <init>() -> <init>
    1:1:void closeSilently(java.io.Closeable) -> closeSilently
    1:9:void copyStream(java.io.InputStream,java.io.OutputStream) -> copyStream
com.nostra13.dcloudimageloader.utils.L -> com.nostra13.dcloudimageloader.utils.L:
    1:1:void <init>() -> <init>
    1:1:void d(java.lang.String,java.lang.Object[]) -> d
    1:1:void disableLogging() -> disableLogging
    1:1:void e(java.lang.Throwable) -> e
    2:2:void e(java.lang.String,java.lang.Object[]) -> e
    3:3:void e(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> e
    1:1:void enableLogging() -> enableLogging
    1:1:void i(java.lang.String,java.lang.Object[]) -> i
    1:15:void log(int,java.lang.Throwable,java.lang.String,java.lang.Object[]) -> log
    1:1:void w(java.lang.String,java.lang.Object[]) -> w
com.nostra13.dcloudimageloader.utils.StorageUtils -> com.nostra13.dcloudimageloader.utils.StorageUtils:
    1:1:void <init>() -> <init>
    1:1:java.io.File getCacheDirectory(android.content.Context) -> getCacheDirectory
    2:13:java.io.File getCacheDirectory(android.content.Context,boolean) -> getCacheDirectory
    1:12:java.io.File getExternalCacheDir(android.content.Context) -> getExternalCacheDir
    1:3:java.io.File getIndividualCacheDirectory(android.content.Context) -> getIndividualCacheDirectory
    1:6:java.io.File getOwnCacheDirectory(android.content.Context,java.lang.String) -> getOwnCacheDirectory
    1:1:boolean hasExternalStoragePermission(android.content.Context) -> hasExternalStoragePermission
com.taobao.weex.BuildConfig -> com.taobao.weex.BuildConfig:
    6:6:void <init>() -> <init>
com.taobao.weex.InitConfig -> com.taobao.weex.InitConfig:
    41:41:void <init>(com.taobao.weex.InitConfig$1) -> <init>
    125:126:void <init>() -> <init>
    41:41:com.taobao.weex.adapter.IWXJSExceptionAdapter access$1002(com.taobao.weex.InitConfig,com.taobao.weex.adapter.IWXJSExceptionAdapter) -> access$1002
    41:41:com.taobao.weex.adapter.IWXHttpAdapter access$102(com.taobao.weex.InitConfig,com.taobao.weex.adapter.IWXHttpAdapter) -> access$102
    41:41:com.taobao.weex.adapter.ClassLoaderAdapter access$1102(com.taobao.weex.InitConfig,com.taobao.weex.adapter.ClassLoaderAdapter) -> access$1102
    41:41:com.taobao.weex.performance.IApmGenerator access$1202(com.taobao.weex.InitConfig,com.taobao.weex.performance.IApmGenerator) -> access$1202
    41:41:com.taobao.weex.adapter.IWXJsFileLoaderAdapter access$1302(com.taobao.weex.InitConfig,com.taobao.weex.adapter.IWXJsFileLoaderAdapter) -> access$1302
    41:41:com.taobao.weex.adapter.IWXJscProcessManager access$1402(com.taobao.weex.InitConfig,com.taobao.weex.adapter.IWXJscProcessManager) -> access$1402
    41:41:java.util.List access$1502(com.taobao.weex.InitConfig,java.util.List) -> access$1502
    41:41:com.taobao.weex.adapter.IWXImgLoaderAdapter access$202(com.taobao.weex.InitConfig,com.taobao.weex.adapter.IWXImgLoaderAdapter) -> access$202
    41:41:com.taobao.weex.adapter.IDrawableLoader access$302(com.taobao.weex.InitConfig,com.taobao.weex.adapter.IDrawableLoader) -> access$302
    41:41:com.taobao.weex.adapter.IWXUserTrackAdapter access$402(com.taobao.weex.InitConfig,com.taobao.weex.adapter.IWXUserTrackAdapter) -> access$402
    41:41:com.taobao.weex.appfram.storage.IWXStorageAdapter access$502(com.taobao.weex.InitConfig,com.taobao.weex.appfram.storage.IWXStorageAdapter) -> access$502
    41:41:com.taobao.weex.adapter.IWXSoLoaderAdapter access$602(com.taobao.weex.InitConfig,com.taobao.weex.adapter.IWXSoLoaderAdapter) -> access$602
    41:41:java.lang.String access$702(com.taobao.weex.InitConfig,java.lang.String) -> access$702
    41:41:com.taobao.weex.adapter.URIAdapter access$802(com.taobao.weex.InitConfig,com.taobao.weex.adapter.URIAdapter) -> access$802
    41:41:com.taobao.weex.appfram.websocket.IWebSocketAdapterFactory access$902(com.taobao.weex.InitConfig,com.taobao.weex.appfram.websocket.IWebSocketAdapterFactory) -> access$902
    99:99:com.taobao.weex.performance.IApmGenerator getApmGenerater() -> getApmGenerater
    95:95:com.taobao.weex.adapter.ClassLoaderAdapter getClassLoaderAdapter() -> getClassLoaderAdapter
    67:67:com.taobao.weex.adapter.IDrawableLoader getDrawableLoader() -> getDrawableLoader
    79:79:java.lang.String getFramework() -> getFramework
    59:59:com.taobao.weex.adapter.IWXHttpAdapter getHttpAdapter() -> getHttpAdapter
    75:75:com.taobao.weex.adapter.IWXSoLoaderAdapter getIWXSoLoaderAdapter() -> getIWXSoLoaderAdapter
    63:63:com.taobao.weex.adapter.IWXImgLoaderAdapter getImgAdapter() -> getImgAdapter
    112:112:com.taobao.weex.adapter.IWXJSExceptionAdapter getJSExceptionAdapter() -> getJSExceptionAdapter
    103:103:com.taobao.weex.adapter.IWXJsFileLoaderAdapter getJsFileLoaderAdapter() -> getJsFileLoaderAdapter
    115:115:com.taobao.weex.adapter.IWXJscProcessManager getJscProcessManager() -> getJscProcessManager
    119:122:java.lang.Iterable getNativeLibraryList() -> getNativeLibraryList
    83:83:com.taobao.weex.appfram.storage.IWXStorageAdapter getStorageAdapter() -> getStorageAdapter
    87:87:com.taobao.weex.adapter.URIAdapter getURIAdapter() -> getURIAdapter
    71:71:com.taobao.weex.adapter.IWXUserTrackAdapter getUtAdapter() -> getUtAdapter
    91:91:com.taobao.weex.appfram.websocket.IWebSocketAdapterFactory getWebSocketAdapterFactory() -> getWebSocketAdapterFactory
    107:108:com.taobao.weex.InitConfig setClassLoaderAdapter(com.taobao.weex.adapter.ClassLoaderAdapter) -> setClassLoaderAdapter
com.taobao.weex.InitConfig$Builder -> com.taobao.weex.InitConfig$Builder:
    142:157:void <init>() -> <init>
    225:226:com.taobao.weex.InitConfig$Builder addNativeLibrary(java.lang.String) -> addNativeLibrary
    230:246:com.taobao.weex.InitConfig build() -> build
    145:145:com.taobao.weex.adapter.IWXJscProcessManager getJscProcessManager() -> getJscProcessManager
    215:216:com.taobao.weex.InitConfig$Builder setApmGenerater(com.taobao.weex.performance.IApmGenerator) -> setApmGenerater
    210:211:com.taobao.weex.InitConfig$Builder setClassLoaderAdapter(com.taobao.weex.adapter.ClassLoaderAdapter) -> setClassLoaderAdapter
    170:171:com.taobao.weex.InitConfig$Builder setDrawableLoader(com.taobao.weex.adapter.IDrawableLoader) -> setDrawableLoader
    200:201:com.taobao.weex.InitConfig$Builder setFramework(java.lang.String) -> setFramework
    160:161:com.taobao.weex.InitConfig$Builder setHttpAdapter(com.taobao.weex.adapter.IWXHttpAdapter) -> setHttpAdapter
    165:166:com.taobao.weex.InitConfig$Builder setImgAdapter(com.taobao.weex.adapter.IWXImgLoaderAdapter) -> setImgAdapter
    190:191:com.taobao.weex.InitConfig$Builder setJSExceptionAdapter(com.taobao.weex.adapter.IWXJSExceptionAdapter) -> setJSExceptionAdapter
    220:221:com.taobao.weex.InitConfig$Builder setJsFileLoaderAdapter(com.taobao.weex.adapter.IWXJsFileLoaderAdapter) -> setJsFileLoaderAdapter
    149:150:com.taobao.weex.InitConfig$Builder setJscProcessManager(com.taobao.weex.adapter.IWXJscProcessManager) -> setJscProcessManager
    195:196:com.taobao.weex.InitConfig$Builder setSoLoader(com.taobao.weex.adapter.IWXSoLoaderAdapter) -> setSoLoader
    180:181:com.taobao.weex.InitConfig$Builder setStorageAdapter(com.taobao.weex.appfram.storage.IWXStorageAdapter) -> setStorageAdapter
    185:186:com.taobao.weex.InitConfig$Builder setURIAdapter(com.taobao.weex.adapter.URIAdapter) -> setURIAdapter
    175:176:com.taobao.weex.InitConfig$Builder setUtAdapter(com.taobao.weex.adapter.IWXUserTrackAdapter) -> setUtAdapter
    205:206:com.taobao.weex.InitConfig$Builder setWebSocketAdapterFactory(com.taobao.weex.appfram.websocket.IWebSocketAdapterFactory) -> setWebSocketAdapterFactory
com.taobao.weex.RenderContainer -> com.taobao.weex.RenderContainer:
    38:40:void <init>(android.content.Context) -> <init>
    43:45:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    48:50:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    54:56:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    91:94:void OnVSync() -> OnVSync
    77:87:void dispatchWindowVisibilityChanged(int) -> dispatchWindowVisibilityChanged
    62:66:void onAttachedToWindow() -> onAttachedToWindow
    70:74:void onDetachedFromWindow() -> onDetachedFromWindow
com.taobao.weex.Script -> com.taobao.weex.Script:
    27:29:void <init>(java.lang.String) -> <init>
    31:33:void <init>(byte[]) -> <init>
    40:40:byte[] getBinary() -> getBinary
    36:36:java.lang.String getContent() -> getContent
    53:53:boolean isEmpty() -> isEmpty
    44:49:int length() -> length
com.taobao.weex.WXEnvironment -> com.taobao.weex.WXEnvironment:
    64:207:void <clinit>() -> <clinit>
    61:61:void <init>() -> <init>
    293:294:void addCustomOptions(java.lang.String,java.lang.String) -> addCustomOptions
    304:330:java.lang.String copySoDesDir() -> copySoDesDir
    539:571:boolean extractSo() -> extractSo
    575:601:java.lang.String findIcuPath() -> findIcuPath
    606:644:java.lang.String findSoPath(java.lang.String) -> findSoPath
    272:278:java.lang.String getAppCacheFile() -> getAppCacheFile
    254:264:java.lang.String getAppVersionName() -> getAppVersionName
    440:440:android.app.Application getApplication() -> getApplication
    532:535:java.lang.String getCacheDir() -> getCacheDir
    214:247:java.util.Map getConfig() -> getConfig
    485:495:java.lang.String getCrashFilePath(android.content.Context) -> getCrashFilePath
    289:289:java.util.Map getCustomOptions() -> getCustomOptions
    297:297:java.lang.String getCustomOptions(java.lang.String) -> getCustomOptions
    183:188:java.lang.String getDefaultSettingValue(java.lang.String,java.lang.String) -> getDefaultSettingValue
    427:436:java.lang.String getDevId() -> getDevId
    450:464:java.lang.String getDiskCacheDir(android.content.Context) -> getDiskCacheDir
    468:481:java.lang.String getFilesDir(android.content.Context) -> getFilesDir
    499:499:java.lang.String getGlobalFontFamilyName() -> getGlobalFontFamilyName
    649:649:java.lang.String getLibJScRealPath() -> getLibJScRealPath
    673:677:java.lang.String getLibJssIcuPath() -> getLibJssIcuPath
    659:669:java.lang.String getLibJssRealPath() -> getLibJssRealPath
    681:708:java.lang.String getLibLdPath() -> getLibLdPath
    162:162:float getViewProt() -> getViewProt
    176:180:com.taobao.weex.WXEnvironment$WXDefaultSettings getWXDefaultSettings() -> getWXDefaultSettings
    444:447:void initMetrics() -> initMetrics
    382:382:boolean isApkDebugable() -> isApkDebugable
    386:418:boolean isApkDebugable(android.app.Application) -> isApkDebugable
    371:378:boolean isCPUSupport() -> isCPUSupport
    360:363:boolean isHardwareSupport() -> isHardwareSupport
    348:351:boolean isLayoutDirectionRTL() -> isLayoutDirectionRTL
    517:517:boolean isOpenDebugLog() -> isOpenDebugLog
    422:422:boolean isPerf() -> isPerf
    339:343:boolean isSupport() -> isSupport
    525:529:void setApkDebugable(boolean) -> setApkDebugable
    503:514:void setGlobalFontFamily(java.lang.String,android.graphics.Typeface) -> setGlobalFontFamily
    521:522:void setOpenDebugLog(boolean) -> setOpenDebugLog
    166:167:void setViewProt(float) -> setViewProt
    191:199:void writeDefaultSettingsValue(java.lang.String,java.lang.String) -> writeDefaultSettingsValue
com.taobao.weex.WXEnvironment$WXDefaultSettings -> com.taobao.weex.WXEnvironment$WXDefaultSettings:
    712:718:void <init>(android.app.Application) -> <init>
    720:728:java.lang.String getValue(java.lang.String,java.lang.String) -> getValue
    731:741:void saveValue(java.lang.String,java.lang.String) -> saveValue
com.taobao.weex.WXGlobalEventModule -> com.taobao.weex.WXGlobalEventModule:
    29:29:void <init>() -> <init>
    34:35:void addEventListener(java.lang.String,java.lang.String) -> addEventListener
    49:51:void addEventListener(java.lang.String,java.lang.String,java.util.Map) -> addEventListener
    38:39:void removeEventListener(java.lang.String,java.lang.String) -> removeEventListener
    43:44:void removeEventListener(java.lang.String) -> removeEventListener
com.taobao.weex.WXGlobalEventReceiver -> com.taobao.weex.WXGlobalEventReceiver:
    38:39:void <init>() -> <init>
    41:43:void <init>(com.taobao.weex.WXSDKInstance) -> <init>
    47:56:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.taobao.weex.WXHttpListener -> com.taobao.weex.WXHttpListener:
    54:79:void <init>(com.taobao.weex.WXSDKInstance) -> <init>
    82:85:void <init>(com.taobao.weex.WXSDKInstance,java.lang.String) -> <init>
    88:95:void <init>(com.taobao.weex.WXSDKInstance,java.lang.String,java.util.Map,java.lang.String,com.taobao.weex.common.WXRenderStrategy,long) -> <init>
    248:284:void didHttpFinish(com.taobao.weex.common.WXResponse) -> didHttpFinish
    102:102:com.taobao.weex.WXSDKInstance getInstance() -> getInstance
    288:290:boolean isNet(java.lang.String) -> isNet
    304:304:void onFail(com.taobao.weex.common.WXResponse) -> onFail
    118:128:void onHeadersReceived(int,java.util.Map) -> onHeadersReceived
    142:233:void onHttpFinish(com.taobao.weex.common.WXResponse) -> onHttpFinish
    137:138:void onHttpResponseProgress(int) -> onHttpResponseProgress
    107:114:void onHttpStart() -> onHttpStart
    133:133:void onHttpUploadProgress(int) -> onHttpUploadProgress
    236:245:void onInstanceReady() -> onInstanceReady
    294:300:void onSuccess(com.taobao.weex.common.WXResponse) -> onSuccess
    98:99:void setSDKInstance(com.taobao.weex.WXSDKInstance) -> setSDKInstance
com.taobao.weex.WXSDKEngine -> com.taobao.weex.WXSDKEngine:
    115:117:void <clinit>() -> <clinit>
    111:111:void <init>() -> <init>
    111:111:boolean access$000() -> access$000
    111:111:boolean access$002(boolean) -> access$002
    539:540:void addCustomOptions(java.lang.String,java.lang.String) -> addCustomOptions
    511:512:void callback(java.lang.String,java.lang.String,java.util.Map) -> callback
    209:256:void doInitInternal(android.app.Application,com.taobao.weex.InitConfig) -> doInitInternal
    568:568:com.taobao.weex.appfram.navigator.IActivityNavBarSetter getActivityNavBarSetter() -> getActivityNavBarSetter
    551:551:com.taobao.weex.adapter.IDrawableLoader getDrawableLoader() -> getDrawableLoader
    555:555:com.taobao.weex.adapter.IWXHttpAdapter getIWXHttpAdapter() -> getIWXHttpAdapter
    547:547:com.taobao.weex.adapter.IWXImgLoaderAdapter getIWXImgLoaderAdapter() -> getIWXImgLoaderAdapter
    564:564:com.taobao.weex.adapter.IWXJsFileLoaderAdapter getIWXJsFileLoaderAdapter() -> getIWXJsFileLoaderAdapter
    559:559:com.taobao.weex.appfram.storage.IWXStorageAdapter getIWXStorageAdapter() -> getIWXStorageAdapter
    543:543:com.taobao.weex.adapter.IWXUserTrackAdapter getIWXUserTrackAdapter() -> getIWXUserTrackAdapter
    572:572:com.taobao.weex.appfram.navigator.INavigator getNavigator() -> getNavigator
    125:126:void init(android.app.Application) -> init
    133:134:void init(android.app.Application,com.taobao.weex.adapter.IWXUserTrackAdapter) -> init
    141:146:void init(android.app.Application,com.taobao.weex.adapter.IWXUserTrackAdapter,java.lang.String) -> init
    260:267:void init(android.app.Application,java.lang.String,com.taobao.weex.adapter.IWXUserTrackAdapter,com.taobao.weex.adapter.IWXImgLoaderAdapter,com.taobao.weex.adapter.IWXHttpAdapter) -> init
    168:188:void initialize(android.app.Application,com.taobao.weex.InitConfig) -> initialize
    150:153:boolean isInitialized() -> isInitialized
    157:159:boolean isSoInitialized() -> isSoInitialized
    274:398:void register() -> register
    192:206:void registerApplicationOptions(android.app.Application) -> registerApplicationOptions
    410:410:boolean registerComponent(java.lang.String,java.lang.Class,boolean) -> registerComponent
    414:414:boolean registerComponent(java.lang.String,com.taobao.weex.ui.IExternalComponentGetter,boolean) -> registerComponent
    427:431:boolean registerComponent(java.lang.Class,boolean,java.lang.String[]) -> registerComponent
    436:448:boolean registerComponent(com.taobao.weex.ui.IFComponentHolder,boolean,java.lang.String[]) -> registerComponent
    524:524:boolean registerComponent(java.lang.String,java.lang.Class) -> registerComponent
    528:535:boolean registerComponent(java.util.Map,java.lang.Class) -> registerComponent
    617:618:void registerCoreEnv(java.lang.String,java.lang.String) -> registerCoreEnv
    462:462:boolean registerModule(java.lang.String,java.lang.Class,boolean) -> registerModule
    484:484:boolean registerModule(java.lang.String,com.taobao.weex.bridge.ModuleFactory,boolean) -> registerModule
    488:488:boolean registerModule(java.lang.String,java.lang.Class) -> registerModule
    475:475:boolean registerModuleWithFactory(java.lang.String,com.taobao.weex.WXSDKEngine$DestroyableModuleFactory,boolean) -> registerModuleWithFactory
    480:480:boolean registerModuleWithFactory(java.lang.String,com.taobao.weex.ui.IExternalModuleGetter,boolean) -> registerModuleWithFactory
    492:492:boolean registerService(java.lang.String,java.lang.String,java.util.Map) -> registerService
    584:597:void reload(android.content.Context,java.lang.String,boolean) -> reload
    599:600:void reload(android.content.Context,boolean) -> reload
    603:604:void reload() -> reload
    519:521:void restartBridge(boolean) -> restartBridge
    607:614:void restartWeex() -> restartWeex
    580:581:void setActivityNavBarSetter(com.taobao.weex.appfram.navigator.IActivityNavBarSetter) -> setActivityNavBarSetter
    270:271:void setJSExcetptionAdapter(com.taobao.weex.adapter.IWXJSExceptionAdapter) -> setJSExcetptionAdapter
    576:577:void setNavigator(com.taobao.weex.appfram.navigator.INavigator) -> setNavigator
    496:496:boolean unRegisterService(java.lang.String) -> unRegisterService
com.taobao.weex.WXSDKEngine$1 -> com.taobao.weex.WXSDKEngine$1:
    220:220:void <init>(com.taobao.weex.InitConfig,android.app.Application) -> <init>
    223:253:void run() -> run
com.taobao.weex.WXSDKEngine$2 -> com.taobao.weex.WXSDKEngine$2:
    591:591:void <init>(android.content.Context) -> <init>
    594:595:void run() -> run
com.taobao.weex.WXSDKEngine$DestroyableModule -> com.taobao.weex.WXSDKEngine$DestroyableModule:
    502:502:void <init>() -> <init>
com.taobao.weex.WXSDKEngine$DestroyableModuleFactory -> com.taobao.weex.WXSDKEngine$DestroyableModuleFactory:
    506:507:void <init>(java.lang.Class) -> <init>
com.taobao.weex.WXSDKInstance -> com.taobao.weex.WXSDKInstance:
    123:2053:void <clinit>() -> <clinit>
    127:2458:void <init>(android.content.Context) -> <init>
    127:2458:void <init>() -> <init>
    127:2458:void <init>(android.content.Context,java.lang.String) -> <init>
    2347:2356:void OnVSync() -> OnVSync
    116:116:void access$000(com.taobao.weex.WXSDKInstance) -> access$000
    116:116:boolean access$100(com.taobao.weex.WXSDKInstance) -> access$100
    116:116:boolean access$200(com.taobao.weex.WXSDKInstance) -> access$200
    116:116:boolean access$300(com.taobao.weex.WXSDKInstance) -> access$300
    116:116:boolean access$400(com.taobao.weex.WXSDKInstance) -> access$400
    116:116:java.lang.String access$500(com.taobao.weex.WXSDKInstance) -> access$500
    116:116:boolean access$602(com.taobao.weex.WXSDKInstance,boolean) -> access$602
    116:116:com.taobao.weex.IWXRenderListener access$700(com.taobao.weex.WXSDKInstance) -> access$700
    116:116:com.taobao.weex.IWXStatisticsListener access$800(com.taobao.weex.WXSDKInstance) -> access$800
    116:116:java.util.Map access$900(com.taobao.weex.WXSDKInstance) -> access$900
    2359:2360:void addContentBoxMeasurement(long,com.taobao.weex.layout.ContentBoxMeasurement) -> addContentBoxMeasurement
    2146:2155:void addEventListener(java.lang.String,java.lang.String) -> addEventListener
    2426:2429:void addFrameViewEventListener(com.taobao.weex.WXSDKInstance$FrameViewEventListener) -> addFrameViewEventListener
    348:349:void addInActiveAddElementAction(java.lang.String,com.taobao.weex.ui.action.GraphicActionAddElement) -> addInActiveAddElementAction
    2385:2391:void addInstanceOnFireEventInterceptor(com.taobao.weex.instance.InstanceOnFireEventInterceptor) -> addInstanceOnFireEventInterceptor
    236:239:void addLayerOverFlowListener(java.lang.String) -> addLayerOverFlowListener
    576:577:void addOnInstanceVisibleListener(com.taobao.weex.WXSDKInstance$OnInstanceVisibleListener) -> addOnInstanceVisibleListener
    2231:2235:void addUserTrackParameter(java.lang.String,java.io.Serializable) -> addUserTrackParameter
    1133:1136:java.lang.String assembleFilePath(android.net.Uri) -> assembleFilePath
    1787:1788:void callActionAddElementTime(long) -> callActionAddElementTime
    1769:1773:void callJsTime(long) -> callJsTime
    2209:2215:boolean checkModuleEventRegistered(java.lang.String,com.taobao.weex.common.WXModule) -> checkModuleEventRegistered
    957:975:void checkWhiteScreen() -> checkWhiteScreen
    2238:2241:void clearUserTrackParameters() -> clearUserTrackParameters
    571:573:void createInstanceFuncHeartBeat() -> createInstanceFuncHeartBeat
    549:556:com.taobao.weex.WXSDKInstance createNestedInstance(com.taobao.weex.ui.component.NestedContainer) -> createNestedInstance
    1841:1922:void destroy() -> destroy
    1822:1839:void destroyView(android.view.View) -> destroyView
    427:428:void enableLayerType(boolean) -> enableLayerType
    766:775:void ensureRenderArchor() -> ensureRenderArchor
    2113:2114:void fireEvent(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List) -> fireEvent
    2117:2123:void fireEvent(java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,com.taobao.weex.bridge.EventResult) -> fireEvent
    2134:2135:void fireEvent(java.lang.String,java.lang.String,java.util.Map,java.util.Map) -> fireEvent
    2138:2139:void fireEvent(java.lang.String,java.lang.String,java.util.Map) -> fireEvent
    2142:2143:void fireEvent(java.lang.String,java.lang.String) -> fireEvent
    2097:2103:void fireGlobalEventCallback(java.lang.String,java.util.Map) -> fireGlobalEventCallback
    2180:2200:void fireModuleEvent(java.lang.String,com.taobao.weex.common.WXModule,java.util.Map) -> fireModuleEvent
    1762:1766:void firstScreenCreateInstanceTime(long) -> firstScreenCreateInstanceTime
    2223:2223:com.taobao.weex.performance.WXInstanceApm getApmForInstance() -> getApmForInstance
    1932:1932:java.lang.String getBundleUrl() -> getBundleUrl
    627:627:com.taobao.weex.ComponentObserver getComponentObserver() -> getComponentObserver
    223:223:java.util.List getComponentsExceedGPULimit() -> getComponentsExceedGPULimit
    671:671:java.util.Map getContainerInfo() -> getContainerInfo
    1942:1942:android.view.View getContainerView() -> getContainerView
    2363:2363:com.taobao.weex.layout.ContentBoxMeasurement getContentBoxMeasurement(long) -> getContentBoxMeasurement
    1213:1213:android.content.Context getContext() -> getContext
    297:297:com.taobao.weex.WXSDKInstance$CustomFontNetworkHandler getCustomFontNetworkHandler() -> getCustomFontNetworkHandler
    2412:2412:int getDefaultFontSize() -> getDefaultFontSize
    1230:1230:com.taobao.weex.adapter.IDrawableLoader getDrawableLoader() -> getDrawableLoader
    433:433:com.taobao.weex.ui.flat.FlatGUIContext getFlatUIContext() -> getFlatUIContext
    281:281:com.taobao.weex.WXSDKInstance$ImageNetworkHandler getImageNetworkHandler() -> getImageNetworkHandler
    1226:1226:com.taobao.weex.adapter.IWXImgLoaderAdapter getImgLoaderAdapter() -> getImgLoaderAdapter
    360:360:com.taobao.weex.ui.action.GraphicActionAddElement getInActiveAddElementAction(java.lang.String) -> getInActiveAddElementAction
    1209:1209:java.lang.String getInstanceId() -> getInstanceId
    2377:2380:java.util.List getInstanceOnFireEventInterceptorList() -> getInstanceOnFireEventInterceptorList
    503:503:int getInstanceViewPortWidth() -> getInstanceViewPortWidth
    499:499:float getInstanceViewPortWidthWithFloat() -> getInstanceViewPortWidthWithFloat
    232:232:java.util.List getLayerOverFlowListeners() -> getLayerOverFlowListeners
    2250:2250:int getMaxDeepLayer() -> getMaxDeepLayer
    338:338:int getMaxHiddenEmbedsNum() -> getMaxHiddenEmbedsNum
    631:631:com.taobao.weex.bridge.NativeInvokeHelper getNativeInvokeHelper() -> getNativeInvokeHelper
    1813:1813:com.taobao.weex.WXSDKInstance getParentInstance() -> getParentInstance
    1987:1990:int getRenderContainerPaddingLeft() -> getRenderContainerPaddingLeft
    1994:1997:int getRenderContainerPaddingRight() -> getRenderContainerPaddingRight
    2001:2004:int getRenderContainerPaddingTop() -> getRenderContainerPaddingTop
    1201:1201:com.taobao.weex.common.WXRenderStrategy getRenderStrategy() -> getRenderStrategy
    2394:2394:java.lang.String getRenderType() -> getRenderType
    541:541:com.taobao.weex.ui.component.WXComponent getRootComponent() -> getRootComponent
    1936:1938:android.view.View getRootView() -> getRootView
    642:642:android.widget.ScrollView getScrollView() -> getScrollView
    659:659:com.taobao.weex.ui.view.WXScrollView$WXScrollViewListener getScrollViewListener() -> getScrollViewListener
    289:289:com.taobao.weex.WXSDKInstance$StreamNetworkHandler getStreamNetworkHandler() -> getStreamNetworkHandler
    2332:2335:java.lang.String getTemplate() -> getTemplate
    2278:2299:java.lang.String getTemplateInfo() -> getTemplateInfo
    1205:1205:android.content.Context getUIContext() -> getUIContext
    1234:1234:com.taobao.weex.adapter.URIAdapter getURIAdapter() -> getURIAdapter
    2227:2227:java.util.Map getUserTrackParams() -> getUserTrackParams
    1242:1242:com.taobao.weex.adapter.IWXHttpAdapter getWXHttpAdapter() -> getWXHttpAdapter
    2219:2219:com.taobao.weex.common.WXPerformance getWXPerformance() -> getWXPerformance
    2008:2008:java.util.List getWXScrollListeners() -> getWXScrollListeners
    1246:1246:com.taobao.weex.IWXStatisticsListener getWXStatisticsListener() -> getWXStatisticsListener
    1251:1251:com.taobao.weex.appfram.websocket.IWebSocketAdapter getWXWebSocketAdapter() -> getWXWebSocketAdapter
    1217:1217:int getWeexHeight() -> getWeexHeight
    1221:1221:int getWeexWidth() -> getWeexWidth
    584:613:void init(android.content.Context) -> init
    491:491:boolean isAutoAdjustDeviceWidth() -> isAutoAdjustDeviceWidth
    508:508:boolean isCompilerWithUniapp() -> isCompilerWithUniapp
    2308:2328:boolean isContentMd5Match() -> isContentMd5Match
    983:983:boolean isDataRender() -> isDataRender
    1925:1925:boolean isDestroy() -> isDestroy
    2402:2407:boolean isDisableSkipFrameworkInDataRender() -> isDisableSkipFrameworkInDataRender
    2438:2438:boolean isFrameViewShow() -> isFrameViewShow
    452:452:boolean isFullScreenHeightEnabled() -> isFullScreenHeightEnabled
    563:563:boolean isHasException() -> isHasException
    2451:2451:boolean isImmersive() -> isImmersive
    414:414:boolean isLayerTypeEnabled() -> isLayerTypeEnabled
    441:441:boolean isNeedReLoad() -> isNeedReLoad
    437:437:boolean isNeedValidate() -> isNeedValidate
    795:795:boolean isPreDownLoad() -> isPreDownLoad
    790:790:boolean isPreInitMode() -> isPreInitMode
    1263:1263:boolean isPreRenderMode() -> isPreRenderMode
    400:400:boolean isTrackComponent() -> isTrackComponent
    455:455:boolean isUseScroller() -> isUseScroller
    1579:1579:boolean isViewDisAppear() -> isViewDisAppear
    1967:1978:void moveFixedView(android.view.View) -> moveFixedView
    560:560:com.taobao.weex.WXSDKInstance newNestedInstance() -> newNestedInstance
    1481:1491:boolean onActivityBack() -> onActivityBack
    1313:1332:void onActivityCreate() -> onActivityCreate
    1465:1476:void onActivityDestroy() -> onActivityDestroy
    1366:1413:void onActivityPause() -> onActivityPause
    1535:1544:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    1420:1445:void onActivityResume() -> onActivityResume
    1338:1348:void onActivityStart() -> onActivityStart
    1451:1461:void onActivityStop() -> onActivityStop
    1506:1531:boolean onBackPressed() -> onBackPressed
    1668:1701:void onChangeElement(com.taobao.weex.ui.component.WXComponent,boolean) -> onChangeElement
    1776:1784:void onComponentCreate(com.taobao.weex.ui.component.WXComponent,long) -> onComponentCreate
    1596:1609:void onCreateFinish() -> onCreateFinish
    1352:1361:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    2269:2272:void onHttpStart() -> onHttpStart
    799:808:void onInstanceReady() -> onInstanceReady
    2368:2374:void onInterceptInstanceEvent(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map) -> onInterceptInstanceEvent
    1719:1741:void onJSException(java.lang.String,java.lang.String,java.lang.String) -> onJSException
    1747:1750:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
    1758:1758:void onLayoutChange(android.view.View) -> onLayoutChange
    1791:1810:void onOldFsRenderTimeLogic() -> onOldFsRenderTimeLogic
    1661:1664:void onRefreshSuccess(int,int) -> onRefreshSuccess
    1704:1716:void onRenderError(java.lang.String,java.lang.String) -> onRenderError
    1626:1658:void onRenderSuccess(int,int) -> onRenderSuccess
    1549:1559:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    1954:1960:void onRootCreated(com.taobao.weex.ui.component.WXComponent) -> onRootCreated
    2440:2448:void onShowAnimationEnd() -> onShowAnimationEnd
    1495:1502:boolean onSupportNavigateUp() -> onSupportNavigateUp
    1615:1618:void onUpdateFinish() -> onUpdateFinish
    1583:1592:void onViewAppear() -> onViewAppear
    1566:1576:void onViewDisappear() -> onViewDisappear
    830:834:void preDownLoad(java.lang.String,java.util.Map,java.lang.String,com.taobao.weex.common.WXRenderStrategy) -> preDownLoad
    815:824:void preInit(java.lang.String,java.lang.String,java.util.Map,java.lang.String,com.taobao.weex.common.WXRenderStrategy) -> preInit
    1175:1179:void refreshInstance(java.util.Map) -> refreshInstance
    1186:1198:void refreshInstance(java.lang.String) -> refreshInstance
    2018:2027:void registerActionbarHandler(com.taobao.weex.WXSDKInstance$ActionBarHandler) -> registerActionbarHandler
    1289:1289:void registerActivityStateListener(com.taobao.weex.IWXActivityStateListener) -> registerActivityStateListener
    2035:2045:void registerBackPressedHandler(com.taobao.weex.WXSDKInstance$OnBackPressedHandler) -> registerBackPressedHandler
    2011:2016:void registerOnWXScrollListener(com.taobao.weex.common.OnWXScrollListener) -> registerOnWXScrollListener
    1283:1284:void registerRenderListener(com.taobao.weex.IWXRenderListener) -> registerRenderListener
    654:655:void registerScrollViewListener(com.taobao.weex.ui.view.WXScrollView$WXScrollViewListener) -> registerScrollViewListener
    1292:1293:void registerStatisticsListener(com.taobao.weex.IWXStatisticsListener) -> registerStatisticsListener
    1256:1259:void reloadImages() -> reloadImages
    1141:1168:void reloadPage(boolean) -> reloadPage
    483:484:void reloadPageLayout() -> reloadPageLayout
    2157:2164:void removeEventListener(java.lang.String,java.lang.String) -> removeEventListener
    2167:2171:void removeEventListener(java.lang.String) -> removeEventListener
    1981:1984:void removeFixedView(android.view.View) -> removeFixedView
    2430:2434:void removeFrameViewEventListener(com.taobao.weex.WXSDKInstance$FrameViewEventListener) -> removeFrameViewEventListener
    354:355:void removeInActiveAddElmentAction(java.lang.String) -> removeInActiveAddElmentAction
    242:244:void removeLayerOverFlowListener(java.lang.String) -> removeLayerOverFlowListener
    580:581:void removeOnInstanceVisibleListener(com.taobao.weex.WXSDKInstance$OnInstanceVisibleListener) -> removeOnInstanceVisibleListener
    2244:2247:void removeUserTrackParameter(java.lang.String) -> removeUserTrackParameter
    691:692:void render(java.lang.String,java.util.Map,java.lang.String) -> render
    713:714:void render(java.lang.String,java.util.Map,java.lang.String,com.taobao.weex.common.WXRenderStrategy) -> render
    736:737:void render(java.lang.String,java.lang.String,java.util.Map,java.lang.String,com.taobao.weex.common.WXRenderStrategy) -> render
    740:756:void render(java.lang.String,com.taobao.weex.Script,java.util.Map,java.lang.String,com.taobao.weex.common.WXRenderStrategy) -> render
    762:763:void render(java.lang.String,byte[],java.util.Map,java.lang.String) -> render
    1072:1073:void render(java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,int,com.taobao.weex.common.WXRenderStrategy) -> render
    1080:1081:void render(java.lang.String) -> render
    1091:1092:void render(java.lang.String,int,int) -> render
    1106:1107:void renderByUrl(java.lang.String,java.lang.String,java.util.Map,java.lang.String,int,int,com.taobao.weex.common.WXRenderStrategy) -> renderByUrl
    1110:1111:void renderByUrl(java.lang.String,java.lang.String,java.util.Map,java.lang.String,com.taobao.weex.common.WXRenderStrategy) -> renderByUrl
    992:1056:void renderByUrlInternal(java.lang.String,java.lang.String,java.util.Map,java.lang.String,com.taobao.weex.common.WXRenderStrategy) -> renderByUrlInternal
    782:786:void renderInternal(java.lang.String,java.lang.String,java.util.Map,java.lang.String,com.taobao.weex.common.WXRenderStrategy) -> renderInternal
    842:953:void renderInternal(java.lang.String,com.taobao.weex.Script,java.util.Map,java.lang.String,com.taobao.weex.common.WXRenderStrategy) -> renderInternal
    477:478:void resetDeviceDisplayOfPage() -> resetDeviceDisplayOfPage
    1238:1238:android.net.Uri rewriteUri(android.net.Uri,java.lang.String) -> rewriteUri
    1622:1623:void runOnUiThread(java.lang.Runnable) -> runOnUiThread
    487:488:void setAutoAdjustDeviceWidth(boolean) -> setAutoAdjustDeviceWidth
    636:639:void setBizType(java.lang.String) -> setBizType
    1947:1951:void setBundleUrl(java.lang.String) -> setBundleUrl
    623:624:void setComponentObserver(com.taobao.weex.ComponentObserver) -> setComponentObserver
    226:229:void setComponentsInfoExceedGPULimit(com.alibaba.fastjson.JSONObject) -> setComponentsInfoExceedGPULimit
    667:668:void setContainerInfo(java.lang.String,java.lang.String) -> setContainerInfo
    1276:1277:void setContext(android.content.Context) -> setContext
    301:302:void setCustomFontNetworkHandler(com.taobao.weex.WXSDKInstance$CustomFontNetworkHandler) -> setCustomFontNetworkHandler
    2415:2416:void setDefaultFontSize(int) -> setDefaultFontSize
    495:496:void setDeviceDisplay(float,float,float) -> setDeviceDisplay
    449:449:void setEnableFullScreenHeight(boolean) -> setEnableFullScreenHeight
    567:568:void setHasException(boolean) -> setHasException
    664:664:void setIWXUserTrackAdapter(com.taobao.weex.adapter.IWXUserTrackAdapter) -> setIWXUserTrackAdapter
    285:286:void setImageNetworkHandler(com.taobao.weex.WXSDKInstance$ImageNetworkHandler) -> setImageNetworkHandler
    2455:2456:void setImmersive(boolean) -> setImmersive
    464:465:void setInstanceViewPortWidth(float) -> setInstanceViewPortWidth
    468:474:void setInstanceViewPortWidth(float,boolean) -> setInstanceViewPortWidth
    2254:2256:void setMaxDeepLayer(int) -> setMaxDeepLayer
    2259:2266:void setMaxDomDeep(int) -> setMaxDomDeep
    342:343:void setMaxHiddenEmbedsNum(int) -> setMaxHiddenEmbedsNum
    445:446:void setNeedLoad(boolean) -> setNeedLoad
    545:546:void setNestedInstanceInterceptor(com.taobao.weex.WXSDKInstance$NestedInstanceInterceptor) -> setNestedInstanceInterceptor
    480:481:void setPageKeepRawCssStyles() -> setPageKeepRawCssStyles
    1817:1818:void setParentInstance(com.taobao.weex.WXSDKInstance) -> setParentInstance
    1267:1273:void setPreRenderMode(boolean) -> setPreRenderMode
    369:370:void setRenderContainer(com.taobao.weex.RenderContainer) -> setRenderContainer
    1297:1298:void setRenderStartTime(long) -> setRenderStartTime
    2398:2399:void setRenderType(java.lang.String) -> setRenderType
    646:650:void setRootScrollView(android.widget.ScrollView) -> setRootScrollView
    2055:2091:void setSize(int,int) -> setSize
    293:294:void setStreamNetworkHandler(com.taobao.weex.WXSDKInstance$StreamNetworkHandler) -> setStreamNetworkHandler
    2339:2340:void setTemplate(java.lang.String) -> setTemplate
    404:405:void setTrackComponent(boolean) -> setTrackComponent
    330:331:void setUseSandBox(boolean) -> setUseSandBox
    459:460:void setUseScroller(boolean) -> setUseScroller
    322:323:void setUseSingleProcess(boolean) -> setUseSingleProcess
    373:395:void setWXAbstractRenderContainer(com.taobao.weex.render.WXAbstractRenderContainer) -> setWXAbstractRenderContainer
    979:979:boolean skipFrameworkInit() -> skipFrameworkInit
    2029:2033:void unRegisterActionbarHandler(com.taobao.weex.WXSDKInstance$ActionBarHandler) -> unRegisterActionbarHandler
    2047:2051:void unRegisterBackPressedHandler(com.taobao.weex.WXSDKInstance$OnBackPressedHandler) -> unRegisterBackPressedHandler
    1114:1129:java.lang.String wrapPageName(java.lang.String,java.lang.String) -> wrapPageName
com.taobao.weex.WXSDKInstance$1 -> com.taobao.weex.WXSDKInstance$1:
    381:381:void <init>(com.taobao.weex.WXSDKInstance) -> <init>
    384:385:void run() -> run
com.taobao.weex.WXSDKInstance$10 -> com.taobao.weex.WXSDKInstance$10:
    2081:2081:void <init>(com.taobao.weex.WXSDKInstance,float,float,boolean,boolean) -> <init>
    2084:2086:void run() -> run
com.taobao.weex.WXSDKInstance$11 -> com.taobao.weex.WXSDKInstance$11:
    2349:2349:void <init>(com.taobao.weex.WXSDKInstance) -> <init>
    2352:2353:void run() -> run
com.taobao.weex.WXSDKInstance$2 -> com.taobao.weex.WXSDKInstance$2:
    388:388:void <init>(com.taobao.weex.WXSDKInstance) -> <init>
    391:392:void run() -> run
com.taobao.weex.WXSDKInstance$3 -> com.taobao.weex.WXSDKInstance$3:
    930:930:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.adapter.IWXJscProcessManager) -> <init>
    933:950:void run() -> run
com.taobao.weex.WXSDKInstance$4 -> com.taobao.weex.WXSDKInstance$4:
    1267:1267:void <init>(com.taobao.weex.WXSDKInstance,boolean) -> <init>
    1270:1271:void run() -> run
com.taobao.weex.WXSDKInstance$5 -> com.taobao.weex.WXSDKInstance$5:
    1706:1706:void <init>(com.taobao.weex.WXSDKInstance,java.lang.String,java.lang.String) -> <init>
    1710:1713:void run() -> run
com.taobao.weex.WXSDKInstance$6 -> com.taobao.weex.WXSDKInstance$6:
    1722:1722:void <init>(com.taobao.weex.WXSDKInstance,java.lang.String,java.lang.String,java.lang.String) -> <init>
    1726:1738:void run() -> run
com.taobao.weex.WXSDKInstance$7 -> com.taobao.weex.WXSDKInstance$7:
    1796:1796:void <init>(com.taobao.weex.WXSDKInstance) -> <init>
    1799:1804:void run() -> run
com.taobao.weex.WXSDKInstance$8 -> com.taobao.weex.WXSDKInstance$8:
    1904:1904:void <init>(com.taobao.weex.WXSDKInstance) -> <init>
    1907:1909:void run() -> run
com.taobao.weex.WXSDKInstance$9 -> com.taobao.weex.WXSDKInstance$9:
    1915:1915:void <init>(com.taobao.weex.WXSDKInstance) -> <init>
    1918:1919:void run() -> run
com.taobao.weex.WXSDKManager -> com.taobao.weex.WXSDKManager:
    76:76:void <clinit>() -> <clinit>
    116:117:void <init>() -> <init>
    106:125:void <init>(com.taobao.weex.ui.WXRenderManager) -> <init>
    395:398:void addWXAnalyzer(com.taobao.weex.performance.IWXAnalyzer) -> addWXAnalyzer
    253:254:void callback(java.lang.String,java.lang.String,java.util.Map) -> callback
    258:259:void callback(java.lang.String,java.lang.String,java.util.Map,boolean) -> callback
    302:309:void createInstance(com.taobao.weex.WXSDKInstance,com.taobao.weex.Script,java.util.Map,java.lang.String) -> createInstance
    245:249:void destroy() -> destroy
    316:331:void destroyInstance(java.lang.String) -> destroyInstance
    278:279:void fireEvent(java.lang.String,java.lang.String,java.lang.String) -> fireEvent
    287:288:void fireEvent(java.lang.String,java.lang.String,java.lang.String,java.util.Map) -> fireEvent
    295:299:void fireEvent(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map) -> fireEvent
    334:334:java.lang.String generateInstanceId() -> generateInstanceId
    509:509:com.taobao.weex.adapter.IWXAccessibilityRoleAdapter getAccessibilityRoleAdapter() -> getAccessibilityRoleAdapter
    200:200:com.taobao.weex.appfram.navigator.IActivityNavBarSetter getActivityNavBarSetter() -> getActivityNavBarSetter
    241:241:java.util.Map getAllInstanceMap() -> getAllInstanceMap
    369:369:com.taobao.weex.performance.IApmGenerator getApmGenerater() -> getApmGenerater
    380:383:com.taobao.weex.adapter.ClassLoaderAdapter getClassLoaderAdapter() -> getClassLoaderAdapter
    350:350:com.taobao.weex.adapter.IDrawableLoader getDrawableLoader() -> getDrawableLoader
    531:538:com.taobao.weex.font.FontAdapter getFontAdapter() -> getFontAdapter
    362:365:com.taobao.weex.adapter.IWXHttpAdapter getIWXHttpAdapter() -> getIWXHttpAdapter
    342:342:com.taobao.weex.adapter.IWXImgLoaderAdapter getIWXImgLoaderAdapter() -> getIWXImgLoaderAdapter
    354:354:com.taobao.weex.adapter.IWXJSExceptionAdapter getIWXJSExceptionAdapter() -> getIWXJSExceptionAdapter
    346:346:com.taobao.weex.adapter.IWXJsFileLoaderAdapter getIWXJsFileLoaderAdapter() -> getIWXJsFileLoaderAdapter
    387:387:com.taobao.weex.adapter.IWXSoLoaderAdapter getIWXSoLoaderAdapter() -> getIWXSoLoaderAdapter
    421:428:com.taobao.weex.appfram.storage.IWXStorageAdapter getIWXStorageAdapter() -> getIWXStorageAdapter
    338:338:com.taobao.weex.adapter.IWXUserTrackAdapter getIWXUserTrackAdapter() -> getIWXUserTrackAdapter
    464:467:com.taobao.weex.appfram.websocket.IWebSocketAdapter getIWXWebSocketAdapter() -> getIWXWebSocketAdapter
    177:184:com.taobao.weex.WXSDKManager getInstance() -> getInstance
    188:192:float getInstanceViewPortWidth(java.lang.String) -> getInstanceViewPortWidth
    520:520:com.taobao.weex.appfram.navigator.INavigator getNavigator() -> getNavigator
    234:234:com.taobao.weex.WXSDKInstance getSDKInstance(java.lang.String) -> getSDKInstance
    494:494:com.taobao.weex.adapter.ITracingAdapter getTracingAdapter() -> getTracingAdapter
    373:376:com.taobao.weex.adapter.URIAdapter getURIAdapter() -> getURIAdapter
    475:475:com.taobao.weex.bridge.WXValidateProcessor getValidateProcessor() -> getValidateProcessor
    391:391:java.util.List getWXAnalyzerList() -> getWXAnalyzerList
    212:212:com.taobao.weex.bridge.WXBridgeManager getWXBridgeManager() -> getWXBridgeManager
    219:219:com.taobao.weex.adapter.IWXJscProcessManager getWXJscProcessManager() -> getWXJscProcessManager
    216:216:com.taobao.weex.ui.WXRenderManager getWXRenderManager() -> getWXRenderManager
    139:139:com.taobao.weex.IWXStatisticsListener getWXStatisticsListener() -> getWXStatisticsListener
    222:222:com.taobao.weex.common.WXWorkThreadManager getWXWorkThreadManager() -> getWXWorkThreadManager
    230:230:com.taobao.weex.adapter.IWXConfigAdapter getWxConfigAdapter() -> getWxConfigAdapter
    131:132:void initInstance(com.taobao.weex.ui.WXRenderManager) -> initInstance
    262:263:void initScriptsFramework(java.lang.String) -> initScriptsFramework
    153:153:boolean needInitV8() -> needInitV8
    459:460:void notifySerializeCodeCache() -> notifySerializeCodeCache
    446:447:void notifyTrimMemory() -> notifyTrimMemory
    143:146:void onSDKEngineInitialize() -> onSDKEngineInitialize
    238:239:void postOnUiThread(java.lang.Runnable,long) -> postOnUiThread
    312:313:void refreshInstance(java.lang.String,com.taobao.weex.common.WXRefreshData) -> refreshInstance
    266:267:void registerComponents(java.util.List) -> registerComponents
    498:502:void registerInstanceLifeCycleCallbacks(com.taobao.weex.WXSDKManager$InstanceLifeCycleCallbacks) -> registerInstanceLifeCycleCallbacks
    270:271:void registerModules(java.util.Map) -> registerModules
    135:136:void registerStatisticsListener(com.taobao.weex.IWXStatisticsListener) -> registerStatisticsListener
    471:472:void registerValidateProcessor(com.taobao.weex.bridge.WXValidateProcessor) -> registerValidateProcessor
    208:209:void restartBridge() -> restartBridge
    401:402:void rmWXAnalyzer(com.taobao.weex.performance.IWXAnalyzer) -> rmWXAnalyzer
    505:506:void setAccessibilityRoleAdapter(com.taobao.weex.adapter.IWXAccessibilityRoleAdapter) -> setAccessibilityRoleAdapter
    204:205:void setActivityNavBarSetter(com.taobao.weex.appfram.navigator.IActivityNavBarSetter) -> setActivityNavBarSetter
    484:487:void setCrashInfo(java.lang.String,java.lang.String) -> setCrashInfo
    480:481:void setCrashInfoReporter(com.taobao.weex.adapter.ICrashInfoReporter) -> setCrashInfoReporter
    358:359:void setIWXJSExceptionAdapter(com.taobao.weex.adapter.IWXJSExceptionAdapter) -> setIWXJSExceptionAdapter
    405:418:void setInitConfig(com.taobao.weex.InitConfig) -> setInitConfig
    196:197:void setInstance(com.taobao.weex.WXSDKManager) -> setInstance
    524:525:void setNavigator(com.taobao.weex.appfram.navigator.INavigator) -> setNavigator
    149:150:void setNeedInitV8(boolean) -> setNeedInitV8
    490:491:void setTracingAdapter(com.taobao.weex.adapter.ITracingAdapter) -> setTracingAdapter
    226:227:void setWxConfigAdapter(com.taobao.weex.adapter.IWXConfigAdapter) -> setWxConfigAdapter
    157:174:void takeJSHeapSnapshot(java.lang.String) -> takeJSHeapSnapshot
com.taobao.weex.WeexFrameRateControl -> com.taobao.weex.WeexFrameRateControl:
    43:90:void <init>(com.taobao.weex.WeexFrameRateControl$VSyncListener) -> <init>
    32:32:java.lang.ref.WeakReference access$000(com.taobao.weex.WeexFrameRateControl) -> access$000
    32:32:android.view.Choreographer$FrameCallback access$100(com.taobao.weex.WeexFrameRateControl) -> access$100
    32:32:android.view.Choreographer access$200(com.taobao.weex.WeexFrameRateControl) -> access$200
    32:32:java.lang.Runnable access$300(com.taobao.weex.WeexFrameRateControl) -> access$300
    94:100:void start() -> start
    104:109:void stop() -> stop
com.taobao.weex.WeexFrameRateControl$1 -> com.taobao.weex.WeexFrameRateControl$1:
    47:47:void <init>(com.taobao.weex.WeexFrameRateControl) -> <init>
    52:64:void doFrame(long) -> doFrame
com.taobao.weex.WeexFrameRateControl$2 -> com.taobao.weex.WeexFrameRateControl$2:
    69:69:void <init>(com.taobao.weex.WeexFrameRateControl) -> <init>
    73:85:void run() -> run
com.taobao.weex.adapter.ClassLoaderAdapter -> com.taobao.weex.adapter.ClassLoaderAdapter:
    31:31:void <init>() -> <init>
    49:51:java.lang.Class getComponentClass(java.lang.String,java.lang.String,com.taobao.weex.WXSDKInstance) -> getComponentClass
    38:40:java.lang.Class getModuleClass(java.lang.String,java.lang.String,android.content.Context) -> getModuleClass
com.taobao.weex.adapter.DefaultUriAdapter -> com.taobao.weex.adapter.DefaultUriAdapter:
    34:34:void <init>() -> <init>
    71:94:android.net.Uri$Builder buildRelativeURI(android.net.Uri$Builder,android.net.Uri,android.net.Uri) -> buildRelativeURI
    40:40:android.net.Uri rewrite(com.taobao.weex.WXSDKInstance,java.lang.String,android.net.Uri) -> rewrite
    46:67:android.net.Uri rewrite(java.lang.String,java.lang.String,android.net.Uri) -> rewrite
com.taobao.weex.adapter.DefaultWXHttpAdapter -> com.taobao.weex.adapter.DefaultWXHttpAdapter:
    47:47:void <clinit>() -> <clinit>
    45:45:void <init>() -> <init>
    45:45:java.net.HttpURLConnection access$100(com.taobao.weex.adapter.DefaultWXHttpAdapter,com.taobao.weex.common.WXRequest,com.taobao.weex.adapter.IWXHttpAdapter$OnHttpListener) -> access$100
    45:45:byte[] access$200(com.taobao.weex.adapter.DefaultWXHttpAdapter,java.io.InputStream,com.taobao.weex.adapter.IWXHttpAdapter$OnHttpListener) -> access$200
    45:45:java.lang.String access$300(com.taobao.weex.adapter.DefaultWXHttpAdapter,java.io.InputStream,com.taobao.weex.adapter.IWXHttpAdapter$OnHttpListener) -> access$300
    213:213:java.net.HttpURLConnection createConnection(java.net.URL) -> createConnection
    51:55:void execute(java.lang.Runnable) -> execute
    217:217:com.taobao.weex.adapter.DefaultWXHttpAdapter$IEventReporterDelegate getEventReporterDelegate() -> getEventReporterDelegate
    130:165:java.net.HttpURLConnection openConnection(com.taobao.weex.common.WXRequest,com.taobao.weex.adapter.IWXHttpAdapter$OnHttpListener) -> openConnection
    192:206:java.lang.String readInputStream(java.io.InputStream,com.taobao.weex.adapter.IWXHttpAdapter$OnHttpListener) -> readInputStream
    169:188:byte[] readInputStreamAsBytes(java.io.InputStream,com.taobao.weex.adapter.IWXHttpAdapter$OnHttpListener) -> readInputStreamAsBytes
    59:118:void sendRequest(com.taobao.weex.common.WXRequest,com.taobao.weex.adapter.IWXHttpAdapter$OnHttpListener) -> sendRequest
com.taobao.weex.adapter.DefaultWXHttpAdapter$1 -> com.taobao.weex.adapter.DefaultWXHttpAdapter$1:
    62:62:void <init>(com.taobao.weex.adapter.DefaultWXHttpAdapter,com.taobao.weex.common.WXRequest,com.taobao.weex.adapter.IWXHttpAdapter$OnHttpListener) -> <init>
    65:116:void run() -> run
com.taobao.weex.adapter.DefaultWXHttpAdapter$NOPEventReportDelegate -> com.taobao.weex.adapter.DefaultWXHttpAdapter$NOPEventReportDelegate:
    227:227:void <init>() -> <init>
    227:227:void <init>(com.taobao.weex.adapter.DefaultWXHttpAdapter$1) -> <init>
    246:246:void httpExchangeFailed(java.io.IOException) -> httpExchangeFailed
    240:240:java.io.InputStream interpretResponseStream(java.io.InputStream) -> interpretResponseStream
    236:236:void postConnect() -> postConnect
    231:231:void preConnect(java.net.HttpURLConnection,java.lang.String) -> preConnect
com.taobao.weex.adapter.DrawableStrategy -> com.taobao.weex.adapter.DrawableStrategy:
    23:23:void <init>() -> <init>
com.taobao.weex.appfram.clipboard.WXClipboardModule -> com.taobao.weex.appfram.clipboard.WXClipboardModule:
    42:44:void <init>() -> <init>
    92:146:java.lang.CharSequence coerceToText(android.content.Context,android.content.ClipData$Item) -> coerceToText
    68:87:void getString(com.taobao.weex.bridge.JSCallback) -> getString
    55:63:void setString(java.lang.String) -> setString
com.taobao.weex.appfram.navigator.WXNavigatorModule -> com.taobao.weex.appfram.navigator.WXNavigatorModule:
    40:40:void <init>() -> <init>
    326:363:boolean changeVisibilityOfActionBar(android.content.Context,int) -> changeVisibilityOfActionBar
    244:256:void clearNavBarLeftItem(java.lang.String,com.taobao.weex.bridge.JSCallback) -> clearNavBarLeftItem
    278:290:void clearNavBarMoreItem(java.lang.String,com.taobao.weex.bridge.JSCallback) -> clearNavBarMoreItem
    210:221:void clearNavBarRightItem(java.lang.String,com.taobao.weex.bridge.JSCallback) -> clearNavBarRightItem
    91:104:void close(com.alibaba.fastjson.JSONObject,com.taobao.weex.bridge.JSCallback,com.taobao.weex.bridge.JSCallback) -> close
    56:87:void open(com.alibaba.fastjson.JSONObject,com.taobao.weex.bridge.JSCallback,com.taobao.weex.bridge.JSCallback) -> open
    163:188:void pop(java.lang.String,com.taobao.weex.bridge.JSCallback) -> pop
    109:158:void push(java.lang.String,com.taobao.weex.bridge.JSCallback) -> push
    311:323:void setNavBarHidden(java.lang.String,java.lang.String) -> setNavBarHidden
    225:240:void setNavBarLeftItem(java.lang.String,com.taobao.weex.bridge.JSCallback) -> setNavBarLeftItem
    260:274:void setNavBarMoreItem(java.lang.String,com.taobao.weex.bridge.JSCallback) -> setNavBarMoreItem
    192:206:void setNavBarRightItem(java.lang.String,com.taobao.weex.bridge.JSCallback) -> setNavBarRightItem
    294:307:void setNavBarTitle(java.lang.String,com.taobao.weex.bridge.JSCallback) -> setNavBarTitle
com.taobao.weex.appfram.pickers.DatePickerImpl -> com.taobao.weex.appfram.pickers.DatePickerImpl:
    47:47:void <init>() -> <init>
    152:162:java.util.Date parseDate(java.lang.String) -> parseDate
    166:176:java.util.Date parseTime(java.lang.String) -> parseTime
    56:113:void pickDate(android.content.Context,java.lang.String,java.lang.String,java.lang.String,com.taobao.weex.appfram.pickers.DatePickerImpl$OnPickListener,java.util.Map) -> pickDate
    116:145:void pickTime(android.content.Context,java.lang.String,com.taobao.weex.appfram.pickers.DatePickerImpl$OnPickListener,java.util.Map) -> pickTime
    180:197:void setButtonText(android.app.AlertDialog,int,java.lang.CharSequence) -> setButtonText
com.taobao.weex.appfram.pickers.DatePickerImpl$1 -> com.taobao.weex.appfram.pickers.DatePickerImpl$1:
    60:60:void <init>(com.taobao.weex.appfram.pickers.DatePickerImpl$OnPickListener) -> <init>
    63:68:void onDateSet(android.widget.DatePicker,int,int,int) -> onDateSet
com.taobao.weex.appfram.pickers.DatePickerImpl$2 -> com.taobao.weex.appfram.pickers.DatePickerImpl$2:
    102:102:void <init>(com.taobao.weex.appfram.pickers.DatePickerImpl$OnPickListener) -> <init>
    105:106:void onCancel(android.content.DialogInterface) -> onCancel
com.taobao.weex.appfram.pickers.DatePickerImpl$3 -> com.taobao.weex.appfram.pickers.DatePickerImpl$3:
    120:120:void <init>(com.taobao.weex.appfram.pickers.DatePickerImpl$OnPickListener) -> <init>
    123:127:void onTimeSet(android.widget.TimePicker,int,int) -> onTimeSet
com.taobao.weex.appfram.pickers.DatePickerImpl$4 -> com.taobao.weex.appfram.pickers.DatePickerImpl$4:
    134:134:void <init>(com.taobao.weex.appfram.pickers.DatePickerImpl$OnPickListener) -> <init>
    137:138:void onCancel(android.content.DialogInterface) -> onCancel
com.taobao.weex.appfram.pickers.DatePickerImpl$5 -> com.taobao.weex.appfram.pickers.DatePickerImpl$5:
    184:184:void <init>(android.app.AlertDialog,int,java.lang.CharSequence) -> <init>
    187:192:void run() -> run
com.taobao.weex.appfram.pickers.WXPickersModule -> com.taobao.weex.appfram.pickers.WXPickersModule:
    54:54:void <init>() -> <init>
    54:54:int access$000(com.taobao.weex.appfram.pickers.WXPickersModule) -> access$000
    54:54:int access$002(com.taobao.weex.appfram.pickers.WXPickersModule,int) -> access$002
    54:54:java.lang.Object access$100(com.taobao.weex.appfram.pickers.WXPickersModule,java.util.Map,java.lang.String,java.lang.Object) -> access$100
    54:54:int access$200(com.taobao.weex.appfram.pickers.WXPickersModule,java.util.Map,java.lang.String,int) -> access$200
    124:128:int getColor(java.util.Map,java.lang.String,int) -> getColor
    110:115:java.lang.Object getOption(java.util.Map,java.lang.String,java.lang.Object) -> getOption
    295:308:android.widget.TextView makeTitleView(android.content.Context,java.util.Map) -> makeTitleView
    156:182:void performPickDate(java.util.Map,com.taobao.weex.bridge.JSCallback) -> performPickDate
    132:153:void performPickTime(java.util.Map,com.taobao.weex.bridge.JSCallback) -> performPickTime
    185:292:void performSinglePick(java.util.List,java.util.Map,com.taobao.weex.bridge.JSCallback) -> performSinglePick
    83:89:void pick(java.util.Map,com.taobao.weex.bridge.JSCallback) -> pick
    93:94:void pickDate(java.util.Map,com.taobao.weex.bridge.JSCallback) -> pickDate
    98:99:void pickTime(java.util.Map,com.taobao.weex.bridge.JSCallback) -> pickTime
    102:106:java.util.List safeConvert(java.util.List) -> safeConvert
com.taobao.weex.appfram.pickers.WXPickersModule$1 -> com.taobao.weex.appfram.pickers.WXPickersModule$1:
    136:136:void <init>(com.taobao.weex.appfram.pickers.WXPickersModule,com.taobao.weex.bridge.JSCallback) -> <init>
    139:150:void onPick(boolean,java.lang.String) -> onPick
com.taobao.weex.appfram.pickers.WXPickersModule$2 -> com.taobao.weex.appfram.pickers.WXPickersModule$2:
    164:164:void <init>(com.taobao.weex.appfram.pickers.WXPickersModule,com.taobao.weex.bridge.JSCallback) -> <init>
    167:178:void onPick(boolean,java.lang.String) -> onPick
com.taobao.weex.appfram.pickers.WXPickersModule$3 -> com.taobao.weex.appfram.pickers.WXPickersModule$3:
    191:191:void <init>(com.taobao.weex.appfram.pickers.WXPickersModule,android.content.Context,int,java.util.List,int,int) -> <init>
    195:212:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.taobao.weex.appfram.pickers.WXPickersModule$4 -> com.taobao.weex.appfram.pickers.WXPickersModule$4:
    227:227:void <init>(com.taobao.weex.appfram.pickers.WXPickersModule,com.taobao.weex.bridge.JSCallback) -> <init>
    231:235:void onClick(android.content.DialogInterface,int) -> onClick
com.taobao.weex.appfram.pickers.WXPickersModule$5 -> com.taobao.weex.appfram.pickers.WXPickersModule$5:
    217:217:void <init>(com.taobao.weex.appfram.pickers.WXPickersModule,com.taobao.weex.bridge.JSCallback) -> <init>
    221:225:void onClick(android.content.DialogInterface,int) -> onClick
com.taobao.weex.appfram.pickers.WXPickersModule$6 -> com.taobao.weex.appfram.pickers.WXPickersModule$6:
    247:247:void <init>(com.taobao.weex.appfram.pickers.WXPickersModule,android.widget.ArrayAdapter) -> <init>
    250:252:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.taobao.weex.appfram.pickers.WXPickersModule$7 -> com.taobao.weex.appfram.pickers.WXPickersModule$7:
    255:255:void <init>(com.taobao.weex.appfram.pickers.WXPickersModule,android.app.AlertDialog,java.util.Map) -> <init>
    258:288:void run() -> run
com.taobao.weex.appfram.storage.DefaultWXStorage -> com.taobao.weex.appfram.storage.DefaultWXStorage:
    55:57:void <init>(android.content.Context) -> <init>
    39:39:boolean access$000(com.taobao.weex.appfram.storage.DefaultWXStorage,java.lang.String,java.lang.String,boolean,boolean) -> access$000
    39:39:java.lang.String access$100(com.taobao.weex.appfram.storage.DefaultWXStorage,java.lang.String) -> access$100
    39:39:boolean access$200(com.taobao.weex.appfram.storage.DefaultWXStorage,java.lang.String) -> access$200
    39:39:long access$300(com.taobao.weex.appfram.storage.DefaultWXStorage) -> access$300
    39:39:java.util.List access$400(com.taobao.weex.appfram.storage.DefaultWXStorage) -> access$400
    39:39:com.taobao.weex.appfram.storage.WXSQLiteOpenHelper access$500(com.taobao.weex.appfram.storage.DefaultWXStorage) -> access$500
    146:161:void close() -> close
    46:53:void execute(java.lang.Runnable) -> execute
    118:128:void getAllKeys(com.taobao.weex.appfram.storage.IWXStorageAdapter$OnResultReceivedListener) -> getAllKeys
    76:86:void getItem(java.lang.String,com.taobao.weex.appfram.storage.IWXStorageAdapter$OnResultReceivedListener) -> getItem
    104:114:void length(com.taobao.weex.appfram.storage.IWXStorageAdapter$OnResultReceivedListener) -> length
    315:331:java.util.List performGetAllKeys() -> performGetAllKeys
    245:271:java.lang.String performGetItem(java.lang.String) -> performGetItem
    294:309:long performGetLength() -> performGetLength
    276:290:boolean performRemoveItem(java.lang.String) -> performRemoveItem
    164:196:boolean performSetItem(java.lang.String,java.lang.String,boolean,boolean) -> performSetItem
    90:100:void removeItem(java.lang.String,com.taobao.weex.appfram.storage.IWXStorageAdapter$OnResultReceivedListener) -> removeItem
    62:72:void setItem(java.lang.String,java.lang.String,com.taobao.weex.appfram.storage.IWXStorageAdapter$OnResultReceivedListener) -> setItem
    132:142:void setItemPersistent(java.lang.String,java.lang.String,com.taobao.weex.appfram.storage.IWXStorageAdapter$OnResultReceivedListener) -> setItemPersistent
    205:241:boolean trimToSize() -> trimToSize
com.taobao.weex.appfram.storage.DefaultWXStorage$1 -> com.taobao.weex.appfram.storage.DefaultWXStorage$1:
    62:62:void <init>(com.taobao.weex.appfram.storage.DefaultWXStorage,java.lang.String,java.lang.String,com.taobao.weex.appfram.storage.IWXStorageAdapter$OnResultReceivedListener) -> <init>
    65:70:void run() -> run
com.taobao.weex.appfram.storage.DefaultWXStorage$2 -> com.taobao.weex.appfram.storage.DefaultWXStorage$2:
    76:76:void <init>(com.taobao.weex.appfram.storage.DefaultWXStorage,java.lang.String,com.taobao.weex.appfram.storage.IWXStorageAdapter$OnResultReceivedListener) -> <init>
    79:84:void run() -> run
com.taobao.weex.appfram.storage.DefaultWXStorage$3 -> com.taobao.weex.appfram.storage.DefaultWXStorage$3:
    90:90:void <init>(com.taobao.weex.appfram.storage.DefaultWXStorage,java.lang.String,com.taobao.weex.appfram.storage.IWXStorageAdapter$OnResultReceivedListener) -> <init>
    93:98:void run() -> run
com.taobao.weex.appfram.storage.DefaultWXStorage$4 -> com.taobao.weex.appfram.storage.DefaultWXStorage$4:
    104:104:void <init>(com.taobao.weex.appfram.storage.DefaultWXStorage,com.taobao.weex.appfram.storage.IWXStorageAdapter$OnResultReceivedListener) -> <init>
    107:112:void run() -> run
com.taobao.weex.appfram.storage.DefaultWXStorage$5 -> com.taobao.weex.appfram.storage.DefaultWXStorage$5:
    118:118:void <init>(com.taobao.weex.appfram.storage.DefaultWXStorage,com.taobao.weex.appfram.storage.IWXStorageAdapter$OnResultReceivedListener) -> <init>
    121:126:void run() -> run
com.taobao.weex.appfram.storage.DefaultWXStorage$6 -> com.taobao.weex.appfram.storage.DefaultWXStorage$6:
    132:132:void <init>(com.taobao.weex.appfram.storage.DefaultWXStorage,java.lang.String,java.lang.String,com.taobao.weex.appfram.storage.IWXStorageAdapter$OnResultReceivedListener) -> <init>
    135:140:void run() -> run
com.taobao.weex.appfram.storage.DefaultWXStorage$7 -> com.taobao.weex.appfram.storage.DefaultWXStorage$7:
    147:147:void <init>(com.taobao.weex.appfram.storage.DefaultWXStorage,java.util.concurrent.ExecutorService) -> <init>
    151:158:void run() -> run
com.taobao.weex.appfram.storage.StorageResultHandler -> com.taobao.weex.appfram.storage.StorageResultHandler:
    32:33:void <init>() -> <init>
    78:84:java.util.Map getAllkeysResult(java.util.List) -> getAllkeysResult
    49:52:java.util.Map getItemResult(java.lang.String) -> getItemResult
    71:74:java.util.Map getLengthResult(long) -> getLengthResult
    103:104:void handleInvalidParam(com.taobao.weex.bridge.JSCallback) -> handleInvalidParam
    99:100:void handleNoHandlerError(com.taobao.weex.bridge.JSCallback) -> handleNoHandlerError
    89:96:void handleResult(com.taobao.weex.bridge.JSCallback,java.lang.String,java.lang.Object) -> handleResult
    64:67:java.util.Map removeItemResult(boolean) -> removeItemResult
    56:59:java.util.Map setItemResult(boolean) -> setItemResult
com.taobao.weex.appfram.storage.WXSQLiteOpenHelper -> com.taobao.weex.appfram.storage.WXSQLiteOpenHelper:
    42:42:void <clinit>() -> <clinit>
    41:70:void <init>(android.content.Context) -> <init>
    201:206:void closeDatabase() -> closeDatabase
    209:223:void createTableIfNotExists(android.database.sqlite.SQLiteDatabase) -> createTableIfNotExists
    197:198:boolean deleteDB() -> deleteDB
    149:187:void ensureDatabase() -> ensureDatabase
    78:79:android.database.sqlite.SQLiteDatabase getDatabase() -> getDatabase
    84:85:void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    103:145:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    189:194:void setMaximumSize(long) -> setMaximumSize
com.taobao.weex.appfram.storage.WXStorageModule -> com.taobao.weex.appfram.storage.WXStorageModule:
    30:30:void <init>() -> <init>
    35:39:com.taobao.weex.appfram.storage.IWXStorageAdapter ability() -> ability
    175:179:void destroy() -> destroy
    135:148:void getAllKeys(com.taobao.weex.bridge.JSCallback) -> getAllKeys
    71:89:void getItem(java.lang.String,com.taobao.weex.bridge.JSCallback) -> getItem
    117:130:void length(com.taobao.weex.bridge.JSCallback) -> length
    94:112:void removeItem(java.lang.String,com.taobao.weex.bridge.JSCallback) -> removeItem
    46:66:void setItem(java.lang.String,java.lang.String,com.taobao.weex.bridge.JSCallback) -> setItem
    153:171:void setItemPersistent(java.lang.String,java.lang.String,com.taobao.weex.bridge.JSCallback) -> setItemPersistent
com.taobao.weex.appfram.storage.WXStorageModule$1 -> com.taobao.weex.appfram.storage.WXStorageModule$1:
    56:56:void <init>(com.taobao.weex.appfram.storage.WXStorageModule,com.taobao.weex.bridge.JSCallback) -> <init>
    59:62:void onReceived(java.util.Map) -> onReceived
com.taobao.weex.appfram.storage.WXStorageModule$2 -> com.taobao.weex.appfram.storage.WXStorageModule$2:
    81:81:void <init>(com.taobao.weex.appfram.storage.WXStorageModule,com.taobao.weex.bridge.JSCallback) -> <init>
    84:87:void onReceived(java.util.Map) -> onReceived
com.taobao.weex.appfram.storage.WXStorageModule$3 -> com.taobao.weex.appfram.storage.WXStorageModule$3:
    104:104:void <init>(com.taobao.weex.appfram.storage.WXStorageModule,com.taobao.weex.bridge.JSCallback) -> <init>
    107:110:void onReceived(java.util.Map) -> onReceived
com.taobao.weex.appfram.storage.WXStorageModule$4 -> com.taobao.weex.appfram.storage.WXStorageModule$4:
    122:122:void <init>(com.taobao.weex.appfram.storage.WXStorageModule,com.taobao.weex.bridge.JSCallback) -> <init>
    125:128:void onReceived(java.util.Map) -> onReceived
com.taobao.weex.appfram.storage.WXStorageModule$5 -> com.taobao.weex.appfram.storage.WXStorageModule$5:
    140:140:void <init>(com.taobao.weex.appfram.storage.WXStorageModule,com.taobao.weex.bridge.JSCallback) -> <init>
    143:146:void onReceived(java.util.Map) -> onReceived
com.taobao.weex.appfram.storage.WXStorageModule$6 -> com.taobao.weex.appfram.storage.WXStorageModule$6:
    163:163:void <init>(com.taobao.weex.appfram.storage.WXStorageModule,com.taobao.weex.bridge.JSCallback) -> <init>
    166:169:void onReceived(java.util.Map) -> onReceived
com.taobao.weex.appfram.websocket.WebSocketCloseCodes -> com.taobao.weex.appfram.websocket.WebSocketCloseCodes:
    26:40:void <clinit>() -> <clinit>
    44:46:void <init>(java.lang.String,int,int) -> <init>
    49:49:int getCode() -> getCode
    26:26:com.taobao.weex.appfram.websocket.WebSocketCloseCodes valueOf(java.lang.String) -> valueOf
    26:26:com.taobao.weex.appfram.websocket.WebSocketCloseCodes[] values() -> values
com.taobao.weex.appfram.websocket.WebSocketModule -> com.taobao.weex.appfram.websocket.WebSocketModule:
    49:51:void <init>() -> <init>
    55:64:void WebSocket(java.lang.String,java.lang.String) -> WebSocket
    68:77:void WebSocket(java.lang.String,java.lang.String,java.lang.String) -> WebSocket
    38:38:com.taobao.weex.appfram.websocket.IWebSocketAdapter access$500(com.taobao.weex.appfram.websocket.WebSocketModule) -> access$500
    38:38:com.taobao.weex.appfram.websocket.IWebSocketAdapter access$502(com.taobao.weex.appfram.websocket.WebSocketModule,com.taobao.weex.appfram.websocket.IWebSocketAdapter) -> access$502
    38:38:com.taobao.weex.appfram.websocket.WebSocketModule$WebSocketEventListener access$602(com.taobao.weex.appfram.websocket.WebSocketModule,com.taobao.weex.appfram.websocket.WebSocketModule$WebSocketEventListener) -> access$602
    89:100:void close(java.lang.String,java.lang.String) -> close
    132:149:void destroy() -> destroy
    118:121:void onclose(com.taobao.weex.bridge.JSCallback) -> onclose
    125:128:void onerror(com.taobao.weex.bridge.JSCallback) -> onerror
    111:114:void onmessage(com.taobao.weex.bridge.JSCallback) -> onmessage
    104:107:void onopen(com.taobao.weex.bridge.JSCallback) -> onopen
    152:159:boolean reportErrorIfNoAdapter() -> reportErrorIfNoAdapter
    82:85:void send(java.lang.String) -> send
com.taobao.weex.appfram.websocket.WebSocketModule$1 -> com.taobao.weex.appfram.websocket.WebSocketModule$1:
    132:132:void <init>(com.taobao.weex.appfram.websocket.WebSocketModule) -> <init>
    135:141:void run() -> run
com.taobao.weex.appfram.websocket.WebSocketModule$WebSocketEventListener -> com.taobao.weex.appfram.websocket.WebSocketModule$WebSocketEventListener:
    162:162:void <init>(com.taobao.weex.appfram.websocket.WebSocketModule) -> <init>
    162:162:void <init>(com.taobao.weex.appfram.websocket.WebSocketModule,com.taobao.weex.appfram.websocket.WebSocketModule$1) -> <init>
    162:162:com.taobao.weex.bridge.JSCallback access$102(com.taobao.weex.appfram.websocket.WebSocketModule$WebSocketEventListener,com.taobao.weex.bridge.JSCallback) -> access$102
    162:162:com.taobao.weex.bridge.JSCallback access$202(com.taobao.weex.appfram.websocket.WebSocketModule$WebSocketEventListener,com.taobao.weex.bridge.JSCallback) -> access$202
    162:162:com.taobao.weex.bridge.JSCallback access$302(com.taobao.weex.appfram.websocket.WebSocketModule$WebSocketEventListener,com.taobao.weex.bridge.JSCallback) -> access$302
    162:162:com.taobao.weex.bridge.JSCallback access$402(com.taobao.weex.appfram.websocket.WebSocketModule$WebSocketEventListener,com.taobao.weex.bridge.JSCallback) -> access$402
    191:198:void onClose(int,java.lang.String,boolean) -> onClose
    202:207:void onError(java.lang.String) -> onError
    177:187:void onMessage(java.lang.String) -> onMessage
    170:173:void onOpen() -> onOpen
com.taobao.weex.base.FloatUtil -> com.taobao.weex.base.FloatUtil:
    21:21:void <init>() -> <init>
    26:29:boolean floatsEqual(float,float) -> floatsEqual
com.taobao.weex.base.SystemMessageHandler -> com.taobao.weex.base.SystemMessageHandler:
    36:56:void <init>(long,boolean) -> <init>
    60:60:com.taobao.weex.base.SystemMessageHandler create(long,boolean) -> create
    104:104:void handleMessage(android.os.Message) -> handleMessage
    79:100:android.os.Message obtainAsyncMessage(int) -> obtainAsyncMessage
    70:71:void scheduleDelayedWork(long) -> scheduleDelayedWork
    65:66:void scheduleWork() -> scheduleWork
    75:76:void stop() -> stop
com.taobao.weex.bridge.EventResult -> com.taobao.weex.bridge.EventResult:
    25:28:void <init>() -> <init>
    43:43:java.lang.Object getResult() -> getResult
    39:39:boolean isSuccess() -> isSuccess
    34:36:void onCallback(java.lang.Object) -> onCallback
com.taobao.weex.bridge.MethodInvoker -> com.taobao.weex.bridge.MethodInvoker:
    35:36:void <init>(java.lang.reflect.Method) -> <init>
    38:42:void <init>(java.lang.reflect.Method,boolean) -> <init>
    51:54:java.lang.reflect.Type[] getParameterTypes() -> getParameterTypes
    46:46:java.lang.Object invoke(java.lang.Object,java.lang.Object[]) -> invoke
    59:59:boolean isRunOnUIThread() -> isRunOnUIThread
    64:64:java.lang.String toString() -> toString
com.taobao.weex.bridge.ModuleFactoryImpl -> com.taobao.weex.bridge.ModuleFactoryImpl:
    26:31:void <init>(com.taobao.weex.bridge.ModuleFactory) -> <init>
    26:36:void <init>(com.taobao.weex.bridge.ModuleFactory,boolean) -> <init>
com.taobao.weex.bridge.NativeInvokeHelper -> com.taobao.weex.bridge.NativeInvokeHelper:
    44:46:void <init>(java.lang.String) -> <init>
    42:42:java.lang.String access$000(com.taobao.weex.bridge.NativeInvokeHelper) -> access$000
    49:89:java.lang.Object invoke(java.lang.Object,com.taobao.weex.bridge.Invoker,com.alibaba.fastjson.JSONArray) -> invoke
    93:124:java.lang.Object[] prepareArguments(java.lang.reflect.Type[],com.alibaba.fastjson.JSONArray) -> prepareArguments
com.taobao.weex.bridge.NativeInvokeHelper$1 -> com.taobao.weex.bridge.NativeInvokeHelper$1:
    58:58:void <init>(com.taobao.weex.bridge.NativeInvokeHelper,com.taobao.weex.bridge.Invoker,java.lang.String) -> <init>
    61:62:void onInvokeSuccess() -> onInvokeSuccess
com.taobao.weex.bridge.NativeInvokeHelper$2 -> com.taobao.weex.bridge.NativeInvokeHelper$2:
    70:70:void <init>(com.taobao.weex.bridge.NativeInvokeHelper,com.taobao.weex.bridge.Invoker,java.lang.Object,java.lang.Object[]) -> <init>
    73:84:void run() -> run
com.taobao.weex.bridge.RequestHandler -> com.taobao.weex.bridge.RequestHandler:
    44:44:void <init>() -> <init>
    52:52:com.taobao.weex.bridge.RequestHandler create() -> create
    90:112:void getBundleType(java.lang.String,java.lang.String,long) -> getBundleType
    57:85:void send(java.lang.String,java.lang.String,long) -> send
com.taobao.weex.bridge.RequestHandler$1 -> com.taobao.weex.bridge.RequestHandler$1:
    102:102:void <init>(com.taobao.weex.bridge.RequestHandler,long,java.lang.String,java.lang.String) -> <init>
    105:110:void run() -> run
com.taobao.weex.bridge.RequestHandler$OnHttpListenerInner -> com.taobao.weex.bridge.RequestHandler$OnHttpListenerInner:
    117:120:void <init>(com.taobao.weex.bridge.RequestHandler,com.taobao.weex.WXSDKInstance,long,java.lang.String) -> <init>
    114:114:long access$000(com.taobao.weex.bridge.RequestHandler$OnHttpListenerInner) -> access$000
    150:151:void onFail(com.taobao.weex.common.WXResponse) -> onFail
    124:146:void onSuccess(com.taobao.weex.common.WXResponse) -> onSuccess
com.taobao.weex.bridge.RequestHandler$OnHttpListenerInner$1 -> com.taobao.weex.bridge.RequestHandler$OnHttpListenerInner$1:
    136:136:void <init>(com.taobao.weex.bridge.RequestHandler$OnHttpListenerInner,java.lang.String,java.lang.String) -> <init>
    139:144:void run() -> run
com.taobao.weex.bridge.ResultCallbackManager -> com.taobao.weex.bridge.ResultCallbackManager:
    28:30:void <clinit>() -> <clinit>
    26:26:void <init>() -> <init>
    34:39:long generateCallbackId(com.taobao.weex.bridge.ResultCallback) -> generateCallbackId
    44:46:com.taobao.weex.bridge.ResultCallback removeCallbackById(long) -> removeCallbackById
com.taobao.weex.bridge.SimpleJSCallback -> com.taobao.weex.bridge.SimpleJSCallback:
    45:48:void <init>(java.lang.String,java.lang.String) -> <init>
    42:42:java.lang.String getCallbackId() -> getCallbackId
    53:57:void invoke(java.lang.Object) -> invoke
    61:62:void invokeAndKeepAlive(java.lang.Object) -> invokeAndKeepAlive
    34:35:void setInvokerCallback(com.taobao.weex.bridge.SimpleJSCallback$InvokerCallback) -> setInvokerCallback
com.taobao.weex.bridge.WXBridge -> com.taobao.weex.bridge.WXBridge:
    55:55:void <init>() -> <init>
    781:782:void bindMeasurementToRenderObject(long) -> bindMeasurementToRenderObject
    643:653:int callAddChildToRichtext(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.HashMap,java.util.HashMap) -> callAddChildToRichtext
    532:544:int callAddElement(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.util.HashMap,java.util.HashMap,java.util.HashSet,float[],float[],float[],boolean) -> callAddElement
    578:587:int callAddEvent(java.lang.String,java.lang.String,java.lang.String) -> callAddEvent
    742:748:int callAppendTreeCreateFinish(java.lang.String,java.lang.String) -> callAppendTreeCreateFinish
    513:524:int callCreateBody(java.lang.String,java.lang.String,java.lang.String,java.util.HashMap,java.util.HashMap,java.util.HashSet,float[],float[],float[]) -> callCreateBody
    718:724:int callCreateFinish(java.lang.String) -> callCreateFinish
    754:762:int callHasTransitionPros(java.lang.String,java.lang.String,java.util.HashMap) -> callHasTransitionPros
    703:712:int callLayout(java.lang.String,java.lang.String,int,int,int,int,int,int,boolean,int) -> callLayout
    564:572:int callMoveElement(java.lang.String,java.lang.String,java.lang.String,int) -> callMoveElement
    268:277:int callNative(java.lang.String,byte[],java.lang.String) -> callNative
    283:286:int callNative(java.lang.String,java.lang.String,java.lang.String) -> callNative
    291:308:int callNative(java.lang.String,com.alibaba.fastjson.JSONArray,java.lang.String) -> callNative
    415:438:void callNativeComponent(java.lang.String,java.lang.String,java.lang.String,byte[],byte[]) -> callNativeComponent
    332:399:java.lang.Object callNativeModule(java.lang.String,java.lang.String,java.lang.String,byte[],byte[]) -> callNativeModule
    479:488:int callRefreshFinish(java.lang.String,byte[],java.lang.String) -> callRefreshFinish
    658:667:int callRemoveChildFromRichtext(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> callRemoveChildFromRichtext
    550:558:int callRemoveElement(java.lang.String,java.lang.String) -> callRemoveElement
    593:602:int callRemoveEvent(java.lang.String,java.lang.String,java.lang.String) -> callRemoveEvent
    730:736:int callRenderSuccess(java.lang.String) -> callRenderSuccess
    627:636:int callUpdateAttrs(java.lang.String,java.lang.String,java.util.HashMap) -> callUpdateAttrs
    464:473:int callUpdateFinish(java.lang.String,byte[],java.lang.String) -> callUpdateFinish
    687:696:int callUpdateRichtextChildAttr(java.lang.String,java.lang.String,java.util.HashMap,java.lang.String,java.lang.String) -> callUpdateRichtextChildAttr
    673:682:int callUpdateRichtextStyle(java.lang.String,java.lang.String,java.util.HashMap,java.lang.String,java.lang.String) -> callUpdateRichtextStyle
    612:621:int callUpdateStyle(java.lang.String,java.lang.String,java.util.HashMap,java.util.HashMap,java.util.HashMap,java.util.HashMap) -> callUpdateStyle
    240:242:int createInstanceContext(java.lang.String,java.lang.String,java.lang.String,com.taobao.weex.bridge.WXJSObject[]) -> createInstanceContext
    247:248:int destoryInstance(java.lang.String,java.lang.String,java.lang.String,com.taobao.weex.bridge.WXJSObject[]) -> destoryInstance
    190:191:int execJS(java.lang.String,java.lang.String,java.lang.String,com.taobao.weex.bridge.WXJSObject[]) -> execJS
    253:254:java.lang.String execJSOnInstance(java.lang.String,java.lang.String,int) -> execJSOnInstance
    228:229:int execJSService(java.lang.String) -> execJSService
    196:202:void execJSWithCallback(java.lang.String,java.lang.String,java.lang.String,com.taobao.weex.bridge.WXJSObject[],com.taobao.weex.bridge.ResultCallback) -> execJSWithCallback
    922:923:void fireEventOnDataRenderNode(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> fireEventOnDataRenderNode
    811:812:void forceLayout(java.lang.String) -> forceLayout
    791:791:long[] getFirstScreenRenderTime(java.lang.String) -> getFirstScreenRenderTime
    768:776:com.taobao.weex.layout.ContentBoxMeasurement getMeasurementFunc(java.lang.String,long) -> getMeasurementFunc
    796:796:long[] getRenderFinishTime(java.lang.String) -> getRenderFinishTime
    168:168:int initFramework(java.lang.String,com.taobao.weex.bridge.WXParams) -> initFramework
    174:175:int initFrameworkEnv(java.lang.String,com.taobao.weex.bridge.WXParams,java.lang.String,boolean) -> initFrameworkEnv
    926:927:void invokeCallbackOnDataRender(java.lang.String,java.lang.String,java.lang.String,boolean) -> invokeCallbackOnDataRender
    841:842:void markDirty(java.lang.String,java.lang.String,boolean) -> markDirty
    816:816:boolean notifyLayout(java.lang.String) -> notifyLayout
    806:807:void onInstanceClose(java.lang.String) -> onInstanceClose
    206:214:void onNativePerformanceDataUpdate(java.lang.String,java.util.Map) -> onNativePerformanceDataUpdate
    219:224:void onReceivedResult(long,byte[]) -> onReceivedResult
    184:186:void refreshInstance(java.lang.String,java.lang.String,java.lang.String,com.taobao.weex.bridge.WXJSObject[]) -> refreshInstance
    934:935:void registerComponentOnDataRenderNode(java.lang.String) -> registerComponentOnDataRenderNode
    884:885:void registerCoreEnv(java.lang.String,java.lang.String) -> registerCoreEnv
    930:931:void registerModuleOnDataRenderNode(java.lang.String) -> registerModuleOnDataRenderNode
    937:938:void reloadPageLayout(java.lang.String) -> reloadPageLayout
    874:875:void removeInstanceRenderType(java.lang.String) -> removeInstanceRenderType
    313:314:void reportJSException(java.lang.String,java.lang.String,java.lang.String) -> reportJSException
    889:919:void reportNativeInitStatus(java.lang.String,java.lang.String) -> reportNativeInitStatus
    494:506:void reportServerCrash(java.lang.String,java.lang.String) -> reportServerCrash
    457:459:void resetWXBridge(boolean) -> resetWXBridge
    801:802:void setDefaultHeightAndWidthIntoRootDom(java.lang.String,float,float,boolean,boolean) -> setDefaultHeightAndWidthIntoRootDom
    846:847:void setDeviceDisplay(java.lang.String,float,float,float) -> setDeviceDisplay
    941:942:void setDeviceDisplayOfPage(java.lang.String,float,float) -> setDeviceDisplayOfPage
    869:870:void setFlexDirectionDef(java.lang.String) -> setFlexDirectionDef
    856:860:void setInstanceRenderType(java.lang.String,java.lang.String) -> setInstanceRenderType
    449:453:void setJSFrmVersion(java.lang.String) -> setJSFrmVersion
    162:164:void setLogType(float,boolean) -> setLogType
    826:827:void setMargin(java.lang.String,java.lang.String,com.taobao.weex.dom.CSSShorthand$EDGE,float) -> setMargin
    831:832:void setPadding(java.lang.String,java.lang.String,com.taobao.weex.dom.CSSShorthand$EDGE,float) -> setPadding
    879:880:void setPageArgument(java.lang.String,java.lang.String,java.lang.String) -> setPageArgument
    836:837:void setPosition(java.lang.String,java.lang.String,com.taobao.weex.dom.CSSShorthand$EDGE,float) -> setPosition
    786:787:void setRenderContainerWrapContent(boolean,java.lang.String) -> setRenderContainerWrapContent
    851:852:void setStyleHeight(java.lang.String,java.lang.String,float) -> setStyleHeight
    821:822:void setStyleWidth(java.lang.String,java.lang.String,float) -> setStyleWidth
    443:444:void setTimeoutNative(java.lang.String,java.lang.String) -> setTimeoutNative
    864:865:void setViewPortWidth(java.lang.String,float) -> setViewPortWidth
    235:236:void takeHeapSnapshot(java.lang.String) -> takeHeapSnapshot
    156:158:void updateInitFrameworkParams(java.lang.String,java.lang.String,java.lang.String) -> updateInitFrameworkParams
com.taobao.weex.bridge.WXBridgeManager -> com.taobao.weex.bridge.WXBridgeManager:
    154:2082:void <clinit>() -> <clinit>
    241:263:void <init>() -> <init>
    152:152:com.taobao.weex.common.IWXBridge access$000(com.taobao.weex.bridge.WXBridgeManager) -> access$000
    152:152:void access$100(com.taobao.weex.bridge.WXBridgeManager,boolean) -> access$100
    152:152:void access$1000(com.taobao.weex.bridge.WXBridgeManager,java.lang.String) -> access$1000
    152:152:java.util.List access$1100(com.taobao.weex.bridge.WXBridgeManager) -> access$1100
    152:152:void access$1200(com.taobao.weex.bridge.WXBridgeManager,java.util.Map,java.util.List) -> access$1200
    152:152:java.util.List access$1300(com.taobao.weex.bridge.WXBridgeManager) -> access$1300
    152:152:void access$1400(com.taobao.weex.bridge.WXBridgeManager,java.util.List,java.util.List) -> access$1400
    152:152:java.util.List access$1500(com.taobao.weex.bridge.WXBridgeManager) -> access$1500
    152:152:void access$1600(com.taobao.weex.bridge.WXBridgeManager,java.lang.String,java.util.List) -> access$1600
    152:152:java.lang.String access$1700() -> access$1700
    152:152:void access$1800(com.taobao.weex.bridge.WXBridgeManager,java.lang.String,java.lang.String,java.lang.String,com.taobao.weex.bridge.WXJSObject[]) -> access$1800
    152:152:boolean access$200() -> access$200
    152:152:void access$300(com.taobao.weex.bridge.WXBridgeManager,java.lang.String) -> access$300
    152:152:com.taobao.weex.bridge.WXHashMap access$400(com.taobao.weex.bridge.WXBridgeManager) -> access$400
    152:152:java.lang.String access$500(com.taobao.weex.bridge.WXBridgeManager,java.lang.String,java.lang.String,int) -> access$500
    152:152:void access$600(com.taobao.weex.bridge.WXBridgeManager,java.lang.String,java.lang.String,java.lang.String,com.taobao.weex.bridge.WXJSObject[],com.taobao.weex.bridge.ResultCallback,boolean) -> access$600
    152:152:void access$700(com.taobao.weex.bridge.WXBridgeManager,java.lang.String,com.taobao.weex.common.WXRefreshData) -> access$700
    152:152:void access$800(com.taobao.weex.bridge.WXBridgeManager,com.taobao.weex.WXSDKInstance,com.taobao.weex.Script,java.util.Map,java.lang.String) -> access$800
    152:152:void access$900(com.taobao.weex.bridge.WXBridgeManager,java.lang.String) -> access$900
    1207:1238:void addJSEventTask(java.lang.String,java.lang.String,java.util.List,java.lang.Object[]) -> addJSEventTask
    1241:1242:void addJSTask(java.lang.String,java.lang.String,java.lang.Object[]) -> addJSTask
    2060:2067:java.lang.String argsToJSON(com.taobao.weex.bridge.WXJSObject[]) -> argsToJSON
    2257:2299:com.taobao.weex.bridge.WXParams assembleDefaultOptions() -> assembleDefaultOptions
    1119:1152:void asyncCallJSEventVoidResult(java.lang.String,java.lang.String,java.util.List,java.lang.Object[]) -> asyncCallJSEventVoidResult
    1158:1204:void asyncCallJSEventWithResult(com.taobao.weex.bridge.EventResult,java.lang.String,java.lang.String,java.util.List,java.lang.Object[]) -> asyncCallJSEventWithResult
    3448:3451:void bindMeasurementToRenderObject(long) -> bindMeasurementToRenderObject
    3114:3151:int callAddChildToRichtext(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.HashMap,java.util.HashMap) -> callAddChildToRichtext
    2779:2822:int callAddElement(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.util.HashMap,java.util.HashMap,java.util.HashSet,float[],float[],float[],boolean) -> callAddElement
    2913:2949:int callAddEvent(java.lang.String,java.lang.String,java.lang.String) -> callAddEvent
    3331:3361:int callAppendTreeCreateFinish(java.lang.String,java.lang.String) -> callAppendTreeCreateFinish
    2737:2773:int callCreateBody(java.lang.String,java.lang.String,java.lang.String,java.util.HashMap,java.util.HashMap,java.util.HashSet,float[],float[],float[]) -> callCreateBody
    3366:3399:int callCreateFinish(java.lang.String) -> callCreateFinish
    3614:3624:int callHasTransitionPros(java.lang.String,java.lang.String,java.util.HashMap) -> callHasTransitionPros
    3271:3326:int callLayout(java.lang.String,java.lang.String,int,int,int,int,int,int,boolean,int) -> callLayout
    491:491:java.lang.Object callModuleMethod(java.lang.String,java.lang.String,java.lang.String,com.alibaba.fastjson.JSONArray) -> callModuleMethod
    495:527:java.lang.Object callModuleMethod(java.lang.String,java.lang.String,java.lang.String,com.alibaba.fastjson.JSONArray,com.alibaba.fastjson.JSONObject) -> callModuleMethod
    2872:2908:int callMoveElement(java.lang.String,java.lang.String,java.lang.String,int) -> callMoveElement
    759:821:int callNative(java.lang.String,com.alibaba.fastjson.JSONArray,java.lang.String) -> callNative
    715:747:java.lang.Object callNativeComponent(java.lang.String,java.lang.String,java.lang.String,com.alibaba.fastjson.JSONArray,java.lang.Object) -> callNativeComponent
    640:671:java.lang.Object callNativeModule(java.lang.String,java.lang.String,java.lang.String,com.alibaba.fastjson.JSONArray,java.lang.Object) -> callNativeModule
    676:710:java.lang.Object callNativeModule(java.lang.String,java.lang.String,java.lang.String,com.alibaba.fastjson.JSONArray,com.alibaba.fastjson.JSONObject) -> callNativeModule
    867:904:int callRefreshFinish(java.lang.String,java.lang.String) -> callRefreshFinish
    3155:3189:int callRemoveChildFromRichtext(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> callRemoveChildFromRichtext
    2827:2867:int callRemoveElement(java.lang.String,java.lang.String) -> callRemoveElement
    2954:2990:int callRemoveEvent(java.lang.String,java.lang.String,java.lang.String) -> callRemoveEvent
    3404:3435:int callRenderSuccess(java.lang.String) -> callRenderSuccess
    1002:1048:void callReportCrash(java.lang.String,java.lang.String,java.lang.String,java.util.Map) -> callReportCrash
    909:968:int callReportCrashReloadPage(java.lang.String,java.lang.String) -> callReportCrashReloadPage
    3041:3076:int callUpdateAttrs(java.lang.String,java.lang.String,java.util.HashMap) -> callUpdateAttrs
    827:861:int callUpdateFinish(java.lang.String,java.lang.String) -> callUpdateFinish
    3231:3266:int callUpdateRichtextChildAttr(java.lang.String,java.lang.String,java.util.HashMap,java.lang.String,java.lang.String) -> callUpdateRichtextChildAttr
    3193:3228:int callUpdateRichtextStyle(java.lang.String,java.lang.String,java.util.HashMap,java.lang.String,java.lang.String) -> callUpdateRichtextStyle
    2998:3036:int callUpdateStyle(java.lang.String,java.lang.String,java.util.HashMap,java.util.HashMap,java.util.HashMap,java.util.HashMap) -> callUpdateStyle
    1368:1369:void callback(java.lang.String,java.lang.String,java.lang.String) -> callback
    1377:1378:void callback(java.lang.String,java.lang.String,java.util.Map) -> callback
    1391:1392:void callback(java.lang.String,java.lang.String,java.lang.Object,boolean) -> callback
    1404:1416:void callbackJavascript(java.lang.String,java.lang.String,java.lang.Object,boolean) -> callbackJavascript
    1419:1442:void callbackJavascriptOnDataRender(java.lang.String,java.lang.String,java.lang.Object,boolean) -> callbackJavascriptOnDataRender
    311:335:void checkJsEngineMultiThread() -> checkJsEngineMultiThread
    1357:1357:boolean checkMainThread() -> checkMainThread
    1500:1520:void commitJscCrashAlarmMonitor(java.lang.String,com.taobao.weex.common.WXErrorCode,java.lang.String,java.lang.String,java.lang.String,java.util.Map) -> commitJscCrashAlarmMonitor
    1539:1540:void createInstance(java.lang.String,java.lang.String,java.util.Map,java.lang.String) -> createInstance
    1544:1586:void createInstance(java.lang.String,com.taobao.weex.Script,java.util.Map,java.lang.String) -> createInstance
    2517:2525:void destroy() -> destroy
    1852:1868:void destroyInstance(java.lang.String) -> destroyInstance
    2589:2644:void doReportJSException(java.lang.String,java.lang.String,com.taobao.weex.common.WXErrorCode,java.lang.String) -> doReportJSException
    465:468:java.lang.String dumpIpcPageInfo() -> dumpIpcPageInfo
    2022:2029:void execJSOnInstance(com.taobao.weex.bridge.EventResult,java.lang.String,java.lang.String,int) -> execJSOnInstance
    2385:2391:void execJSService(java.lang.String) -> execJSService
    2308:2338:void execRegisterFailTask() -> execRegisterFailTask
    1976:1989:android.util.Pair extractCallbackArgs(java.lang.String) -> extractCallbackArgs
    1267:1268:void fireEvent(java.lang.String,java.lang.String,java.lang.String,java.util.Map) -> fireEvent
    1282:1283:void fireEvent(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map) -> fireEvent
    1329:1354:void fireEventOnDataRenderNode(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map) -> fireEventOnDataRenderNode
    1290:1291:void fireEventOnNode(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map) -> fireEventOnNode
    1299:1300:void fireEventOnNode(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List) -> fireEventOnNode
    1305:1325:void fireEventOnNode(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.List,com.taobao.weex.bridge.EventResult) -> fireEventOnNode
    3469:3472:void forceLayout(java.lang.String) -> forceLayout
    1801:1843:com.taobao.weex.bridge.WXBridgeManager$BundType getBundleType(java.lang.String,java.lang.String) -> getBundleType
    3516:3519:long[] getFirstScreenRenderTime(java.lang.String) -> getFirstScreenRenderTime
    2303:2303:com.taobao.weex.bridge.WXParams getInitParams() -> getInitParams
    266:273:com.taobao.weex.bridge.WXBridgeManager getInstance() -> getInstance
    2699:2703:android.os.Looper getJSLooper() -> getJSLooper
    3439:3444:com.taobao.weex.layout.ContentBoxMeasurement getMeasurementFunc(java.lang.String,long) -> getMeasurementFunc
    1051:1053:void getNextTick(java.lang.String,java.lang.String) -> getNextTick
    1056:1058:void getNextTick(java.lang.String) -> getNextTick
    3523:3526:long[] getRenderFinishTime(java.lang.String) -> getRenderFinishTime
    3658:3673:java.lang.String getWeexCoreThreadStackTrace() -> getWeexCoreThreadStackTrace
    1896:1926:boolean handleMessage(android.os.Message) -> handleMessage
    2085:2201:void initFramework(java.lang.String) -> initFramework
    1256:1262:void initScriptsFramework(java.lang.String) -> initScriptsFramework
    391:462:void initWXBridge(boolean) -> initWXBridge
    2214:2254:void invokeCallJSBatch(android.os.Message) -> invokeCallJSBatch
    1591:1767:void invokeCreateInstance(com.taobao.weex.WXSDKInstance,com.taobao.weex.Script,java.util.Map,java.lang.String) -> invokeCreateInstance
    1995:2004:int invokeCreateInstanceContext(java.lang.String,java.lang.String,java.lang.String,com.taobao.weex.bridge.WXJSObject[],boolean) -> invokeCreateInstanceContext
    2010:2019:void invokeDestoryInstance(java.lang.String,java.lang.String,java.lang.String,com.taobao.weex.bridge.WXJSObject[],boolean) -> invokeDestoryInstance
    1876:1892:void invokeDestroyInstance(java.lang.String) -> invokeDestroyInstance
    1930:1931:void invokeExecJS(java.lang.String,java.lang.String,java.lang.String,com.taobao.weex.bridge.WXJSObject[]) -> invokeExecJS
    1935:1972:void invokeExecJS(java.lang.String,java.lang.String,java.lang.String,com.taobao.weex.bridge.WXJSObject[],boolean) -> invokeExecJS
    2033:2040:java.lang.String invokeExecJSOnInstance(java.lang.String,java.lang.String,int) -> invokeExecJSOnInstance
    2395:2415:void invokeExecJSService(java.lang.String,java.util.List) -> invokeExecJSService
    2045:2057:void invokeExecJSWithCallback(java.lang.String,java.lang.String,java.lang.String,com.taobao.weex.bridge.WXJSObject[],com.taobao.weex.bridge.ResultCallback,boolean) -> invokeExecJSWithCallback
    2071:2079:void invokeInitFramework(android.os.Message) -> invokeInitFramework
    1461:1496:void invokeRefreshInstance(java.lang.String,com.taobao.weex.common.WXRefreshData) -> invokeRefreshInstance
    2471:2514:void invokeRegisterComponents(java.util.List,java.util.List) -> invokeRegisterComponents
    2422:2468:void invokeRegisterModules(java.util.Map,java.util.List) -> invokeRegisterModules
    380:380:boolean isJSFrameworkInit() -> isJSFrameworkInit
    2418:2418:boolean isJSThread() -> isJSThread
    1523:1524:boolean isSkipFrameworkInit(java.lang.String) -> isSkipFrameworkInit
    1528:1531:boolean isSkipFrameworkInit(com.taobao.weex.WXSDKInstance) -> isSkipFrameworkInit
    307:307:boolean jsEngineMultiThreadEnable() -> jsEngineMultiThreadEnable
    1083:1094:void loadJsBundleInPreInitMode(java.lang.String,java.lang.String) -> loadJsBundleInPreInitMode
    3591:3594:void markDirty(java.lang.String,java.lang.String,boolean) -> markDirty
    1849:1849:void mock(java.lang.String) -> mock
    3461:3464:boolean notifyLayout(java.lang.String) -> notifyLayout
    2707:2716:void notifySerializeCodeCache() -> notifySerializeCodeCache
    2657:2657:void notifyTrimMemory() -> notifyTrimMemory
    3480:3483:void onInstanceClose(java.lang.String) -> onInstanceClose
    296:304:void onInteractionTimeUpdate(java.lang.String) -> onInteractionTimeUpdate
    3635:3639:void onJsFrameWorkInitSuccees() -> onJsFrameWorkInitSuccees
    1770:1789:com.taobao.weex.bridge.WXJSObject optionObjConvert(boolean,com.taobao.weex.bridge.WXBridgeManager$BundType,com.taobao.weex.bridge.WXJSObject) -> optionObjConvert
    558:559:void post(java.lang.Runnable) -> post
    579:586:void post(java.lang.Runnable,java.lang.Object,com.taobao.weex.WXSDKInstance,java.lang.String) -> post
    589:590:void post(java.lang.Runnable,java.lang.Object) -> post
    594:598:void postDelay(java.lang.Runnable,long) -> postDelay
    562:571:void postWithName(java.lang.Runnable,com.taobao.weex.WXSDKInstance,java.lang.String) -> postWithName
    1448:1457:void refreshInstance(java.lang.String,com.taobao.weex.common.WXRefreshData) -> refreshInstance
    2366:2382:void registerComponents(java.util.List) -> registerComponents
    3628:3632:void registerCoreEnv(java.lang.String,java.lang.String) -> registerCoreEnv
    2648:2651:void registerDomModule() -> registerDomModule
    2348:2360:void registerModules(java.util.Map) -> registerModules
    3602:3605:void reloadPageLayout(java.lang.String) -> reloadPageLayout
    631:636:void removeMessage(int,java.lang.Object) -> removeMessage
    1871:1872:void removeTaskByInstance(java.lang.String) -> removeTaskByInstance
    2532:2586:void reportJSException(java.lang.String,java.lang.String,java.lang.String) -> reportJSException
    535:539:void restart() -> restart
    1245:1249:void sendMessage(java.lang.String,int) -> sendMessage
    623:628:void sendMessageDelayed(android.os.Message,long) -> sendMessageDelayed
    3492:3495:void setDefaultRootSize(java.lang.String,float,float,boolean,boolean) -> setDefaultRootSize
    3530:3536:void setDeviceDisplay(java.lang.String,float,float,float) -> setDeviceDisplay
    3608:3611:void setDeviceDisplayOfPage(java.lang.String,float,float) -> setDeviceDisplayOfPage
    3080:3110:void setExceedGPULimitComponentsInfo(java.lang.String,java.lang.String,com.taobao.weex.ui.action.GraphicSize) -> setExceedGPULimitComponentsInfo
    3652:3655:void setFlexDirectionDef(java.lang.String) -> setFlexDirectionDef
    575:576:void setInterceptor(com.taobao.weex.utils.batch.Interceptor) -> setInterceptor
    384:388:void setJSFrameworkInit(boolean) -> setJSFrameworkInit
    601:609:void setLogLevel(int,boolean) -> setLogLevel
    3573:3576:void setMargin(java.lang.String,java.lang.String,com.taobao.weex.dom.CSSShorthand$EDGE,float) -> setMargin
    3579:3582:void setPadding(java.lang.String,java.lang.String,com.taobao.weex.dom.CSSShorthand$EDGE,float) -> setPadding
    3597:3600:void setPageArgument(java.lang.String,java.lang.String,java.lang.String) -> setPageArgument
    3585:3588:void setPosition(java.lang.String,java.lang.String,com.taobao.weex.dom.CSSShorthand$EDGE,float) -> setPosition
    3498:3501:void setRenderContentWrapContentToCore(boolean,java.lang.String) -> setRenderContentWrapContentToCore
    337:374:void setSandBoxContext(boolean) -> setSandBoxContext
    546:554:void setStackTopInstance(java.lang.String) -> setStackTopInstance
    3510:3513:void setStyleHeight(java.lang.String,java.lang.String,float) -> setStyleHeight
    3504:3507:void setStyleWidth(java.lang.String,java.lang.String,float) -> setStyleWidth
    612:620:void setTimeout(java.lang.String,java.lang.String) -> setTimeout
    277:293:void setUseSingleProcess(boolean) -> setUseSingleProcess
    3642:3645:void setViewPortWidth(java.lang.String,float) -> setViewPortWidth
    972:997:boolean shouldReloadCurrentInstance(java.lang.String) -> shouldReloadCurrentInstance
    472:488:void stopRemoteDebug() -> stopRemoteDebug
    1100:1114:com.taobao.weex.bridge.EventResult syncCallJSEventWithResult(java.lang.String,java.lang.String,java.util.List,java.lang.Object[]) -> syncCallJSEventWithResult
    1061:1078:java.lang.String syncExecJsOnInstanceWithResult(java.lang.String,java.lang.String,int) -> syncExecJsOnInstanceWithResult
    2719:2724:void takeJSHeapSnapshot(java.lang.String) -> takeJSHeapSnapshot
    2204:2210:void trackComponentAndModulesTime() -> trackComponentAndModulesTime
    2664:2694:void updateGlobalConfig(java.lang.String) -> updateGlobalConfig
    3539:3570:void updateInitDeviceParams(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> updateInitDeviceParams
com.taobao.weex.bridge.WXBridgeManager$1 -> com.taobao.weex.bridge.WXBridgeManager$1:
    296:296:void <init>(com.taobao.weex.bridge.WXBridgeManager,java.lang.String) -> <init>
    299:302:void run() -> run
com.taobao.weex.bridge.WXBridgeManager$10 -> com.taobao.weex.bridge.WXBridgeManager$10:
    1101:1101:void <init>(com.taobao.weex.bridge.WXBridgeManager,java.util.concurrent.CountDownLatch) -> <init>
    1104:1106:void onCallback(java.lang.Object) -> onCallback
com.taobao.weex.bridge.WXBridgeManager$11 -> com.taobao.weex.bridge.WXBridgeManager$11:
    1119:1119:void <init>(com.taobao.weex.bridge.WXBridgeManager,java.lang.Object[],java.util.List,java.lang.String,java.lang.String) -> <init>
    1123:1150:void run() -> run
com.taobao.weex.bridge.WXBridgeManager$12 -> com.taobao.weex.bridge.WXBridgeManager$12:
    1158:1158:void <init>(com.taobao.weex.bridge.WXBridgeManager,java.lang.Object[],java.util.List,java.lang.String,java.lang.String,com.taobao.weex.bridge.EventResult) -> <init>
    1161:1202:void run() -> run
com.taobao.weex.bridge.WXBridgeManager$12$1 -> com.taobao.weex.bridge.WXBridgeManager$12$1:
    1186:1186:void <init>(com.taobao.weex.bridge.WXBridgeManager$12) -> <init>
    1186:1186:void onReceiveResult(java.lang.Object) -> onReceiveResult
    1189:1193:void onReceiveResult(byte[]) -> onReceiveResult
com.taobao.weex.bridge.WXBridgeManager$13 -> com.taobao.weex.bridge.WXBridgeManager$13:
    1207:1207:void <init>(com.taobao.weex.bridge.WXBridgeManager,java.lang.Object[],java.util.List,java.lang.String,java.lang.String) -> <init>
    1210:1236:void run() -> run
com.taobao.weex.bridge.WXBridgeManager$14 -> com.taobao.weex.bridge.WXBridgeManager$14:
    1329:1329:void <init>(com.taobao.weex.bridge.WXBridgeManager,java.lang.String,java.util.Map,java.lang.String,java.lang.String,java.util.Map) -> <init>
    1333:1352:void run() -> run
com.taobao.weex.bridge.WXBridgeManager$15 -> com.taobao.weex.bridge.WXBridgeManager$15:
    1419:1419:void <init>(com.taobao.weex.bridge.WXBridgeManager,java.lang.Object,java.lang.String,java.lang.String,boolean) -> <init>
    1423:1440:void run() -> run
com.taobao.weex.bridge.WXBridgeManager$16 -> com.taobao.weex.bridge.WXBridgeManager$16:
    1451:1451:void <init>(com.taobao.weex.bridge.WXBridgeManager,java.lang.String,com.taobao.weex.common.WXRefreshData) -> <init>
    1454:1455:void run() -> run
com.taobao.weex.bridge.WXBridgeManager$17 -> com.taobao.weex.bridge.WXBridgeManager$17:
    1563:1563:void <init>(com.taobao.weex.bridge.WXBridgeManager) -> <init>
    1566:1567:void run() -> run
com.taobao.weex.bridge.WXBridgeManager$18 -> com.taobao.weex.bridge.WXBridgeManager$18:
    1574:1574:void <init>(com.taobao.weex.bridge.WXBridgeManager,java.lang.String,com.taobao.weex.WXSDKInstance,com.taobao.weex.Script,java.util.Map,java.lang.String) -> <init>
    1577:1584:void run() -> run
com.taobao.weex.bridge.WXBridgeManager$19 -> com.taobao.weex.bridge.WXBridgeManager$19:
    1861:1861:void <init>(com.taobao.weex.bridge.WXBridgeManager,java.lang.String) -> <init>
    1864:1866:void run() -> run
com.taobao.weex.bridge.WXBridgeManager$2 -> com.taobao.weex.bridge.WXBridgeManager$2:
    327:327:void <init>(com.taobao.weex.bridge.WXBridgeManager) -> <init>
    330:331:void run() -> run
com.taobao.weex.bridge.WXBridgeManager$20 -> com.taobao.weex.bridge.WXBridgeManager$20:
    1959:1959:void <init>(com.taobao.weex.bridge.WXBridgeManager,java.lang.String,java.lang.String,java.lang.String,com.taobao.weex.bridge.WXJSObject[]) -> <init>
    1962:1963:void run() -> run
com.taobao.weex.bridge.WXBridgeManager$21 -> com.taobao.weex.bridge.WXBridgeManager$21:
    2022:2022:void <init>(com.taobao.weex.bridge.WXBridgeManager,java.lang.String,java.lang.String,int,com.taobao.weex.bridge.EventResult) -> <init>
    2025:2027:void run() -> run
com.taobao.weex.bridge.WXBridgeManager$22 -> com.taobao.weex.bridge.WXBridgeManager$22:
    2204:2204:void <init>(com.taobao.weex.bridge.WXBridgeManager) -> <init>
    2207:2208:void run() -> run
com.taobao.weex.bridge.WXBridgeManager$23 -> com.taobao.weex.bridge.WXBridgeManager$23:
    2352:2352:void <init>(com.taobao.weex.bridge.WXBridgeManager,java.util.Map) -> <init>
    2355:2356:void run() -> run
com.taobao.weex.bridge.WXBridgeManager$24 -> com.taobao.weex.bridge.WXBridgeManager$24:
    2370:2370:void <init>(com.taobao.weex.bridge.WXBridgeManager,java.util.List) -> <init>
    2373:2374:void run() -> run
com.taobao.weex.bridge.WXBridgeManager$25 -> com.taobao.weex.bridge.WXBridgeManager$25:
    2385:2385:void <init>(com.taobao.weex.bridge.WXBridgeManager,java.lang.String) -> <init>
    2388:2389:void run() -> run
com.taobao.weex.bridge.WXBridgeManager$26 -> com.taobao.weex.bridge.WXBridgeManager$26:
    2670:2670:void <init>() -> <init>
    2673:2686:void run() -> run
com.taobao.weex.bridge.WXBridgeManager$27 -> com.taobao.weex.bridge.WXBridgeManager$27:
    2707:2707:void <init>(com.taobao.weex.bridge.WXBridgeManager) -> <init>
    2710:2714:void run() -> run
com.taobao.weex.bridge.WXBridgeManager$28 -> com.taobao.weex.bridge.WXBridgeManager$28:
    3530:3530:void <init>(com.taobao.weex.bridge.WXBridgeManager,java.lang.String,float,float,float) -> <init>
    3533:3534:void run() -> run
com.taobao.weex.bridge.WXBridgeManager$29 -> com.taobao.weex.bridge.WXBridgeManager$29:
    3542:3542:void <init>(com.taobao.weex.bridge.WXBridgeManager,java.lang.String) -> <init>
    3545:3546:void run() -> run
com.taobao.weex.bridge.WXBridgeManager$3 -> com.taobao.weex.bridge.WXBridgeManager$3:
    355:355:void <init>(com.taobao.weex.bridge.WXBridgeManager) -> <init>
    358:370:void run() -> run
com.taobao.weex.bridge.WXBridgeManager$30 -> com.taobao.weex.bridge.WXBridgeManager$30:
    3548:3548:void <init>(com.taobao.weex.bridge.WXBridgeManager,java.lang.String) -> <init>
    3551:3552:void run() -> run
com.taobao.weex.bridge.WXBridgeManager$31 -> com.taobao.weex.bridge.WXBridgeManager$31:
    3555:3555:void <init>(com.taobao.weex.bridge.WXBridgeManager,java.lang.String) -> <init>
    3558:3559:void run() -> run
com.taobao.weex.bridge.WXBridgeManager$32 -> com.taobao.weex.bridge.WXBridgeManager$32:
    3563:3563:void <init>(com.taobao.weex.bridge.WXBridgeManager,java.lang.String) -> <init>
    3566:3567:void run() -> run
com.taobao.weex.bridge.WXBridgeManager$4 -> com.taobao.weex.bridge.WXBridgeManager$4:
    417:417:void <init>(com.taobao.weex.bridge.WXBridgeManager) -> <init>
    425:425:com.taobao.weex.bridge.WXDebugJsBridge getWXDebugJsBridge() -> getWXDebugJsBridge
    420:420:com.taobao.weex.bridge.WXBridgeManager getWXJSManager() -> getWXJSManager
com.taobao.weex.bridge.WXBridgeManager$5 -> com.taobao.weex.bridge.WXBridgeManager$5:
    547:547:void <init>(com.taobao.weex.bridge.WXBridgeManager,java.lang.String) -> <init>
    551:552:void run() -> run
com.taobao.weex.bridge.WXBridgeManager$6 -> com.taobao.weex.bridge.WXBridgeManager$6:
    601:601:void <init>(com.taobao.weex.bridge.WXBridgeManager,int,boolean) -> <init>
    604:607:void run() -> run
com.taobao.weex.bridge.WXBridgeManager$7 -> com.taobao.weex.bridge.WXBridgeManager$7:
    1011:1011:void <init>(com.taobao.weex.bridge.WXBridgeManager,java.lang.String,java.lang.String,java.lang.String,java.util.Map) -> <init>
    1014:1045:void run() -> run
com.taobao.weex.bridge.WXBridgeManager$8 -> com.taobao.weex.bridge.WXBridgeManager$8:
    1062:1062:void <init>(com.taobao.weex.bridge.WXBridgeManager,java.util.concurrent.CountDownLatch) -> <init>
    1065:1067:void onCallback(java.lang.Object) -> onCallback
com.taobao.weex.bridge.WXBridgeManager$9 -> com.taobao.weex.bridge.WXBridgeManager$9:
    1083:1083:void <init>(com.taobao.weex.bridge.WXBridgeManager,java.lang.String,java.lang.String) -> <init>
    1086:1092:void run() -> run
com.taobao.weex.bridge.WXBridgeManager$BundType -> com.taobao.weex.bridge.WXBridgeManager$BundType:
    216:219:void <clinit>() -> <clinit>
    216:216:void <init>(java.lang.String,int) -> <init>
    216:216:com.taobao.weex.bridge.WXBridgeManager$BundType valueOf(java.lang.String) -> valueOf
    216:216:com.taobao.weex.bridge.WXBridgeManager$BundType[] values() -> values
com.taobao.weex.bridge.WXBridgeManager$TimerInfo -> com.taobao.weex.bridge.WXBridgeManager$TimerInfo:
    2726:2726:void <init>() -> <init>
com.taobao.weex.bridge.WXDebugJsBridge -> com.taobao.weex.bridge.WXDebugJsBridge:
    29:29:void <init>() -> <init>
    54:55:void jsHandleCallAddElement(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> jsHandleCallAddElement
    64:65:void jsHandleCallCreateBody(java.lang.String,java.lang.String) -> jsHandleCallCreateBody
    47:48:void jsHandleCallNativeComponent(java.lang.String,java.lang.String,java.lang.String,byte[],byte[]) -> jsHandleCallNativeComponent
    40:42:void jsHandleCallNativeModule(java.lang.String,java.lang.String,java.lang.String,byte[],byte[]) -> jsHandleCallNativeModule
    76:77:void jsHandleCallUpdateAttrs(java.lang.String,java.lang.String,java.lang.String) -> jsHandleCallUpdateAttrs
    82:84:void jsHandleCallUpdateStyle(java.lang.String,java.lang.String,java.lang.String) -> jsHandleCallUpdateStyle
com.taobao.weex.bridge.WXHashMap -> com.taobao.weex.bridge.WXHashMap:
    29:33:void <init>() -> <init>
    79:79:java.util.Stack getInstanceStack() -> getInstanceStack
    63:63:java.lang.String getStackTopInstanceId() -> getStackTopInstanceId
    83:83:java.lang.String getTag() -> getTag
    38:44:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    49:49:java.lang.Object remove(java.lang.Object) -> remove
    53:54:java.lang.Object removeFromMapAndStack(java.lang.Object) -> removeFromMapAndStack
    72:76:void setStackTopInstance(java.lang.String) -> setStackTopInstance
    87:88:void setTag(java.lang.String) -> setTag
com.taobao.weex.bridge.WXJSObject -> com.taobao.weex.bridge.WXJSObject:
    35:38:void <init>(int,java.lang.Object) -> <init>
    40:44:void <init>(int,java.lang.Object,java.lang.String) -> <init>
    46:69:void <init>(java.lang.Object) -> <init>
com.taobao.weex.bridge.WXModuleManager -> com.taobao.weex.bridge.WXModuleManager:
    59:68:void <clinit>() -> <clinit>
    54:54:void <init>() -> <init>
    54:54:java.util.concurrent.ConcurrentMap access$000() -> access$000
    54:54:java.util.Map access$100() -> access$100
    206:241:java.lang.Object callModuleMethod(java.lang.String,java.lang.String,java.lang.String,com.alibaba.fastjson.JSONArray) -> callModuleMethod
    466:469:void createDomModule(com.taobao.weex.WXSDKInstance) -> createDomModule
    472:473:void destoryDomModule(java.lang.String) -> destoryDomModule
    448:463:void destroyInstanceModules(java.lang.String) -> destroyInstanceModules
    248:257:java.lang.Object dispatchCallModuleMethod(com.taobao.weex.WXSDKInstance,com.taobao.weex.common.WXModule,com.alibaba.fastjson.JSONArray,com.taobao.weex.bridge.Invoker) -> dispatchCallModuleMethod
    267:295:com.taobao.weex.common.WXModule findModule(java.lang.String,java.lang.String,com.taobao.weex.bridge.ModuleFactory) -> findModule
    567:578:java.util.ArrayList getBlackList() -> getBlackList
    476:476:com.taobao.weex.ui.module.WXDomModule getDomModule(java.lang.String) -> getDomModule
    543:561:com.alibaba.fastjson.JSONObject getRegisterJsModules() -> getRegisterJsModules
    262:262:boolean hasModule(java.lang.String) -> hasModule
    583:598:com.alibaba.fastjson.JSONArray modulesToJSONArray(java.lang.String[],com.taobao.weex.bridge.ModuleFactory) -> modulesToJSONArray
    389:400:boolean onActivityBack(java.lang.String) -> onActivityBack
    303:315:void onActivityCreate(java.lang.String) -> onActivityCreate
    375:386:void onActivityDestroy(java.lang.String) -> onActivityDestroy
    333:344:void onActivityPause(java.lang.String) -> onActivityPause
    405:416:void onActivityResult(java.lang.String,int,int,android.content.Intent) -> onActivityResult
    347:358:void onActivityResume(java.lang.String) -> onActivityResume
    319:330:void onActivityStart(java.lang.String) -> onActivityStart
    361:372:void onActivityStop(java.lang.String) -> onActivityStop
    419:430:boolean onCreateOptionsMenu(java.lang.String,android.view.Menu) -> onCreateOptionsMenu
    434:445:void onRequestPermissionsResult(java.lang.String,int,java.lang.String[],int[]) -> onRequestPermissionsResult
    199:202:boolean registerJSModule(java.lang.String,com.taobao.weex.bridge.ModuleFactory) -> registerJSModule
    72:121:boolean registerModule(java.util.Map) -> registerModule
    128:174:boolean registerModule(java.lang.String,com.taobao.weex.bridge.ModuleFactory,boolean) -> registerModule
    179:195:boolean registerNativeModule(java.lang.String,com.taobao.weex.bridge.ModuleFactory) -> registerNativeModule
    495:506:void registerWhenCreateInstance() -> registerWhenCreateInstance
    480:489:void reload() -> reload
    512:517:void resetAllModuleState() -> resetAllModuleState
    525:536:void resetModuleState(java.lang.String,boolean) -> resetModuleState
com.taobao.weex.bridge.WXModuleManager$1 -> com.taobao.weex.bridge.WXModuleManager$1:
    77:77:void <init>(java.util.Iterator) -> <init>
    80:119:void run() -> run
com.taobao.weex.bridge.WXModuleManager$2 -> com.taobao.weex.bridge.WXModuleManager$2:
    143:143:void <init>(java.lang.String,com.taobao.weex.bridge.ModuleFactory,boolean) -> <init>
    146:172:void run() -> run
com.taobao.weex.bridge.WXParams -> com.taobao.weex.bridge.WXParams:
    31:31:void <init>() -> <init>
    145:145:java.lang.String getAppName() -> getAppName
    113:113:java.lang.String getAppVersion() -> getAppVersion
    99:99:java.lang.String getCacheDir() -> getCacheDir
    230:231:java.lang.String getCrashFilePath() -> getCrashFilePath
    180:180:java.lang.String getDeviceHeight() -> getDeviceHeight
    131:131:java.lang.String getDeviceModel() -> getDeviceModel
    154:154:java.lang.String getDeviceWidth() -> getDeviceWidth
    139:139:java.lang.String getLayoutDirection() -> getLayoutDirection
    253:254:java.lang.String getLibIcuPath() -> getLibIcuPath
    64:65:java.lang.String getLibJsbPath() -> getLibJsbPath
    242:243:java.lang.String getLibJscPath() -> getLibJscPath
    236:237:java.lang.String getLibJssPath() -> getLibJssPath
    263:264:java.lang.String getLibLdPath() -> getLibLdPath
    188:191:java.lang.String getLogLevel() -> getLogLevel
    209:212:java.lang.String getNeedInitV8() -> getNeedInitV8
    59:59:java.lang.Object getOptions() -> getOptions
    104:104:java.lang.String getOsVersion() -> getOsVersion
    86:86:java.lang.String getPlatform() -> getPlatform
    159:165:boolean getReleaseMap() -> getReleaseMap
    77:77:java.lang.String getShouldInfoCollect() -> getShouldInfoCollect
    273:273:java.lang.String getUseRunTimeApi() -> getUseRunTimeApi
    196:197:java.lang.String getUseSingleProcess() -> getUseSingleProcess
    122:122:java.lang.String getWeexVersion() -> getWeexVersion
    149:150:void setAppName(java.lang.String) -> setAppName
    117:118:void setAppVersion(java.lang.String) -> setAppVersion
    94:95:void setCacheDir(java.lang.String) -> setCacheDir
    224:226:void setCrashFilePath(java.lang.String) -> setCrashFilePath
    184:185:void setDeviceHeight(java.lang.String) -> setDeviceHeight
    135:136:void setDeviceModel(java.lang.String) -> setDeviceModel
    175:176:void setDeviceWidth(java.lang.String) -> setDeviceWidth
    141:141:void setLayoutDirection(java.lang.String) -> setLayoutDirection
    258:259:void setLibIcuPath(java.lang.String) -> setLibIcuPath
    69:70:void setLibJsbPath(java.lang.String) -> setLibJsbPath
    246:247:void setLibJscPath(java.lang.String) -> setLibJscPath
    249:250:void setLibJssPath(java.lang.String) -> setLibJssPath
    268:269:void setLibLdPath(java.lang.String) -> setLibLdPath
    205:206:void setLogLevel(java.lang.String) -> setLogLevel
    216:221:void setNeedInitV8(boolean) -> setNeedInitV8
    73:74:void setOptions(java.util.Map) -> setOptions
    108:109:void setOsVersion(java.lang.String) -> setOsVersion
    90:91:void setPlatform(java.lang.String) -> setPlatform
    81:82:void setShouldInfoCollect(java.lang.String) -> setShouldInfoCollect
    201:202:void setUseSingleProcess(java.lang.String) -> setUseSingleProcess
    126:127:void setWeexVersion(java.lang.String) -> setWeexVersion
    277:300:java.util.Map toMap() -> toMap
com.taobao.weex.bridge.WXServiceManager -> com.taobao.weex.bridge.WXServiceManager:
    33:33:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
    31:31:java.util.concurrent.ConcurrentHashMap access$000() -> access$000
    71:75:void execAllCacheJsService() -> execAllCacheJsService
    78:81:com.taobao.weex.common.WXJSService getService(java.lang.String) -> getService
    36:58:boolean registerService(java.lang.String,java.lang.String,java.util.Map) -> registerService
    85:96:void reload() -> reload
    62:66:boolean unRegisterService(java.lang.String) -> unRegisterService
com.taobao.weex.bridge.WXServiceManager$1 -> com.taobao.weex.bridge.WXServiceManager$1:
    86:86:void <init>() -> <init>
    89:93:void run() -> run
com.taobao.weex.bridge.WXTask -> com.taobao.weex.bridge.WXTask:
    28:28:void <init>() -> <init>
com.taobao.weex.bridge.WXValidateProcessor$WXComponentValidateResult -> com.taobao.weex.bridge.WXValidateProcessor$WXComponentValidateResult:
    41:41:void <init>() -> <init>
com.taobao.weex.bridge.WXValidateProcessor$WXModuleValidateResult -> com.taobao.weex.bridge.WXValidateProcessor$WXModuleValidateResult:
    51:51:void <init>() -> <init>
com.taobao.weex.common.Constants -> com.taobao.weex.common.Constants:
    21:21:void <init>() -> <init>
com.taobao.weex.common.RenderTypes -> com.taobao.weex.common.RenderTypes:
    21:21:void <init>() -> <init>
com.taobao.weex.common.TypeModuleFactory -> com.taobao.weex.common.TypeModuleFactory:
    46:48:void <init>(java.lang.Class) -> <init>
    91:91:com.taobao.weex.common.WXModule buildInstance() -> buildInstance
    51:86:void generateMethodMap() -> generateMethodMap
    105:108:com.taobao.weex.bridge.Invoker getMethodInvoker(java.lang.String) -> getMethodInvoker
    96:100:java.lang.String[] getMethods() -> getMethods
com.taobao.weex.common.WXCompatModule -> com.taobao.weex.common.WXCompatModule:
    38:44:void <init>() -> <init>
    54:56:void destroy() -> destroy
    50:50:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    47:47:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
com.taobao.weex.common.WXCompatModule$ModuleReceive -> com.taobao.weex.common.WXCompatModule$ModuleReceive:
    62:64:void <init>(com.taobao.weex.common.WXCompatModule) -> <init>
    68:82:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.taobao.weex.common.WXErrorCode -> com.taobao.weex.common.WXErrorCode:
    22:287:void <clinit>() -> <clinit>
    291:301:void <init>(java.lang.String,int,java.lang.String,java.lang.String,com.taobao.weex.common.WXErrorCode$ErrorType,com.taobao.weex.common.WXErrorCode$ErrorGroup) -> <init>
    304:305:void appendErrMsg(java.lang.String) -> appendErrMsg
    326:326:java.lang.String getArgs() -> getArgs
    308:308:java.lang.String getErrorCode() -> getErrorCode
    322:322:com.taobao.weex.common.WXErrorCode$ErrorGroup getErrorGroup() -> getErrorGroup
    312:314:java.lang.String getErrorMsg() -> getErrorMsg
    318:318:com.taobao.weex.common.WXErrorCode$ErrorType getErrorType() -> getErrorType
    330:331:void setArgs(java.lang.String) -> setArgs
    22:22:com.taobao.weex.common.WXErrorCode valueOf(java.lang.String) -> valueOf
    22:22:com.taobao.weex.common.WXErrorCode[] values() -> values
com.taobao.weex.common.WXErrorCode$ErrorGroup -> com.taobao.weex.common.WXErrorCode$ErrorGroup:
    341:343:void <clinit>() -> <clinit>
    341:341:void <init>(java.lang.String,int) -> <init>
    341:341:com.taobao.weex.common.WXErrorCode$ErrorGroup valueOf(java.lang.String) -> valueOf
    341:341:com.taobao.weex.common.WXErrorCode$ErrorGroup[] values() -> values
com.taobao.weex.common.WXErrorCode$ErrorType -> com.taobao.weex.common.WXErrorCode$ErrorType:
    333:338:void <clinit>() -> <clinit>
    333:333:void <init>(java.lang.String,int) -> <init>
    333:333:com.taobao.weex.common.WXErrorCode$ErrorType valueOf(java.lang.String) -> valueOf
    333:333:com.taobao.weex.common.WXErrorCode$ErrorType[] values() -> values
com.taobao.weex.common.WXException -> com.taobao.weex.common.WXException:
    28:29:void <init>(java.lang.String) -> <init>
com.taobao.weex.common.WXImageSharpen -> com.taobao.weex.common.WXImageSharpen:
    21:23:void <clinit>() -> <clinit>
    21:21:void <init>(java.lang.String,int) -> <init>
    21:21:com.taobao.weex.common.WXImageSharpen valueOf(java.lang.String) -> valueOf
    21:21:com.taobao.weex.common.WXImageSharpen[] values() -> values
com.taobao.weex.common.WXImageStrategy -> com.taobao.weex.common.WXImageStrategy:
    60:62:void <init>() -> <init>
    65:67:void <init>(java.lang.String) -> <init>
    71:71:com.taobao.weex.common.WXImageStrategy$ImageListener getImageListener() -> getImageListener
    75:76:void setImageListener(com.taobao.weex.common.WXImageStrategy$ImageListener) -> setImageListener
com.taobao.weex.common.WXInstanceWrap -> com.taobao.weex.common.WXInstanceWrap:
    27:27:void <init>() -> <init>
    31:40:void error(java.lang.String,java.lang.String,java.lang.String) -> error
com.taobao.weex.common.WXJSBridgeMsgType -> com.taobao.weex.common.WXJSBridgeMsgType:
    21:21:void <init>() -> <init>
com.taobao.weex.common.WXJSExceptionInfo -> com.taobao.weex.common.WXJSExceptionInfo:
    57:74:void <init>(java.lang.String,java.lang.String,com.taobao.weex.common.WXErrorCode,java.lang.String,java.lang.String,java.util.Map) -> <init>
    85:85:java.lang.String getBundleUrl() -> getBundleUrl
    93:93:com.taobao.weex.common.WXErrorCode getErrCode() -> getErrCode
    109:109:java.lang.String getException() -> getException
    117:117:java.util.Map getExtParams() -> getExtParams
    101:101:java.lang.String getFunction() -> getFunction
    77:77:java.lang.String getInstanceId() -> getInstanceId
    130:130:java.lang.String getJsFrameworkVersion() -> getJsFrameworkVersion
    125:125:java.lang.String getWeexVersion() -> getWeexVersion
    89:90:void setBundleUrl(java.lang.String) -> setBundleUrl
    97:98:void setErrCode(com.taobao.weex.common.WXErrorCode) -> setErrCode
    113:114:void setException(java.lang.String) -> setException
    121:122:void setExtParams(java.util.Map) -> setExtParams
    105:106:void setFunction(java.lang.String) -> setFunction
    81:82:void setInstanceId(java.lang.String) -> setInstanceId
    136:140:java.lang.String toString() -> toString
com.taobao.weex.common.WXJSService -> com.taobao.weex.common.WXJSService:
    24:27:void <init>() -> <init>
    29:29:java.lang.String getName() -> getName
    39:39:java.util.Map getOptions() -> getOptions
    34:34:java.lang.String getScript() -> getScript
    31:32:void setName(java.lang.String) -> setName
    41:42:void setOptions(java.util.Map) -> setOptions
    36:37:void setScript(java.lang.String) -> setScript
com.taobao.weex.common.WXModule -> com.taobao.weex.common.WXModule:
    41:89:void <init>() -> <init>
    95:110:void addEventListener(java.lang.String,java.lang.String,java.util.Map) -> addEventListener
    57:62:com.taobao.weex.ui.component.WXComponent findComponent(java.lang.String) -> findComponent
    126:126:java.util.List getEventCallbacks(java.lang.String) -> getEventCallbacks
    134:134:java.lang.String getModuleName() -> getModuleName
    130:130:boolean isOnce(java.lang.String) -> isOnce
    80:80:boolean onActivityBack() -> onActivityBack
    68:68:void onActivityCreate() -> onActivityCreate
    78:78:void onActivityDestroy() -> onActivityDestroy
    72:72:void onActivityPause() -> onActivityPause
    66:66:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    74:74:void onActivityResume() -> onActivityResume
    70:70:void onActivityStart() -> onActivityStart
    76:76:void onActivityStop() -> onActivityStop
    82:82:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    84:84:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    114:120:void removeAllEventListeners(java.lang.String) -> removeAllEventListeners
    138:139:void setModuleName(java.lang.String) -> setModuleName
com.taobao.weex.common.WXPerformance -> com.taobao.weex.common.WXPerformance:
    148:150:void <clinit>() -> <clinit>
    155:383:void <init>(java.lang.String) -> <init>
    567:567:void afterInstanceDestroy(java.lang.String) -> afterInstanceDestroy
    558:559:void appendErrMsg(java.lang.CharSequence) -> appendErrMsg
    562:564:void beforeInstanceRender(java.lang.String) -> beforeInstanceRender
    459:489:java.util.Map getDimensionMap() -> getDimensionMap
    493:497:java.lang.String[] getDimensions() -> getDimensions
    554:554:java.lang.String getErrMsg() -> getErrMsg
    387:455:java.util.Map getMeasureMap() -> getMeasureMap
    501:505:java.lang.String[] getMeasures() -> getMeasures
    536:536:java.lang.String getPerfData() -> getPerfData
    510:532:java.lang.String toString() -> toString
com.taobao.weex.common.WXPerformance$Dimension -> com.taobao.weex.common.WXPerformance$Dimension:
    38:60:void <clinit>() -> <clinit>
    39:39:void <init>(java.lang.String,int) -> <init>
    38:38:com.taobao.weex.common.WXPerformance$Dimension valueOf(java.lang.String) -> valueOf
    38:38:com.taobao.weex.common.WXPerformance$Dimension[] values() -> values
com.taobao.weex.common.WXPerformance$Measure -> com.taobao.weex.common.WXPerformance$Measure:
    63:125:void <clinit>() -> <clinit>
    129:132:void <init>(java.lang.String,int,double,double) -> <init>
    139:139:double getMaxRange() -> getMaxRange
    135:135:double getMinRange() -> getMinRange
    63:63:com.taobao.weex.common.WXPerformance$Measure valueOf(java.lang.String) -> valueOf
    63:63:com.taobao.weex.common.WXPerformance$Measure[] values() -> values
com.taobao.weex.common.WXRefreshData -> com.taobao.weex.common.WXRefreshData:
    27:30:void <init>(java.lang.String,boolean) -> <init>
com.taobao.weex.common.WXRenderStrategy -> com.taobao.weex.common.WXRenderStrategy:
    21:26:void <clinit>() -> <clinit>
    31:33:void <init>(java.lang.String,int,java.lang.String) -> <init>
    36:36:java.lang.String getFlag() -> getFlag
    21:21:com.taobao.weex.common.WXRenderStrategy valueOf(java.lang.String) -> valueOf
    21:21:com.taobao.weex.common.WXRenderStrategy[] values() -> values
com.taobao.weex.common.WXRequest -> com.taobao.weex.common.WXRequest:
    26:70:void <init>() -> <init>
com.taobao.weex.common.WXResponse -> com.taobao.weex.common.WXResponse:
    23:23:void <init>() -> <init>
com.taobao.weex.common.WXRuntimeException -> com.taobao.weex.common.WXRuntimeException:
    26:27:void <init>(java.lang.String) -> <init>
com.taobao.weex.common.WXThread -> com.taobao.weex.common.WXThread:
    152:155:void <init>(java.lang.String) -> <init>
    159:162:void <init>(java.lang.String,android.os.Handler$Callback) -> <init>
    170:173:void <init>(java.lang.String,int,android.os.Handler$Callback) -> <init>
    181:184:void <init>(java.lang.String,int) -> <init>
    187:187:android.os.Handler getHandler() -> getHandler
    191:191:boolean isWXThreadAlive() -> isWXThreadAlive
    196:199:boolean quit() -> quit
    129:129:java.lang.Runnable secure(java.lang.Runnable) -> secure
    134:137:java.lang.Runnable secure(java.lang.Runnable,com.taobao.weex.WXSDKInstance,java.lang.String) -> secure
    141:145:android.os.Handler$Callback secure(android.os.Handler$Callback) -> secure
com.taobao.weex.common.WXThread$SafeCallback -> com.taobao.weex.common.WXThread$SafeCallback:
    100:102:void <init>(android.os.Handler$Callback) -> <init>
    106:118:boolean handleMessage(android.os.Message) -> handleMessage
com.taobao.weex.common.WXThread$SafeRunnable -> com.taobao.weex.common.WXThread$SafeRunnable:
    48:49:void <init>(java.lang.Runnable) -> <init>
    52:53:void <init>(java.lang.Runnable,java.lang.String) -> <init>
    44:63:void <init>(java.lang.Runnable,com.taobao.weex.WXSDKInstance,java.lang.String) -> <init>
    68:93:void run() -> run
com.taobao.weex.common.WXWorkThreadManager -> com.taobao.weex.common.WXWorkThreadManager:
    31:33:void <init>() -> <init>
    44:47:void destroy() -> destroy
    36:38:void post(java.lang.Runnable) -> post
com.taobao.weex.dom.CSSConstants -> com.taobao.weex.dom.CSSConstants:
    21:21:void <init>() -> <init>
    26:26:boolean isUndefined(float) -> isUndefined
com.taobao.weex.dom.CSSShorthand -> com.taobao.weex.dom.CSSShorthand:
    39:40:void <init>(float[]) -> <init>
    43:44:void <init>() -> <init>
    24:24:io.dcloud.feature.uniapp.dom.AbsCSSShorthand clone() -> clone
    24:24:java.lang.Object clone() -> clone
    48:48:com.taobao.weex.dom.CSSShorthand clone() -> clone
com.taobao.weex.dom.CSSShorthand$CORNER -> com.taobao.weex.dom.CSSShorthand$CORNER:
    33:35:void <clinit>() -> <clinit>
    33:33:void <init>(java.lang.String,int) -> <init>
    33:33:com.taobao.weex.dom.CSSShorthand$CORNER valueOf(java.lang.String) -> valueOf
    33:33:com.taobao.weex.dom.CSSShorthand$CORNER[] values() -> values
com.taobao.weex.dom.CSSShorthand$EDGE -> com.taobao.weex.dom.CSSShorthand$EDGE:
    29:30:void <clinit>() -> <clinit>
    29:29:void <init>(java.lang.String,int) -> <init>
    29:29:com.taobao.weex.dom.CSSShorthand$EDGE valueOf(java.lang.String) -> valueOf
    29:29:com.taobao.weex.dom.CSSShorthand$EDGE[] values() -> values
com.taobao.weex.dom.TextDecorationSpan -> com.taobao.weex.dom.TextDecorationSpan:
    34:36:void <init>(com.taobao.weex.ui.component.WXTextDecoration) -> <init>
    40:54:void updateDrawState(android.text.TextPaint) -> updateDrawState
com.taobao.weex.dom.TextDecorationSpan$1 -> com.taobao.weex.dom.TextDecorationSpan$1:
    40:40:void <clinit>() -> <clinit>
com.taobao.weex.dom.WXAttr -> com.taobao.weex.dom.WXAttr:
    37:38:void <init>() -> <init>
    41:42:void <init>(java.util.Map) -> <init>
    45:46:void <init>(java.util.Map,int) -> <init>
    34:34:io.dcloud.feature.uniapp.dom.AbsAttr clone() -> clone
    34:34:java.lang.Object clone() -> clone
    50:58:com.taobao.weex.dom.WXAttr clone() -> clone
com.taobao.weex.dom.WXCustomStyleSpan -> com.taobao.weex.dom.WXCustomStyleSpan:
    32:36:void <init>(int,int,java.lang.String) -> <init>
    66:66:java.lang.String getFontFamily() -> getFontFamily
    52:52:int getStyle() -> getStyle
    59:59:int getWeight() -> getWeight
    40:41:void updateDrawState(android.text.TextPaint) -> updateDrawState
    45:46:void updateMeasureState(android.text.TextPaint) -> updateMeasureState
com.taobao.weex.dom.WXEvent -> com.taobao.weex.dom.WXEvent:
    27:27:void <init>() -> <init>
    27:27:io.dcloud.feature.uniapp.dom.AbsEvent clone() -> clone
    27:27:java.lang.Object clone() -> clone
    31:37:com.taobao.weex.dom.WXEvent clone() -> clone
com.taobao.weex.dom.WXImageQuality -> com.taobao.weex.dom.WXImageQuality:
    21:31:void <clinit>() -> <clinit>
    21:21:void <init>(java.lang.String,int) -> <init>
    21:21:com.taobao.weex.dom.WXImageQuality valueOf(java.lang.String) -> valueOf
    21:21:com.taobao.weex.dom.WXImageQuality[] values() -> values
com.taobao.weex.dom.WXLineHeightSpan -> com.taobao.weex.dom.WXLineHeightSpan:
    30:32:void <init>(int) -> <init>
    36:47:void chooseHeight(java.lang.CharSequence,int,int,int,int,android.graphics.Paint$FontMetricsInt) -> chooseHeight
com.taobao.weex.dom.WXStyle -> com.taobao.weex.dom.WXStyle:
    33:34:void <init>() -> <init>
    37:38:void <init>(java.util.Map) -> <init>
    41:42:void <init>(java.util.Map,boolean) -> <init>
    30:30:io.dcloud.feature.uniapp.dom.AbsStyle clone() -> clone
    30:30:java.lang.Object clone() -> clone
    46:64:com.taobao.weex.dom.WXStyle clone() -> clone
com.taobao.weex.dom.binding.ELUtils -> com.taobao.weex.dom.binding.ELUtils:
    46:46:void <clinit>() -> <clinit>
    35:35:void <init>() -> <init>
    74:106:java.lang.Object bindingBlock(java.lang.Object) -> bindingBlock
    52:67:boolean isBinding(java.lang.Object) -> isBinding
    110:124:java.lang.Object vforBlock(java.lang.Object) -> vforBlock
com.taobao.weex.dom.binding.JSONUtils -> com.taobao.weex.dom.binding.JSONUtils:
    27:27:void <init>() -> <init>
    31:37:boolean isJSON(java.lang.Object) -> isJSON
    49:49:boolean isJSON(java.lang.String) -> isJSON
    41:44:com.alibaba.fastjson.JSONObject toJSON(java.lang.Object) -> toJSON
com.taobao.weex.dom.binding.WXStatement -> com.taobao.weex.dom.binding.WXStatement:
    72:73:void <init>() -> <init>
    76:77:void <init>(androidx.collection.SimpleArrayMap) -> <init>
    28:28:java.lang.Object clone() -> clone
    81:81:com.taobao.weex.dom.binding.WXStatement clone() -> clone
com.taobao.weex.dom.transition.WXTransition -> com.taobao.weex.dom.transition.WXTransition:
    81:113:void <clinit>() -> <clinit>
    130:139:void <init>() -> <init>
    74:74:java.util.concurrent.atomic.AtomicInteger access$000(com.taobao.weex.dom.transition.WXTransition) -> access$000
    74:74:void access$100(com.taobao.weex.dom.transition.WXTransition,int) -> access$100
    74:74:java.lang.Runnable access$202(com.taobao.weex.dom.transition.WXTransition,java.lang.Runnable) -> access$202
    74:74:java.lang.Runnable access$302(com.taobao.weex.dom.transition.WXTransition,java.lang.Runnable) -> access$302
    74:74:long access$400(com.taobao.weex.dom.transition.WXTransition) -> access$400
    74:74:com.taobao.weex.ui.component.WXComponent access$500(com.taobao.weex.dom.transition.WXTransition) -> access$500
    74:74:void access$600(com.taobao.weex.dom.transition.WXTransition,int) -> access$600
    74:74:void access$700(com.taobao.weex.dom.transition.WXTransition) -> access$700
    565:639:void asynchronouslyUpdateLayout(com.taobao.weex.ui.component.WXComponent,java.lang.String,float) -> asynchronouslyUpdateLayout
    442:520:android.animation.PropertyValuesHolder createLayoutPropertyValueHolder(java.lang.String,java.lang.Object) -> createLayoutPropertyValueHolder
    700:735:android.view.animation.Interpolator createTimeInterpolator(java.lang.String) -> createTimeInterpolator
    524:561:void doLayoutPropertyValuesHolderAnimation(android.animation.PropertyValuesHolder[]) -> doLayoutPropertyValuesHolderAnimation
    413:438:void doPendingLayoutAnimation() -> doPendingLayoutAnimation
    321:409:void doPendingTransformAnimation(int) -> doPendingTransformAnimation
    250:314:void doTransitionAnimation(int) -> doTransitionAnimation
    145:161:com.taobao.weex.dom.transition.WXTransition fromMap(java.util.Map,com.taobao.weex.ui.component.WXComponent) -> fromMap
    760:760:java.util.List getProperties() -> getProperties
    665:665:android.view.View getTargetView() -> getTargetView
    168:173:boolean hasTransitionProperty(java.util.Map) -> hasTransitionProperty
    641:662:void onTransitionAnimationEnd() -> onTransitionAnimationEnd
    673:691:long parseTimeMillis(java.util.Map,java.lang.String,long) -> parseTimeMillis
    203:242:void startTransition(java.util.Map) -> startTransition
    739:757:void updateTransitionProperties(com.taobao.weex.dom.transition.WXTransition,java.lang.String) -> updateTransitionProperties
    177:196:void updateTranstionParams(java.util.Map) -> updateTranstionParams
com.taobao.weex.dom.transition.WXTransition$1 -> com.taobao.weex.dom.transition.WXTransition$1:
    227:227:void <init>(com.taobao.weex.dom.transition.WXTransition,int) -> <init>
    230:234:void run() -> run
com.taobao.weex.dom.transition.WXTransition$2 -> com.taobao.weex.dom.transition.WXTransition$2:
    286:286:void <init>(com.taobao.weex.dom.transition.WXTransition) -> <init>
    289:296:void run() -> run
com.taobao.weex.dom.transition.WXTransition$3 -> com.taobao.weex.dom.transition.WXTransition$3:
    302:302:void <init>(com.taobao.weex.dom.transition.WXTransition,int) -> <init>
    305:310:void run() -> run
com.taobao.weex.dom.transition.WXTransition$4 -> com.taobao.weex.dom.transition.WXTransition$4:
    391:392:void <init>(com.taobao.weex.dom.transition.WXTransition) -> <init>
    395:397:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    401:406:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.taobao.weex.dom.transition.WXTransition$5 -> com.taobao.weex.dom.transition.WXTransition$5:
    525:525:void <init>(com.taobao.weex.dom.transition.WXTransition) -> <init>
    528:535:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.taobao.weex.dom.transition.WXTransition$6 -> com.taobao.weex.dom.transition.WXTransition$6:
    537:539:void <init>(com.taobao.weex.dom.transition.WXTransition) -> <init>
    542:544:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    548:553:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.taobao.weex.dom.transition.WXTransition$7 -> com.taobao.weex.dom.transition.WXTransition$7:
    574:574:void <init>(java.lang.String,java.lang.String,java.lang.String,float) -> <init>
    577:637:void run() -> run
com.taobao.weex.dom.transition.WXTransition$8 -> com.taobao.weex.dom.transition.WXTransition$8:
    717:717:void <init>() -> <init>
    717:717:java.lang.Object map(java.lang.String) -> map
    720:720:java.lang.Float map(java.lang.String) -> map
com.taobao.weex.el.parse.ArrayStack -> com.taobao.weex.el.parse.ArrayStack:
    32:34:void <init>() -> <init>
    62:63:void add(int,java.lang.Object) -> add
    54:54:java.lang.Object get(int) -> get
    70:70:java.util.List getList() -> getList
    66:66:boolean isEmpty() -> isEmpty
    50:50:java.lang.Object peek() -> peek
    41:41:java.lang.Object pop() -> pop
    45:46:void push(java.lang.Object) -> push
    58:58:java.lang.Object remove(int) -> remove
    37:37:int size() -> size
com.taobao.weex.el.parse.Block -> com.taobao.weex.el.parse.Block:
    32:34:void <init>(java.util.List,int) -> <init>
    38:57:java.lang.Object execute(java.lang.Object) -> execute
    62:68:java.lang.String toString() -> toString
com.taobao.weex.el.parse.Operator -> com.taobao.weex.el.parse.Operator:
    32:33:void <init>(java.lang.String,int) -> <init>
    38:92:java.lang.Object execute(java.lang.Object) -> execute
    98:104:java.lang.String toString() -> toString
com.taobao.weex.el.parse.Operators -> com.taobao.weex.el.parse.Operators:
    453:500:void <clinit>() -> <clinit>
    30:30:void <init>() -> <init>
    216:229:java.lang.Object condition(com.taobao.weex.el.parse.Token,com.taobao.weex.el.parse.Token,com.taobao.weex.el.parse.Token,java.lang.Object) -> condition
    177:185:java.lang.Object div(com.taobao.weex.el.parse.Token,com.taobao.weex.el.parse.Token,java.lang.Object) -> div
    34:55:java.lang.Object dot(com.taobao.weex.el.parse.Token,com.taobao.weex.el.parse.Token,java.lang.Object) -> dot
    62:112:java.lang.Object el(java.lang.Object,java.lang.String) -> el
    348:356:double getNumber(java.lang.Object) -> getNumber
    379:380:boolean isDot(java.lang.String) -> isDot
    332:340:boolean isEmpty(java.lang.String) -> isEmpty
    261:302:boolean isEquals(com.taobao.weex.el.parse.Token,com.taobao.weex.el.parse.Token,java.lang.Object) -> isEquals
    360:360:boolean isOpEnd(java.lang.String) -> isOpEnd
    366:372:boolean isOpEnd(char) -> isOpEnd
    310:325:boolean isTrue(java.lang.Object) -> isTrue
    201:209:java.lang.Object mod(com.taobao.weex.el.parse.Token,com.taobao.weex.el.parse.Token,java.lang.Object) -> mod
    189:197:java.lang.Object mul(com.taobao.weex.el.parse.Token,com.taobao.weex.el.parse.Token,java.lang.Object) -> mul
    137:160:java.lang.Object plus(com.taobao.weex.el.parse.Token,com.taobao.weex.el.parse.Token,java.lang.Object) -> plus
    116:133:java.lang.Object specialKey(java.lang.Object,java.lang.String) -> specialKey
    165:173:java.lang.Object sub(com.taobao.weex.el.parse.Token,com.taobao.weex.el.parse.Token,java.lang.Object) -> sub
    248:252:double tokenNumber(com.taobao.weex.el.parse.Token,java.lang.Object) -> tokenNumber
    237:241:boolean tokenTrue(com.taobao.weex.el.parse.Token,java.lang.Object) -> tokenTrue
com.taobao.weex.el.parse.Parser -> com.taobao.weex.el.parse.Parser:
    39:44:void <init>(java.lang.String) -> <init>
    254:293:void doOperator(com.taobao.weex.el.parse.Symbol) -> doOperator
    343:347:void doStackOperators(int) -> doStackOperators
    458:458:boolean hasNext() -> hasNext
    464:472:boolean hasNextToken() -> hasNextToken
    476:484:char nextToken() -> nextToken
    48:59:com.taobao.weex.el.parse.Token parse() -> parse
    68:74:com.taobao.weex.el.parse.Token parse(java.lang.String) -> parse
    112:164:void scanArray() -> scanArray
    167:211:void scanBracket() -> scanBracket
    428:454:void scanIdentifier() -> scanIdentifier
    299:340:void scanIf() -> scanIf
    80:107:char scanNextToken() -> scanNextToken
    357:388:void scanNumber() -> scanNumber
    218:249:void scanOperator() -> scanOperator
    392:417:void scanString() -> scanString
com.taobao.weex.el.parse.Symbol -> com.taobao.weex.el.parse.Symbol:
    28:31:void <init>(java.lang.String,int) -> <init>
com.taobao.weex.el.parse.Token -> com.taobao.weex.el.parse.Token:
    44:47:void <init>(java.lang.String,int) -> <init>
    55:74:java.lang.Object execute(java.lang.Object) -> execute
    83:83:java.lang.String getToken() -> getToken
    87:87:int getType() -> getType
    79:79:java.lang.String toString() -> toString
com.taobao.weex.font.FontAdapter -> com.taobao.weex.font.FontAdapter:
    29:31:void <init>() -> <init>
    34:35:void addFontListener(com.taobao.weex.font.FontListener) -> addFontListener
    42:47:void onAddFontRule(java.lang.String,java.lang.String,java.lang.String) -> onAddFontRule
    50:55:void onFontLoad(java.lang.String,java.lang.String,java.lang.String) -> onFontLoad
    38:39:void removeFontListener(com.taobao.weex.font.FontListener) -> removeFontListener
com.taobao.weex.http.CertDTO -> com.taobao.weex.http.CertDTO:
    34:35:void <init>() -> <init>
    46:46:java.lang.String getClient() -> getClient
    54:54:java.lang.String getClientPassword() -> getClientPassword
    38:38:java.lang.String getHost() -> getHost
    62:62:java.lang.String[] getServer() -> getServer
    50:51:void setClient(java.lang.String) -> setClient
    58:59:void setClientPassword(java.lang.String) -> setClientPassword
    42:43:void setHost(java.lang.String) -> setHost
    66:67:void setServer(java.lang.String[]) -> setServer
com.taobao.weex.http.CertJSResponse -> com.taobao.weex.http.CertJSResponse:
    23:23:void <init>() -> <init>
    41:46:com.taobao.weex.http.CertJSResponse obtainFail(int,java.lang.String) -> obtainFail
    31:35:com.taobao.weex.http.CertJSResponse obtainSuccess() -> obtainSuccess
com.taobao.weex.http.Options -> com.taobao.weex.http.Options:
    30:30:void <init>(java.lang.String,java.lang.String,java.util.Map,java.lang.String,com.taobao.weex.http.Options$Type,int,boolean,boolean,com.taobao.weex.http.Options$1) -> <init>
    36:56:void <init>(java.lang.String,java.lang.String,java.util.Map,java.lang.String,com.taobao.weex.http.Options$Type,int) -> <init>
    36:77:void <init>(java.lang.String,java.lang.String,java.util.Map,java.lang.String,com.taobao.weex.http.Options$Type,int,boolean,boolean) -> <init>
    92:92:java.lang.String getBody() -> getBody
    88:88:java.util.Map getHeaders() -> getHeaders
    80:80:java.lang.String getMethod() -> getMethod
    101:101:boolean getSslVerify() -> getSslVerify
    99:99:int getTimeout() -> getTimeout
    108:108:com.alibaba.fastjson.JSONObject getTlsConfig() -> getTlsConfig
    96:96:com.taobao.weex.http.Options$Type getType() -> getType
    84:84:java.lang.String getUrl() -> getUrl
    104:104:boolean isFirstIpv4() -> isFirstIpv4
    112:113:void setTlsConfig(com.alibaba.fastjson.JSONObject) -> setTlsConfig
com.taobao.weex.http.Options$Builder -> com.taobao.weex.http.Options$Builder:
    119:122:void <init>() -> <init>
    197:199:com.taobao.weex.http.Options createOptions() -> createOptions
    148:149:com.taobao.weex.http.Options$Builder putHeader(java.lang.String,java.lang.String) -> putHeader
    132:133:com.taobao.weex.http.Options$Builder setAndroidTlsConfig(com.alibaba.fastjson.JSONObject) -> setAndroidTlsConfig
    153:154:com.taobao.weex.http.Options$Builder setBody(java.lang.String) -> setBody
    163:164:com.taobao.weex.http.Options$Builder setFirstIpv4(boolean) -> setFirstIpv4
    138:139:com.taobao.weex.http.Options$Builder setMethod(java.lang.String) -> setMethod
    158:159:com.taobao.weex.http.Options$Builder setSslVerify(boolean) -> setSslVerify
    192:193:com.taobao.weex.http.Options$Builder setTimeout(int) -> setTimeout
    174:183:com.taobao.weex.http.Options$Builder setType(java.lang.String) -> setType
    187:188:com.taobao.weex.http.Options$Builder setType(com.taobao.weex.http.Options$Type) -> setType
    143:144:com.taobao.weex.http.Options$Builder setUrl(java.lang.String) -> setUrl
com.taobao.weex.http.Options$Type -> com.taobao.weex.http.Options$Type:
    115:116:void <clinit>() -> <clinit>
    115:115:void <init>(java.lang.String,int) -> <init>
    115:115:com.taobao.weex.http.Options$Type valueOf(java.lang.String) -> valueOf
    115:115:com.taobao.weex.http.Options$Type[] values() -> values
com.taobao.weex.http.Status -> com.taobao.weex.http.Status:
    32:86:void <clinit>() -> <clinit>
    27:27:void <init>() -> <init>
    89:91:java.lang.String getStatusText(java.lang.String) -> getStatusText
com.taobao.weex.http.WXHttpUtil -> com.taobao.weex.http.WXHttpUtil:
    33:33:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
    38:41:java.lang.String assembleUserAgent(android.content.Context,java.util.Map) -> assembleUserAgent
com.taobao.weex.http.WXStreamModule -> com.taobao.weex.http.WXStreamModule:
    58:147:void <clinit>() -> <clinit>
    61:62:void <init>() -> <init>
    63:65:void <init>(com.taobao.weex.adapter.IWXHttpAdapter) -> <init>
    152:191:void configMTLS(com.alibaba.fastjson.JSONArray,com.taobao.weex.bridge.JSCallback) -> configMTLS
    337:348:void extractHeaders(com.alibaba.fastjson.JSONObject,com.taobao.weex.http.Options$Builder) -> extractHeaders
    142:143:void fetch(com.alibaba.fastjson.JSONObject,com.taobao.weex.bridge.JSCallback,com.taobao.weex.bridge.JSCallback) -> fetch
    195:279:void fetch(com.alibaba.fastjson.JSONObject,com.taobao.weex.bridge.JSCallback,com.taobao.weex.bridge.JSCallback,java.lang.String,java.lang.String) -> fetch
    302:308:java.lang.String getHeader(java.util.Map,java.lang.String) -> getHeader
    282:297:java.lang.Object parseData(java.lang.String,com.taobao.weex.http.Options$Type) -> parseData
    315:330:java.lang.String readAsString(byte[],java.lang.String,com.taobao.weex.http.Options$Type) -> readAsString
    78:116:void sendHttp(com.alibaba.fastjson.JSONObject,java.lang.String) -> sendHttp
    352:376:void sendRequest(com.taobao.weex.http.Options,com.taobao.weex.http.WXStreamModule$ResponseCallback,com.taobao.weex.bridge.JSCallback,java.lang.String,java.lang.String) -> sendRequest
com.taobao.weex.http.WXStreamModule$1 -> com.taobao.weex.http.WXStreamModule$1:
    105:105:void <init>(com.taobao.weex.http.WXStreamModule,java.lang.String,com.taobao.weex.http.Options) -> <init>
    108:114:void onResponse(com.taobao.weex.common.WXResponse,java.util.Map) -> onResponse
com.taobao.weex.http.WXStreamModule$2 -> com.taobao.weex.http.WXStreamModule$2:
    243:243:void <init>(com.taobao.weex.http.WXStreamModule,com.taobao.weex.bridge.JSCallback,com.taobao.weex.http.Options) -> <init>
    246:277:void onResponse(com.taobao.weex.common.WXResponse,java.util.Map) -> onResponse
com.taobao.weex.http.WXStreamModule$StreamHttpListener -> com.taobao.weex.http.WXStreamModule$StreamHttpListener:
    382:382:void <init>(com.taobao.weex.http.WXStreamModule$ResponseCallback,com.taobao.weex.bridge.JSCallback,com.taobao.weex.http.WXStreamModule$1) -> <init>
    385:391:void <init>(com.taobao.weex.http.WXStreamModule$ResponseCallback,com.taobao.weex.bridge.JSCallback) -> <init>
    410:433:void onHeadersReceived(int,java.util.Map) -> onHeadersReceived
    447:454:void onHttpFinish(com.taobao.weex.common.WXResponse) -> onHttpFinish
    437:442:void onHttpResponseProgress(int) -> onHttpResponseProgress
    396:401:void onHttpStart() -> onHttpStart
    406:406:void onHttpUploadProgress(int) -> onHttpUploadProgress
com.taobao.weex.instance.InstanceOnFireEventInterceptor -> com.taobao.weex.instance.InstanceOnFireEventInterceptor:
    37:39:void <init>() -> <init>
    42:45:void addInterceptEvent(java.lang.String) -> addInterceptEvent
    48:48:java.util.List getListenEvents() -> getListenEvents
    52:58:void onInterceptFireEvent(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map) -> onInterceptFireEvent
com.taobao.weex.layout.ContentBoxMeasurement -> com.taobao.weex.layout.ContentBoxMeasurement:
    38:40:void <init>() -> <init>
    42:44:void <init>(com.taobao.weex.ui.component.WXComponent) -> <init>
    75:76:void destroy() -> destroy
    70:70:float getHeight() -> getHeight
    65:65:float getWidth() -> getWidth
    49:50:void measure(float,float,int,int) -> measure
com.taobao.weex.layout.MeasureMode -> com.taobao.weex.layout.MeasureMode:
    25:27:void <clinit>() -> <clinit>
    23:23:void <init>() -> <init>
com.taobao.weex.layout.MeasureSize -> com.taobao.weex.layout.MeasureSize:
    23:23:void <init>() -> <init>
    36:36:float getHeight() -> getHeight
    28:28:float getWidth() -> getWidth
    40:41:void setHeight(float) -> setHeight
    32:33:void setWidth(float) -> setWidth
com.taobao.weex.layout.measurefunc.TextContentBoxMeasurement -> com.taobao.weex.layout.measurefunc.TextContentBoxMeasurement:
    68:68:void <clinit>() -> <clinit>
    71:115:void <init>(com.taobao.weex.ui.component.WXComponent) -> <init>
    66:66:com.taobao.weex.ui.component.WXComponent access$000(com.taobao.weex.layout.measurefunc.TextContentBoxMeasurement) -> access$000
    66:66:java.util.concurrent.atomic.AtomicReference access$100(com.taobao.weex.layout.measurefunc.TextContentBoxMeasurement) -> access$100
    66:66:com.taobao.weex.ui.component.WXComponent access$200(com.taobao.weex.layout.measurefunc.TextContentBoxMeasurement) -> access$200
    438:447:void adjustSpansRange(android.text.Spanned,android.text.Spannable) -> adjustSpansRange
    354:379:android.text.Layout createLayout(float,android.text.Layout) -> createLayout
    269:274:android.text.Spanned createSpanned(java.lang.String) -> createSpanned
    212:219:void forceRelayout() -> forceRelayout
    320:338:float getTextWidth(android.text.TextPaint,float,boolean) -> getTextWidth
    166:195:void layoutAfter(float,float) -> layoutAfter
    122:126:void layoutBefore() -> layoutBefore
    133:159:void measureInternal(float,float,int,int) -> measureInternal
    450:460:void recalculateLayout(float) -> recalculateLayout
    306:307:void setSpan(android.text.Spannable,java.lang.Object,int,int,int) -> setSpan
    486:491:void swap() -> swap
    397:428:android.text.Spanned truncate(android.text.Editable,android.text.TextPaint,int,android.text.TextUtils$TruncateAt) -> truncate
    278:303:void updateSpannable(android.text.Spannable,int) -> updateSpannable
    198:200:void updateStyleAndText() -> updateStyleAndText
    227:258:void updateStyleImp(java.util.Map) -> updateStyleImp
    472:478:boolean warmUpTextLayoutCache(android.text.Layout) -> warmUpTextLayoutCache
com.taobao.weex.layout.measurefunc.TextContentBoxMeasurement$1 -> com.taobao.weex.layout.measurefunc.TextContentBoxMeasurement$1:
    186:186:void <init>(com.taobao.weex.layout.measurefunc.TextContentBoxMeasurement) -> <init>
    189:192:void run() -> run
com.taobao.weex.layout.measurefunc.TextContentBoxMeasurement$SetSpanOperation -> com.taobao.weex.layout.measurefunc.TextContentBoxMeasurement$SetSpanOperation:
    80:81:void <init>(com.taobao.weex.layout.measurefunc.TextContentBoxMeasurement,int,int,java.lang.Object) -> <init>
    83:88:void <init>(com.taobao.weex.layout.measurefunc.TextContentBoxMeasurement,int,int,java.lang.Object,int) -> <init>
    91:92:void execute(android.text.Spannable) -> execute
com.taobao.weex.performance.WXAnalyzerDataTransfer -> com.taobao.weex.performance.WXAnalyzerDataTransfer:
    44:44:void <clinit>() -> <clinit>
    39:39:void <init>() -> <init>
    166:166:boolean isInteractionLogOpen() -> isInteractionLogOpen
    143:163:void switchInteractionLog(boolean) -> switchInteractionLog
    112:140:void transferError(com.taobao.weex.common.WXJSExceptionInfo,java.lang.String) -> transferError
    83:108:void transferInteractionInfo(com.taobao.weex.ui.component.WXComponent) -> transferInteractionInfo
    51:80:void transferPerformance(java.lang.String,java.lang.String,java.lang.String,java.lang.Object) -> transferPerformance
com.taobao.weex.performance.WXInstanceApm -> com.taobao.weex.performance.WXInstanceApm:
    138:509:void <init>(java.lang.String) -> <init>
    617:618:void actionLoadImg() -> actionLoadImg
    621:626:void actionLoadImgResult(boolean,java.lang.String) -> actionLoadImgResult
    600:604:void actionNetRequest() -> actionNetRequest
    607:612:void actionNetResult(boolean,java.lang.String) -> actionNetResult
    262:272:void addProperty(java.lang.String,java.lang.Object) -> addProperty
    591:595:void addPropeyFromExtParms(java.lang.String,java.lang.String,java.util.Map) -> addPropeyFromExtParms
    289:299:void addStats(java.lang.String,double) -> addStats
    440:445:void arriveFSRenderTime() -> arriveFSRenderTime
    448:507:void arriveInteraction(com.taobao.weex.ui.component.WXComponent) -> arriveInteraction
    433:437:void arriveNewFsRenderTime() -> arriveNewFsRenderTime
    404:405:void doDelayCollectData() -> doDelayCollectData
    321:354:void doInit() -> doInit
    314:314:boolean hasInit() -> hasInit
    369:373:void onAppear() -> onAppear
    376:380:void onDisAppear() -> onDisAppear
    386:401:void onEnd() -> onEnd
    203:207:void onEvent(java.lang.String,java.lang.Object) -> onEvent
    183:197:void onInstanceReady(boolean) -> onInstanceReady
    213:215:void onStage(java.lang.String) -> onStage
    223:233:void onStageWithTime(java.lang.String,long) -> onStageWithTime
    416:430:void printLog() -> printLog
    519:527:void recordPerformanceDetailData() -> recordPerformanceDetailData
    629:650:void sendPerformanceToJS() -> sendPerformanceToJS
    275:283:void sendProperty(java.lang.String,java.lang.Object) -> sendProperty
    236:249:void sendStageInfo(java.lang.String,long) -> sendStageInfo
    302:310:void sendStats(java.lang.String,double) -> sendStats
    357:366:void setPageName(java.lang.String) -> setPageName
    654:664:java.lang.String toPerfString() -> toPerfString
    530:548:void updateDiffStats(java.lang.String,double) -> updateDiffStats
    512:516:void updateFSDiffStats(java.lang.String,double) -> updateFSDiffStats
    551:570:void updateMaxStats(java.lang.String,double) -> updateMaxStats
    668:682:void updateNativePerformanceData(java.util.Map) -> updateNativePerformanceData
    573:588:void updateRecordInfo(java.util.Map) -> updateRecordInfo
com.taobao.weex.performance.WXInstanceApm$1 -> com.taobao.weex.performance.WXInstanceApm$1:
    251:251:void <init>(com.taobao.weex.performance.WXInstanceApm) -> <init>
    254:255:void run() -> run
com.taobao.weex.performance.WXInstanceApm$2 -> com.taobao.weex.performance.WXInstanceApm$2:
    407:407:void <init>(com.taobao.weex.performance.WXInstanceApm) -> <init>
    410:411:void run() -> run
com.taobao.weex.performance.WXStateRecord -> com.taobao.weex.performance.WXStateRecord:
    39:39:void <init>(com.taobao.weex.performance.WXStateRecord$1) -> <init>
    57:197:void <init>() -> <init>
    39:39:long access$300(com.taobao.weex.performance.WXStateRecord) -> access$300
    39:39:long access$302(com.taobao.weex.performance.WXStateRecord,long) -> access$302
    39:39:java.lang.Runnable access$400(com.taobao.weex.performance.WXStateRecord) -> access$400
    54:54:com.taobao.weex.performance.WXStateRecord getInstance() -> getInstance
    131:152:java.util.Map getStateInfo() -> getStateInfo
    113:114:void onJSCCrash(java.lang.String) -> onJSCCrash
    106:107:void onJSEngineReload(java.lang.String) -> onJSEngineReload
    91:92:void onJSFMInit() -> onJSFMInit
    79:80:void recordAction(java.lang.String,java.lang.String) -> recordAction
    117:128:void recordCommon(com.taobao.weex.performance.WXStateRecord$RecordList,com.taobao.weex.performance.WXStateRecord$Info) -> recordCommon
    71:73:void recordException(java.lang.String,java.lang.String) -> recordException
    83:85:void recordIPCException(java.lang.String,java.lang.String) -> recordIPCException
    99:100:void recordJsThreadWatch(java.lang.String) -> recordJsThreadWatch
    95:96:void recoreJsfmInitHistory(java.lang.String) -> recoreJsfmInitHistory
    192:193:void startJSThreadWatchDog() -> startJSThreadWatchDog
com.taobao.weex.performance.WXStateRecord$1 -> com.taobao.weex.performance.WXStateRecord$1:
    197:197:void <init>(com.taobao.weex.performance.WXStateRecord) -> <init>
    200:207:void run() -> run
com.taobao.weex.performance.WXStateRecord$Info -> com.taobao.weex.performance.WXStateRecord$Info:
    169:173:void <init>(long,java.lang.String,java.lang.String) -> <init>
    164:164:int compareTo(java.lang.Object) -> compareTo
    184:187:int compareTo(com.taobao.weex.performance.WXStateRecord$Info) -> compareTo
    177:179:java.lang.String toString() -> toString
com.taobao.weex.performance.WXStateRecord$RecordList -> com.taobao.weex.performance.WXStateRecord$RecordList:
    159:161:void <init>(int) -> <init>
    155:155:int access$200(com.taobao.weex.performance.WXStateRecord$RecordList) -> access$200
com.taobao.weex.performance.WXStateRecord$SingleTonHolder -> com.taobao.weex.performance.WXStateRecord$SingleTonHolder:
    50:50:void <clinit>() -> <clinit>
    49:49:void <init>() -> <init>
    49:49:com.taobao.weex.performance.WXStateRecord access$100() -> access$100
com.taobao.weex.performance.WhiteScreenUtils -> com.taobao.weex.performance.WhiteScreenUtils:
    36:36:void <init>() -> <init>
    39:51:boolean doWhiteScreenCheck() -> doWhiteScreenCheck
    131:158:org.json.JSONObject geViewDetailTreeMsg(android.view.View) -> geViewDetailTreeMsg
    93:112:boolean hasLeafViewOrSizeIgnore(android.view.View,int) -> hasLeafViewOrSizeIgnore
    69:88:boolean isInWhiteList(com.taobao.weex.WXSDKInstance) -> isInWhiteList
    55:65:boolean isWhiteScreen(com.taobao.weex.WXSDKInstance) -> isWhiteScreen
    119:127:java.lang.String takeViewTreeSnapShot(com.taobao.weex.WXSDKInstance) -> takeViewTreeSnapShot
com.taobao.weex.render.WXAbstractRenderContainer -> com.taobao.weex.render.WXAbstractRenderContainer:
    35:39:void <init>(android.content.Context) -> <init>
    35:43:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    35:47:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    35:51:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    80:80:void createInstanceRenderView(java.lang.String) -> createInstanceRenderView
    70:71:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    75:75:boolean hasConsumeEvent() -> hasConsumeEvent
    59:65:void onSizeChanged(int,int,int,int) -> onSizeChanged
    54:55:void setSDKInstance(com.taobao.weex.WXSDKInstance) -> setSDKInstance
com.taobao.weex.tracing.Stopwatch -> com.taobao.weex.tracing.Stopwatch:
    32:32:void <clinit>() -> <clinit>
    31:34:void <init>() -> <init>
    75:81:java.util.List getProcessEvents() -> getProcessEvents
    103:110:long lastTickStamp() -> lastTickStamp
    124:124:double millisUntilNow(long) -> millisUntilNow
    120:120:double nanosToMillis(long) -> nanosToMillis
    38:41:void prepare() -> prepare
    59:72:void split(java.lang.String) -> split
    86:99:double tack() -> tack
    114:116:double tackAndTick() -> tackAndTick
    44:56:void tick() -> tick
com.taobao.weex.tracing.Stopwatch$ProcessEvent -> com.taobao.weex.tracing.Stopwatch$ProcessEvent:
    127:127:void <init>() -> <init>
com.taobao.weex.tracing.WXTracing -> com.taobao.weex.tracing.WXTracing:
    37:37:void <clinit>() -> <clinit>
    36:36:void <init>() -> <init>
    97:108:java.lang.String currentThreadName() -> currentThreadName
    44:44:boolean isAvailable() -> isAvailable
    112:117:com.taobao.weex.tracing.WXTracing$TraceEvent newEvent(java.lang.String,java.lang.String,int) -> newEvent
    40:40:int nextId() -> nextId
    47:52:void submit(com.taobao.weex.tracing.WXTracing$TraceEvent) -> submit
com.taobao.weex.tracing.WXTracing$TraceEvent -> com.taobao.weex.tracing.WXTracing$TraceEvent:
    65:84:void <init>() -> <init>
    87:93:void submit() -> submit
com.taobao.weex.tracing.WXTracing$TraceInfo -> com.taobao.weex.tracing.WXTracing$TraceInfo:
    120:126:void <init>() -> <init>
com.taobao.weex.ui.ExternalLoaderComponentHolder -> com.taobao.weex.ui.ExternalLoaderComponentHolder:
    45:48:void <init>(java.lang.String,com.taobao.weex.ui.IExternalComponentGetter) -> <init>
    66:74:com.taobao.weex.ui.component.WXComponent createInstance(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,com.taobao.weex.ui.action.BasicComponentData) -> createInstance
    54:62:boolean generate() -> generate
    88:91:com.taobao.weex.bridge.Invoker getMethodInvoker(java.lang.String) -> getMethodInvoker
    95:101:java.lang.String[] getMethods() -> getMethods
    78:83:com.taobao.weex.bridge.Invoker getPropertyInvoker(java.lang.String) -> getPropertyInvoker
    52:52:void loadIfNonLazy() -> loadIfNonLazy
com.taobao.weex.ui.RenderContextImpl -> com.taobao.weex.ui.RenderContextImpl:
    48:53:void <init>(com.taobao.weex.WXSDKInstance) -> <init>
    56:62:void destroy() -> destroy
    75:75:com.taobao.weex.ui.component.WXComponent getComponent(java.lang.String) -> getComponent
    79:79:com.taobao.weex.ui.component.WXComponent getComponentById(java.lang.String) -> getComponentById
    118:118:int getComponentCount() -> getComponentCount
    70:70:com.taobao.weex.WXSDKInstance getInstance() -> getInstance
    65:65:com.taobao.weex.WXSDKInstance getWXSDKInstance() -> getWXSDKInstance
    83:93:void registerComponent(java.lang.String,com.taobao.weex.ui.component.WXComponent) -> registerComponent
    101:115:void setAllScrollerScrollable(boolean,java.lang.String) -> setAllScrollerScrollable
    97:97:com.taobao.weex.ui.component.WXComponent unregisterComponent(java.lang.String) -> unregisterComponent
com.taobao.weex.ui.SimpleComponentHolder -> com.taobao.weex.ui.SimpleComponentHolder:
    146:147:void <init>(java.lang.Class) -> <init>
    149:152:void <init>(java.lang.Class,com.taobao.weex.ui.ComponentCreator) -> <init>
    236:240:com.taobao.weex.ui.component.WXComponent createInstance(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,com.taobao.weex.ui.action.BasicComponentData) -> createInstance
    168:176:void generate() -> generate
    254:257:com.taobao.weex.bridge.Invoker getMethodInvoker(java.lang.String) -> getMethodInvoker
    179:230:android.util.Pair getMethods(java.lang.Class) -> getMethods
    261:278:java.lang.String[] getMethods() -> getMethods
    244:249:com.taobao.weex.bridge.Invoker getPropertyInvoker(java.lang.String) -> getPropertyInvoker
    156:166:void loadIfNonLazy() -> loadIfNonLazy
com.taobao.weex.ui.SimpleComponentHolder$ClazzComponentCreator -> com.taobao.weex.ui.SimpleComponentHolder$ClazzComponentCreator:
    76:78:void <init>(java.lang.Class) -> <init>
    117:141:com.taobao.weex.ui.component.WXComponent createInstance(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,com.taobao.weex.ui.action.BasicComponentData) -> createInstance
    81:112:java.lang.reflect.Constructor getComponentConstructor(java.lang.Boolean) -> getComponentConstructor
com.taobao.weex.ui.WXComponentRegistry -> com.taobao.weex.ui.WXComponentRegistry:
    43:44:void <clinit>() -> <clinit>
    41:41:void <init>() -> <init>
    41:41:boolean access$000(java.lang.String,com.taobao.weex.ui.IFComponentHolder) -> access$000
    41:41:java.util.ArrayList access$100() -> access$100
    41:41:boolean access$200(java.util.Map) -> access$200
    130:130:com.taobao.weex.ui.IFComponentHolder getComponent(java.lang.String) -> getComponent
    46:74:boolean registerComponent(java.util.Map) -> registerComponent
    77:108:boolean registerComponent(java.lang.String,com.taobao.weex.ui.IFComponentHolder,java.util.Map) -> registerComponent
    123:126:boolean registerJSComponent(java.util.Map) -> registerJSComponent
    113:119:boolean registerNativeComponent(java.lang.String,com.taobao.weex.ui.IFComponentHolder) -> registerNativeComponent
    134:146:void reload() -> reload
com.taobao.weex.ui.WXComponentRegistry$1 -> com.taobao.weex.ui.WXComponentRegistry$1:
    50:50:void <init>(java.util.Iterator) -> <init>
    53:72:void run() -> run
com.taobao.weex.ui.WXComponentRegistry$2 -> com.taobao.weex.ui.WXComponentRegistry$2:
    88:88:void <init>(java.util.Map,java.lang.String,com.taobao.weex.ui.IFComponentHolder) -> <init>
    92:106:void run() -> run
com.taobao.weex.ui.WXComponentRegistry$3 -> com.taobao.weex.ui.WXComponentRegistry$3:
    134:134:void <init>() -> <init>
    138:144:void run() -> run
com.taobao.weex.ui.WXRenderHandler -> com.taobao.weex.ui.WXRenderHandler:
    28:29:void <init>() -> <init>
    40:41:void handleMessage(android.os.Message) -> handleMessage
    32:35:boolean post(java.lang.String,java.lang.Runnable) -> post
com.taobao.weex.ui.WXRenderManager -> com.taobao.weex.ui.WXRenderManager:
    66:67:void <clinit>() -> <clinit>
    62:72:void <init>() -> <init>
    290:300:java.util.List getAllInstances() -> getAllInstances
    114:160:int getOpenGLRenderLimitValue() -> getOpenGLRenderLimitValue
    75:75:com.taobao.weex.dom.RenderContext getRenderContext(java.lang.String) -> getRenderContext
    80:84:com.taobao.weex.ui.component.WXComponent getWXComponent(java.lang.String,java.lang.String) -> getWXComponent
    89:93:com.taobao.weex.ui.component.WXComponent getWXComponentById(java.lang.String,java.lang.String) -> getWXComponentById
    106:110:com.taobao.weex.WXSDKInstance getWXSDKInstance(java.lang.String) -> getWXSDKInstance
    206:239:void postAllStashedGraphicAction(java.lang.String,com.taobao.weex.ui.action.BasicGraphicAction) -> postAllStashedGraphicAction
    242:275:void postGraphicAction(java.lang.String,com.taobao.weex.ui.action.BasicGraphicAction) -> postGraphicAction
    165:166:void postOnUiThread(java.lang.Runnable,long) -> postOnUiThread
    170:171:void postOnUiThread(java.lang.Runnable,java.lang.String) -> postOnUiThread
    175:176:void postOnUiThread(java.lang.Runnable) -> postOnUiThread
    304:314:void registerComponent(java.lang.String,java.lang.String,com.taobao.weex.ui.component.WXComponent) -> registerComponent
    278:287:void registerInstance(com.taobao.weex.WXSDKInstance) -> registerInstance
    189:203:void removeRenderStatement(java.lang.String) -> removeRenderStatement
    180:181:void removeTask(java.lang.Runnable) -> removeTask
    98:103:void setScrollable(java.lang.String,boolean,java.lang.String) -> setScrollable
    317:327:com.taobao.weex.ui.component.WXComponent unregisterComponent(java.lang.String,java.lang.String) -> unregisterComponent
com.taobao.weex.ui.action.ActionAddRule -> com.taobao.weex.ui.action.ActionAddRule:
    39:43:void <init>(java.lang.String,java.lang.String,com.alibaba.fastjson.JSONObject) -> <init>
    47:68:void executeAction() -> executeAction
    82:86:void notifyAddFontRule(com.taobao.weex.WXSDKInstance,com.taobao.weex.utils.FontDO) -> notifyAddFontRule
    71:77:com.taobao.weex.utils.FontDO parseFontDO(com.alibaba.fastjson.JSONObject,com.taobao.weex.WXSDKInstance) -> parseFontDO
com.taobao.weex.ui.action.ActionGetComponentRect -> com.taobao.weex.ui.action.ActionGetComponentRect:
    44:46:void <init>(com.taobao.weex.WXSDKInstance,java.lang.String,java.lang.String) -> <init>
    92:113:void callbackViewport(com.taobao.weex.WXSDKInstance,com.taobao.weex.bridge.JSCallback) -> callbackViewport
    50:88:void executeAction() -> executeAction
    117:117:float getWebPxValue(int,float) -> getWebPxValue
com.taobao.weex.ui.action.ActionGetLayoutDirection -> com.taobao.weex.ui.action.ActionGetLayoutDirection:
    44:46:void <init>(com.taobao.weex.WXSDKInstance,java.lang.String,java.lang.String) -> <init>
    99:110:void callbackViewport(com.taobao.weex.WXSDKInstance,com.taobao.weex.bridge.JSCallback) -> callbackViewport
    50:95:void executeAction() -> executeAction
    114:114:float getWebPxValue(int,int) -> getWebPxValue
com.taobao.weex.ui.action.ActionInvokeMethod -> com.taobao.weex.ui.action.ActionInvokeMethod:
    38:43:void <init>(java.lang.String,java.lang.String,java.lang.String,com.alibaba.fastjson.JSONArray) -> <init>
    47:53:void executeAction() -> executeAction
com.taobao.weex.ui.action.ActionReloadPage -> com.taobao.weex.ui.action.ActionReloadPage:
    31:38:void <init>(java.lang.String,boolean) -> <init>
    42:48:void executeAction() -> executeAction
com.taobao.weex.ui.action.BasicComponentData -> com.taobao.weex.ui.action.BasicComponentData:
    34:35:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    31:31:io.dcloud.feature.uniapp.ui.action.AbsComponentData clone() -> clone
    31:31:java.lang.Object clone() -> clone
    57:75:com.taobao.weex.ui.action.BasicComponentData clone() -> clone
    31:31:io.dcloud.feature.uniapp.dom.AbsAttr getAttrs() -> getAttrs
    46:46:com.taobao.weex.dom.WXAttr getAttrs() -> getAttrs
    31:31:io.dcloud.feature.uniapp.dom.AbsCSSShorthand getBorder() -> getBorder
    81:81:com.taobao.weex.dom.CSSShorthand getBorder() -> getBorder
    31:31:io.dcloud.feature.uniapp.dom.AbsEvent getEvents() -> getEvents
    52:52:com.taobao.weex.dom.WXEvent getEvents() -> getEvents
    31:31:io.dcloud.feature.uniapp.dom.AbsCSSShorthand getMargin() -> getMargin
    87:87:com.taobao.weex.dom.CSSShorthand getMargin() -> getMargin
    31:31:io.dcloud.feature.uniapp.dom.AbsCSSShorthand getPadding() -> getPadding
    93:93:com.taobao.weex.dom.CSSShorthand getPadding() -> getPadding
    31:31:io.dcloud.feature.uniapp.dom.AbsStyle getStyles() -> getStyles
    40:40:com.taobao.weex.dom.WXStyle getStyles() -> getStyles
com.taobao.weex.ui.action.BasicGraphicAction -> com.taobao.weex.ui.action.BasicGraphicAction:
    31:40:void <init>(com.taobao.weex.WXSDKInstance,java.lang.String) -> <init>
    55:65:void executeActionOnRender() -> executeActionOnRender
    47:47:java.lang.String getPageId() -> getPageId
    51:51:java.lang.String getRef() -> getRef
    43:43:com.taobao.weex.WXSDKInstance getWXSDKIntance() -> getWXSDKIntance
    70:80:void run() -> run
com.taobao.weex.ui.action.GraphicActionAbstractAddElement -> com.taobao.weex.ui.action.GraphicActionAbstractAddElement:
    36:48:void <init>(com.taobao.weex.WXSDKInstance,java.lang.String) -> <init>
    51:71:com.taobao.weex.ui.component.WXComponent createComponent(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,com.taobao.weex.ui.action.BasicComponentData) -> createComponent
    76:77:void executeAction() -> executeAction
    96:96:java.util.Map getAttributes() -> getAttributes
    80:80:java.lang.String getComponentType() -> getComponentType
    100:100:java.util.Set getEvents() -> getEvents
    88:88:int getIndex() -> getIndex
    84:84:java.lang.String getParentRef() -> getParentRef
    92:92:java.util.Map getStyle() -> getStyle
com.taobao.weex.ui.action.GraphicActionAddChildToRichtext -> com.taobao.weex.ui.action.GraphicActionAddChildToRichtext:
    33:41:void <init>(com.taobao.weex.WXSDKInstance,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.HashMap,java.util.HashMap) -> <init>
    45:45:void executeAction() -> executeAction
com.taobao.weex.ui.action.GraphicActionAddElement -> com.taobao.weex.ui.action.GraphicActionAddElement:
    63:162:void <init>(com.taobao.weex.WXSDKInstance,java.lang.String,java.lang.String,java.lang.String,int,java.util.Map,java.util.Map,java.util.Set,float[],float[],float[]) -> <init>
    190:213:void executeAction() -> executeAction
    185:186:void setIndex(int) -> setIndex
    179:180:void setPosition(com.taobao.weex.ui.action.GraphicPosition) -> setPosition
    167:168:void setRTL(boolean) -> setRTL
    173:174:void setSize(com.taobao.weex.ui.action.GraphicSize) -> setSize
com.taobao.weex.ui.action.GraphicActionAddEvent -> com.taobao.weex.ui.action.GraphicActionAddEvent:
    35:37:void <init>(com.taobao.weex.WXSDKInstance,java.lang.String,java.lang.Object) -> <init>
    41:52:void executeAction() -> executeAction
com.taobao.weex.ui.action.GraphicActionAnimation -> com.taobao.weex.ui.action.GraphicActionAnimation:
    77:81:void <init>(com.taobao.weex.WXSDKInstance,java.lang.String,com.taobao.weex.ui.animation.WXAnimationBean) -> <init>
    85:91:void <init>(com.taobao.weex.WXSDKInstance,java.lang.String,java.lang.String,java.lang.String) -> <init>
    94:98:void <init>(com.taobao.weex.WXSDKInstance,java.lang.String,com.taobao.weex.ui.animation.WXAnimationBean,java.lang.String) -> <init>
    180:225:android.animation.ObjectAnimator createAnimator(android.view.View,float) -> createAnimator
    232:246:android.animation.Animator$AnimatorListener createAnimatorListener(com.taobao.weex.WXSDKInstance,java.lang.String) -> createAnimatorListener
    253:287:android.view.animation.Interpolator createTimeInterpolator() -> createTimeInterpolator
    102:137:void executeAction() -> executeAction
    142:175:void startAnimation(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXComponent) -> startAnimation
com.taobao.weex.ui.action.GraphicActionAnimation$1 -> com.taobao.weex.ui.action.GraphicActionAnimation$1:
    233:233:void <init>(com.taobao.weex.ui.action.GraphicActionAnimation,com.taobao.weex.WXSDKInstance,java.lang.String) -> <init>
    236:243:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.taobao.weex.ui.action.GraphicActionAnimation$2 -> com.taobao.weex.ui.action.GraphicActionAnimation$2:
    269:269:void <init>(com.taobao.weex.ui.action.GraphicActionAnimation) -> <init>
    269:269:java.lang.Object map(java.lang.String) -> map
    272:272:java.lang.Float map(java.lang.String) -> map
com.taobao.weex.ui.action.GraphicActionAppendTreeCreateFinish -> com.taobao.weex.ui.action.GraphicActionAppendTreeCreateFinish:
    35:41:void <init>(com.taobao.weex.WXSDKInstance,java.lang.String) -> <init>
    46:46:void executeAction() -> executeAction
com.taobao.weex.ui.action.GraphicActionBatchAction -> com.taobao.weex.ui.action.GraphicActionBatchAction:
    31:33:void <init>(com.taobao.weex.WXSDKInstance,java.lang.String,java.util.List) -> <init>
    37:40:void executeAction() -> executeAction
com.taobao.weex.ui.action.GraphicActionBatchBegin -> com.taobao.weex.ui.action.GraphicActionBatchBegin:
    26:28:void <init>(com.taobao.weex.WXSDKInstance,java.lang.String) -> <init>
    33:33:void executeAction() -> executeAction
com.taobao.weex.ui.action.GraphicActionBatchEnd -> com.taobao.weex.ui.action.GraphicActionBatchEnd:
    26:28:void <init>(com.taobao.weex.WXSDKInstance,java.lang.String) -> <init>
    33:33:void executeAction() -> executeAction
com.taobao.weex.ui.action.GraphicActionCreateBody -> com.taobao.weex.ui.action.GraphicActionCreateBody:
    46:65:void <init>(com.taobao.weex.WXSDKInstance,java.lang.String,java.lang.String,java.util.Map,java.util.Map,java.util.Set,float[],float[],float[]) -> <init>
    69:91:void executeAction() -> executeAction
com.taobao.weex.ui.action.GraphicActionCreateFinish -> com.taobao.weex.ui.action.GraphicActionCreateFinish:
    38:46:void <init>(com.taobao.weex.WXSDKInstance) -> <init>
    50:72:void executeAction() -> executeAction
com.taobao.weex.ui.action.GraphicActionLayout -> com.taobao.weex.ui.action.GraphicActionLayout:
    32:36:void <init>(com.taobao.weex.WXSDKInstance,java.lang.String,com.taobao.weex.ui.action.GraphicPosition,com.taobao.weex.ui.action.GraphicSize,boolean) -> <init>
    40:49:void executeAction() -> executeAction
com.taobao.weex.ui.action.GraphicActionMoveElement -> com.taobao.weex.ui.action.GraphicActionMoveElement:
    34:37:void <init>(com.taobao.weex.WXSDKInstance,java.lang.String,java.lang.String,int) -> <init>
    41:69:void executeAction() -> executeAction
com.taobao.weex.ui.action.GraphicActionRefreshFinish -> com.taobao.weex.ui.action.GraphicActionRefreshFinish:
    35:41:void <init>(com.taobao.weex.WXSDKInstance) -> <init>
    45:51:void executeAction() -> executeAction
com.taobao.weex.ui.action.GraphicActionRemoveChildFromRichtext -> com.taobao.weex.ui.action.GraphicActionRemoveChildFromRichtext:
    30:38:void <init>(com.taobao.weex.WXSDKInstance,java.lang.String,java.lang.String,java.lang.String) -> <init>
    41:41:void executeAction() -> executeAction
com.taobao.weex.ui.action.GraphicActionRemoveElement -> com.taobao.weex.ui.action.GraphicActionRemoveElement:
    31:32:void <init>(com.taobao.weex.WXSDKInstance,java.lang.String) -> <init>
    53:65:void clearRegistryForComponent(com.taobao.weex.ui.component.WXComponent) -> clearRegistryForComponent
    36:50:void executeAction() -> executeAction
com.taobao.weex.ui.action.GraphicActionRemoveEvent -> com.taobao.weex.ui.action.GraphicActionRemoveEvent:
    35:37:void <init>(com.taobao.weex.WXSDKInstance,java.lang.String,java.lang.Object) -> <init>
    41:49:void executeAction() -> executeAction
com.taobao.weex.ui.action.GraphicActionRenderSuccess -> com.taobao.weex.ui.action.GraphicActionRenderSuccess:
    29:30:void <init>(com.taobao.weex.WXSDKInstance) -> <init>
    34:46:void executeAction() -> executeAction
com.taobao.weex.ui.action.GraphicActionScrollToElement -> com.taobao.weex.ui.action.GraphicActionScrollToElement:
    35:37:void <init>(com.taobao.weex.WXSDKInstance,java.lang.String,com.alibaba.fastjson.JSONObject) -> <init>
    41:51:void executeAction() -> executeAction
com.taobao.weex.ui.action.GraphicActionUpdateAttr -> com.taobao.weex.ui.action.GraphicActionUpdateAttr:
    34:44:void <init>(com.taobao.weex.WXSDKInstance,java.lang.String,java.util.Map) -> <init>
    48:53:void executeAction() -> executeAction
com.taobao.weex.ui.action.GraphicActionUpdateRichtextAttr -> com.taobao.weex.ui.action.GraphicActionUpdateRichtextAttr:
    31:39:void <init>(com.taobao.weex.WXSDKInstance,java.lang.String,java.util.HashMap,java.lang.String,java.lang.String) -> <init>
    42:42:void executeAction() -> executeAction
com.taobao.weex.ui.action.GraphicActionUpdateRichtextStyle -> com.taobao.weex.ui.action.GraphicActionUpdateRichtextStyle:
    30:39:void <init>(com.taobao.weex.WXSDKInstance,java.lang.String,java.util.HashMap,java.lang.String,java.lang.String) -> <init>
    43:43:void executeAction() -> executeAction
com.taobao.weex.ui.action.GraphicActionUpdateStyle -> com.taobao.weex.ui.action.GraphicActionUpdateStyle:
    45:46:void <init>(com.taobao.weex.WXSDKInstance,java.lang.String,java.util.Map,java.util.Map,java.util.Map,java.util.Map) -> <init>
    53:84:void <init>(com.taobao.weex.WXSDKInstance,java.lang.String,java.util.Map,com.taobao.weex.dom.CSSShorthand,com.taobao.weex.dom.CSSShorthand,com.taobao.weex.dom.CSSShorthand,boolean) -> <init>
    91:122:void <init>(com.taobao.weex.WXSDKInstance,java.lang.String,java.util.Map,java.util.Map,java.util.Map,java.util.Map,boolean) -> <init>
    126:140:void executeAction() -> executeAction
com.taobao.weex.ui.action.GraphicPosition -> com.taobao.weex.ui.action.GraphicPosition:
    28:33:void <init>(float,float,float,float) -> <init>
    60:60:float getBottom() -> getBottom
    36:36:float getLeft() -> getLeft
    52:52:float getRight() -> getRight
    44:44:float getTop() -> getTop
    64:65:void setBottom(float) -> setBottom
    40:41:void setLeft(float) -> setLeft
    56:57:void setRight(float) -> setRight
    48:49:void setTop(float) -> setTop
    69:73:void update(float,float,float,float) -> update
com.taobao.weex.ui.action.GraphicSize -> com.taobao.weex.ui.action.GraphicSize:
    26:29:void <init>(float,float) -> <init>
    40:40:float getHeight() -> getHeight
    32:32:float getWidth() -> getWidth
    44:45:void setHeight(float) -> setHeight
    36:37:void setWidth(float) -> setWidth
    48:50:void update(float,float) -> update
com.taobao.weex.ui.action.UpdateComponentDataAction -> com.taobao.weex.ui.action.UpdateComponentDataAction:
    46:50:void <init>(com.taobao.weex.WXSDKInstance,java.lang.String,com.alibaba.fastjson.JSONObject,java.lang.String) -> <init>
    54:68:void executeAction() -> executeAction
com.taobao.weex.ui.animation.BackgroundColorProperty -> com.taobao.weex.ui.animation.BackgroundColorProperty:
    37:38:void <init>() -> <init>
    32:32:java.lang.Object get(java.lang.Object) -> get
    44:52:java.lang.Integer get(android.view.View) -> get
    32:32:void set(java.lang.Object,java.lang.Object) -> set
    58:65:void set(android.view.View,java.lang.Integer) -> set
com.taobao.weex.ui.animation.CameraDistanceProperty -> com.taobao.weex.ui.animation.CameraDistanceProperty:
    37:38:void <init>() -> <init>
    27:27:java.lang.Object get(java.lang.Object) -> get
    42:46:java.lang.Float get(android.view.View) -> get
    33:33:android.util.Property getInstance() -> getInstance
    27:27:void set(java.lang.Object,java.lang.Object) -> set
    52:53:void set(android.view.View,java.lang.Float) -> set
com.taobao.weex.ui.animation.HeightProperty -> com.taobao.weex.ui.animation.HeightProperty:
    24:24:void <init>() -> <init>
    24:24:java.lang.Integer get(android.view.View) -> get
    28:28:java.lang.Integer getProperty(android.view.ViewGroup$LayoutParams) -> getProperty
    24:24:void set(android.view.View,java.lang.Integer) -> set
    33:34:void setProperty(android.view.ViewGroup$LayoutParams,java.lang.Integer) -> setProperty
com.taobao.weex.ui.animation.LayoutParamsProperty -> com.taobao.weex.ui.animation.LayoutParamsProperty:
    34:35:void <init>() -> <init>
    31:31:java.lang.Object get(java.lang.Object) -> get
    40:43:java.lang.Integer get(android.view.View) -> get
    31:31:void set(java.lang.Object,java.lang.Object) -> set
    49:59:void set(android.view.View,java.lang.Integer) -> set
com.taobao.weex.ui.animation.TransformParser -> com.taobao.weex.ui.animation.TransformParser:
    78:95:void <clinit>() -> <clinit>
    52:52:void <init>() -> <init>
    52:52:float access$000(java.lang.String,int,float) -> access$000
    308:308:float parsePercent(java.lang.String,int,int) -> parsePercent
    297:304:float parsePercentOrPx(java.lang.String,int,float) -> parsePercentOrPx
    247:264:android.util.Pair parsePivot(java.lang.String,int,int,float) -> parsePivot
    268:269:android.util.Pair parsePivot(java.util.List,int,int,float) -> parsePivot
    273:281:float parsePivotX(java.lang.String,int,float) -> parsePivotX
    285:293:float parsePivotY(java.lang.String,int,float) -> parsePivotY
    111:242:java.util.Map parseTransForm(java.lang.String,java.lang.String,int,int,float) -> parseTransForm
    98:104:android.animation.PropertyValuesHolder[] toHolders(java.util.Map) -> toHolders
com.taobao.weex.ui.animation.TransformParser$1 -> com.taobao.weex.ui.animation.TransformParser$1:
    113:113:void <init>(int,int,float) -> <init>
    128:149:java.util.Map convertParam(int,int,float,java.util.List,java.util.List) -> convertParam
    116:121:java.util.Map map(java.lang.String,java.util.List) -> map
    221:229:java.lang.Float parseCameraDistance(java.util.List) -> parseCameraDistance
    211:218:void parseDoubleTranslation(int,int,java.util.List,java.util.List,java.lang.String,float) -> parseDoubleTranslation
    167:176:java.util.List parseRotationZ(java.util.List) -> parseRotationZ
    153:162:java.util.List parseScale(int,java.util.List) -> parseScale
    200:205:void parseSingleTranslation(java.util.List,int,int,java.util.List,java.lang.String,float) -> parseSingleTranslation
    188:195:java.util.List parseTranslation(java.util.List,int,int,java.util.List,float) -> parseTranslation
com.taobao.weex.ui.animation.WXAnimationBean -> com.taobao.weex.ui.animation.WXAnimationBean:
    45:45:void <init>() -> <init>
com.taobao.weex.ui.animation.WXAnimationBean$Style -> com.taobao.weex.ui.animation.WXAnimationBean$Style:
    83:107:void <clinit>() -> <clinit>
    59:118:void <init>() -> <init>
    236:236:float getCameraDistance() -> getCameraDistance
    232:232:java.util.List getHolders() -> getHolders
    196:196:android.util.Pair getPivot() -> getPivot
    201:208:void init(java.lang.String,java.lang.String,int,int,float,com.taobao.weex.WXSDKInstance) -> init
    217:220:void init(java.util.Map) -> init
    223:229:void initHolders() -> initHolders
    184:184:float parsePercent(java.lang.String,int,float) -> parsePercent
    173:180:float parsePercentOrPx(java.lang.String,int,float) -> parsePercentOrPx
    123:140:android.util.Pair parsePivot(java.lang.String,int,int,float) -> parsePivot
    144:145:android.util.Pair parsePivot(java.util.List,int,int,float) -> parsePivot
    149:157:float parsePivotX(java.lang.String,int,float) -> parsePivotX
    161:169:float parsePivotY(java.lang.String,int,float) -> parsePivotY
    188:193:void resetToDefaultIfAbsent() -> resetToDefaultIfAbsent
com.taobao.weex.ui.animation.WXAnimationModule -> com.taobao.weex.ui.animation.WXAnimationModule:
    34:34:void <init>() -> <init>
    38:44:void transition(java.lang.String,java.lang.String,java.lang.String) -> transition
com.taobao.weex.ui.animation.WXAnimationModule$AnimationHolder -> com.taobao.weex.ui.animation.WXAnimationModule$AnimationHolder:
    55:58:void <init>(com.taobao.weex.ui.animation.WXAnimationBean,java.lang.String) -> <init>
    62:66:void execute(io.dcloud.feature.uniapp.AbsSDKInstance,io.dcloud.feature.uniapp.ui.component.AbsBasicComponent) -> execute
com.taobao.weex.ui.animation.WidthProperty -> com.taobao.weex.ui.animation.WidthProperty:
    24:24:void <init>() -> <init>
    24:24:java.lang.Integer get(android.view.View) -> get
    28:28:java.lang.Integer getProperty(android.view.ViewGroup$LayoutParams) -> getProperty
    24:24:void set(android.view.View,java.lang.Integer) -> set
    33:34:void setProperty(android.view.ViewGroup$LayoutParams,java.lang.Integer) -> setProperty
com.taobao.weex.ui.component.AbstractEditComponent -> com.taobao.weex.ui.component.AbstractEditComponent:
    78:210:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,boolean,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    75:75:void access$000(com.taobao.weex.ui.component.AbstractEditComponent) -> access$000
    75:75:java.lang.String access$100(com.taobao.weex.ui.component.AbstractEditComponent) -> access$100
    75:75:java.lang.String access$1000(com.taobao.weex.ui.component.AbstractEditComponent) -> access$1000
    75:75:java.lang.String access$1002(com.taobao.weex.ui.component.AbstractEditComponent,java.lang.String) -> access$1002
    75:75:void access$1100(com.taobao.weex.ui.component.AbstractEditComponent,java.lang.String,java.lang.String) -> access$1100
    75:75:int access$1200(com.taobao.weex.ui.component.AbstractEditComponent) -> access$1200
    75:75:boolean access$1300(com.taobao.weex.ui.component.AbstractEditComponent) -> access$1300
    75:75:boolean access$1302(com.taobao.weex.ui.component.AbstractEditComponent,boolean) -> access$1302
    75:75:java.lang.String access$1400(com.taobao.weex.ui.component.AbstractEditComponent) -> access$1400
    75:75:java.lang.String access$1402(com.taobao.weex.ui.component.AbstractEditComponent,java.lang.String) -> access$1402
    75:75:java.lang.String access$1500(com.taobao.weex.ui.component.AbstractEditComponent) -> access$1500
    75:75:android.view.inputmethod.InputMethodManager access$1600(com.taobao.weex.ui.component.AbstractEditComponent) -> access$1600
    75:75:java.util.List access$1800(com.taobao.weex.ui.component.AbstractEditComponent) -> access$1800
    75:75:boolean access$1900(com.taobao.weex.ui.component.AbstractEditComponent) -> access$1900
    75:75:void access$200(com.taobao.weex.ui.component.AbstractEditComponent) -> access$200
    75:75:java.lang.String access$300(com.taobao.weex.ui.component.AbstractEditComponent) -> access$300
    75:75:java.lang.String access$400(com.taobao.weex.ui.component.AbstractEditComponent) -> access$400
    75:75:java.util.List access$500(com.taobao.weex.ui.component.AbstractEditComponent) -> access$500
    75:75:com.taobao.weex.ui.component.AbstractEditComponent$TextFormatter access$600(com.taobao.weex.ui.component.AbstractEditComponent) -> access$600
    75:75:int access$900(com.taobao.weex.ui.component.AbstractEditComponent) -> access$900
    75:75:int access$902(com.taobao.weex.ui.component.AbstractEditComponent,int) -> access$902
    890:909:void addEditorActionListener(android.widget.TextView$OnEditorActionListener) -> addEditorActionListener
    310:402:void addEvent(java.lang.String) -> addEvent
    919:948:void addKeyboardListener(com.taobao.weex.ui.view.WXEditText) -> addKeyboardListener
    912:916:void addTextChangedListener(android.text.TextWatcher) -> addTextChangedListener
    247:305:void appleStyleAfterCreated(com.taobao.weex.ui.view.WXEditText) -> appleStyleAfterCreated
    233:234:void applyOnClickListener() -> applyOnClickListener
    783:791:void blur() -> blur
    809:815:java.lang.Object convertEmptyProperty(java.lang.String,java.lang.Object) -> convertEmptyProperty
    820:834:void decideSoftKeyboard() -> decideSoftKeyboard
    952:964:void destroy() -> destroy
    405:417:void fireEvent(java.lang.String,java.lang.String) -> fireEvent
    795:805:void focus() -> focus
    688:726:int getInputType(java.lang.String) -> getInputType
    145:145:float getMeasureHeight() -> getMeasureHeight
    141:141:float getMeasuredLineHeight() -> getMeasuredLineHeight
    852:867:void getSelectionRange(java.lang.String) -> getSelectionRange
    765:778:int getTextAlign(java.lang.String) -> getTextAlign
    238:238:int getVerticalGravity() -> getVerticalGravity
    754:762:void hideSoftKeyboard() -> hideSoftKeyboard
    75:75:android.view.View initComponentHostView(android.content.Context) -> initComponentHostView
    183:185:com.taobao.weex.ui.view.WXEditText initComponentHostView(android.content.Context) -> initComponentHostView
    207:207:boolean isConsumeTouch() -> isConsumeTouch
    130:138:void layoutDirectionDidChanged(boolean) -> layoutDirectionDidChanged
    75:75:void onHostViewInitialized(android.view.View) -> onHostViewInitialized
    190:202:void onHostViewInitialized(com.taobao.weex.ui.view.WXEditText) -> onHostViewInitialized
    967:1008:com.taobao.weex.ui.component.AbstractEditComponent$PatternWrapper parseToPattern(java.lang.String,java.lang.String) -> parseToPattern
    420:424:void performOnChange(java.lang.String) -> performOnChange
    589:602:void setAutofocus(boolean) -> setAutofocus
    623:629:void setColor(java.lang.String) -> setColor
    633:638:void setFontSize(java.lang.String) -> setFontSize
    658:662:void setLines(int) -> setLines
    731:732:void setMax(java.lang.String) -> setMax
    670:674:void setMaxLength(int) -> setMaxLength
    683:684:void setMaxlength(int) -> setMaxlength
    736:737:void setMin(java.lang.String) -> setMin
    555:559:void setPlaceholder(java.lang.String) -> setPlaceholder
    563:569:void setPlaceholderColor(java.lang.String) -> setPlaceholderColor
    428:516:boolean setProperty(java.lang.String,java.lang.Object) -> setProperty
    521:551:void setReturnKeyType(java.lang.String) -> setReturnKeyType
    839:847:void setSelectionRange(int,int) -> setSelectionRange
    650:654:void setSingleLine(boolean) -> setSingleLine
    642:646:void setTextAlign(java.lang.String) -> setTextAlign
    872:886:void setTextFormatter(com.alibaba.fastjson.JSONObject) -> setTextFormatter
    573:585:void setType(java.lang.String) -> setType
    607:619:void setValue(java.lang.String) -> setValue
    740:750:boolean showSoftKeyboard() -> showSoftKeyboard
    149:179:void updateStyleAndAttrs() -> updateStyleAndAttrs
com.taobao.weex.ui.component.AbstractEditComponent$1 -> com.taobao.weex.ui.component.AbstractEditComponent$1:
    103:103:void <init>(com.taobao.weex.ui.component.AbstractEditComponent) -> <init>
    124:124:void layoutAfter(float,float) -> layoutAfter
    117:118:void layoutBefore() -> layoutBefore
    107:112:void measureInternal(float,float,int,int) -> measureInternal
com.taobao.weex.ui.component.AbstractEditComponent$10 -> com.taobao.weex.ui.component.AbstractEditComponent$10:
    755:755:void <init>(com.taobao.weex.ui.component.AbstractEditComponent) -> <init>
    758:759:void run() -> run
com.taobao.weex.ui.component.AbstractEditComponent$11 -> com.taobao.weex.ui.component.AbstractEditComponent$11:
    823:823:void <init>(com.taobao.weex.ui.component.AbstractEditComponent,android.content.Context) -> <init>
    826:830:void run() -> run
com.taobao.weex.ui.component.AbstractEditComponent$12 -> com.taobao.weex.ui.component.AbstractEditComponent$12:
    893:894:void <init>(com.taobao.weex.ui.component.AbstractEditComponent) -> <init>
    898:903:boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.taobao.weex.ui.component.AbstractEditComponent$13 -> com.taobao.weex.ui.component.AbstractEditComponent$13:
    924:924:void <init>(com.taobao.weex.ui.component.AbstractEditComponent,android.content.Context) -> <init>
    927:945:void onKeyboardEvent(boolean) -> onKeyboardEvent
com.taobao.weex.ui.component.AbstractEditComponent$2 -> com.taobao.weex.ui.component.AbstractEditComponent$2:
    191:191:void <init>(com.taobao.weex.ui.component.AbstractEditComponent) -> <init>
    194:198:void onFocusChange(boolean) -> onFocusChange
com.taobao.weex.ui.component.AbstractEditComponent$3 -> com.taobao.weex.ui.component.AbstractEditComponent$3:
    210:210:void <init>(com.taobao.weex.ui.component.AbstractEditComponent) -> <init>
    213:229:void onHostViewClick() -> onHostViewClick
com.taobao.weex.ui.component.AbstractEditComponent$4 -> com.taobao.weex.ui.component.AbstractEditComponent$4:
    258:258:void <init>(com.taobao.weex.ui.component.AbstractEditComponent,com.taobao.weex.ui.view.WXEditText) -> <init>
    295:300:void afterTextChanged(android.text.Editable) -> afterTextChanged
    261:266:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    270:291:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.taobao.weex.ui.component.AbstractEditComponent$5 -> com.taobao.weex.ui.component.AbstractEditComponent$5:
    317:317:void <init>(com.taobao.weex.ui.component.AbstractEditComponent,android.widget.TextView) -> <init>
    320:330:void onFocusChange(boolean) -> onFocusChange
com.taobao.weex.ui.component.AbstractEditComponent$6 -> com.taobao.weex.ui.component.AbstractEditComponent$6:
    333:333:void <init>(com.taobao.weex.ui.component.AbstractEditComponent,android.widget.TextView) -> <init>
    336:349:boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.taobao.weex.ui.component.AbstractEditComponent$7 -> com.taobao.weex.ui.component.AbstractEditComponent$7:
    353:353:void <init>(com.taobao.weex.ui.component.AbstractEditComponent) -> <init>
    379:379:void afterTextChanged(android.text.Editable) -> afterTextChanged
    357:357:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    361:374:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.taobao.weex.ui.component.AbstractEditComponent$8 -> com.taobao.weex.ui.component.AbstractEditComponent$8:
    384:384:void <init>(com.taobao.weex.ui.component.AbstractEditComponent) -> <init>
    387:394:boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.taobao.weex.ui.component.AbstractEditComponent$9 -> com.taobao.weex.ui.component.AbstractEditComponent$9:
    743:743:void <init>(com.taobao.weex.ui.component.AbstractEditComponent) -> <init>
    746:747:void run() -> run
com.taobao.weex.ui.component.AbstractEditComponent$PatternWrapper -> com.taobao.weex.ui.component.AbstractEditComponent$PatternWrapper:
    1020:1021:void <init>() -> <init>
    1020:1020:void <init>(com.taobao.weex.ui.component.AbstractEditComponent$1) -> <init>
    1020:1020:boolean access$2100(com.taobao.weex.ui.component.AbstractEditComponent$PatternWrapper) -> access$2100
    1020:1020:boolean access$2102(com.taobao.weex.ui.component.AbstractEditComponent$PatternWrapper,boolean) -> access$2102
    1020:1020:java.util.regex.Pattern access$2200(com.taobao.weex.ui.component.AbstractEditComponent$PatternWrapper) -> access$2200
    1020:1020:java.util.regex.Pattern access$2202(com.taobao.weex.ui.component.AbstractEditComponent$PatternWrapper,java.util.regex.Pattern) -> access$2202
    1020:1020:java.lang.String access$2300(com.taobao.weex.ui.component.AbstractEditComponent$PatternWrapper) -> access$2300
    1020:1020:java.lang.String access$2302(com.taobao.weex.ui.component.AbstractEditComponent$PatternWrapper,java.lang.String) -> access$2302
com.taobao.weex.ui.component.AbstractEditComponent$TextFormatter -> com.taobao.weex.ui.component.AbstractEditComponent$TextFormatter:
    1026:1026:void <init>(com.taobao.weex.ui.component.AbstractEditComponent$PatternWrapper,com.taobao.weex.ui.component.AbstractEditComponent$PatternWrapper,com.taobao.weex.ui.component.AbstractEditComponent$1) -> <init>
    1030:1033:void <init>(com.taobao.weex.ui.component.AbstractEditComponent$PatternWrapper,com.taobao.weex.ui.component.AbstractEditComponent$PatternWrapper) -> <init>
    1026:1026:java.lang.String access$700(com.taobao.weex.ui.component.AbstractEditComponent$TextFormatter,java.lang.String) -> access$700
    1026:1026:java.lang.String access$800(com.taobao.weex.ui.component.AbstractEditComponent$TextFormatter,java.lang.String) -> access$800
    1037:1048:java.lang.String format(java.lang.String) -> format
    1053:1064:java.lang.String recover(java.lang.String) -> recover
com.taobao.weex.ui.component.AppearanceHelper -> com.taobao.weex.ui.component.AppearanceHelper:
    51:52:void <init>(com.taobao.weex.ui.component.WXComponent) -> <init>
    33:57:void <init>(com.taobao.weex.ui.component.WXComponent,int) -> <init>
    84:84:com.taobao.weex.ui.component.WXComponent getAwareChild() -> getAwareChild
    64:64:int getCellPositionINScollable() -> getCellPositionINScollable
    88:88:boolean isAppear() -> isAppear
    101:109:boolean isViewVisible(boolean) -> isViewVisible
    114:119:boolean isViewVisible(android.view.View) -> isViewVisible
    79:79:boolean isWatch() -> isWatch
    92:97:int setAppearStatus(boolean) -> setAppearStatus
    60:61:void setCellPosition(int) -> setCellPosition
    72:73:void setWatchEvent(int,boolean) -> setWatchEvent
com.taobao.weex.ui.component.ConfirmBar -> com.taobao.weex.ui.component.ConfirmBar:
    28:35:void <init>() -> <init>
    28:28:void access$000(com.taobao.weex.ui.component.ConfirmBar,boolean,int) -> access$000
    28:28:java.util.List access$100(com.taobao.weex.ui.component.ConfirmBar) -> access$100
    28:28:java.util.concurrent.atomic.AtomicReference access$202(com.taobao.weex.ui.component.ConfirmBar,java.util.concurrent.atomic.AtomicReference) -> access$202
    28:28:android.widget.RelativeLayout access$302(com.taobao.weex.ui.component.ConfirmBar,android.widget.RelativeLayout) -> access$302
    28:28:android.view.ViewGroup access$402(com.taobao.weex.ui.component.ConfirmBar,android.view.ViewGroup) -> access$402
    79:82:void addComponent(com.taobao.weex.ui.component.WXComponent) -> addComponent
    93:175:void createConfirmBar(android.content.Context,io.dcloud.common.DHInterface.IApp) -> createConfirmBar
    38:45:com.taobao.weex.ui.component.ConfirmBar getInstance() -> getInstance
    86:89:void removeComponent(com.taobao.weex.ui.component.WXComponent) -> removeComponent
    50:75:void showConfirm(boolean,int) -> showConfirm
com.taobao.weex.ui.component.ConfirmBar$1 -> com.taobao.weex.ui.component.ConfirmBar$1:
    94:94:void <init>(com.taobao.weex.ui.component.ConfirmBar,android.content.Context) -> <init>
    97:120:boolean onExecute(io.dcloud.common.DHInterface.ISysEventListener$SysEventType,java.lang.Object) -> onExecute
com.taobao.weex.ui.component.ConfirmBar$2 -> com.taobao.weex.ui.component.ConfirmBar$2:
    141:141:void <init>(com.taobao.weex.ui.component.ConfirmBar) -> <init>
    144:166:void onClick(android.view.View) -> onClick
com.taobao.weex.ui.component.DCTextArea -> com.taobao.weex.ui.component.DCTextArea:
    26:236:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,boolean,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    24:24:com.taobao.weex.dom.WXAttr access$000(com.taobao.weex.ui.component.DCTextArea) -> access$000
    24:24:boolean access$200(com.taobao.weex.ui.component.DCTextArea) -> access$200
    24:24:boolean access$300(com.taobao.weex.ui.component.DCTextArea) -> access$300
    61:65:void addEvent(java.lang.String) -> addEvent
    189:194:void appleStyleAfterCreated(com.taobao.weex.ui.view.WXEditText) -> appleStyleAfterCreated
    245:247:void destroy() -> destroy
    231:233:float getMeasureHeight() -> getMeasureHeight
    203:203:int getVerticalGravity() -> getVerticalGravity
    24:24:void onHostViewInitialized(android.view.View) -> onHostViewInitialized
    132:145:void onHostViewInitialized(com.taobao.weex.ui.view.WXEditText) -> onHostViewInitialized
    221:222:void setAutoHeight(boolean) -> setAutoHeight
    125:128:void setFocusAndBlur() -> setFocusAndBlur
    24:24:void setHostLayoutParams(android.view.View,int,int,int,int,int,int) -> setHostLayoutParams
    198:199:void setHostLayoutParams(com.taobao.weex.ui.view.WXEditText,int,int,int,int,int,int) -> setHostLayoutParams
    208:209:boolean setProperty(java.lang.String,java.lang.Object) -> setProperty
    240:241:void setShowConfirmBar(boolean) -> setShowConfirmBar
    226:227:void setSingleLine(boolean) -> setSingleLine
    214:217:void setType(java.lang.String) -> setType
    148:185:void watchLine() -> watchLine
com.taobao.weex.ui.component.DCTextArea$1 -> com.taobao.weex.ui.component.DCTextArea$1:
    32:32:void <init>(com.taobao.weex.ui.component.DCTextArea) -> <init>
    53:53:void layoutAfter(float,float) -> layoutAfter
    48:48:void layoutBefore() -> layoutBefore
    35:43:void measureInternal(float,float,int,int) -> measureInternal
com.taobao.weex.ui.component.DCTextArea$2 -> com.taobao.weex.ui.component.DCTextArea$2:
    66:93:void <init>(com.taobao.weex.ui.component.DCTextArea) -> <init>
    66:66:void access$100(com.taobao.weex.ui.component.DCTextArea$2,android.widget.TextView) -> access$100
    95:121:void fireEventForFocus(android.widget.TextView) -> fireEventForFocus
    69:91:void onFocusChange(boolean) -> onFocusChange
com.taobao.weex.ui.component.DCTextArea$2$1 -> com.taobao.weex.ui.component.DCTextArea$2$1:
    95:95:void <init>(com.taobao.weex.ui.component.DCTextArea$2,android.widget.TextView) -> <init>
    98:119:void run() -> run
com.taobao.weex.ui.component.DCTextArea$3 -> com.taobao.weex.ui.component.DCTextArea$3:
    148:149:void <init>(com.taobao.weex.ui.component.DCTextArea) -> <init>
    183:183:void afterTextChanged(android.text.Editable) -> afterTextChanged
    153:153:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    157:179:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.taobao.weex.ui.component.DCWXInput -> com.taobao.weex.ui.component.DCWXInput:
    91:657:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,boolean,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    88:88:float access$002(com.taobao.weex.ui.component.DCWXInput,float) -> access$002
    88:88:com.taobao.weex.ui.component.DCWXInput$TextFormatter access$1000(com.taobao.weex.ui.component.DCWXInput) -> access$1000
    88:88:float access$102(com.taobao.weex.ui.component.DCWXInput,float) -> access$102
    88:88:int access$1100(com.taobao.weex.ui.component.DCWXInput) -> access$1100
    88:88:int access$1102(com.taobao.weex.ui.component.DCWXInput,int) -> access$1102
    88:88:boolean access$1200(com.taobao.weex.ui.component.DCWXInput) -> access$1200
    88:88:boolean access$1202(com.taobao.weex.ui.component.DCWXInput,boolean) -> access$1202
    88:88:java.lang.String access$1300(com.taobao.weex.ui.component.DCWXInput) -> access$1300
    88:88:java.lang.String access$1302(com.taobao.weex.ui.component.DCWXInput,java.lang.String) -> access$1302
    88:88:java.util.concurrent.atomic.AtomicBoolean access$1500(com.taobao.weex.ui.component.DCWXInput) -> access$1500
    88:88:void access$1600(com.taobao.weex.ui.component.DCWXInput,android.widget.EditText) -> access$1600
    88:88:int access$1700(com.taobao.weex.ui.component.DCWXInput) -> access$1700
    88:88:int access$1800(com.taobao.weex.ui.component.DCWXInput) -> access$1800
    88:88:void access$1900(com.taobao.weex.ui.component.DCWXInput,int,int) -> access$1900
    88:88:void access$200(com.taobao.weex.ui.component.DCWXInput) -> access$200
    88:88:com.taobao.weex.WXSDKInstance$FrameViewEventListener access$2002(com.taobao.weex.ui.component.DCWXInput,com.taobao.weex.WXSDKInstance$FrameViewEventListener) -> access$2002
    88:88:android.view.inputmethod.InputMethodManager access$2100(com.taobao.weex.ui.component.DCWXInput) -> access$2100
    88:88:java.util.List access$2300(com.taobao.weex.ui.component.DCWXInput) -> access$2300
    88:88:boolean access$2400(com.taobao.weex.ui.component.DCWXInput) -> access$2400
    88:88:java.lang.String access$2500(com.taobao.weex.ui.component.DCWXInput) -> access$2500
    88:88:void access$300(com.taobao.weex.ui.component.DCWXInput) -> access$300
    88:88:java.lang.String access$400(com.taobao.weex.ui.component.DCWXInput) -> access$400
    88:88:java.lang.String access$500(com.taobao.weex.ui.component.DCWXInput) -> access$500
    88:88:int access$600(com.taobao.weex.ui.component.DCWXInput,java.lang.String) -> access$600
    88:88:boolean access$700(com.taobao.weex.ui.component.DCWXInput) -> access$700
    88:88:int access$800(com.taobao.weex.ui.component.DCWXInput) -> access$800
    88:88:java.util.List access$900(com.taobao.weex.ui.component.DCWXInput) -> access$900
    1154:1173:void addEditorActionListener(android.widget.TextView$OnEditorActionListener) -> addEditorActionListener
    259:276:void addEditorChangeListener() -> addEditorChangeListener
    358:412:void addEvent(java.lang.String) -> addEvent
    1183:1217:void addKeyboardListener(com.taobao.weex.ui.view.WXEditText) -> addKeyboardListener
    1176:1180:void addTextChangedListener(android.text.TextWatcher) -> addTextChangedListener
    294:353:void appleStyleAfterCreated(com.taobao.weex.ui.view.WXEditText) -> appleStyleAfterCreated
    1013:1021:void blur() -> blur
    1053:1059:java.lang.Object convertEmptyProperty(java.lang.String,java.lang.Object) -> convertEmptyProperty
    1064:1078:void decideSoftKeyboard() -> decideSoftKeyboard
    1265:1278:void destroy() -> destroy
    1039:1049:void focus() -> focus
    1124:1131:void getCursor(com.taobao.weex.bridge.JSCallback) -> getCursor
    905:946:int getInputType(java.lang.String) -> getInputType
    181:181:float getMeasureHeight() -> getMeasureHeight
    177:177:float getMeasuredLineHeight() -> getMeasuredLineHeight
    1105:1120:void getSelectionRange(java.lang.String) -> getSelectionRange
    991:1008:int getTextAlign(java.lang.String) -> getTextAlign
    1028:1028:java.lang.String getValue() -> getValue
    285:285:int getVerticalGravity() -> getVerticalGravity
    980:988:void hideSoftKeyboard() -> hideSoftKeyboard
    721:726:void hostViewFocus(android.widget.EditText) -> hostViewFocus
    88:88:android.view.View initComponentHostView(android.content.Context) -> initComponentHostView
    219:222:com.taobao.weex.ui.view.WXEditText initComponentHostView(android.content.Context) -> initComponentHostView
    281:281:boolean isConsumeTouch() -> isConsumeTouch
    166:174:void layoutDirectionDidChanged(boolean) -> layoutDirectionDidChanged
    88:88:void onHostViewInitialized(android.view.View) -> onHostViewInitialized
    227:256:void onHostViewInitialized(com.taobao.weex.ui.view.WXEditText) -> onHostViewInitialized
    1281:1322:com.taobao.weex.ui.component.DCWXInput$PatternWrapper parseToPattern(java.lang.String,java.lang.String) -> parseToPattern
    713:718:void setAdjustPosition(java.lang.Object) -> setAdjustPosition
    661:709:void setAutofocus(boolean) -> setAutofocus
    748:754:void setColor(java.lang.String) -> setColor
    961:965:void setCursorSpacing(java.lang.String) -> setCursorSpacing
    472:475:void setFocusAndBlur() -> setFocusAndBlur
    758:763:void setFontSize(java.lang.String) -> setFontSize
    88:88:void setHostLayoutParams(android.view.View,int,int,int,int,int,int) -> setHostLayoutParams
    156:157:void setHostLayoutParams(com.taobao.weex.ui.view.WXEditText,int,int,int,int,int,int) -> setHostLayoutParams
    161:162:void setLayoutSize(com.taobao.weex.ui.action.GraphicSize) -> setLayoutSize
    871:875:void setLines(int) -> setLines
    884:890:void setMaxLength(int) -> setMaxLength
    900:901:void setMaxlength(int) -> setMaxlength
    625:629:void setPlaceholder(java.lang.String) -> setPlaceholder
    849:850:void setPlaceholderClass(com.alibaba.fastjson.JSONObject) -> setPlaceholderClass
    633:639:void setPlaceholderColor(java.lang.String) -> setPlaceholderColor
    767:845:void setPlaceholderStyle(com.alibaba.fastjson.JSONObject) -> setPlaceholderStyle
    486:586:boolean setProperty(java.lang.String,java.lang.Object) -> setProperty
    591:621:void setReturnKeyType(java.lang.String) -> setReturnKeyType
    1083:1100:void setSelectionRange(int,int) -> setSelectionRange
    863:867:void setSingleLine(boolean) -> setSingleLine
    731:744:void setText(java.lang.String) -> setText
    854:859:void setTextAlign(java.lang.String) -> setTextAlign
    1136:1150:void setTextFormatter(com.alibaba.fastjson.JSONObject) -> setTextFormatter
    643:655:void setType(java.lang.String) -> setType
    1033:1035:void setValue(java.lang.String) -> setValue
    968:977:void showSoftKeyboard() -> showSoftKeyboard
    1226:1261:void updateProperties(java.util.Map) -> updateProperties
    185:215:void updateStyleAndAttrs() -> updateStyleAndAttrs
com.taobao.weex.ui.component.DCWXInput$1 -> com.taobao.weex.ui.component.DCWXInput$1:
    126:126:void <init>(com.taobao.weex.ui.component.DCWXInput) -> <init>
    150:150:void layoutAfter(float,float) -> layoutAfter
    143:144:void layoutBefore() -> layoutBefore
    131:138:void measureInternal(float,float,int,int) -> measureInternal
com.taobao.weex.ui.component.DCWXInput$10 -> com.taobao.weex.ui.component.DCWXInput$10:
    981:981:void <init>(com.taobao.weex.ui.component.DCWXInput) -> <init>
    984:985:void run() -> run
com.taobao.weex.ui.component.DCWXInput$11 -> com.taobao.weex.ui.component.DCWXInput$11:
    1067:1067:void <init>(com.taobao.weex.ui.component.DCWXInput,android.content.Context) -> <init>
    1070:1074:void run() -> run
com.taobao.weex.ui.component.DCWXInput$12 -> com.taobao.weex.ui.component.DCWXInput$12:
    1157:1158:void <init>(com.taobao.weex.ui.component.DCWXInput) -> <init>
    1162:1167:boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.taobao.weex.ui.component.DCWXInput$13 -> com.taobao.weex.ui.component.DCWXInput$13:
    1188:1188:void <init>(com.taobao.weex.ui.component.DCWXInput,com.taobao.weex.ui.view.WXEditText) -> <init>
    1191:1214:void onChange(boolean,int) -> onChange
com.taobao.weex.ui.component.DCWXInput$2 -> com.taobao.weex.ui.component.DCWXInput$2:
    234:234:void <init>(com.taobao.weex.ui.component.DCWXInput) -> <init>
    237:250:void onFocusChange(boolean) -> onFocusChange
com.taobao.weex.ui.component.DCWXInput$3 -> com.taobao.weex.ui.component.DCWXInput$3:
    259:259:void <init>(com.taobao.weex.ui.component.DCWXInput) -> <init>
    262:273:boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.taobao.weex.ui.component.DCWXInput$4 -> com.taobao.weex.ui.component.DCWXInput$4:
    305:305:void <init>(com.taobao.weex.ui.component.DCWXInput,com.taobao.weex.ui.view.WXEditText) -> <init>
    342:347:void afterTextChanged(android.text.Editable) -> afterTextChanged
    308:313:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    317:338:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.taobao.weex.ui.component.DCWXInput$5 -> com.taobao.weex.ui.component.DCWXInput$5:
    362:362:void <init>(com.taobao.weex.ui.component.DCWXInput) -> <init>
    401:401:void afterTextChanged(android.text.Editable) -> afterTextChanged
    366:366:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    370:397:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
com.taobao.weex.ui.component.DCWXInput$6 -> com.taobao.weex.ui.component.DCWXInput$6:
    414:440:void <init>(com.taobao.weex.ui.component.DCWXInput) -> <init>
    414:414:void access$1400(com.taobao.weex.ui.component.DCWXInput$6,android.widget.TextView) -> access$1400
    442:468:void fireEventForFocus(android.widget.TextView) -> fireEventForFocus
    417:438:void onFocusChange(boolean) -> onFocusChange
com.taobao.weex.ui.component.DCWXInput$6$1 -> com.taobao.weex.ui.component.DCWXInput$6$1:
    442:442:void <init>(com.taobao.weex.ui.component.DCWXInput$6,android.widget.TextView) -> <init>
    445:466:void run() -> run
com.taobao.weex.ui.component.DCWXInput$7 -> com.taobao.weex.ui.component.DCWXInput$7:
    667:667:void <init>(com.taobao.weex.ui.component.DCWXInput,boolean,android.widget.EditText) -> <init>
    670:679:void onGlobalLayout() -> onGlobalLayout
com.taobao.weex.ui.component.DCWXInput$8 -> com.taobao.weex.ui.component.DCWXInput$8:
    685:685:void <init>(com.taobao.weex.ui.component.DCWXInput,boolean,android.widget.EditText) -> <init>
    688:698:void onShowAnimationEnd() -> onShowAnimationEnd
com.taobao.weex.ui.component.DCWXInput$9 -> com.taobao.weex.ui.component.DCWXInput$9:
    970:970:void <init>(com.taobao.weex.ui.component.DCWXInput) -> <init>
    973:974:void run() -> run
com.taobao.weex.ui.component.DCWXInput$PatternWrapper -> com.taobao.weex.ui.component.DCWXInput$PatternWrapper:
    1334:1335:void <init>() -> <init>
    1334:1334:void <init>(com.taobao.weex.ui.component.DCWXInput$1) -> <init>
    1334:1334:boolean access$2700(com.taobao.weex.ui.component.DCWXInput$PatternWrapper) -> access$2700
    1334:1334:boolean access$2702(com.taobao.weex.ui.component.DCWXInput$PatternWrapper,boolean) -> access$2702
    1334:1334:java.util.regex.Pattern access$2800(com.taobao.weex.ui.component.DCWXInput$PatternWrapper) -> access$2800
    1334:1334:java.util.regex.Pattern access$2802(com.taobao.weex.ui.component.DCWXInput$PatternWrapper,java.util.regex.Pattern) -> access$2802
    1334:1334:java.lang.String access$2900(com.taobao.weex.ui.component.DCWXInput$PatternWrapper) -> access$2900
    1334:1334:java.lang.String access$2902(com.taobao.weex.ui.component.DCWXInput$PatternWrapper,java.lang.String) -> access$2902
com.taobao.weex.ui.component.DCWXInput$TextFormatter -> com.taobao.weex.ui.component.DCWXInput$TextFormatter:
    1340:1340:void <init>(com.taobao.weex.ui.component.DCWXInput$PatternWrapper,com.taobao.weex.ui.component.DCWXInput$PatternWrapper,com.taobao.weex.ui.component.DCWXInput$1) -> <init>
    1344:1347:void <init>(com.taobao.weex.ui.component.DCWXInput$PatternWrapper,com.taobao.weex.ui.component.DCWXInput$PatternWrapper) -> <init>
    1351:1362:java.lang.String format(java.lang.String) -> format
    1367:1378:java.lang.String recover(java.lang.String) -> recover
com.taobao.weex.ui.component.DCWXScroller -> com.taobao.weex.ui.component.DCWXScroller:
    155:156:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,java.lang.String,boolean,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    94:936:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    91:91:boolean access$000(com.taobao.weex.ui.component.DCWXScroller,int,int) -> access$000
    91:91:void access$100(com.taobao.weex.ui.component.DCWXScroller,android.graphics.Rect,int,int,int,int) -> access$100
    91:91:android.os.Handler access$1000(com.taobao.weex.ui.component.DCWXScroller) -> access$1000
    91:91:java.util.ArrayList access$1100(com.taobao.weex.ui.component.DCWXScroller) -> access$1100
    91:91:void access$200(com.taobao.weex.ui.component.DCWXScroller,int,int,int,int) -> access$200
    91:91:android.widget.FrameLayout access$300(com.taobao.weex.ui.component.DCWXScroller) -> access$300
    91:91:int access$400(com.taobao.weex.ui.component.DCWXScroller) -> access$400
    91:91:int access$402(com.taobao.weex.ui.component.DCWXScroller,int) -> access$402
    91:91:android.view.GestureDetector access$500(com.taobao.weex.ui.component.DCWXScroller) -> access$500
    91:91:int access$600(com.taobao.weex.ui.component.DCWXScroller) -> access$600
    91:91:int access$602(com.taobao.weex.ui.component.DCWXScroller,int) -> access$602
    91:91:boolean access$702(com.taobao.weex.ui.component.DCWXScroller,boolean) -> access$702
    91:91:void access$800(com.taobao.weex.ui.component.DCWXScroller) -> access$800
    91:91:java.util.concurrent.atomic.AtomicBoolean access$900(com.taobao.weex.ui.component.DCWXScroller) -> access$900
    415:423:void addChild(com.taobao.weex.ui.component.WXComponent,int) -> addChild
    199:284:void addEvent(java.lang.String) -> addEvent
    376:391:void addSubView(android.view.View,int) -> addSubView
    1075:1076:void bindAppearEvent(com.taobao.weex.ui.component.WXComponent) -> bindAppearEvent
    1096:1097:void bindDisappearEvent(com.taobao.weex.ui.component.WXComponent) -> bindDisappearEvent
    1062:1063:void bindStickStyle(com.taobao.weex.ui.component.WXComponent) -> bindStickStyle
    1249:1262:boolean checkItemVisibleInScroller(com.taobao.weex.ui.component.WXComponent) -> checkItemVisibleInScroller
    432:456:boolean checkRefreshOrLoading(com.taobao.weex.ui.component.WXComponent) -> checkRefreshOrLoading
    175:181:void createViewImpl() -> createViewImpl
    471:484:void destroy() -> destroy
    1269:1280:void dispatchDisappearEvent() -> dispatchDisappearEvent
    287:288:void fireScrollEvent(android.graphics.Rect,int,int,int,int) -> fireScrollEvent
    395:405:int getChildrenLayoutTopOffset() -> getChildrenLayoutTopOffset
    187:193:android.view.ViewGroup getInnerView() -> getInnerView
    789:789:int getOrientation() -> getOrientation
    89:89:android.view.View getRealView() -> getRealView
    169:169:android.view.ViewGroup getRealView() -> getRealView
    291:320:java.util.Map getScrollEvent(int,int,int,int) -> getScrollEvent
    324:344:java.util.Map getScrollEvent(int,int) -> getScrollEvent
    1354:1357:com.taobao.weex.ui.component.helper.ScrollStartEndHelper getScrollStartEndHelper() -> getScrollStartEndHelper
    784:784:int getScrollX() -> getScrollX
    779:779:int getScrollY() -> getScrollY
    793:793:java.util.Map getStickMap() -> getStickMap
    884:893:com.taobao.weex.ui.component.WXComponent getViewById(java.lang.String) -> getViewById
    89:89:android.view.View initComponentHostView(android.content.Context) -> initComponentHostView
    545:774:android.view.ViewGroup initComponentHostView(android.content.Context) -> initComponentHostView
    926:927:void isEnableBackToTop(boolean) -> isEnableBackToTop
    1056:1056:boolean isScrollable() -> isScrollable
    524:538:com.taobao.weex.ui.component.WXComponent$MeasureOutput measure(int,int) -> measure
    1199:1206:void notifyAppearStateChange(java.lang.String,java.lang.String) -> notifyAppearStateChange
    1027:1028:void onFinishLayout() -> onFinishLayout
    1312:1346:void onLoadMore(android.widget.FrameLayout,int,int) -> onLoadMore
    1299:1300:void onScroll(io.dcloud.feature.weex_scroller.view.DCWXScrollView,int,int) -> onScroll
    1194:1195:void onScrollChanged(io.dcloud.feature.weex_scroller.view.DCWXScrollView,int,int,int,int) -> onScrollChanged
    1294:1294:void onScrollStopped(io.dcloud.feature.weex_scroller.view.DCWXScrollView,int,int) -> onScrollStopped
    1285:1285:void onScrollToBottom(io.dcloud.feature.weex_scroller.view.DCWXScrollView,int,int) -> onScrollToBottom
    1290:1290:void onScrollToTop(io.dcloud.feature.weex_scroller.view.DCWXScrollView,int,int) -> onScrollToTop
    1218:1240:void procAppear(int,int,int,int) -> procAppear
    461:467:void remove(com.taobao.weex.ui.component.WXComponent,boolean) -> remove
    1350:1351:void resetLoadmore() -> resetLoadmore
    1162:1163:void scrollBy(int,int) -> scrollBy
    1166:1189:void scrollBy(int,int,boolean) -> scrollBy
    858:864:void scrollTo(int) -> scrollTo
    868:881:void scrollTo(java.lang.String,com.taobao.weex.bridge.JSCallback) -> scrollTo
    1117:1153:void scrollTo(com.taobao.weex.ui.component.WXComponent,java.util.Map) -> scrollTo
    931:934:void scrollToTop() -> scrollToTop
    1049:1052:void setDecelerationRate(float) -> setDecelerationRate
    510:520:void setLayout(com.taobao.weex.ui.component.WXComponent) -> setLayout
    1016:1023:void setLowwerHeight(int) -> setLowwerHeight
    488:506:void setMarginsSupportRTL(android.view.ViewGroup$MarginLayoutParams,int,int,int,int) -> setMarginsSupportRTL
    1043:1045:void setOffsetAccuracy(int) -> setOffsetAccuracy
    798:824:boolean setProperty(java.lang.String,java.lang.Object) -> setProperty
    829:854:void setScrollIntoView(java.lang.String) -> setScrollIntoView
    979:1012:void setScrollLeft(java.lang.String) -> setScrollLeft
    940:975:void setScrollTop(java.lang.String) -> setScrollTop
    910:911:void setScrollWithAnimation(boolean) -> setScrollWithAnimation
    1032:1039:void setScrollable(boolean) -> setScrollable
    898:906:void setShowScrollbar(boolean) -> setShowScrollbar
    915:922:void setUpperHeight(int) -> setUpperHeight
    1079:1089:void setWatch(int,com.taobao.weex.ui.component.WXComponent,boolean) -> setWatch
    348:368:boolean shouldReport(int,int) -> shouldReport
    1104:1105:void unbindAppearEvent(com.taobao.weex.ui.component.WXComponent) -> unbindAppearEvent
    1112:1113:void unbindDisappearEvent(com.taobao.weex.ui.component.WXComponent) -> unbindDisappearEvent
    1067:1068:void unbindStickStyle(com.taobao.weex.ui.component.WXComponent) -> unbindStickStyle
com.taobao.weex.ui.component.DCWXScroller$1 -> com.taobao.weex.ui.component.DCWXScroller$1:
    204:204:void <init>(com.taobao.weex.ui.component.DCWXScroller) -> <init>
    249:249:void onScroll(io.dcloud.feature.weex_scroller.view.DCWXScrollView,int,int) -> onScroll
    207:214:void onScrollChanged(io.dcloud.feature.weex_scroller.view.DCWXScrollView,int,int,int,int) -> onScrollChanged
    237:244:void onScrollStopped(io.dcloud.feature.weex_scroller.view.DCWXScrollView,int,int) -> onScrollStopped
    219:224:void onScrollToBottom(io.dcloud.feature.weex_scroller.view.DCWXScrollView,int,int) -> onScrollToBottom
    228:233:void onScrollToTop(io.dcloud.feature.weex_scroller.view.DCWXScrollView,int,int) -> onScrollToTop
com.taobao.weex.ui.component.DCWXScroller$10 -> com.taobao.weex.ui.component.DCWXScroller$10:
    744:744:void <init>(com.taobao.weex.ui.component.DCWXScroller) -> <init>
    748:758:void onGlobalLayout() -> onGlobalLayout
com.taobao.weex.ui.component.DCWXScroller$11 -> com.taobao.weex.ui.component.DCWXScroller$11:
    760:760:void <init>(com.taobao.weex.ui.component.DCWXScroller) -> <init>
    763:765:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    769:771:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
com.taobao.weex.ui.component.DCWXScroller$12 -> com.taobao.weex.ui.component.DCWXScroller$12:
    830:830:void <init>(com.taobao.weex.ui.component.DCWXScroller,java.lang.String) -> <init>
    833:847:void onGlobalLayout() -> onGlobalLayout
com.taobao.weex.ui.component.DCWXScroller$12$1 -> com.taobao.weex.ui.component.DCWXScroller$12$1:
    841:841:void <init>(com.taobao.weex.ui.component.DCWXScroller$12,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> <init>
    844:845:void run() -> run
com.taobao.weex.ui.component.DCWXScroller$13 -> com.taobao.weex.ui.component.DCWXScroller$13:
    943:943:void <init>(com.taobao.weex.ui.component.DCWXScroller,float) -> <init>
    946:955:void onGlobalLayout() -> onGlobalLayout
com.taobao.weex.ui.component.DCWXScroller$13$1 -> com.taobao.weex.ui.component.DCWXScroller$13$1:
    949:949:void <init>(com.taobao.weex.ui.component.DCWXScroller$13,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> <init>
    952:953:void run() -> run
com.taobao.weex.ui.component.DCWXScroller$14 -> com.taobao.weex.ui.component.DCWXScroller$14:
    965:965:void <init>(com.taobao.weex.ui.component.DCWXScroller,float) -> <init>
    968:969:void run() -> run
com.taobao.weex.ui.component.DCWXScroller$15 -> com.taobao.weex.ui.component.DCWXScroller$15:
    982:982:void <init>(com.taobao.weex.ui.component.DCWXScroller,float) -> <init>
    986:996:void onGlobalLayout() -> onGlobalLayout
com.taobao.weex.ui.component.DCWXScroller$15$1 -> com.taobao.weex.ui.component.DCWXScroller$15$1:
    990:990:void <init>(com.taobao.weex.ui.component.DCWXScroller$15,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> <init>
    993:994:void run() -> run
com.taobao.weex.ui.component.DCWXScroller$16 -> com.taobao.weex.ui.component.DCWXScroller$16:
    1170:1170:void <init>(com.taobao.weex.ui.component.DCWXScroller,boolean,int,int) -> <init>
    1173:1187:void run() -> run
com.taobao.weex.ui.component.DCWXScroller$2 -> com.taobao.weex.ui.component.DCWXScroller$2:
    252:252:void <init>(com.taobao.weex.ui.component.DCWXScroller) -> <init>
    255:262:void onScrollChanged(io.dcloud.feature.weex_scroller.view.DCWXHorizontalScrollView,int,int,int,int) -> onScrollChanged
    275:280:void onScrollToBottom() -> onScrollToBottom
    266:271:void onScrolltoTop() -> onScrolltoTop
com.taobao.weex.ui.component.DCWXScroller$3 -> com.taobao.weex.ui.component.DCWXScroller$3:
    435:435:void <init>(com.taobao.weex.ui.component.DCWXScroller,com.taobao.weex.ui.component.WXComponent) -> <init>
    438:439:void run() -> run
com.taobao.weex.ui.component.DCWXScroller$4 -> com.taobao.weex.ui.component.DCWXScroller$4:
    447:447:void <init>(com.taobao.weex.ui.component.DCWXScroller,com.taobao.weex.ui.component.WXComponent) -> <init>
    450:451:void run() -> run
com.taobao.weex.ui.component.DCWXScroller$5 -> com.taobao.weex.ui.component.DCWXScroller$5:
    585:585:void <init>(com.taobao.weex.ui.component.DCWXScroller) -> <init>
    588:593:void onScrollChanged(io.dcloud.feature.weex_scroller.view.DCWXHorizontalScrollView,int,int,int,int) -> onScrollChanged
    603:603:void onScrollToBottom() -> onScrollToBottom
    598:598:void onScrolltoTop() -> onScrolltoTop
com.taobao.weex.ui.component.DCWXScroller$6 -> com.taobao.weex.ui.component.DCWXScroller$6:
    613:613:void <init>(com.taobao.weex.ui.component.DCWXScroller,io.dcloud.feature.weex_scroller.view.DCWXHorizontalScrollView,com.taobao.weex.ui.component.DCWXScroller) -> <init>
    616:630:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
com.taobao.weex.ui.component.DCWXScroller$6$1 -> com.taobao.weex.ui.component.DCWXScroller$6$1:
    617:617:void <init>(com.taobao.weex.ui.component.DCWXScroller$6,android.view.View) -> <init>
    620:626:void run() -> run
com.taobao.weex.ui.component.DCWXScroller$7 -> com.taobao.weex.ui.component.DCWXScroller$7:
    632:632:void <init>(com.taobao.weex.ui.component.DCWXScroller,android.view.View$OnLayoutChangeListener) -> <init>
    635:636:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    640:641:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
com.taobao.weex.ui.component.DCWXScroller$8 -> com.taobao.weex.ui.component.DCWXScroller$8:
    647:647:void <init>(com.taobao.weex.ui.component.DCWXScroller,io.dcloud.feature.weex_scroller.view.DCWXHorizontalScrollView) -> <init>
    650:664:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.taobao.weex.ui.component.DCWXScroller$9 -> com.taobao.weex.ui.component.DCWXScroller$9:
    688:688:void <init>(com.taobao.weex.ui.component.DCWXScroller) -> <init>
    722:739:void onScroll(io.dcloud.feature.weex_scroller.view.DCWXScrollView,int,int) -> onScroll
    692:692:void onScrollChanged(io.dcloud.feature.weex_scroller.view.DCWXScrollView,int,int,int,int) -> onScrollChanged
    706:718:void onScrollStopped(io.dcloud.feature.weex_scroller.view.DCWXScrollView,int,int) -> onScrollStopped
    697:697:void onScrollToBottom(io.dcloud.feature.weex_scroller.view.DCWXScrollView,int,int) -> onScrollToBottom
    702:702:void onScrollToTop(io.dcloud.feature.weex_scroller.view.DCWXScrollView,int,int) -> onScrollToTop
com.taobao.weex.ui.component.DCWXScroller$Creator -> com.taobao.weex.ui.component.DCWXScroller$Creator:
    125:125:void <init>() -> <init>
    129:130:com.taobao.weex.ui.component.WXComponent createInstance(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,com.taobao.weex.ui.action.BasicComponentData) -> createInstance
com.taobao.weex.ui.component.DCWXScroller$MyGestureDetector -> com.taobao.weex.ui.component.DCWXScroller$MyGestureDetector:
    1368:1370:void <init>(com.taobao.weex.ui.component.DCWXScroller,io.dcloud.feature.weex_scroller.view.DCWXHorizontalScrollView) -> <init>
    1363:1363:io.dcloud.feature.weex_scroller.view.DCWXHorizontalScrollView getScrollView() -> getScrollView
    1374:1393:boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
com.taobao.weex.ui.component.Textarea -> com.taobao.weex.ui.component.Textarea:
    36:40:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,boolean,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    50:65:void appleStyleAfterCreated(com.taobao.weex.ui.view.WXEditText) -> appleStyleAfterCreated
    96:96:float getMeasureHeight() -> getMeasureHeight
    69:69:int getVerticalGravity() -> getVerticalGravity
    33:33:void onHostViewInitialized(android.view.View) -> onHostViewInitialized
    44:46:void onHostViewInitialized(com.taobao.weex.ui.view.WXEditText) -> onHostViewInitialized
    74:81:boolean setProperty(java.lang.String,java.lang.Object) -> setProperty
    86:92:void setRows(int) -> setRows
    101:118:void updateStyleAndAttrs() -> updateStyleAndAttrs
com.taobao.weex.ui.component.WXA -> com.taobao.weex.ui.component.WXA:
    34:35:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,java.lang.String,boolean,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    38:39:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    29:29:void onHostViewInitialized(android.view.View) -> onHostViewInitialized
    43:54:void onHostViewInitialized(com.taobao.weex.ui.view.WXFrameLayout) -> onHostViewInitialized
    58:62:boolean setProperty(java.lang.String,java.lang.Object) -> setProperty
com.taobao.weex.ui.component.WXA$1 -> com.taobao.weex.ui.component.WXA$1:
    43:43:void <init>(com.taobao.weex.ui.component.WXA) -> <init>
    47:51:void onHostViewClick() -> onHostViewClick
com.taobao.weex.ui.component.WXBaseRefresh -> com.taobao.weex.ui.component.WXBaseRefresh:
    38:39:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,boolean,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    43:45:void addChild(com.taobao.weex.ui.component.WXComponent) -> addChild
    54:56:void addChild(com.taobao.weex.ui.component.WXComponent,int) -> addChild
    59:62:void checkLoadingIndicator(com.taobao.weex.ui.component.WXComponent) -> checkLoadingIndicator
    31:31:android.view.View initComponentHostView(android.content.Context) -> initComponentHostView
    49:49:com.taobao.weex.ui.view.WXFrameLayout initComponentHostView(android.content.Context) -> initComponentHostView
com.taobao.weex.ui.component.WXBaseScroller -> com.taobao.weex.ui.component.WXBaseScroller:
    38:39:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,java.lang.String,boolean,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    42:43:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,boolean,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    46:47:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    62:62:void bindAppearEvent(com.taobao.weex.ui.component.WXComponent) -> bindAppearEvent
    67:67:void bindDisappearEvent(com.taobao.weex.ui.component.WXComponent) -> bindDisappearEvent
    52:52:void bindStickStyle(com.taobao.weex.ui.component.WXComponent) -> bindStickStyle
    129:129:android.view.ViewGroup getInnerView() -> getInnerView
    96:96:int getOrientation() -> getOrientation
    133:133:java.util.Map getScrollEvent(int,int) -> getScrollEvent
    91:91:int getScrollX() -> getScrollX
    86:86:int getScrollY() -> getScrollY
    125:125:java.util.Map getStickMap() -> getStickMap
    101:101:boolean isScrollable() -> isScrollable
    122:122:void onScroll(com.taobao.weex.ui.view.WXScrollView,int,int) -> onScroll
    107:107:void onScrollChanged(com.taobao.weex.ui.view.WXScrollView,int,int,int,int) -> onScrollChanged
    117:117:void onScrollStopped(com.taobao.weex.ui.view.WXScrollView,int,int) -> onScrollStopped
    112:112:void onScrollToBottom(com.taobao.weex.ui.view.WXScrollView,int,int) -> onScrollToBottom
    82:82:void scrollTo(com.taobao.weex.ui.component.WXComponent,java.util.Map) -> scrollTo
    72:72:void unbindAppearEvent(com.taobao.weex.ui.component.WXComponent) -> unbindAppearEvent
    77:77:void unbindDisappearEvent(com.taobao.weex.ui.component.WXComponent) -> unbindDisappearEvent
    57:57:void unbindStickStyle(com.taobao.weex.ui.component.WXComponent) -> unbindStickStyle
com.taobao.weex.ui.component.WXBasicComponentType -> com.taobao.weex.ui.component.WXBasicComponentType:
    24:24:void <init>() -> <init>
com.taobao.weex.ui.component.WXComponent -> com.taobao.weex.ui.component.WXComponent:
    212:213:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,java.lang.String,boolean,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    217:218:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,boolean,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    221:222:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    156:2710:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,int,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    148:148:com.taobao.weex.WXSDKInstance access$100(com.taobao.weex.ui.component.WXComponent) -> access$100
    148:148:java.util.List access$200(com.taobao.weex.ui.component.WXComponent) -> access$200
    148:148:java.util.List access$300(com.taobao.weex.ui.component.WXComponent) -> access$300
    148:148:com.taobao.weex.ui.view.border.BorderDrawable access$400(com.taobao.weex.ui.component.WXComponent) -> access$400
    2494:2500:void addAnimationForElement(java.util.Map) -> addAnimationForElement
    657:682:void addClickListener(com.taobao.weex.ui.component.WXComponent$OnClickListener) -> addClickListener
    352:419:void addEvent(java.lang.String) -> addEvent
    629:646:void addFocusChangeListener(com.taobao.weex.ui.component.WXComponent$OnFocusChangeListener) -> addFocusChangeListener
    2613:2615:void addLayerOverFlowListener(java.lang.String) -> addLayerOverFlowListener
    1463:1463:void appendEventToDOM(java.lang.String) -> appendEventToDOM
    297:311:void applyBorder(io.dcloud.feature.uniapp.ui.component.AbsBasicComponent) -> applyBorder
    328:329:void applyComponentEvents() -> applyComponentEvents
    332:344:void applyEvents() -> applyEvents
    706:716:void applyLayoutAndEvent(io.dcloud.feature.uniapp.ui.component.AbsBasicComponent) -> applyLayoutAndEvent
    730:734:void applyLayoutOnly() -> applyLayoutOnly
    245:253:void bindComponent(io.dcloud.feature.uniapp.ui.component.AbsBasicComponent) -> bindComponent
    693:703:void bindComponentData(io.dcloud.feature.uniapp.ui.component.AbsBasicComponent) -> bindComponentData
    689:690:void bindData(com.taobao.weex.ui.component.WXComponent) -> bindData
    433:434:void bindHolder(com.taobao.weex.ui.IFComponentHolder) -> bindHolder
    2327:2327:boolean canRecycled() -> canRecycled
    1339:1364:void clearBoxShadow() -> clearBoxShadow
    2137:2142:void clearPreLayout() -> clearPreLayout
    2154:2156:void computeVisiblePointInViewCoordinate(android.graphics.PointF) -> computeVisiblePointInViewCoordinate
    2163:2163:boolean containsEvent(java.lang.String) -> containsEvent
    2159:2159:boolean containsGesture(com.taobao.weex.ui.view.gesture.WXGestureType) -> containsGesture
    2226:2248:java.lang.Object convertEmptyProperty(java.lang.String,java.lang.Object) -> convertEmptyProperty
    2520:2538:com.taobao.weex.ui.animation.WXAnimationBean createAnimationBean(java.lang.String,java.util.Map) -> createAnimationBean
    1542:1545:void createView() -> createView
    1548:1570:void createViewImpl() -> createViewImpl
    2071:2112:void destroy() -> destroy
    2126:2133:android.view.View detachViewAndClearPreInfo() -> detachViewAndClearPreInfo
    452:457:com.taobao.weex.ui.component.WXComponent findComponent(java.lang.String) -> findComponent
    606:613:java.lang.Object findTypeParent(io.dcloud.feature.uniapp.ui.component.AbsBasicComponent,java.lang.Class) -> findTypeParent
    549:550:void fireEvent(java.lang.String) -> fireEvent
    553:558:void fireEvent(java.lang.String,java.util.Map) -> fireEvent
    582:583:void fireEvent(java.lang.String,java.util.Map,java.util.Map) -> fireEvent
    587:600:void fireEvent(java.lang.String,java.util.Map,java.util.Map,com.taobao.weex.bridge.EventResult) -> fireEvent
    561:577:com.taobao.weex.bridge.EventResult fireEventWait(java.lang.String,java.util.Map) -> fireEventWait
    1630:1630:int getAbsoluteX() -> getAbsoluteX
    1626:1626:int getAbsoluteY() -> getAbsoluteY
    461:461:java.lang.String getAttrByKey(java.lang.String) -> getAttrByKey
    497:510:android.graphics.Rect getComponentSize() -> getComponentSize
    442:442:android.content.Context getContext() -> getContext
    1528:1531:com.taobao.weex.ui.component.Scrollable getFirstScroller() -> getFirstScroller
    1612:1612:android.view.View getHostView() -> getHostView
    2703:2703:io.dcloud.weex.ViewHover getHover() -> getHover
    438:438:com.taobao.weex.WXSDKInstance getInstance() -> getInstance
    493:493:java.lang.String getInstanceId() -> getInstanceId
    1235:1235:int getLayoutTopOffsetForSibling() -> getLayoutTopOffsetForSibling
    999:1012:com.taobao.weex.ui.view.border.BorderDrawable getOrCreateBorder() -> getOrCreateBorder
    1535:1535:com.taobao.weex.ui.component.WXVContainer getParent() -> getParent
    1504:1519:com.taobao.weex.ui.component.Scrollable getParentScroller() -> getParentScroller
    1466:1466:android.view.View getRealView() -> getRealView
    2552:2555:long getRenderObjectPtr() -> getRenderObjectPtr
    2323:2323:int getStickyOffset() -> getStickyOffset
    2486:2486:com.taobao.weex.dom.transition.WXTransition getTransition() -> getTransition
    2206:2206:int getType() -> getType
    1622:1622:android.view.View getView() -> getView
    2718:2721:float getViewPortWidthForFloat() -> getViewPortWidthForFloat
    2473:2480:java.lang.String getViewTreeKey() -> getViewTreeKey
    1985:1987:java.lang.String getVisibility() -> getVisibility
    2210:2215:boolean hasScrollParent(com.taobao.weex.ui.component.WXComponent) -> hasScrollParent
    2626:2637:void hoverClass(java.lang.String) -> hoverClass
    2655:2659:void hoverStartTime(int) -> hoverStartTime
    2663:2667:void hoverStayTime(int) -> hoverStayTime
    2641:2651:void hoverStopPropagation(boolean) -> hoverStopPropagation
    1592:1592:android.view.View initComponentHostView(android.content.Context) -> initComponentHostView
    944:996:void initElevation(java.lang.String) -> initElevation
    1876:1904:void initOutlineProvider(float) -> initOutlineProvider
    1577:1579:void initView() -> initView
    425:426:void interceptFocusAndBlurEvent() -> interceptFocusAndBlurEvent
    514:527:void invoke(java.lang.String,com.alibaba.fastjson.JSONArray) -> invoke
    2261:2261:boolean isConsumeTouch() -> isConsumeTouch
    2115:2115:boolean isDestoryed() -> isDestoryed
    1737:1737:boolean isDisabled() -> isDisabled
    1725:1725:boolean isFixed() -> isFixed
    472:472:boolean isFlatUIEnabled() -> isFlatUIEnabled
    2345:2345:boolean isLayerTypeEnabled() -> isLayerTypeEnabled
    621:624:boolean isLazy() -> isLazy
    2708:2708:boolean isPreventGesture() -> isPreventGesture
    2417:2422:boolean isRippleEnabled() -> isRippleEnabled
    1721:1721:boolean isSticky() -> isSticky
    2175:2175:boolean isUsing() -> isUsing
    2199:2199:boolean isVirtualComponent() -> isVirtualComponent
    2426:2426:boolean isWaste() -> isWaste
    649:652:boolean ismHasFocusChangeListener(com.taobao.weex.ui.component.WXComponent$OnFocusChangeListener) -> ismHasFocusChangeListener
    1165:1165:void layoutDirectionDidChanged(boolean) -> layoutDirectionDidChanged
    2548:2549:void lazy(boolean) -> lazy
    1381:1390:com.taobao.weex.ui.component.WXComponent$MeasureOutput measure(int,int) -> measure
    2571:2583:void nativeUpdateAttrs(java.util.Map) -> nativeUpdateAttrs
    1477:1497:boolean needGestureDetector(java.lang.String) -> needGestureDetector
    2167:2172:void notifyAppearStateChange(java.lang.String,java.lang.String) -> notifyAppearStateChange
    2359:2366:void notifyNativeSizeChanged(int,int) -> notifyNativeSizeChanged
    2046:2046:boolean onActivityBack() -> onActivityBack
    2023:2023:void onActivityCreate() -> onActivityCreate
    2043:2043:void onActivityDestroy() -> onActivityDestroy
    2031:2031:void onActivityPause() -> onActivityPause
    2051:2051:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    2035:2035:void onActivityResume() -> onActivityResume
    2027:2027:void onActivityStart() -> onActivityStart
    2039:2039:void onActivityStop() -> onActivityStop
    430:430:void onCreate() -> onCreate
    2054:2054:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    1371:1375:void onFinishLayout() -> onFinishLayout
    1604:1609:void onHostViewInitialized(android.view.View) -> onHostViewInitialized
    538:538:void onInvokeUnknownMethod(java.lang.String,com.alibaba.fastjson.JSONArray) -> onInvokeUnknownMethod
    2379:2413:void onRenderFinish(int) -> onRenderFinish
    2059:2059:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    2503:2516:void parseAnimation() -> parseAnimation
    466:467:void postAnimation(io.dcloud.feature.uniapp.ui.AbsAnimationHolder) -> postAnimation
    1772:1808:android.graphics.drawable.Drawable prepareBackgroundRipple() -> prepareBackgroundRipple
    2183:2186:void readyToRender() -> readyToRender
    1168:1193:void recordInteraction(int,int) -> recordInteraction
    2065:2068:void recycled() -> recycled
    739:739:void refreshData(com.taobao.weex.ui.component.WXComponent) -> refreshData
    2015:2015:void registerActivityStateListener() -> registerActivityStateListener
    1676:1709:void removeAllEvent() -> removeAllEvent
    685:686:void removeClickListener(com.taobao.weex.ui.component.WXComponent$OnClickListener) -> removeClickListener
    1634:1651:void removeEvent(java.lang.String) -> removeEvent
    1654:1673:void removeEventFromView(java.lang.String) -> removeEventFromView
    2618:2620:void removeLayerOverFlowListener(java.lang.String) -> removeLayerOverFlowListener
    1712:1718:void removeStickyStyle() -> removeStickyStyle
    2203:2203:void removeVirtualComponent() -> removeVirtualComponent
    2252:2258:void setActiveTouchListener() -> setActiveTouchListener
    1395:1399:void setAriaHidden(boolean) -> setAriaHidden
    1402:1406:void setAriaLabel(java.lang.String) -> setAriaLabel
    1750:1768:void setBackgroundColor(java.lang.String) -> setBackgroundColor
    1812:1818:void setBackgroundImage(java.lang.String) -> setBackgroundImage
    1957:1979:void setBorderColor(java.lang.String,java.lang.String) -> setBorderColor
    1851:1873:void setBorderRadius(java.lang.String,float) -> setBorderRadius
    1935:1954:void setBorderStyle(java.lang.String,java.lang.String) -> setBorderStyle
    1911:1932:void setBorderWidth(java.lang.String,float) -> setBorderWidth
    1121:1155:void setComponentLayoutParams(int,int,int,int,int,int,android.graphics.Point) -> setComponentLayoutParams
    256:259:void setContentBoxMeasurement(com.taobao.weex.layout.ContentBoxMeasurement) -> setContentBoxMeasurement
    719:721:void setDemission(com.taobao.weex.ui.action.GraphicSize,com.taobao.weex.ui.action.GraphicPosition) -> setDemission
    1729:1734:void setDisabled(boolean) -> setDisabled
    933:934:void setElevation(java.lang.String) -> setElevation
    1253:1267:void setFixedHostLayoutParams(android.view.View,int,int,int,int,int,int) -> setFixedHostLayoutParams
    1438:1454:void setFixedSize(java.lang.String) -> setFixedSize
    1240:1250:void setHostLayoutParams(android.view.View,int,int,int,int,int,int) -> setHostLayoutParams
    2670:2691:void setHoverClassStatus(boolean) -> setHoverClassStatus
    2694:2700:void setHoverReceiveTouch(boolean) -> setHoverReceiveTouch
    1031:1117:void setLayout(com.taobao.weex.ui.component.WXComponent) -> setLayout
    263:268:void setMarginsSupportRTL(android.view.ViewGroup$MarginLayoutParams,int,int,int,int) -> setMarginsSupportRTL
    2352:2353:void setNeedLayoutOnAnimation(boolean) -> setNeedLayoutOnAnimation
    1837:1848:void setOpacity(float) -> setOpacity
    314:324:void setPadding(io.dcloud.feature.uniapp.dom.AbsCSSShorthand,io.dcloud.feature.uniapp.dom.AbsCSSShorthand) -> setPadding
    2713:2715:void setPreventGesture(boolean) -> setPreventGesture
    799:928:boolean setProperty(java.lang.String,java.lang.Object) -> setProperty
    2275:2306:void setPseudoClassStatus(java.lang.String,boolean) -> setPseudoClassStatus
    1409:1430:void setRole(java.lang.String) -> setRole
    1019:1025:void setSafeLayout(com.taobao.weex.ui.component.WXComponent) -> setSafeLayout
    1741:1747:void setSticky(java.lang.String) -> setSticky
    2336:2337:void setStickyOffset(int) -> setStickyOffset
    2490:2491:void setTransition(com.taobao.weex.dom.transition.WXTransition) -> setTransition
    2179:2180:void setUsing(boolean) -> setUsing
    1993:2000:void setVisibility(java.lang.String) -> setVisibility
    2434:2466:void setWaste(boolean) -> setWaste
    1197:1232:void setWidgetParams(com.taobao.weex.ui.flat.widget.Widget,com.taobao.weex.ui.flat.FlatGUIContext,android.graphics.Point,int,int,int,int,int,int) -> setWidgetParams
    1820:1833:boolean shouldCancelHardwareAccelerate() -> shouldCancelHardwareAccelerate
    2266:2268:void updateActivePseudo(boolean) -> updateActivePseudo
    285:288:void updateAttrs(io.dcloud.feature.uniapp.ui.component.AbsBasicComponent) -> updateAttrs
    291:294:void updateAttrs(java.util.Map) -> updateAttrs
    1271:1336:void updateBoxShadow() -> updateBoxShadow
    724:726:void updateDemission(float,float,float,float,float,float) -> updateDemission
    2006:2010:void updateElevation() -> updateElevation
    2560:2568:void updateNativeAttr(java.lang.String,java.lang.Object) -> updateNativeAttr
    2587:2595:void updateNativeStyle(java.lang.String,java.lang.Object) -> updateNativeStyle
    2598:2610:void updateNativeStyles(java.util.Map) -> updateNativeStyles
    743:789:void updateProperties(java.util.Map) -> updateProperties
    2309:2320:void updateStyleByPesudo(java.util.Map) -> updateStyleByPesudo
    271:275:void updateStyles(com.taobao.weex.ui.component.WXComponent) -> updateStyles
    278:282:void updateStyles(java.util.Map) -> updateStyles
    1906:1906:boolean useFeature() -> useFeature
com.taobao.weex.ui.component.WXComponent$1 -> com.taobao.weex.ui.component.WXComponent$1:
    375:375:void <init>(com.taobao.weex.ui.component.WXComponent) -> <init>
    378:381:void onFocusChange(boolean) -> onFocusChange
com.taobao.weex.ui.component.WXComponent$2 -> com.taobao.weex.ui.component.WXComponent$2:
    562:562:void <init>(com.taobao.weex.ui.component.WXComponent,java.util.concurrent.CountDownLatch) -> <init>
    565:567:void onCallback(java.lang.Object) -> onCallback
com.taobao.weex.ui.component.WXComponent$3 -> com.taobao.weex.ui.component.WXComponent$3:
    633:633:void <init>(com.taobao.weex.ui.component.WXComponent) -> <init>
    636:641:void onFocusChange(android.view.View,boolean) -> onFocusChange
com.taobao.weex.ui.component.WXComponent$4 -> com.taobao.weex.ui.component.WXComponent$4:
    664:664:void <init>(com.taobao.weex.ui.component.WXComponent) -> <init>
    667:676:void onClick(android.view.View) -> onClick
com.taobao.weex.ui.component.WXComponent$5 -> com.taobao.weex.ui.component.WXComponent$5:
    1417:1417:void <init>(com.taobao.weex.ui.component.WXComponent,java.lang.String) -> <init>
    1421:1426:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
com.taobao.weex.ui.component.WXComponent$6 -> com.taobao.weex.ui.component.WXComponent$6:
    1793:1793:void <init>(com.taobao.weex.ui.component.WXComponent,android.content.res.ColorStateList,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> <init>
    1796:1801:void draw(android.graphics.Canvas) -> draw
com.taobao.weex.ui.component.WXComponent$7 -> com.taobao.weex.ui.component.WXComponent$7:
    1877:1877:void <init>(com.taobao.weex.ui.component.WXComponent,float) -> <init>
    1881:1900:void getOutline(android.view.View,android.graphics.Outline) -> getOutline
com.taobao.weex.ui.component.WXComponent$MeasureOutput -> com.taobao.weex.ui.component.WXComponent$MeasureOutput:
    2188:2188:void <init>() -> <init>
com.taobao.weex.ui.component.WXComponent$OnClickListenerImp -> com.taobao.weex.ui.component.WXComponent$OnClickListenerImp:
    475:475:void <init>(com.taobao.weex.ui.component.WXComponent) -> <init>
    475:475:void <init>(com.taobao.weex.ui.component.WXComponent,com.taobao.weex.ui.component.WXComponent$1) -> <init>
    478:488:void onHostViewClick() -> onHostViewClick
com.taobao.weex.ui.component.WXComponentFactory -> com.taobao.weex.ui.component.WXComponentFactory:
    41:41:void <init>() -> <init>
    44:71:com.taobao.weex.ui.component.WXComponent newInstance(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,com.taobao.weex.ui.action.BasicComponentData) -> newInstance
com.taobao.weex.ui.component.WXDiv -> com.taobao.weex.ui.component.WXDiv:
    52:53:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,java.lang.String,boolean,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    56:57:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    39:39:com.taobao.weex.ui.flat.widget.Widget getOrCreateFlatWidget() -> getOrCreateFlatWidget
    82:89:com.taobao.weex.ui.flat.widget.WidgetGroup getOrCreateFlatWidget() -> getOrCreateFlatWidget
    39:39:android.view.View initComponentHostView(android.content.Context) -> initComponentHostView
    61:63:com.taobao.weex.ui.view.WXFrameLayout initComponentHostView(android.content.Context) -> initComponentHostView
    115:115:boolean intendToBeFlatContainer() -> intendToBeFlatContainer
    120:120:boolean isVirtualComponent() -> isVirtualComponent
    94:104:void mountFlatGUI() -> mountFlatGUI
    68:72:boolean promoteToView(boolean) -> promoteToView
    108:111:void unmountFlatGUI() -> unmountFlatGUI
com.taobao.weex.ui.component.WXDiv$Ceator -> com.taobao.weex.ui.component.WXDiv$Ceator:
    44:44:void <init>() -> <init>
    46:46:com.taobao.weex.ui.component.WXComponent createInstance(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,com.taobao.weex.ui.action.BasicComponentData) -> createInstance
com.taobao.weex.ui.component.WXEmbed -> com.taobao.weex.ui.component.WXEmbed:
    68:69:void <clinit>() -> <clinit>
    199:200:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,java.lang.String,boolean,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    71:218:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    53:53:java.lang.String access$000(com.taobao.weex.ui.component.WXEmbed) -> access$000
    53:53:int access$100() -> access$100
    53:53:int access$200() -> access$200
    53:53:int access$300(com.taobao.weex.ui.component.WXEmbed) -> access$300
    53:53:long access$400(com.taobao.weex.ui.component.WXEmbed) -> access$400
    274:282:void addEvent(java.lang.String) -> addEvent
    540:542:void addLayerOverFlowListener(java.lang.String) -> addLayerOverFlowListener
    340:374:com.taobao.weex.WXSDKInstance createInstance() -> createInstance
    524:536:void destoryNestInstance() -> destoryNestInstance
    403:409:void destroy() -> destroy
    415:457:void doAutoEmbedMemoryStrategy() -> doAutoEmbedMemoryStrategy
    326:336:int getLevel(com.taobao.weex.ui.component.WXEmbed) -> getLevel
    262:262:java.lang.String getOriginUrl() -> getOriginUrl
    297:297:java.lang.String getSrc() -> getSrc
    227:227:android.view.ViewGroup getViewContainer() -> getViewContainer
    313:323:void loadContent() -> loadContent
    513:517:void onActivityDestroy() -> onActivityDestroy
    497:501:void onActivityPause() -> onActivityPause
    489:493:void onActivityResume() -> onActivityResume
    481:485:void onActivityStart() -> onActivityStart
    505:509:void onActivityStop() -> onActivityStop
    462:467:void onAppear() -> onAppear
    472:477:void onDisappear() -> onDisappear
    256:259:void reload() -> reload
    546:548:void removeLayerOverFlowListener(java.lang.String) -> removeLayerOverFlowListener
    250:252:void renderNewURL(java.lang.String) -> renderNewURL
    222:223:void setOnNestEventListener(com.taobao.weex.ui.component.NestedContainer$OnNestedInstanceEventListener) -> setOnNestEventListener
    266:267:void setOriginUrl(java.lang.String) -> setOriginUrl
    303:307:void setPriority(java.lang.String) -> setPriority
    232:245:boolean setProperty(java.lang.String,java.lang.Object) -> setProperty
    286:295:void setSrc(java.lang.String) -> setSrc
    520:521:void setStrategy(java.lang.String) -> setStrategy
    379:399:void setVisibility(java.lang.String) -> setVisibility
com.taobao.weex.ui.component.WXEmbed$1 -> com.taobao.weex.ui.component.WXEmbed$1:
    421:421:void <init>(com.taobao.weex.ui.component.WXEmbed) -> <init>
    421:421:int compare(java.lang.Object,java.lang.Object) -> compare
    424:428:int compare(com.taobao.weex.ui.component.WXEmbed,com.taobao.weex.ui.component.WXEmbed) -> compare
com.taobao.weex.ui.component.WXEmbed$ClickToReloadListener -> com.taobao.weex.ui.component.WXEmbed$ClickToReloadListener:
    119:119:void <init>() -> <init>
    160:160:void onCreated(com.taobao.weex.ui.component.NestedContainer,com.taobao.weex.WXSDKInstance) -> onCreated
    122:145:void onException(com.taobao.weex.ui.component.NestedContainer,java.lang.String,java.lang.String) -> onException
    149:149:boolean onPreCreate(com.taobao.weex.ui.component.NestedContainer,java.lang.String) -> onPreCreate
    154:154:java.lang.String transformUrl(java.lang.String) -> transformUrl
com.taobao.weex.ui.component.WXEmbed$ClickToReloadListener$1 -> com.taobao.weex.ui.component.WXEmbed$ClickToReloadListener$1:
    132:132:void <init>(com.taobao.weex.ui.component.WXEmbed$ClickToReloadListener,android.widget.ImageView,com.taobao.weex.ui.component.WXEmbed) -> <init>
    135:138:void onClick(android.view.View) -> onClick
com.taobao.weex.ui.component.WXEmbed$EmbedInstanceOnScrollFireEventInterceptor -> com.taobao.weex.ui.component.WXEmbed$EmbedInstanceOnScrollFireEventInterceptor:
    555:557:void <init>(com.taobao.weex.ui.component.WXEmbed) -> <init>
    600:624:com.taobao.weex.ui.component.WXComponent findFirstLayerScroller() -> findFirstLayerScroller
    583:594:void initFirstLayerScroller() -> initFirstLayerScroller
    565:579:void onFireEvent(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map) -> onFireEvent
    641:641:void onScrollStateChanged(android.view.View,int,int,int) -> onScrollStateChanged
    630:636:void onScrolled(android.view.View,int,int) -> onScrolled
    560:561:void resetFirstLaterScroller() -> resetFirstLaterScroller
com.taobao.weex.ui.component.WXEmbed$EmbedRenderListener -> com.taobao.weex.ui.component.WXEmbed$EmbedRenderListener:
    167:170:void <init>(com.taobao.weex.ui.component.WXEmbed) -> <init>
    191:194:void onException(com.taobao.weex.WXSDKInstance,java.lang.String,java.lang.String) -> onException
    187:187:void onRefreshSuccess(com.taobao.weex.WXSDKInstance,int,int) -> onRefreshSuccess
    182:182:void onRenderSuccess(com.taobao.weex.WXSDKInstance,int,int) -> onRenderSuccess
    174:177:void onViewCreated(com.taobao.weex.WXSDKInstance,android.view.View) -> onViewCreated
com.taobao.weex.ui.component.WXEmbed$FailToH5Listener -> com.taobao.weex.ui.component.WXEmbed$FailToH5Listener:
    89:89:void <init>() -> <init>
    94:113:void onException(com.taobao.weex.ui.component.NestedContainer,java.lang.String,java.lang.String) -> onException
com.taobao.weex.ui.component.WXHeader -> com.taobao.weex.ui.component.WXHeader:
    35:36:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,java.lang.String,boolean,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    39:46:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,boolean,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    55:55:boolean canRecycled() -> canRecycled
    50:50:boolean isLazy() -> isLazy
com.taobao.weex.ui.component.WXImage -> com.taobao.weex.ui.component.WXImage:
    92:92:void <clinit>() -> <clinit>
    108:109:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,java.lang.String,boolean,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    88:470:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    80:80:void access$000(com.taobao.weex.ui.component.WXImage,android.widget.ImageView,java.lang.String) -> access$000
    328:331:void autoRecoverImage() -> autoRecoverImage
    318:325:void autoReleaseImage() -> autoReleaseImage
    520:526:void destroy() -> destroy
    367:367:com.taobao.weex.dom.WXImageQuality getImageQuality() -> getImageQuality
    179:197:android.widget.ImageView$ScaleType getResizeMode(java.lang.String) -> getResizeMode
    79:79:android.view.View initComponentHostView(android.content.Context) -> initComponentHostView
    117:123:android.widget.ImageView initComponentHostView(android.content.Context) -> initComponentHostView
    472:516:void monitorImgSize(android.widget.ImageView,java.lang.String) -> monitorImgSize
    372:374:void onFinishLayout() -> onFinishLayout
    530:530:void onImageFinish(boolean,java.util.Map) -> onImageFinish
    286:299:int parseBlurRadius(java.lang.String) -> parseBlurRadius
    304:315:void recycled() -> recycled
    165:169:void refreshData(com.taobao.weex.ui.component.WXComponent) -> refreshData
    238:274:void runSrc(java.lang.String) -> runSrc
    411:468:void save(com.taobao.weex.bridge.JSCallback) -> save
    277:283:void setBlurRadius(java.lang.String,int) -> setBlurRadius
    211:215:void setLocalSrc(android.net.Uri) -> setLocalSrc
    128:159:boolean setProperty(java.lang.String,java.lang.Object) -> setProperty
    335:363:void setRemoteSrc(android.net.Uri,int) -> setRemoteSrc
    202:203:void setResize(java.lang.String) -> setResize
    173:175:void setResizeMode(java.lang.String) -> setResizeMode
    220:235:void setSrc(java.lang.String) -> setSrc
    383:403:void updateBorderRadius() -> updateBorderRadius
    378:380:void updateProperties(java.util.Map) -> updateProperties
com.taobao.weex.ui.component.WXImage$1 -> com.taobao.weex.ui.component.WXImage$1:
    92:92:void <init>() -> <init>
    92:92:java.lang.Object map(java.lang.String) -> map
    95:95:java.lang.Integer map(java.lang.String) -> map
com.taobao.weex.ui.component.WXImage$2 -> com.taobao.weex.ui.component.WXImage$2:
    448:448:void <init>(com.taobao.weex.ui.component.WXImage,com.taobao.weex.bridge.JSCallback) -> <init>
    460:466:void onSaveFailed(java.lang.String) -> onSaveFailed
    451:456:void onSaveSucceed(java.lang.String) -> onSaveSucceed
com.taobao.weex.ui.component.WXImage$Creator -> com.taobao.weex.ui.component.WXImage$Creator:
    99:99:void <init>() -> <init>
    102:102:com.taobao.weex.ui.component.WXComponent createInstance(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,com.taobao.weex.ui.action.BasicComponentData) -> createInstance
com.taobao.weex.ui.component.WXImage$MyImageListener -> com.taobao.weex.ui.component.WXImage$MyImageListener:
    543:546:void <init>(com.taobao.weex.ui.component.WXImage,com.taobao.weex.ui.component.WXImage,java.lang.String) -> <init>
    550:588:void onImageFinish(java.lang.String,android.widget.ImageView,boolean,java.util.Map) -> onImageFinish
com.taobao.weex.ui.component.WXIndicator -> com.taobao.weex.ui.component.WXIndicator:
    49:50:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,java.lang.String,boolean,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    53:54:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,boolean,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    44:44:android.view.View initComponentHostView(android.content.Context) -> initComponentHostView
    65:73:com.taobao.weex.ui.view.WXCircleIndicator initComponentHostView(android.content.Context) -> initComponentHostView
    44:44:void onHostViewInitialized(android.view.View) -> onHostViewInitialized
    78:84:void onHostViewInitialized(com.taobao.weex.ui.view.WXCircleIndicator) -> onHostViewInitialized
    44:44:void setHostLayoutParams(android.view.View,int,int,int,int,int,int) -> setHostLayoutParams
    58:61:void setHostLayoutParams(com.taobao.weex.ui.view.WXCircleIndicator,int,int,int,int,int,int) -> setHostLayoutParams
    111:119:void setItemColor(java.lang.String) -> setItemColor
    123:131:void setItemSelectedColor(java.lang.String) -> setItemSelectedColor
    135:141:void setItemSize(int) -> setItemSize
    88:105:boolean setProperty(java.lang.String,java.lang.Object) -> setProperty
    144:152:void setShowIndicators(boolean) -> setShowIndicators
com.taobao.weex.ui.component.WXInput -> com.taobao.weex.ui.component.WXInput:
    35:36:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,java.lang.String,boolean,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    39:40:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,boolean,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    44:46:void appleStyleAfterCreated(com.taobao.weex.ui.view.WXEditText) -> appleStyleAfterCreated
com.taobao.weex.ui.component.WXLoading -> com.taobao.weex.ui.component.WXLoading:
    48:49:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,boolean,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    86:86:boolean canRecycled() -> canRecycled
    42:42:android.view.View initComponentHostView(android.content.Context) -> initComponentHostView
    53:53:com.taobao.weex.ui.view.WXFrameLayout initComponentHostView(android.content.Context) -> initComponentHostView
    58:61:void onLoading() -> onLoading
    75:82:void onPullingUp(float,int,float) -> onPullingUp
    103:113:void setDisplay(java.lang.String) -> setDisplay
    42:42:void setHostLayoutParams(android.view.View,int,int,int,int,int,int) -> setHostLayoutParams
    70:71:void setHostLayoutParams(com.taobao.weex.ui.view.WXFrameLayout,int,int,int,int,int,int) -> setHostLayoutParams
    91:98:boolean setProperty(java.lang.String,java.lang.Object) -> setProperty
com.taobao.weex.ui.component.WXLoadingIndicator -> com.taobao.weex.ui.component.WXLoadingIndicator:
    39:40:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,boolean,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    96:100:void destroy() -> destroy
    33:33:android.view.View initComponentHostView(android.content.Context) -> initComponentHostView
    44:44:com.taobao.weex.ui.view.refresh.circlebar.CircleProgressBar initComponentHostView(android.content.Context) -> initComponentHostView
    79:84:void setAnimating(boolean) -> setAnimating
    87:92:void setAnimatingSp(boolean) -> setAnimatingSp
    71:75:void setColor(java.lang.String) -> setColor
    49:66:boolean setProperty(java.lang.String,java.lang.Object) -> setProperty
com.taobao.weex.ui.component.WXRefresh -> com.taobao.weex.ui.component.WXRefresh:
    49:50:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,java.lang.String,boolean,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    53:54:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,boolean,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    63:63:boolean canRecycled() -> canRecycled
    80:80:int getLayoutTopOffsetForSibling() -> getLayoutTopOffsetForSibling
    42:42:android.view.View initComponentHostView(android.content.Context) -> initComponentHostView
    58:58:com.taobao.weex.ui.view.WXFrameLayout initComponentHostView(android.content.Context) -> initComponentHostView
    85:92:void onPullingDown(float,int,float) -> onPullingDown
    68:75:void onRefresh() -> onRefresh
    108:118:void setDisplay(java.lang.String) -> setDisplay
    96:103:boolean setProperty(java.lang.String,java.lang.Object) -> setProperty
com.taobao.weex.ui.component.WXScroller -> com.taobao.weex.ui.component.WXScroller:
    135:136:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,java.lang.String,boolean,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    79:142:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    76:76:boolean access$000(com.taobao.weex.ui.component.WXScroller,int,int) -> access$000
    76:76:void access$100(com.taobao.weex.ui.component.WXScroller,android.graphics.Rect,int,int,int,int) -> access$100
    76:76:void access$200(com.taobao.weex.ui.component.WXScroller,int,int,int,int) -> access$200
    76:76:java.lang.Boolean access$300(com.taobao.weex.ui.component.WXScroller) -> access$300
    76:76:java.lang.Boolean access$302(com.taobao.weex.ui.component.WXScroller,java.lang.Boolean) -> access$302
    76:76:int access$400(com.taobao.weex.ui.component.WXScroller) -> access$400
    76:76:int access$402(com.taobao.weex.ui.component.WXScroller,int) -> access$402
    76:76:android.view.GestureDetector access$500(com.taobao.weex.ui.component.WXScroller) -> access$500
    76:76:int access$600(com.taobao.weex.ui.component.WXScroller) -> access$600
    76:76:int access$602(com.taobao.weex.ui.component.WXScroller,int) -> access$602
    76:76:boolean access$702(com.taobao.weex.ui.component.WXScroller,boolean) -> access$702
    76:76:void access$800(com.taobao.weex.ui.component.WXScroller) -> access$800
    76:76:java.util.ArrayList access$900(com.taobao.weex.ui.component.WXScroller) -> access$900
    322:328:void addChild(com.taobao.weex.ui.component.WXComponent,int) -> addChild
    179:226:void addEvent(java.lang.String) -> addEvent
    285:300:void addSubView(android.view.View,int) -> addSubView
    738:739:void bindAppearEvent(com.taobao.weex.ui.component.WXComponent) -> bindAppearEvent
    759:760:void bindDisappearEvent(com.taobao.weex.ui.component.WXComponent) -> bindDisappearEvent
    725:726:void bindStickStyle(com.taobao.weex.ui.component.WXComponent) -> bindStickStyle
    916:929:boolean checkItemVisibleInScroller(com.taobao.weex.ui.component.WXComponent) -> checkItemVisibleInScroller
    336:360:boolean checkRefreshOrLoading(com.taobao.weex.ui.component.WXComponent) -> checkRefreshOrLoading
    155:161:void createViewImpl() -> createViewImpl
    375:388:void destroy() -> destroy
    936:947:void dispatchDisappearEvent() -> dispatchDisappearEvent
    229:230:void fireScrollEvent(android.graphics.Rect,int,int,int,int) -> fireScrollEvent
    304:314:int getChildrenLayoutTopOffset() -> getChildrenLayoutTopOffset
    167:173:android.view.ViewGroup getInnerView() -> getInnerView
    658:658:int getOrientation() -> getOrientation
    74:74:android.view.View getRealView() -> getRealView
    149:149:android.view.ViewGroup getRealView() -> getRealView
    233:253:java.util.Map getScrollEvent(int,int) -> getScrollEvent
    1004:1007:com.taobao.weex.ui.component.helper.ScrollStartEndHelper getScrollStartEndHelper() -> getScrollStartEndHelper
    653:653:int getScrollX() -> getScrollX
    648:648:int getScrollY() -> getScrollY
    662:662:java.util.Map getStickMap() -> getStickMap
    74:74:android.view.View initComponentHostView(android.content.Context) -> initComponentHostView
    448:643:android.view.ViewGroup initComponentHostView(android.content.Context) -> initComponentHostView
    719:719:boolean isScrollable() -> isScrollable
    428:442:com.taobao.weex.ui.component.WXComponent$MeasureOutput measure(int,int) -> measure
    866:873:void notifyAppearStateChange(java.lang.String,java.lang.String) -> notifyAppearStateChange
    973:996:void onLoadMore(com.taobao.weex.ui.view.WXScrollView,int,int) -> onLoadMore
    961:962:void onScroll(com.taobao.weex.ui.view.WXScrollView,int,int) -> onScroll
    861:862:void onScrollChanged(com.taobao.weex.ui.view.WXScrollView,int,int,int,int) -> onScrollChanged
    956:956:void onScrollStopped(com.taobao.weex.ui.view.WXScrollView,int,int) -> onScrollStopped
    952:952:void onScrollToBottom(com.taobao.weex.ui.view.WXScrollView,int,int) -> onScrollToBottom
    885:907:void procAppear(int,int,int,int) -> procAppear
    365:371:void remove(com.taobao.weex.ui.component.WXComponent,boolean) -> remove
    1000:1001:void resetLoadmore() -> resetLoadmore
    829:830:void scrollBy(int,int) -> scrollBy
    833:856:void scrollBy(int,int,boolean) -> scrollBy
    780:821:void scrollTo(com.taobao.weex.ui.component.WXComponent,java.util.Map) -> scrollTo
    414:424:void setLayout(com.taobao.weex.ui.component.WXComponent) -> setLayout
    392:410:void setMarginsSupportRTL(android.view.ViewGroup$MarginLayoutParams,int,int,int,int) -> setMarginsSupportRTL
    713:715:void setOffsetAccuracy(int) -> setOffsetAccuracy
    667:685:boolean setProperty(java.lang.String,java.lang.Object) -> setProperty
    702:709:void setScrollable(boolean) -> setScrollable
    690:698:void setShowScrollbar(boolean) -> setShowScrollbar
    742:752:void setWatch(int,com.taobao.weex.ui.component.WXComponent,boolean) -> setWatch
    257:277:boolean shouldReport(int,int) -> shouldReport
    767:768:void unbindAppearEvent(com.taobao.weex.ui.component.WXComponent) -> unbindAppearEvent
    775:776:void unbindDisappearEvent(com.taobao.weex.ui.component.WXComponent) -> unbindDisappearEvent
    730:731:void unbindStickStyle(com.taobao.weex.ui.component.WXComponent) -> unbindStickStyle
com.taobao.weex.ui.component.WXScroller$1 -> com.taobao.weex.ui.component.WXScroller$1:
    184:184:void <init>(com.taobao.weex.ui.component.WXScroller) -> <init>
    209:209:void onScroll(com.taobao.weex.ui.view.WXScrollView,int,int) -> onScroll
    187:194:void onScrollChanged(com.taobao.weex.ui.view.WXScrollView,int,int,int,int) -> onScrollChanged
    204:204:void onScrollStopped(com.taobao.weex.ui.view.WXScrollView,int,int) -> onScrollStopped
    199:199:void onScrollToBottom(com.taobao.weex.ui.view.WXScrollView,int,int) -> onScrollToBottom
com.taobao.weex.ui.component.WXScroller$10 -> com.taobao.weex.ui.component.WXScroller$10:
    613:613:void <init>(com.taobao.weex.ui.component.WXScroller) -> <init>
    617:627:void onGlobalLayout() -> onGlobalLayout
com.taobao.weex.ui.component.WXScroller$11 -> com.taobao.weex.ui.component.WXScroller$11:
    629:629:void <init>(com.taobao.weex.ui.component.WXScroller) -> <init>
    632:634:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    638:640:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
com.taobao.weex.ui.component.WXScroller$12 -> com.taobao.weex.ui.component.WXScroller$12:
    837:837:void <init>(com.taobao.weex.ui.component.WXScroller,boolean,int,int) -> <init>
    840:854:void run() -> run
com.taobao.weex.ui.component.WXScroller$2 -> com.taobao.weex.ui.component.WXScroller$2:
    212:212:void <init>(com.taobao.weex.ui.component.WXScroller) -> <init>
    215:222:void onScrollChanged(com.taobao.weex.ui.view.WXHorizontalScrollView,int,int,int,int) -> onScrollChanged
com.taobao.weex.ui.component.WXScroller$3 -> com.taobao.weex.ui.component.WXScroller$3:
    339:339:void <init>(com.taobao.weex.ui.component.WXScroller,com.taobao.weex.ui.component.WXComponent) -> <init>
    342:343:void run() -> run
com.taobao.weex.ui.component.WXScroller$4 -> com.taobao.weex.ui.component.WXScroller$4:
    351:351:void <init>(com.taobao.weex.ui.component.WXScroller,com.taobao.weex.ui.component.WXComponent) -> <init>
    354:355:void run() -> run
com.taobao.weex.ui.component.WXScroller$5 -> com.taobao.weex.ui.component.WXScroller$5:
    475:475:void <init>(com.taobao.weex.ui.component.WXScroller) -> <init>
    478:479:void onScrollChanged(com.taobao.weex.ui.view.WXHorizontalScrollView,int,int,int,int) -> onScrollChanged
com.taobao.weex.ui.component.WXScroller$6 -> com.taobao.weex.ui.component.WXScroller$6:
    487:487:void <init>(com.taobao.weex.ui.component.WXScroller,com.taobao.weex.ui.view.WXHorizontalScrollView,com.taobao.weex.ui.component.WXScroller) -> <init>
    490:512:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
com.taobao.weex.ui.component.WXScroller$6$1 -> com.taobao.weex.ui.component.WXScroller$6$1:
    491:491:void <init>(com.taobao.weex.ui.component.WXScroller$6,int,int,int,int) -> <init>
    494:510:void run() -> run
com.taobao.weex.ui.component.WXScroller$7 -> com.taobao.weex.ui.component.WXScroller$7:
    514:514:void <init>(com.taobao.weex.ui.component.WXScroller,android.view.View$OnLayoutChangeListener) -> <init>
    517:518:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    522:523:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
com.taobao.weex.ui.component.WXScroller$8 -> com.taobao.weex.ui.component.WXScroller$8:
    529:529:void <init>(com.taobao.weex.ui.component.WXScroller,com.taobao.weex.ui.view.WXHorizontalScrollView) -> <init>
    532:548:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.taobao.weex.ui.component.WXScroller$9 -> com.taobao.weex.ui.component.WXScroller$9:
    568:568:void <init>(com.taobao.weex.ui.component.WXScroller) -> <init>
    594:608:void onScroll(com.taobao.weex.ui.view.WXScrollView,int,int) -> onScroll
    572:572:void onScrollChanged(com.taobao.weex.ui.view.WXScrollView,int,int,int,int) -> onScrollChanged
    581:590:void onScrollStopped(com.taobao.weex.ui.view.WXScrollView,int,int) -> onScrollStopped
    577:577:void onScrollToBottom(com.taobao.weex.ui.view.WXScrollView,int,int) -> onScrollToBottom
com.taobao.weex.ui.component.WXScroller$Creator -> com.taobao.weex.ui.component.WXScroller$Creator:
    106:106:void <init>() -> <init>
    110:111:com.taobao.weex.ui.component.WXComponent createInstance(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,com.taobao.weex.ui.action.BasicComponentData) -> createInstance
com.taobao.weex.ui.component.WXScroller$MyGestureDetector -> com.taobao.weex.ui.component.WXScroller$MyGestureDetector:
    1018:1020:void <init>(com.taobao.weex.ui.component.WXScroller,com.taobao.weex.ui.view.WXHorizontalScrollView) -> <init>
    1013:1013:com.taobao.weex.ui.view.WXHorizontalScrollView getScrollView() -> getScrollView
    1024:1043:boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
com.taobao.weex.ui.component.WXSlider -> com.taobao.weex.ui.component.WXSlider:
    100:101:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,java.lang.String,boolean,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    62:105:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    57:57:int access$000(com.taobao.weex.ui.component.WXSlider) -> access$000
    57:57:int access$002(com.taobao.weex.ui.component.WXSlider,int) -> access$002
    57:57:int access$100(com.taobao.weex.ui.component.WXSlider) -> access$100
    57:57:int access$200(com.taobao.weex.ui.component.WXSlider,int) -> access$200
    57:57:java.lang.Runnable access$302(com.taobao.weex.ui.component.WXSlider,java.lang.Runnable) -> access$302
    57:57:java.util.ArrayList access$400(com.taobao.weex.ui.component.WXSlider) -> access$400
    57:57:java.util.ArrayList access$500(com.taobao.weex.ui.component.WXSlider) -> access$500
    57:57:float access$600(com.taobao.weex.ui.component.WXSlider) -> access$600
    160:167:void addEvent(java.lang.String) -> addEvent
    262:274:void addIndicator(com.taobao.weex.ui.component.WXIndicator) -> addIndicator
    182:214:void addSubView(android.view.View,int) -> addSubView
    172:172:boolean containsGesture(com.taobao.weex.ui.view.gesture.WXGestureType) -> containsGesture
    237:243:void destroy() -> destroy
    138:154:android.view.ViewGroup$LayoutParams getChildLayoutParams(com.taobao.weex.ui.component.WXComponent,android.view.View,int,int,int,int,int,int) -> getChildLayoutParams
    278:287:int getInitIndex() -> getInitIndex
    291:300:int getRealIndex(int) -> getRealIndex
    55:55:android.view.View getRealView() -> getRealView
    177:177:android.view.ViewGroup getRealView() -> getRealView
    557:573:void hackTwoItemsInfiniteScroll() -> hackTwoItemsInfiniteScroll
    55:55:android.view.View initComponentHostView(android.content.Context) -> initComponentHostView
    109:130:com.taobao.weex.ui.view.BaseFrameLayout initComponentHostView(android.content.Context) -> initComponentHostView
    247:251:void onActivityResume() -> onActivityResume
    255:259:void onActivityStop() -> onActivityStop
    226:233:void remove(com.taobao.weex.ui.component.WXComponent,boolean) -> remove
    372:378:void setAutoPlay(java.lang.String) -> setAutoPlay
    403:423:void setIndex(int) -> setIndex
    396:399:void setInterval(int) -> setInterval
    218:222:void setLayout(com.taobao.weex.ui.component.WXComponent) -> setLayout
    433:434:void setOffsetXAccuracy(float) -> setOffsetXAccuracy
    305:350:boolean setProperty(java.lang.String,java.lang.Object) -> setProperty
    426:429:void setScrollable(boolean) -> setScrollable
    382:392:void setShowIndicators(java.lang.String) -> setShowIndicators
    356:368:void setValue(java.lang.String) -> setValue
com.taobao.weex.ui.component.WXSlider$1 -> com.taobao.weex.ui.component.WXSlider$1:
    193:193:void <init>(com.taobao.weex.ui.component.WXSlider) -> <init>
    196:200:void run() -> run
com.taobao.weex.ui.component.WXSlider$2 -> com.taobao.weex.ui.component.WXSlider$2:
    563:563:void <init>(com.taobao.weex.ui.component.WXSlider,android.view.GestureDetector) -> <init>
    566:566:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.taobao.weex.ui.component.WXSlider$Creator -> com.taobao.weex.ui.component.WXSlider$Creator:
    71:71:void <init>() -> <init>
    73:73:com.taobao.weex.ui.component.WXComponent createInstance(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,com.taobao.weex.ui.action.BasicComponentData) -> createInstance
com.taobao.weex.ui.component.WXSlider$FlingGestureListener -> com.taobao.weex.ui.component.WXSlider$FlingGestureListener:
    576:578:void <clinit>() -> <clinit>
    581:583:void <init>(com.taobao.weex.ui.view.WXCircleViewPager) -> <init>
    587:613:boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
com.taobao.weex.ui.component.WXSlider$SliderOnScrollListener -> com.taobao.weex.ui.component.WXSlider$SliderOnScrollListener:
    493:500:void <init>(com.taobao.weex.ui.component.WXSlider) -> <init>
    541:553:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    504:525:void onPageScrolled(int,float,int) -> onPageScrolled
    529:530:void onPageSelected(int) -> onPageSelected
com.taobao.weex.ui.component.WXSlider$SliderPageChangeListener -> com.taobao.weex.ui.component.WXSlider$SliderPageChangeListener:
    436:438:void <init>(com.taobao.weex.ui.component.WXSlider) -> <init>
    485:489:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    443:443:void onPageScrolled(int,float,int) -> onPageScrolled
    447:481:void onPageSelected(int) -> onPageSelected
com.taobao.weex.ui.component.WXSliderNeighbor -> com.taobao.weex.ui.component.WXSliderNeighbor:
    60:69:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    49:49:void access$000(com.taobao.weex.ui.component.WXSliderNeighbor,android.view.View,float,float) -> access$000
    49:49:float access$100(com.taobao.weex.ui.component.WXSliderNeighbor) -> access$100
    49:49:float access$200(com.taobao.weex.ui.component.WXSliderNeighbor) -> access$200
    49:49:float access$300(com.taobao.weex.ui.component.WXSliderNeighbor) -> access$300
    49:49:float access$400(com.taobao.weex.ui.component.WXSliderNeighbor,android.view.View) -> access$400
    49:49:void access$500(com.taobao.weex.ui.component.WXSliderNeighbor,float,float) -> access$500
    118:155:void addSubView(android.view.View,int) -> addSubView
    79:80:void bindData(com.taobao.weex.ui.component.WXComponent) -> bindData
    336:342:float calculateTranslation(android.view.View) -> calculateTranslation
    110:113:com.taobao.weex.ui.component.WXSliderNeighbor$ZoomTransformer createTransformer() -> createTransformer
    49:49:android.view.View initComponentHostView(android.content.Context) -> initComponentHostView
    84:106:com.taobao.weex.ui.view.BaseFrameLayout initComponentHostView(android.content.Context) -> initComponentHostView
    225:228:void moveLeft(android.view.View,float,float,float) -> moveLeft
    230:231:void moveRight(android.view.View,float,float,float) -> moveRight
    286:298:void setCurrentItemScale(java.lang.String) -> setCurrentItemScale
    252:265:void setNeighborAlpha(java.lang.String) -> setNeighborAlpha
    235:248:void setNeighborScale(java.lang.String) -> setNeighborScale
    270:281:void setNeighborSpace(java.lang.String) -> setNeighborSpace
    303:329:boolean setProperty(java.lang.String,java.lang.Object) -> setProperty
    171:200:void updateAdapterScaleAndAlpha(float,float) -> updateAdapterScaleAndAlpha
    203:222:void updateNeighbor(android.view.View,float,float) -> updateNeighbor
    158:168:void updateScaleAndAlpha(android.view.View,float,float) -> updateScaleAndAlpha
com.taobao.weex.ui.component.WXSliderNeighbor$1 -> com.taobao.weex.ui.component.WXSliderNeighbor$1:
    135:135:void <init>(com.taobao.weex.ui.component.WXSliderNeighbor,int) -> <init>
    139:153:void run() -> run
com.taobao.weex.ui.component.WXSliderNeighbor$2 -> com.taobao.weex.ui.component.WXSliderNeighbor$2:
    182:182:void <init>(com.taobao.weex.ui.component.WXSliderNeighbor,android.view.View,float,float) -> <init>
    186:188:void run() -> run
com.taobao.weex.ui.component.WXSliderNeighbor$Creator -> com.taobao.weex.ui.component.WXSliderNeighbor$Creator:
    71:71:void <init>() -> <init>
    73:73:com.taobao.weex.ui.component.WXComponent createInstance(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,com.taobao.weex.ui.action.BasicComponentData) -> createInstance
com.taobao.weex.ui.component.WXSliderNeighbor$ZoomTransformer -> com.taobao.weex.ui.component.WXSliderNeighbor$ZoomTransformer:
    346:346:void <init>(com.taobao.weex.ui.component.WXSliderNeighbor) -> <init>
    349:409:void transformPage(android.view.View,float) -> transformPage
com.taobao.weex.ui.component.WXSwitch -> com.taobao.weex.ui.component.WXSwitch:
    46:47:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,java.lang.String,boolean,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    50:85:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,boolean,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    95:114:void addEvent(java.lang.String) -> addEvent
    38:38:android.view.View initComponentHostView(android.content.Context) -> initComponentHostView
    89:89:com.taobao.weex.ui.view.WXSwitchView initComponentHostView(android.content.Context) -> initComponentHostView
    118:122:void removeEventFromView(java.lang.String) -> removeEventFromView
    139:142:void setChecked(boolean) -> setChecked
    126:134:boolean setProperty(java.lang.String,java.lang.Object) -> setProperty
com.taobao.weex.ui.component.WXSwitch$1 -> com.taobao.weex.ui.component.WXSwitch$1:
    51:51:void <init>(com.taobao.weex.ui.component.WXSwitch,com.taobao.weex.WXSDKInstance) -> <init>
    83:83:void layoutAfter(float,float) -> layoutAfter
    78:78:void layoutBefore() -> layoutBefore
    55:73:void measureInternal(float,float,int,int) -> measureInternal
com.taobao.weex.ui.component.WXSwitch$2 -> com.taobao.weex.ui.component.WXSwitch$2:
    98:98:void <init>(com.taobao.weex.ui.component.WXSwitch) -> <init>
    101:109:void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.taobao.weex.ui.component.WXText -> com.taobao.weex.ui.component.WXText:
    88:89:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,java.lang.String,boolean,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    93:95:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    48:48:java.lang.String access$000(com.taobao.weex.ui.component.WXText) -> access$000
    48:48:void access$100(com.taobao.weex.ui.component.WXText) -> access$100
    160:166:java.lang.Object convertEmptyProperty(java.lang.String,java.lang.Object) -> convertEmptyProperty
    171:174:void createViewImpl() -> createViewImpl
    178:184:void destroy() -> destroy
    231:239:void forceRelayout() -> forceRelayout
    47:47:com.taobao.weex.ui.flat.widget.Widget getOrCreateFlatWidget() -> getOrCreateFlatWidget
    69:72:com.taobao.weex.ui.flat.widget.TextWidget getOrCreateFlatWidget() -> getOrCreateFlatWidget
    47:47:android.view.View initComponentHostView(android.content.Context) -> initComponentHostView
    99:101:com.taobao.weex.ui.view.WXTextView initComponentHostView(android.content.Context) -> initComponentHostView
    77:77:boolean isVirtualComponent() -> isVirtualComponent
    227:228:void layoutDirectionDidChanged(boolean) -> layoutDirectionDidChanged
    60:63:boolean promoteToView(boolean) -> promoteToView
    128:132:void refreshData(com.taobao.weex.ui.component.WXComponent) -> refreshData
    187:222:void registerTypefaceObserver(java.lang.String) -> registerTypefaceObserver
    120:124:void setAriaLabel(java.lang.String) -> setAriaLabel
    136:154:boolean setProperty(java.lang.String,java.lang.Object) -> setProperty
    106:116:void updateExtra(java.lang.Object) -> updateExtra
com.taobao.weex.ui.component.WXText$1 -> com.taobao.weex.ui.component.WXText$1:
    196:196:void <init>(com.taobao.weex.ui.component.WXText) -> <init>
    199:218:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.taobao.weex.ui.component.WXText$2 -> com.taobao.weex.ui.component.WXText$2:
    231:231:void <init>(com.taobao.weex.ui.component.WXText) -> <init>
    234:237:void run() -> run
com.taobao.weex.ui.component.WXText$Creator -> com.taobao.weex.ui.component.WXText$Creator:
    80:80:void <init>() -> <init>
    82:82:com.taobao.weex.ui.component.WXComponent createInstance(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,com.taobao.weex.ui.action.BasicComponentData) -> createInstance
com.taobao.weex.ui.component.WXTextDecoration -> com.taobao.weex.ui.component.WXTextDecoration:
    21:25:void <clinit>() -> <clinit>
    21:21:void <init>(java.lang.String,int) -> <init>
    21:21:com.taobao.weex.ui.component.WXTextDecoration valueOf(java.lang.String) -> valueOf
    21:21:com.taobao.weex.ui.component.WXTextDecoration[] values() -> values
com.taobao.weex.ui.component.WXVContainer -> com.taobao.weex.ui.component.WXVContainer:
    43:44:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,java.lang.String,boolean,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    47:48:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,boolean,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    51:52:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    64:105:android.view.View getBoxShadowHost(boolean) -> getBoxShadowHost
    56:56:int getChildrenLayoutTopOffset() -> getChildrenLayoutTopOffset
    109:123:void removeBoxShadowHost() -> removeBoxShadowHost
com.taobao.weex.ui.component.WXVContainer$BoxShadowHost -> com.taobao.weex.ui.component.WXVContainer$BoxShadowHost:
    126:128:void <init>(com.taobao.weex.ui.component.WXVContainer,android.content.Context) -> <init>
com.taobao.weex.ui.component.WXVideo -> com.taobao.weex.ui.component.WXVideo:
    58:59:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,java.lang.String,boolean,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    62:63:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,boolean,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    45:45:boolean access$002(com.taobao.weex.ui.component.WXVideo,boolean) -> access$002
    45:45:void access$100(com.taobao.weex.ui.component.WXVideo,java.lang.String,java.lang.String) -> access$100
    45:45:boolean access$200(com.taobao.weex.ui.component.WXVideo) -> access$200
    45:45:boolean access$300(com.taobao.weex.ui.component.WXVideo) -> access$300
    45:45:boolean access$302(com.taobao.weex.ui.component.WXVideo,boolean) -> access$302
    170:172:void bindData(com.taobao.weex.ui.component.WXComponent) -> bindData
    182:183:void destroy() -> destroy
    43:43:android.view.View initComponentHostView(android.content.Context) -> initComponentHostView
    67:152:android.widget.FrameLayout initComponentHostView(android.content.Context) -> initComponentHostView
    156:166:void notify(java.lang.String,java.lang.String) -> notify
    176:178:void notifyAppearStateChange(java.lang.String,java.lang.String) -> notifyAppearStateChange
    232:237:void setAutoPlay(boolean) -> setAutoPlay
    241:246:void setControls(java.lang.String) -> setControls
    253:268:void setPlaystatus(java.lang.String) -> setPlaystatus
    187:214:boolean setProperty(java.lang.String,java.lang.Object) -> setProperty
    219:228:void setSrc(java.lang.String) -> setSrc
com.taobao.weex.ui.component.WXVideo$1 -> com.taobao.weex.ui.component.WXVideo$1:
    68:68:void <init>(com.taobao.weex.ui.component.WXVideo,com.taobao.weex.ui.view.WXVideoView$Wrapper) -> <init>
    72:82:boolean onError(android.media.MediaPlayer,int,int) -> onError
com.taobao.weex.ui.component.WXVideo$2 -> com.taobao.weex.ui.component.WXVideo$2:
    86:86:void <init>(com.taobao.weex.ui.component.WXVideo,com.taobao.weex.ui.view.WXVideoView$Wrapper) -> <init>
    90:112:void onPrepared(android.media.MediaPlayer) -> onPrepared
com.taobao.weex.ui.component.WXVideo$3 -> com.taobao.weex.ui.component.WXVideo$3:
    115:115:void <init>(com.taobao.weex.ui.component.WXVideo) -> <init>
    119:125:void onCompletion(android.media.MediaPlayer) -> onCompletion
com.taobao.weex.ui.component.WXVideo$4 -> com.taobao.weex.ui.component.WXVideo$4:
    128:128:void <init>(com.taobao.weex.ui.component.WXVideo) -> <init>
    132:138:void onPause() -> onPause
    142:149:void onStart() -> onStart
com.taobao.weex.ui.component.WXWeb -> com.taobao.weex.ui.component.WXWeb:
    52:53:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,java.lang.String,boolean,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    56:58:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,boolean,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    42:42:void access$000(com.taobao.weex.ui.component.WXWeb,java.lang.String,java.lang.Object) -> access$000
    61:74:void createWebView() -> createWebView
    125:128:void destroy() -> destroy
    189:195:void fireEvent(java.lang.String,java.lang.Object) -> fireEvent
    226:226:com.taobao.weex.ui.view.IWebView getWebView() -> getWebView
    217:218:void goBack() -> goBack
    212:213:void goForward() -> goForward
    78:120:android.view.View initComponentHostView(android.content.Context) -> initComponentHostView
    202:203:void loadDataWithBaseURL(java.lang.String) -> loadDataWithBaseURL
    198:199:void loadUrl(java.lang.String) -> loadUrl
    222:223:void postMessage(java.lang.Object) -> postMessage
    207:208:void reload() -> reload
    175:186:void setAction(java.lang.String,java.lang.Object) -> setAction
    132:149:boolean setProperty(java.lang.String,java.lang.Object) -> setProperty
    154:155:void setShowLoading(boolean) -> setShowLoading
    169:172:void setSource(java.lang.String) -> setSource
    159:165:void setUrl(java.lang.String) -> setUrl
com.taobao.weex.ui.component.WXWeb$1 -> com.taobao.weex.ui.component.WXWeb$1:
    78:78:void <init>(com.taobao.weex.ui.component.WXWeb) -> <init>
    81:82:void onError(java.lang.String,java.lang.Object) -> onError
com.taobao.weex.ui.component.WXWeb$2 -> com.taobao.weex.ui.component.WXWeb$2:
    84:84:void <init>(com.taobao.weex.ui.component.WXWeb) -> <init>
    105:112:void onPageFinish(java.lang.String,boolean,boolean) -> onPageFinish
    96:101:void onPageStart(java.lang.String) -> onPageStart
    87:92:void onReceivedTitle(java.lang.String) -> onReceivedTitle
com.taobao.weex.ui.component.WXWeb$3 -> com.taobao.weex.ui.component.WXWeb$3:
    114:114:void <init>(com.taobao.weex.ui.component.WXWeb) -> <init>
    117:118:void onMessage(java.util.Map) -> onMessage
com.taobao.weex.ui.component.basic.WXBasicComponent -> com.taobao.weex.ui.component.basic.WXBasicComponent:
    36:37:void <init>(io.dcloud.feature.uniapp.ui.action.AbsComponentData) -> <init>
    33:33:io.dcloud.feature.uniapp.dom.AbsAttr getAttrs() -> getAttrs
    48:48:com.taobao.weex.dom.WXAttr getAttrs() -> getAttrs
    33:33:io.dcloud.feature.uniapp.ui.action.AbsComponentData getBasicComponentData() -> getBasicComponentData
    59:59:com.taobao.weex.ui.action.BasicComponentData getBasicComponentData() -> getBasicComponentData
    33:33:io.dcloud.feature.uniapp.dom.AbsCSSShorthand getBorder() -> getBorder
    65:65:com.taobao.weex.dom.CSSShorthand getBorder() -> getBorder
    33:33:io.dcloud.feature.uniapp.dom.AbsEvent getEvents() -> getEvents
    54:54:com.taobao.weex.dom.WXEvent getEvents() -> getEvents
    33:33:io.dcloud.feature.uniapp.dom.AbsCSSShorthand getMargin() -> getMargin
    77:77:com.taobao.weex.dom.CSSShorthand getMargin() -> getMargin
    33:33:io.dcloud.feature.uniapp.dom.AbsCSSShorthand getPadding() -> getPadding
    71:71:com.taobao.weex.dom.CSSShorthand getPadding() -> getPadding
    33:33:io.dcloud.feature.uniapp.dom.AbsStyle getStyles() -> getStyles
    42:42:com.taobao.weex.dom.WXStyle getStyles() -> getStyles
com.taobao.weex.ui.component.binding.AsynLayoutTask -> com.taobao.weex.ui.component.binding.AsynLayoutTask:
    37:41:void <init>(com.taobao.weex.ui.component.list.template.TemplateViewHolder,int,com.taobao.weex.ui.component.WXComponent) -> <init>
    31:31:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    45:55:java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    31:31:void onPostExecute(java.lang.Object) -> onPostExecute
    60:68:void onPostExecute(java.lang.Void) -> onPostExecute
com.taobao.weex.ui.component.binding.Layouts -> com.taobao.weex.ui.component.binding.Layouts:
    41:41:void <init>() -> <init>
    47:65:void doLayoutAsync(com.taobao.weex.ui.component.list.template.TemplateViewHolder,boolean) -> doLayoutAsync
    79:80:void doLayoutOnly(com.taobao.weex.ui.component.WXComponent,com.taobao.weex.ui.component.list.template.TemplateViewHolder) -> doLayoutOnly
    71:73:void doLayoutSync(com.taobao.weex.ui.component.list.WXCell,float,float) -> doLayoutSync
    84:102:void doSafeLayout(com.taobao.weex.ui.component.WXComponent,float,float) -> doSafeLayout
    111:133:void setLayout(com.taobao.weex.ui.component.WXComponent,boolean) -> setLayout
com.taobao.weex.ui.component.binding.Statements -> com.taobao.weex.ui.component.binding.Statements:
    571:571:void <clinit>() -> <clinit>
    69:69:void <init>() -> <init>
    120:121:com.taobao.weex.ui.component.WXComponent copyComponentTree(com.taobao.weex.ui.component.WXComponent) -> copyComponentTree
    128:157:com.taobao.weex.ui.component.WXComponent copyComponentTree(com.taobao.weex.ui.component.WXComponent,com.taobao.weex.ui.component.WXVContainer) -> copyComponentTree
    352:456:void doBindingAttrsEventAndRenderChildNode(com.taobao.weex.ui.component.WXComponent,com.taobao.weex.ui.component.list.template.CellRenderContext,java.util.List) -> doBindingAttrsEventAndRenderChildNode
    181:197:void doInitCompontent(java.util.List) -> doInitCompontent
    171:177:java.util.List doRender(com.taobao.weex.ui.component.WXComponent,com.taobao.weex.ui.component.list.template.CellRenderContext) -> doRender
    471:563:void doRenderBindingAttrsAndEvent(com.taobao.weex.ui.component.WXComponent,com.taobao.weex.ui.component.list.template.CellRenderContext) -> doRenderBindingAttrsAndEvent
    211:343:int doRenderComponent(com.taobao.weex.ui.component.WXComponent,com.taobao.weex.ui.component.list.template.CellRenderContext,java.util.List) -> doRenderComponent
    644:670:java.util.List getBindingEventArgs(com.taobao.weex.el.parse.ArrayStack,java.lang.Object) -> getBindingEventArgs
    681:696:java.lang.String getComponentId(com.taobao.weex.ui.component.WXComponent) -> getComponentId
    101:112:void initLazyComponent(com.taobao.weex.ui.component.WXComponent,com.taobao.weex.ui.component.WXVContainer) -> initLazyComponent
    463:463:boolean isCreateFromNodeStatement(com.taobao.weex.ui.component.WXComponent,com.taobao.weex.ui.component.WXComponent) -> isCreateFromNodeStatement
    675:675:boolean isMainThread() -> isMainThread
    76:92:void parseStatementsToken(com.taobao.weex.ui.component.WXComponent) -> parseStatementsToken
    573:620:java.util.Map renderBindingAttrs(androidx.collection.ArrayMap,com.taobao.weex.el.parse.ArrayStack) -> renderBindingAttrs
    625:640:java.util.Map renderProps(com.alibaba.fastjson.JSONObject,com.taobao.weex.el.parse.ArrayStack) -> renderProps
com.taobao.weex.ui.component.helper.ScrollStartEndHelper -> com.taobao.weex.ui.component.helper.ScrollStartEndHelper:
    46:60:void <init>(com.taobao.weex.ui.component.WXComponent) -> <init>
    110:127:java.util.Map getScrollEvent(int,int) -> getScrollEvent
    147:154:boolean isScrollEvent(java.lang.String) -> isScrollEvent
    132:143:void onScrollStateChanged(int) -> onScrollStateChanged
    67:85:void onScrolled(int,int) -> onScrolled
    90:107:void run() -> run
com.taobao.weex.ui.component.helper.SoftKeyboardDetector -> com.taobao.weex.ui.component.helper.SoftKeyboardDetector:
    38:38:void <init>() -> <init>
    104:107:android.view.View getActivityRoot(android.app.Activity) -> getActivityRoot
    92:100:boolean isKeyboardVisible(android.app.Activity) -> isKeyboardVisible
    43:88:com.taobao.weex.ui.component.helper.SoftKeyboardDetector$Unregister registerKeyboardEventListener(android.app.Activity,com.taobao.weex.ui.component.helper.SoftKeyboardDetector$OnKeyboardEventListener) -> registerKeyboardEventListener
com.taobao.weex.ui.component.helper.SoftKeyboardDetector$1 -> com.taobao.weex.ui.component.helper.SoftKeyboardDetector$1:
    67:71:void <init>(android.view.View,com.taobao.weex.ui.component.helper.SoftKeyboardDetector$OnKeyboardEventListener) -> <init>
    75:84:void onGlobalLayout() -> onGlobalLayout
com.taobao.weex.ui.component.helper.SoftKeyboardDetector$DefaultUnRegister -> com.taobao.weex.ui.component.helper.SoftKeyboardDetector$DefaultUnRegister:
    115:118:void <init>(android.app.Activity,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> <init>
    122:138:void execute() -> execute
com.taobao.weex.ui.component.helper.WXStickyHelper -> com.taobao.weex.ui.component.helper.WXStickyHelper:
    35:37:void <init>(com.taobao.weex.ui.component.Scrollable) -> <init>
    40:54:void bindStickStyle(com.taobao.weex.ui.component.WXComponent,java.util.Map) -> bindStickStyle
    57:67:void unbindStickStyle(com.taobao.weex.ui.component.WXComponent,java.util.Map) -> unbindStickStyle
com.taobao.weex.ui.component.helper.WXTimeInputHelper -> com.taobao.weex.ui.component.helper.WXTimeInputHelper:
    31:31:void <init>() -> <init>
    33:50:void pickDate(java.lang.String,java.lang.String,com.taobao.weex.ui.component.AbstractEditComponent) -> pickDate
    53:69:void pickTime(com.taobao.weex.ui.component.AbstractEditComponent) -> pickTime
com.taobao.weex.ui.component.helper.WXTimeInputHelper$1 -> com.taobao.weex.ui.component.helper.WXTimeInputHelper$1:
    40:40:void <init>(android.widget.TextView,com.taobao.weex.ui.component.AbstractEditComponent) -> <init>
    43:47:void onPick(boolean,java.lang.String) -> onPick
com.taobao.weex.ui.component.helper.WXTimeInputHelper$2 -> com.taobao.weex.ui.component.helper.WXTimeInputHelper$2:
    58:58:void <init>(android.widget.TextView,com.taobao.weex.ui.component.AbstractEditComponent) -> <init>
    61:65:void onPick(boolean,java.lang.String) -> onPick
com.taobao.weex.ui.component.list.BasicListComponent -> com.taobao.weex.ui.component.list.BasicListComponent:
    101:114:void <clinit>() -> <clinit>
    98:179:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    94:94:com.taobao.weex.ui.view.listview.adapter.WXRecyclerViewOnScrollListener access$000(com.taobao.weex.ui.component.list.BasicListComponent) -> access$000
    94:94:java.lang.Runnable access$100(com.taobao.weex.ui.component.list.BasicListComponent) -> access$100
    94:94:com.taobao.weex.ui.component.WXComponent access$200(com.taobao.weex.ui.component.list.BasicListComponent) -> access$200
    94:94:com.taobao.weex.ui.component.WXComponent access$202(com.taobao.weex.ui.component.list.BasicListComponent,com.taobao.weex.ui.component.WXComponent) -> access$202
    94:94:java.lang.Runnable access$302(com.taobao.weex.ui.component.list.BasicListComponent,java.lang.Runnable) -> access$302
    94:94:com.taobao.weex.ui.component.list.DragHelper access$400(com.taobao.weex.ui.component.list.BasicListComponent) -> access$400
    94:94:boolean access$500(com.taobao.weex.ui.component.list.BasicListComponent,int,int) -> access$500
    94:94:void access$600(com.taobao.weex.ui.component.list.BasicListComponent,androidx.recyclerview.widget.RecyclerView,int,int) -> access$600
    699:700:void addChild(com.taobao.weex.ui.component.WXComponent) -> addChild
    714:796:void addChild(com.taobao.weex.ui.component.WXComponent,int) -> addChild
    1337:1389:void addEvent(java.lang.String) -> addEvent
    818:818:void addSubView(android.view.View,int) -> addSubView
    511:526:void bindAppearEvent(com.taobao.weex.ui.component.WXComponent) -> bindAppearEvent
    530:531:void bindDisappearEvent(com.taobao.weex.ui.component.WXComponent) -> bindDisappearEvent
    396:397:void bindStickStyle(com.taobao.weex.ui.component.WXComponent) -> bindStickStyle
    1150:1163:void bindViewType(com.taobao.weex.ui.component.WXComponent) -> bindViewType
    1444:1492:int calcContentOffset(androidx.recyclerview.widget.RecyclerView) -> calcContentOffset
    1055:1075:void checkRecycledViewPool(int) -> checkRecycledViewPool
    863:865:void computeVisiblePointInViewCoordinate(android.graphics.PointF) -> computeVisiblePointInViewCoordinate
    1316:1319:com.taobao.weex.ui.view.listview.adapter.ListBaseViewHolder createVHForFakeComponent(int) -> createVHForFakeComponent
    1324:1326:com.taobao.weex.ui.view.listview.adapter.ListBaseViewHolder createVHForRefreshComponent(int) -> createVHForRefreshComponent
    264:279:void destroy() -> destroy
    1090:1122:com.taobao.weex.ui.component.WXComponent findComponentByAnchorName(com.taobao.weex.ui.component.WXComponent,java.lang.String) -> findComponentByAnchorName
    412:420:com.taobao.weex.ui.component.WXComponent findDirectListChild(com.taobao.weex.ui.component.WXComponent) -> findDirectListChild
    1392:1395:void fireScrollEvent(androidx.recyclerview.widget.RecyclerView,int,int) -> fireScrollEvent
    1184:1209:int generateViewType(com.taobao.weex.common.IWXObject) -> generateViewType
    1523:1528:int getChildCount() -> getChildCount
    283:294:android.view.ViewGroup$LayoutParams getChildLayoutParams(com.taobao.weex.ui.component.WXComponent,android.view.View,int,int,int,int,int,int) -> getChildLayoutParams
    704:704:int getChildrenLayoutTopOffset() -> getChildrenLayoutTopOffset
    1219:1219:int getItemCount() -> getItemCount
    1232:1244:long getItemId(int) -> getItemId
    1085:1085:int getItemViewType(int) -> getItemViewType
    1537:1549:com.taobao.weex.common.IWXObject getListChild(int) -> getListChild
    1567:1578:float getListChildLayoutHeight(int) -> getListChildLayoutHeight
    1555:1558:com.taobao.weex.common.IWXObject getListStanceCell(java.lang.String) -> getListStanceCell
    259:259:int getOrientation() -> getOrientation
    1398:1419:java.util.Map getScrollEvent(androidx.recyclerview.widget.RecyclerView,int,int) -> getScrollEvent
    1496:1499:com.taobao.weex.ui.component.helper.ScrollStartEndHelper getScrollStartEndHelper() -> getScrollStartEndHelper
    685:686:int getScrollX() -> getScrollX
    679:680:int getScrollY() -> getScrollY
    1127:1140:java.lang.String getTriggerType(com.taobao.weex.ui.component.WXComponent) -> getTriggerType
    94:94:android.view.View initComponentHostView(android.content.Context) -> initComponentHostView
    301:391:android.view.ViewGroup initComponentHostView(android.content.Context) -> initComponentHostView
    488:488:boolean isScrollable() -> isScrollable
    989:992:void markComponentUsable() -> markComponentUsable
    255:255:com.taobao.weex.ui.component.WXComponent$MeasureOutput measure(int,int) -> measure
    1274:1312:void notifyAppearStateChange(int,int,int,int) -> notifyAppearStateChange
    590:675:void onBeforeScroll(int,int) -> onBeforeScroll
    94:94:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    900:986:void onBindViewHolder(com.taobao.weex.ui.view.listview.adapter.ListBaseViewHolder,int) -> onBindViewHolder
    94:94:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    1004:1045:com.taobao.weex.ui.view.listview.adapter.ListBaseViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    94:94:boolean onFailedToRecycleView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onFailedToRecycleView
    1224:1227:boolean onFailedToRecycleView(com.taobao.weex.ui.view.listview.adapter.ListBaseViewHolder) -> onFailedToRecycleView
    94:94:void onHostViewInitialized(android.view.View) -> onHostViewInitialized
    214:240:void onHostViewInitialized(android.view.ViewGroup) -> onHostViewInitialized
    1250:1270:void onLoadMore(int) -> onLoadMore
    94:94:void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewRecycled
    875:890:void onViewRecycled(com.taobao.weex.ui.view.listview.adapter.ListBaseViewHolder) -> onViewRecycled
    799:807:void relocateAppearanceHelper() -> relocateAppearanceHelper
    830:857:void remove(com.taobao.weex.ui.component.WXComponent,boolean) -> remove
    1331:1333:void resetLoadmore() -> resetLoadmore
    545:586:void scrollTo(com.taobao.weex.ui.component.WXComponent,java.util.Map) -> scrollTo
    1594:1632:void scrollTo(java.lang.String,com.taobao.weex.bridge.JSCallback) -> scrollTo
    493:507:void setAppearanceWatch(com.taobao.weex.ui.component.WXComponent,int,boolean) -> setAppearanceWatch
    1583:1590:void setBounce(java.lang.String) -> setBounce
    466:472:void setDraggable(boolean) -> setDraggable
    205:210:void setLayout(com.taobao.weex.ui.component.WXComponent) -> setLayout
    183:201:void setMarginsSupportRTL(android.view.ViewGroup$MarginLayoutParams,int,int,int,int) -> setMarginsSupportRTL
    460:462:void setOffsetAccuracy(int) -> setOffsetAccuracy
    425:446:boolean setProperty(java.lang.String,java.lang.Object) -> setProperty
    1647:1654:void setScrollLeft(java.lang.String) -> setScrollLeft
    1636:1643:void setScrollTop(java.lang.String) -> setScrollTop
    451:456:void setScrollable(boolean) -> setScrollable
    476:484:void setShowScrollbar(boolean) -> setShowScrollbar
    1504:1518:void setSpecialEffects(com.alibaba.fastjson.JSONObject) -> setSpecialEffects
    1423:1438:boolean shouldReport(int,int) -> shouldReport
    1166:1175:void unBindViewType(com.taobao.weex.ui.component.WXComponent) -> unBindViewType
    535:536:void unbindAppearEvent(com.taobao.weex.ui.component.WXComponent) -> unbindAppearEvent
    540:541:void unbindDisappearEvent(com.taobao.weex.ui.component.WXComponent) -> unbindDisappearEvent
    401:406:void unbindStickStyle(com.taobao.weex.ui.component.WXComponent) -> unbindStickStyle
com.taobao.weex.ui.component.list.BasicListComponent$1 -> com.taobao.weex.ui.component.list.BasicListComponent$1:
    232:232:void <init>(com.taobao.weex.ui.component.list.BasicListComponent) -> <init>
    235:236:void triggerEvent(java.lang.String,java.util.Map) -> triggerEvent
com.taobao.weex.ui.component.list.BasicListComponent$2 -> com.taobao.weex.ui.component.list.BasicListComponent$2:
    327:327:void <init>(com.taobao.weex.ui.component.list.BasicListComponent) -> <init>
    330:350:void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int) -> onScrollStateChanged
    354:373:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
com.taobao.weex.ui.component.list.BasicListComponent$3 -> com.taobao.weex.ui.component.list.BasicListComponent$3:
    376:376:void <init>(com.taobao.weex.ui.component.list.BasicListComponent) -> <init>
    381:389:void onGlobalLayout() -> onGlobalLayout
com.taobao.weex.ui.component.list.BasicListComponent$4 -> com.taobao.weex.ui.component.list.BasicListComponent$4:
    513:513:void <init>(com.taobao.weex.ui.component.list.BasicListComponent) -> <init>
    516:519:void run() -> run
com.taobao.weex.ui.component.list.BasicListComponent$5 -> com.taobao.weex.ui.component.list.BasicListComponent$5:
    759:759:void <init>(com.taobao.weex.ui.component.list.BasicListComponent,android.view.ViewGroup) -> <init>
    762:778:void run() -> run
com.taobao.weex.ui.component.list.BasicListComponent$6 -> com.taobao.weex.ui.component.list.BasicListComponent$6:
    962:962:void <init>(com.taobao.weex.ui.component.list.BasicListComponent,com.taobao.weex.ui.view.listview.adapter.ListBaseViewHolder) -> <init>
    965:968:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.taobao.weex.ui.component.list.BasicListComponent$7 -> com.taobao.weex.ui.component.list.BasicListComponent$7:
    1344:1346:void <init>(com.taobao.weex.ui.component.list.BasicListComponent) -> <init>
    1350:1386:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
com.taobao.weex.ui.component.list.DefaultDragHelper -> com.taobao.weex.ui.component.list.DefaultDragHelper:
    62:76:void <init>(java.util.List,androidx.recyclerview.widget.RecyclerView,com.taobao.weex.ui.component.list.EventTrigger) -> <init>
    166:171:java.util.Map buildEvent(java.lang.String,int,int) -> buildEvent
    156:162:boolean isDragExcluded(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> isDragExcluded
    131:131:boolean isDraggable() -> isDraggable
    114:114:boolean isLongPressDragEnabled() -> isLongPressDragEnabled
    88:92:void onDragEnd(com.taobao.weex.ui.component.WXComponent,int,int) -> onDragEnd
    80:84:void onDragStart(com.taobao.weex.ui.component.WXComponent,int) -> onDragStart
    96:110:void onDragging(int,int) -> onDragging
    141:152:void setDragExcluded(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> setDragExcluded
    136:137:void setDraggable(boolean) -> setDraggable
    119:120:void setLongPressDragEnabled(boolean) -> setLongPressDragEnabled
    124:127:void startDrag(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> startDrag
com.taobao.weex.ui.component.list.DragSupportCallback -> com.taobao.weex.ui.component.list.DragSupportCallback:
    41:51:void <init>(com.taobao.weex.ui.component.list.DragHelper) -> <init>
    41:56:void <init>(com.taobao.weex.ui.component.list.DragHelper,boolean) -> <init>
    132:145:void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> clearView
    60:67:int getMovementFlags(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getMovementFlags
    114:114:boolean isItemViewSwipeEnabled() -> isItemViewSwipeEnabled
    105:105:boolean isLongPressDragEnabled() -> isLongPressDragEnabled
    73:98:boolean onMove(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onMove
    119:127:void onSelectedChanged(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onSelectedChanged
    110:110:void onSwiped(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onSwiped
com.taobao.weex.ui.component.list.GapItemDecoration -> com.taobao.weex.ui.component.list.GapItemDecoration:
    38:40:void <init>(com.taobao.weex.ui.component.list.WXListComponent) -> <init>
    44:80:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
com.taobao.weex.ui.component.list.HorizontalListComponent -> com.taobao.weex.ui.component.list.HorizontalListComponent:
    34:35:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,boolean,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    39:39:int getOrientation() -> getOrientation
com.taobao.weex.ui.component.list.ListStanceCell -> com.taobao.weex.ui.component.list.ListStanceCell:
    28:32:void <init>(java.lang.String) -> <init>
    35:35:java.lang.String getBackgroundColor() -> getBackgroundColor
com.taobao.weex.ui.component.list.RecyclerTransform -> com.taobao.weex.ui.component.list.RecyclerTransform:
    37:37:void <clinit>() -> <clinit>
    34:34:void <init>() -> <init>
    51:88:androidx.recyclerview.widget.RecyclerView$ItemDecoration parseTransforms(int,java.lang.String) -> parseTransforms
com.taobao.weex.ui.component.list.SimpleListComponent -> com.taobao.weex.ui.component.list.SimpleListComponent:
    36:37:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    33:33:android.view.ViewGroup generateListView(android.content.Context,int) -> generateListView
    41:43:com.taobao.weex.ui.component.list.SimpleRecyclerView generateListView(android.content.Context,int) -> generateListView
com.taobao.weex.ui.component.list.SimpleRecyclerView -> com.taobao.weex.ui.component.list.SimpleRecyclerView:
    38:42:void <init>(android.content.Context) -> <init>
    46:46:com.taobao.weex.ui.view.listview.WXRecyclerView getInnerView() -> getInnerView
    76:76:com.taobao.weex.ui.view.listview.adapter.RecyclerViewBaseAdapter getRecyclerViewBaseAdapter() -> getRecyclerViewBaseAdapter
    67:67:void notifyStickyRemove(com.taobao.weex.ui.component.list.WXCell) -> notifyStickyRemove
    60:60:void notifyStickyShow(com.taobao.weex.ui.component.list.WXCell) -> notifyStickyShow
    51:53:void setRecyclerViewBaseAdapter(com.taobao.weex.ui.view.listview.adapter.RecyclerViewBaseAdapter) -> setRecyclerViewBaseAdapter
    72:72:void updateStickyView(int) -> updateStickyView
com.taobao.weex.ui.component.list.StickyHeaderHelper -> com.taobao.weex.ui.component.list.StickyHeaderHelper:
    41:47:void <init>(android.view.ViewGroup) -> <init>
    39:39:android.view.ViewGroup access$000(com.taobao.weex.ui.component.list.StickyHeaderHelper) -> access$000
    39:39:void access$100(com.taobao.weex.ui.component.list.StickyHeaderHelper) -> access$100
    187:206:void changeFrontStickyVisible() -> changeFrontStickyVisible
    172:183:void clearStickyHeaders() -> clearStickyHeaders
    117:145:void notifyStickyRemove(com.taobao.weex.ui.component.list.WXCell) -> notifyStickyRemove
    53:113:void notifyStickyShow(com.taobao.weex.ui.component.list.WXCell) -> notifyStickyShow
    149:169:void updateStickyView(int) -> updateStickyView
com.taobao.weex.ui.component.list.StickyHeaderHelper$1 -> com.taobao.weex.ui.component.list.StickyHeaderHelper$1:
    130:130:void <init>(com.taobao.weex.ui.component.list.StickyHeaderHelper,android.view.View,com.taobao.weex.ui.component.list.WXCell) -> <init>
    133:140:void run() -> run
com.taobao.weex.ui.component.list.WXCell -> com.taobao.weex.ui.component.list.WXCell:
    58:88:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,java.lang.String,boolean,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    58:110:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,boolean,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    262:267:void appendTreeCreateFinish() -> appendTreeCreateFinish
    283:287:void createViewImpl() -> createViewImpl
    148:148:int getLocationFromStart() -> getLocationFromStart
    54:54:android.view.View getRealView() -> getRealView
    165:165:android.view.ViewGroup getRealView() -> getRealView
    240:240:java.lang.Object getRenderData() -> getRenderData
    160:160:int getScrollPositon() -> getScrollPositon
    232:236:int getStickyOffset() -> getStickyOffset
    54:54:android.view.View initComponentHostView(android.content.Context) -> initComponentHostView
    128:143:com.taobao.weex.ui.view.WXFrameLayout initComponentHostView(android.content.Context) -> initComponentHostView
    228:228:boolean intendToBeFlatContainer() -> intendToBeFlatContainer
    257:257:boolean isAppendTreeDone() -> isAppendTreeDone
    120:120:boolean isFlatUIEnabled() -> isFlatUIEnabled
    114:114:boolean isLazy() -> isLazy
    248:248:boolean isSourceUsed() -> isSourceUsed
    211:217:void mountFlatGUI() -> mountFlatGUI
    189:207:void recoverySticky() -> recoverySticky
    169:186:void removeSticky() -> removeSticky
    270:274:void setCellAppendTreeListener(com.taobao.weex.ui.component.list.WXCell$CellAppendTreeListener) -> setCellAppendTreeListener
    152:153:void setLocationFromStart(int) -> setLocationFromStart
    244:245:void setRenderData(java.lang.Object) -> setRenderData
    156:157:void setScrollPositon(int) -> setScrollPositon
    252:253:void setSourceUsed(boolean) -> setSourceUsed
    221:224:void unmountFlatGUI() -> unmountFlatGUI
com.taobao.weex.ui.component.list.WXCell$Creator -> com.taobao.weex.ui.component.list.WXCell$Creator:
    76:76:void <init>() -> <init>
    81:81:com.taobao.weex.ui.component.WXComponent createInstance(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,com.taobao.weex.ui.action.BasicComponentData) -> createInstance
com.taobao.weex.ui.component.list.WXListComponent -> com.taobao.weex.ui.component.list.WXListComponent:
    84:85:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,java.lang.String,boolean,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    65:90:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,boolean,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    121:131:void addChild(com.taobao.weex.ui.component.WXComponent,int) -> addChild
    288:319:void createChildViewAt(int) -> createChildViewAt
    62:62:android.view.ViewGroup generateListView(android.content.Context,int) -> generateListView
    94:116:com.taobao.weex.ui.view.refresh.wrapper.BounceRecyclerView generateListView(android.content.Context,int) -> generateListView
    341:341:java.lang.Float[] getSpanOffsets() -> getSpanOffsets
    134:136:boolean hasColumnPros() -> hasColumnPros
    335:337:boolean isRecycler(com.taobao.weex.ui.component.WXComponent) -> isRecycler
    322:324:void remove(com.taobao.weex.ui.component.WXComponent,boolean) -> remove
    327:332:void removeFooterOrHeader(com.taobao.weex.ui.component.WXComponent) -> removeFooterOrHeader
    239:245:void setColumnCount(int) -> setColumnCount
    249:255:void setColumnGap(float) -> setColumnGap
    229:235:void setColumnWidth(float) -> setColumnWidth
    146:171:boolean setRefreshOrLoading(com.taobao.weex.ui.component.WXComponent) -> setRefreshOrLoading
    259:261:void setScrollable(boolean) -> setScrollable
    219:225:void setSpanOffsets(java.lang.String) -> setSpanOffsets
    265:284:void updateProperties(java.util.Map) -> updateProperties
    175:215:void updateRecyclerAttr() -> updateRecyclerAttr
com.taobao.weex.ui.component.list.WXListComponent$1 -> com.taobao.weex.ui.component.list.WXListComponent$1:
    152:152:void <init>(com.taobao.weex.ui.component.list.WXListComponent,com.taobao.weex.ui.component.WXComponent) -> <init>
    155:156:void run() -> run
com.taobao.weex.ui.component.list.WXListComponent$2 -> com.taobao.weex.ui.component.list.WXListComponent$2:
    163:163:void <init>(com.taobao.weex.ui.component.list.WXListComponent,com.taobao.weex.ui.component.WXComponent) -> <init>
    166:167:void run() -> run
com.taobao.weex.ui.component.list.WXListComponent$3 -> com.taobao.weex.ui.component.list.WXListComponent$3:
    301:301:void <init>(com.taobao.weex.ui.component.list.WXListComponent,com.taobao.weex.ui.component.WXComponent) -> <init>
    304:305:void run() -> run
com.taobao.weex.ui.component.list.WXListComponent$4 -> com.taobao.weex.ui.component.list.WXListComponent$4:
    309:309:void <init>(com.taobao.weex.ui.component.list.WXListComponent,com.taobao.weex.ui.component.WXComponent) -> <init>
    312:313:void run() -> run
com.taobao.weex.ui.component.list.WXListComponent$Creator -> com.taobao.weex.ui.component.list.WXListComponent$Creator:
    73:73:void <init>() -> <init>
    78:78:com.taobao.weex.ui.component.WXComponent createInstance(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,com.taobao.weex.ui.action.BasicComponentData) -> createInstance
com.taobao.weex.ui.component.list.WXPagerSnapHelper -> com.taobao.weex.ui.component.list.WXPagerSnapHelper:
    28:28:void <init>() -> <init>
    38:51:int[] calculateDistanceToFinalSnap(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View) -> calculateDistanceToFinalSnap
    73:73:int distanceToStart(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View,androidx.recyclerview.widget.OrientationHelper) -> distanceToStart
    65:69:androidx.recyclerview.widget.OrientationHelper getHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> getHorizontalHelper
    56:60:androidx.recyclerview.widget.OrientationHelper getVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> getVerticalHelper
com.taobao.weex.ui.component.list.template.AsyncCellLoadTask -> com.taobao.weex.ui.component.list.template.AsyncCellLoadTask:
    42:46:void <init>(java.lang.String,com.taobao.weex.ui.component.list.WXCell,com.taobao.weex.ui.component.list.template.WXRecyclerTemplateList) -> <init>
    36:36:boolean access$000(com.taobao.weex.ui.component.list.template.AsyncCellLoadTask) -> access$000
    36:36:java.lang.String access$100(com.taobao.weex.ui.component.list.template.AsyncCellLoadTask) -> access$100
    36:36:com.taobao.weex.ui.component.list.template.WXRecyclerTemplateList access$200(com.taobao.weex.ui.component.list.template.AsyncCellLoadTask) -> access$200
    36:36:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    53:73:java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    115:119:boolean isDestory() -> isDestory
    36:36:void onPostExecute(java.lang.Object) -> onPostExecute
    81:112:void onPostExecute(java.lang.Void) -> onPostExecute
    126:127:void startTask() -> startTask
com.taobao.weex.ui.component.list.template.AsyncCellLoadTask$1 -> com.taobao.weex.ui.component.list.template.AsyncCellLoadTask$1:
    93:93:void <init>(com.taobao.weex.ui.component.list.template.AsyncCellLoadTask,com.taobao.weex.ui.component.list.template.TemplateCache) -> <init>
    96:108:boolean queueIdle() -> queueIdle
com.taobao.weex.ui.component.list.template.CellDataManager -> com.taobao.weex.ui.component.list.template.CellDataManager:
    59:75:void <init>(com.taobao.weex.ui.component.list.template.WXRecyclerTemplateList) -> <init>
    235:251:void cleanRenderState(com.taobao.weex.ui.component.list.template.CellRenderState) -> cleanRenderState
    124:131:void createVirtualComponentData(int,java.lang.String,java.lang.Object) -> createVirtualComponentData
    258:258:java.lang.String createVirtualComponentId(java.lang.String,java.lang.String,long) -> createVirtualComponentId
    265:268:java.lang.String getListRef(java.lang.String) -> getListRef
    81:91:com.taobao.weex.ui.component.list.template.CellRenderState getRenderState(int) -> getRenderState
    163:172:boolean insertData(int,java.lang.Object) -> insertData
    182:191:boolean insertRange(int,com.alibaba.fastjson.JSONArray) -> insertRange
    220:229:void removeData(java.lang.Integer) -> removeData
    141:155:void setListData(com.alibaba.fastjson.JSONArray) -> setListData
    201:212:boolean updateData(java.lang.Object,int) -> updateData
    100:115:void updateVirtualComponentData(java.lang.String,java.lang.Object) -> updateVirtualComponentData
com.taobao.weex.ui.component.list.template.CellRenderContext -> com.taobao.weex.ui.component.list.template.CellRenderContext:
    30:38:void <init>() -> <init>
    69:78:void clear() -> clear
    61:64:com.taobao.weex.ui.component.list.template.CellRenderState getRenderState() -> getRenderState
com.taobao.weex.ui.component.list.template.CellRenderState -> com.taobao.weex.ui.component.list.template.CellRenderState:
    32:57:void <init>() -> <init>
    97:100:java.util.Map getOnceComponentStates() -> getOnceComponentStates
    90:93:java.util.Map getVirtualComponentDatas() -> getVirtualComponentDatas
    76:79:java.util.Map getVirtualComponentIds() -> getVirtualComponentIds
    86:86:boolean hasVirtualComponents() -> hasVirtualComponents
    104:104:boolean isDirty() -> isDirty
    110:110:boolean isHasDataUpdate() -> isHasDataUpdate
    116:119:void resetDirty() -> resetDirty
com.taobao.weex.ui.component.list.template.PositionRef -> com.taobao.weex.ui.component.list.template.PositionRef:
    32:34:void <init>(com.taobao.weex.ui.component.list.template.CellRenderState) -> <init>
    53:53:double doubleValue() -> doubleValue
    48:48:float floatValue() -> floatValue
    57:60:int getPosition() -> getPosition
    38:38:int intValue() -> intValue
    43:43:long longValue() -> longValue
    70:70:java.lang.String toJSONString() -> toJSONString
    65:65:java.lang.String toString() -> toString
com.taobao.weex.ui.component.list.template.Selector -> com.taobao.weex.ui.component.list.template.Selector:
    34:34:void <init>() -> <init>
    64:78:void closest(com.taobao.weex.ui.component.WXComponent,java.lang.String,java.util.List) -> closest
    81:88:void closestByAttrs(com.taobao.weex.ui.component.WXComponent,java.lang.String,java.lang.String,java.util.List) -> closestByAttrs
    105:118:boolean matchAttrs(com.taobao.weex.ui.component.WXComponent,java.lang.String,java.lang.String) -> matchAttrs
    41:60:void queryElementAll(com.taobao.weex.ui.component.WXComponent,java.lang.String,java.util.List) -> queryElementAll
    92:101:void queryElementAllByAttrs(com.taobao.weex.ui.component.WXComponent,java.lang.String,java.lang.String,java.util.List) -> queryElementAllByAttrs
com.taobao.weex.ui.component.list.template.TemplateCache -> com.taobao.weex.ui.component.list.template.TemplateCache:
    29:31:void <init>() -> <init>
com.taobao.weex.ui.component.list.template.TemplateDom -> com.taobao.weex.ui.component.list.template.TemplateDom:
    40:40:void <init>() -> <init>
    94:100:java.util.Map findAllComponentRefs(java.lang.String,int,com.taobao.weex.ui.component.WXComponent) -> findAllComponentRefs
    104:127:void findAllComponentRefs(java.lang.String,int,com.taobao.weex.ui.component.WXComponent,java.util.Map) -> findAllComponentRefs
    210:222:com.taobao.weex.ui.component.WXComponent findChildByAttrsRef(com.taobao.weex.ui.component.WXComponent,java.lang.String) -> findChildByAttrsRef
    190:203:com.taobao.weex.ui.component.WXComponent findComponentByViewTreeKey(com.taobao.weex.ui.component.WXComponent,java.lang.String) -> findComponentByViewTreeKey
    64:86:com.taobao.weex.ui.component.WXComponent findVirtualComponentByVRef(java.lang.String,java.lang.String) -> findVirtualComponentByVRef
    58:58:java.lang.String genKeyVirtualDomRef(java.lang.String,int,java.lang.String) -> genKeyVirtualDomRef
    141:144:boolean isVirtualDomRef(java.lang.String) -> isVirtualDomRef
    149:183:void resetAnimaiton(android.view.View) -> resetAnimaiton
    131:136:java.util.Map toMap(java.lang.String,int,com.taobao.weex.ui.component.WXComponent) -> toMap
com.taobao.weex.ui.component.list.template.TemplateStickyHelper -> com.taobao.weex.ui.component.list.template.TemplateStickyHelper:
    46:51:void <init>(com.taobao.weex.ui.component.list.template.WXRecyclerTemplateList) -> <init>
    241:244:java.util.List getStickyPositions() -> getStickyPositions
    248:248:java.util.List getStickyTypes() -> getStickyTypes
    57:238:void onBeforeScroll(int,int) -> onBeforeScroll
com.taobao.weex.ui.component.list.template.TemplateViewHolder -> com.taobao.weex.ui.component.list.template.TemplateViewHolder:
    40:54:void <init>(com.taobao.weex.ui.component.list.template.WXRecyclerTemplateList,com.taobao.weex.ui.component.list.WXCell,int) -> <init>
    40:59:void <init>(com.taobao.weex.ui.component.list.template.WXRecyclerTemplateList,android.view.View,int) -> <init>
    65:65:int getHolderPosition() -> getHolderPosition
    73:73:com.taobao.weex.ui.component.list.WXCell getTemplate() -> getTemplate
    77:77:com.taobao.weex.ui.component.list.template.WXRecyclerTemplateList getTemplateList() -> getTemplateList
    69:70:void setHolderPosition(int) -> setHolderPosition
com.taobao.weex.ui.component.list.template.VirtualComponentLifecycle -> com.taobao.weex.ui.component.list.template.VirtualComponentLifecycle:
    26:26:void <init>() -> <init>
com.taobao.weex.ui.component.list.template.WXRecyclerTemplateList -> com.taobao.weex.ui.component.list.template.WXRecyclerTemplateList:
    115:204:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    98:98:com.taobao.weex.ui.view.listview.adapter.WXRecyclerViewOnScrollListener access$000(com.taobao.weex.ui.component.list.template.WXRecyclerTemplateList) -> access$000
    98:98:com.taobao.weex.ui.component.list.template.TemplateStickyHelper access$100(com.taobao.weex.ui.component.list.template.WXRecyclerTemplateList) -> access$100
    98:98:com.taobao.weex.ui.component.list.template.CellDataManager access$200(com.taobao.weex.ui.component.list.template.WXRecyclerTemplateList) -> access$200
    98:98:java.lang.Runnable access$300(com.taobao.weex.ui.component.list.template.WXRecyclerTemplateList) -> access$300
    98:98:void access$400(com.taobao.weex.ui.component.list.template.WXRecyclerTemplateList,boolean) -> access$400
    98:98:boolean access$500(com.taobao.weex.ui.component.list.template.WXRecyclerTemplateList,int,int) -> access$500
    98:98:void access$600(com.taobao.weex.ui.component.list.template.WXRecyclerTemplateList,androidx.recyclerview.widget.RecyclerView,int,int) -> access$600
    736:737:void addChild(com.taobao.weex.ui.component.WXComponent) -> addChild
    749:802:void addChild(com.taobao.weex.ui.component.WXComponent,int) -> addChild
    1150:1196:void addEvent(java.lang.String) -> addEvent
    843:843:void addSubView(android.view.View,int) -> addSubView
    1025:1039:void appendData(com.alibaba.fastjson.JSONArray) -> appendData
    1060:1061:void appendRange(int,com.alibaba.fastjson.JSONArray) -> appendRange
    483:498:void bindAppearEvent(com.taobao.weex.ui.component.WXComponent) -> bindAppearEvent
    502:517:void bindDisappearEvent(com.taobao.weex.ui.component.WXComponent) -> bindDisappearEvent
    411:422:void bindStickStyle(com.taobao.weex.ui.component.WXComponent) -> bindStickStyle
    1779:1819:int calcContentOffset(androidx.recyclerview.widget.RecyclerView) -> calcContentOffset
    1765:1775:int calcContentSize() -> calcContentSize
    809:822:void checkAppendDone(boolean) -> checkAppendDone
    585:606:void closest(java.lang.String,java.lang.String,com.taobao.weex.bridge.JSCallback) -> closest
    875:877:void computeVisiblePointInViewCoordinate(android.graphics.PointF) -> computeVisiblePointInViewCoordinate
    1935:1937:com.taobao.weex.ui.component.WXComponent copyComponentFromSourceCell(com.taobao.weex.ui.component.list.WXCell) -> copyComponentFromSourceCell
    1473:1481:com.taobao.weex.el.parse.ArrayStack copyStack(com.taobao.weex.ui.component.list.template.CellRenderContext,com.taobao.weex.el.parse.ArrayStack) -> copyStack
    851:863:void createChildViewAt(int) -> createChildViewAt
    1302:1333:void destroy() -> destroy
    1971:1978:void doCreateCellViewBindData(com.taobao.weex.ui.component.list.WXCell,java.lang.String,boolean) -> doCreateCellViewBindData
    1441:1469:java.util.List doRenderTemplate(com.taobao.weex.ui.component.list.WXCell,int) -> doRenderTemplate
    439:446:com.taobao.weex.ui.component.list.WXCell findCell(com.taobao.weex.ui.component.WXComponent) -> findCell
    1884:1896:com.taobao.weex.ui.component.WXComponent findChildByAttrsRef(com.taobao.weex.ui.component.WXComponent,java.lang.String) -> findChildByAttrsRef
    1840:1852:com.taobao.weex.ui.component.WXComponent findChildByRef(com.taobao.weex.ui.component.WXComponent,java.lang.String) -> findChildByRef
    1859:1875:java.util.List findChildListByRef(com.taobao.weex.ui.component.WXComponent,java.lang.String) -> findChildListByRef
    1826:1832:com.taobao.weex.ui.component.WXComponent findParentType(com.taobao.weex.ui.component.WXComponent,java.lang.Class) -> findParentType
    1199:1200:void fireScrollEvent(androidx.recyclerview.widget.RecyclerView,int,int) -> fireScrollEvent
    2000:2000:com.taobao.weex.ui.component.list.template.CellDataManager getCellDataManager() -> getCellDataManager
    1907:1927:com.taobao.weex.ui.component.list.WXCell getCellTemplateFromCache(java.lang.String) -> getCellTemplateFromCache
    1525:1540:int getCellTemplateItemType(com.taobao.weex.ui.component.list.WXCell) -> getCellTemplateItemType
    1285:1296:android.view.ViewGroup$LayoutParams getChildLayoutParams(com.taobao.weex.ui.component.WXComponent,android.view.View,int,int,int,int,int,int) -> getChildLayoutParams
    741:741:int getChildrenLayoutTopOffset() -> getChildrenLayoutTopOffset
    1545:1560:int getItemCount() -> getItemCount
    1576:1591:long getItemId(int) -> getItemId
    1428:1433:int getItemViewType(int) -> getItemViewType
    724:724:int getOrientation() -> getOrientation
    1203:1219:java.util.Map getScrollEvent(androidx.recyclerview.widget.RecyclerView,int,int) -> getScrollEvent
    1981:1984:com.taobao.weex.ui.component.helper.ScrollStartEndHelper getScrollStartEndHelper() -> getScrollStartEndHelper
    719:720:int getScrollX() -> getScrollX
    713:714:int getScrollY() -> getScrollY
    1515:1516:com.taobao.weex.ui.component.list.WXCell getSourceTemplate(int) -> getSourceTemplate
    1988:1988:int getTemplateCacheSize() -> getTemplateCacheSize
    1489:1490:java.lang.String getTemplateKey(int) -> getTemplateKey
    1497:1508:java.lang.String getTemplateKey(java.lang.Object) -> getTemplateKey
    1992:1995:java.util.concurrent.ConcurrentHashMap getTemplatesCache() -> getTemplatesCache
    97:97:android.view.View initComponentHostView(android.content.Context) -> initComponentHostView
    254:377:com.taobao.weex.ui.view.refresh.wrapper.BounceRecyclerView initComponentHostView(android.content.Context) -> initComponentHostView
    209:250:void initRecyclerTemplateList(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.action.BasicComponentData,com.taobao.weex.ui.component.WXVContainer) -> initRecyclerTemplateList
    1043:1056:void insertData(int,java.lang.Object) -> insertData
    1071:1084:void insertRange(int,com.alibaba.fastjson.JSONArray) -> insertRange
    729:729:boolean isScrollable() -> isScrollable
    402:405:com.taobao.weex.ui.component.WXComponent$MeasureOutput measure(int,int) -> measure
    1632:1741:void notifyAppearStateChange(int,int,int,int) -> notifyAppearStateChange
    1751:1762:void notifyUpdateList() -> notifyUpdateList
    1596:1599:void onBeforeScroll(int,int) -> onBeforeScroll
    97:97:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    1342:1373:void onBindViewHolder(com.taobao.weex.ui.component.list.template.TemplateViewHolder,int) -> onBindViewHolder
    97:97:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    1377:1416:com.taobao.weex.ui.component.list.template.TemplateViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    97:97:boolean onFailedToRecycleView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onFailedToRecycleView
    1565:1565:boolean onFailedToRecycleView(com.taobao.weex.ui.component.list.template.TemplateViewHolder) -> onFailedToRecycleView
    97:97:void onHostViewInitialized(android.view.View) -> onHostViewInitialized
    385:391:void onHostViewInitialized(com.taobao.weex.ui.view.refresh.wrapper.BounceRecyclerView) -> onHostViewInitialized
    1604:1624:void onLoadMore(int) -> onLoadMore
    97:97:void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewRecycled
    1338:1338:void onViewRecycled(com.taobao.weex.ui.component.list.template.TemplateViewHolder) -> onViewRecycled
    2006:2016:com.alibaba.fastjson.JSONArray parseListDataToJSONArray(java.lang.Object) -> parseListDataToJSONArray
    533:554:void queryElement(java.lang.String,java.lang.String,com.taobao.weex.bridge.JSCallback) -> queryElement
    558:580:void queryElementAll(java.lang.String,java.lang.String,com.taobao.weex.bridge.JSCallback) -> queryElementAll
    867:869:void remove(com.taobao.weex.ui.component.WXComponent,boolean) -> remove
    1104:1120:void removeData(int,int) -> removeData
    1276:1281:void removeFooterOrHeader(com.taobao.weex.ui.component.WXComponent) -> removeFooterOrHeader
    1945:1964:void renderTemplateCellWithData(com.taobao.weex.ui.component.list.WXCell) -> renderTemplateCellWithData
    1125:1127:void resetLoadmore() -> resetLoadmore
    1746:1747:java.lang.Object safeGetListData(int) -> safeGetListData
    618:654:void scrollTo(java.lang.String,java.util.Map) -> scrollTo
    659:709:void scrollTo(com.taobao.weex.ui.component.WXComponent,java.util.Map) -> scrollTo
    612:613:void scrollToElement(java.lang.String,java.util.Map) -> scrollToElement
    450:479:void setAppearanceWatch(com.taobao.weex.ui.component.WXComponent,int,boolean) -> setAppearanceWatch
    989:994:void setColumnCount(int) -> setColumnCount
    998:1003:void setColumnGap(float) -> setColumnGap
    968:973:void setColumnWidth(int) -> setColumnWidth
    97:97:void setHostLayoutParams(android.view.View,int,int,int,int,int,int) -> setHostLayoutParams
    826:832:void setHostLayoutParams(com.taobao.weex.ui.view.refresh.wrapper.BounceRecyclerView,int,int,int,int,int,int) -> setHostLayoutParams
    1013:1021:void setListData(java.lang.Object) -> setListData
    927:929:void setOffsetAccuracy(int) -> setOffsetAccuracy
    881:921:boolean setProperty(java.lang.String,java.lang.Object) -> setProperty
    1250:1271:boolean setRefreshOrLoading(com.taobao.weex.ui.component.WXComponent) -> setRefreshOrLoading
    958:964:void setScrollDirection(java.lang.String) -> setScrollDirection
    2032:2039:void setScrollLeft(java.lang.String) -> setScrollLeft
    2021:2028:void setScrollTop(java.lang.String) -> setScrollTop
    1007:1009:void setScrollable(boolean) -> setScrollable
    977:985:void setShowScrollbar(boolean) -> setShowScrollbar
    1225:1240:boolean shouldReport(int,int) -> shouldReport
    521:522:void unbindAppearEvent(com.taobao.weex.ui.component.WXComponent) -> unbindAppearEvent
    526:527:void unbindDisappearEvent(com.taobao.weex.ui.component.WXComponent) -> unbindDisappearEvent
    426:435:void unbindStickStyle(com.taobao.weex.ui.component.WXComponent) -> unbindStickStyle
    1088:1100:void updateData(int,java.lang.Object) -> updateData
    1132:1144:void updateProperties(java.util.Map) -> updateProperties
    933:953:void updateRecyclerAttr() -> updateRecyclerAttr
com.taobao.weex.ui.component.list.template.WXRecyclerTemplateList$1 -> com.taobao.weex.ui.component.list.template.WXRecyclerTemplateList$1:
    290:290:void <init>(com.taobao.weex.ui.component.list.template.WXRecyclerTemplateList) -> <init>
    293:307:void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int) -> onScrollStateChanged
    311:330:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
com.taobao.weex.ui.component.list.template.WXRecyclerTemplateList$2 -> com.taobao.weex.ui.component.list.template.WXRecyclerTemplateList$2:
    332:332:void <init>(com.taobao.weex.ui.component.list.template.WXRecyclerTemplateList) -> <init>
    337:345:void onGlobalLayout() -> onGlobalLayout
com.taobao.weex.ui.component.list.template.WXRecyclerTemplateList$3 -> com.taobao.weex.ui.component.list.template.WXRecyclerTemplateList$3:
    347:347:void <init>(com.taobao.weex.ui.component.list.template.WXRecyclerTemplateList) -> <init>
    353:375:void run() -> run
com.taobao.weex.ui.component.list.template.WXRecyclerTemplateList$4 -> com.taobao.weex.ui.component.list.template.WXRecyclerTemplateList$4:
    485:485:void <init>(com.taobao.weex.ui.component.list.template.WXRecyclerTemplateList) -> <init>
    488:491:void run() -> run
com.taobao.weex.ui.component.list.template.WXRecyclerTemplateList$5 -> com.taobao.weex.ui.component.list.template.WXRecyclerTemplateList$5:
    504:504:void <init>(com.taobao.weex.ui.component.list.template.WXRecyclerTemplateList) -> <init>
    507:510:void run() -> run
com.taobao.weex.ui.component.list.template.WXRecyclerTemplateList$6 -> com.taobao.weex.ui.component.list.template.WXRecyclerTemplateList$6:
    795:795:void <init>(com.taobao.weex.ui.component.list.template.WXRecyclerTemplateList) -> <init>
    798:799:void onAppendTreeDone() -> onAppendTreeDone
com.taobao.weex.ui.component.list.template.WXRecyclerTemplateList$7 -> com.taobao.weex.ui.component.list.template.WXRecyclerTemplateList$7:
    1157:1159:void <init>(com.taobao.weex.ui.component.list.template.WXRecyclerTemplateList) -> <init>
    1163:1193:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
com.taobao.weex.ui.component.list.template.WXRecyclerTemplateList$8 -> com.taobao.weex.ui.component.list.template.WXRecyclerTemplateList$8:
    1252:1252:void <init>(com.taobao.weex.ui.component.list.template.WXRecyclerTemplateList,com.taobao.weex.ui.component.WXComponent) -> <init>
    1255:1256:void run() -> run
com.taobao.weex.ui.component.list.template.WXRecyclerTemplateList$9 -> com.taobao.weex.ui.component.list.template.WXRecyclerTemplateList$9:
    1263:1263:void <init>(com.taobao.weex.ui.component.list.template.WXRecyclerTemplateList,com.taobao.weex.ui.component.WXComponent) -> <init>
    1266:1267:void run() -> run
com.taobao.weex.ui.component.list.template.jni.NativeRenderLayoutDirection -> com.taobao.weex.ui.component.list.template.jni.NativeRenderLayoutDirection:
    21:21:void <init>() -> <init>
com.taobao.weex.ui.component.list.template.jni.NativeRenderObjectUtils -> com.taobao.weex.ui.component.list.template.jni.NativeRenderObjectUtils:
    30:30:void <init>() -> <init>
    75:77:void updateComponentSize(com.taobao.weex.ui.component.WXComponent,float,float,float,float,float,float) -> updateComponentSize
com.taobao.weex.ui.component.pesudo.PesudoStatus -> com.taobao.weex.ui.component.pesudo.PesudoStatus:
    37:51:void <init>() -> <init>
    84:96:java.lang.String getStatuses() -> getStatuses
    80:80:boolean isSet(int) -> isSet
    59:73:void setStatus(java.lang.String,boolean) -> setStatus
    76:77:void setStatus(int,boolean) -> setStatus
    103:129:java.util.Map updateStatusAndGetUpdateStyles(java.lang.String,boolean,java.util.Map,java.util.Map) -> updateStatusAndGetUpdateStyles
com.taobao.weex.ui.component.pesudo.TouchActivePseudoListener -> com.taobao.weex.ui.component.pesudo.TouchActivePseudoListener:
    31:34:void <init>(com.taobao.weex.ui.component.pesudo.OnActivePseudoListner,boolean) -> <init>
    38:46:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.taobao.weex.ui.component.richtext.WXRichText -> com.taobao.weex.ui.component.richtext.WXRichText:
    46:88:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    91:103:void AddChildNode(java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map) -> AddChildNode
    45:45:android.text.Spannable access$000(com.taobao.weex.ui.component.richtext.WXRichText) -> access$000
    147:156:com.taobao.weex.ui.component.richtext.node.RichTextNode findRichNode(java.lang.String) -> findRichNode
    45:45:android.view.View initComponentHostView(android.content.Context) -> initComponentHostView
    45:45:com.taobao.weex.ui.view.WXTextView initComponentHostView(android.content.Context) -> initComponentHostView
    161:161:com.taobao.weex.ui.component.richtext.WXRichTextView initComponentHostView(android.content.Context) -> initComponentHostView
    116:130:void removeChildNode(java.lang.String,java.lang.String) -> removeChildNode
    106:112:android.text.Spannable toSpan() -> toSpan
    140:144:void updateChildNodeAttrs(java.lang.String,java.util.Map) -> updateChildNodeAttrs
    133:137:void updateChildNodeStyles(java.lang.String,java.util.Map) -> updateChildNodeStyles
com.taobao.weex.ui.component.richtext.WXRichText$Creator -> com.taobao.weex.ui.component.richtext.WXRichText$Creator:
    79:79:void <init>() -> <init>
    81:81:com.taobao.weex.ui.component.WXComponent createInstance(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,com.taobao.weex.ui.action.BasicComponentData) -> createInstance
com.taobao.weex.ui.component.richtext.WXRichText$RichTextContentBoxMeasurement -> com.taobao.weex.ui.component.richtext.WXRichText$RichTextContentBoxMeasurement:
    51:52:void <init>(com.taobao.weex.ui.component.WXComponent) -> <init>
    57:74:android.text.Spanned createSpanned(java.lang.String) -> createSpanned
com.taobao.weex.ui.component.richtext.WXRichTextView -> com.taobao.weex.ui.component.richtext.WXRichTextView:
    38:39:void <init>(android.content.Context) -> <init>
    44:50:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    61:71:void setTextLayout(android.text.Layout) -> setTextLayout
    78:112:boolean updateSelection(android.view.MotionEvent,android.text.Spannable) -> updateSelection
    55:56:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
com.taobao.weex.ui.component.richtext.node.ANode -> com.taobao.weex.ui.component.richtext.node.ANode:
    29:29:void <init>(android.content.Context,java.lang.String,java.lang.String,com.taobao.weex.ui.component.richtext.node.ANode$1) -> <init>
    29:29:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,com.taobao.weex.ui.component.richtext.node.ANode$1) -> <init>
    49:50:void <init>(android.content.Context,java.lang.String,java.lang.String) -> <init>
    52:53:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map) -> <init>
    62:62:boolean isInternalNode() -> isInternalNode
    57:57:java.lang.String toString() -> toString
    67:77:void updateSpans(android.text.SpannableStringBuilder,int) -> updateSpans
com.taobao.weex.ui.component.richtext.node.ANode$ANodeCreator -> com.taobao.weex.ui.component.richtext.node.ANode$ANodeCreator:
    31:31:void <init>() -> <init>
    31:31:com.taobao.weex.ui.component.richtext.node.RichTextNode createRichTextNode(android.content.Context,java.lang.String,java.lang.String) -> createRichTextNode
    31:31:com.taobao.weex.ui.component.richtext.node.RichTextNode createRichTextNode(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map) -> createRichTextNode
    35:35:com.taobao.weex.ui.component.richtext.node.ANode createRichTextNode(android.content.Context,java.lang.String,java.lang.String) -> createRichTextNode
    40:40:com.taobao.weex.ui.component.richtext.node.ANode createRichTextNode(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map) -> createRichTextNode
com.taobao.weex.ui.component.richtext.node.ImgNode -> com.taobao.weex.ui.component.richtext.node.ImgNode:
    43:43:void <init>(android.content.Context,java.lang.String,java.lang.String,com.taobao.weex.ui.component.richtext.node.ImgNode$1) -> <init>
    43:43:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,com.taobao.weex.ui.component.richtext.node.ImgNode$1) -> <init>
    61:62:void <init>(android.content.Context,java.lang.String,java.lang.String) -> <init>
    64:65:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map) -> <init>
    102:121:com.taobao.weex.ui.component.richtext.span.ImgSpan createImgSpan(com.taobao.weex.WXSDKInstance) -> createImgSpan
    74:74:boolean isInternalNode() -> isInternalNode
    69:69:java.lang.String toString() -> toString
    79:98:void updateSpans(android.text.SpannableStringBuilder,int) -> updateSpans
com.taobao.weex.ui.component.richtext.node.ImgNode$ImgNodeCreator -> com.taobao.weex.ui.component.richtext.node.ImgNode$ImgNodeCreator:
    45:45:void <init>() -> <init>
    45:45:com.taobao.weex.ui.component.richtext.node.RichTextNode createRichTextNode(android.content.Context,java.lang.String,java.lang.String) -> createRichTextNode
    45:45:com.taobao.weex.ui.component.richtext.node.RichTextNode createRichTextNode(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map) -> createRichTextNode
    49:49:com.taobao.weex.ui.component.richtext.node.ImgNode createRichTextNode(android.content.Context,java.lang.String,java.lang.String) -> createRichTextNode
    54:54:com.taobao.weex.ui.component.richtext.node.ImgNode createRichTextNode(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map) -> createRichTextNode
com.taobao.weex.ui.component.richtext.node.RichTextNode -> com.taobao.weex.ui.component.richtext.node.RichTextNode:
    70:75:void <init>(android.content.Context,java.lang.String,java.lang.String) -> <init>
    76:93:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map) -> <init>
    163:169:void addChildNode(com.taobao.weex.ui.component.richtext.node.RichTextNode) -> addChildNode
    259:275:com.taobao.weex.dom.WXCustomStyleSpan createCustomStyleSpan() -> createCustomStyleSpan
    228:228:int createPriorityFlag(int) -> createPriorityFlag
    119:119:int createSpanFlag(int) -> createSpanFlag
    280:289:com.taobao.weex.ui.component.richtext.node.RichTextNode findRichNode(java.lang.String) -> findRichNode
    128:128:java.lang.String getRef() -> getRef
    98:115:android.text.Spannable parse(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> parse
    135:161:void parse(android.content.Context,java.lang.String,java.lang.String,com.alibaba.fastjson.JSONObject) -> parse
    237:241:android.text.Spannable parse(java.util.List) -> parse
    171:182:void removeChildNode(java.lang.String) -> removeChildNode
    245:253:android.text.Spannable toSpan(int) -> toSpan
    189:192:void updateAttrs(java.util.Map) -> updateAttrs
    195:225:void updateSpans(android.text.SpannableStringBuilder,int) -> updateSpans
    184:187:void updateStyles(java.util.Map) -> updateStyles
com.taobao.weex.ui.component.richtext.node.RichTextNodeManager -> com.taobao.weex.ui.component.richtext.node.RichTextNodeManager:
    34:40:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
    49:60:com.taobao.weex.ui.component.richtext.node.RichTextNode createRichTextNode(android.content.Context,java.lang.String,java.lang.String,com.alibaba.fastjson.JSONObject) -> createRichTextNode
    66:71:com.taobao.weex.ui.component.richtext.node.RichTextNode createRichTextNode(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map) -> createRichTextNode
    43:44:void registerTextNode(java.lang.String,com.taobao.weex.ui.component.richtext.node.RichTextNodeCreator) -> registerTextNode
com.taobao.weex.ui.component.richtext.node.SpanNode -> com.taobao.weex.ui.component.richtext.node.SpanNode:
    30:30:void <init>(android.content.Context,java.lang.String,java.lang.String,com.taobao.weex.ui.component.richtext.node.SpanNode$1) -> <init>
    30:30:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map,com.taobao.weex.ui.component.richtext.node.SpanNode$1) -> <init>
    49:50:void <init>(android.content.Context,java.lang.String,java.lang.String) -> <init>
    52:53:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map) -> <init>
    66:66:boolean isInternalNode() -> isInternalNode
    57:60:java.lang.String toString() -> toString
    71:74:void updateSpans(android.text.SpannableStringBuilder,int) -> updateSpans
com.taobao.weex.ui.component.richtext.node.SpanNode$SpanNodeCreator -> com.taobao.weex.ui.component.richtext.node.SpanNode$SpanNodeCreator:
    32:32:void <init>() -> <init>
    32:32:com.taobao.weex.ui.component.richtext.node.RichTextNode createRichTextNode(android.content.Context,java.lang.String,java.lang.String) -> createRichTextNode
    32:32:com.taobao.weex.ui.component.richtext.node.RichTextNode createRichTextNode(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map) -> createRichTextNode
    36:36:com.taobao.weex.ui.component.richtext.node.SpanNode createRichTextNode(android.content.Context,java.lang.String,java.lang.String) -> createRichTextNode
    42:42:com.taobao.weex.ui.component.richtext.node.SpanNode createRichTextNode(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.util.Map,java.util.Map) -> createRichTextNode
com.taobao.weex.ui.component.richtext.span.ASpan -> com.taobao.weex.ui.component.richtext.span.ASpan:
    30:33:void <init>(java.lang.String,java.lang.String) -> <init>
    37:38:void onClick(android.view.View) -> onClick
    46:46:void updateDrawState(android.text.TextPaint) -> updateDrawState
com.taobao.weex.ui.component.richtext.span.ImgSpan -> com.taobao.weex.ui.component.richtext.span.ImgSpan:
    40:45:void <init>(int,int,java.lang.String,java.lang.String) -> <init>
    83:91:void draw(android.graphics.Canvas,java.lang.CharSequence,int,int,float,int,int,int,android.graphics.Paint) -> draw
    55:73:int getSize(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt) -> getSize
    109:112:void setCallback() -> setCallback
    95:101:void setDrawable(android.graphics.drawable.Drawable,boolean) -> setDrawable
    104:106:void setView(android.view.View) -> setView
com.taobao.weex.ui.component.richtext.span.ItemClickSpan -> com.taobao.weex.ui.component.richtext.span.ItemClickSpan:
    36:40:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    44:50:void onClick(android.view.View) -> onClick
com.taobao.weex.ui.config.AutoScanConfigRegister -> com.taobao.weex.ui.config.AutoScanConfigRegister:
    43:43:void <clinit>() -> <clinit>
    41:41:void <init>() -> <init>
    41:41:void access$000() -> access$000
    52:62:void doScanConfig() -> doScanConfig
    65:73:void doScanConfigAsync() -> doScanConfigAsync
    76:138:void doScanConfigSync() -> doScanConfigSync
    141:142:void setScanDelay(long) -> setScanDelay
com.taobao.weex.ui.config.AutoScanConfigRegister$1 -> com.taobao.weex.ui.config.AutoScanConfigRegister$1:
    53:53:void <init>() -> <init>
    56:57:void run() -> run
com.taobao.weex.ui.config.AutoScanConfigRegister$2 -> com.taobao.weex.ui.config.AutoScanConfigRegister$2:
    65:65:void <init>() -> <init>
    68:69:void run() -> run
com.taobao.weex.ui.config.ConfigComponentHolder -> com.taobao.weex.ui.config.ConfigComponentHolder:
    59:64:void <init>(java.lang.String,boolean,java.lang.String,java.lang.String[]) -> <init>
    84:93:com.taobao.weex.ui.component.WXComponent createInstance(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,com.taobao.weex.ui.action.BasicComponentData) -> createInstance
    124:149:com.taobao.weex.ui.config.ConfigComponentHolder fromConfig(com.alibaba.fastjson.JSONObject) -> fromConfig
    70:78:boolean generate() -> generate
    107:110:com.taobao.weex.bridge.Invoker getMethodInvoker(java.lang.String) -> getMethodInvoker
    115:119:java.lang.String[] getMethods() -> getMethods
    97:102:com.taobao.weex.bridge.Invoker getPropertyInvoker(java.lang.String) -> getPropertyInvoker
    159:159:java.lang.String getType() -> getType
    155:155:boolean isAppendTree() -> isAppendTree
    68:68:void loadIfNonLazy() -> loadIfNonLazy
com.taobao.weex.ui.config.ConfigModuleFactory -> com.taobao.weex.ui.config.ConfigModuleFactory:
    60:64:void <init>(java.lang.String,java.lang.String,java.lang.String[]) -> <init>
    84:87:com.taobao.weex.common.WXModule buildInstance() -> buildInstance
    91:98:com.taobao.weex.common.WXModule buildInstance(com.taobao.weex.WXSDKInstance) -> buildInstance
    143:160:com.taobao.weex.ui.config.ConfigModuleFactory fromConfig(com.alibaba.fastjson.JSONObject) -> fromConfig
    103:138:void generateMethodMap() -> generateMethodMap
    76:79:com.taobao.weex.bridge.Invoker getMethodInvoker(java.lang.String) -> getMethodInvoker
    68:71:java.lang.String[] getMethods() -> getMethods
    165:165:java.lang.String getName() -> getName
com.taobao.weex.ui.flat.FlatGUIContext -> com.taobao.weex.ui.flat.FlatGUIContext:
    44:48:void <init>() -> <init>
    125:144:boolean checkComponent(com.taobao.weex.ui.component.WXComponent) -> checkComponent
    106:117:void destroy() -> destroy
    78:78:com.taobao.weex.ui.flat.widget.AndroidViewWidget getAndroidViewWidget(com.taobao.weex.ui.component.WXComponent) -> getAndroidViewWidget
    121:121:com.taobao.weex.ui.component.WXComponent getComponent(com.taobao.weex.ui.flat.widget.Widget) -> getComponent
    72:72:com.taobao.weex.ui.flat.WidgetContainer getFlatComponentAncestor(com.taobao.weex.ui.component.WXComponent) -> getFlatComponentAncestor
    94:100:android.view.View getWidgetContainerView(com.taobao.weex.ui.flat.widget.Widget) -> getWidgetContainerView
    51:51:boolean isFlatUIEnabled(com.taobao.weex.ui.component.WXComponent) -> isFlatUIEnabled
    83:87:boolean promoteToView(com.taobao.weex.ui.component.WXComponent,boolean,java.lang.Class) -> promoteToView
    55:59:void register(com.taobao.weex.ui.component.WXComponent,com.taobao.weex.ui.flat.WidgetContainer) -> register
    62:63:void register(com.taobao.weex.ui.component.WXComponent,com.taobao.weex.ui.flat.widget.AndroidViewWidget) -> register
    66:67:void register(com.taobao.weex.ui.flat.widget.Widget,com.taobao.weex.ui.component.WXComponent) -> register
com.taobao.weex.ui.flat.WidgetContainer -> com.taobao.weex.ui.flat.WidgetContainer:
    43:44:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    87:97:void addFlatChild(com.taobao.weex.ui.flat.widget.Widget,int) -> addFlatChild
    56:84:void createChildViewAt(int) -> createChildViewAt
    51:51:boolean intendToBeFlatContainer() -> intendToBeFlatContainer
com.taobao.weex.ui.flat.widget.AndroidViewWidget -> com.taobao.weex.ui.flat.widget.AndroidViewWidget:
    39:40:void <init>(com.taobao.weex.ui.flat.FlatGUIContext) -> <init>
    76:79:void destroy() -> destroy
    71:71:android.view.View getView() -> getView
    63:67:void invalidate() -> invalidate
    56:59:void onDraw(android.graphics.Canvas) -> onDraw
    32:32:void setBackgroundAndBorder(com.taobao.weex.ui.view.border.BorderDrawable) -> setBackgroundAndBorder
    48:52:void setContentBox(int,int,int,int) -> setContentBox
    43:44:void setContentView(android.view.View) -> setContentView
    32:32:void setLayout(int,int,int,int,int,int,android.graphics.Point) -> setLayout
com.taobao.weex.ui.flat.widget.BaseWidget -> com.taobao.weex.ui.flat.widget.BaseWidget:
    42:49:void <init>(com.taobao.weex.ui.flat.FlatGUIContext) -> <init>
    102:112:void draw(android.graphics.Canvas) -> draw
    91:91:com.taobao.weex.ui.view.border.BorderDrawable getBackgroundAndBorder() -> getBackgroundAndBorder
    97:97:android.graphics.Rect getBorderBox() -> getBorderBox
    85:85:android.graphics.Point getLocInFlatContainer() -> getLocInFlatContainer
    115:121:void invalidate() -> invalidate
    74:80:void setBackgroundAndBorder(com.taobao.weex.ui.view.border.BorderDrawable) -> setBackgroundAndBorder
    125:128:void setCallback(android.graphics.drawable.Drawable) -> setCallback
    63:68:void setContentBox(int,int,int,int) -> setContentBox
    53:59:void setLayout(int,int,int,int,int,int,android.graphics.Point) -> setLayout
com.taobao.weex.ui.flat.widget.TextWidget -> com.taobao.weex.ui.flat.widget.TextWidget:
    36:37:void <init>(com.taobao.weex.ui.flat.FlatGUIContext) -> <init>
    41:44:void onDraw(android.graphics.Canvas) -> onDraw
    30:30:void setBackgroundAndBorder(com.taobao.weex.ui.view.border.BorderDrawable) -> setBackgroundAndBorder
    30:30:void setContentBox(int,int,int,int) -> setContentBox
    30:30:void setLayout(int,int,int,int,int,int,android.graphics.Point) -> setLayout
    47:49:void updateTextDrawable(android.text.Layout) -> updateTextDrawable
com.taobao.weex.ui.flat.widget.WidgetGroup -> com.taobao.weex.ui.flat.widget.WidgetGroup:
    35:39:void <init>(com.taobao.weex.ui.flat.FlatGUIContext) -> <init>
    47:47:java.util.List getChildren() -> getChildren
    52:55:void onDraw(android.graphics.Canvas) -> onDraw
    42:44:void replaceAll(java.util.List) -> replaceAll
    32:32:void setBackgroundAndBorder(com.taobao.weex.ui.view.border.BorderDrawable) -> setBackgroundAndBorder
    32:32:void setContentBox(int,int,int,int) -> setContentBox
    32:32:void setLayout(int,int,int,int,int,int,android.graphics.Point) -> setLayout
com.taobao.weex.ui.module.ConsoleLogModule -> com.taobao.weex.ui.module.ConsoleLogModule:
    37:37:void <init>() -> <init>
    66:86:io.dcloud.feature.uniapp.utils.AbsLogLevel getLogLevel(java.lang.String) -> getLogLevel
    60:62:void setPerfMode(java.lang.String) -> setPerfMode
    41:56:void switchLogLevel(java.lang.String,com.taobao.weex.bridge.JSCallback) -> switchLogLevel
com.taobao.weex.ui.module.WXDeviceInfoModule -> com.taobao.weex.ui.module.WXDeviceInfoModule:
    31:31:void <init>() -> <init>
    35:46:void enableFullScreenHeight(com.taobao.weex.bridge.JSCallback,com.alibaba.fastjson.JSONObject) -> enableFullScreenHeight
com.taobao.weex.ui.module.WXDomModule -> com.taobao.weex.ui.module.WXDomModule:
    63:63:void <clinit>() -> <clinit>
    66:69:void <init>(com.taobao.weex.WXSDKInstance) -> <init>
    72:78:void callDomMethod(com.alibaba.fastjson.JSONObject,long[]) -> callDomMethod
    82:189:java.lang.Object callDomMethod(java.lang.String,com.alibaba.fastjson.JSONArray,long[]) -> callDomMethod
    193:199:void invokeMethod(java.lang.String,java.lang.String,com.alibaba.fastjson.JSONArray) -> invokeMethod
com.taobao.weex.ui.module.WXLocaleModule -> com.taobao.weex.ui.module.WXLocaleModule:
    43:43:void <init>() -> <init>
    52:53:void getLanguage(com.taobao.weex.bridge.JSCallback) -> getLanguage
    57:62:java.lang.String getLanguageImpl() -> getLanguageImpl
    47:47:java.lang.String getLanguageSync() -> getLanguageSync
    77:95:java.lang.String getLanguageTags() -> getLanguageTags
    67:68:java.util.List getLanguages() -> getLanguages
    73:74:void getLanguages(com.taobao.weex.bridge.JSCallback) -> getLanguages
    99:109:java.lang.String toLanguageTag(java.util.Locale) -> toLanguageTag
com.taobao.weex.ui.module.WXMetaModule -> com.taobao.weex.ui.module.WXMetaModule:
    51:51:void <init>() -> <init>
    111:123:void getPageInfo(com.taobao.weex.bridge.JSCallback) -> getPageInfo
    84:84:float getViewPort() -> getViewPort
    89:107:void openLog(java.lang.String) -> openLog
    58:80:void setViewport(java.lang.String) -> setViewport
com.taobao.weex.ui.module.WXModalUIModule -> com.taobao.weex.ui.module.WXModalUIModule:
    49:49:void <init>() -> <init>
    49:49:android.app.Dialog access$002(com.taobao.weex.ui.module.WXModalUIModule,android.app.Dialog) -> access$002
    113:147:void alert(com.alibaba.fastjson.JSONObject,com.taobao.weex.bridge.JSCallback) -> alert
    152:198:void confirm(com.alibaba.fastjson.JSONObject,com.taobao.weex.bridge.JSCallback) -> confirm
    273:276:void destroy() -> destroy
    202:259:void prompt(com.alibaba.fastjson.JSONObject,com.taobao.weex.bridge.JSCallback) -> prompt
    66:108:void toast(com.alibaba.fastjson.JSONObject) -> toast
    262:269:void tracking(android.app.Dialog) -> tracking
com.taobao.weex.ui.module.WXModalUIModule$1 -> com.taobao.weex.ui.module.WXModalUIModule$1:
    132:132:void <init>(com.taobao.weex.ui.module.WXModalUIModule,com.taobao.weex.bridge.JSCallback,java.lang.String) -> <init>
    135:138:void onClick(android.content.DialogInterface,int) -> onClick
com.taobao.weex.ui.module.WXModalUIModule$2 -> com.taobao.weex.ui.module.WXModalUIModule$2:
    175:175:void <init>(com.taobao.weex.ui.module.WXModalUIModule,com.taobao.weex.bridge.JSCallback,java.lang.String) -> <init>
    178:181:void onClick(android.content.DialogInterface,int) -> onClick
com.taobao.weex.ui.module.WXModalUIModule$3 -> com.taobao.weex.ui.module.WXModalUIModule$3:
    183:183:void <init>(com.taobao.weex.ui.module.WXModalUIModule,com.taobao.weex.bridge.JSCallback,java.lang.String) -> <init>
    186:189:void onClick(android.content.DialogInterface,int) -> onClick
com.taobao.weex.ui.module.WXModalUIModule$4 -> com.taobao.weex.ui.module.WXModalUIModule$4:
    240:240:void <init>(com.taobao.weex.ui.module.WXModalUIModule,com.taobao.weex.bridge.JSCallback,java.lang.String,android.widget.EditText) -> <init>
    243:250:void onClick(android.content.DialogInterface,int) -> onClick
com.taobao.weex.ui.module.WXModalUIModule$5 -> com.taobao.weex.ui.module.WXModalUIModule$5:
    230:230:void <init>(com.taobao.weex.ui.module.WXModalUIModule,com.taobao.weex.bridge.JSCallback,java.lang.String,android.widget.EditText) -> <init>
    233:239:void onClick(android.content.DialogInterface,int) -> onClick
com.taobao.weex.ui.module.WXModalUIModule$6 -> com.taobao.weex.ui.module.WXModalUIModule$6:
    263:263:void <init>(com.taobao.weex.ui.module.WXModalUIModule) -> <init>
    266:267:void onDismiss(android.content.DialogInterface) -> onDismiss
com.taobao.weex.ui.module.WXTimerModule -> com.taobao.weex.ui.module.WXTimerModule:
    64:67:void <init>() -> <init>
    156:163:void checkIfTimerInBack(int) -> checkIfTimerInBack
    102:106:void clearInterval(int) -> clearInterval
    94:98:void clearTimeout(int) -> clearTimeout
    171:182:com.taobao.weex.bridge.WXJSObject[] createTimerArgs(int,int,boolean) -> createTimerArgs
    110:117:void destroy() -> destroy
    121:152:boolean handleMessage(android.os.Message) -> handleMessage
    204:214:void postMessage(int,int,int,int) -> postMessage
    186:191:void postOrHoldMessage(int,int,int,int) -> postOrHoldMessage
    194:199:void removeOrHoldMessage(int,int) -> removeOrHoldMessage
    167:168:void setHandler(android.os.Handler) -> setHandler
    83:90:void setInterval(int,float) -> setInterval
    72:79:void setTimeout(int,float) -> setTimeout
com.taobao.weex.ui.module.WXWebViewModule -> com.taobao.weex.ui.module.WXWebViewModule:
    27:27:void <init>() -> <init>
    58:64:void action(com.taobao.weex.ui.module.WXWebViewModule$Action,java.lang.String,java.lang.Object) -> action
    67:68:void action(com.taobao.weex.ui.module.WXWebViewModule$Action,java.lang.String) -> action
    38:39:void goBack(java.lang.String) -> goBack
    43:44:void goForward(java.lang.String) -> goForward
    53:54:void postMessage(java.lang.String,java.lang.Object) -> postMessage
    48:49:void reload(java.lang.String) -> reload
com.taobao.weex.ui.module.WXWebViewModule$Action -> com.taobao.weex.ui.module.WXWebViewModule$Action:
    29:33:void <clinit>() -> <clinit>
    29:29:void <init>(java.lang.String,int) -> <init>
    29:29:com.taobao.weex.ui.module.WXWebViewModule$Action valueOf(java.lang.String) -> valueOf
    29:29:com.taobao.weex.ui.module.WXWebViewModule$Action[] values() -> values
com.taobao.weex.ui.view.BaseFrameLayout -> com.taobao.weex.ui.view.BaseFrameLayout:
    35:36:void <init>(android.content.Context) -> <init>
    41:45:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    48:59:void dispatchDrawInterval(android.graphics.Canvas) -> dispatchDrawInterval
    61:66:void mountFlatGUI(java.util.List) -> mountFlatGUI
    69:72:void unmountFlatGUI() -> unmountFlatGUI
    76:76:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
com.taobao.weex.ui.view.WXBaseCircleIndicator -> com.taobao.weex.ui.view.WXBaseCircleIndicator:
    40:69:void <init>(android.content.Context) -> <init>
    40:94:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    38:38:int access$002(com.taobao.weex.ui.view.WXBaseCircleIndicator,int) -> access$002
    38:38:com.taobao.weex.ui.view.WXCircleViewPager access$100(com.taobao.weex.ui.view.WXBaseCircleIndicator) -> access$100
    167:171:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    223:226:int getCount() -> getCount
    162:162:com.taobao.weex.ui.view.gesture.WXGesture getGestureListener() -> getGestureListener
    144:144:int getRealCurrentItem() -> getRealCurrentItem
    72:85:void init() -> init
    176:192:void onDraw(android.graphics.Canvas) -> onDraw
    200:217:void onMeasure(int,int) -> onMeasure
    157:158:void registerGestureListener(com.taobao.weex.ui.view.gesture.WXGesture) -> registerGestureListener
    100:118:void setCircleViewPager(com.taobao.weex.ui.view.WXCircleViewPager) -> setCircleViewPager
    131:133:void setFillColor(int) -> setFillColor
    136:138:void setPageColor(int) -> setPageColor
    124:125:void setRadius(float) -> setRadius
    151:153:void setRealCurrentItem(int) -> setRealCurrentItem
com.taobao.weex.ui.view.WXBaseCircleIndicator$1 -> com.taobao.weex.ui.view.WXBaseCircleIndicator$1:
    103:103:void <init>(com.taobao.weex.ui.view.WXBaseCircleIndicator) -> <init>
    106:108:void onPageSelected(int) -> onPageSelected
com.taobao.weex.ui.view.WXBaseRefreshLayout -> com.taobao.weex.ui.view.WXBaseRefreshLayout:
    26:27:void <init>(android.content.Context) -> <init>
com.taobao.weex.ui.view.WXCircleIndicator -> com.taobao.weex.ui.view.WXCircleIndicator:
    26:27:void <init>(android.content.Context) -> <init>
com.taobao.weex.ui.view.WXCirclePageAdapter -> com.taobao.weex.ui.view.WXCirclePageAdapter:
    37:49:void <init>(java.util.List,boolean) -> <init>
    62:63:void <init>() -> <init>
    37:68:void <init>(boolean) -> <init>
    71:82:void addPageView(android.view.View) -> addPageView
    139:145:void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    174:191:void ensureShadow() -> ensureShadow
    110:110:int getCount() -> getCount
    202:205:int getFirst() -> getFirst
    162:165:int getItemIndex(java.lang.Object) -> getItemIndex
    154:154:int getItemPosition(java.lang.Object) -> getItemPosition
    158:158:int getPagePosition(android.view.View) -> getPagePosition
    114:114:int getRealCount() -> getRealCount
    194:197:int getRealPosition(int) -> getRealPosition
    170:170:java.util.List getViews() -> getViews
    119:134:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    149:149:boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    85:91:void removePageView(android.view.View) -> removePageView
    94:106:void replacePageView(android.view.View,android.view.View) -> replacePageView
    52:59:void setLayoutDirectionRTL(boolean) -> setLayoutDirectionRTL
com.taobao.weex.ui.view.WXCircleViewPager -> com.taobao.weex.ui.view.WXCircleViewPager:
    44:69:void <init>(android.content.Context) -> <init>
    44:137:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    42:42:void access$000(com.taobao.weex.ui.view.WXCircleViewPager) -> access$000
    42:42:long access$100(com.taobao.weex.ui.view.WXCircleViewPager) -> access$100
    42:42:int access$202(com.taobao.weex.ui.view.WXCircleViewPager,int) -> access$202
    42:42:int access$301(com.taobao.weex.ui.view.WXCircleViewPager) -> access$301
    42:42:boolean access$400(com.taobao.weex.ui.view.WXCircleViewPager) -> access$400
    42:42:void access$500(com.taobao.weex.ui.view.WXCircleViewPager,int,boolean) -> access$500
    267:268:void destory() -> destory
    243:262:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    209:209:com.taobao.weex.ui.view.WXCirclePageAdapter getCirclePageAdapter() -> getCirclePageAdapter
    141:141:int getCurrentItem() -> getCurrentItem
    277:277:com.taobao.weex.ui.view.gesture.WXGesture getGestureListener() -> getGestureListener
    225:225:long getIntervalTime() -> getIntervalTime
    308:308:int getRealCount() -> getRealCount
    281:282:int getRealCurrentItem() -> getRealCurrentItem
    132:132:com.taobao.weex.ui.view.WXSmoothScroller getmScroller() -> getmScroller
    72:108:void init() -> init
    197:197:boolean isAutoScroll() -> isAutoScroll
    325:325:boolean isScrollable() -> isScrollable
    151:157:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    314:322:void onMeasure(int,int) -> onMeasure
    162:165:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    185:186:void pauseAutoScroll() -> pauseAutoScroll
    115:131:void postInitViewPager() -> postInitViewPager
    272:273:void registerGestureListener(com.taobao.weex.ui.view.gesture.WXGesture) -> registerGestureListener
    170:173:void scrollTo(int,int) -> scrollTo
    238:239:void setCircle(boolean) -> setCircle
    216:217:void setCirclePageAdapter(com.taobao.weex.ui.view.WXCirclePageAdapter) -> setCirclePageAdapter
    202:203:void setCurrentItem(int) -> setCurrentItem
    234:235:void setIntervalTime(long) -> setIntervalTime
    286:287:void setRealCurrentItem(int) -> setRealCurrentItem
    329:330:void setScrollable(boolean) -> setScrollable
    333:352:void showNextItem() -> showNextItem
    179:182:void startAutoScroll() -> startAutoScroll
    192:194:void stopAutoScroll() -> stopAutoScroll
    145:145:int superGetCurrentItem() -> superGetCurrentItem
    292:305:void superSetCurrentItem(int,boolean) -> superSetCurrentItem
com.taobao.weex.ui.view.WXCircleViewPager$1 -> com.taobao.weex.ui.view.WXCircleViewPager$1:
    52:52:void <init>(com.taobao.weex.ui.view.WXCircleViewPager,android.os.Looper) -> <init>
    55:62:void handleMessage(android.os.Message) -> handleMessage
com.taobao.weex.ui.view.WXCircleViewPager$2 -> com.taobao.weex.ui.view.WXCircleViewPager$2:
    74:74:void <init>(com.taobao.weex.ui.view.WXCircleViewPager) -> <init>
    87:104:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    78:78:void onPageScrolled(int,float,int) -> onPageScrolled
    83:83:void onPageSelected(int) -> onPageSelected
com.taobao.weex.ui.view.WXEditText -> com.taobao.weex.ui.view.WXEditText:
    41:52:void <init>(android.content.Context,java.lang.String) -> <init>
    61:61:com.taobao.weex.ui.view.gesture.WXGesture getGestureListener() -> getGestureListener
    97:107:void onSizeChanged(int,int,int,int) -> onSizeChanged
    153:153:boolean onTextContextMenuItem(int) -> onTextContextMenuItem
    72:92:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    56:57:void registerGestureListener(com.taobao.weex.ui.view.gesture.WXGesture) -> registerGestureListener
    114:149:void setAllowCopyPaste(boolean) -> setAllowCopyPaste
    110:111:void setAllowDisableMovement(boolean) -> setAllowDisableMovement
    66:68:void setLines(int) -> setLines
com.taobao.weex.ui.view.WXEditText$1 -> com.taobao.weex.ui.view.WXEditText$1:
    123:123:void <init>(com.taobao.weex.ui.view.WXEditText) -> <init>
    136:136:boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    126:126:boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    142:142:void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
    131:131:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
com.taobao.weex.ui.view.WXFrameLayout -> com.taobao.weex.ui.view.WXFrameLayout:
    53:54:void <init>(android.content.Context) -> <init>
    114:115:void addPan(java.lang.Object) -> addPan
    150:154:int calLayerDeep(android.view.View,int) -> calLayerDeep
    123:137:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    79:83:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    46:46:com.taobao.weex.ui.component.WXComponent getComponent() -> getComponent
    59:59:com.taobao.weex.ui.component.WXDiv getComponent() -> getComponent
    74:74:com.taobao.weex.ui.view.gesture.WXGesture getGestureListener() -> getGestureListener
    46:46:void holdComponent(com.taobao.weex.ui.component.WXComponent) -> holdComponent
    64:65:void holdComponent(com.taobao.weex.ui.component.WXDiv) -> holdComponent
    158:175:void notifyLayerOverFlow() -> notifyLayerOverFlow
    88:105:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    69:70:void registerGestureListener(com.taobao.weex.ui.view.gesture.WXGesture) -> registerGestureListener
    118:119:void removePan() -> removePan
    139:147:int reportLayerOverFlowError() -> reportLayerOverFlowError
com.taobao.weex.ui.view.WXHorizontalScrollView -> com.taobao.weex.ui.view.WXHorizontalScrollView:
    37:42:void <init>(android.content.Context) -> <init>
    37:52:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    77:83:void addScrollViewListener(com.taobao.weex.ui.view.WXHorizontalScrollView$ScrollViewListener) -> addScrollViewListener
    74:74:void destroy() -> destroy
    101:105:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    130:130:android.graphics.Rect getContentFrame() -> getContentFrame
    96:96:com.taobao.weex.ui.view.gesture.WXGesture getGestureListener() -> getGestureListener
    45:47:void init() -> init
    122:122:boolean isScrollable() -> isScrollable
    56:65:void onScrollChanged(int,int,int,int) -> onScrollChanged
    110:113:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    91:92:void registerGestureListener(com.taobao.weex.ui.view.gesture.WXGesture) -> registerGestureListener
    86:87:void removeScrollViewListener(com.taobao.weex.ui.view.WXHorizontalScrollView$ScrollViewListener) -> removeScrollViewListener
    68:69:void setScrollViewListener(com.taobao.weex.ui.view.WXHorizontalScrollView$ScrollViewListener) -> setScrollViewListener
    126:127:void setScrollable(boolean) -> setScrollable
com.taobao.weex.ui.view.WXImageView -> com.taobao.weex.ui.view.WXImageView:
    50:56:void <init>(android.content.Context) -> <init>
    248:257:void autoRecoverImage() -> autoRecoverImage
    236:245:void autoReleaseImage() -> autoReleaseImage
    184:187:void dispatchWindowVisibilityChanged(int) -> dispatchWindowVisibilityChanged
    42:42:com.taobao.weex.ui.component.WXComponent getComponent() -> getComponent
    138:138:com.taobao.weex.ui.component.WXImage getComponent() -> getComponent
    106:106:com.taobao.weex.ui.view.gesture.WXGesture getGestureListener() -> getGestureListener
    163:178:int getNaturalHeight() -> getNaturalHeight
    143:158:int getNaturalWidth() -> getNaturalWidth
    42:42:void holdComponent(com.taobao.weex.ui.component.WXComponent) -> holdComponent
    132:133:void holdComponent(com.taobao.weex.ui.component.WXImage) -> holdComponent
    204:206:void onAttachedToWindow() -> onAttachedToWindow
    210:213:void onDetachedFromWindow() -> onDetachedFromWindow
    226:228:void onFinishTemporaryDetach() -> onFinishTemporaryDetach
    124:128:void onLayout(boolean,int,int,int,int) -> onLayout
    218:221:void onStartTemporaryDetach() -> onStartTemporaryDetach
    111:115:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    191:199:void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    101:102:void registerGestureListener(com.taobao.weex.ui.view.gesture.WXGesture) -> registerGestureListener
    119:120:void setBorderRadius(float[]) -> setBorderRadius
    232:233:void setEnableBitmapAutoManage(boolean) -> setEnableBitmapAutoManage
    96:97:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    65:87:void setImageDrawable(android.graphics.drawable.Drawable,boolean) -> setImageDrawable
    91:92:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    60:62:void setImageResource(int) -> setImageResource
com.taobao.weex.ui.view.WXLoadingLayout -> com.taobao.weex.ui.view.WXLoadingLayout:
    29:30:void <init>(android.content.Context) -> <init>
com.taobao.weex.ui.view.WXRefreshLayout -> com.taobao.weex.ui.view.WXRefreshLayout:
    29:30:void <init>(android.content.Context) -> <init>
com.taobao.weex.ui.view.WXScrollView -> com.taobao.weex.ui.view.WXScrollView:
    60:98:void <init>(android.content.Context) -> <init>
    60:119:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    60:124:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    130:133:void addScrollViewListener(com.taobao.weex.ui.view.WXScrollView$WXScrollViewListener) -> addScrollViewListener
    433:436:void destroy() -> destroy
    172:183:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    286:286:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    291:291:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    281:281:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    276:276:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    141:167:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    308:313:void fling(int) -> fling
    449:449:android.graphics.Rect getContentFrame() -> getContentFrame
    445:445:com.taobao.weex.ui.view.gesture.WXGesture getGestureListener() -> getGestureListener
    402:421:boolean handleMessage(android.os.Message) -> handleMessage
    263:263:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    101:106:void init() -> init
    248:248:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    267:267:boolean isScrollable() -> isScrollable
    303:303:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    297:297:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    338:342:void onScroll(com.taobao.weex.ui.view.WXScrollView,int,int) -> onScroll
    317:335:void onScrollChanged(int,int,int,int) -> onScrollChanged
    425:429:void onScrollStopped(com.taobao.weex.ui.view.WXScrollView,int,int) -> onScrollStopped
    345:349:void onScrollToBottom(int,int) -> onScrollToBottom
    187:238:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    365:397:android.view.View procSticky(java.util.Map) -> procSticky
    440:441:void registerGestureListener(com.taobao.weex.ui.view.gesture.WXGesture) -> registerGestureListener
    136:137:void removeScrollViewListener(com.taobao.weex.ui.view.WXScrollView$WXScrollViewListener) -> removeScrollViewListener
    243:244:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    271:272:void setScrollable(boolean) -> setScrollable
    464:465:void setWAScroller(com.taobao.weex.ui.component.WXBaseScroller) -> setWAScroller
    352:362:void showStickyView() -> showStickyView
    253:253:boolean startNestedScroll(int) -> startNestedScroll
    109:114:void startScrollerTask() -> startScrollerTask
    258:259:void stopNestedScroll() -> stopNestedScroll
com.taobao.weex.ui.view.WXSmoothScroller -> com.taobao.weex.ui.view.WXSmoothScroller:
    31:35:void <init>(android.content.Context) -> <init>
    31:39:void <init>(android.content.Context,android.view.animation.Interpolator) -> <init>
    31:44:void <init>(android.content.Context,android.view.animation.Interpolator,boolean) -> <init>
    50:51:void setScrollDurationFactor(double) -> setScrollDurationFactor
    55:56:void startScroll(int,int,int,int,int) -> startScroll
com.taobao.weex.ui.view.WXSwitchView -> com.taobao.weex.ui.view.WXSwitchView:
    34:37:void <init>(android.content.Context) -> <init>
    46:46:com.taobao.weex.ui.view.gesture.WXGesture getGestureListener() -> getGestureListener
    51:55:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    41:42:void registerGestureListener(com.taobao.weex.ui.view.gesture.WXGesture) -> registerGestureListener
com.taobao.weex.ui.view.WXTextView -> com.taobao.weex.ui.view.WXTextView:
    49:53:void <init>(android.content.Context) -> <init>
    149:184:void enableCopy(boolean) -> enableCopy
    43:43:com.taobao.weex.ui.component.WXComponent getComponent() -> getComponent
    145:145:com.taobao.weex.ui.component.WXText getComponent() -> getComponent
    83:83:com.taobao.weex.ui.view.gesture.WXGesture getGestureListener() -> getGestureListener
    88:88:java.lang.CharSequence getText() -> getText
    92:92:android.text.Layout getTextLayout() -> getTextLayout
    43:43:void holdComponent(com.taobao.weex.ui.component.WXComponent) -> holdComponent
    139:140:void holdComponent(com.taobao.weex.ui.component.WXText) -> holdComponent
    57:65:void onDraw(android.graphics.Canvas) -> onDraw
    69:73:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    78:79:void registerGestureListener(com.taobao.weex.ui.view.gesture.WXGesture) -> registerGestureListener
    109:119:void setAriaLabel(java.lang.String) -> setAriaLabel
    131:135:void setTextColor(int) -> setTextColor
    96:106:void setTextLayout(android.text.Layout) -> setTextLayout
com.taobao.weex.ui.view.WXTextView$1 -> com.taobao.weex.ui.view.WXTextView$1:
    150:150:void <init>(com.taobao.weex.ui.view.WXTextView) -> <init>
    153:178:boolean onLongClick(android.view.View) -> onLongClick
com.taobao.weex.ui.view.WXTextView$1$1 -> com.taobao.weex.ui.view.WXTextView$1$1:
    162:162:void <init>(com.taobao.weex.ui.view.WXTextView$1,java.lang.String) -> <init>
    165:174:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
com.taobao.weex.ui.view.WXVideoView -> com.taobao.weex.ui.view.WXVideoView:
    50:51:void <init>(android.content.Context) -> <init>
    60:60:com.taobao.weex.ui.view.gesture.WXGesture getGestureListener() -> getGestureListener
    69:73:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    86:90:void pause() -> pause
    55:56:void registerGestureListener(com.taobao.weex.ui.view.gesture.WXGesture) -> registerGestureListener
    64:65:void setOnVideoPauseListener(com.taobao.weex.ui.view.WXVideoView$VideoPlayListener) -> setOnVideoPauseListener
    78:82:void start() -> start
com.taobao.weex.ui.view.WXVideoView$Wrapper -> com.taobao.weex.ui.view.WXVideoView$Wrapper:
    110:115:void <init>(android.content.Context) -> <init>
    110:120:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    110:125:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    158:161:com.taobao.weex.ui.view.WXVideoView createIfNotExist() -> createIfNotExist
    241:273:void createVideoView() -> createVideoView
    286:293:boolean createVideoViewIfVisible() -> createVideoViewIfVisible
    167:167:android.widget.MediaController getMediaController() -> getMediaController
    141:141:android.widget.ProgressBar getProgressBar() -> getProgressBar
    147:147:com.taobao.weex.ui.view.WXVideoView getVideoView() -> getVideoView
    128:138:void init(android.content.Context) -> init
    298:301:void onGlobalLayout() -> onGlobalLayout
    184:187:void pause() -> pause
    277:282:void removeSelfFromViewTreeObserver() -> removeSelfFromViewTreeObserver
    196:199:void resume() -> resume
    231:239:void setControls(boolean) -> setControls
    217:221:void setOnCompletionListener(android.media.MediaPlayer$OnCompletionListener) -> setOnCompletionListener
    202:206:void setOnErrorListener(android.media.MediaPlayer$OnErrorListener) -> setOnErrorListener
    209:214:void setOnPreparedListener(android.media.MediaPlayer$OnPreparedListener) -> setOnPreparedListener
    224:228:void setOnVideoPauseListener(com.taobao.weex.ui.view.WXVideoView$VideoPlayListener) -> setOnVideoPauseListener
    171:175:void setVideoURI(android.net.Uri) -> setVideoURI
    178:181:void start() -> start
    190:193:void stopPlayback() -> stopPlayback
com.taobao.weex.ui.view.WXWebView -> com.taobao.weex.ui.view.WXWebView:
    66:68:void <clinit>() -> <clinit>
    62:77:void <init>(android.content.Context,java.lang.String) -> <init>
    56:56:com.taobao.weex.ui.view.IWebView$OnPageListener access$100(com.taobao.weex.ui.view.WXWebView) -> access$100
    56:56:com.taobao.weex.ui.view.IWebView$OnMessageListener access$200(com.taobao.weex.ui.view.WXWebView) -> access$200
    56:56:boolean access$300() -> access$300
    56:56:void access$400(com.taobao.weex.ui.view.WXWebView,java.lang.String) -> access$400
    56:56:com.taobao.weex.ui.view.IWebView$OnErrorListener access$500(com.taobao.weex.ui.view.WXWebView) -> access$500
    56:56:void access$600(com.taobao.weex.ui.view.WXWebView,boolean) -> access$600
    56:56:void access$700(com.taobao.weex.ui.view.WXWebView,boolean) -> access$700
    56:56:void access$800(com.taobao.weex.ui.view.WXWebView,java.lang.String,java.lang.String) -> access$800
    109:119:void destroy() -> destroy
    356:361:void evaluateJS(java.lang.String) -> evaluateJS
    81:104:android.view.View getView() -> getView
    221:221:android.webkit.WebView getWebView() -> getWebView
    144:147:void goBack() -> goBack
    151:154:void goForward() -> goForward
    225:336:void initWebView(android.webkit.WebView) -> initWebView
    130:133:void loadDataWithBaseURL(java.lang.String) -> loadDataWithBaseURL
    123:126:void loadUrl(java.lang.String) -> loadUrl
    207:207:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    339:353:void onMessage(java.lang.String,java.lang.String) -> onMessage
    158:175:void postMessage(java.lang.Object) -> postMessage
    137:140:void reload() -> reload
    191:192:void setOnErrorListener(com.taobao.weex.ui.view.IWebView$OnErrorListener) -> setOnErrorListener
    201:202:void setOnMessageListener(com.taobao.weex.ui.view.IWebView$OnMessageListener) -> setOnMessageListener
    196:197:void setOnPageListener(com.taobao.weex.ui.view.IWebView$OnPageListener) -> setOnPageListener
    186:187:void setShowLoading(boolean) -> setShowLoading
    210:213:void showProgressBar(boolean) -> showProgressBar
    216:217:void showWebView(boolean) -> showWebView
com.taobao.weex.ui.view.WXWebView$1 -> com.taobao.weex.ui.view.WXWebView$1:
    233:233:void <init>(com.taobao.weex.ui.view.WXWebView) -> <init>
    253:266:void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    244:249:void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    270:275:void onReceivedError(android.webkit.WebView,android.webkit.WebResourceRequest,android.webkit.WebResourceError) -> onReceivedError
    279:283:void onReceivedHttpError(android.webkit.WebView,android.webkit.WebResourceRequest,android.webkit.WebResourceResponse) -> onReceivedHttpError
    287:291:void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
    237:239:boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
com.taobao.weex.ui.view.WXWebView$2 -> com.taobao.weex.ui.view.WXWebView$2:
    293:293:void <init>(com.taobao.weex.ui.view.WXWebView) -> <init>
    312:325:boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> onJsPrompt
    296:300:void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
    304:308:void onReceivedTitle(android.webkit.WebView,java.lang.String) -> onReceivedTitle
com.taobao.weex.ui.view.WXWebView$3 -> com.taobao.weex.ui.view.WXWebView$3:
    329:329:void <init>(com.taobao.weex.ui.view.WXWebView) -> <init>
    332:333:void postMessage(java.lang.String,java.lang.String) -> postMessage
com.taobao.weex.ui.view.WXWebView$MessageHandler -> com.taobao.weex.ui.view.WXWebView$MessageHandler:
    363:363:void <init>(com.taobao.weex.ui.view.WXWebView,com.taobao.weex.ui.view.WXWebView$1) -> <init>
    366:368:void <init>(com.taobao.weex.ui.view.WXWebView) -> <init>
    373:383:void handleMessage(android.os.Message) -> handleMessage
com.taobao.weex.ui.view.border.BorderCorner -> com.taobao.weex.ui.view.border.BorderCorner:
    32:55:void <init>() -> <init>
    94:122:void drawRoundedCorner(android.graphics.Canvas,android.graphics.Paint,float) -> drawRoundedCorner
    203:203:float getAngleBisectorDegree() -> getAngleBisectorDegree
    207:207:android.graphics.RectF getBorderBox() -> getBorderBox
    199:199:float getOuterCornerRadius() -> getOuterCornerRadius
    195:195:float getPostBorderWidth() -> getPostBorderWidth
    191:191:float getPreBorderWidth() -> getPreBorderWidth
    142:142:float getRoundCornerEndX() -> getRoundCornerEndX
    150:150:float getRoundCornerEndY() -> getRoundCornerEndY
    126:126:float getRoundCornerStartX() -> getRoundCornerStartX
    134:134:float getRoundCornerStartY() -> getRoundCornerStartY
    179:179:boolean hasInnerCorner() -> hasInnerCorner
    187:187:boolean hasOuterCorner() -> hasOuterCorner
    59:85:void set(float,float,float,android.graphics.RectF,float) -> set
    170:171:void setOvalBottom(float) -> setOvalBottom
    158:159:void setOvalLeft(float) -> setOvalLeft
    166:167:void setOvalRight(float) -> setOvalRight
    162:163:void setOvalTop(float) -> setOvalTop
    146:147:void setRoundCornerEndX(float) -> setRoundCornerEndX
    154:155:void setRoundCornerEndY(float) -> setRoundCornerEndY
    130:131:void setRoundCornerStartX(float) -> setRoundCornerStartX
    138:139:void setRoundCornerStartY(float) -> setRoundCornerStartY
com.taobao.weex.ui.view.border.BorderDrawable -> com.taobao.weex.ui.view.border.BorderDrawable:
    73:76:void <clinit>() -> <clinit>
    75:115:void <init>() -> <init>
    119:142:void draw(android.graphics.Canvas) -> draw
    435:472:void drawBorders(android.graphics.Canvas) -> drawBorders
    524:528:void drawOneSide(android.graphics.Canvas,com.taobao.weex.ui.view.border.BorderEdge) -> drawOneSide
    160:160:int getAlpha() -> getAlpha
    273:273:int getBorderColor(com.taobao.weex.dom.CSSShorthand$EDGE) -> getBorderColor
    241:255:float[] getBorderInnerRadius(android.graphics.RectF) -> getBorderInnerRadius
    224:232:float[] getBorderRadius(android.graphics.RectF) -> getBorderRadius
    516:519:float getBorderRadius(com.taobao.weex.dom.CSSShorthand$CORNER) -> getBorderRadius
    293:293:int getBorderStyle(com.taobao.weex.dom.CSSShorthand$EDGE) -> getBorderStyle
    202:202:float getBorderWidth(com.taobao.weex.dom.CSSShorthand$EDGE) -> getBorderWidth
    297:297:int getColor() -> getColor
    325:327:android.graphics.Path getContentPath(android.graphics.RectF) -> getContentPath
    173:174:int getOpacity() -> getOpacity
    181:188:void getOutline(android.graphics.Outline) -> getOutline
    406:425:float getScaleFactor(android.graphics.RectF) -> getScaleFactor
    311:311:boolean hasImage() -> hasImage
    485:512:boolean isDefAllDrawRoundRect(android.graphics.Canvas,float,float,float,float) -> isDefAllDrawRoundRect
    315:319:boolean isRounded() -> isRounded
    146:148:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    347:372:void prepareBorderPath(int,int,int,int,android.graphics.RectF,android.graphics.Path) -> prepareBorderPath
    378:403:void prepareBorderRadius(android.graphics.RectF) -> prepareBorderRadius
    531:538:void preparePaint(com.taobao.weex.dom.CSSShorthand$EDGE) -> preparePaint
    152:156:void setAlpha(int) -> setAlpha
    262:270:void setBorderColor(com.taobao.weex.dom.CSSShorthand$EDGE,int) -> setBorderColor
    206:219:void setBorderRadius(com.taobao.weex.dom.CSSShorthand$CORNER,float) -> setBorderRadius
    277:290:void setBorderStyle(com.taobao.weex.dom.CSSShorthand$EDGE,java.lang.String) -> setBorderStyle
    191:199:void setBorderWidth(com.taobao.weex.dom.CSSShorthand$EDGE,float) -> setBorderWidth
    301:303:void setColor(int) -> setColor
    169:169:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    306:308:void setImage(android.graphics.Shader) -> setImage
    331:339:void updateBorderOutline() -> updateBorderOutline
    429:432:void updateFactor(java.util.List,float,float) -> updateFactor
com.taobao.weex.ui.view.border.BorderEdge -> com.taobao.weex.ui.view.border.BorderEdge:
    43:44:void <init>() -> <init>
    61:76:void drawEdge(android.graphics.Canvas,android.graphics.Paint) -> drawEdge
    87:87:float getBorderWidth() -> getBorderWidth
    83:83:com.taobao.weex.dom.CSSShorthand$EDGE getEdge() -> getEdge
    48:52:com.taobao.weex.ui.view.border.BorderEdge set(com.taobao.weex.ui.view.border.BorderCorner,com.taobao.weex.ui.view.border.BorderCorner,float,com.taobao.weex.dom.CSSShorthand$EDGE) -> set
com.taobao.weex.ui.view.border.BorderStyle -> com.taobao.weex.ui.view.border.BorderStyle:
    28:31:void <clinit>() -> <clinit>
    28:28:void <init>(java.lang.String,int) -> <init>
    44:62:android.graphics.Shader getLineShader(float,int,com.taobao.weex.dom.CSSShorthand$EDGE) -> getLineShader
    28:28:com.taobao.weex.ui.view.border.BorderStyle valueOf(java.lang.String) -> valueOf
    28:28:com.taobao.weex.ui.view.border.BorderStyle[] values() -> values
com.taobao.weex.ui.view.border.BorderStyle$1 -> com.taobao.weex.ui.view.border.BorderStyle$1:
    44:44:void <clinit>() -> <clinit>
com.taobao.weex.ui.view.border.BorderUtil -> com.taobao.weex.ui.view.border.BorderUtil:
    28:28:void <init>() -> <init>
    31:32:int fetchFromSparseArray(android.util.SparseIntArray,int,int) -> fetchFromSparseArray
    36:45:void updateSparseArray(android.util.SparseIntArray,int,int) -> updateSparseArray
com.taobao.weex.ui.view.border.BottomLeftCorner -> com.taobao.weex.ui.view.border.BottomLeftCorner:
    24:24:void <init>() -> <init>
    32:43:void prepareOval() -> prepareOval
    47:63:void prepareRoundCorner() -> prepareRoundCorner
    27:28:void set(float,float,float,android.graphics.RectF) -> set
com.taobao.weex.ui.view.border.BottomRightCorner -> com.taobao.weex.ui.view.border.BottomRightCorner:
    24:24:void <init>() -> <init>
    32:43:void prepareOval() -> prepareOval
    47:63:void prepareRoundCorner() -> prepareRoundCorner
    27:28:void set(float,float,float,android.graphics.RectF) -> set
com.taobao.weex.ui.view.border.TopLeftCorner -> com.taobao.weex.ui.view.border.TopLeftCorner:
    24:24:void <init>() -> <init>
    32:43:void prepareOval() -> prepareOval
    47:63:void prepareRoundCorner() -> prepareRoundCorner
    27:28:void set(float,float,float,android.graphics.RectF) -> set
com.taobao.weex.ui.view.border.TopRightCorner -> com.taobao.weex.ui.view.border.TopRightCorner:
    24:24:void <init>() -> <init>
    32:43:void prepareOval() -> prepareOval
    47:63:void prepareRoundCorner() -> prepareRoundCorner
    27:28:void set(float,float,float,android.graphics.RectF) -> set
com.taobao.weex.ui.view.gesture.WXGesture -> com.taobao.weex.ui.view.gesture.WXGesture:
    77:106:void <init>(com.taobao.weex.ui.component.WXComponent,android.content.Context) -> <init>
    198:201:void addOnTouchListener(android.view.View$OnTouchListener) -> addOnTouchListener
    435:437:boolean containsSimplePan() -> containsSimplePan
    400:414:java.util.Map createFireEventParam(android.view.MotionEvent,int,java.lang.String) -> createFireEventParam
    450:462:com.alibaba.fastjson.JSONObject createJSONObject(android.view.MotionEvent,int,int) -> createJSONObject
    475:481:com.alibaba.fastjson.JSONObject createJSONObject(android.graphics.PointF,android.graphics.PointF,float) -> createJSONObject
    366:369:java.util.List createMultipleFireEventParam(android.view.MotionEvent,java.lang.String) -> createMultipleFireEventParam
    305:308:void finishDisallowInterceptTouchEvent(android.view.View) -> finishDisallowInterceptTouchEvent
    535:535:android.graphics.PointF getEventLocInPageCoordinate(android.view.MotionEvent,int) -> getEventLocInPageCoordinate
    550:557:android.graphics.PointF getEventLocInPageCoordinate(android.view.MotionEvent,int,int) -> getEventLocInPageCoordinate
    569:574:android.graphics.PointF getEventLocInPageCoordinate(float,float) -> getEventLocInPageCoordinate
    488:488:android.graphics.PointF getEventLocInScreenCoordinate(android.view.MotionEvent,int) -> getEventLocInScreenCoordinate
    503:510:android.graphics.PointF getEventLocInScreenCoordinate(android.view.MotionEvent,int,int) -> getEventLocInScreenCoordinate
    522:528:android.graphics.PointF getEventLocInScreenCoordinate(float,float) -> getEventLocInScreenCoordinate
    381:389:java.util.List getHistoricalEvents(android.view.MotionEvent) -> getHistoricalEvents
    290:300:java.lang.String getPanEventAction(android.view.MotionEvent) -> getPanEventAction
    345:355:boolean handleMotionEvent(com.taobao.weex.ui.view.gesture.WXGestureType,android.view.MotionEvent) -> handleMotionEvent
    311:334:boolean handlePanMotionEvent(android.view.MotionEvent) -> handlePanMotionEvent
    117:118:boolean hasSameOrientationWithParent() -> hasSameOrientationWithParent
    143:157:boolean hasStopPropagation(com.taobao.weex.ui.component.WXComponent) -> hasStopPropagation
    109:113:boolean isParentScrollable() -> isParentScrollable
    423:427:boolean isPointerNumChanged(android.view.MotionEvent) -> isPointerNumChanged
    667:667:boolean isRequestDisallowInterceptTouchEvent() -> isRequestDisallowInterceptTouchEvent
    139:139:boolean isStopPropagation(java.lang.String) -> isStopPropagation
    131:131:boolean isTouchEventConsumedByAdvancedGesture() -> isTouchEventConsumedByAdvancedGesture
    663:663:boolean onDown(android.view.MotionEvent) -> onDown
    589:597:void onLongPress(android.view.MotionEvent) -> onLongPress
    604:658:boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    213:285:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    205:208:boolean removeTouchListener(android.view.View$OnTouchListener) -> removeTouchListener
    122:123:void setPreventMoveEvent(boolean) -> setPreventMoveEvent
    671:672:void setRequestDisallowInterceptTouchEvent(boolean) -> setRequestDisallowInterceptTouchEvent
    164:193:boolean shouldBubbleTouchEvent(android.view.MotionEvent) -> shouldBubbleTouchEvent
com.taobao.weex.ui.view.gesture.WXGesture$GestureHandler -> com.taobao.weex.ui.view.gesture.WXGesture$GestureHandler:
    580:581:void <init>() -> <init>
com.taobao.weex.ui.view.gesture.WXGestureType$GestureInfo -> com.taobao.weex.ui.view.gesture.WXGestureType$GestureInfo:
    60:60:void <init>() -> <init>
com.taobao.weex.ui.view.gesture.WXGestureType$HighLevelGesture -> com.taobao.weex.ui.view.gesture.WXGestureType$HighLevelGesture:
    40:47:void <clinit>() -> <clinit>
    50:52:void <init>(java.lang.String,int,java.lang.String) -> <init>
    56:56:java.lang.String toString() -> toString
    40:40:com.taobao.weex.ui.view.gesture.WXGestureType$HighLevelGesture valueOf(java.lang.String) -> valueOf
    40:40:com.taobao.weex.ui.view.gesture.WXGestureType$HighLevelGesture[] values() -> values
com.taobao.weex.ui.view.gesture.WXGestureType$LowLevelGesture -> com.taobao.weex.ui.view.gesture.WXGestureType$LowLevelGesture:
    23:27:void <clinit>() -> <clinit>
    30:32:void <init>(java.lang.String,int,java.lang.String) -> <init>
    36:36:java.lang.String toString() -> toString
    23:23:com.taobao.weex.ui.view.gesture.WXGestureType$LowLevelGesture valueOf(java.lang.String) -> valueOf
    23:23:com.taobao.weex.ui.view.gesture.WXGestureType$LowLevelGesture[] values() -> values
com.taobao.weex.ui.view.listview.ExtendedLinearLayoutManager -> com.taobao.weex.ui.view.listview.ExtendedLinearLayoutManager:
    39:40:void <init>(android.content.Context) -> <init>
    43:44:void <init>(android.content.Context,int,boolean) -> <init>
    31:31:com.taobao.weex.ui.view.listview.ExtendedLinearLayoutManager$OnSmoothScrollEndListener access$000(com.taobao.weex.ui.view.listview.ExtendedLinearLayoutManager) -> access$000
    31:31:com.taobao.weex.ui.view.listview.ExtendedLinearLayoutManager$OnSmoothScrollEndListener access$002(com.taobao.weex.ui.view.listview.ExtendedLinearLayoutManager,com.taobao.weex.ui.view.listview.ExtendedLinearLayoutManager$OnSmoothScrollEndListener) -> access$002
    53:58:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    63:67:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    109:110:void setOnScrollEndListener(com.taobao.weex.ui.view.listview.ExtendedLinearLayoutManager$OnSmoothScrollEndListener) -> setOnScrollEndListener
    74:79:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
    48:48:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
com.taobao.weex.ui.view.listview.ExtendedLinearLayoutManager$TopSnappedSmoothScroller -> com.taobao.weex.ui.view.listview.ExtendedLinearLayoutManager$TopSnappedSmoothScroller:
    82:85:void <init>(com.taobao.weex.ui.view.listview.ExtendedLinearLayoutManager,android.content.Context) -> <init>
    89:90:android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    95:95:int getVerticalSnapPreference() -> getVerticalSnapPreference
    100:105:void onStop() -> onStop
com.taobao.weex.ui.view.listview.ExtendedStaggeredGridLayoutManager -> com.taobao.weex.ui.view.listview.ExtendedStaggeredGridLayoutManager:
    34:35:void <init>(int,int) -> <init>
    39:48:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsRemoved
com.taobao.weex.ui.view.listview.WXRecyclerView -> com.taobao.weex.ui.view.listview.WXRecyclerView:
    55:167:void <init>(android.content.Context) -> <init>
    55:172:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    48:48:int access$002(com.taobao.weex.ui.view.listview.WXRecyclerView,int) -> access$002
    48:48:void access$100(com.taobao.weex.ui.view.listview.WXRecyclerView) -> access$100
    48:48:int access$200(com.taobao.weex.ui.view.listview.WXRecyclerView) -> access$200
    48:48:int access$202(com.taobao.weex.ui.view.listview.WXRecyclerView,int) -> access$202
    48:48:void access$300(com.taobao.weex.ui.view.listview.WXRecyclerView) -> access$300
    48:48:boolean access$400(com.taobao.weex.ui.view.listview.WXRecyclerView,int,boolean) -> access$400
    48:48:void access$501(com.taobao.weex.ui.view.listview.WXRecyclerView,int) -> access$501
    154:163:void callBackNestParent(java.lang.String,java.lang.String,float) -> callBackNestParent
    260:303:boolean canParentScrollVertically(int,boolean) -> canParentScrollVertically
    588:592:void childFling(int) -> childFling
    561:569:void dispatchChildFling() -> dispatchChildFling
    573:585:void dispatchParentFling() -> dispatchParentFling
    343:366:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    522:543:boolean fling(int,int) -> fling
    457:481:com.taobao.weex.ui.view.listview.WXRecyclerView getChildRecylerView() -> getChildRecylerView
    150:150:int getCurrentDy() -> getCurrentDy
    503:517:io.dcloud.feature.weex.extend.DCWXSlider getDCWXSliderComponent(com.taobao.weex.ui.component.WXComponent) -> getDCWXSliderComponent
    313:313:com.taobao.weex.ui.view.gesture.WXGesture getGestureListener() -> getGestureListener
    485:499:com.taobao.weex.ui.component.list.WXListComponent getListComponent(com.taobao.weex.ui.component.WXComponent) -> getListComponent
    442:453:com.taobao.weex.ui.view.listview.WXRecyclerView getParentRecyclerView() -> getParentRecyclerView
    183:184:void initView(android.content.Context,int,int) -> initView
    195:256:void initView(android.content.Context,int,int,float,int) -> initView
    547:547:boolean isNestScroll() -> isNestScroll
    557:557:boolean isScrollEnd() -> isScrollEnd
    552:552:boolean isScrollTop() -> isScrollTop
    175:175:boolean isScrollable() -> isScrollable
    372:372:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    639:642:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    648:658:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    623:635:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    614:619:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    318:338:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    308:309:void registerGestureListener(com.taobao.weex.ui.view.gesture.WXGesture) -> registerGestureListener
    376:405:void scrollTo(boolean,int,int,int) -> scrollTo
    408:425:void scrollTo(int,int,int) -> scrollTo
    596:611:void scrollToPosition(int) -> scrollToPosition
    83:147:void setNestInfo(com.alibaba.fastjson.JSONObject) -> setNestInfo
    428:439:void setOnSmoothScrollEndListener(com.taobao.weex.ui.view.listview.ExtendedLinearLayoutManager$OnSmoothScrollEndListener) -> setOnSmoothScrollEndListener
    179:180:void setScrollable(boolean) -> setScrollable
com.taobao.weex.ui.view.listview.WXRecyclerView$1 -> com.taobao.weex.ui.view.listview.WXRecyclerView$1:
    95:95:void <init>(com.taobao.weex.ui.view.listview.WXRecyclerView) -> <init>
    98:103:void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int) -> onScrollStateChanged
    107:115:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
com.taobao.weex.ui.view.listview.WXRecyclerView$2 -> com.taobao.weex.ui.view.listview.WXRecyclerView$2:
    122:122:void <init>(com.taobao.weex.ui.view.listview.WXRecyclerView) -> <init>
    125:130:void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int) -> onScrollStateChanged
    134:141:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
com.taobao.weex.ui.view.listview.WXRecyclerView$3 -> com.taobao.weex.ui.view.listview.WXRecyclerView$3:
    196:196:void <init>(com.taobao.weex.ui.view.listview.WXRecyclerView,android.content.Context,int,int,boolean,int) -> <init>
    200:203:boolean canScrollVertically() -> canScrollVertically
    209:213:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
com.taobao.weex.ui.view.listview.WXRecyclerView$4 -> com.taobao.weex.ui.view.listview.WXRecyclerView$4:
    216:216:void <init>(com.taobao.weex.ui.view.listview.WXRecyclerView,int,int,int) -> <init>
    220:223:boolean canScrollVertically() -> canScrollVertically
    229:233:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
com.taobao.weex.ui.view.listview.WXRecyclerView$5 -> com.taobao.weex.ui.view.listview.WXRecyclerView$5:
    236:236:void <init>(com.taobao.weex.ui.view.listview.WXRecyclerView,android.content.Context,int,boolean,int) -> <init>
    240:243:boolean canScrollVertically() -> canScrollVertically
    249:253:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
com.taobao.weex.ui.view.listview.WXRecyclerView$6 -> com.taobao.weex.ui.view.listview.WXRecyclerView$6:
    388:388:void <init>(com.taobao.weex.ui.view.listview.WXRecyclerView,int,int) -> <init>
    391:401:void onStop() -> onStop
com.taobao.weex.ui.view.listview.WXRecyclerView$6$1 -> com.taobao.weex.ui.view.listview.WXRecyclerView$6$1:
    391:391:void <init>(com.taobao.weex.ui.view.listview.WXRecyclerView$6) -> <init>
    394:399:void run() -> run
com.taobao.weex.ui.view.listview.WXRecyclerView$7 -> com.taobao.weex.ui.view.listview.WXRecyclerView$7:
    408:408:void <init>(com.taobao.weex.ui.view.listview.WXRecyclerView,int,int,int) -> <init>
    411:423:void run() -> run
com.taobao.weex.ui.view.listview.WXRecyclerView$8 -> com.taobao.weex.ui.view.listview.WXRecyclerView$8:
    428:428:void <init>(com.taobao.weex.ui.view.listview.WXRecyclerView,com.taobao.weex.ui.view.listview.ExtendedLinearLayoutManager$OnSmoothScrollEndListener) -> <init>
    431:437:void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int) -> onScrollStateChanged
com.taobao.weex.ui.view.listview.WXRecyclerView$9 -> com.taobao.weex.ui.view.listview.WXRecyclerView$9:
    602:602:void <init>(com.taobao.weex.ui.view.listview.WXRecyclerView,int) -> <init>
    605:606:void run() -> run
com.taobao.weex.ui.view.listview.adapter.ListBaseViewHolder -> com.taobao.weex.ui.view.listview.adapter.ListBaseViewHolder:
    41:48:void <init>(com.taobao.weex.ui.component.WXComponent,int) -> <init>
    51:53:void <init>(com.taobao.weex.ui.component.WXComponent,int,boolean) -> <init>
    56:58:void <init>(android.view.View,int) -> <init>
    73:77:void bindData(com.taobao.weex.ui.component.WXComponent) -> bindData
    84:87:boolean canRecycled() -> canRecycled
    104:104:com.taobao.weex.ui.component.WXComponent getComponent() -> getComponent
    91:91:android.view.View getView() -> getView
    95:95:int getViewType() -> getViewType
    80:80:boolean isFullSpan() -> isFullSpan
    61:61:boolean isRecycled() -> isRecycled
    65:70:void recycled() -> recycled
    99:101:void setComponentUsing(boolean) -> setComponentUsing
com.taobao.weex.ui.view.listview.adapter.RecyclerViewBaseAdapter -> com.taobao.weex.ui.view.listview.adapter.RecyclerViewBaseAdapter:
    33:35:void <init>(com.taobao.weex.ui.view.listview.adapter.IRecyclerAdapterListener) -> <init>
    89:92:int getItemCount() -> getItemCount
    84:84:long getItemId(int) -> getItemId
    76:79:int getItemViewType(int) -> getItemViewType
    29:29:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onBindViewHolder
    69:72:void onBindViewHolder(com.taobao.weex.ui.view.listview.adapter.ListBaseViewHolder,int) -> onBindViewHolder
    29:29:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    39:43:com.taobao.weex.ui.view.listview.adapter.ListBaseViewHolder onCreateViewHolder(android.view.ViewGroup,int) -> onCreateViewHolder
    29:29:boolean onFailedToRecycleView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onFailedToRecycleView
    105:108:boolean onFailedToRecycleView(com.taobao.weex.ui.view.listview.adapter.ListBaseViewHolder) -> onFailedToRecycleView
    29:29:void onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewAttachedToWindow
    48:58:void onViewAttachedToWindow(com.taobao.weex.ui.view.listview.adapter.ListBaseViewHolder) -> onViewAttachedToWindow
    29:29:void onViewDetachedFromWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewDetachedFromWindow
    62:65:void onViewDetachedFromWindow(com.taobao.weex.ui.view.listview.adapter.ListBaseViewHolder) -> onViewDetachedFromWindow
    29:29:void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewRecycled
    97:101:void onViewRecycled(com.taobao.weex.ui.view.listview.adapter.ListBaseViewHolder) -> onViewRecycled
com.taobao.weex.ui.view.listview.adapter.TransformItemDecoration -> com.taobao.weex.ui.view.listview.adapter.TransformItemDecoration:
    26:42:void <init>(boolean,float,int,int,int,float,float) -> <init>
    47:53:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
    57:92:void updateItem(android.view.View,int,int) -> updateItem
com.taobao.weex.ui.view.listview.adapter.WXRecyclerViewOnScrollListener -> com.taobao.weex.ui.view.listview.adapter.WXRecyclerViewOnScrollListener:
    65:73:void <init>(com.taobao.weex.ui.view.listview.adapter.IOnLoadMoreListener) -> <init>
    170:176:int findMax(int[]) -> findMax
    180:186:int findMin(int[]) -> findMin
    77:102:void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int) -> onScrollStateChanged
    106:167:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
com.taobao.weex.ui.view.listview.adapter.WXRecyclerViewOnScrollListener$LAYOUT_MANAGER_TYPE -> com.taobao.weex.ui.view.listview.adapter.WXRecyclerViewOnScrollListener$LAYOUT_MANAGER_TYPE:
    189:192:void <clinit>() -> <clinit>
    189:189:void <init>(java.lang.String,int) -> <init>
    189:189:com.taobao.weex.ui.view.listview.adapter.WXRecyclerViewOnScrollListener$LAYOUT_MANAGER_TYPE valueOf(java.lang.String) -> valueOf
    189:189:com.taobao.weex.ui.view.listview.adapter.WXRecyclerViewOnScrollListener$LAYOUT_MANAGER_TYPE[] values() -> values
com.taobao.weex.ui.view.refresh.circlebar.CircleProgressBar -> com.taobao.weex.ui.view.refresh.circlebar.CircleProgressBar:
    70:318:void <init>(android.content.Context) -> <init>
    70:318:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    70:318:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    41:41:boolean access$000(com.taobao.weex.ui.view.refresh.circlebar.CircleProgressBar) -> access$000
    41:41:android.os.Handler access$100(com.taobao.weex.ui.view.refresh.circlebar.CircleProgressBar) -> access$100
    260:260:boolean circleBackgroundEnabled() -> circleBackgroundEnabled
    355:357:void destory() -> destory
    112:112:boolean elevationSupported() -> elevationSupported
    241:241:int getMax() -> getMax
    249:249:int getProgress() -> getProgress
    125:125:int getProgressStokeWidth() -> getProgressStokeWidth
    91:105:void init(android.content.Context,android.util.AttributeSet,int) -> init
    183:183:boolean isShowArrow() -> isShowArrow
    204:208:void onAnimationEnd() -> onAnimationEnd
    196:200:void onAnimationStart() -> onAnimationStart
    269:274:void onAttachedToWindow() -> onAttachedToWindow
    278:283:void onDetachedFromWindow() -> onDetachedFromWindow
    135:178:void onLayout(boolean,int,int,int,int) -> onLayout
    117:122:void onMeasure(int,int) -> onMeasure
    191:192:void setAnimationListener(android.view.animation.Animation$AnimationListener) -> setAnimationListener
    235:238:void setBackgroundColor(int) -> setBackgroundColor
    228:232:void setBackgroundColorResource(int) -> setBackgroundColorResource
    264:265:void setCircleBackgroundEnabled(boolean) -> setCircleBackgroundEnabled
    218:222:void setColorSchemeColors(int[]) -> setColorSchemeColors
    245:246:void setMax(int) -> setMax
    253:257:void setProgress(int) -> setProgress
    108:109:void setProgressBackGroundColor(int) -> setProgressBackGroundColor
    350:352:void setProgressRotation(float) -> setProgressRotation
    129:131:void setProgressStokeWidth(int) -> setProgressStokeWidth
    187:188:void setShowArrow(boolean) -> setShowArrow
    339:341:void setStartEndTrim(float,float) -> setStartEndTrim
    315:316:void start() -> start
    344:347:void stop() -> stop
com.taobao.weex.ui.view.refresh.circlebar.CircleProgressBar$1 -> com.taobao.weex.ui.view.refresh.circlebar.CircleProgressBar$1:
    319:319:void <init>(com.taobao.weex.ui.view.refresh.circlebar.CircleProgressBar) -> <init>
    322:335:void handleMessage(android.os.Message) -> handleMessage
com.taobao.weex.ui.view.refresh.circlebar.CircleProgressBar$1$1 -> com.taobao.weex.ui.view.refresh.circlebar.CircleProgressBar$1$1:
    327:327:void <init>(com.taobao.weex.ui.view.refresh.circlebar.CircleProgressBar$1) -> <init>
    330:331:void run() -> run
com.taobao.weex.ui.view.refresh.circlebar.CircleProgressBar$OvalShadow -> com.taobao.weex.ui.view.refresh.circlebar.CircleProgressBar$OvalShadow:
    292:302:void <init>(com.taobao.weex.ui.view.refresh.circlebar.CircleProgressBar,int,int) -> <init>
    306:311:void draw(android.graphics.Canvas,android.graphics.Paint) -> draw
com.taobao.weex.ui.view.refresh.circlebar.MaterialProgressDrawable -> com.taobao.weex.ui.view.refresh.circlebar.MaterialProgressDrawable:
    53:54:void <clinit>() -> <clinit>
    79:454:void <init>(android.content.Context,android.view.View) -> <init>
    51:51:void access$000(com.taobao.weex.ui.view.refresh.circlebar.MaterialProgressDrawable,float,com.taobao.weex.ui.view.refresh.circlebar.MaterialProgressDrawable$Ring) -> access$000
    51:51:float access$100(com.taobao.weex.ui.view.refresh.circlebar.MaterialProgressDrawable,com.taobao.weex.ui.view.refresh.circlebar.MaterialProgressDrawable$Ring) -> access$100
    51:51:void access$200(com.taobao.weex.ui.view.refresh.circlebar.MaterialProgressDrawable,float,com.taobao.weex.ui.view.refresh.circlebar.MaterialProgressDrawable$Ring) -> access$200
    51:51:android.view.animation.Interpolator access$300() -> access$300
    51:51:float access$400(com.taobao.weex.ui.view.refresh.circlebar.MaterialProgressDrawable) -> access$400
    51:51:float access$402(com.taobao.weex.ui.view.refresh.circlebar.MaterialProgressDrawable,float) -> access$402
    352:364:void applyFinishTranslation(float,com.taobao.weex.ui.view.refresh.circlebar.MaterialProgressDrawable$Ring) -> applyFinishTranslation
    231:236:void draw(android.graphics.Canvas) -> draw
    314:326:int evaluateColorChange(float,int,int) -> evaluateColorChange
    244:244:int getAlpha() -> getAlpha
    221:221:int getIntrinsicHeight() -> getIntrinsicHeight
    226:226:int getIntrinsicWidth() -> getIntrinsicWidth
    308:309:float getMinProgressArc(com.taobao.weex.ui.view.refresh.circlebar.MaterialProgressDrawable$Ring) -> getMinProgressArc
    265:265:int getOpacity() -> getOpacity
    260:260:float getRotation() -> getRotation
    270:278:boolean isRunning() -> isRunning
    240:241:void setAlpha(int) -> setAlpha
    177:178:void setArrowScale(float) -> setArrowScale
    204:205:void setBackgroundColor(int) -> setBackgroundColor
    249:250:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    215:217:void setColorSchemeColors(int[]) -> setColorSchemeColors
    197:198:void setProgressRotation(float) -> setProgressRotation
    254:256:void setRotation(float) -> setRotation
    136:147:void setSizeParameters(double,double,double,double,float,float) -> setSizeParameters
    187:189:void setStartEndTrim(float,float) -> setStartEndTrim
    367:452:void setupAnimators() -> setupAnimators
    170:171:void showArrow(boolean) -> showArrow
    283:296:void start() -> start
    300:305:void stop() -> stop
    338:346:void updateRingColor(float,com.taobao.weex.ui.view.refresh.circlebar.MaterialProgressDrawable$Ring) -> updateRingColor
    157:164:void updateSizes(int) -> updateSizes
com.taobao.weex.ui.view.refresh.circlebar.MaterialProgressDrawable$1 -> com.taobao.weex.ui.view.refresh.circlebar.MaterialProgressDrawable$1:
    368:368:void <init>(com.taobao.weex.ui.view.refresh.circlebar.MaterialProgressDrawable,com.taobao.weex.ui.view.refresh.circlebar.MaterialProgressDrawable$Ring) -> <init>
    371:418:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
com.taobao.weex.ui.view.refresh.circlebar.MaterialProgressDrawable$2 -> com.taobao.weex.ui.view.refresh.circlebar.MaterialProgressDrawable$2:
    423:423:void <init>(com.taobao.weex.ui.view.refresh.circlebar.MaterialProgressDrawable,com.taobao.weex.ui.view.refresh.circlebar.MaterialProgressDrawable$Ring) -> <init>
    433:433:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    437:449:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    427:428:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
com.taobao.weex.ui.view.refresh.circlebar.MaterialProgressDrawable$3 -> com.taobao.weex.ui.view.refresh.circlebar.MaterialProgressDrawable$3:
    454:454:void <init>(com.taobao.weex.ui.view.refresh.circlebar.MaterialProgressDrawable) -> <init>
    457:458:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    462:463:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    467:468:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
com.taobao.weex.ui.view.refresh.circlebar.MaterialProgressDrawable$Ring -> com.taobao.weex.ui.view.refresh.circlebar.MaterialProgressDrawable$Ring:
    473:513:void <init>(android.graphics.drawable.Drawable$Callback) -> <init>
    534:553:void draw(android.graphics.Canvas,android.graphics.Rect) -> draw
    556:587:void drawTriangle(android.graphics.Canvas,float,float,android.graphics.Rect) -> drawTriangle
    655:655:int getAlpha() -> getAlpha
    742:742:double getCenterRadius() -> getCenterRadius
    703:703:float getEndTrim() -> getEndTrim
    730:730:float getInsets() -> getInsets
    624:624:int getNextColor() -> getNextColor
    628:628:int getNextColorIndex() -> getNextColorIndex
    714:714:float getRotation() -> getRotation
    680:680:float getStartTrim() -> getStartTrim
    692:692:int getStartingColor() -> getStartingColor
    688:688:float getStartingEndTrim() -> getStartingEndTrim
    769:769:float getStartingRotation() -> getStartingRotation
    684:684:float getStartingStartTrim() -> getStartingStartTrim
    669:669:float getStrokeWidth() -> getStrokeWidth
    636:637:void goToNextColor() -> goToNextColor
    795:796:void invalidateSelf() -> invalidateSelf
    786:792:void resetOriginals() -> resetOriginals
    648:649:void setAlpha(int) -> setAlpha
    526:528:void setArrowDimensions(float,float) -> setArrowDimensions
    759:763:void setArrowScale(float) -> setArrowScale
    516:517:void setBackgroundColor(int) -> setBackgroundColor
    738:739:void setCenterRadius(double) -> setCenterRadius
    608:609:void setColor(int) -> setColor
    640:642:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    616:618:void setColorIndex(int) -> setColorIndex
    595:598:void setColors(int[]) -> setColors
    697:699:void setEndTrim(float) -> setEndTrim
    718:726:void setInsets(int,int) -> setInsets
    708:710:void setRotation(float) -> setRotation
    749:753:void setShowArrow(boolean) -> setShowArrow
    674:676:void setStartTrim(float) -> setStartTrim
    662:665:void setStrokeWidth(float) -> setStrokeWidth
    777:780:void storeOriginals() -> storeOriginals
com.taobao.weex.ui.view.refresh.core.WXRefreshView -> com.taobao.weex.ui.view.refresh.core.WXRefreshView:
    38:40:void <init>(android.content.Context) -> <init>
    43:45:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    48:50:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    32:32:android.widget.LinearLayout access$000(com.taobao.weex.ui.view.refresh.core.WXRefreshView) -> access$000
    32:32:com.taobao.weex.ui.view.refresh.circlebar.CircleProgressBar access$102(com.taobao.weex.ui.view.refresh.core.WXRefreshView,com.taobao.weex.ui.view.refresh.circlebar.CircleProgressBar) -> access$102
    63:66:void setContentGravity(int) -> setContentGravity
    101:104:void setProgressBgColor(int) -> setProgressBgColor
    112:115:void setProgressColor(int) -> setProgressColor
    147:149:void setProgressRotation(float) -> setProgressRotation
    74:93:void setRefreshView(android.view.View) -> setRefreshView
    130:133:void setStartEndTrim(float,float) -> setStartEndTrim
    53:60:void setupViews() -> setupViews
    118:121:void startAnimation() -> startAnimation
    136:139:void stopAnimation() -> stopAnimation
com.taobao.weex.ui.view.refresh.core.WXRefreshView$1 -> com.taobao.weex.ui.view.refresh.core.WXRefreshView$1:
    76:76:void <init>(com.taobao.weex.ui.view.refresh.core.WXRefreshView,android.view.View) -> <init>
    79:91:void run() -> run
com.taobao.weex.ui.view.refresh.core.WXSwipeLayout -> com.taobao.weex.ui.view.refresh.core.WXSwipeLayout:
    54:145:void <init>(android.content.Context) -> <init>
    54:150:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    54:155:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    54:161:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    50:50:com.taobao.weex.ui.view.refresh.core.WXRefreshView access$000(com.taobao.weex.ui.view.refresh.core.WXSwipeLayout) -> access$000
    50:50:void access$100(com.taobao.weex.ui.view.refresh.core.WXSwipeLayout,int) -> access$100
    50:50:void access$200(com.taobao.weex.ui.view.refresh.core.WXSwipeLayout,float) -> access$200
    50:50:com.taobao.weex.ui.view.refresh.core.WXSwipeLayout$WXOnRefreshListener access$300(com.taobao.weex.ui.view.refresh.core.WXSwipeLayout) -> access$300
    50:50:void access$400(com.taobao.weex.ui.view.refresh.core.WXSwipeLayout) -> access$400
    50:50:com.taobao.weex.ui.view.refresh.core.WXRefreshView access$500(com.taobao.weex.ui.view.refresh.core.WXSwipeLayout) -> access$500
    50:50:com.taobao.weex.ui.view.refresh.core.WXSwipeLayout$WXOnLoadingListener access$600(com.taobao.weex.ui.view.refresh.core.WXSwipeLayout) -> access$600
    50:50:void access$700(com.taobao.weex.ui.view.refresh.core.WXSwipeLayout) -> access$700
    762:765:void addOnRefreshOffsetChangedListener(com.taobao.weex.ui.view.refresh.core.WXSwipeLayout$OnRefreshOffsetChangedListener) -> addOnRefreshOffsetChangedListener
    197:199:void addTargetView(android.view.View) -> addTargetView
    465:471:double calculateDistanceY(android.view.View,int) -> calculateDistanceY
    724:743:boolean canChildScrollDown() -> canChildScrollDown
    702:715:boolean canChildScrollUp() -> canChildScrollUp
    748:749:float dipToPx(android.content.Context,float) -> dipToPx
    304:304:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    309:309:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    296:296:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    290:290:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    803:806:void finishPullLoad() -> finishPullLoad
    794:797:void finishPullRefresh() -> finishPullRefresh
    813:813:com.taobao.weex.ui.view.refresh.core.WXRefreshView getFooterView() -> getFooterView
    809:809:com.taobao.weex.ui.view.refresh.core.WXRefreshView getHeaderView() -> getHeaderView
    433:433:int getNestedScrollAxes() -> getNestedScrollAxes
    536:563:void handlerAction() -> handlerAction
    284:284:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    165:180:void initAttrs(android.content.Context,android.util.AttributeSet) -> initAttrs
    249:249:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    817:817:boolean isPullLoadEnable() -> isPullLoadEnable
    825:825:boolean isPullRefreshEnable() -> isPullRefreshEnable
    833:833:boolean isRefreshing() -> isRefreshing
    480:520:boolean moveSpinner(float) -> moveSpinner
    528:529:void moveTargetView(float) -> moveTargetView
    776:788:void notifyOnRefreshOffsetChangedListener(int) -> notifyOnRefreshOffsetChangedListener
    184:193:void onAttachedToWindow() -> onAttachedToWindow
    228:237:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    327:330:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    318:321:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    365:429:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    455:458:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    347:352:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    335:342:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    444:450:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    769:772:boolean removeOnRefreshOffsetChangedListener(com.taobao.weex.ui.view.refresh.core.WXSwipeLayout$OnRefreshOffsetChangedListener) -> removeOnRefreshOffsetChangedListener
    667:688:void resetFootView(int) -> resetFootView
    601:623:void resetHeaderView(int) -> resetHeaderView
    691:695:void resetLoadmoreState() -> resetLoadmoreState
    626:630:void resetRefreshState() -> resetRefreshState
    851:852:void setLoadingBgColor(int) -> setLoadingBgColor
    842:844:void setLoadingHeight(int) -> setLoadingHeight
    244:245:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    753:754:void setOnLoadingListener(com.taobao.weex.ui.view.refresh.core.WXSwipeLayout$WXOnLoadingListener) -> setOnLoadingListener
    757:758:void setOnRefreshListener(com.taobao.weex.ui.view.refresh.core.WXSwipeLayout$WXOnRefreshListener) -> setOnRefreshListener
    821:822:void setPullLoadEnable(boolean) -> setPullLoadEnable
    829:830:void setPullRefreshEnable(boolean) -> setPullRefreshEnable
    847:848:void setRefreshBgColor(int) -> setRefreshBgColor
    837:839:void setRefreshHeight(int) -> setRefreshHeight
    205:224:void setRefreshView() -> setRefreshView
    637:660:void startLoadmore(int) -> startLoadmore
    254:271:boolean startNestedScroll(int) -> startNestedScroll
    570:594:void startRefresh(int) -> startRefresh
    276:280:void stopNestedScroll() -> stopNestedScroll
com.taobao.weex.ui.view.refresh.core.WXSwipeLayout$1 -> com.taobao.weex.ui.view.refresh.core.WXSwipeLayout$1:
    572:572:void <init>(com.taobao.weex.ui.view.refresh.core.WXSwipeLayout) -> <init>
    575:580:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.taobao.weex.ui.view.refresh.core.WXSwipeLayout$2 -> com.taobao.weex.ui.view.refresh.core.WXSwipeLayout$2:
    582:582:void <init>(com.taobao.weex.ui.view.refresh.core.WXSwipeLayout) -> <init>
    585:590:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.taobao.weex.ui.view.refresh.core.WXSwipeLayout$3 -> com.taobao.weex.ui.view.refresh.core.WXSwipeLayout$3:
    604:604:void <init>(com.taobao.weex.ui.view.refresh.core.WXSwipeLayout) -> <init>
    607:612:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.taobao.weex.ui.view.refresh.core.WXSwipeLayout$4 -> com.taobao.weex.ui.view.refresh.core.WXSwipeLayout$4:
    614:614:void <init>(com.taobao.weex.ui.view.refresh.core.WXSwipeLayout) -> <init>
    617:619:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.taobao.weex.ui.view.refresh.core.WXSwipeLayout$5 -> com.taobao.weex.ui.view.refresh.core.WXSwipeLayout$5:
    639:639:void <init>(com.taobao.weex.ui.view.refresh.core.WXSwipeLayout) -> <init>
    642:646:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.taobao.weex.ui.view.refresh.core.WXSwipeLayout$6 -> com.taobao.weex.ui.view.refresh.core.WXSwipeLayout$6:
    648:648:void <init>(com.taobao.weex.ui.view.refresh.core.WXSwipeLayout) -> <init>
    651:656:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.taobao.weex.ui.view.refresh.core.WXSwipeLayout$7 -> com.taobao.weex.ui.view.refresh.core.WXSwipeLayout$7:
    670:670:void <init>(com.taobao.weex.ui.view.refresh.core.WXSwipeLayout) -> <init>
    673:677:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.taobao.weex.ui.view.refresh.core.WXSwipeLayout$8 -> com.taobao.weex.ui.view.refresh.core.WXSwipeLayout$8:
    679:679:void <init>(com.taobao.weex.ui.view.refresh.core.WXSwipeLayout) -> <init>
    682:684:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.taobao.weex.ui.view.refresh.core.WXSwipeLayout$WXRefreshAnimatorListener -> com.taobao.weex.ui.view.refresh.core.WXSwipeLayout$WXRefreshAnimatorListener:
    87:87:void <init>() -> <init>
    99:99:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    95:95:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    103:103:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    91:91:void onAnimationStart(android.animation.Animator) -> onAnimationStart
com.taobao.weex.ui.view.refresh.wrapper.BaseBounceView -> com.taobao.weex.ui.view.refresh.wrapper.BaseBounceView:
    50:51:void <init>(android.content.Context,int) -> <init>
    45:56:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    94:101:com.taobao.weex.ui.view.refresh.core.WXSwipeLayout createBounceView(android.content.Context) -> createBounceView
    86:88:void finishPullLoad() -> finishPullLoad
    81:83:void finishPullRefresh() -> finishPullRefresh
    108:108:android.view.View getInnerView() -> getInnerView
    59:59:int getOrientation() -> getOrientation
    230:230:com.taobao.weex.ui.view.refresh.core.WXSwipeLayout getSwipeLayout() -> getSwipeLayout
    63:64:void init(android.content.Context) -> init
    67:67:boolean isVertical() -> isVertical
    179:187:void removeFooterView(com.taobao.weex.ui.component.WXComponent) -> removeFooterView
    190:198:void removeHeaderView(com.taobao.weex.ui.component.WXComponent) -> removeHeaderView
    212:227:void removeView(android.view.View) -> removeView
    150:176:void setFooterView(com.taobao.weex.ui.component.WXComponent) -> setFooterView
    118:143:void setHeaderView(com.taobao.weex.ui.component.WXComponent) -> setHeaderView
    206:208:void setLoadmoreEnable(boolean) -> setLoadmoreEnable
    76:78:void setOnLoadingListener(com.taobao.weex.ui.view.refresh.core.WXSwipeLayout$WXOnLoadingListener) -> setOnLoadingListener
    71:73:void setOnRefreshListener(com.taobao.weex.ui.view.refresh.core.WXSwipeLayout$WXOnRefreshListener) -> setOnRefreshListener
    201:203:void setRefreshEnable(boolean) -> setRefreshEnable
com.taobao.weex.ui.view.refresh.wrapper.BounceRecyclerView -> com.taobao.weex.ui.view.refresh.wrapper.BounceRecyclerView:
    48:65:void <init>(android.content.Context,int,int,float,int) -> <init>
    68:69:void <init>(android.content.Context,int,int) -> <init>
    84:88:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    182:182:com.taobao.weex.ui.view.gesture.WXGesture getGestureListener() -> getGestureListener
    44:44:com.taobao.weex.ui.view.listview.WXRecyclerView getInnerView() -> getInnerView
    79:79:com.taobao.weex.ui.view.listview.adapter.RecyclerViewBaseAdapter getRecyclerViewBaseAdapter() -> getRecyclerViewBaseAdapter
    171:171:com.taobao.weex.ui.component.list.StickyHeaderHelper getStickyHeaderHelper() -> getStickyHeaderHelper
    167:168:void notifyStickyRemove(com.taobao.weex.ui.component.list.WXCell) -> notifyStickyRemove
    153:154:void notifyStickyShow(com.taobao.weex.ui.component.list.WXCell) -> notifyStickyShow
    144:147:void onLoadmoreComplete() -> onLoadmoreComplete
    137:140:void onRefreshingComplete() -> onRefreshingComplete
    177:178:void registerGestureListener(com.taobao.weex.ui.view.gesture.WXGesture) -> registerGestureListener
    44:44:android.view.View setInnerView(android.content.Context) -> setInnerView
    94:132:com.taobao.weex.ui.view.listview.WXRecyclerView setInnerView(android.content.Context) -> setInnerView
    72:76:void setRecyclerViewBaseAdapter(com.taobao.weex.ui.view.listview.adapter.RecyclerViewBaseAdapter) -> setRecyclerViewBaseAdapter
    158:159:void updateStickyView(int) -> updateStickyView
com.taobao.weex.ui.view.refresh.wrapper.BounceScrollerView -> com.taobao.weex.ui.view.refresh.wrapper.BounceScrollerView:
    29:33:void <init>(android.content.Context,int,com.taobao.weex.ui.component.WXBaseScroller) -> <init>
    48:48:void onLoadmoreComplete() -> onLoadmoreComplete
    43:43:void onRefreshingComplete() -> onRefreshingComplete
    26:26:android.view.View setInnerView(android.content.Context) -> setInnerView
    37:37:com.taobao.weex.ui.view.WXScrollView setInnerView(android.content.Context) -> setInnerView
com.taobao.weex.utils.ATagUtil -> com.taobao.weex.utils.ATagUtil:
    30:30:void <init>() -> <init>
    32:41:void onClick(android.view.View,java.lang.String,java.lang.String) -> onClick
com.taobao.weex.utils.BoxShadowUtil -> com.taobao.weex.utils.BoxShadowUtil:
    69:69:void <clinit>() -> <clinit>
    67:67:void <init>() -> <init>
    67:67:void access$000(android.view.View,java.util.List,float,float[]) -> access$000
    67:67:void access$100(android.view.View,java.util.List,float,float[]) -> access$100
    145:193:void drawShadow(android.graphics.Canvas,com.taobao.weex.utils.BoxShadowUtil$BoxShadowOptions) -> drawShadow
    79:79:boolean isBoxShadowEnabled() -> isBoxShadowEnabled
    327:379:com.taobao.weex.utils.BoxShadowUtil$BoxShadowOptions parseBoxShadow(java.lang.String,float) -> parseBoxShadow
    303:323:com.taobao.weex.utils.BoxShadowUtil$BoxShadowOptions[] parseBoxShadows(java.lang.String,float) -> parseBoxShadows
    83:142:void setBoxShadow(android.view.View,java.lang.String,float[],float,float) -> setBoxShadow
    74:76:void setBoxShadowEnabled(boolean) -> setBoxShadowEnabled
    272:299:void setInsetBoxShadow(android.view.View,java.util.List,float,float[]) -> setInsetBoxShadow
    196:269:void setNormalBoxShadow(android.view.View,java.util.List,float,float[]) -> setNormalBoxShadow
com.taobao.weex.utils.BoxShadowUtil$1 -> com.taobao.weex.utils.BoxShadowUtil$1:
    127:127:void <init>(android.view.View,java.util.List,float,float[],java.util.List) -> <init>
    130:140:void run() -> run
com.taobao.weex.utils.BoxShadowUtil$BoxShadowOptions -> com.taobao.weex.utils.BoxShadowUtil$BoxShadowOptions:
    570:570:void <init>(float,com.taobao.weex.utils.BoxShadowUtil$1) -> <init>
    572:615:void <init>(float) -> <init>
    570:570:java.util.List access$500(com.taobao.weex.utils.BoxShadowUtil$BoxShadowOptions) -> access$500
    570:570:float access$600(com.taobao.weex.utils.BoxShadowUtil$BoxShadowOptions) -> access$600
    645:647:android.graphics.Rect getTargetCanvasRect() -> getTargetCanvasRect
    618:641:com.taobao.weex.utils.BoxShadowUtil$BoxShadowOptions scale(float) -> scale
    653:664:java.lang.String toString() -> toString
com.taobao.weex.utils.BoxShadowUtil$BoxShadowOptions$1 -> com.taobao.weex.utils.BoxShadowUtil$BoxShadowOptions$1:
    592:592:void <init>(com.taobao.weex.utils.BoxShadowUtil$BoxShadowOptions) -> <init>
    595:600:void parse(java.lang.String) -> parse
com.taobao.weex.utils.BoxShadowUtil$BoxShadowOptions$2 -> com.taobao.weex.utils.BoxShadowUtil$BoxShadowOptions$2:
    603:603:void <init>(com.taobao.weex.utils.BoxShadowUtil$BoxShadowOptions) -> <init>
    606:610:void parse(java.lang.String) -> parse
com.taobao.weex.utils.BoxShadowUtil$InsetShadowDrawable -> com.taobao.weex.utils.BoxShadowUtil$InsetShadowDrawable:
    428:428:void <init>(int,int,float,float,float,float,int,float[],com.taobao.weex.utils.BoxShadowUtil$1) -> <init>
    443:462:void <init>(int,int,float,float,float,float,int,float[]) -> <init>
    536:552:void draw(android.graphics.Canvas) -> draw
    566:566:int getOpacity() -> getOpacity
    475:532:void prepare() -> prepare
    557:557:void setAlpha(int) -> setAlpha
    562:562:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
com.taobao.weex.utils.BoxShadowUtil$OverflowBitmapDrawable -> com.taobao.weex.utils.BoxShadowUtil$OverflowBitmapDrawable:
    382:382:void <init>(android.content.res.Resources,android.graphics.Bitmap,android.graphics.Point,android.graphics.Rect,float[],com.taobao.weex.utils.BoxShadowUtil$1) -> <init>
    389:396:void <init>(android.content.res.Resources,android.graphics.Bitmap,android.graphics.Point,android.graphics.Rect,float[]) -> <init>
    399:425:void draw(android.graphics.Canvas) -> draw
com.taobao.weex.utils.FontDO -> com.taobao.weex.utils.FontDO:
    33:56:void <init>(java.lang.String,java.lang.String,com.taobao.weex.WXSDKInstance) -> <init>
    33:63:void <init>(java.lang.String,android.graphics.Typeface) -> <init>
    179:179:java.lang.String getFilePath() -> getFilePath
    66:66:java.lang.String getFontFamilyName() -> getFontFamilyName
    171:171:int getState() -> getState
    159:159:int getType() -> getType
    163:163:android.graphics.Typeface getTypeface() -> getTypeface
    155:155:java.lang.String getUrl() -> getUrl
    70:152:void parseSrc(java.lang.String,com.taobao.weex.WXSDKInstance) -> parseSrc
    183:184:void setFilePath(java.lang.String) -> setFilePath
    175:176:void setState(int) -> setState
    167:168:void setTypeface(android.graphics.Typeface) -> setTypeface
com.taobao.weex.utils.FunctionParser -> com.taobao.weex.utils.FunctionParser:
    45:48:void <init>(java.lang.String,com.taobao.weex.utils.FunctionParser$Mapper) -> <init>
    61:65:java.util.LinkedHashMap definition() -> definition
    69:78:java.util.Map function() -> function
    83:91:java.lang.String match(com.taobao.weex.utils.FunctionParser$Token) -> match
    56:57:java.util.LinkedHashMap parse() -> parse
com.taobao.weex.utils.FunctionParser$Lexer -> com.taobao.weex.utils.FunctionParser$Lexer:
    139:139:void <init>(java.lang.String,com.taobao.weex.utils.FunctionParser$1) -> <init>
    156:160:void <init>(java.lang.String) -> <init>
    139:139:boolean access$100(com.taobao.weex.utils.FunctionParser$Lexer) -> access$100
    139:139:com.taobao.weex.utils.FunctionParser$Token access$200(com.taobao.weex.utils.FunctionParser$Lexer) -> access$200
    139:139:java.lang.String access$300(com.taobao.weex.utils.FunctionParser$Lexer) -> access$300
    139:139:java.lang.String access$400(com.taobao.weex.utils.FunctionParser$Lexer) -> access$400
    163:163:com.taobao.weex.utils.FunctionParser$Token getCurrentToken() -> getCurrentToken
    167:167:java.lang.String getCurrentTokenValue() -> getCurrentTokenValue
    235:235:boolean isCharacterOrDigit(char) -> isCharacterOrDigit
    223:231:boolean isFuncName(java.lang.CharSequence) -> isFuncName
    171:198:boolean moveOn() -> moveOn
    203:219:void moveOn(java.lang.String) -> moveOn
com.taobao.weex.utils.FunctionParser$Token -> com.taobao.weex.utils.FunctionParser$Token:
    94:95:void <clinit>() -> <clinit>
    94:94:void <init>(java.lang.String,int) -> <init>
    94:94:com.taobao.weex.utils.FunctionParser$Token valueOf(java.lang.String) -> valueOf
    94:94:com.taobao.weex.utils.FunctionParser$Token[] values() -> values
com.taobao.weex.utils.FunctionParser$WXInterpretationException -> com.taobao.weex.utils.FunctionParser$WXInterpretationException:
    114:115:void <init>(java.lang.String) -> <init>
com.taobao.weex.utils.ImageDrawable -> com.taobao.weex.utils.ImageDrawable:
    122:124:void <init>() -> <init>
    47:70:android.graphics.drawable.Drawable createImageDrawable(android.graphics.drawable.Drawable,android.widget.ImageView$ScaleType,float[],int,int,boolean) -> createImageDrawable
    94:115:android.graphics.Matrix createShaderMatrix(android.widget.ImageView$ScaleType,int,int,int,int) -> createShaderMatrix
    148:148:int getBitmapHeight() -> getBitmapHeight
    152:152:int getBitmapWidth() -> getBitmapWidth
    144:144:float[] getCornerRadii() -> getCornerRadii
    134:139:void onDraw(android.graphics.drawable.shapes.Shape,android.graphics.Canvas,android.graphics.Paint) -> onDraw
    128:130:void setCornerRadii(float[]) -> setCornerRadii
    74:89:void updateShaderAndSize(android.widget.ImageView$ScaleType,int,int,com.taobao.weex.utils.ImageDrawable,android.graphics.BitmapShader) -> updateShaderAndSize
com.taobao.weex.utils.ImgURIUtil -> com.taobao.weex.utils.ImgURIUtil:
    30:30:void <init>() -> <init>
    33:40:android.graphics.drawable.Drawable getDrawableFromLoaclSrc(android.content.Context,android.net.Uri) -> getDrawableFromLoaclSrc
com.taobao.weex.utils.LogLevel -> com.taobao.weex.utils.LogLevel:
    28:37:void <clinit>() -> <clinit>
    42:46:void <init>(java.lang.String,int,java.lang.String,int,int) -> <init>
    65:65:int compare(io.dcloud.feature.uniapp.utils.AbsLogLevel) -> compare
    50:50:java.lang.String getName() -> getName
    60:60:int getPriority() -> getPriority
    55:55:int getValue() -> getValue
    28:28:com.taobao.weex.utils.LogLevel valueOf(java.lang.String) -> valueOf
    28:28:com.taobao.weex.utils.LogLevel[] values() -> values
com.taobao.weex.utils.OsVersion -> com.taobao.weex.utils.OsVersion:
    29:31:void <clinit>() -> <clinit>
    24:24:void <init>() -> <init>
    45:45:int getApiVersion() -> getApiVersion
    38:38:boolean isAtLeastJB_MR2() -> isAtLeastJB_MR2
com.taobao.weex.utils.SingleFunctionParser -> com.taobao.weex.utils.SingleFunctionParser:
    46:58:void <init>(java.lang.String,com.taobao.weex.utils.SingleFunctionParser$FlatMapper) -> <init>
    66:74:void <init>(java.lang.String,com.taobao.weex.utils.SingleFunctionParser$NonUniformMapper) -> <init>
    77:81:java.util.List parse(java.lang.String) -> parse
com.taobao.weex.utils.SingleFunctionParser$1 -> com.taobao.weex.utils.SingleFunctionParser$1:
    46:46:void <init>(com.taobao.weex.utils.SingleFunctionParser$FlatMapper) -> <init>
    49:55:java.util.Map map(java.lang.String,java.util.List) -> map
com.taobao.weex.utils.SingleFunctionParser$2 -> com.taobao.weex.utils.SingleFunctionParser$2:
    66:66:void <init>(com.taobao.weex.utils.SingleFunctionParser$NonUniformMapper) -> <init>
    69:71:java.util.Map map(java.lang.String,java.util.List) -> map
com.taobao.weex.utils.StaticLayoutProxy -> com.taobao.weex.utils.StaticLayoutProxy:
    33:33:void <init>() -> <init>
    39:48:android.text.StaticLayout create(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean,boolean) -> create
    55:76:android.text.StaticLayout createInternal(java.lang.CharSequence,android.text.TextPaint,int,android.text.Layout$Alignment,android.text.TextDirectionHeuristic,float,float,boolean) -> createInternal
com.taobao.weex.utils.Trace -> com.taobao.weex.utils.Trace:
    53:60:void <clinit>() -> <clinit>
    33:33:void <init>() -> <init>
    77:79:void beginSection(java.lang.String) -> beginSection
    87:89:void endSection() -> endSection
    63:63:boolean getTraceEnabled() -> getTraceEnabled
com.taobao.weex.utils.Trace$AbstractTrace -> com.taobao.weex.utils.Trace$AbstractTrace:
    35:35:void <init>() -> <init>
    35:35:void <init>(com.taobao.weex.utils.Trace$1) -> <init>
com.taobao.weex.utils.Trace$TraceDummy -> com.taobao.weex.utils.Trace$TraceDummy:
    104:104:void <init>() -> <init>
    104:104:void <init>(com.taobao.weex.utils.Trace$1) -> <init>
    107:107:void beginSection(java.lang.String) -> beginSection
    111:111:void endSection() -> endSection
com.taobao.weex.utils.Trace$TraceJBMR2 -> com.taobao.weex.utils.Trace$TraceJBMR2:
    92:92:void <init>() -> <init>
    92:92:void <init>(com.taobao.weex.utils.Trace$1) -> <init>
    95:96:void beginSection(java.lang.String) -> beginSection
    100:101:void endSection() -> endSection
com.taobao.weex.utils.TypefaceUtil -> com.taobao.weex.utils.TypefaceUtil:
    47:47:void <clinit>() -> <clinit>
    44:44:void <init>() -> <init>
    44:44:boolean access$000(java.lang.String,java.lang.String,boolean) -> access$000
    44:44:java.util.Map access$100() -> access$100
    44:44:void access$200(boolean,com.taobao.weex.utils.FontDO) -> access$200
    79:106:void applyFontStyle(android.graphics.Paint,int,int,java.lang.String) -> applyFontStyle
    168:232:void downloadFontByNetwork(java.lang.String,java.lang.String,java.lang.String) -> downloadFontByNetwork
    295:295:java.lang.String getFontCacheDir() -> getFontCacheDir
    70:70:com.taobao.weex.utils.FontDO getFontDO(java.lang.String) -> getFontDO
    109:114:android.graphics.Typeface getOrCreateTypeface(java.lang.String,int) -> getOrCreateTypeface
    119:132:void loadFromAsset(com.taobao.weex.utils.FontDO,java.lang.String) -> loadFromAsset
    235:277:boolean loadLocalFontFile(java.lang.String,java.lang.String,boolean) -> loadLocalFontFile
    135:165:void loadTypeface(com.taobao.weex.utils.FontDO,boolean) -> loadTypeface
    281:292:void notifyFontAvailable(boolean,com.taobao.weex.utils.FontDO) -> notifyFontAvailable
    52:55:void putFontDO(com.taobao.weex.utils.FontDO) -> putFontDO
    58:67:void registerNativeFont(java.util.Map) -> registerNativeFont
    74:75:void removeFontDO(java.lang.String) -> removeFontDO
com.taobao.weex.utils.TypefaceUtil$1 -> com.taobao.weex.utils.TypefaceUtil$1:
    176:176:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    187:187:void onHeadersReceived(int,java.util.Map) -> onHeadersReceived
    201:230:void onHttpFinish(com.taobao.weex.common.WXResponse) -> onHttpFinish
    197:197:void onHttpResponseProgress(int) -> onHttpResponseProgress
    179:182:void onHttpStart() -> onHttpStart
    192:192:void onHttpUploadProgress(int) -> onHttpUploadProgress
com.taobao.weex.utils.TypefaceUtil$2 -> com.taobao.weex.utils.TypefaceUtil$2:
    260:260:void <init>(com.taobao.weex.utils.FontDO) -> <init>
    263:264:void run() -> run
com.taobao.weex.utils.WXDataStructureUtil -> com.taobao.weex.utils.WXDataStructureUtil:
    23:23:void <init>() -> <init>
    50:60:int capacity(int) -> capacity
    64:67:int checkNonnegative(int,java.lang.String) -> checkNonnegative
    42:42:java.util.HashMap newHashMapWithExpectedSize(int) -> newHashMapWithExpectedSize
com.taobao.weex.utils.WXDeviceUtils -> com.taobao.weex.utils.WXDeviceUtils:
    24:24:void <init>() -> <init>
    28:31:boolean isAutoResize(android.content.Context) -> isAutoResize
    47:51:boolean isGalaxyFold(android.content.Context) -> isGalaxyFold
    38:38:boolean isMateX(android.content.Context) -> isMateX
com.taobao.weex.utils.WXDomUtils -> com.taobao.weex.utils.WXDomUtils:
    28:28:void <init>() -> <init>
    63:81:float getContentHeight(com.taobao.weex.ui.component.WXComponent) -> getContentHeight
    36:54:float getContentWidth(com.taobao.weex.ui.component.WXComponent) -> getContentWidth
    90:103:float getContentWidth(com.taobao.weex.dom.CSSShorthand,com.taobao.weex.dom.CSSShorthand,float) -> getContentWidth
com.taobao.weex.utils.WXExceptionUtils -> com.taobao.weex.utils.WXExceptionUtils:
    52:57:void <clinit>() -> <clinit>
    50:50:void <init>() -> <init>
    61:91:boolean checkNeedReportCauseRepeat(java.lang.String,com.taobao.weex.common.WXErrorCode,java.lang.String) -> checkNeedReportCauseRepeat
    112:140:void commitCriticalExceptionRT(java.lang.String,com.taobao.weex.common.WXErrorCode,java.lang.String,java.lang.String,java.util.Map) -> commitCriticalExceptionRT
    150:219:void commitCriticalExceptionWithDefaultUrl(java.lang.String,java.lang.String,com.taobao.weex.common.WXErrorCode,java.lang.String,java.lang.String,java.util.Map) -> commitCriticalExceptionWithDefaultUrl
    222:237:java.lang.String convertStageToStr(com.taobao.weex.WXSDKInstance) -> convertStageToStr
com.taobao.weex.utils.WXExceptionUtils$1 -> com.taobao.weex.utils.WXExceptionUtils$1:
    226:226:void <init>() -> <init>
    226:226:int compare(java.lang.Object,java.lang.Object) -> compare
    229:229:int compare(java.util.Map$Entry,java.util.Map$Entry) -> compare
com.taobao.weex.utils.WXFileUtils -> com.taobao.weex.utils.WXFileUtils:
    49:49:void <init>() -> <init>
    197:202:java.lang.String base64Md5(java.lang.String) -> base64Md5
    208:212:java.lang.String base64Md5(byte[]) -> base64Md5
    354:362:void closeIo(java.io.Closeable) -> closeIo
    304:333:void copyFile(java.io.File,java.io.File) -> copyFile
    336:351:void copyFileWithException(java.io.File,java.io.File) -> copyFileWithException
    258:300:boolean extractSo(java.lang.String,java.lang.String) -> extractSo
    81:95:java.lang.String loadAsset(java.lang.String,android.content.Context) -> loadAsset
    58:71:java.lang.String loadFileOrAsset(java.lang.String,android.content.Context) -> loadFileOrAsset
    175:180:java.lang.String md5(java.lang.String) -> md5
    186:191:java.lang.String md5(byte[]) -> md5
    132:147:byte[] readBytesFromAssets(java.lang.String,android.content.Context) -> readBytesFromAssets
    99:128:java.lang.String readStreamToString(java.io.InputStream) -> readStreamToString
    239:254:boolean replaceLib(java.lang.String,java.lang.String) -> replaceLib
    151:170:boolean saveFile(java.lang.String,byte[],android.content.Context) -> saveFile
    217:225:java.lang.String[] validCPUABIS() -> validCPUABIS
    229:235:boolean validLibPath(java.lang.String) -> validLibPath
com.taobao.weex.utils.WXInterception -> com.taobao.weex.utils.WXInterception:
    28:29:void <init>() -> <init>
    33:37:java.lang.Object proxy(java.lang.Object,java.lang.Class,com.taobao.weex.utils.WXInterception$InterceptionHandler) -> proxy
    43:44:java.lang.Object proxy(java.lang.Object,com.taobao.weex.utils.WXInterception$InterceptionHandler,java.lang.Class[]) -> proxy
com.taobao.weex.utils.WXInterception$InterceptionHandler -> com.taobao.weex.utils.WXInterception$InterceptionHandler:
    55:55:void <init>() -> <init>
    81:81:java.lang.Object delegate() -> delegate
    68:76:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
    85:86:void setDelegate(java.lang.Object) -> setDelegate
com.taobao.weex.utils.WXJsonUtils -> com.taobao.weex.utils.WXJsonUtils:
    38:38:void <init>() -> <init>
    54:64:java.lang.String fromObjectToJSONString(java.lang.Object,boolean) -> fromObjectToJSONString
    69:69:java.lang.String fromObjectToJSONString(java.lang.Object) -> fromObjectToJSONString
    42:49:java.util.List getList(java.lang.String,java.lang.Class) -> getList
    85:92:void putAll(java.util.Map,com.alibaba.fastjson.JSONObject) -> putAll
com.taobao.weex.utils.WXLogUtils -> com.taobao.weex.utils.WXLogUtils:
    45:62:void <clinit>() -> <clinit>
    38:38:void <init>() -> <init>
    117:118:void d(java.lang.String) -> d
    121:122:void d(java.lang.String,byte[]) -> d
    174:195:void d(java.lang.String,java.lang.String) -> d
    242:245:void d(java.lang.String,java.lang.Throwable) -> d
    145:146:void e(java.lang.String) -> e
    149:150:void e(java.lang.String,byte[]) -> e
    226:227:void e(java.lang.String,java.lang.String) -> e
    265:267:void e(java.lang.String,java.lang.Throwable) -> e
    285:288:void eTag(java.lang.String,java.lang.Throwable) -> eTag
    198:210:com.taobao.weex.utils.LogLevel getLogLevel(java.lang.String) -> getLogLevel
    291:314:java.lang.String getStackTrace(java.lang.Throwable) -> getStackTrace
    125:126:void i(java.lang.String) -> i
    129:130:void i(java.lang.String,byte[]) -> i
    214:215:void i(java.lang.String,java.lang.String) -> i
    248:251:void i(java.lang.String,java.lang.Throwable) -> i
    133:134:void info(java.lang.String) -> info
    65:74:java.lang.Class loadClass(java.lang.String) -> loadClass
    87:110:void log(java.lang.String,java.lang.String,io.dcloud.feature.uniapp.utils.AbsLogLevel) -> log
    238:239:void p(java.lang.String) -> p
    279:282:void p(java.lang.String,java.lang.Throwable) -> p
    166:166:void performance(java.lang.String,byte[]) -> performance
    78:84:void renderPerformanceLog(java.lang.String,long) -> renderPerformanceLog
    56:57:void setIsDebug(boolean) -> setIsDebug
    334:337:void setJsLogWatcher(com.taobao.weex.utils.WXLogUtils$JsLogWatcher) -> setJsLogWatcher
    340:341:void setLogWatcher(com.taobao.weex.utils.WXLogUtils$LogWatcher) -> setLogWatcher
    113:114:void v(java.lang.String) -> v
    218:219:void v(java.lang.String,java.lang.String) -> v
    254:257:void v(java.lang.String,java.lang.Throwable) -> v
    137:138:void w(java.lang.String) -> w
    141:142:void w(java.lang.String,byte[]) -> w
    222:223:void w(java.lang.String,java.lang.String) -> w
    260:262:void w(java.lang.String,java.lang.Throwable) -> w
    320:331:void writeConsoleLog(java.lang.String,java.lang.String) -> writeConsoleLog
    169:170:void wtf(java.lang.String) -> wtf
    230:231:void wtf(java.lang.String,java.lang.String) -> wtf
    270:273:void wtf(java.lang.String,java.lang.Throwable) -> wtf
com.taobao.weex.utils.WXMap -> com.taobao.weex.utils.WXMap:
    24:24:void <init>() -> <init>
    27:27:java.lang.String put(java.lang.String,byte[]) -> put
com.taobao.weex.utils.WXReflectionUtils -> com.taobao.weex.utils.WXReflectionUtils:
    31:31:void <init>() -> <init>
    102:115:java.lang.reflect.Field getDeclaredField(java.lang.Object,java.lang.String) -> getDeclaredField
    34:59:java.lang.Object parseArgument(java.lang.reflect.Type,java.lang.Object) -> parseArgument
    131:141:void setProperty(java.lang.Object,java.lang.reflect.Field,java.lang.Object) -> setProperty
    65:96:void setValue(java.lang.Object,java.lang.String,java.lang.Object) -> setValue
com.taobao.weex.utils.WXResourceUtils -> com.taobao.weex.utils.WXResourceUtils:
    40:230:void <clinit>() -> <clinit>
    38:38:void <init>() -> <init>
    38:38:java.util.Map access$100() -> access$100
    38:38:com.taobao.weex.utils.SingleFunctionParser$FlatMapper access$200() -> access$200
    38:38:com.taobao.weex.utils.SingleFunctionParser$NonUniformMapper access$300() -> access$300
    233:233:int getColor(java.lang.String) -> getColor
    237:262:int getColor(java.lang.String,int) -> getColor
    274:283:android.graphics.Shader getShader(java.lang.String,float,float) -> getShader
    372:372:boolean isNamedColor(java.lang.String) -> isNamedColor
    333:368:float[] parseGradientDirection(java.lang.String,float,float) -> parseGradientDirection
    293:322:java.util.List parseGradientValues(java.lang.String) -> parseGradientValues
com.taobao.weex.utils.WXResourceUtils$1 -> com.taobao.weex.utils.WXResourceUtils$1:
    48:48:void <init>() -> <init>
    48:48:java.lang.Object map(java.lang.String) -> map
    51:57:java.lang.Integer map(java.lang.String) -> map
com.taobao.weex.utils.WXResourceUtils$2 -> com.taobao.weex.utils.WXResourceUtils$2:
    62:62:void <init>() -> <init>
    65:77:java.util.List map(java.util.List) -> map
com.taobao.weex.utils.WXResourceUtils$ColorConvertHandler -> com.taobao.weex.utils.WXResourceUtils$ColorConvertHandler:
    375:417:void <clinit>() -> <clinit>
    375:375:void <init>(java.lang.String,int) -> <init>
    375:375:void <init>(java.lang.String,int,com.taobao.weex.utils.WXResourceUtils$1) -> <init>
    375:375:int access$400(float) -> access$400
    449:449:int parseAlpha(float) -> parseAlpha
    375:375:com.taobao.weex.utils.WXResourceUtils$ColorConvertHandler valueOf(java.lang.String) -> valueOf
    375:375:com.taobao.weex.utils.WXResourceUtils$ColorConvertHandler[] values() -> values
com.taobao.weex.utils.WXResourceUtils$ColorConvertHandler$1 -> com.taobao.weex.utils.WXResourceUtils$ColorConvertHandler$1:
    376:376:void <init>(java.lang.String,int) -> <init>
    379:382:android.util.Pair handle(java.lang.String) -> handle
com.taobao.weex.utils.WXResourceUtils$ColorConvertHandler$2 -> com.taobao.weex.utils.WXResourceUtils$ColorConvertHandler$2:
    386:386:void <init>(java.lang.String,int) -> <init>
    389:400:android.util.Pair handle(java.lang.String) -> handle
com.taobao.weex.utils.WXResourceUtils$ColorConvertHandler$3 -> com.taobao.weex.utils.WXResourceUtils$ColorConvertHandler$3:
    404:404:void <init>(java.lang.String,int) -> <init>
    407:412:android.util.Pair handle(java.lang.String) -> handle
com.taobao.weex.utils.WXResourceUtils$ColorConvertHandler$4 -> com.taobao.weex.utils.WXResourceUtils$ColorConvertHandler$4:
    417:417:void <init>(java.lang.String,int) -> <init>
    420:429:android.util.Pair handle(java.lang.String) -> handle
com.taobao.weex.utils.WXSoInstallMgrSdk -> com.taobao.weex.utils.WXSoInstallMgrSdk:
    76:80:void <clinit>() -> <clinit>
    66:66:void <init>() -> <init>
    350:362:java.lang.String _cpuType() -> _cpuType
    212:218:java.io.File _desSoCopyFile(java.lang.String) -> _desSoCopyFile
    342:345:java.lang.String _getFieldReflectively(android.os.Build,java.lang.String) -> _getFieldReflectively
    462:483:boolean _loadUnzipSo(java.lang.String,int,com.taobao.weex.adapter.IWXUserTrackAdapter) -> _loadUnzipSo
    413:424:java.lang.String _targetSoFile(java.lang.String,int) -> _targetSoFile
    372:402:boolean checkSoIsValid(java.lang.String,long) -> checkSoIsValid
    293:338:void copyJssRuntimeSo() -> copyJssRuntimeSo
    228:290:void copyStartUpSo() -> copyStartUpSo
    85:88:void init(android.app.Application,com.taobao.weex.adapter.IWXSoLoaderAdapter,com.taobao.weex.IWXStatisticsListener) -> init
    112:208:boolean initSo(java.lang.String,int,com.taobao.weex.adapter.IWXUserTrackAdapter) -> initSo
    96:97:boolean isCPUSupport() -> isCPUSupport
    448:450:boolean isExist(java.lang.String,int) -> isExist
    91:92:boolean isX86() -> isX86
    435:441:void removeSoIfExit(java.lang.String,int) -> removeSoIfExit
    489:589:boolean unZipSelectedFiles(java.lang.String,int,com.taobao.weex.adapter.IWXUserTrackAdapter) -> unZipSelectedFiles
com.taobao.weex.utils.WXUtils -> com.taobao.weex.utils.WXUtils:
    37:667:void <clinit>() -> <clinit>
    35:35:void <init>() -> <init>
    652:664:boolean checkGreyConfig(java.lang.String,java.lang.String,java.lang.String) -> checkGreyConfig
    198:239:float fastGetFloat(java.lang.String,float) -> fastGetFloat
    250:250:float fastGetFloat(java.lang.String) -> fastGetFloat
    64:112:float floatByViewport(java.lang.Object,float) -> floatByViewport
    509:515:long getAvailMemory(android.content.Context) -> getAvailMemory
    498:505:java.lang.Boolean getBoolean(java.lang.Object,java.lang.Boolean) -> getBoolean
    563:594:java.lang.String getBundleBanner(java.lang.String) -> getBundleBanner
    42:42:androidx.collection.LruCache getCache() -> getCache
    437:483:double getDouble(java.lang.Object) -> getDouble
    670:670:long getFixUnixTime() -> getFixUnixTime
    116:116:float getFloat(java.lang.Object) -> getFloat
    120:168:java.lang.Float getFloat(java.lang.Object,java.lang.Float) -> getFloat
    58:58:float getFloatByViewport(java.lang.Object,float) -> getFloatByViewport
    61:61:float getFloatByViewport(java.lang.Object,int) -> getFloatByViewport
    292:292:int getInt(java.lang.Object) -> getInt
    297:371:java.lang.Integer getInteger(java.lang.Object,java.lang.Integer) -> getInteger
    382:427:long getLong(java.lang.Object) -> getLong
    635:648:int getNumberInt(java.lang.Object,int) -> getNumberInt
    520:530:java.lang.String getString(java.lang.Object,java.lang.String) -> getString
    598:610:int indexLineBreak(java.lang.String,int) -> indexLineBreak
    489:493:boolean isTabletDevice() -> isTabletDevice
    49:49:boolean isUiThread() -> isUiThread
    53:53:boolean isUndefined(float) -> isUndefined
    271:271:float parseFloat(java.lang.Object) -> parseFloat
    276:288:float parseFloat(java.lang.String) -> parseFloat
    255:263:int parseInt(java.lang.String) -> parseInt
    267:267:int parseInt(java.lang.Object) -> parseInt
    544:544:int parsePercent(java.lang.String,int) -> parsePercent
    535:539:int parseUnitOrPercent(java.lang.String,int) -> parseUnitOrPercent
    614:626:java.lang.String[] splitLineBreak(java.lang.String) -> splitLineBreak
    185:194:float transferRpx(java.lang.String,float) -> transferRpx
    172:181:float transferWx(java.lang.String,float) -> transferWx
com.taobao.weex.utils.WXViewToImageUtil -> com.taobao.weex.utils.WXViewToImageUtil:
    45:45:void <clinit>() -> <clinit>
    43:43:void <init>() -> <init>
    53:83:void generateImage(android.view.View,int,int,com.taobao.weex.utils.WXViewToImageUtil$OnImageSavedCallback) -> generateImage
    141:149:android.graphics.Bitmap getBitmapFromImageView(android.view.View,int) -> getBitmapFromImageView
    92:126:java.lang.String saveBitmapToGallery(android.content.Context,android.graphics.Bitmap,com.taobao.weex.utils.WXViewToImageUtil$OnImageSavedCallback) -> saveBitmapToGallery
com.taobao.weex.utils.WXViewToImageUtil$1 -> com.taobao.weex.utils.WXViewToImageUtil$1:
    56:56:void <init>(android.view.View,int,com.taobao.weex.utils.WXViewToImageUtil$OnImageSavedCallback) -> <init>
    60:81:void run() -> run
com.taobao.weex.utils.WXViewToImageUtil$1$1 -> com.taobao.weex.utils.WXViewToImageUtil$1$1:
    72:72:void <init>(com.taobao.weex.utils.WXViewToImageUtil$1,java.lang.String) -> <init>
    75:79:void run() -> run
com.taobao.weex.utils.WXViewUtils -> com.taobao.weex.utils.WXViewUtils:
    88:88:void <clinit>() -> <clinit>
    61:61:void <init>() -> <init>
    542:543:boolean clipCanvasDueToAndroidVersion(android.graphics.Canvas) -> clipCanvasDueToAndroidVersion
    553:556:boolean clipCanvasIfAnimationExist(android.view.View) -> clipCanvasIfAnimationExist
    571:584:boolean clipCanvasIfBackgroundImageExist(android.view.View,com.taobao.weex.ui.view.border.BorderDrawable) -> clipCanvasIfBackgroundImageExist
    589:597:boolean clipCanvasIfBackgroundImageExist(com.taobao.weex.ui.flat.widget.Widget,com.taobao.weex.ui.view.border.BorderDrawable) -> clipCanvasIfBackgroundImageExist
    495:517:void clipCanvasWithinBorderBox(android.view.View,android.graphics.Canvas) -> clipCanvasWithinBorderBox
    521:533:void clipCanvasWithinBorderBox(com.taobao.weex.ui.flat.widget.Widget,android.graphics.Canvas) -> clipCanvasWithinBorderBox
    394:402:int dip2px(float) -> dip2px
    93:105:int generateViewId() -> generateViewId
    478:490:com.taobao.weex.ui.view.border.BorderDrawable getBorderDrawable(android.view.View) -> getBorderDrawable
    220:241:int getFullScreenHeight(android.content.Context) -> getFullScreenHeight
    446:452:int getOpacityFromColor(int) -> getOpacityFromColor
    272:272:float getRealPxByWidth(float) -> getRealPxByWidth
    275:275:float getRealPxByWidth(float,float) -> getRealPxByWidth
    278:278:float getRealPxByWidth(float,int) -> getRealPxByWidth
    340:340:float getRealPxByWidth2(float) -> getRealPxByWidth2
    343:343:int getRealPxByWidth2(float,float) -> getRealPxByWidth2
    346:346:int getRealPxByWidth2(float,int) -> getRealPxByWidth2
    294:294:float getRealSubPxByWidth(float) -> getRealSubPxByWidth
    297:297:float getRealSubPxByWidth(float,float) -> getRealSubPxByWidth
    300:300:float getRealSubPxByWidth(float,int) -> getRealSubPxByWidth
    154:162:float getScreenDensity(android.content.Context) -> getScreenDensity
    209:209:int getScreenHeight() -> getScreenHeight
    214:215:int getScreenHeight(java.lang.String) -> getScreenHeight
    245:257:int getScreenHeight(android.content.Context) -> getScreenHeight
    145:145:int getScreenWidth() -> getScreenWidth
    180:192:int getScreenWidth(android.content.Context) -> getScreenWidth
    197:203:int getStatusBarHeight(android.content.Context) -> getStatusBarHeight
    367:367:float getWebPxByWidth(float) -> getWebPxByWidth
    370:370:float getWebPxByWidth(float,float) -> getWebPxByWidth
    373:373:float getWebPxByWidth(float,int) -> getWebPxByWidth
    114:124:int getWeexHeight(java.lang.String) -> getWeexHeight
    319:319:float getWeexPxByReal(float) -> getWeexPxByReal
    322:322:float getWeexPxByReal(float,float) -> getWeexPxByReal
    325:325:float getWeexPxByReal(float,int) -> getWeexPxByReal
    130:140:int getWeexWidth(java.lang.String) -> getWeexWidth
    432:441:int multiplyColorAlpha(int,int) -> multiplyColorAlpha
    406:420:boolean onScreenArea(android.view.View) -> onScreenArea
    281:288:float realPxByWidth(float,float) -> realPxByWidth
    352:353:int realPxByWidth2(float,float) -> realPxByWidth2
    303:310:float realSubPxByWidth(float,float) -> realSubPxByWidth
    458:474:void setBackGround(android.view.View,android.graphics.drawable.Drawable,com.taobao.weex.ui.component.WXComponent) -> setBackGround
    150:150:int setScreenWidth(int) -> setScreenWidth
    166:177:void updateApplicationScreen(android.content.Context) -> updateApplicationScreen
    376:383:float webPxByWidth(float,float) -> webPxByWidth
    328:334:float weexPxByReal(float,float) -> weexPxByReal
com.taobao.weex.utils.WXWsonJSONSwitch -> com.taobao.weex.utils.WXWsonJSONSwitch:
    108:108:void <clinit>() -> <clinit>
    32:32:void <init>() -> <init>
    40:50:byte[] convertJSONToWsonIfUseWson(byte[]) -> convertJSONToWsonIfUseWson
    95:98:java.lang.Object convertWXJSObjectDataToJSON(com.taobao.weex.bridge.WXJSObject) -> convertWXJSObjectDataToJSON
    117:123:java.lang.String fromObjectToJSONString(com.taobao.weex.bridge.WXJSObject) -> fromObjectToJSONString
    57:71:java.lang.Object parseWsonOrJSON(byte[]) -> parseWsonOrJSON
    80:89:com.taobao.weex.bridge.WXJSObject toWsonOrJsonWXJSObject(java.lang.Object) -> toWsonOrJsonWXJSObject
com.taobao.weex.utils.batch.BatchOperationHelper -> com.taobao.weex.utils.batch.BatchOperationHelper:
    35:42:void <init>(com.taobao.weex.utils.batch.BactchExecutor) -> <init>
    31:31:java.util.concurrent.CopyOnWriteArrayList access$000(com.taobao.weex.utils.batch.BatchOperationHelper) -> access$000
    57:71:void flush() -> flush
    46:50:boolean take(java.lang.Runnable) -> take
com.taobao.weex.utils.batch.BatchOperationHelper$1 -> com.taobao.weex.utils.batch.BatchOperationHelper$1:
    58:58:void <init>(com.taobao.weex.utils.batch.BatchOperationHelper) -> <init>
    61:68:void run() -> run
com.taobao.weex.utils.cache.RegisterCache -> com.taobao.weex.utils.cache.RegisterCache:
    32:33:void <clinit>() -> <clinit>
    36:57:void <init>() -> <init>
    141:144:void CacheComponentRegister() -> CacheComponentRegister
    148:152:void CacheModuleRegister() -> CacheModuleRegister
    128:136:boolean cacheComponent(java.lang.String,com.taobao.weex.ui.IFComponentHolder,java.util.Map) -> cacheComponent
    115:123:boolean cacheModule(java.lang.String,com.taobao.weex.bridge.ModuleFactory,boolean) -> cacheModule
    68:70:boolean canCache() -> canCache
    74:74:boolean enableAutoScan() -> enableAutoScan
    64:64:boolean enableCache() -> enableCache
    88:88:int getDoNotCacheSize() -> getDoNotCacheSize
    41:48:com.taobao.weex.utils.cache.RegisterCache getInstance() -> getInstance
    96:111:boolean idle(boolean) -> idle
    92:93:void setDoNotCacheSize(int) -> setDoNotCacheSize
    60:61:void setEnable(boolean) -> setEnable
    78:85:void setEnableAutoScan(boolean) -> setEnableAutoScan
com.taobao.weex.utils.cache.RegisterCache$ComponentCache -> com.taobao.weex.utils.cache.RegisterCache$ComponentCache:
    172:176:void <init>(com.taobao.weex.utils.cache.RegisterCache,java.lang.String,com.taobao.weex.ui.IFComponentHolder,java.util.Map) -> <init>
com.taobao.weex.utils.cache.RegisterCache$ModuleCache -> com.taobao.weex.utils.cache.RegisterCache$ModuleCache:
    159:163:void <init>(com.taobao.weex.utils.cache.RegisterCache,java.lang.String,com.taobao.weex.bridge.ModuleFactory,boolean) -> <init>
com.taobao.weex.utils.tools.Info -> com.taobao.weex.utils.tools.Info:
    25:27:void <init>() -> <init>
    46:46:java.lang.String toString() -> toString
com.taobao.weex.utils.tools.LogDetail -> com.taobao.weex.utils.tools.LogDetail:
    33:54:void <init>() -> <init>
    75:76:void keyWorkds(java.lang.String) -> keyWorkds
    62:72:void name(java.lang.String) -> name
    57:59:void println() -> println
    83:85:void taskEnd() -> taskEnd
    79:80:void taskStart() -> taskStart
    46:46:java.lang.String toString() -> toString
com.taobao.weex.utils.tools.LogSwitch -> com.taobao.weex.utils.tools.LogSwitch:
    21:29:void <init>() -> <init>
    50:50:int getLog_switch() -> getLog_switch
    36:46:void setLog_switch() -> setLog_switch
com.taobao.weex.utils.tools.TaskInfo -> com.taobao.weex.utils.tools.TaskInfo:
    23:23:void <init>() -> <init>
    33:33:java.lang.String toString() -> toString
com.taobao.weex.utils.tools.Time -> com.taobao.weex.utils.tools.Time:
    23:23:void <init>() -> <init>
    58:59:void constructor() -> constructor
    76:78:void destructor() -> destructor
    62:63:void execTime() -> execTime
    70:73:void taskEnd() -> taskEnd
    66:67:void taskStart() -> taskStart
    45:45:java.lang.String toString() -> toString
    81:82:void waitTime() -> waitTime
com.taobao.weex.utils.tools.TimeCalculator -> com.taobao.weex.utils.tools.TimeCalculator:
    36:66:void <init>(com.taobao.weex.WXSDKInstance) -> <init>
    41:45:void addLog(com.taobao.weex.utils.tools.LogDetail) -> addLog
    48:51:com.taobao.weex.utils.tools.LogDetail createLogDetail(java.lang.String) -> createLogDetail
    55:63:void println() -> println
com.taobao.weex.wson.Wson -> com.taobao.weex.wson.Wson:
    86:770:void <clinit>() -> <clinit>
    50:50:void <init>() -> <init>
    50:50:java.util.List access$1000(java.lang.String,java.lang.Class) -> access$1000
    50:50:java.util.List access$1100(java.lang.String,java.lang.Class) -> access$1100
    50:50:java.lang.ThreadLocal access$600() -> access$600
    50:50:boolean access$700() -> access$700
    50:50:java.lang.String[] access$800() -> access$800
    50:50:androidx.collection.LruCache access$900() -> access$900
    802:817:java.util.List getBeanFields(java.lang.String,java.lang.Class) -> getBeanFields
    774:796:java.util.List getBeanMethod(java.lang.String,java.lang.Class) -> getBeanMethod
    94:104:java.lang.Object parse(byte[]) -> parse
    113:119:byte[] toWson(java.lang.Object) -> toWson
com.taobao.weex.wson.Wson$Builder -> com.taobao.weex.wson.Wson$Builder:
    360:361:void <clinit>() -> <clinit>
    355:355:void <init>(com.taobao.weex.wson.Wson$1) -> <init>
    365:378:void <init>() -> <init>
    355:355:byte[] access$400(com.taobao.weex.wson.Wson$Builder,java.lang.Object) -> access$400
    355:355:void access$500(com.taobao.weex.wson.Wson$Builder) -> access$500
    389:400:void close() -> close
    736:749:void ensureCapacity(int) -> ensureCapacity
    618:660:java.util.Map toMap(java.lang.Object) -> toMap
    382:385:byte[] toWson(java.lang.Object) -> toWson
    605:615:void writeAdapterObject(java.lang.Object) -> writeAdapterObject
    600:602:void writeByte(byte) -> writeByte
    696:697:void writeDouble(double) -> writeDouble
    700:706:void writeFloat(float) -> writeFloat
    709:718:void writeLong(long) -> writeLong
    577:596:void writeMap(java.util.Map) -> writeMap
    664:665:void writeMapKeyUTF16(java.lang.String) -> writeMapKeyUTF16
    512:564:void writeNumber(java.lang.Number) -> writeNumber
    403:509:void writeObject(java.lang.Object) -> writeObject
    725:732:void writeUInt(int) -> writeUInt
    674:692:void writeUTF16String(java.lang.CharSequence) -> writeUTF16String
    721:722:void writeVarInt(int) -> writeVarInt
com.taobao.weex.wson.Wson$Parser -> com.taobao.weex.wson.Wson$Parser:
    126:126:void <init>(byte[],com.taobao.weex.wson.Wson$1) -> <init>
    128:140:void <init>(byte[]) -> <init>
    126:126:java.lang.Object access$100(com.taobao.weex.wson.Wson$Parser) -> access$100
    126:126:void access$200(com.taobao.weex.wson.Wson$Parser) -> access$200
    148:154:void close() -> close
    144:144:java.lang.Object parse() -> parse
    203:208:java.lang.Object readArray() -> readArray
    331:339:java.lang.Object readDouble() -> readDouble
    343:348:java.lang.Object readFloat() -> readFloat
    318:327:long readLong() -> readLong
    192:199:java.lang.Object readMap() -> readMap
    219:261:java.lang.String readMapKeyUTF16() -> readMapKeyUTF16
    157:184:java.lang.Object readObject() -> readObject
    212:214:byte readType() -> readType
    302:314:int readUInt() -> readUInt
    265:284:java.lang.String readUTF16String() -> readUTF16String
    292:298:int readVarInt() -> readVarInt
com.taobao.weex.wson.WsonUtils -> com.taobao.weex.wson.WsonUtils:
    27:27:void <init>() -> <init>
    32:39:java.lang.Object parseWson(byte[]) -> parseWson
    44:51:byte[] toWson(java.lang.Object) -> toWson
dc.squareup.HttpConstants -> b.a.a:
    java.lang.String defaultUAConstants -> a
    1:1:java.lang.String getDefaultUA() -> a
    1:1:void setUA(java.lang.String) -> b
dc.squareup.cookie.CookieCenter -> b.a.b.a:
    java.util.List providers -> a
    1:1:void <clinit>() -> <clinit>
    1:4:java.lang.String getCookies(java.lang.String) -> a
    1:3:void putCookies(java.lang.String,java.lang.String) -> b
    1:3:java.lang.String removeAllCookie() -> c
    1:3:java.lang.String removeSessionCookie() -> d
dc.squareup.cookie.CookieCenter$ICookieProvider -> b.a.b.a$a:
    java.lang.String getCookieByUrl(java.lang.String) -> a
    boolean addCookie(java.lang.String,java.lang.String) -> b
dc.squareup.okhttp3.Address -> b.a.c.a:
    dc.squareup.okhttp3.HttpUrl url -> a
    javax.net.ssl.HostnameVerifier hostnameVerifier -> j
    java.util.List connectionSpecs -> f
    javax.net.ssl.SSLSocketFactory sslSocketFactory -> i
    javax.net.SocketFactory socketFactory -> c
    java.util.List protocols -> e
    dc.squareup.okhttp3.Authenticator proxyAuthenticator -> d
    java.net.ProxySelector proxySelector -> g
    java.net.Proxy proxy -> h
    dc.squareup.okhttp3.CertificatePinner certificatePinner -> k
    dc.squareup.okhttp3.Dns dns -> b
    1:37:void <init>(java.lang.String,int,dc.squareup.okhttp3.Dns,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,dc.squareup.okhttp3.CertificatePinner,dc.squareup.okhttp3.Authenticator,java.net.Proxy,java.util.List,java.util.List,java.net.ProxySelector) -> <init>
    1:1:dc.squareup.okhttp3.CertificatePinner certificatePinner() -> a
    1:1:java.util.List connectionSpecs() -> b
    1:1:dc.squareup.okhttp3.Dns dns() -> c
    1:10:boolean equalsNonHost(dc.squareup.okhttp3.Address) -> d
    1:1:javax.net.ssl.HostnameVerifier hostnameVerifier() -> e
    1:3:boolean equals(java.lang.Object) -> equals
    1:1:java.util.List protocols() -> f
    1:1:java.net.Proxy proxy() -> g
    1:1:dc.squareup.okhttp3.Authenticator proxyAuthenticator() -> h
    1:10:int hashCode() -> hashCode
    1:1:java.net.ProxySelector proxySelector() -> i
    1:1:javax.net.SocketFactory socketFactory() -> j
    1:1:javax.net.ssl.SSLSocketFactory sslSocketFactory() -> k
    1:1:dc.squareup.okhttp3.HttpUrl url() -> l
    1:12:java.lang.String toString() -> toString
dc.squareup.okhttp3.Authenticator -> b.a.c.b:
    dc.squareup.okhttp3.Authenticator NONE -> a
    1:1:void <clinit>() -> <clinit>
    dc.squareup.okhttp3.Request authenticate(dc.squareup.okhttp3.Route,dc.squareup.okhttp3.Response) -> a
dc.squareup.okhttp3.Authenticator$1 -> b.a.c.b$a:
    1:1:void <init>() -> <init>
    dc.squareup.okhttp3.Request authenticate(dc.squareup.okhttp3.Route,dc.squareup.okhttp3.Response) -> a
dc.squareup.okhttp3.Cache -> b.a.c.c:
    dc.squareup.okhttp3.internal.cache.InternalCache internalCache -> a
dc.squareup.okhttp3.CacheControl -> b.a.c.d:
    boolean onlyIfCached -> j
    int maxStaleSeconds -> h
    boolean noTransform -> k
    java.lang.String headerValue -> m
    int minFreshSeconds -> i
    boolean immutable -> l
    int sMaxAgeSeconds -> d
    int maxAgeSeconds -> c
    boolean isPrivate -> e
    boolean isPublic -> f
    boolean mustRevalidate -> g
    boolean noCache -> a
    boolean noStore -> b
    1:11:void <clinit>() -> <clinit>
    1:14:void <init>(boolean,boolean,int,int,boolean,boolean,boolean,int,int,boolean,boolean,boolean,java.lang.String) -> <init>
    15:27:void <init>(dc.squareup.okhttp3.CacheControl$Builder) -> <init>
    1:16:java.lang.String headerValue() -> a
    1:1:boolean isPrivate() -> b
    1:1:boolean isPublic() -> c
    1:1:int maxAgeSeconds() -> d
    1:1:int maxStaleSeconds() -> e
    1:1:int minFreshSeconds() -> f
    1:1:boolean mustRevalidate() -> g
    1:1:boolean noCache() -> h
    1:1:boolean noStore() -> i
    1:1:boolean onlyIfCached() -> j
    1:80:dc.squareup.okhttp3.CacheControl parse(dc.squareup.okhttp3.Headers) -> k
    1:2:java.lang.String toString() -> toString
dc.squareup.okhttp3.CacheControl$Builder -> b.a.c.d$a:
    boolean onlyIfCached -> f
    int maxStaleSeconds -> d
    boolean noTransform -> g
    int minFreshSeconds -> e
    boolean immutable -> h
    boolean noCache -> a
    boolean noStore -> b
    int maxAgeSeconds -> c
    1:6:void <init>() -> <init>
    1:1:dc.squareup.okhttp3.CacheControl build() -> a
    1:3:dc.squareup.okhttp3.CacheControl$Builder maxStale(int,java.util.concurrent.TimeUnit) -> b
    1:1:dc.squareup.okhttp3.CacheControl$Builder noCache() -> c
    1:1:dc.squareup.okhttp3.CacheControl$Builder onlyIfCached() -> d
dc.squareup.okhttp3.Call -> b.a.c.e:
    void enqueue(dc.squareup.okhttp3.Callback) -> A
    dc.squareup.okio.Timeout timeout() -> i
dc.squareup.okhttp3.Callback -> b.a.c.f:
dc.squareup.okhttp3.CertificatePinner -> b.a.c.g:
    dc.squareup.okhttp3.internal.tls.CertificateChainCleaner certificateChainCleaner -> b
    dc.squareup.okhttp3.CertificatePinner DEFAULT -> c
    java.util.Set pins -> a
    1:1:void <clinit>() -> <clinit>
    1:3:void <init>(java.util.Set,dc.squareup.okhttp3.internal.tls.CertificateChainCleaner) -> <init>
    1:43:void check(java.lang.String,java.util.List) -> a
    1:5:java.util.List findMatchingPins(java.lang.String) -> b
    1:5:java.lang.String pin(java.security.cert.Certificate) -> c
    1:1:dc.squareup.okio.ByteString sha1(java.security.cert.X509Certificate) -> d
    1:1:dc.squareup.okio.ByteString sha256(java.security.cert.X509Certificate) -> e
    1:3:boolean equals(java.lang.Object) -> equals
    1:1:dc.squareup.okhttp3.CertificatePinner withCertificateChainCleaner(dc.squareup.okhttp3.internal.tls.CertificateChainCleaner) -> f
    1:2:int hashCode() -> hashCode
dc.squareup.okhttp3.CertificatePinner$Builder -> b.a.c.g$a:
    java.util.List pins -> a
    1:2:void <init>() -> <init>
    1:1:dc.squareup.okhttp3.CertificatePinner build() -> a
dc.squareup.okhttp3.CertificatePinner$Pin -> b.a.c.g$b:
    dc.squareup.okio.ByteString hash -> d
    java.lang.String pattern -> a
    java.lang.String hashAlgorithm -> c
    java.lang.String canonicalHostname -> b
    1:10:boolean matches(java.lang.String) -> a
    1:4:boolean equals(java.lang.Object) -> equals
    1:3:int hashCode() -> hashCode
    1:1:java.lang.String toString() -> toString
dc.squareup.okhttp3.CipherSuite -> b.a.c.h:
    dc.squareup.okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 -> m
    dc.squareup.okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 -> l
    dc.squareup.okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 -> o
    dc.squareup.okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 -> n
    dc.squareup.okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA -> i
    dc.squareup.okhttp3.CipherSuite TLS_RSA_WITH_AES_256_GCM_SHA384 -> h
    dc.squareup.okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 -> k
    dc.squareup.okhttp3.CipherSuite TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA -> j
    dc.squareup.okhttp3.CipherSuite TLS_AES_256_CCM_8_SHA256 -> u
    dc.squareup.okhttp3.CipherSuite TLS_AES_128_CCM_SHA256 -> t
    dc.squareup.okhttp3.CipherSuite TLS_AES_128_GCM_SHA256 -> q
    dc.squareup.okhttp3.CipherSuite TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 -> p
    dc.squareup.okhttp3.CipherSuite TLS_CHACHA20_POLY1305_SHA256 -> s
    dc.squareup.okhttp3.CipherSuite TLS_AES_256_GCM_SHA384 -> r
    java.util.Map INSTANCES -> c
    dc.squareup.okhttp3.CipherSuite TLS_RSA_WITH_AES_128_CBC_SHA -> e
    dc.squareup.okhttp3.CipherSuite TLS_RSA_WITH_3DES_EDE_CBC_SHA -> d
    dc.squareup.okhttp3.CipherSuite TLS_RSA_WITH_AES_128_GCM_SHA256 -> g
    java.lang.String javaName -> a
    dc.squareup.okhttp3.CipherSuite TLS_RSA_WITH_AES_256_CBC_SHA -> f
    java.util.Comparator ORDER_BY_NAME -> b
    1:355:void <clinit>() -> <clinit>
    1:5:void <init>(java.lang.String) -> <init>
    0:10:dc.squareup.okhttp3.CipherSuite forJavaName(java.lang.String) -> a
    1:5:java.util.List forJavaNames(java.lang.String[]) -> b
    1:2:dc.squareup.okhttp3.CipherSuite init(java.lang.String,int) -> c
    1:4:java.lang.String secondaryName(java.lang.String) -> d
    1:1:java.lang.String toString() -> toString
dc.squareup.okhttp3.CipherSuite$1 -> b.a.c.h$a:
    1:1:void <init>() -> <init>
    2:8:int compare(java.lang.String,java.lang.String) -> a
    1:1:int compare(java.lang.Object,java.lang.Object) -> compare
dc.squareup.okhttp3.Connection -> b.a.c.i:
dc.squareup.okhttp3.ConnectionPool -> b.a.c.j:
    java.util.Deque connections -> d
    java.lang.Runnable cleanupRunnable -> c
    dc.squareup.okhttp3.internal.connection.RouteDatabase routeDatabase -> e
    long keepAliveDurationNs -> b
    boolean cleanupRunning -> f
    java.util.concurrent.Executor executor -> g
    int maxIdleConnections -> a
    1:9:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    2:41:void <init>(int,long,java.util.concurrent.TimeUnit) -> <init>
    1:51:long cleanup(long) -> a
    1:7:boolean connectionBecameIdle(dc.squareup.okhttp3.internal.connection.RealConnection) -> b
    1:6:java.net.Socket deduplicate(dc.squareup.okhttp3.Address,dc.squareup.okhttp3.internal.connection.StreamAllocation) -> c
    1:4:dc.squareup.okhttp3.internal.connection.RealConnection get(dc.squareup.okhttp3.Address,dc.squareup.okhttp3.internal.connection.StreamAllocation,dc.squareup.okhttp3.Route) -> d
    1:27:int pruneAndGetAllocationCount(dc.squareup.okhttp3.internal.connection.RealConnection,long) -> e
    1:6:void put(dc.squareup.okhttp3.internal.connection.RealConnection) -> f
dc.squareup.okhttp3.ConnectionPool$1 -> b.a.c.j$a:
    dc.squareup.okhttp3.ConnectionPool this$0 -> a
    1:1:void <init>(dc.squareup.okhttp3.ConnectionPool) -> <init>
    1:11:void run() -> run
dc.squareup.okhttp3.ConnectionSpec -> b.a.c.k:
    java.lang.String[] tlsVersions -> d
    boolean tls -> a
    dc.squareup.okhttp3.ConnectionSpec MODERN_TLS -> e
    boolean supportsTlsExtensions -> b
    dc.squareup.okhttp3.ConnectionSpec COMPATIBLE_TLS -> f
    java.lang.String[] cipherSuites -> c
    dc.squareup.okhttp3.ConnectionSpec CLEARTEXT -> g
    1:69:void <clinit>() -> <clinit>
    1:5:void <init>(dc.squareup.okhttp3.ConnectionSpec$Builder) -> <init>
    1:7:void apply(javax.net.ssl.SSLSocket,boolean) -> a
    1:1:java.util.List cipherSuites() -> b
    1:14:boolean isCompatible(javax.net.ssl.SSLSocket) -> c
    1:1:boolean isTls() -> d
    1:21:dc.squareup.okhttp3.ConnectionSpec supportedSpec(javax.net.ssl.SSLSocket,boolean) -> e
    1:10:boolean equals(java.lang.Object) -> equals
    1:1:boolean supportsTlsExtensions() -> f
    1:1:java.util.List tlsVersions() -> g
    1:4:int hashCode() -> hashCode
    1:7:java.lang.String toString() -> toString
dc.squareup.okhttp3.ConnectionSpec$Builder -> b.a.c.k$a:
    boolean tls -> a
    java.lang.String[] tlsVersions -> c
    java.lang.String[] cipherSuites -> b
    boolean supportsTlsExtensions -> d
    1:2:void <init>(boolean) -> <init>
    3:7:void <init>(dc.squareup.okhttp3.ConnectionSpec) -> <init>
    1:1:dc.squareup.okhttp3.ConnectionSpec build() -> a
    1:8:dc.squareup.okhttp3.ConnectionSpec$Builder cipherSuites(dc.squareup.okhttp3.CipherSuite[]) -> b
    9:17:dc.squareup.okhttp3.ConnectionSpec$Builder cipherSuites(java.lang.String[]) -> c
    1:3:dc.squareup.okhttp3.ConnectionSpec$Builder supportsTlsExtensions(boolean) -> d
    1:9:dc.squareup.okhttp3.ConnectionSpec$Builder tlsVersions(dc.squareup.okhttp3.TlsVersion[]) -> e
    10:18:dc.squareup.okhttp3.ConnectionSpec$Builder tlsVersions(java.lang.String[]) -> f
dc.squareup.okhttp3.Cookie -> b.a.c.l:
    boolean hostOnly -> i
    long expiresAt -> c
    java.util.regex.Pattern MONTH_PATTERN -> k
    java.util.regex.Pattern YEAR_PATTERN -> j
    java.util.regex.Pattern TIME_PATTERN -> m
    java.util.regex.Pattern DAY_OF_MONTH_PATTERN -> l
    boolean secure -> f
    java.lang.String name -> a
    boolean httpOnly -> g
    boolean persistent -> h
    java.lang.String value -> b
    java.lang.String path -> e
    java.lang.String domain -> d
    1:7:void <clinit>() -> <clinit>
    1:10:void <init>(java.lang.String,java.lang.String,long,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean) -> <init>
    1:1:int dateCharacterOffset(java.lang.String,int,int,boolean) -> a
    1:7:boolean domainMatch(java.lang.String,java.lang.String) -> b
    2:101:dc.squareup.okhttp3.Cookie parse(long,dc.squareup.okhttp3.HttpUrl,java.lang.String) -> c
    1:1:dc.squareup.okhttp3.Cookie parse(dc.squareup.okhttp3.HttpUrl,java.lang.String) -> d
    1:13:java.util.List parseAll(dc.squareup.okhttp3.HttpUrl,dc.squareup.okhttp3.Headers) -> e
    1:6:boolean equals(java.lang.Object) -> equals
    1:10:java.lang.String parseDomain(java.lang.String) -> f
    1:59:long parseExpires(java.lang.String,int,int) -> g
    1:8:long parseMaxAge(java.lang.String) -> h
    1:9:int hashCode() -> hashCode
    2:33:java.lang.String toString(boolean) -> i
    1:1:java.lang.String toString() -> toString
dc.squareup.okhttp3.CookieJar -> b.a.c.m:
    dc.squareup.okhttp3.CookieJar NO_COOKIES -> a
    1:1:void <clinit>() -> <clinit>
    void saveFromResponse(dc.squareup.okhttp3.HttpUrl,java.util.List) -> a
dc.squareup.okhttp3.CookieJar$1 -> b.a.c.m$a:
    1:1:void <init>() -> <init>
    void saveFromResponse(dc.squareup.okhttp3.HttpUrl,java.util.List) -> a
dc.squareup.okhttp3.Dispatcher -> b.a.c.n:
    java.lang.Runnable idleCallback -> c
    java.util.concurrent.ExecutorService executorService -> d
    java.util.Deque runningSyncCalls -> g
    java.util.Deque runningAsyncCalls -> f
    java.util.Deque readyAsyncCalls -> e
    int maxRequestsPerHost -> b
    int maxRequests -> a
    1:1:void <clinit>() -> <clinit>
    20:35:void <init>() -> <init>
    1:5:void enqueue(dc.squareup.okhttp3.RealCall$AsyncCall) -> a
    1:1:void executed(dc.squareup.okhttp3.RealCall) -> b
    0:5:java.util.concurrent.ExecutorService executorService() -> c
    1:1:void finished(dc.squareup.okhttp3.RealCall$AsyncCall) -> d
    2:2:void finished(dc.squareup.okhttp3.RealCall) -> e
    3:14:void finished(java.util.Deque,java.lang.Object) -> f
    1:22:boolean promoteAndExecute() -> g
    1:1:int runningCallsCount() -> h
    1:3:int runningCallsForHost(dc.squareup.okhttp3.RealCall$AsyncCall) -> i
dc.squareup.okhttp3.Dns -> b.a.c.o:
    dc.squareup.okhttp3.Dns SYSTEM -> a
    1:1:void <clinit>() -> <clinit>
dc.squareup.okhttp3.Dns$1 -> b.a.c.o$a:
    1:1:void <init>() -> <init>
    1:7:java.util.List lookup(java.lang.String) -> lookup
dc.squareup.okhttp3.EventListener -> b.a.c.p:
    dc.squareup.okhttp3.EventListener NONE -> a
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    void callEnd(dc.squareup.okhttp3.Call) -> a
    void callFailed(dc.squareup.okhttp3.Call,java.io.IOException) -> b
    void callStart(dc.squareup.okhttp3.Call) -> c
    void connectEnd(dc.squareup.okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy,dc.squareup.okhttp3.Protocol) -> d
    void connectFailed(dc.squareup.okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy,dc.squareup.okhttp3.Protocol,java.io.IOException) -> e
    void connectStart(dc.squareup.okhttp3.Call,java.net.InetSocketAddress,java.net.Proxy) -> f
    void connectionAcquired(dc.squareup.okhttp3.Call,dc.squareup.okhttp3.Connection) -> g
    void connectionReleased(dc.squareup.okhttp3.Call,dc.squareup.okhttp3.Connection) -> h
    void dnsEnd(dc.squareup.okhttp3.Call,java.lang.String,java.util.List) -> i
    void dnsStart(dc.squareup.okhttp3.Call,java.lang.String) -> j
    1:1:dc.squareup.okhttp3.EventListener$Factory factory(dc.squareup.okhttp3.EventListener) -> k
    void requestBodyEnd(dc.squareup.okhttp3.Call,long) -> l
    void requestBodyStart(dc.squareup.okhttp3.Call) -> m
    void requestHeadersEnd(dc.squareup.okhttp3.Call,dc.squareup.okhttp3.Request) -> n
    void requestHeadersStart(dc.squareup.okhttp3.Call) -> o
    void responseBodyEnd(dc.squareup.okhttp3.Call,long) -> p
    void responseBodyStart(dc.squareup.okhttp3.Call) -> q
    void responseHeadersEnd(dc.squareup.okhttp3.Call,dc.squareup.okhttp3.Response) -> r
    void responseHeadersStart(dc.squareup.okhttp3.Call) -> s
    void secureConnectEnd(dc.squareup.okhttp3.Call,dc.squareup.okhttp3.Handshake) -> t
    void secureConnectStart(dc.squareup.okhttp3.Call) -> u
dc.squareup.okhttp3.EventListener$1 -> b.a.c.p$a:
    1:1:void <init>() -> <init>
dc.squareup.okhttp3.EventListener$2 -> b.a.c.p$b:
    dc.squareup.okhttp3.EventListener val$listener -> a
    1:1:void <init>(dc.squareup.okhttp3.EventListener) -> <init>
    1:1:dc.squareup.okhttp3.EventListener create(dc.squareup.okhttp3.Call) -> a
dc.squareup.okhttp3.EventListener$Factory -> b.a.c.p$c:
    dc.squareup.okhttp3.EventListener create(dc.squareup.okhttp3.Call) -> a
dc.squareup.okhttp3.Handshake -> b.a.c.q:
    dc.squareup.okhttp3.TlsVersion tlsVersion -> a
    java.util.List localCertificates -> d
    java.util.List peerCertificates -> c
    dc.squareup.okhttp3.CipherSuite cipherSuite -> b
    1:5:void <init>(dc.squareup.okhttp3.TlsVersion,dc.squareup.okhttp3.CipherSuite,java.util.List,java.util.List) -> <init>
    1:1:dc.squareup.okhttp3.CipherSuite cipherSuite() -> a
    1:32:dc.squareup.okhttp3.Handshake get(javax.net.ssl.SSLSession) -> b
    1:1:java.util.List peerCertificates() -> c
    1:6:boolean equals(java.lang.Object) -> equals
    1:4:int hashCode() -> hashCode
dc.squareup.okhttp3.Headers -> b.a.c.r:
    java.lang.String[] namesAndValues -> a
    1:2:void <init>(dc.squareup.okhttp3.Headers$Builder) -> <init>
    1:9:void checkName(java.lang.String) -> a
    1:7:void checkValue(java.lang.String,java.lang.String) -> b
    1:1:java.lang.String get(java.lang.String) -> c
    2:4:java.lang.String get(java.lang.String[],java.lang.String) -> d
    1:1:java.lang.String name(int) -> e
    1:2:boolean equals(java.lang.Object) -> equals
    1:5:java.util.Set names() -> f
    1:2:dc.squareup.okhttp3.Headers$Builder newBuilder() -> g
    1:1:int size() -> h
    1:1:int hashCode() -> hashCode
    1:10:java.util.Map toMultimap() -> i
    1:1:java.lang.String value(int) -> j
    1:9:java.util.List values(java.lang.String) -> k
    1:5:java.lang.String toString() -> toString
dc.squareup.okhttp3.Headers$Builder -> b.a.c.r$a:
    java.util.List namesAndValues -> a
    1:2:void <init>() -> <init>
    7:9:dc.squareup.okhttp3.Headers$Builder add(java.lang.String,java.lang.String) -> a
    1:9:dc.squareup.okhttp3.Headers$Builder addLenient(java.lang.String) -> b
    10:11:dc.squareup.okhttp3.Headers$Builder addLenient(java.lang.String,java.lang.String) -> c
    1:1:dc.squareup.okhttp3.Headers build() -> d
    1:4:dc.squareup.okhttp3.Headers$Builder removeAll(java.lang.String) -> e
    3:6:dc.squareup.okhttp3.Headers$Builder set(java.lang.String,java.lang.String) -> f
dc.squareup.okhttp3.HttpUrl -> b.a.c.s:
    java.lang.String fragment -> g
    java.lang.String url -> h
    java.util.List queryNamesAndValues -> f
    char[] HEX_DIGITS -> i
    java.lang.String scheme -> a
    int port -> e
    java.lang.String password -> c
    java.lang.String username -> b
    java.lang.String host -> d
    1:1:void <clinit>() -> <clinit>
    1:14:void <init>(dc.squareup.okhttp3.HttpUrl$Builder) -> <init>
    1:2:dc.squareup.okhttp3.HttpUrl resolve(java.lang.String) -> A
    1:1:java.lang.String scheme() -> B
    1:10:java.net.URI uri() -> C
    1:25:java.lang.String canonicalize(java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset) -> a
    78:79:java.lang.String canonicalize(java.lang.String,java.lang.String,boolean,boolean,boolean,boolean) -> b
    26:75:void canonicalize(dc.squareup.okio.Buffer,java.lang.String,int,int,java.lang.String,boolean,boolean,boolean,boolean,java.nio.charset.Charset) -> c
    1:3:int defaultPort(java.lang.String) -> d
    1:3:java.lang.String encodedFragment() -> e
    1:1:boolean equals(java.lang.Object) -> equals
    1:4:java.lang.String encodedPassword() -> f
    1:3:java.lang.String encodedPath() -> g
    1:7:java.util.List encodedPathSegments() -> h
    1:1:int hashCode() -> hashCode
    1:4:java.lang.String encodedQuery() -> i
    1:4:java.lang.String encodedUsername() -> j
    1:1:dc.squareup.okhttp3.HttpUrl get(java.lang.String) -> k
    1:1:java.lang.String host() -> l
    1:1:boolean isHttps() -> m
    1:8:void namesAndValuesToQueryString(java.lang.StringBuilder,java.util.List) -> n
    1:11:dc.squareup.okhttp3.HttpUrl$Builder newBuilder() -> o
    12:12:dc.squareup.okhttp3.HttpUrl$Builder newBuilder(java.lang.String) -> p
    1:3:void pathSegmentsToString(java.lang.StringBuilder,java.util.List) -> q
    9:20:java.lang.String percentDecode(java.lang.String,int,int,boolean) -> r
    1:1:java.lang.String percentDecode(java.lang.String,boolean) -> s
    2:8:java.util.List percentDecode(java.util.List,boolean) -> t
    1:1:java.lang.String toString() -> toString
    21:35:void percentDecode(dc.squareup.okio.Buffer,java.lang.String,int,int,boolean) -> u
    1:3:boolean percentEncoded(java.lang.String,int,int) -> v
    1:1:int port() -> w
    1:4:java.lang.String query() -> x
    1:14:java.util.List queryStringToNamesAndValues(java.lang.String) -> y
    1:5:java.lang.String redact() -> z
dc.squareup.okhttp3.HttpUrl$Builder -> b.a.c.s$a:
    java.lang.String encodedFragment -> h
    java.util.List encodedPathSegments -> f
    java.lang.String scheme -> a
    int port -> e
    java.util.List encodedQueryNamesAndValues -> g
    java.lang.String encodedPassword -> c
    java.lang.String encodedUsername -> b
    java.lang.String host -> d
    1:11:void <init>() -> <init>
    1:5:dc.squareup.okhttp3.HttpUrl build() -> a
    1:2:java.lang.String canonicalizeHost(java.lang.String,int,int) -> b
    1:1:int effectivePort() -> c
    1:2:dc.squareup.okhttp3.HttpUrl$Builder encodedQuery(java.lang.String) -> d
    1:5:dc.squareup.okhttp3.HttpUrl$Builder host(java.lang.String) -> e
    1:1:boolean isDot(java.lang.String) -> f
    1:4:boolean isDotDot(java.lang.String) -> g
    1:196:dc.squareup.okhttp3.HttpUrl$Builder parse(dc.squareup.okhttp3.HttpUrl,java.lang.String) -> h
    1:2:int parsePort(java.lang.String,int,int) -> i
    1:2:dc.squareup.okhttp3.HttpUrl$Builder password(java.lang.String) -> j
    1:7:void pop() -> k
    1:2:dc.squareup.okhttp3.HttpUrl$Builder port(int) -> l
    1:4:int portColonOffset(java.lang.String,int,int) -> m
    1:16:void push(java.lang.String,int,int,boolean,boolean) -> n
    1:20:dc.squareup.okhttp3.HttpUrl$Builder reencodeForUri() -> o
    1:22:void resolvePath(java.lang.String,int,int) -> p
    1:7:dc.squareup.okhttp3.HttpUrl$Builder scheme(java.lang.String) -> q
    1:5:int schemeDelimiterOffset(java.lang.String,int,int) -> r
    1:1:int slashCount(java.lang.String,int,int) -> s
    1:2:dc.squareup.okhttp3.HttpUrl$Builder username(java.lang.String) -> t
    1:49:java.lang.String toString() -> toString
dc.squareup.okhttp3.Interceptor -> b.a.c.t:
    dc.squareup.okhttp3.Response intercept(dc.squareup.okhttp3.Interceptor$Chain) -> a
dc.squareup.okhttp3.Interceptor$Chain -> b.a.c.t$a:
    dc.squareup.okhttp3.Response proceed(dc.squareup.okhttp3.Request) -> a
    int readTimeoutMillis() -> b
    int writeTimeoutMillis() -> c
    int connectTimeoutMillis() -> d
    dc.squareup.okhttp3.Request request() -> e
dc.squareup.okhttp3.MediaType -> b.a.c.u:
    java.util.regex.Pattern TYPE_SUBTYPE -> c
    java.util.regex.Pattern PARAMETER -> d
    java.lang.String mediaType -> a
    java.lang.String charset -> b
    1:2:void <clinit>() -> <clinit>
    1:5:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    1:1:java.nio.charset.Charset charset() -> a
    2:2:java.nio.charset.Charset charset(java.nio.charset.Charset) -> b
    1:71:dc.squareup.okhttp3.MediaType get(java.lang.String) -> c
    1:1:dc.squareup.okhttp3.MediaType parse(java.lang.String) -> d
    1:1:boolean equals(java.lang.Object) -> equals
    1:1:int hashCode() -> hashCode
    1:1:java.lang.String toString() -> toString
dc.squareup.okhttp3.OkHttpClient -> b.a.c.v:
    dc.squareup.okhttp3.CertificatePinner certificatePinner -> p
    javax.net.ssl.SSLSocketFactory tempSSLFactory -> E
    dc.squareup.okhttp3.internal.cache.InternalCache internalCache -> k
    boolean followSslRedirects -> u
    boolean retryOnConnectionFailure -> w
    javax.net.ssl.HostnameVerifier hostnameVerifier -> o
    dc.squareup.okhttp3.Cache cache -> j
    int writeTimeout -> A
    java.util.List networkInterceptors -> f
    dc.squareup.okhttp3.Authenticator authenticator -> r
    java.util.List connectionSpecs -> d
    java.util.List DEFAULT_PROTOCOLS -> C
    int connectTimeout -> y
    javax.net.SocketFactory socketFactory -> l
    dc.squareup.okhttp3.CookieJar cookieJar -> i
    dc.squareup.okhttp3.internal.tls.CertificateChainCleaner certificateChainCleaner -> n
    dc.squareup.okhttp3.Dns dns -> t
    java.net.ProxySelector proxySelector -> h
    dc.squareup.okhttp3.ConnectionPool connectionPool -> s
    boolean followRedirects -> v
    java.net.Proxy proxy -> b
    dc.squareup.okhttp3.Dispatcher dispatcher -> a
    int pingInterval -> B
    dc.squareup.okhttp3.EventListener$Factory eventListenerFactory -> g
    javax.net.ssl.SSLSocketFactory sslSocketFactory -> m
    dc.squareup.okhttp3.Authenticator proxyAuthenticator -> q
    int readTimeout -> z
    java.util.List interceptors -> e
    java.util.List DEFAULT_CONNECTION_SPECS -> D
    int callTimeout -> x
    java.util.List protocols -> c
    1:108:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    2:67:void <init>(dc.squareup.okhttp3.OkHttpClient$Builder) -> <init>
    1:1:int readTimeoutMillis() -> B
    1:1:boolean retryOnConnectionFailure() -> C
    1:1:javax.net.SocketFactory socketFactory() -> D
    1:1:javax.net.ssl.SSLSocketFactory sslSocketFactory() -> E
    1:1:int writeTimeoutMillis() -> F
    1:1:dc.squareup.okhttp3.Authenticator authenticator() -> a
    1:1:int callTimeoutMillis() -> b
    1:1:dc.squareup.okhttp3.CertificatePinner certificatePinner() -> c
    1:1:int connectTimeoutMillis() -> d
    1:1:dc.squareup.okhttp3.ConnectionPool connectionPool() -> e
    1:1:java.util.List connectionSpecs() -> f
    1:1:dc.squareup.okhttp3.CookieJar cookieJar() -> g
    1:1:dc.squareup.okhttp3.Dispatcher dispatcher() -> h
    1:1:dc.squareup.okhttp3.Dns dns() -> j
    1:1:dc.squareup.okhttp3.EventListener$Factory eventListenerFactory() -> k
    1:1:boolean followRedirects() -> l
    1:1:boolean followSslRedirects() -> m
    1:1:javax.net.ssl.HostnameVerifier hostnameVerifier() -> n
    1:1:java.util.List interceptors() -> o
    1:1:dc.squareup.okhttp3.internal.cache.InternalCache internalCache() -> p
    1:1:java.util.List networkInterceptors() -> q
    1:1:dc.squareup.okhttp3.OkHttpClient$Builder newBuilder() -> r
    1:1:dc.squareup.okhttp3.Call newCall(dc.squareup.okhttp3.Request) -> s
    1:5:javax.net.ssl.SSLSocketFactory newSslSocketFactory(javax.net.ssl.X509TrustManager) -> t
    1:2:dc.squareup.okhttp3.WebSocket newWebSocket(dc.squareup.okhttp3.Request,dc.squareup.okhttp3.WebSocketListener) -> u
    1:1:int pingIntervalMillis() -> v
    1:1:java.util.List protocols() -> w
    1:1:java.net.Proxy proxy() -> x
    1:1:dc.squareup.okhttp3.Authenticator proxyAuthenticator() -> y
    1:1:java.net.ProxySelector proxySelector() -> z
dc.squareup.okhttp3.OkHttpClient$1 -> b.a.c.v$a:
    1:1:void <init>() -> <init>
    1:1:void addLenient(dc.squareup.okhttp3.Headers$Builder,java.lang.String) -> a
    2:2:void addLenient(dc.squareup.okhttp3.Headers$Builder,java.lang.String,java.lang.String) -> b
    1:1:void apply(dc.squareup.okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean) -> c
    1:1:int code(dc.squareup.okhttp3.Response$Builder) -> d
    1:1:boolean connectionBecameIdle(dc.squareup.okhttp3.ConnectionPool,dc.squareup.okhttp3.internal.connection.RealConnection) -> e
    1:1:java.net.Socket deduplicate(dc.squareup.okhttp3.ConnectionPool,dc.squareup.okhttp3.Address,dc.squareup.okhttp3.internal.connection.StreamAllocation) -> f
    1:1:boolean equalsNonHost(dc.squareup.okhttp3.Address,dc.squareup.okhttp3.Address) -> g
    1:1:dc.squareup.okhttp3.internal.connection.RealConnection get(dc.squareup.okhttp3.ConnectionPool,dc.squareup.okhttp3.Address,dc.squareup.okhttp3.internal.connection.StreamAllocation,dc.squareup.okhttp3.Route) -> h
    1:1:dc.squareup.okhttp3.Call newWebSocketCall(dc.squareup.okhttp3.OkHttpClient,dc.squareup.okhttp3.Request) -> i
    1:1:void put(dc.squareup.okhttp3.ConnectionPool,dc.squareup.okhttp3.internal.connection.RealConnection) -> j
    1:1:dc.squareup.okhttp3.internal.connection.RouteDatabase routeDatabase(dc.squareup.okhttp3.ConnectionPool) -> k
    1:1:dc.squareup.okhttp3.internal.connection.StreamAllocation streamAllocation(dc.squareup.okhttp3.Call) -> l
    1:1:java.io.IOException timeoutExit(dc.squareup.okhttp3.Call,java.io.IOException) -> m
dc.squareup.okhttp3.OkHttpClient$Builder -> b.a.c.v$b:
    dc.squareup.okhttp3.CertificatePinner certificatePinner -> p
    dc.squareup.okhttp3.internal.cache.InternalCache internalCache -> k
    boolean followSslRedirects -> u
    boolean retryOnConnectionFailure -> w
    javax.net.ssl.HostnameVerifier hostnameVerifier -> o
    dc.squareup.okhttp3.Cache cache -> j
    int writeTimeout -> A
    java.util.List networkInterceptors -> f
    dc.squareup.okhttp3.Authenticator authenticator -> r
    java.util.List connectionSpecs -> d
    int connectTimeout -> y
    javax.net.SocketFactory socketFactory -> l
    dc.squareup.okhttp3.CookieJar cookieJar -> i
    dc.squareup.okhttp3.internal.tls.CertificateChainCleaner certificateChainCleaner -> n
    dc.squareup.okhttp3.Dns dns -> t
    java.net.ProxySelector proxySelector -> h
    dc.squareup.okhttp3.ConnectionPool connectionPool -> s
    boolean followRedirects -> v
    java.net.Proxy proxy -> b
    dc.squareup.okhttp3.Dispatcher dispatcher -> a
    int pingInterval -> B
    dc.squareup.okhttp3.EventListener$Factory eventListenerFactory -> g
    javax.net.ssl.SSLSocketFactory sslSocketFactory -> m
    dc.squareup.okhttp3.Authenticator proxyAuthenticator -> q
    int readTimeout -> z
    java.util.List interceptors -> e
    int callTimeout -> x
    java.util.List protocols -> c
    1:51:void <init>() -> <init>
    52:133:void <init>(dc.squareup.okhttp3.OkHttpClient) -> <init>
    1:1:dc.squareup.okhttp3.OkHttpClient build() -> a
    1:1:dc.squareup.okhttp3.OkHttpClient$Builder callTimeout(long,java.util.concurrent.TimeUnit) -> b
    1:1:dc.squareup.okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit) -> c
    1:2:dc.squareup.okhttp3.OkHttpClient$Builder connectionPool(dc.squareup.okhttp3.ConnectionPool) -> d
    1:1:dc.squareup.okhttp3.OkHttpClient$Builder connectionSpecs(java.util.List) -> e
    1:2:dc.squareup.okhttp3.OkHttpClient$Builder dns(dc.squareup.okhttp3.Dns) -> f
    1:2:dc.squareup.okhttp3.OkHttpClient$Builder eventListener(dc.squareup.okhttp3.EventListener) -> g
    1:2:dc.squareup.okhttp3.OkHttpClient$Builder hostnameVerifier(javax.net.ssl.HostnameVerifier) -> h
    1:26:dc.squareup.okhttp3.OkHttpClient$Builder protocols(java.util.List) -> i
    1:1:dc.squareup.okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit) -> j
    1:3:dc.squareup.okhttp3.OkHttpClient$Builder sslSocketFactory(javax.net.ssl.SSLSocketFactory) -> k
    1:1:dc.squareup.okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit) -> l
dc.squareup.okhttp3.Protocol -> b.a.c.w:
    dc.squareup.okhttp3.Protocol QUIC -> g
    dc.squareup.okhttp3.Protocol SPDY_3 -> d
    dc.squareup.okhttp3.Protocol HTTP_1_1 -> c
    dc.squareup.okhttp3.Protocol H2_PRIOR_KNOWLEDGE -> f
    java.lang.String protocol -> a
    dc.squareup.okhttp3.Protocol HTTP_2 -> e
    dc.squareup.okhttp3.Protocol HTTP_1_0 -> b
    dc.squareup.okhttp3.Protocol[] $VALUES -> h
    1:50:void <clinit>() -> <clinit>
    1:2:void <init>(java.lang.String,int,java.lang.String) -> <init>
    1:7:dc.squareup.okhttp3.Protocol get(java.lang.String) -> a
    1:1:java.lang.String toString() -> toString
    1:1:dc.squareup.okhttp3.Protocol valueOf(java.lang.String) -> valueOf
    1:1:dc.squareup.okhttp3.Protocol[] values() -> values
dc.squareup.okhttp3.RealCall -> b.a.c.x:
    dc.squareup.okhttp3.EventListener eventListener -> d
    dc.squareup.okio.AsyncTimeout timeout -> c
    boolean forWebSocket -> f
    dc.squareup.okhttp3.Request originalRequest -> e
    boolean executed -> g
    dc.squareup.okhttp3.OkHttpClient client -> a
    dc.squareup.okhttp3.internal.http.RetryAndFollowUpInterceptor retryAndFollowUpInterceptor -> b
    1:1:void <clinit>() -> <clinit>
    1:11:void <init>(dc.squareup.okhttp3.OkHttpClient,dc.squareup.okhttp3.Request,boolean) -> <init>
    1:10:void enqueue(dc.squareup.okhttp3.Callback) -> A
    1:1:dc.squareup.okhttp3.EventListener access$000(dc.squareup.okhttp3.RealCall) -> a
    1:2:void captureCallStackTrace() -> b
    3:3:dc.squareup.okhttp3.RealCall clone() -> c
    1:1:void cancel() -> cancel
    2:2:java.lang.Object clone() -> clone
    1:19:dc.squareup.okhttp3.Response getResponseWithInterceptorChain() -> d
    1:1:boolean isCanceled() -> e
    1:31:dc.squareup.okhttp3.Response execute() -> execute
    1:2:dc.squareup.okhttp3.RealCall newRealCall(dc.squareup.okhttp3.OkHttpClient,dc.squareup.okhttp3.Request,boolean) -> f
    1:1:java.lang.String redactedUrl() -> g
    1:1:dc.squareup.okhttp3.internal.connection.StreamAllocation streamAllocation() -> h
    1:1:dc.squareup.okio.Timeout timeout() -> i
    1:5:java.io.IOException timeoutExit(java.io.IOException) -> j
    1:3:java.lang.String toLoggableString() -> k
dc.squareup.okhttp3.RealCall$1 -> b.a.c.x$a:
    dc.squareup.okhttp3.RealCall this$0 -> k
    1:1:void <init>(dc.squareup.okhttp3.RealCall) -> <init>
    1:1:void timedOut() -> t
dc.squareup.okhttp3.RealCall$2 -> b.a.c.x$b:
    1:1:void <init>() -> <init>
    2:2:int compare(java.lang.String,java.lang.String) -> a
    1:1:int compare(java.lang.Object,java.lang.Object) -> compare
dc.squareup.okhttp3.RealCall$AsyncCall -> b.a.c.x$c:
    dc.squareup.okhttp3.RealCall this$0 -> c
    dc.squareup.okhttp3.Callback responseCallback -> b
    1:1:void <clinit>() -> <clinit>
    1:3:void <init>(dc.squareup.okhttp3.RealCall,dc.squareup.okhttp3.Callback) -> <init>
    1:46:void execute() -> k
    1:13:void executeOn(java.util.concurrent.ExecutorService) -> l
    1:1:dc.squareup.okhttp3.RealCall get() -> m
    1:1:java.lang.String host() -> n
dc.squareup.okhttp3.Request -> b.a.c.y:
    dc.squareup.okhttp3.HttpUrl url -> a
    dc.squareup.okhttp3.CacheControl cacheControl -> f
    dc.squareup.okhttp3.RequestBody body -> d
    dc.squareup.okhttp3.Headers headers -> c
    java.util.Map tags -> e
    java.lang.String method -> b
    1:6:void <init>(dc.squareup.okhttp3.Request$Builder) -> <init>
    1:1:dc.squareup.okhttp3.RequestBody body() -> a
    1:2:dc.squareup.okhttp3.CacheControl cacheControl() -> b
    1:1:java.lang.String header(java.lang.String) -> c
    1:1:dc.squareup.okhttp3.Headers headers() -> d
    1:1:boolean isHttps() -> e
    1:1:java.lang.String method() -> f
    1:1:dc.squareup.okhttp3.Request$Builder newBuilder() -> g
    1:1:dc.squareup.okhttp3.HttpUrl url() -> h
    1:1:java.lang.String toString() -> toString
dc.squareup.okhttp3.Request$Builder -> b.a.c.y$a:
    dc.squareup.okhttp3.HttpUrl url -> a
    dc.squareup.okhttp3.RequestBody body -> d
    java.util.Map tags -> e
    java.lang.String method -> b
    dc.squareup.okhttp3.Headers$Builder headers -> c
    1:6:void <init>() -> <init>
    7:22:void <init>(dc.squareup.okhttp3.Request) -> <init>
    1:1:dc.squareup.okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String) -> a
    1:3:dc.squareup.okhttp3.Request build() -> b
    1:1:dc.squareup.okhttp3.Request$Builder header(java.lang.String,java.lang.String) -> c
    1:1:dc.squareup.okhttp3.Request$Builder headers(dc.squareup.okhttp3.Headers) -> d
    1:11:dc.squareup.okhttp3.Request$Builder method(java.lang.String,dc.squareup.okhttp3.RequestBody) -> e
    1:1:dc.squareup.okhttp3.Request$Builder removeHeader(java.lang.String) -> f
    1:2:dc.squareup.okhttp3.Request$Builder url(dc.squareup.okhttp3.HttpUrl) -> g
    3:10:dc.squareup.okhttp3.Request$Builder url(java.lang.String) -> h
dc.squareup.okhttp3.RequestBody -> b.a.c.z:
    1:1:void <init>() -> <init>
    long contentLength() -> a
    dc.squareup.okhttp3.MediaType contentType() -> b
    1:10:dc.squareup.okhttp3.RequestBody create(dc.squareup.okhttp3.MediaType,java.lang.String) -> c
    12:12:dc.squareup.okhttp3.RequestBody create(dc.squareup.okhttp3.MediaType,byte[]) -> d
    13:15:dc.squareup.okhttp3.RequestBody create(dc.squareup.okhttp3.MediaType,byte[],int,int) -> e
    void writeTo(dc.squareup.okio.BufferedSink) -> f
dc.squareup.okhttp3.RequestBody$2 -> b.a.c.z$a:
    dc.squareup.okhttp3.MediaType val$contentType -> a
    int val$offset -> d
    int val$byteCount -> b
    byte[] val$content -> c
    1:1:void <init>(dc.squareup.okhttp3.MediaType,int,byte[],int) -> <init>
    1:1:long contentLength() -> a
    1:1:dc.squareup.okhttp3.MediaType contentType() -> b
    1:1:void writeTo(dc.squareup.okio.BufferedSink) -> f
dc.squareup.okhttp3.Response -> b.a.c.a0:
    long receivedResponseAtMillis -> l
    long sentRequestAtMillis -> k
    dc.squareup.okhttp3.Headers headers -> f
    int code -> c
    dc.squareup.okhttp3.Response cacheResponse -> i
    dc.squareup.okhttp3.Response networkResponse -> h
    dc.squareup.okhttp3.Response priorResponse -> j
    dc.squareup.okhttp3.ResponseBody body -> g
    dc.squareup.okhttp3.Request request -> a
    dc.squareup.okhttp3.Handshake handshake -> e
    dc.squareup.okhttp3.Protocol protocol -> b
    java.lang.String message -> d
    dc.squareup.okhttp3.CacheControl cacheControl -> m
    1:13:void <init>(dc.squareup.okhttp3.Response$Builder) -> <init>
    2:2:java.lang.String header(java.lang.String,java.lang.String) -> A
    2:2:dc.squareup.okhttp3.Headers headers() -> H
    1:1:boolean isSuccessful() -> I
    1:1:java.lang.String message() -> J
    1:1:dc.squareup.okhttp3.Response$Builder newBuilder() -> K
    1:1:dc.squareup.okhttp3.Response priorResponse() -> L
    1:1:long receivedResponseAtMillis() -> M
    1:1:dc.squareup.okhttp3.Request request() -> N
    1:1:long sentRequestAtMillis() -> O
    1:5:void close() -> close
    1:1:dc.squareup.okhttp3.ResponseBody body() -> d
    1:2:dc.squareup.okhttp3.CacheControl cacheControl() -> e
    1:1:int code() -> f
    1:1:dc.squareup.okhttp3.Handshake handshake() -> g
    1:1:java.lang.String header(java.lang.String) -> h
    1:8:java.lang.String toString() -> toString
dc.squareup.okhttp3.Response$Builder -> b.a.c.a0$a:
    dc.squareup.okhttp3.Response cacheResponse -> i
    dc.squareup.okhttp3.Response networkResponse -> h
    long receivedResponseAtMillis -> l
    dc.squareup.okhttp3.Response priorResponse -> j
    long sentRequestAtMillis -> k
    dc.squareup.okhttp3.ResponseBody body -> g
    dc.squareup.okhttp3.Request request -> a
    dc.squareup.okhttp3.Headers$Builder headers -> f
    int code -> c
    dc.squareup.okhttp3.Handshake handshake -> e
    dc.squareup.okhttp3.Protocol protocol -> b
    java.lang.String message -> d
    1:14:void <init>() -> <init>
    15:43:void <init>(dc.squareup.okhttp3.Response) -> <init>
    1:1:dc.squareup.okhttp3.Response$Builder addHeader(java.lang.String,java.lang.String) -> a
    1:1:dc.squareup.okhttp3.Response$Builder body(dc.squareup.okhttp3.ResponseBody) -> b
    1:9:dc.squareup.okhttp3.Response build() -> c
    1:2:dc.squareup.okhttp3.Response$Builder cacheResponse(dc.squareup.okhttp3.Response) -> d
    1:2:void checkPriorResponse(dc.squareup.okhttp3.Response) -> e
    1:11:void checkSupportResponse(java.lang.String,dc.squareup.okhttp3.Response) -> f
    1:1:dc.squareup.okhttp3.Response$Builder code(int) -> g
    1:1:dc.squareup.okhttp3.Response$Builder handshake(dc.squareup.okhttp3.Handshake) -> h
    1:1:dc.squareup.okhttp3.Response$Builder header(java.lang.String,java.lang.String) -> i
    1:1:dc.squareup.okhttp3.Response$Builder headers(dc.squareup.okhttp3.Headers) -> j
    1:1:dc.squareup.okhttp3.Response$Builder message(java.lang.String) -> k
    1:2:dc.squareup.okhttp3.Response$Builder networkResponse(dc.squareup.okhttp3.Response) -> l
    1:2:dc.squareup.okhttp3.Response$Builder priorResponse(dc.squareup.okhttp3.Response) -> m
    1:1:dc.squareup.okhttp3.Response$Builder protocol(dc.squareup.okhttp3.Protocol) -> n
    1:1:dc.squareup.okhttp3.Response$Builder receivedResponseAtMillis(long) -> o
    1:1:dc.squareup.okhttp3.Response$Builder request(dc.squareup.okhttp3.Request) -> p
    1:1:dc.squareup.okhttp3.Response$Builder sentRequestAtMillis(long) -> q
dc.squareup.okhttp3.ResponseBody -> b.a.c.b0:
    1:1:void <init>() -> <init>
    dc.squareup.okio.BufferedSource source() -> A
    1:1:void close() -> close
    1:1:java.io.InputStream byteStream() -> d
    1:16:byte[] bytes() -> e
    long contentLength() -> f
    15:16:dc.squareup.okhttp3.ResponseBody create(dc.squareup.okhttp3.MediaType,long,dc.squareup.okio.BufferedSource) -> g
    11:12:dc.squareup.okhttp3.ResponseBody create(dc.squareup.okhttp3.MediaType,byte[]) -> h
dc.squareup.okhttp3.ResponseBody$1 -> b.a.c.b0$a:
    long val$contentLength -> a
    dc.squareup.okio.BufferedSource val$content -> b
    1:1:void <init>(dc.squareup.okhttp3.MediaType,long,dc.squareup.okio.BufferedSource) -> <init>
    1:1:dc.squareup.okio.BufferedSource source() -> A
    1:1:long contentLength() -> f
dc.squareup.okhttp3.Route -> b.a.c.c0:
    java.net.InetSocketAddress inetSocketAddress -> c
    dc.squareup.okhttp3.Address address -> a
    java.net.Proxy proxy -> b
    1:16:void <init>(dc.squareup.okhttp3.Address,java.net.Proxy,java.net.InetSocketAddress) -> <init>
    1:1:dc.squareup.okhttp3.Address address() -> a
    1:1:java.net.Proxy proxy() -> b
    1:1:boolean requiresTunnel() -> c
    1:1:java.net.InetSocketAddress socketAddress() -> d
    1:4:boolean equals(java.lang.Object) -> equals
    1:3:int hashCode() -> hashCode
    1:1:java.lang.String toString() -> toString
dc.squareup.okhttp3.TlsVersion -> b.a.c.d0:
    dc.squareup.okhttp3.TlsVersion TLS_1_2 -> c
    dc.squareup.okhttp3.TlsVersion TLS_1_3 -> b
    java.lang.String javaName -> a
    dc.squareup.okhttp3.TlsVersion[] $VALUES -> g
    dc.squareup.okhttp3.TlsVersion SSL_3_0 -> f
    dc.squareup.okhttp3.TlsVersion TLS_1_0 -> e
    dc.squareup.okhttp3.TlsVersion TLS_1_1 -> d
    1:6:void <clinit>() -> <clinit>
    1:2:void <init>(java.lang.String,int,java.lang.String) -> <init>
    1:21:dc.squareup.okhttp3.TlsVersion forJavaName(java.lang.String) -> a
    1:5:java.util.List forJavaNames(java.lang.String[]) -> b
    1:1:dc.squareup.okhttp3.TlsVersion valueOf(java.lang.String) -> valueOf
    1:1:dc.squareup.okhttp3.TlsVersion[] values() -> values
dc.squareup.okhttp3.WebSocket -> b.a.c.e0:
    boolean send(dc.squareup.okio.ByteString) -> c
dc.squareup.okhttp3.WebSocketListener -> b.a.c.f0:
    1:1:void <init>() -> <init>
dc.squareup.okhttp3.internal.Internal -> b.a.c.g0.a:
    dc.squareup.okhttp3.internal.Internal instance -> a
    1:1:void <init>() -> <init>
    void addLenient(dc.squareup.okhttp3.Headers$Builder,java.lang.String) -> a
    void addLenient(dc.squareup.okhttp3.Headers$Builder,java.lang.String,java.lang.String) -> b
    void apply(dc.squareup.okhttp3.ConnectionSpec,javax.net.ssl.SSLSocket,boolean) -> c
    int code(dc.squareup.okhttp3.Response$Builder) -> d
    boolean connectionBecameIdle(dc.squareup.okhttp3.ConnectionPool,dc.squareup.okhttp3.internal.connection.RealConnection) -> e
    java.net.Socket deduplicate(dc.squareup.okhttp3.ConnectionPool,dc.squareup.okhttp3.Address,dc.squareup.okhttp3.internal.connection.StreamAllocation) -> f
    boolean equalsNonHost(dc.squareup.okhttp3.Address,dc.squareup.okhttp3.Address) -> g
    dc.squareup.okhttp3.internal.connection.RealConnection get(dc.squareup.okhttp3.ConnectionPool,dc.squareup.okhttp3.Address,dc.squareup.okhttp3.internal.connection.StreamAllocation,dc.squareup.okhttp3.Route) -> h
    dc.squareup.okhttp3.Call newWebSocketCall(dc.squareup.okhttp3.OkHttpClient,dc.squareup.okhttp3.Request) -> i
    void put(dc.squareup.okhttp3.ConnectionPool,dc.squareup.okhttp3.internal.connection.RealConnection) -> j
    dc.squareup.okhttp3.internal.connection.RouteDatabase routeDatabase(dc.squareup.okhttp3.ConnectionPool) -> k
    dc.squareup.okhttp3.internal.connection.StreamAllocation streamAllocation(dc.squareup.okhttp3.Call) -> l
    java.io.IOException timeoutExit(dc.squareup.okhttp3.Call,java.io.IOException) -> m
dc.squareup.okhttp3.internal.NamedRunnable -> b.a.c.g0.b:
    java.lang.String name -> a
    1:2:void <init>(java.lang.String,java.lang.Object[]) -> <init>
    void execute() -> k
    1:6:void run() -> run
dc.squareup.okhttp3.internal.Util -> b.a.c.g0.c:
    java.nio.charset.Charset UTF_8 -> d
    dc.squareup.okhttp3.ResponseBody EMPTY_RESPONSE -> c
    byte[] EMPTY_BYTE_ARRAY -> a
    java.util.regex.Pattern VERIFY_AS_IP_ADDRESS -> h
    java.lang.reflect.Method addSuppressedExceptionMethod -> g
    java.util.Comparator NATURAL_ORDER -> f
    java.util.TimeZone UTC -> e
    java.lang.String[] EMPTY_STRING_ARRAY -> b
    1:60:void <clinit>() -> <clinit>
    1:6:boolean nonEmptyIntersection(java.util.Comparator,java.lang.String[],java.lang.String[]) -> A
    1:16:javax.net.ssl.X509TrustManager platformTrustManager() -> B
    1:24:boolean skipAll(dc.squareup.okio.Source,int,java.util.concurrent.TimeUnit) -> C
    1:1:int skipLeadingAsciiWhitespace(java.lang.String,int,int) -> D
    1:1:int skipTrailingAsciiWhitespace(java.lang.String,int,int) -> E
    1:1:java.util.concurrent.ThreadFactory threadFactory(java.lang.String,boolean) -> F
    1:5:dc.squareup.okhttp3.Headers toHeaders(java.util.List) -> G
    1:3:java.lang.String trimSubstring(java.lang.String,int,int) -> H
    1:1:boolean verifyAsIpAddress(java.lang.String) -> I
    1:3:void addSuppressedIfPossible(java.lang.Throwable,java.lang.Throwable) -> a
    1:3:java.lang.AssertionError assertionError(java.lang.String,java.lang.Exception) -> b
    1:17:java.lang.String canonicalizeHost(java.lang.String) -> c
    1:6:int checkDuration(java.lang.String,long,java.util.concurrent.TimeUnit) -> d
    1:1:void checkOffsetAndCount(long,long,long) -> e
    1:3:void closeQuietly(java.io.Closeable) -> f
    4:9:void closeQuietly(java.net.Socket) -> g
    1:3:java.lang.String[] concat(java.lang.String[],java.lang.String) -> h
    1:12:boolean containsInvalidHostnameAsciiCodes(java.lang.String) -> i
    int decodeHexDigit(char) -> j
    1:23:boolean decodeIpv4Suffix(java.lang.String,int,int,byte[],int) -> k
    1:66:java.net.InetAddress decodeIpv6(java.lang.String,int,int) -> l
    2:2:int delimiterOffset(java.lang.String,int,int,char) -> m
    1:1:int delimiterOffset(java.lang.String,int,int,java.lang.String) -> n
    1:1:boolean discard(dc.squareup.okio.Source,int,java.util.concurrent.TimeUnit) -> o
    1:1:boolean equal(java.lang.Object,java.lang.Object) -> p
    1:1:java.lang.String format(java.lang.String,java.lang.Object[]) -> q
    1:5:java.lang.String hostHeader(dc.squareup.okhttp3.HttpUrl,boolean) -> r
    1:1:java.util.List immutableList(java.util.List) -> s
    2:2:java.util.List immutableList(java.lang.Object[]) -> t
    1:3:java.util.Map immutableMap(java.util.Map) -> u
    1:2:int indexOf(java.util.Comparator,java.lang.String[],java.lang.String) -> v
    1:2:int indexOfControlOrNonAscii(java.lang.String) -> w
    1:27:java.lang.String inet6AddressToAscii(byte[]) -> x
    1:10:java.lang.String[] intersect(java.util.Comparator,java.lang.String[],java.lang.String[]) -> y
    1:2:boolean isAndroidGetsocknameError(java.lang.AssertionError) -> z
dc.squareup.okhttp3.internal.Util$1 -> b.a.c.g0.c$a:
    1:1:void <init>() -> <init>
    2:2:int compare(java.lang.String,java.lang.String) -> a
    1:1:int compare(java.lang.Object,java.lang.Object) -> compare
dc.squareup.okhttp3.internal.Util$2 -> b.a.c.g0.c$b:
    java.lang.String val$name -> a
    boolean val$daemon -> b
    1:1:void <init>(java.lang.String,boolean) -> <init>
    1:2:java.lang.Thread newThread(java.lang.Runnable) -> newThread
dc.squareup.okhttp3.internal.Version -> b.a.c.g0.d:
    java.lang.String userAgent() -> a
dc.squareup.okhttp3.internal.cache.CacheInterceptor -> b.a.c.g0.e.a:
    dc.squareup.okhttp3.internal.cache.InternalCache cache -> a
    1:2:void <init>(dc.squareup.okhttp3.internal.cache.InternalCache) -> <init>
    1:86:dc.squareup.okhttp3.Response intercept(dc.squareup.okhttp3.Interceptor$Chain) -> a
    1:53:dc.squareup.okhttp3.Response cacheWritingResponse(dc.squareup.okhttp3.internal.cache.CacheRequest,dc.squareup.okhttp3.Response) -> b
    1:22:dc.squareup.okhttp3.Headers combine(dc.squareup.okhttp3.Headers,dc.squareup.okhttp3.Headers) -> c
    1:3:boolean isContentSpecificHeader(java.lang.String) -> d
    1:8:boolean isEndToEnd(java.lang.String) -> e
    1:2:dc.squareup.okhttp3.Response stripBody(dc.squareup.okhttp3.Response) -> f
dc.squareup.okhttp3.internal.cache.CacheInterceptor$1 -> b.a.c.g0.e.a$a:
    dc.squareup.okio.BufferedSink val$cacheBody -> d
    dc.squareup.okio.BufferedSource val$source -> b
    boolean cacheRequestClosed -> a
    dc.squareup.okhttp3.internal.cache.CacheRequest val$cacheRequest -> c
    1:1:void <init>(dc.squareup.okhttp3.internal.cache.CacheInterceptor,dc.squareup.okio.BufferedSource,dc.squareup.okhttp3.internal.cache.CacheRequest,dc.squareup.okio.BufferedSink) -> <init>
    1:24:long read(dc.squareup.okio.Buffer,long) -> c
    1:6:void close() -> close
    1:1:dc.squareup.okio.Timeout timeout() -> i
dc.squareup.okhttp3.internal.cache.CacheRequest -> b.a.c.g0.e.b:
    void abort() -> a
    dc.squareup.okio.Sink body() -> b
dc.squareup.okhttp3.internal.cache.CacheStrategy -> b.a.c.g0.e.c:
    dc.squareup.okhttp3.Request networkRequest -> a
    dc.squareup.okhttp3.Response cacheResponse -> b
    1:3:void <init>(dc.squareup.okhttp3.Request,dc.squareup.okhttp3.Response) -> <init>
    1:35:boolean isCacheable(dc.squareup.okhttp3.Response,dc.squareup.okhttp3.Request) -> a
dc.squareup.okhttp3.internal.cache.CacheStrategy$Factory -> b.a.c.g0.e.c$a:
    java.util.Date lastModified -> f
    java.lang.String lastModifiedString -> g
    long receivedResponseMillis -> j
    long sentRequestMillis -> i
    java.util.Date servedDate -> d
    int ageSeconds -> l
    java.lang.String etag -> k
    long nowMillis -> a
    dc.squareup.okhttp3.Request request -> b
    dc.squareup.okhttp3.Response cacheResponse -> c
    java.lang.String servedDateString -> e
    java.util.Date expires -> h
    1:27:void <init>(long,dc.squareup.okhttp3.Request,dc.squareup.okhttp3.Response) -> <init>
    1:8:long cacheResponseAge() -> a
    1:20:long computeFreshnessLifetime() -> b
    1:5:dc.squareup.okhttp3.internal.cache.CacheStrategy get() -> c
    1:78:dc.squareup.okhttp3.internal.cache.CacheStrategy getCandidate() -> d
    1:1:boolean hasConditions(dc.squareup.okhttp3.Request) -> e
    1:1:boolean isFreshnessLifetimeHeuristic() -> f
dc.squareup.okhttp3.internal.cache.InternalCache -> b.a.c.g0.e.d:
    void trackConditionalCacheHit() -> a
    dc.squareup.okhttp3.Response get(dc.squareup.okhttp3.Request) -> b
    void remove(dc.squareup.okhttp3.Request) -> c
    void update(dc.squareup.okhttp3.Response,dc.squareup.okhttp3.Response) -> d
    dc.squareup.okhttp3.internal.cache.CacheRequest put(dc.squareup.okhttp3.Response) -> e
    void trackResponse(dc.squareup.okhttp3.internal.cache.CacheStrategy) -> f
dc.squareup.okhttp3.internal.connection.ConnectInterceptor -> b.a.c.g0.f.a:
    dc.squareup.okhttp3.OkHttpClient client -> a
    1:2:void <init>(dc.squareup.okhttp3.OkHttpClient) -> <init>
    1:10:dc.squareup.okhttp3.Response intercept(dc.squareup.okhttp3.Interceptor$Chain) -> a
dc.squareup.okhttp3.internal.connection.ConnectionSpecSelector -> b.a.c.g0.f.b:
    java.util.List connectionSpecs -> a
    int nextModeIndex -> b
    boolean isFallbackPossible -> c
    boolean isFallback -> d
    1:3:void <init>(java.util.List) -> <init>
    1:26:dc.squareup.okhttp3.ConnectionSpec configureSecureSocket(javax.net.ssl.SSLSocket) -> a
    1:35:boolean connectionFailed(java.io.IOException) -> b
    1:2:boolean isFallbackPossible(javax.net.ssl.SSLSocket) -> c
dc.squareup.okhttp3.internal.connection.RealConnection -> b.a.c.g0.f.c:
    dc.squareup.okio.BufferedSource source -> i
    dc.squareup.okhttp3.internal.http2.Http2Connection http2Connection -> h
    int successCount -> l
    int allocationLimit -> m
    boolean noNewStreams -> k
    dc.squareup.okhttp3.Protocol protocol -> g
    dc.squareup.okhttp3.Route route -> c
    dc.squareup.okio.BufferedSink sink -> j
    java.net.Socket socket -> e
    dc.squareup.okhttp3.Handshake handshake -> f
    dc.squareup.okhttp3.ConnectionPool connectionPool -> b
    java.util.List allocations -> n
    java.net.Socket rawSocket -> d
    long idleAtNanos -> o
    1:12:void <init>(dc.squareup.okhttp3.ConnectionPool,dc.squareup.okhttp3.Route) -> <init>
    1:3:void onSettings(dc.squareup.okhttp3.internal.http2.Http2Connection) -> a
    1:1:void onStream(dc.squareup.okhttp3.internal.http2.Http2Stream) -> b
    1:1:void cancel() -> c
    1:100:void connect(int,int,int,int,boolean,dc.squareup.okhttp3.Call,dc.squareup.okhttp3.EventListener) -> d
    1:30:void connectSocket(int,int,dc.squareup.okhttp3.Call,dc.squareup.okhttp3.EventListener) -> e
    1:74:void connectTls(dc.squareup.okhttp3.internal.connection.ConnectionSpecSelector) -> f
    1:15:void connectTunnel(int,int,int,dc.squareup.okhttp3.Call,dc.squareup.okhttp3.EventListener) -> g
    1:48:dc.squareup.okhttp3.Request createTunnel(int,int,dc.squareup.okhttp3.Request,dc.squareup.okhttp3.HttpUrl) -> h
    1:21:dc.squareup.okhttp3.Request createTunnelRequest() -> i
    1:19:void establishProtocol(dc.squareup.okhttp3.internal.connection.ConnectionSpecSelector,int,dc.squareup.okhttp3.Call,dc.squareup.okhttp3.EventListener) -> j
    1:1:dc.squareup.okhttp3.Handshake handshake() -> k
    1:33:boolean isEligible(dc.squareup.okhttp3.Address,dc.squareup.okhttp3.Route) -> l
    1:19:boolean isHealthy(boolean) -> m
    1:1:boolean isMultiplexed() -> n
    1:7:dc.squareup.okhttp3.internal.http.HttpCodec newCodec(dc.squareup.okhttp3.OkHttpClient,dc.squareup.okhttp3.Interceptor$Chain,dc.squareup.okhttp3.internal.connection.StreamAllocation) -> o
    1:1:dc.squareup.okhttp3.internal.ws.RealWebSocket$Streams newWebSocketStreams(dc.squareup.okhttp3.internal.connection.StreamAllocation) -> p
    1:1:dc.squareup.okhttp3.Route route() -> q
    1:1:java.net.Socket socket() -> r
    1:7:void startHttp2(int) -> s
    1:9:boolean supportsUrl(dc.squareup.okhttp3.HttpUrl) -> t
    1:8:java.lang.String toString() -> toString
dc.squareup.okhttp3.internal.connection.RealConnection$1 -> b.a.c.g0.f.c$a:
    dc.squareup.okhttp3.internal.connection.StreamAllocation val$streamAllocation -> d
    1:1:void <init>(dc.squareup.okhttp3.internal.connection.RealConnection,boolean,dc.squareup.okio.BufferedSource,dc.squareup.okio.BufferedSink,dc.squareup.okhttp3.internal.connection.StreamAllocation) -> <init>
    1:1:void close() -> close
dc.squareup.okhttp3.internal.connection.RouteDatabase -> b.a.c.g0.f.d:
    java.util.Set failedRoutes -> a
    1:2:void <init>() -> <init>
    1:1:void connected(dc.squareup.okhttp3.Route) -> a
    1:1:void failed(dc.squareup.okhttp3.Route) -> b
    1:1:boolean shouldPostpone(dc.squareup.okhttp3.Route) -> c
dc.squareup.okhttp3.internal.connection.RouteException -> b.a.c.g0.f.e:
    java.io.IOException firstException -> a
    java.io.IOException lastException -> b
    1:3:void <init>(java.io.IOException) -> <init>
    1:2:void addConnectException(java.io.IOException) -> a
    1:1:java.io.IOException getFirstConnectException() -> b
    1:1:java.io.IOException getLastConnectException() -> c
dc.squareup.okhttp3.internal.connection.RouteSelector -> b.a.c.g0.f.f:
    dc.squareup.okhttp3.Call call -> c
    dc.squareup.okhttp3.EventListener eventListener -> d
    dc.squareup.okhttp3.internal.connection.RouteDatabase routeDatabase -> b
    java.util.List proxies -> e
    int nextProxyIndex -> f
    java.util.List postponedRoutes -> h
    dc.squareup.okhttp3.Address address -> a
    java.util.List inetSocketAddresses -> g
    1:18:void <init>(dc.squareup.okhttp3.Address,dc.squareup.okhttp3.internal.connection.RouteDatabase,dc.squareup.okhttp3.Call,dc.squareup.okhttp3.EventListener) -> <init>
    1:9:void connectFailed(dc.squareup.okhttp3.Route,java.io.IOException) -> a
    1:10:java.lang.String getHostString(java.net.InetSocketAddress) -> b
    1:1:boolean hasNext() -> c
    1:1:boolean hasNextProxy() -> d
    1:33:dc.squareup.okhttp3.internal.connection.RouteSelector$Selection next() -> e
    1:7:java.net.Proxy nextProxy() -> f
    1:54:void resetNextInetSocketAddress(java.net.Proxy) -> g
    1:9:void resetNextProxy(dc.squareup.okhttp3.HttpUrl,java.net.Proxy) -> h
dc.squareup.okhttp3.internal.connection.RouteSelector$Selection -> b.a.c.g0.f.f$a:
    java.util.List routes -> a
    int nextRouteIndex -> b
    1:5:void <init>(java.util.List) -> <init>
    1:1:java.util.List getAll() -> a
    1:1:boolean hasNext() -> b
    1:5:dc.squareup.okhttp3.Route next() -> c
dc.squareup.okhttp3.internal.connection.StreamAllocation -> b.a.c.g0.f.g:
    dc.squareup.okhttp3.internal.connection.RouteSelector$Selection routeSelection -> b
    boolean canceled -> m
    java.lang.Object callStackTrace -> g
    boolean reportedAcquired -> k
    int refusedStreamCount -> i
    boolean released -> l
    dc.squareup.okhttp3.Address address -> a
    dc.squareup.okhttp3.internal.connection.RouteSelector routeSelector -> h
    dc.squareup.okhttp3.Call call -> e
    dc.squareup.okhttp3.internal.connection.RealConnection connection -> j
    dc.squareup.okhttp3.Route route -> c
    dc.squareup.okhttp3.EventListener eventListener -> f
    dc.squareup.okhttp3.internal.http.HttpCodec codec -> n
    dc.squareup.okhttp3.ConnectionPool connectionPool -> d
    1:1:void <clinit>() -> <clinit>
    1:7:void <init>(dc.squareup.okhttp3.ConnectionPool,dc.squareup.okhttp3.Address,dc.squareup.okhttp3.Call,dc.squareup.okhttp3.EventListener,java.lang.Object) -> <init>
    1:7:void acquire(dc.squareup.okhttp3.internal.connection.RealConnection,boolean) -> a
    1:10:void cancel() -> b
    1:3:dc.squareup.okhttp3.internal.http.HttpCodec codec() -> c
    1:1:dc.squareup.okhttp3.internal.connection.RealConnection connection() -> d
    1:22:java.net.Socket deallocate(boolean,boolean,boolean) -> e
    1:175:dc.squareup.okhttp3.internal.connection.RealConnection findConnection(int,int,int,int,boolean) -> f
    1:15:dc.squareup.okhttp3.internal.connection.RealConnection findHealthyConnection(int,int,int,int,boolean,boolean) -> g
    1:3:boolean hasMoreRoutes() -> h
    1:17:dc.squareup.okhttp3.internal.http.HttpCodec newStream(dc.squareup.okhttp3.OkHttpClient,dc.squareup.okhttp3.Interceptor$Chain,boolean) -> i
    1:9:void noNewStreams() -> j
    1:11:void release() -> k
    12:19:void release(dc.squareup.okhttp3.internal.connection.RealConnection) -> l
    1:11:java.net.Socket releaseAndAcquire(dc.squareup.okhttp3.internal.connection.RealConnection) -> m
    1:4:java.net.Socket releaseIfNoNewStreams() -> n
    1:1:dc.squareup.okhttp3.Route route() -> o
    1:1:dc.squareup.okhttp3.internal.connection.RouteDatabase routeDatabase() -> p
    1:36:void streamFailed(java.io.IOException) -> q
    1:38:void streamFinished(boolean,dc.squareup.okhttp3.internal.http.HttpCodec,long,java.io.IOException) -> r
    1:2:java.lang.String toString() -> toString
dc.squareup.okhttp3.internal.connection.StreamAllocation$StreamAllocationReference -> b.a.c.g0.f.g$a:
    java.lang.Object callStackTrace -> a
    1:2:void <init>(dc.squareup.okhttp3.internal.connection.StreamAllocation,java.lang.Object) -> <init>
dc.squareup.okhttp3.internal.http.BridgeInterceptor -> b.a.c.g0.g.a:
    dc.squareup.okhttp3.CookieJar cookieJar -> a
    java.util.Comparator FIELD_NAME_COMPARATOR -> b
    1:1:void <clinit>() -> <clinit>
    1:2:void <init>(dc.squareup.okhttp3.CookieJar) -> <init>
    1:94:dc.squareup.okhttp3.Response intercept(dc.squareup.okhttp3.Interceptor$Chain) -> a
    1:16:void addCookies(dc.squareup.okhttp3.Request$Builder,java.util.Map) -> b
    1:15:java.lang.String buildCookieHeader(java.util.List) -> c
    1:20:java.util.Map toMultimap(dc.squareup.okhttp3.Headers,java.lang.String) -> d
dc.squareup.okhttp3.internal.http.BridgeInterceptor$1 -> b.a.c.g0.g.a$a:
    1:1:void <init>() -> <init>
    2:2:int compare(java.lang.String,java.lang.String) -> a
    1:1:int compare(java.lang.Object,java.lang.Object) -> compare
dc.squareup.okhttp3.internal.http.CallServerInterceptor -> b.a.c.g0.g.b:
    boolean forWebSocket -> a
    1:2:void <init>(boolean) -> <init>
    1:95:dc.squareup.okhttp3.Response intercept(dc.squareup.okhttp3.Interceptor$Chain) -> a
dc.squareup.okhttp3.internal.http.CallServerInterceptor$CountingSink -> b.a.c.g0.g.b$a:
    long successfulCount -> b
    1:1:void <init>(dc.squareup.okio.Sink) -> <init>
    1:2:void write(dc.squareup.okio.Buffer,long) -> b
dc.squareup.okhttp3.internal.http.HttpCodec -> b.a.c.g0.g.c:
    dc.squareup.okio.Sink createRequestBody(dc.squareup.okhttp3.Request,long) -> a
    void finishRequest() -> b
    dc.squareup.okhttp3.ResponseBody openResponseBody(dc.squareup.okhttp3.Response) -> c
    void writeRequestHeaders(dc.squareup.okhttp3.Request) -> d
    dc.squareup.okhttp3.Response$Builder readResponseHeaders(boolean) -> e
    void flushRequest() -> f
dc.squareup.okhttp3.internal.http.HttpDate -> b.a.c.g0.g.d:
    java.lang.ThreadLocal STANDARD_DATE_FORMAT -> a
    java.text.DateFormat[] BROWSER_COMPATIBLE_DATE_FORMATS -> c
    java.lang.String[] BROWSER_COMPATIBLE_DATE_FORMAT_STRINGS -> b
    1:35:void <clinit>() -> <clinit>
    1:1:java.lang.String format(java.util.Date) -> a
    1:33:java.util.Date parse(java.lang.String) -> b
dc.squareup.okhttp3.internal.http.HttpDate$1 -> b.a.c.g0.g.d$a:
    1:1:void <init>() -> <init>
    2:4:java.text.DateFormat initialValue() -> a
    1:1:java.lang.Object initialValue() -> initialValue
dc.squareup.okhttp3.internal.http.HttpHeaders -> b.a.c.g0.g.e:
    1:2:void <clinit>() -> <clinit>
    2:2:long contentLength(dc.squareup.okhttp3.Headers) -> a
    1:1:long contentLength(dc.squareup.okhttp3.Response) -> b
    1:15:boolean hasBody(dc.squareup.okhttp3.Response) -> c
    1:1:int parseSeconds(java.lang.String,int) -> d
    1:6:void receiveHeaders(dc.squareup.okhttp3.CookieJar,dc.squareup.okhttp3.HttpUrl,dc.squareup.okhttp3.Headers) -> e
    1:2:int skipUntil(java.lang.String,int,java.lang.String) -> f
    1:2:int skipWhitespace(java.lang.String,int) -> g
    1:1:long stringToLong(java.lang.String) -> h
dc.squareup.okhttp3.internal.http.HttpMethod -> b.a.c.g0.g.f:
    1:5:boolean invalidatesCache(java.lang.String) -> a
    1:1:boolean permitsRequestBody(java.lang.String) -> b
    1:1:boolean redirectsToGet(java.lang.String) -> c
    1:1:boolean redirectsWithBody(java.lang.String) -> d
    1:5:boolean requiresRequestBody(java.lang.String) -> e
dc.squareup.okhttp3.internal.http.RealInterceptorChain -> b.a.c.g0.g.g:
    java.util.List interceptors -> a
    int calls -> l
    int readTimeout -> j
    dc.squareup.okhttp3.EventListener eventListener -> h
    int writeTimeout -> k
    dc.squareup.okhttp3.internal.connection.StreamAllocation streamAllocation -> b
    int connectTimeout -> i
    dc.squareup.okhttp3.internal.connection.RealConnection connection -> d
    int index -> e
    dc.squareup.okhttp3.internal.http.HttpCodec httpCodec -> c
    dc.squareup.okhttp3.Request request -> f
    dc.squareup.okhttp3.Call call -> g
    1:12:void <init>(java.util.List,dc.squareup.okhttp3.internal.connection.StreamAllocation,dc.squareup.okhttp3.internal.http.HttpCodec,dc.squareup.okhttp3.internal.connection.RealConnection,int,dc.squareup.okhttp3.Request,dc.squareup.okhttp3.Call,dc.squareup.okhttp3.EventListener,int,int,int) -> <init>
    1:1:dc.squareup.okhttp3.Response proceed(dc.squareup.okhttp3.Request) -> a
    1:1:int readTimeoutMillis() -> b
    1:1:int writeTimeoutMillis() -> c
    1:1:int connectTimeoutMillis() -> d
    1:1:dc.squareup.okhttp3.Request request() -> e
    1:1:dc.squareup.okhttp3.Call call() -> f
    1:1:dc.squareup.okhttp3.Connection connection() -> g
    1:1:dc.squareup.okhttp3.EventListener eventListener() -> h
    1:1:dc.squareup.okhttp3.internal.http.HttpCodec httpStream() -> i
    2:39:dc.squareup.okhttp3.Response proceed(dc.squareup.okhttp3.Request,dc.squareup.okhttp3.internal.connection.StreamAllocation,dc.squareup.okhttp3.internal.http.HttpCodec,dc.squareup.okhttp3.internal.connection.RealConnection) -> j
    1:1:dc.squareup.okhttp3.internal.connection.StreamAllocation streamAllocation() -> k
dc.squareup.okhttp3.internal.http.RealResponseBody -> b.a.c.g0.g.h:
    long contentLength -> a
    dc.squareup.okio.BufferedSource source -> b
    1:4:void <init>(java.lang.String,long,dc.squareup.okio.BufferedSource) -> <init>
    1:1:dc.squareup.okio.BufferedSource source() -> A
    1:1:long contentLength() -> f
dc.squareup.okhttp3.internal.http.RequestLine -> b.a.c.g0.g.i:
    1:12:java.lang.String get(dc.squareup.okhttp3.Request,java.net.Proxy$Type) -> a
    1:1:boolean includeAuthorityInRequestLine(dc.squareup.okhttp3.Request,java.net.Proxy$Type) -> b
    1:3:java.lang.String requestPath(dc.squareup.okhttp3.HttpUrl) -> c
dc.squareup.okhttp3.internal.http.RetryAndFollowUpInterceptor -> b.a.c.g0.g.j:
    dc.squareup.okhttp3.internal.connection.StreamAllocation streamAllocation -> b
    java.lang.Object callStackTrace -> c
    dc.squareup.okhttp3.OkHttpClient client -> a
    boolean canceled -> d
    1:3:void <init>(dc.squareup.okhttp3.OkHttpClient,boolean) -> <init>
    1:113:dc.squareup.okhttp3.Response intercept(dc.squareup.okhttp3.Interceptor$Chain) -> a
    1:3:void cancel() -> b
    1:9:dc.squareup.okhttp3.Address createAddress(dc.squareup.okhttp3.HttpUrl) -> c
    1:185:dc.squareup.okhttp3.Request followUpRequest(dc.squareup.okhttp3.Response,dc.squareup.okhttp3.Route) -> d
    1:1:boolean isCanceled() -> e
    1:20:boolean isRecoverable(java.io.IOException,boolean) -> f
    1:13:boolean recover(java.io.IOException,dc.squareup.okhttp3.internal.connection.StreamAllocation,boolean,dc.squareup.okhttp3.Request) -> g
    1:1:boolean requestIsUnrepeatable(java.io.IOException,dc.squareup.okhttp3.Request) -> h
    1:10:int retryAfter(dc.squareup.okhttp3.Response,int) -> i
    1:4:boolean sameConnection(dc.squareup.okhttp3.Response,dc.squareup.okhttp3.HttpUrl) -> j
    1:1:void setCallStackTrace(java.lang.Object) -> k
    1:1:dc.squareup.okhttp3.internal.connection.StreamAllocation streamAllocation() -> l
dc.squareup.okhttp3.internal.http.StatusLine -> b.a.c.g0.g.k:
    int code -> b
    java.lang.String message -> c
    dc.squareup.okhttp3.Protocol protocol -> a
    1:4:void <init>(dc.squareup.okhttp3.Protocol,int,java.lang.String) -> <init>
    1:59:dc.squareup.okhttp3.internal.http.StatusLine parse(java.lang.String) -> a
    1:7:java.lang.String toString() -> toString
dc.squareup.okhttp3.internal.http1.Http1Codec -> b.a.c.g0.h.a:
    long headerLimit -> f
    dc.squareup.okhttp3.internal.connection.StreamAllocation streamAllocation -> b
    dc.squareup.okio.BufferedSink sink -> d
    dc.squareup.okio.BufferedSource source -> c
    int state -> e
    dc.squareup.okhttp3.OkHttpClient client -> a
    1:10:void <init>(dc.squareup.okhttp3.OkHttpClient,dc.squareup.okhttp3.internal.connection.StreamAllocation,dc.squareup.okio.BufferedSource,dc.squareup.okio.BufferedSink) -> <init>
    1:11:dc.squareup.okio.Sink createRequestBody(dc.squareup.okhttp3.Request,long) -> a
    1:1:void finishRequest() -> b
    1:20:dc.squareup.okhttp3.ResponseBody openResponseBody(dc.squareup.okhttp3.Response) -> c
    1:2:void cancel() -> cancel
    1:5:void writeRequestHeaders(dc.squareup.okhttp3.Request) -> d
    1:27:dc.squareup.okhttp3.Response$Builder readResponseHeaders(boolean) -> e
    1:1:void flushRequest() -> f
    1:4:void detachTimeout(dc.squareup.okio.ForwardingTimeout) -> g
    1:4:dc.squareup.okio.Sink newChunkedSink() -> h
    1:4:dc.squareup.okio.Source newChunkedSource(dc.squareup.okhttp3.HttpUrl) -> i
    1:4:dc.squareup.okio.Sink newFixedLengthSink(long) -> j
    1:4:dc.squareup.okio.Source newFixedLengthSource(long) -> k
    1:7:dc.squareup.okio.Source newUnknownLengthSource() -> l
    1:2:java.lang.String readHeaderLine() -> m
    1:6:dc.squareup.okhttp3.Headers readHeaders() -> n
    1:11:void writeRequest(dc.squareup.okhttp3.Headers,java.lang.String) -> o
dc.squareup.okhttp3.internal.http1.Http1Codec$1 -> b.a.c.g0.h.a$a:
dc.squareup.okhttp3.internal.http1.Http1Codec$AbstractSource -> b.a.c.g0.h.a$b:
    dc.squareup.okio.ForwardingTimeout timeout -> a
    dc.squareup.okhttp3.internal.http1.Http1Codec this$0 -> d
    long bytesRead -> c
    boolean closed -> b
    1:4:void <init>(dc.squareup.okhttp3.internal.http1.Http1Codec) -> <init>
    5:5:void <init>(dc.squareup.okhttp3.internal.http1.Http1Codec,dc.squareup.okhttp3.internal.http1.Http1Codec$1) -> <init>
    1:8:long read(dc.squareup.okio.Buffer,long) -> c
    1:9:void endOfInput(boolean,java.io.IOException) -> d
    1:1:dc.squareup.okio.Timeout timeout() -> i
dc.squareup.okhttp3.internal.http1.Http1Codec$ChunkedSink -> b.a.c.g0.h.a$c:
    dc.squareup.okio.ForwardingTimeout timeout -> a
    dc.squareup.okhttp3.internal.http1.Http1Codec this$0 -> c
    boolean closed -> b
    1:2:void <init>(dc.squareup.okhttp3.internal.http1.Http1Codec) -> <init>
    1:8:void write(dc.squareup.okio.Buffer,long) -> b
    0:5:void close() -> close
    0:2:void flush() -> flush
    1:1:dc.squareup.okio.Timeout timeout() -> i
dc.squareup.okhttp3.internal.http1.Http1Codec$ChunkedSource -> b.a.c.g0.h.a$d:
    long bytesRemainingInChunk -> f
    dc.squareup.okhttp3.internal.http1.Http1Codec this$0 -> h
    boolean hasMoreChunks -> g
    dc.squareup.okhttp3.HttpUrl url -> e
    1:6:void <init>(dc.squareup.okhttp3.internal.http1.Http1Codec,dc.squareup.okhttp3.HttpUrl) -> <init>
    1:20:long read(dc.squareup.okio.Buffer,long) -> c
    1:5:void close() -> close
    1:22:void readChunkSize() -> e
dc.squareup.okhttp3.internal.http1.Http1Codec$FixedLengthSink -> b.a.c.g0.h.a$e:
    dc.squareup.okio.ForwardingTimeout timeout -> a
    dc.squareup.okhttp3.internal.http1.Http1Codec this$0 -> d
    long bytesRemaining -> c
    boolean closed -> b
    1:7:void <init>(dc.squareup.okhttp3.internal.http1.Http1Codec,long) -> <init>
    1:10:void write(dc.squareup.okio.Buffer,long) -> b
    1:6:void close() -> close
    1:2:void flush() -> flush
    1:1:dc.squareup.okio.Timeout timeout() -> i
dc.squareup.okhttp3.internal.http1.Http1Codec$FixedLengthSource -> b.a.c.g0.h.a$f:
    long bytesRemaining -> e
    1:4:void <init>(dc.squareup.okhttp3.internal.http1.Http1Codec,long) -> <init>
    1:18:long read(dc.squareup.okio.Buffer,long) -> c
    1:7:void close() -> close
dc.squareup.okhttp3.internal.http1.Http1Codec$UnknownLengthSource -> b.a.c.g0.h.a$g:
    boolean inputExhausted -> e
    1:1:void <init>(dc.squareup.okhttp3.internal.http1.Http1Codec) -> <init>
    1:9:long read(dc.squareup.okio.Buffer,long) -> c
    1:5:void close() -> close
dc.squareup.okhttp3.internal.http2.ConnectionShutdownException -> b.a.c.g0.i.a:
    1:1:void <init>() -> <init>
dc.squareup.okhttp3.internal.http2.ErrorCode -> b.a.c.g0.i.b:
    dc.squareup.okhttp3.internal.http2.ErrorCode[] $VALUES -> h
    dc.squareup.okhttp3.internal.http2.ErrorCode NO_ERROR -> b
    dc.squareup.okhttp3.internal.http2.ErrorCode PROTOCOL_ERROR -> c
    dc.squareup.okhttp3.internal.http2.ErrorCode INTERNAL_ERROR -> d
    dc.squareup.okhttp3.internal.http2.ErrorCode FLOW_CONTROL_ERROR -> e
    dc.squareup.okhttp3.internal.http2.ErrorCode REFUSED_STREAM -> f
    dc.squareup.okhttp3.internal.http2.ErrorCode CANCEL -> g
    int httpCode -> a
    1:22:void <clinit>() -> <clinit>
    1:2:void <init>(java.lang.String,int,int) -> <init>
    1:2:dc.squareup.okhttp3.internal.http2.ErrorCode fromHttp2(int) -> a
    1:1:dc.squareup.okhttp3.internal.http2.ErrorCode valueOf(java.lang.String) -> valueOf
    1:1:dc.squareup.okhttp3.internal.http2.ErrorCode[] values() -> values
dc.squareup.okhttp3.internal.http2.Header -> b.a.c.g0.i.c:
    dc.squareup.okio.ByteString value -> b
    dc.squareup.okio.ByteString name -> a
    dc.squareup.okio.ByteString PSEUDO_PREFIX -> d
    dc.squareup.okio.ByteString TARGET_METHOD -> f
    dc.squareup.okio.ByteString RESPONSE_STATUS -> e
    dc.squareup.okio.ByteString TARGET_SCHEME -> h
    dc.squareup.okio.ByteString TARGET_PATH -> g
    dc.squareup.okio.ByteString TARGET_AUTHORITY -> i
    int hpackSize -> c
    1:13:void <clinit>() -> <clinit>
    1:1:void <init>(java.lang.String,java.lang.String) -> <init>
    2:2:void <init>(dc.squareup.okio.ByteString,java.lang.String) -> <init>
    3:6:void <init>(dc.squareup.okio.ByteString,dc.squareup.okio.ByteString) -> <init>
    1:4:boolean equals(java.lang.Object) -> equals
    1:2:int hashCode() -> hashCode
    1:1:java.lang.String toString() -> toString
dc.squareup.okhttp3.internal.http2.Header$Listener -> b.a.c.g0.i.c$a:
    void onHeaders(dc.squareup.okhttp3.Headers) -> a
dc.squareup.okhttp3.internal.http2.Hpack -> b.a.c.g0.i.d:
    java.util.Map NAME_TO_FIRST_INDEX -> b
    dc.squareup.okhttp3.internal.http2.Header[] STATIC_HEADER_TABLE -> a
    1:308:void <clinit>() -> <clinit>
    1:4:dc.squareup.okio.ByteString checkLowercase(dc.squareup.okio.ByteString) -> a
    1:7:java.util.Map nameToFirstIndex() -> b
dc.squareup.okhttp3.internal.http2.Hpack$Reader -> b.a.c.g0.i.d$a:
    java.util.List headerList -> a
    int dynamicTableByteCount -> h
    int nextHeaderIndex -> f
    int headerCount -> g
    dc.squareup.okio.BufferedSource source -> b
    int maxDynamicTableByteCount -> d
    dc.squareup.okhttp3.internal.http2.Header[] dynamicTable -> e
    int headerTableSizeSetting -> c
    1:1:void <init>(int,dc.squareup.okio.Source) -> <init>
    2:23:void <init>(int,int,dc.squareup.okio.Source) -> <init>
    1:5:void adjustDynamicTableByteCount() -> a
    1:4:void clearDynamicTable() -> b
    1:1:int dynamicTableIndex(int) -> c
    1:9:int evictToRecoverBytes(int) -> d
    1:2:java.util.List getAndResetHeaderList() -> e
    1:10:dc.squareup.okio.ByteString getName(int) -> f
    1:32:void insertIntoDynamicTable(int,dc.squareup.okhttp3.internal.http2.Header) -> g
    1:1:boolean isStaticHeader(int) -> h
    1:1:int readByte() -> i
    1:8:dc.squareup.okio.ByteString readByteString() -> j
    1:29:void readHeaders() -> k
    1:10:void readIndexedHeader(int) -> l
    1:1:int readInt(int,int) -> m
    1:3:void readLiteralHeaderWithIncrementalIndexingIndexedName(int) -> n
    1:3:void readLiteralHeaderWithIncrementalIndexingNewName() -> o
    1:3:void readLiteralHeaderWithoutIndexingIndexedName(int) -> p
    1:3:void readLiteralHeaderWithoutIndexingNewName() -> q
dc.squareup.okhttp3.internal.http2.Hpack$Writer -> b.a.c.g0.i.d$b:
    dc.squareup.okio.Buffer out -> a
    int headerCount -> h
    int dynamicTableByteCount -> i
    int nextHeaderIndex -> g
    dc.squareup.okhttp3.internal.http2.Header[] dynamicTable -> f
    int maxDynamicTableByteCount -> e
    boolean useCompression -> b
    int smallestHeaderTableSizeSetting -> c
    boolean emitDynamicTableSizeUpdate -> d
    1:1:void <init>(dc.squareup.okio.Buffer) -> <init>
    2:24:void <init>(int,boolean,dc.squareup.okio.Buffer) -> <init>
    1:5:void adjustDynamicTableByteCount() -> a
    1:4:void clearDynamicTable() -> b
    1:10:int evictToRecoverBytes(int) -> c
    1:22:void insertIntoDynamicTable(dc.squareup.okhttp3.internal.http2.Header) -> d
    1:13:void setHeaderTableSizeSetting(int) -> e
    1:9:void writeByteString(dc.squareup.okio.ByteString) -> f
    1:65:void writeHeaders(java.util.List) -> g
    1:15:void writeInt(int,int,int) -> h
dc.squareup.okhttp3.internal.http2.Http2 -> b.a.c.g0.i.e:
    dc.squareup.okio.ByteString CONNECTION_PREFACE -> a
    java.lang.String[] BINARY -> d
    java.lang.String[] FLAGS -> c
    java.lang.String[] FRAME_NAMES -> b
    1:77:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:14:java.lang.String formatFlags(byte,byte) -> a
    1:3:java.lang.String frameLog(boolean,int,int,byte,byte) -> b
    1:1:java.lang.IllegalArgumentException illegalArgument(java.lang.String,java.lang.Object[]) -> c
    1:1:java.io.IOException ioException(java.lang.String,java.lang.Object[]) -> d
dc.squareup.okhttp3.internal.http2.Http2Codec -> b.a.c.g0.i.f:
    dc.squareup.okhttp3.internal.http2.Http2Stream stream -> d
    java.util.List HTTP_2_SKIPPED_REQUEST_HEADERS -> f
    dc.squareup.okhttp3.internal.http2.Http2Connection connection -> c
    dc.squareup.okhttp3.internal.connection.StreamAllocation streamAllocation -> b
    dc.squareup.okhttp3.Interceptor$Chain chain -> a
    java.util.List HTTP_2_SKIPPED_RESPONSE_HEADERS -> g
    dc.squareup.okhttp3.Protocol protocol -> e
    1:14:void <clinit>() -> <clinit>
    1:5:void <init>(dc.squareup.okhttp3.OkHttpClient,dc.squareup.okhttp3.Interceptor$Chain,dc.squareup.okhttp3.internal.connection.StreamAllocation,dc.squareup.okhttp3.internal.http2.Http2Connection) -> <init>
    1:1:dc.squareup.okio.Sink createRequestBody(dc.squareup.okhttp3.Request,long) -> a
    1:1:void finishRequest() -> b
    1:5:dc.squareup.okhttp3.ResponseBody openResponseBody(dc.squareup.okhttp3.Response) -> c
    1:1:void cancel() -> cancel
    1:7:void writeRequestHeaders(dc.squareup.okhttp3.Request) -> d
    1:3:dc.squareup.okhttp3.Response$Builder readResponseHeaders(boolean) -> e
    1:1:void flushRequest() -> f
    1:15:java.util.List http2HeadersList(dc.squareup.okhttp3.Request) -> g
    1:18:dc.squareup.okhttp3.Response$Builder readHttp2HeadersList(dc.squareup.okhttp3.Headers,dc.squareup.okhttp3.Protocol) -> h
dc.squareup.okhttp3.internal.http2.Http2Codec$StreamFinishingSource -> b.a.c.g0.i.f$a:
    long bytesRead -> c
    boolean completed -> b
    dc.squareup.okhttp3.internal.http2.Http2Codec this$0 -> d
    1:4:void <init>(dc.squareup.okhttp3.internal.http2.Http2Codec,dc.squareup.okio.Source) -> <init>
    1:8:long read(dc.squareup.okio.Buffer,long) -> c
    1:2:void close() -> close
    1:3:void endOfInput(java.io.IOException) -> e
dc.squareup.okhttp3.internal.http2.Http2Connection -> b.a.c.g0.i.g:
    long intervalPingsSent -> k
    int nextStreamId -> f
    dc.squareup.okhttp3.internal.http2.Settings peerSettings -> t
    java.util.Map streams -> c
    dc.squareup.okhttp3.internal.http2.Http2Writer writer -> v
    dc.squareup.okhttp3.internal.http2.Http2Connection$ReaderRunnable readerRunnable -> w
    java.util.concurrent.ExecutorService pushExecutor -> i
    long unacknowledgedBytesRead -> q
    dc.squareup.okhttp3.internal.http2.PushObserver pushObserver -> j
    long degradedPingsSent -> m
    long awaitPongsReceived -> o
    java.util.Set currentPushRequests -> x
    long intervalPongsReceived -> l
    dc.squareup.okhttp3.internal.http2.Http2Connection$Listener listener -> b
    java.util.concurrent.ExecutorService listenerExecutor -> y
    java.net.Socket socket -> u
    int lastGoodStreamId -> e
    java.util.concurrent.ScheduledExecutorService writerExecutor -> h
    dc.squareup.okhttp3.internal.http2.Settings okHttpSettings -> s
    long bytesLeftInWriteWindow -> r
    boolean shutdown -> g
    boolean client -> a
    long degradedPongsReceived -> n
    long degradedPongDeadlineNs -> p
    java.lang.String hostname -> d
    1:28:void <clinit>() -> <clinit>
    1:845:void <init>(dc.squareup.okhttp3.internal.http2.Http2Connection$Builder) -> <init>
    1:1:boolean access$300(dc.squareup.okhttp3.internal.http2.Http2Connection) -> A
    1:1:boolean access$302(dc.squareup.okhttp3.internal.http2.Http2Connection,boolean) -> H
    1:1:java.util.concurrent.ExecutorService access$400() -> I
    1:1:java.util.concurrent.ScheduledExecutorService access$500(dc.squareup.okhttp3.internal.http2.Http2Connection) -> J
    1:1:long access$608(dc.squareup.okhttp3.internal.http2.Http2Connection) -> K
    1:1:long access$708(dc.squareup.okhttp3.internal.http2.Http2Connection) -> L
    2:47:void close(dc.squareup.okhttp3.internal.http2.ErrorCode,dc.squareup.okhttp3.internal.http2.ErrorCode) -> M
    1:1:void failConnection() -> N
    1:1:dc.squareup.okhttp3.internal.http2.Http2Stream getStream(int) -> O
    0:4:boolean isHealthy(long) -> P
    1:1:int maxConcurrentStreams() -> Q
    2:47:dc.squareup.okhttp3.internal.http2.Http2Stream newStream(int,java.util.List,boolean) -> R
    1:1:dc.squareup.okhttp3.internal.http2.Http2Stream newStream(java.util.List,boolean) -> S
    1:6:void pushDataLater(int,dc.squareup.okio.BufferedSource,int,boolean) -> T
    0:2:void pushExecutorExecute(dc.squareup.okhttp3.internal.NamedRunnable) -> U
    1:1:void pushHeadersLater(int,java.util.List,boolean) -> V
    1:10:void pushRequestLater(int,java.util.List) -> W
    1:1:void pushResetLater(int,dc.squareup.okhttp3.internal.http2.ErrorCode) -> X
    boolean pushedStream(int) -> Y
    0:2:dc.squareup.okhttp3.internal.http2.Http2Stream removeStream(int) -> Z
    1:8:void sendDegradedPingLater() -> a0
    1:18:void shutdown(dc.squareup.okhttp3.internal.http2.ErrorCode) -> b0
    1:1:void start() -> c0
    1:1:void close() -> close
    1:1:void access$000(dc.squareup.okhttp3.internal.http2.Http2Connection) -> d
    2:9:void start(boolean) -> d0
    1:1:long access$100(dc.squareup.okhttp3.internal.http2.Http2Connection) -> e
    0:4:void updateConnectionFlowControl(long) -> e0
    1:1:long access$108(dc.squareup.okhttp3.internal.http2.Http2Connection) -> f
    1:39:void writeData(int,boolean,dc.squareup.okio.Buffer,long) -> f0
    1:1:void flush() -> flush
    1:1:long access$200(dc.squareup.okhttp3.internal.http2.Http2Connection) -> g
    1:3:void writePing(boolean,int,int) -> g0
    1:1:long access$208(dc.squareup.okhttp3.internal.http2.Http2Connection) -> h
    1:1:void writeSynReset(int,dc.squareup.okhttp3.internal.http2.ErrorCode) -> h0
    1:1:void writeSynResetLater(int,dc.squareup.okhttp3.internal.http2.ErrorCode) -> i0
    1:3:void writeWindowUpdateLater(int,long) -> j0
dc.squareup.okhttp3.internal.http2.Http2Connection$1 -> b.a.c.g0.i.g$a:
    dc.squareup.okhttp3.internal.http2.ErrorCode val$errorCode -> c
    dc.squareup.okhttp3.internal.http2.Http2Connection this$0 -> d
    int val$streamId -> b
    1:1:void <init>(dc.squareup.okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,dc.squareup.okhttp3.internal.http2.ErrorCode) -> <init>
    1:3:void execute() -> k
dc.squareup.okhttp3.internal.http2.Http2Connection$2 -> b.a.c.g0.i.g$b:
    dc.squareup.okhttp3.internal.http2.Http2Connection this$0 -> d
    long val$unacknowledgedBytesRead -> c
    int val$streamId -> b
    1:1:void <init>(dc.squareup.okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,long) -> <init>
    1:3:void execute() -> k
dc.squareup.okhttp3.internal.http2.Http2Connection$3 -> b.a.c.g0.i.g$c:
    dc.squareup.okhttp3.internal.http2.Http2Connection this$0 -> b
    1:1:void <init>(dc.squareup.okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[]) -> <init>
    1:1:void execute() -> k
dc.squareup.okhttp3.internal.http2.Http2Connection$4 -> b.a.c.g0.i.g$d:
    dc.squareup.okhttp3.internal.http2.Http2Connection this$0 -> d
    java.util.List val$requestHeaders -> c
    int val$streamId -> b
    1:1:void <init>(dc.squareup.okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,java.util.List) -> <init>
    1:7:void execute() -> k
dc.squareup.okhttp3.internal.http2.Http2Connection$5 -> b.a.c.g0.i.g$e:
    java.util.List val$requestHeaders -> c
    dc.squareup.okhttp3.internal.http2.Http2Connection this$0 -> e
    int val$streamId -> b
    boolean val$inFinished -> d
    1:1:void <init>(dc.squareup.okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,java.util.List,boolean) -> <init>
    1:7:void execute() -> k
dc.squareup.okhttp3.internal.http2.Http2Connection$6 -> b.a.c.g0.i.g$f:
    dc.squareup.okhttp3.internal.http2.Http2Connection this$0 -> f
    dc.squareup.okio.Buffer val$buffer -> c
    boolean val$inFinished -> e
    int val$byteCount -> d
    int val$streamId -> b
    1:1:void <init>(dc.squareup.okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,dc.squareup.okio.Buffer,int,boolean) -> <init>
    1:6:void execute() -> k
dc.squareup.okhttp3.internal.http2.Http2Connection$7 -> b.a.c.g0.i.g$g:
    dc.squareup.okhttp3.internal.http2.ErrorCode val$errorCode -> c
    dc.squareup.okhttp3.internal.http2.Http2Connection this$0 -> d
    int val$streamId -> b
    1:1:void <init>(dc.squareup.okhttp3.internal.http2.Http2Connection,java.lang.String,java.lang.Object[],int,dc.squareup.okhttp3.internal.http2.ErrorCode) -> <init>
    1:4:void execute() -> k
dc.squareup.okhttp3.internal.http2.Http2Connection$Builder -> b.a.c.g0.i.g$h:
    dc.squareup.okhttp3.internal.http2.Http2Connection$Listener listener -> e
    dc.squareup.okhttp3.internal.http2.PushObserver pushObserver -> f
    int pingIntervalMillis -> h
    dc.squareup.okio.BufferedSink sink -> d
    boolean client -> g
    dc.squareup.okio.BufferedSource source -> c
    java.net.Socket socket -> a
    java.lang.String hostname -> b
    1:12:void <init>(boolean) -> <init>
    1:1:dc.squareup.okhttp3.internal.http2.Http2Connection build() -> a
    1:1:dc.squareup.okhttp3.internal.http2.Http2Connection$Builder listener(dc.squareup.okhttp3.internal.http2.Http2Connection$Listener) -> b
    1:1:dc.squareup.okhttp3.internal.http2.Http2Connection$Builder pingIntervalMillis(int) -> c
    4:7:dc.squareup.okhttp3.internal.http2.Http2Connection$Builder socket(java.net.Socket,java.lang.String,dc.squareup.okio.BufferedSource,dc.squareup.okio.BufferedSink) -> d
dc.squareup.okhttp3.internal.http2.Http2Connection$IntervalPingRunnable -> b.a.c.g0.i.g$i:
    dc.squareup.okhttp3.internal.http2.Http2Connection this$0 -> b
    1:2:void <init>(dc.squareup.okhttp3.internal.http2.Http2Connection) -> <init>
    1:13:void execute() -> k
dc.squareup.okhttp3.internal.http2.Http2Connection$Listener -> b.a.c.g0.i.g$j:
    dc.squareup.okhttp3.internal.http2.Http2Connection$Listener REFUSE_INCOMING_STREAMS -> a
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    void onSettings(dc.squareup.okhttp3.internal.http2.Http2Connection) -> a
    void onStream(dc.squareup.okhttp3.internal.http2.Http2Stream) -> b
dc.squareup.okhttp3.internal.http2.Http2Connection$Listener$1 -> b.a.c.g0.i.g$j$a:
    1:1:void <init>() -> <init>
    1:1:void onStream(dc.squareup.okhttp3.internal.http2.Http2Stream) -> b
dc.squareup.okhttp3.internal.http2.Http2Connection$PingRunnable -> b.a.c.g0.i.g$k:
    dc.squareup.okhttp3.internal.http2.Http2Connection this$0 -> e
    int payload2 -> d
    boolean reply -> b
    int payload1 -> c
    1:5:void <init>(dc.squareup.okhttp3.internal.http2.Http2Connection,boolean,int,int) -> <init>
    1:1:void execute() -> k
dc.squareup.okhttp3.internal.http2.Http2Connection$ReaderRunnable -> b.a.c.g0.i.g$l:
    dc.squareup.okhttp3.internal.http2.Http2Connection this$0 -> c
    dc.squareup.okhttp3.internal.http2.Http2Reader reader -> b
    1:3:void <init>(dc.squareup.okhttp3.internal.http2.Http2Connection,dc.squareup.okhttp3.internal.http2.Http2Reader) -> <init>
    1:7:void rstStream(int,dc.squareup.okhttp3.internal.http2.ErrorCode) -> a
    void ackSettings() -> b
    1:45:void headers(boolean,int,int,java.util.List) -> c
    1:10:void windowUpdate(int,long) -> d
    1:14:void ping(boolean,int,int) -> e
    void priority(int,int,int,boolean) -> f
    1:16:void goAway(int,dc.squareup.okhttp3.internal.http2.ErrorCode,dc.squareup.okio.ByteString) -> g
    1:1:void settings(boolean,dc.squareup.okhttp3.internal.http2.Settings) -> h
    1:1:void pushPromise(int,int,java.util.List) -> i
    1:14:void data(boolean,int,dc.squareup.okio.BufferedSource,int) -> j
    1:26:void execute() -> k
    1:34:void applyAndAckSettings(boolean,dc.squareup.okhttp3.internal.http2.Settings) -> l
dc.squareup.okhttp3.internal.http2.Http2Connection$ReaderRunnable$1 -> b.a.c.g0.i.g$l$a:
    dc.squareup.okhttp3.internal.http2.Http2Connection$ReaderRunnable this$1 -> c
    dc.squareup.okhttp3.internal.http2.Http2Stream val$newStream -> b
    1:1:void <init>(dc.squareup.okhttp3.internal.http2.Http2Connection$ReaderRunnable,java.lang.String,java.lang.Object[],dc.squareup.okhttp3.internal.http2.Http2Stream) -> <init>
    1:5:void execute() -> k
dc.squareup.okhttp3.internal.http2.Http2Connection$ReaderRunnable$2 -> b.a.c.g0.i.g$l$b:
    dc.squareup.okhttp3.internal.http2.Settings val$settings -> c
    dc.squareup.okhttp3.internal.http2.Http2Connection$ReaderRunnable this$1 -> d
    boolean val$clearPrevious -> b
    1:1:void <init>(dc.squareup.okhttp3.internal.http2.Http2Connection$ReaderRunnable,java.lang.String,java.lang.Object[],boolean,dc.squareup.okhttp3.internal.http2.Settings) -> <init>
    1:1:void execute() -> k
dc.squareup.okhttp3.internal.http2.Http2Connection$ReaderRunnable$3 -> b.a.c.g0.i.g$l$c:
    dc.squareup.okhttp3.internal.http2.Http2Connection$ReaderRunnable this$1 -> b
    1:1:void <init>(dc.squareup.okhttp3.internal.http2.Http2Connection$ReaderRunnable,java.lang.String,java.lang.Object[]) -> <init>
    1:1:void execute() -> k
dc.squareup.okhttp3.internal.http2.Http2Reader -> b.a.c.g0.i.h:
    java.util.logging.Logger logger -> e
    dc.squareup.okio.BufferedSource source -> a
    boolean client -> c
    dc.squareup.okhttp3.internal.http2.Hpack$Reader hpackReader -> d
    dc.squareup.okhttp3.internal.http2.Http2Reader$ContinuationSource continuation -> b
    1:1:void <clinit>() -> <clinit>
    1:5:void <init>(dc.squareup.okio.BufferedSource,boolean) -> <init>
    1:9:java.util.List readHeaderBlock(int,short,byte,int) -> A
    1:13:void readHeaders(dc.squareup.okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> H
    1:3:int readMedium(dc.squareup.okio.BufferedSource) -> I
    1:6:void readPing(dc.squareup.okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> J
    4:8:void readPriority(dc.squareup.okhttp3.internal.http2.Http2Reader$Handler,int) -> K
    1:3:void readPriority(dc.squareup.okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> L
    1:7:void readPushPromise(dc.squareup.okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> M
    1:9:void readRstStream(dc.squareup.okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> N
    1:60:void readSettings(dc.squareup.okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> O
    1:5:void readWindowUpdate(dc.squareup.okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> P
    1:1:void close() -> close
    1:1:int lengthWithoutPadding(int,byte,short) -> d
    1:78:boolean nextFrame(boolean,dc.squareup.okhttp3.internal.http2.Http2Reader$Handler) -> e
    1:11:void readConnectionPreface(dc.squareup.okhttp3.internal.http2.Http2Reader$Handler) -> f
    1:7:void readData(dc.squareup.okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> g
    1:15:void readGoAway(dc.squareup.okhttp3.internal.http2.Http2Reader$Handler,int,byte,int) -> h
dc.squareup.okhttp3.internal.http2.Http2Reader$ContinuationSource -> b.a.c.g0.i.h$a:
    short padding -> f
    dc.squareup.okio.BufferedSource source -> a
    int streamId -> d
    byte flags -> c
    int left -> e
    int length -> b
    1:2:void <init>(dc.squareup.okio.BufferedSource) -> <init>
    1:11:long read(dc.squareup.okio.Buffer,long) -> c
    1:10:void readContinuationHeader() -> d
    1:1:dc.squareup.okio.Timeout timeout() -> i
dc.squareup.okhttp3.internal.http2.Http2Reader$Handler -> b.a.c.g0.i.h$b:
    void rstStream(int,dc.squareup.okhttp3.internal.http2.ErrorCode) -> a
    void ackSettings() -> b
    void headers(boolean,int,int,java.util.List) -> c
    void windowUpdate(int,long) -> d
    void ping(boolean,int,int) -> e
    void priority(int,int,int,boolean) -> f
    void goAway(int,dc.squareup.okhttp3.internal.http2.ErrorCode,dc.squareup.okio.ByteString) -> g
    void settings(boolean,dc.squareup.okhttp3.internal.http2.Settings) -> h
    void pushPromise(int,int,java.util.List) -> i
    void data(boolean,int,dc.squareup.okio.BufferedSource,int) -> j
dc.squareup.okhttp3.internal.http2.Http2Stream -> b.a.c.g0.i.i:
    dc.squareup.okhttp3.internal.http2.Http2Stream$StreamTimeout readTimeout -> j
    dc.squareup.okhttp3.internal.http2.Http2Connection connection -> d
    java.util.Deque headersQueue -> e
    dc.squareup.okhttp3.internal.http2.Http2Stream$StreamTimeout writeTimeout -> k
    long bytesLeftInWriteWindow -> b
    long unacknowledgedBytesRead -> a
    dc.squareup.okhttp3.internal.http2.Header$Listener headersListener -> f
    boolean hasResponseHeaders -> g
    dc.squareup.okhttp3.internal.http2.Http2Stream$FramingSource source -> h
    int id -> c
    dc.squareup.okhttp3.internal.http2.ErrorCode errorCode -> l
    dc.squareup.okhttp3.internal.http2.Http2Stream$FramingSink sink -> i
    1:1:void <clinit>() -> <clinit>
    1:57:void <init>(int,dc.squareup.okhttp3.internal.http2.Http2Connection,boolean,boolean,dc.squareup.okhttp3.Headers) -> <init>
    1:1:java.util.Deque access$000(dc.squareup.okhttp3.internal.http2.Http2Stream) -> a
    1:1:dc.squareup.okhttp3.internal.http2.Header$Listener access$100(dc.squareup.okhttp3.internal.http2.Http2Stream) -> b
    1:2:void addBytesToWriteWindow(long) -> c
    1:16:void cancelStreamIfNecessary() -> d
    1:8:void checkOutNotClosed() -> e
    1:4:void close(dc.squareup.okhttp3.internal.http2.ErrorCode) -> f
    1:13:boolean closeInternal(dc.squareup.okhttp3.internal.http2.ErrorCode) -> g
    1:4:void closeLater(dc.squareup.okhttp3.internal.http2.ErrorCode) -> h
    1:1:int getId() -> i
    1:7:dc.squareup.okio.Sink getSink() -> j
    1:1:dc.squareup.okio.Source getSource() -> k
    1:2:boolean isLocallyInitiated() -> l
    0:4:boolean isOpen() -> m
    1:1:dc.squareup.okio.Timeout readTimeout() -> n
    1:2:void receiveData(dc.squareup.okio.BufferedSource,int) -> o
    1:10:void receiveFin() -> p
    1:11:void receiveHeaders(java.util.List) -> q
    0:3:void receiveRstStream(dc.squareup.okhttp3.internal.http2.ErrorCode) -> r
    0:13:dc.squareup.okhttp3.Headers takeHeaders() -> s
    1:4:void waitForIo() -> t
    1:1:dc.squareup.okio.Timeout writeTimeout() -> u
dc.squareup.okhttp3.internal.http2.Http2Stream$FramingSink -> b.a.c.g0.i.i$a:
    dc.squareup.okhttp3.internal.http2.Http2Stream this$0 -> d
    dc.squareup.okio.Buffer sendBuffer -> a
    boolean closed -> b
    boolean finished -> c
    1:1:void <clinit>() -> <clinit>
    1:8:void <init>(dc.squareup.okhttp3.internal.http2.Http2Stream) -> <init>
    1:4:void write(dc.squareup.okio.Buffer,long) -> b
    1:22:void close() -> close
    1:27:void emitFrame(boolean) -> d
    1:8:void flush() -> flush
    1:1:dc.squareup.okio.Timeout timeout() -> i
dc.squareup.okhttp3.internal.http2.Http2Stream$FramingSource -> b.a.c.g0.i.i$b:
    dc.squareup.okio.Buffer receiveBuffer -> a
    dc.squareup.okhttp3.internal.http2.Http2Stream this$0 -> f
    dc.squareup.okio.Buffer readBuffer -> b
    boolean finished -> e
    long maxByteCount -> c
    boolean closed -> d
    1:1:void <clinit>() -> <clinit>
    1:20:void <init>(dc.squareup.okhttp3.internal.http2.Http2Stream,long) -> <init>
    1:88:long read(dc.squareup.okio.Buffer,long) -> c
    1:19:void close() -> close
    1:49:void receive(dc.squareup.okio.BufferedSource,long) -> d
    1:2:void updateConnectionFlowControl(long) -> e
    1:1:dc.squareup.okio.Timeout timeout() -> i
dc.squareup.okhttp3.internal.http2.Http2Stream$StreamTimeout -> b.a.c.g0.i.i$c:
    dc.squareup.okhttp3.internal.http2.Http2Stream this$0 -> k
    1:1:void <init>(dc.squareup.okhttp3.internal.http2.Http2Stream) -> <init>
    1:3:java.io.IOException newTimeoutException(java.io.IOException) -> o
    1:2:void timedOut() -> t
    1:1:void exitAndThrowIfTimedOut() -> u
dc.squareup.okhttp3.internal.http2.Http2Writer -> b.a.c.g0.i.j:
    dc.squareup.okio.Buffer hpackBuffer -> c
    boolean closed -> e
    int maxFrameSize -> d
    java.util.logging.Logger logger -> g
    dc.squareup.okio.BufferedSink sink -> a
    dc.squareup.okhttp3.internal.http2.Hpack$Writer hpackWriter -> f
    boolean client -> b
    1:1:void <clinit>() -> <clinit>
    1:6:void <init>(dc.squareup.okio.BufferedSink,boolean) -> <init>
    0:15:void goAway(int,dc.squareup.okhttp3.internal.http2.ErrorCode,byte[]) -> A
    4:16:void headers(boolean,int,java.util.List) -> H
    1:1:int maxDataLength() -> I
    0:10:void ping(boolean,int,int) -> J
    0:13:void pushPromise(int,int,java.util.List) -> K
    0:11:void rstStream(int,dc.squareup.okhttp3.internal.http2.ErrorCode) -> L
    0:19:void settings(dc.squareup.okhttp3.internal.http2.Settings) -> M
    0:3:void synStream(boolean,int,int,java.util.List) -> N
    0:15:void windowUpdate(int,long) -> O
    1:4:void writeContinuationFrames(int,long) -> P
    1:3:void writeMedium(dc.squareup.okio.BufferedSink,int) -> Q
    0:2:void close() -> close
    0:12:void applyAndAckSettings(dc.squareup.okhttp3.internal.http2.Settings) -> d
    0:8:void connectionPreface() -> e
    0:5:void data(boolean,int,dc.squareup.okio.Buffer,int) -> f
    0:3:void flush() -> flush
    1:3:void dataFrame(int,byte,dc.squareup.okio.Buffer,int) -> g
    1:11:void frameHeader(int,int,byte,byte) -> h
dc.squareup.okhttp3.internal.http2.Huffman -> b.a.c.g0.i.k:
    int[] CODES -> b
    dc.squareup.okhttp3.internal.http2.Huffman$Node root -> a
    byte[] CODE_LENGTHS -> c
    dc.squareup.okhttp3.internal.http2.Huffman INSTANCE -> d
    1:43:void <clinit>() -> <clinit>
    1:5:void <init>() -> <init>
    1:26:void addCode(int,int,byte) -> a
    1:2:void buildTree() -> b
    1:35:byte[] decode(byte[]) -> c
    1:19:void encode(dc.squareup.okio.ByteString,dc.squareup.okio.BufferedSink) -> d
    1:3:int encodedLength(dc.squareup.okio.ByteString) -> e
    1:1:dc.squareup.okhttp3.internal.http2.Huffman get() -> f
dc.squareup.okhttp3.internal.http2.Huffman$Node -> b.a.c.g0.i.k$a:
    dc.squareup.okhttp3.internal.http2.Huffman$Node[] children -> a
    int symbol -> b
    int terminalBits -> c
    1:4:void <init>() -> <init>
    5:9:void <init>(int,int) -> <init>
dc.squareup.okhttp3.internal.http2.PushObserver -> b.a.c.g0.i.l:
    dc.squareup.okhttp3.internal.http2.PushObserver CANCEL -> a
    1:1:void <clinit>() -> <clinit>
    boolean onData(int,dc.squareup.okio.BufferedSource,int,boolean) -> a
    boolean onRequest(int,java.util.List) -> b
    boolean onHeaders(int,java.util.List,boolean) -> c
    void onReset(int,dc.squareup.okhttp3.internal.http2.ErrorCode) -> d
dc.squareup.okhttp3.internal.http2.PushObserver$1 -> b.a.c.g0.i.l$a:
    1:1:void <init>() -> <init>
    1:1:boolean onData(int,dc.squareup.okio.BufferedSource,int,boolean) -> a
    boolean onRequest(int,java.util.List) -> b
    boolean onHeaders(int,java.util.List,boolean) -> c
    void onReset(int,dc.squareup.okhttp3.internal.http2.ErrorCode) -> d
dc.squareup.okhttp3.internal.http2.Settings -> b.a.c.g0.i.m:
    int[] values -> b
    int set -> a
    1:28:void <init>() -> <init>
    1:2:void clear() -> a
    1:1:int get(int) -> b
    1:1:int getHeaderTableSize() -> c
    1:1:int getInitialWindowSize() -> d
    1:1:int getMaxConcurrentStreams(int) -> e
    1:1:int getMaxFrameSize(int) -> f
    1:1:boolean isSet(int) -> g
    1:2:void merge(dc.squareup.okhttp3.internal.http2.Settings) -> h
    1:7:dc.squareup.okhttp3.internal.http2.Settings set(int,int) -> i
    1:1:int size() -> j
dc.squareup.okhttp3.internal.http2.StreamResetException -> b.a.c.g0.i.n:
    dc.squareup.okhttp3.internal.http2.ErrorCode errorCode -> a
    1:2:void <init>(dc.squareup.okhttp3.internal.http2.ErrorCode) -> <init>
dc.squareup.okhttp3.internal.platform.Android10Platform -> b.a.c.g0.j.a:
    1:1:void <init>(java.lang.Class) -> <init>
    1:12:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> h
    1:3:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> m
    1:5:dc.squareup.okhttp3.internal.platform.Platform buildIfSupported() -> v
    1:2:void enableSessionTickets(javax.net.ssl.SSLSocket) -> y
dc.squareup.okhttp3.internal.platform.AndroidPlatform -> b.a.c.g0.j.b:
    dc.squareup.okhttp3.internal.platform.OptionalMethod setHostname -> e
    dc.squareup.okhttp3.internal.platform.OptionalMethod setUseSessionTickets -> d
    dc.squareup.okhttp3.internal.platform.OptionalMethod setAlpnProtocols -> g
    dc.squareup.okhttp3.internal.platform.OptionalMethod getAlpnSelectedProtocol -> f
    dc.squareup.okhttp3.internal.platform.AndroidPlatform$CloseGuard closeGuard -> h
    java.lang.Class sslParametersClass -> c
    1:11:void <init>(java.lang.Class,dc.squareup.okhttp3.internal.platform.OptionalMethod,dc.squareup.okhttp3.internal.platform.OptionalMethod,dc.squareup.okhttp3.internal.platform.OptionalMethod,dc.squareup.okhttp3.internal.platform.OptionalMethod) -> <init>
    1:8:dc.squareup.okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager) -> d
    1:6:dc.squareup.okhttp3.internal.tls.TrustRootIndex buildTrustRootIndex(javax.net.ssl.X509TrustManager) -> e
    1:8:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> h
    1:24:void connectSocket(java.net.Socket,java.net.InetSocketAddress,int) -> i
    1:19:javax.net.ssl.SSLContext getSSLContext() -> l
    1:5:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> m
    1:1:java.lang.Object getStackTraceForCloseable(java.lang.String) -> n
    1:13:boolean isCleartextTrafficPermitted(java.lang.String) -> o
    1:9:void log(int,java.lang.String,java.lang.Throwable) -> p
    1:4:void logCloseableLeak(java.lang.String,java.lang.Object) -> q
    1:22:javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory) -> s
    1:5:boolean api23IsCleartextTrafficPermitted(java.lang.String,java.lang.Class,java.lang.Object) -> t
    1:5:boolean api24IsCleartextTrafficPermitted(java.lang.String,java.lang.Class,java.lang.Object) -> u
    1:30:dc.squareup.okhttp3.internal.platform.Platform buildIfSupported() -> v
    1:1:int getSdkInt() -> w
    1:5:boolean supportsAlpn() -> x
dc.squareup.okhttp3.internal.platform.AndroidPlatform$AndroidCertificateChainCleaner -> b.a.c.g0.j.b$a:
    java.lang.Object x509TrustManagerExtensions -> a
    java.lang.reflect.Method checkServerTrusted -> b
    1:3:void <init>(java.lang.Object,java.lang.reflect.Method) -> <init>
    1:12:java.util.List clean(java.util.List,java.lang.String) -> a
    1:1:boolean equals(java.lang.Object) -> equals
dc.squareup.okhttp3.internal.platform.AndroidPlatform$AndroidTrustRootIndex -> b.a.c.g0.j.b$b:
    javax.net.ssl.X509TrustManager trustManager -> a
    java.lang.reflect.Method findByIssuerAndSignatureMethod -> b
    1:3:void <init>(javax.net.ssl.X509TrustManager,java.lang.reflect.Method) -> <init>
    1:7:java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate) -> a
    1:6:boolean equals(java.lang.Object) -> equals
    1:1:int hashCode() -> hashCode
dc.squareup.okhttp3.internal.platform.AndroidPlatform$CloseGuard -> b.a.c.g0.j.b$c:
    java.lang.reflect.Method warnIfOpenMethod -> c
    java.lang.reflect.Method getMethod -> a
    java.lang.reflect.Method openMethod -> b
    1:4:void <init>(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method) -> <init>
    1:4:java.lang.Object createAndOpen(java.lang.String) -> a
    1:10:dc.squareup.okhttp3.internal.platform.AndroidPlatform$CloseGuard get() -> b
    1:1:boolean warnIfOpen(java.lang.Object) -> c
dc.squareup.okhttp3.internal.platform.Jdk9Platform -> b.a.c.g0.j.c:
    java.lang.reflect.Method setProtocolMethod -> c
    java.lang.reflect.Method getProtocolMethod -> d
    1:3:void <init>(java.lang.reflect.Method,java.lang.reflect.Method) -> <init>
    1:12:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> h
    1:26:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> m
    1:1:javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory) -> s
    1:5:dc.squareup.okhttp3.internal.platform.Jdk9Platform buildIfSupported() -> t
dc.squareup.okhttp3.internal.platform.JdkWithJettyBootPlatform -> b.a.c.g0.j.d:
    java.lang.Class clientProviderClass -> f
    java.lang.Class serverProviderClass -> g
    java.lang.reflect.Method putMethod -> c
    java.lang.reflect.Method getMethod -> d
    java.lang.reflect.Method removeMethod -> e
    1:6:void <init>(java.lang.reflect.Method,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.Class,java.lang.Class) -> <init>
    1:3:void afterHandshake(javax.net.ssl.SSLSocket) -> a
    1:8:void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> h
    1:10:java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> m
    1:8:dc.squareup.okhttp3.internal.platform.Platform buildIfSupported() -> t
dc.squareup.okhttp3.internal.platform.JdkWithJettyBootPlatform$JettyNegoProvider -> b.a.c.g0.j.d$a:
    java.util.List protocols -> a
    java.lang.String selected -> c
    boolean unsupported -> b
    1:2:void <init>(java.util.List) -> <init>
    1:28:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
dc.squareup.okhttp3.internal.platform.OptionalMethod -> b.a.c.g0.j.e:
    java.lang.Class[] methodParams -> c
    java.lang.Class returnType -> a
    java.lang.String methodName -> b
    1:4:void <init>(java.lang.Class,java.lang.String,java.lang.Class[]) -> <init>
    1:5:java.lang.reflect.Method getMethod(java.lang.Class) -> a
    1:2:java.lang.reflect.Method getPublicMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> b
    1:12:java.lang.Object invoke(java.lang.Object,java.lang.Object[]) -> c
    1:6:java.lang.Object invokeOptional(java.lang.Object,java.lang.Object[]) -> d
    1:9:java.lang.Object invokeOptionalWithoutCheckedException(java.lang.Object,java.lang.Object[]) -> e
    1:9:java.lang.Object invokeWithoutCheckedException(java.lang.Object,java.lang.Object[]) -> f
    1:1:boolean isSupported(java.lang.Object) -> g
dc.squareup.okhttp3.internal.platform.Platform -> b.a.c.g0.j.f:
    java.util.logging.Logger logger -> b
    dc.squareup.okhttp3.internal.platform.Platform PLATFORM -> a
    1:4:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    void afterHandshake(javax.net.ssl.SSLSocket) -> a
    1:5:java.util.List alpnProtocolNames(java.util.List) -> b
    2:15:dc.squareup.okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.SSLSocketFactory) -> c
    1:1:dc.squareup.okhttp3.internal.tls.CertificateChainCleaner buildCertificateChainCleaner(javax.net.ssl.X509TrustManager) -> d
    1:1:dc.squareup.okhttp3.internal.tls.TrustRootIndex buildTrustRootIndex(javax.net.ssl.X509TrustManager) -> e
    1:8:byte[] concatLengthPrefixed(java.util.List) -> f
    void configureSslSocketFactory(javax.net.ssl.SSLSocketFactory) -> g
    void configureTlsExtensions(javax.net.ssl.SSLSocket,java.lang.String,java.util.List) -> h
    1:1:void connectSocket(java.net.Socket,java.net.InetSocketAddress,int) -> i
    1:34:dc.squareup.okhttp3.internal.platform.Platform findPlatform() -> j
    1:1:dc.squareup.okhttp3.internal.platform.Platform get() -> k
    1:14:javax.net.ssl.SSLContext getSSLContext() -> l
    java.lang.String getSelectedProtocol(javax.net.ssl.SSLSocket) -> m
    1:2:java.lang.Object getStackTraceForCloseable(java.lang.String) -> n
    boolean isCleartextTrafficPermitted(java.lang.String) -> o
    1:2:void log(int,java.lang.String,java.lang.Throwable) -> p
    1:4:void logCloseableLeak(java.lang.String,java.lang.Object) -> q
    1:27:java.lang.Object readFieldOrNull(java.lang.Object,java.lang.Class,java.lang.String) -> r
    1:4:javax.net.ssl.X509TrustManager trustManager(javax.net.ssl.SSLSocketFactory) -> s
    1:1:java.lang.String toString() -> toString
dc.squareup.okhttp3.internal.proxy.NullProxySelector -> b.a.c.g0.k.a:
    1:1:void <init>() -> <init>
    1:2:java.util.List select(java.net.URI) -> select
dc.squareup.okhttp3.internal.publicsuffix.PublicSuffixDatabase -> b.a.c.g0.l.a:
    dc.squareup.okhttp3.internal.publicsuffix.PublicSuffixDatabase instance -> h
    java.util.concurrent.CountDownLatch readCompleteLatch -> b
    java.util.concurrent.atomic.AtomicBoolean listRead -> a
    java.lang.String[] PREVAILING_RULE -> g
    java.lang.String[] EMPTY_RULE -> f
    byte[] publicSuffixExceptionListBytes -> d
    byte[] publicSuffixListBytes -> c
    byte[] WILDCARD_LABEL -> e
    1:7:void <clinit>() -> <clinit>
    1:16:void <init>() -> <init>
    1:76:java.lang.String binarySearchBytes(byte[],byte[][],int) -> a
    1:86:java.lang.String[] findMatchingRule(java.lang.String[]) -> b
    1:1:dc.squareup.okhttp3.internal.publicsuffix.PublicSuffixDatabase get() -> c
    1:26:java.lang.String getEffectiveTldPlusOne(java.lang.String) -> d
    1:24:void readTheList() -> e
    1:30:void readTheListUninterruptibly() -> f
dc.squareup.okhttp3.internal.tls.BasicCertificateChainCleaner -> b.a.c.g0.m.a:
    dc.squareup.okhttp3.internal.tls.TrustRootIndex trustRootIndex -> a
    1:2:void <init>(dc.squareup.okhttp3.internal.tls.TrustRootIndex) -> <init>
    1:46:java.util.List clean(java.util.List,java.lang.String) -> a
    1:3:boolean verifySignature(java.security.cert.X509Certificate,java.security.cert.X509Certificate) -> c
    1:2:boolean equals(java.lang.Object) -> equals
    1:1:int hashCode() -> hashCode
dc.squareup.okhttp3.internal.tls.BasicTrustRootIndex -> b.a.c.g0.m.b:
    java.util.Map subjectToCaCerts -> a
    1:10:void <init>(java.security.cert.X509Certificate[]) -> <init>
    1:8:java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate) -> a
    1:2:boolean equals(java.lang.Object) -> equals
    1:1:int hashCode() -> hashCode
dc.squareup.okhttp3.internal.tls.CertificateChainCleaner -> b.a.c.g0.m.c:
    1:1:void <init>() -> <init>
    java.util.List clean(java.util.List,java.lang.String) -> a
    1:1:dc.squareup.okhttp3.internal.tls.CertificateChainCleaner get(javax.net.ssl.X509TrustManager) -> b
dc.squareup.okhttp3.internal.tls.OkHostnameVerifier -> b.a.c.g0.m.d:
    dc.squareup.okhttp3.internal.tls.OkHostnameVerifier INSTANCE -> a
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:5:java.util.List allSubjectAltNames(java.security.cert.X509Certificate) -> a
    1:25:java.util.List getSubjectAltNames(java.security.cert.X509Certificate,int) -> b
    3:5:boolean verify(java.lang.String,java.security.cert.X509Certificate) -> c
    5:81:boolean verifyHostname(java.lang.String,java.lang.String) -> d
    1:4:boolean verifyHostname(java.lang.String,java.security.cert.X509Certificate) -> e
    1:3:boolean verifyIpAddress(java.lang.String,java.security.cert.X509Certificate) -> f
    1:2:boolean verify(java.lang.String,javax.net.ssl.SSLSession) -> verify
dc.squareup.okhttp3.internal.tls.TrustRootIndex -> b.a.c.g0.m.e:
    java.security.cert.X509Certificate findByIssuerAndSignature(java.security.cert.X509Certificate) -> a
dc.squareup.okhttp3.internal.ws.RealWebSocket -> b.a.c.g0.n.a:
    java.util.ArrayDeque pongQueue -> l
    java.util.ArrayDeque messageAndCloseQueue -> m
    boolean enqueuedClose -> o
    java.util.Random random -> c
    java.util.List ONLY_HTTP1 -> x
    long pingIntervalMillis -> d
    boolean awaitingPong -> w
    java.lang.String receivedCloseReason -> r
    dc.squareup.okhttp3.Call call -> f
    boolean failed -> s
    dc.squareup.okhttp3.WebSocketListener listener -> b
    java.util.concurrent.ScheduledFuture cancelFuture -> p
    dc.squareup.okhttp3.Request originalRequest -> a
    java.lang.Runnable writerRunnable -> g
    dc.squareup.okhttp3.internal.ws.WebSocketReader reader -> h
    java.util.concurrent.ScheduledExecutorService executor -> j
    dc.squareup.okhttp3.internal.ws.RealWebSocket$Streams streams -> k
    int receivedPongCount -> v
    int sentPingCount -> t
    dc.squareup.okhttp3.internal.ws.WebSocketWriter writer -> i
    int receivedPingCount -> u
    long queueSize -> n
    java.lang.String key -> e
    int receivedCloseCode -> q
    1:2:void <clinit>() -> <clinit>
    1:55:void <init>(dc.squareup.okhttp3.Request,dc.squareup.okhttp3.WebSocketListener,java.util.Random,long) -> <init>
    2:2:void onReadMessage(dc.squareup.okio.ByteString) -> a
    1:1:void onReadMessage(java.lang.String) -> b
    3:4:boolean send(dc.squareup.okio.ByteString) -> c
    1:1:boolean close(int,java.lang.String) -> close
    0:5:void onReadPing(dc.squareup.okio.ByteString) -> d
    0:2:void onReadPong(dc.squareup.okio.ByteString) -> e
    1:31:void onReadClose(int,java.lang.String) -> f
    1:1:void cancel() -> g
    1:26:void checkResponse(dc.squareup.okhttp3.Response) -> h
    1:19:boolean close(int,java.lang.String,long) -> i
    1:13:void connect(dc.squareup.okhttp3.OkHttpClient) -> j
    1:14:void failWebSocket(java.lang.Exception,dc.squareup.okhttp3.Response) -> k
    1:15:void initReaderAndWriter(java.lang.String,dc.squareup.okhttp3.internal.ws.RealWebSocket$Streams) -> l
    1:3:void loopReader() -> m
    1:4:void runWriter() -> n
    4:16:boolean send(dc.squareup.okio.ByteString,int) -> o
    1:66:boolean writeOneFrame() -> p
    1:20:void writePingFrame() -> q
    1:2:boolean send(java.lang.String) -> send
dc.squareup.okhttp3.internal.ws.RealWebSocket$1 -> b.a.c.g0.n.a$a:
    dc.squareup.okhttp3.internal.ws.RealWebSocket this$0 -> a
    1:1:void <init>(dc.squareup.okhttp3.internal.ws.RealWebSocket) -> <init>
    1:4:void run() -> run
dc.squareup.okhttp3.internal.ws.RealWebSocket$2 -> b.a.c.g0.n.a$b:
    dc.squareup.okhttp3.Request val$request -> a
    dc.squareup.okhttp3.internal.ws.RealWebSocket this$0 -> b
    1:1:void <init>(dc.squareup.okhttp3.internal.ws.RealWebSocket,dc.squareup.okhttp3.Request) -> <init>
    1:1:void onFailure(dc.squareup.okhttp3.Call,java.io.IOException) -> onFailure
    1:23:void onResponse(dc.squareup.okhttp3.Call,dc.squareup.okhttp3.Response) -> onResponse
dc.squareup.okhttp3.internal.ws.RealWebSocket$CancelRunnable -> b.a.c.g0.n.a$c:
    dc.squareup.okhttp3.internal.ws.RealWebSocket this$0 -> a
    1:1:void <init>(dc.squareup.okhttp3.internal.ws.RealWebSocket) -> <init>
    1:1:void run() -> run
dc.squareup.okhttp3.internal.ws.RealWebSocket$Close -> b.a.c.g0.n.a$d:
    dc.squareup.okio.ByteString reason -> b
    long cancelAfterCloseMillis -> c
    int code -> a
    1:4:void <init>(int,dc.squareup.okio.ByteString,long) -> <init>
dc.squareup.okhttp3.internal.ws.RealWebSocket$Message -> b.a.c.g0.n.a$e:
    dc.squareup.okio.ByteString data -> b
    int formatOpcode -> a
    1:3:void <init>(int,dc.squareup.okio.ByteString) -> <init>
dc.squareup.okhttp3.internal.ws.RealWebSocket$PingRunnable -> b.a.c.g0.n.a$f:
    dc.squareup.okhttp3.internal.ws.RealWebSocket this$0 -> a
    1:1:void <init>(dc.squareup.okhttp3.internal.ws.RealWebSocket) -> <init>
    1:1:void run() -> run
dc.squareup.okhttp3.internal.ws.RealWebSocket$Streams -> b.a.c.g0.n.a$g:
    dc.squareup.okio.BufferedSource source -> b
    boolean client -> a
    dc.squareup.okio.BufferedSink sink -> c
    1:4:void <init>(boolean,dc.squareup.okio.BufferedSource,dc.squareup.okio.BufferedSink) -> <init>
dc.squareup.okhttp3.internal.ws.WebSocketProtocol -> b.a.c.g0.n.b:
    1:2:java.lang.String closeCodeExceptionMessage(int) -> a
    1:8:void toggleMask(dc.squareup.okio.Buffer$UnsafeCursor,byte[]) -> b
    1:2:void validateCloseCode(int) -> c
dc.squareup.okhttp3.internal.ws.WebSocketReader -> b.a.c.g0.n.c:
    dc.squareup.okio.Buffer$UnsafeCursor maskCursor -> l
    long frameLength -> f
    byte[] maskKey -> k
    dc.squareup.okio.Buffer controlFrameBuffer -> i
    dc.squareup.okio.BufferedSource source -> b
    dc.squareup.okhttp3.internal.ws.WebSocketReader$FrameCallback frameCallback -> c
    boolean isFinalFrame -> g
    int opcode -> e
    boolean isControlFrame -> h
    boolean isClient -> a
    dc.squareup.okio.Buffer messageFrameBuffer -> j
    boolean closed -> d
    1:19:void <init>(boolean,dc.squareup.okio.BufferedSource,dc.squareup.okhttp3.internal.ws.WebSocketReader$FrameCallback) -> <init>
    1:5:void processNextFrame() -> a
    1:56:void readControlFrame() -> b
    1:61:void readHeader() -> c
    1:19:void readMessage() -> d
    1:11:void readMessageFrame() -> e
    1:6:void readUntilNonControlFrame() -> f
dc.squareup.okhttp3.internal.ws.WebSocketReader$FrameCallback -> b.a.c.g0.n.c$a:
    void onReadMessage(dc.squareup.okio.ByteString) -> a
    void onReadMessage(java.lang.String) -> b
    void onReadPing(dc.squareup.okio.ByteString) -> d
    void onReadPong(dc.squareup.okio.ByteString) -> e
    void onReadClose(int,java.lang.String) -> f
dc.squareup.okhttp3.internal.ws.WebSocketWriter -> b.a.c.g0.n.d:
    dc.squareup.okhttp3.internal.ws.WebSocketWriter$FrameSink frameSink -> g
    dc.squareup.okio.Buffer sinkBuffer -> d
    java.util.Random random -> b
    boolean writerClosed -> e
    dc.squareup.okio.Buffer buffer -> f
    boolean activeWriter -> h
    byte[] maskKey -> i
    boolean isClient -> a
    dc.squareup.okio.BufferedSink sink -> c
    dc.squareup.okio.Buffer$UnsafeCursor maskCursor -> j
    1:22:void <init>(boolean,dc.squareup.okio.BufferedSink,java.util.Random) -> <init>
    1:11:dc.squareup.okio.Sink newMessageSink(int,long) -> a
    1:17:void writeClose(int,dc.squareup.okio.ByteString) -> b
    1:36:void writeControlFrame(int,dc.squareup.okio.ByteString) -> c
    1:44:void writeMessageFrame(int,long,boolean,boolean) -> d
    1:1:void writePing(dc.squareup.okio.ByteString) -> e
    1:1:void writePong(dc.squareup.okio.ByteString) -> f
dc.squareup.okhttp3.internal.ws.WebSocketWriter$FrameSink -> b.a.c.g0.n.d$a:
    long contentLength -> b
    boolean isFirstFrame -> c
    int formatOpcode -> a
    boolean closed -> d
    dc.squareup.okhttp3.internal.ws.WebSocketWriter this$0 -> e
    1:1:void <init>(dc.squareup.okhttp3.internal.ws.WebSocketWriter) -> <init>
    1:14:void write(dc.squareup.okio.Buffer,long) -> b
    1:6:void close() -> close
    1:5:void flush() -> flush
    1:1:dc.squareup.okio.Timeout timeout() -> i
dc.squareup.okio.AsyncTimeout -> b.a.d.a:
    long IDLE_TIMEOUT_NANOS -> i
    dc.squareup.okio.AsyncTimeout head -> j
    long IDLE_TIMEOUT_MILLIS -> h
    dc.squareup.okio.AsyncTimeout next -> f
    long timeoutAt -> g
    boolean inQueue -> e
    1:2:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:26:dc.squareup.okio.AsyncTimeout awaitTimeout() -> i
    0:4:boolean cancelScheduledTimeout(dc.squareup.okio.AsyncTimeout) -> j
    1:9:void enter() -> k
    6:7:java.io.IOException exit(java.io.IOException) -> l
    4:5:void exit(boolean) -> m
    1:3:boolean exit() -> n
    1:3:java.io.IOException newTimeoutException(java.io.IOException) -> o
    1:1:long remainingNanos(long) -> p
    0:29:void scheduleTimeout(dc.squareup.okio.AsyncTimeout,long,boolean) -> q
    1:1:dc.squareup.okio.Sink sink(dc.squareup.okio.Sink) -> r
    1:1:dc.squareup.okio.Source source(dc.squareup.okio.Source) -> s
    void timedOut() -> t
dc.squareup.okio.AsyncTimeout$1 -> b.a.d.a$a:
    dc.squareup.okio.Sink val$sink -> a
    dc.squareup.okio.AsyncTimeout this$0 -> b
    1:1:void <init>(dc.squareup.okio.AsyncTimeout,dc.squareup.okio.Sink) -> <init>
    1:30:void write(dc.squareup.okio.Buffer,long) -> b
    1:11:void close() -> close
    1:11:void flush() -> flush
    1:1:dc.squareup.okio.Timeout timeout() -> i
    1:1:java.lang.String toString() -> toString
dc.squareup.okio.AsyncTimeout$2 -> b.a.d.a$b:
    dc.squareup.okio.Source val$source -> a
    dc.squareup.okio.AsyncTimeout this$0 -> b
    1:1:void <init>(dc.squareup.okio.AsyncTimeout,dc.squareup.okio.Source) -> <init>
    1:12:long read(dc.squareup.okio.Buffer,long) -> c
    1:11:void close() -> close
    1:1:dc.squareup.okio.Timeout timeout() -> i
    1:1:java.lang.String toString() -> toString
dc.squareup.okio.AsyncTimeout$Watchdog -> b.a.d.a$c:
    1:2:void <init>() -> <init>
    1:17:void run() -> run
dc.squareup.okio.Base64 -> b.a.d.b:
    byte[] MAP -> a
    1:8:void <clinit>() -> <clinit>
    1:1:java.lang.String encode(byte[]) -> a
    2:38:java.lang.String encode(byte[],byte[]) -> b
dc.squareup.okio.Buffer -> b.a.d.c:
    dc.squareup.okio.Segment head -> a
    long size -> b
    byte[] DIGITS -> c
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:1:short readShortLe() -> B
    1:1:dc.squareup.okio.BufferedSink write(dc.squareup.okio.ByteString) -> C
    1:1:void require(long) -> D
    1:1:long indexOf(byte) -> E
    1:65:long readHexadecimalUnsignedLong() -> F
    1:1:java.io.InputStream inputStream() -> G
    1:16:byte getByte(long) -> H
    3:49:long indexOf(byte,long,long) -> I
    2:8:dc.squareup.okio.Buffer$UnsafeCursor readAndWriteUnsafe(dc.squareup.okio.Buffer$UnsafeCursor) -> J
    1:1:dc.squareup.okio.ByteString readByteString() -> K
    4:25:java.lang.String readString(long,java.nio.charset.Charset) -> L
    1:3:java.lang.String readUtf8() -> M
    4:4:java.lang.String readUtf8(long) -> N
    8:17:java.lang.String readUtf8Line(long) -> O
    1:1:long size() -> P
    1:5:dc.squareup.okio.ByteString snapshot() -> Q
    6:7:dc.squareup.okio.ByteString snapshot(int) -> R
    1:9:dc.squareup.okio.Segment writableSegment(int) -> S
    4:5:dc.squareup.okio.Buffer write(dc.squareup.okio.ByteString) -> T
    6:7:dc.squareup.okio.Buffer write(byte[]) -> U
    8:22:dc.squareup.okio.Buffer write(byte[],int,int) -> V
    1:2:long writeAll(dc.squareup.okio.Source) -> W
    2:4:dc.squareup.okio.Buffer writeByte(int) -> X
    2:14:dc.squareup.okio.Buffer writeHexadecimalUnsignedLong(long) -> Y
    2:10:dc.squareup.okio.Buffer writeInt(int) -> Z
    2:2:dc.squareup.okio.ByteString readByteString(long) -> a
    2:14:dc.squareup.okio.Buffer writeLong(long) -> a0
    39:74:void write(dc.squareup.okio.Buffer,long) -> b
    2:8:dc.squareup.okio.Buffer writeShort(int) -> b0
    27:31:long read(dc.squareup.okio.Buffer,long) -> c
    4:17:dc.squareup.okio.Buffer writeString(java.lang.String,int,int,java.nio.charset.Charset) -> c0
    1:1:java.lang.Object clone() -> clone
    1:3:void clear() -> d
    3:3:dc.squareup.okio.Buffer writeUtf8(java.lang.String) -> d0
    2:12:dc.squareup.okio.Buffer clone() -> e
    4:75:dc.squareup.okio.Buffer writeUtf8(java.lang.String,int,int) -> e0
    1:25:boolean equals(java.lang.Object) -> equals
    1:7:long completeSegmentByteCount() -> f
    2:29:dc.squareup.okio.Buffer writeUtf8CodePoint(int) -> f0
    18:41:dc.squareup.okio.Buffer copyTo(dc.squareup.okio.Buffer,long,long) -> g
    dc.squareup.okio.Buffer emitCompleteSegments() -> h
    1:9:int hashCode() -> hashCode
    1:1:dc.squareup.okio.Timeout timeout() -> i
    dc.squareup.okio.Buffer buffer() -> j
    dc.squareup.okio.BufferedSink emit() -> k
    1:1:dc.squareup.okio.BufferedSink writeShort(int) -> l
    1:1:dc.squareup.okio.BufferedSink writeInt(int) -> m
    1:3:byte[] readByteArray() -> n
    1:1:boolean exhausted() -> o
    1:1:dc.squareup.okio.BufferedSink writeByte(int) -> p
    1:1:dc.squareup.okio.BufferedSink emitCompleteSegments() -> q
    2:12:java.lang.String readUtf8LineStrict(long) -> r
    2:14:int read(byte[],int,int) -> read
    15:26:int read(java.nio.ByteBuffer) -> read
    1:16:byte readByte() -> readByte
    8:10:void readFully(byte[]) -> readFully
    1:27:int readInt() -> readInt
    1:29:long readLong() -> readLong
    1:24:short readShort() -> readShort
    1:1:dc.squareup.okio.BufferedSink writeUtf8(java.lang.String) -> s
    1:12:void skip(long) -> skip
    1:7:void readFully(dc.squareup.okio.Buffer,long) -> t
    1:1:java.lang.String toString() -> toString
    3:3:dc.squareup.okio.BufferedSink write(byte[],int,int) -> u
    1:1:dc.squareup.okio.BufferedSink writeHexadecimalUnsignedLong(long) -> v
    1:1:java.lang.String readUtf8LineStrict() -> w
    23:36:int write(java.nio.ByteBuffer) -> write
    1:1:int readIntLe() -> x
    4:11:byte[] readByteArray(long) -> y
    2:2:dc.squareup.okio.BufferedSink write(byte[]) -> z
dc.squareup.okio.Buffer$2 -> b.a.d.c$a:
    dc.squareup.okio.Buffer this$0 -> a
    1:1:void <init>(dc.squareup.okio.Buffer) -> <init>
    1:1:int available() -> available
    1:1:int read() -> read
    2:2:int read(byte[],int,int) -> read
    1:1:java.lang.String toString() -> toString
dc.squareup.okio.Buffer$UnsafeCursor -> b.a.d.c$b:
    dc.squareup.okio.Buffer buffer -> a
    int start -> f
    int end -> g
    long offset -> d
    boolean readWrite -> b
    dc.squareup.okio.Segment segment -> c
    byte[] data -> e
    1:9:void <init>() -> <init>
    1:11:void close() -> close
    1:4:int next() -> d
    1:75:int seek(long) -> e
dc.squareup.okio.BufferedSink -> b.a.d.d:
    dc.squareup.okio.BufferedSink write(dc.squareup.okio.ByteString) -> C
    dc.squareup.okio.Buffer buffer() -> j
    dc.squareup.okio.BufferedSink emit() -> k
    dc.squareup.okio.BufferedSink writeShort(int) -> l
    dc.squareup.okio.BufferedSink writeInt(int) -> m
    dc.squareup.okio.BufferedSink writeByte(int) -> p
    dc.squareup.okio.BufferedSink emitCompleteSegments() -> q
    dc.squareup.okio.BufferedSink writeUtf8(java.lang.String) -> s
    dc.squareup.okio.BufferedSink write(byte[],int,int) -> u
    dc.squareup.okio.BufferedSink writeHexadecimalUnsignedLong(long) -> v
    dc.squareup.okio.BufferedSink write(byte[]) -> z
dc.squareup.okio.BufferedSource -> b.a.d.e:
    short readShortLe() -> B
    void require(long) -> D
    long indexOf(byte) -> E
    long readHexadecimalUnsignedLong() -> F
    java.io.InputStream inputStream() -> G
    dc.squareup.okio.ByteString readByteString(long) -> a
    dc.squareup.okio.Buffer buffer() -> j
    byte[] readByteArray() -> n
    boolean exhausted() -> o
    java.lang.String readUtf8LineStrict(long) -> r
    void readFully(dc.squareup.okio.Buffer,long) -> t
    java.lang.String readUtf8LineStrict() -> w
    int readIntLe() -> x
    byte[] readByteArray(long) -> y
dc.squareup.okio.ByteString -> b.a.d.f:
    char[] HEX_DIGITS -> d
    byte[] data -> a
    dc.squareup.okio.ByteString EMPTY -> e
    int hashCode -> b
    java.lang.String utf8 -> c
    1:6:void <clinit>() -> <clinit>
    1:2:void <init>(byte[]) -> <init>
    1:1:java.lang.String base64() -> a
    1:18:int codePointIndexToCharIndex(java.lang.String,int) -> b
    2:6:int compareTo(dc.squareup.okio.ByteString) -> c
    1:1:int compareTo(java.lang.Object) -> compareTo
    1:11:dc.squareup.okio.ByteString decodeHex(java.lang.String) -> d
    1:1:int decodeHexDigit(char) -> e
    1:3:boolean equals(java.lang.Object) -> equals
    1:3:dc.squareup.okio.ByteString digest(java.lang.String) -> f
    1:3:dc.squareup.okio.ByteString encodeUtf8(java.lang.String) -> g
    1:1:byte getByte(int) -> h
    1:2:int hashCode() -> hashCode
    1:7:java.lang.String hex() -> i
    1:2:dc.squareup.okio.ByteString of(byte[]) -> j
    1:1:boolean rangeEquals(int,dc.squareup.okio.ByteString,int,int) -> k
    2:4:boolean rangeEquals(int,byte[],int,int) -> l
    1:1:dc.squareup.okio.ByteString sha1() -> m
    1:1:dc.squareup.okio.ByteString sha256() -> n
    1:1:int size() -> o
    1:1:boolean startsWith(dc.squareup.okio.ByteString) -> p
    2:18:dc.squareup.okio.ByteString substring(int,int) -> q
    1:14:dc.squareup.okio.ByteString toAsciiLowercase() -> r
    1:1:byte[] toByteArray() -> s
    1:3:java.lang.String utf8() -> t
    1:18:java.lang.String toString() -> toString
    3:3:void write(dc.squareup.okio.Buffer) -> u
dc.squareup.okio.ForwardingSink -> b.a.d.g:
    dc.squareup.okio.Sink delegate -> a
    1:4:void <init>(dc.squareup.okio.Sink) -> <init>
    1:1:void write(dc.squareup.okio.Buffer,long) -> b
    1:1:void close() -> close
    1:1:void flush() -> flush
    1:1:dc.squareup.okio.Timeout timeout() -> i
    1:1:java.lang.String toString() -> toString
dc.squareup.okio.ForwardingSource -> b.a.d.h:
    dc.squareup.okio.Source delegate -> a
    1:4:void <init>(dc.squareup.okio.Source) -> <init>
    1:1:void close() -> close
    1:1:dc.squareup.okio.Source delegate() -> d
    1:1:dc.squareup.okio.Timeout timeout() -> i
    1:1:java.lang.String toString() -> toString
dc.squareup.okio.ForwardingTimeout -> b.a.d.i:
    dc.squareup.okio.Timeout delegate -> e
    1:4:void <init>(dc.squareup.okio.Timeout) -> <init>
    1:1:dc.squareup.okio.Timeout clearDeadline() -> a
    1:1:dc.squareup.okio.Timeout clearTimeout() -> b
    1:1:long deadlineNanoTime() -> c
    2:2:dc.squareup.okio.Timeout deadlineNanoTime(long) -> d
    1:1:boolean hasDeadline() -> e
    1:1:void throwIfReached() -> f
    1:1:dc.squareup.okio.Timeout timeout(long,java.util.concurrent.TimeUnit) -> g
    1:1:long timeoutNanos() -> h
    1:1:dc.squareup.okio.Timeout delegate() -> i
    1:2:dc.squareup.okio.ForwardingTimeout setDelegate(dc.squareup.okio.Timeout) -> j
dc.squareup.okio.GzipSource -> b.a.d.j:
    java.util.zip.Inflater inflater -> c
    dc.squareup.okio.BufferedSource source -> b
    dc.squareup.okio.InflaterSource inflaterSource -> d
    java.util.zip.CRC32 crc -> e
    int section -> a
    1:28:void <init>(dc.squareup.okio.Source) -> <init>
    1:30:long read(dc.squareup.okio.Buffer,long) -> c
    1:1:void close() -> close
    1:3:void checkEqual(java.lang.String,int,int) -> d
    1:57:void consumeHeader() -> e
    1:2:void consumeTrailer() -> f
    1:11:void updateCrc(dc.squareup.okio.Buffer,long,long) -> g
    1:1:dc.squareup.okio.Timeout timeout() -> i
dc.squareup.okio.InflaterSource -> b.a.d.k:
    dc.squareup.okio.BufferedSource source -> a
    java.util.zip.Inflater inflater -> b
    int bufferBytesHeldByInflater -> c
    boolean closed -> d
    2:8:void <init>(dc.squareup.okio.BufferedSource,java.util.zip.Inflater) -> <init>
    1:39:long read(dc.squareup.okio.Buffer,long) -> c
    1:4:void close() -> close
    1:13:boolean refill() -> d
    1:4:void releaseInflatedBytes() -> e
    1:1:dc.squareup.okio.Timeout timeout() -> i
dc.squareup.okio.Okio -> b.a.d.l:
    java.util.logging.Logger logger -> a
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    2:2:dc.squareup.okio.BufferedSink buffer(dc.squareup.okio.Sink) -> a
    1:1:dc.squareup.okio.BufferedSource buffer(dc.squareup.okio.Source) -> b
    1:2:boolean isAndroidGetsocknameError(java.lang.AssertionError) -> c
    2:4:dc.squareup.okio.Sink sink(java.io.OutputStream,dc.squareup.okio.Timeout) -> d
    5:10:dc.squareup.okio.Sink sink(java.net.Socket) -> e
    1:1:dc.squareup.okio.Source source(java.io.InputStream) -> f
    2:4:dc.squareup.okio.Source source(java.io.InputStream,dc.squareup.okio.Timeout) -> g
    9:14:dc.squareup.okio.Source source(java.net.Socket) -> h
    1:1:dc.squareup.okio.AsyncTimeout timeout(java.net.Socket) -> i
dc.squareup.okio.Okio$1 -> b.a.d.l$a:
    java.io.OutputStream val$out -> b
    dc.squareup.okio.Timeout val$timeout -> a
    1:1:void <init>(dc.squareup.okio.Timeout,java.io.OutputStream) -> <init>
    1:14:void write(dc.squareup.okio.Buffer,long) -> b
    1:1:void close() -> close
    1:1:void flush() -> flush
    1:1:dc.squareup.okio.Timeout timeout() -> i
    1:1:java.lang.String toString() -> toString
dc.squareup.okio.Okio$2 -> b.a.d.l$b:
    dc.squareup.okio.Timeout val$timeout -> a
    java.io.InputStream val$in -> b
    1:1:void <init>(dc.squareup.okio.Timeout,java.io.InputStream) -> <init>
    1:19:long read(dc.squareup.okio.Buffer,long) -> c
    1:1:void close() -> close
    1:1:dc.squareup.okio.Timeout timeout() -> i
    1:1:java.lang.String toString() -> toString
dc.squareup.okio.Okio$4 -> b.a.d.l$c:
    java.net.Socket val$socket -> k
    1:1:void <init>(java.net.Socket) -> <init>
    1:3:java.io.IOException newTimeoutException(java.io.IOException) -> o
    1:11:void timedOut() -> t
dc.squareup.okio.RealBufferedSink -> b.a.d.m:
    dc.squareup.okio.Buffer buffer -> a
    dc.squareup.okio.Sink sink -> b
    boolean closed -> c
    1:9:void <init>(dc.squareup.okio.Sink) -> <init>
    5:8:dc.squareup.okio.BufferedSink write(dc.squareup.okio.ByteString) -> C
    1:4:void write(dc.squareup.okio.Buffer,long) -> b
    1:21:void close() -> close
    1:6:void flush() -> flush
    1:1:dc.squareup.okio.Timeout timeout() -> i
    1:1:boolean isOpen() -> isOpen
    1:1:dc.squareup.okio.Buffer buffer() -> j
    1:4:dc.squareup.okio.BufferedSink emit() -> k
    1:4:dc.squareup.okio.BufferedSink writeShort(int) -> l
    1:4:dc.squareup.okio.BufferedSink writeInt(int) -> m
    1:4:dc.squareup.okio.BufferedSink writeByte(int) -> p
    1:4:dc.squareup.okio.BufferedSink emitCompleteSegments() -> q
    1:4:dc.squareup.okio.BufferedSink writeUtf8(java.lang.String) -> s
    1:1:java.lang.String toString() -> toString
    13:16:dc.squareup.okio.BufferedSink write(byte[],int,int) -> u
    1:4:dc.squareup.okio.BufferedSink writeHexadecimalUnsignedLong(long) -> v
    17:20:int write(java.nio.ByteBuffer) -> write
    9:12:dc.squareup.okio.BufferedSink write(byte[]) -> z
dc.squareup.okio.RealBufferedSource -> b.a.d.n:
    dc.squareup.okio.Buffer buffer -> a
    dc.squareup.okio.Source source -> b
    boolean closed -> c
    1:9:void <init>(dc.squareup.okio.Source) -> <init>
    1:2:short readShortLe() -> B
    1:1:void require(long) -> D
    1:1:long indexOf(byte) -> E
    1:17:long readHexadecimalUnsignedLong() -> F
    1:1:java.io.InputStream inputStream() -> G
    3:4:dc.squareup.okio.ByteString readByteString(long) -> a
    1:12:long read(dc.squareup.okio.Buffer,long) -> c
    1:4:void close() -> close
    3:22:long indexOf(byte,long,long) -> d
    1:5:boolean request(long) -> e
    1:1:dc.squareup.okio.Timeout timeout() -> i
    1:1:boolean isOpen() -> isOpen
    1:1:dc.squareup.okio.Buffer buffer() -> j
    1:2:byte[] readByteArray() -> n
    1:3:boolean exhausted() -> o
    2:13:java.lang.String readUtf8LineStrict(long) -> r
    23:28:int read(java.nio.ByteBuffer) -> read
    1:2:byte readByte() -> readByte
    1:18:void readFully(byte[]) -> readFully
    1:2:int readInt() -> readInt
    1:2:long readLong() -> readLong
    1:2:short readShort() -> readShort
    1:8:void skip(long) -> skip
    19:27:void readFully(dc.squareup.okio.Buffer,long) -> t
    1:1:java.lang.String toString() -> toString
    1:1:java.lang.String readUtf8LineStrict() -> w
    1:2:int readIntLe() -> x
    3:4:byte[] readByteArray(long) -> y
dc.squareup.okio.RealBufferedSource$1 -> b.a.d.n$a:
    dc.squareup.okio.RealBufferedSource this$0 -> a
    1:1:void <init>(dc.squareup.okio.RealBufferedSource) -> <init>
    1:3:int available() -> available
    1:1:void close() -> close
    1:7:int read() -> read
    8:17:int read(byte[],int,int) -> read
    1:1:java.lang.String toString() -> toString
dc.squareup.okio.Segment -> b.a.d.o:
    dc.squareup.okio.Segment prev -> g
    byte[] data -> a
    boolean owner -> e
    int pos -> b
    int limit -> c
    dc.squareup.okio.Segment next -> f
    boolean shared -> d
    1:4:void <init>() -> <init>
    5:10:void <init>(byte[],int,int,boolean,boolean) -> <init>
    1:9:void compact() -> a
    1:5:dc.squareup.okio.Segment pop() -> b
    1:4:dc.squareup.okio.Segment push(dc.squareup.okio.Segment) -> c
    1:2:dc.squareup.okio.Segment sharedCopy() -> d
    1:19:dc.squareup.okio.Segment split(int) -> e
    1:1:dc.squareup.okio.Segment unsharedCopy() -> f
    1:20:void writeTo(dc.squareup.okio.Segment,int) -> g
dc.squareup.okio.SegmentPool -> b.a.d.p:
    dc.squareup.okio.Segment next -> a
    long byteCount -> b
    1:1:void <init>() -> <init>
    1:10:void recycle(dc.squareup.okio.Segment) -> a
    1:11:dc.squareup.okio.Segment take() -> b
dc.squareup.okio.SegmentedByteString -> b.a.d.q:
    int[] directory -> g
    byte[][] segments -> f
    1:31:void <init>(dc.squareup.okio.Buffer,int) -> <init>
    1:1:java.lang.String base64() -> a
    1:3:boolean equals(java.lang.Object) -> equals
    1:5:byte getByte(int) -> h
    1:17:int hashCode() -> hashCode
    1:1:java.lang.String hex() -> i
    1:9:boolean rangeEquals(int,dc.squareup.okio.ByteString,int,int) -> k
    10:21:boolean rangeEquals(int,byte[],int,int) -> l
    1:1:dc.squareup.okio.ByteString sha1() -> m
    1:1:dc.squareup.okio.ByteString sha256() -> n
    1:1:int size() -> o
    2:2:dc.squareup.okio.ByteString substring(int,int) -> q
    1:1:dc.squareup.okio.ByteString toAsciiLowercase() -> r
    1:6:byte[] toByteArray() -> s
    1:1:java.lang.String utf8() -> t
    1:1:java.lang.String toString() -> toString
    6:18:void write(dc.squareup.okio.Buffer) -> u
    1:1:int segment(int) -> v
    1:1:dc.squareup.okio.ByteString toByteString() -> w
dc.squareup.okio.Sink -> b.a.d.r:
    void write(dc.squareup.okio.Buffer,long) -> b
    dc.squareup.okio.Timeout timeout() -> i
dc.squareup.okio.Source -> b.a.d.s:
    long read(dc.squareup.okio.Buffer,long) -> c
    dc.squareup.okio.Timeout timeout() -> i
dc.squareup.okio.Timeout -> b.a.d.t:
    dc.squareup.okio.Timeout NONE -> d
    long deadlineNanoTime -> b
    long timeoutNanos -> c
    boolean hasDeadline -> a
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:1:dc.squareup.okio.Timeout clearDeadline() -> a
    1:1:dc.squareup.okio.Timeout clearTimeout() -> b
    1:3:long deadlineNanoTime() -> c
    4:5:dc.squareup.okio.Timeout deadlineNanoTime(long) -> d
    1:1:boolean hasDeadline() -> e
    1:9:void throwIfReached() -> f
    1:3:dc.squareup.okio.Timeout timeout(long,java.util.concurrent.TimeUnit) -> g
    1:1:long timeoutNanos() -> h
dc.squareup.okio.Timeout$1 -> b.a.d.t$a:
    1:1:void <init>() -> <init>
    dc.squareup.okio.Timeout deadlineNanoTime(long) -> d
    void throwIfReached() -> f
    dc.squareup.okio.Timeout timeout(long,java.util.concurrent.TimeUnit) -> g
dc.squareup.okio.Util -> b.a.d.u:
    java.nio.charset.Charset UTF_8 -> a
    1:1:void <clinit>() -> <clinit>
    1:1:boolean arrayRangeEquals(byte[],int,byte[],int,int) -> a
    1:2:void checkOffsetAndCount(long,long,long) -> b
    int reverseBytesInt(int) -> c
    short reverseBytesShort(short) -> d
    1:1:void sneakyRethrow(java.lang.Throwable) -> e
    1:1:void sneakyThrow2(java.lang.Throwable) -> f
io.dcloud.EntryProxy -> io.dcloud.EntryProxy:
    1:6:void <init>() -> <init>
    1:7:void clearData() -> clearData
    1:1:void destroy(android.app.Activity) -> destroy
    1:1:boolean didCreate() -> didCreate
    1:2:io.dcloud.common.DHInterface.ICore getCoreHandler() -> getCoreHandler
    1:2:android.app.Activity getEntryActivity() -> getEntryActivity
    1:1:io.dcloud.EntryProxy getInstnace() -> getInstnace
    1:17:io.dcloud.EntryProxy init(android.app.Activity,io.dcloud.common.DHInterface.ICore$ICoreStatusListener) -> init
    18:18:io.dcloud.EntryProxy init(android.app.Activity) -> init
    1:2:boolean onActivityExecute(android.app.Activity,io.dcloud.common.DHInterface.ISysEventListener$SysEventType,java.lang.Object) -> onActivityExecute
    1:1:void onConfigurationChanged(android.app.Activity,int) -> onConfigurationChanged
    1:1:boolean onCreate(android.os.Bundle,android.widget.FrameLayout,io.dcloud.feature.internal.sdk.SDK$IntegratedMode,io.dcloud.common.DHInterface.IOnCreateSplashView) -> onCreate
    2:2:boolean onCreate(android.os.Bundle,io.dcloud.feature.internal.sdk.SDK$IntegratedMode,io.dcloud.common.DHInterface.IOnCreateSplashView) -> onCreate
    3:6:boolean onCreate(android.app.Activity,android.os.Bundle,io.dcloud.feature.internal.sdk.SDK$IntegratedMode,io.dcloud.common.DHInterface.IOnCreateSplashView) -> onCreate
    7:7:boolean onCreate(android.os.Bundle) -> onCreate
    1:1:void onNewIntent(android.app.Activity,android.content.Intent) -> onNewIntent
    1:2:void onPause(android.app.Activity) -> onPause
    1:2:void onResume(android.app.Activity) -> onResume
    1:15:void onStop(android.app.Activity) -> onStop
io.dcloud.PandoraEntry -> io.dcloud.PandoraEntry:
    1:1:void <init>() -> <init>
    1:29:void a(android.content.Intent) -> a
    1:4:void attachBaseContext(android.content.Context) -> attachBaseContext
    1:29:void onCreate(android.os.Bundle) -> onCreate
    1:2:void onPause() -> onPause
io.dcloud.PandoraEntry$a -> io.dcloud.PandoraEntry$a:
    1:1:void <init>(io.dcloud.PandoraEntry) -> <init>
    1:1:void run() -> run
io.dcloud.PandoraEntryActivity -> io.dcloud.PandoraEntryActivity:
    1:1:void <init>() -> <init>
io.dcloud.PdrR -> io.dcloud.PdrR:
    1:93:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:4:int getInt(android.content.Context,java.lang.String,java.lang.String) -> getInt
    1:4:java.lang.String getStringValve(android.content.Context,java.lang.String) -> getStringValve
io.dcloud.ProcessMediator -> io.dcloud.ProcessMediator:
    1:49:void <init>() -> <init>
    1:29:void onCreate(android.os.Bundle) -> onCreate
    1:4:void onDestroy() -> onDestroy
    1:7:void onResult(android.content.Intent) -> onResult
    1:1:void onResume() -> onResume
io.dcloud.ProcessMediator$a -> io.dcloud.ProcessMediator$a:
    1:1:void <init>(io.dcloud.ProcessMediator) -> <init>
    1:2:void onReceive(android.content.Context,android.content.Intent) -> onReceive
io.dcloud.RInformation -> io.dcloud.RInformation:
    1:1:void <init>() -> <init>
io.dcloud.WebAppActivity -> io.dcloud.WebAppActivity:
    1:710:void <init>() -> <init>
    1:1:java.util.ArrayList a(io.dcloud.WebAppActivity) -> a
    2:2:void a(io.dcloud.WebAppActivity,java.lang.String,int) -> a
    3:25:android.graphics.Bitmap a(java.lang.String,java.lang.String,java.lang.String) -> a
    26:35:android.view.View a(android.content.Context,android.graphics.Bitmap,java.lang.String,java.lang.String) -> a
    1:5:void addClickStatusbarCallBack(io.dcloud.common.DHInterface.ICallBack) -> addClickStatusbarCallBack
    1:25:void addViewToContentView(android.view.View) -> addViewToContentView
    1:4:void attachBaseContext(android.content.Context) -> attachBaseContext
    1:137:java.lang.Object b(android.content.Context) -> b
    138:154:java.lang.String b(java.lang.String) -> b
    155:159:void b(java.lang.String,int) -> b
    1:1:void callBack(java.lang.String,android.os.Bundle) -> callBack
    1:1:void checkAndRequestPhoneState() -> checkAndRequestPhoneState
    1:1:void checkAndRequestStoragePermission() -> checkAndRequestStoragePermission
    1:28:void closeAppStreamSplash(java.lang.String) -> closeAppStreamSplash
    1:1:void deviceInjectionGeoLocationJs(android.content.Context) -> deviceInjectionGeoLocationJs
    1:12:void e() -> e
    1:1:java.lang.String f() -> f
    1:4:void finish() -> finish
    1:8:void g() -> g
    1:1:android.content.Context getContext() -> getContext
    1:8:java.lang.String getErrorTipMsg() -> getErrorTipMsg
    1:1:android.view.View getProgressView() -> getProgressView
    1:1:android.content.res.Resources getResources() -> getResources
    1:1:java.lang.String getUrlByFilePath(java.lang.String,java.lang.String) -> getUrlByFilePath
    1:2:boolean hasAdService() -> hasAdService
    1:3:void initBackToFrontSplashAd() -> initBackToFrontSplashAd
    1:1:boolean isMultiProcessMode() -> isMultiProcessMode
    1:7:boolean isSideBarCanRefresh() -> isSideBarCanRefresh
    1:1:android.widget.FrameLayout obtainActivityContentView() -> obtainActivityContentView
    1:1:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    1:1:void onAsyncStartAppEnd(java.lang.String,java.lang.Object) -> onAsyncStartAppEnd
    1:1:java.lang.Object onAsyncStartAppStart(java.lang.String) -> onAsyncStartAppStart
    1:9:void onBackPressed() -> onBackPressed
    1:1:void onCloseSplash() -> onCloseSplash
    1:1:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    1:44:void onCreate(android.os.Bundle) -> onCreate
    1:24:void onCreateAdSplash(android.content.Context) -> onCreateAdSplash
    1:1:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    1:25:java.lang.Object onCreateSplash(android.content.Context) -> onCreateSplash
    1:24:void onDestroy() -> onDestroy
    1:1:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    1:1:boolean onKeyEventExecute(io.dcloud.common.DHInterface.ISysEventListener$SysEventType,int,android.view.KeyEvent) -> onKeyEventExecute
    1:1:boolean onKeyLongPress(int,android.view.KeyEvent) -> onKeyLongPress
    1:1:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    1:1:void onLowMemory() -> onLowMemory
    1:3:void onNewIntentImpl(android.content.Intent) -> onNewIntentImpl
    1:1:void onPause() -> onPause
    1:1:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    1:2:void onResume() -> onResume
    1:1:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    1:7:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    1:1:void registerLocalReceiver(io.dcloud.feature.internal.reflect.BroadcastReceiver,android.content.IntentFilter) -> registerLocalReceiver
    1:1:android.content.Intent registerReceiver(io.dcloud.feature.internal.reflect.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler) -> registerReceiver
    2:2:void registerReceiver(io.dcloud.feature.internal.reflect.BroadcastReceiver,android.content.IntentFilter) -> registerReceiver
    1:2:void removeClickStatusbarCallBack(io.dcloud.common.DHInterface.ICallBack) -> removeClickStatusbarCallBack
    1:1:void sendLocalBroadcast(android.content.Intent) -> sendLocalBroadcast
    1:9:void setProgressView() -> setProgressView
    1:1:void setSecondPrivacyAlert() -> setSecondPrivacyAlert
    1:10:void setSplashCloseListener(java.lang.String,io.dcloud.common.DHInterface.ICallBack) -> setSplashCloseListener
    1:25:void setViewAsContentView(android.view.View,android.widget.FrameLayout$LayoutParams) -> setViewAsContentView
    1:5:void setWebViewIntoPreloadView(android.view.View) -> setWebViewIntoPreloadView
    1:44:void showDownloadDialog(java.lang.String,java.lang.String) -> showDownloadDialog
    1:2:void showSplashWaiting() -> showSplashWaiting
    1:1:void unregisterReceiver(io.dcloud.feature.internal.reflect.BroadcastReceiver) -> unregisterReceiver
    1:8:void updateParam(java.lang.String,java.lang.Object) -> updateParam
    1:2:void updateSplash(java.lang.String) -> updateSplash
io.dcloud.WebAppActivity$a -> io.dcloud.WebAppActivity$a:
    1:1:void <init>(io.dcloud.WebAppActivity) -> <init>
    1:4:void onReceive(android.content.Context,android.content.Intent) -> onReceive
io.dcloud.WebAppActivity$b -> io.dcloud.WebAppActivity$b:
    1:1:void <init>(io.dcloud.WebAppActivity) -> <init>
    1:5:java.lang.Object onCallBack(int,java.lang.Object) -> onCallBack
io.dcloud.WebAppActivity$c -> io.dcloud.WebAppActivity$c:
    1:1:void <init>(io.dcloud.WebAppActivity,java.lang.String) -> <init>
    1:1:void onClick(android.content.DialogInterface,int) -> onClick
io.dcloud.WebAppActivity$d -> io.dcloud.WebAppActivity$d:
    1:1:void <init>(io.dcloud.WebAppActivity,java.lang.String) -> <init>
    1:2:void onClick(android.content.DialogInterface,int) -> onClick
io.dcloud.WebAppActivity$e -> io.dcloud.WebAppActivity$e:
    1:1:void <init>(io.dcloud.WebAppActivity,java.lang.String) -> <init>
    1:3:boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
io.dcloud.WebAppActivity$f -> io.dcloud.WebAppActivity$f:
    1:18:void <init>(io.dcloud.WebAppActivity,android.app.Activity) -> <init>
    1:16:void a() -> a
    17:25:void a(java.lang.String) -> a
    1:9:void handleMessage(android.os.Message) -> handleMessage
    1:18:void onBack() -> onBack
    1:9:void onFront() -> onFront
io.dcloud.WebAppActivity$g -> io.dcloud.WebAppActivity$g:
    1:23:void <init>(io.dcloud.WebAppActivity,android.content.Context) -> <init>
    1:1:void a() -> a
    2:24:void a(int) -> a
    1:1:void b() -> b
    1:3:void onDraw(android.graphics.Canvas) -> onDraw
    1:2:void onMeasure(int,int) -> onMeasure
io.dcloud.WebAppActivity$g$a -> io.dcloud.WebAppActivity$g$a:
    1:1:void <init>(io.dcloud.WebAppActivity$g) -> <init>
    1:10:void run() -> run
io.dcloud.WebAppActivity$g$b -> io.dcloud.WebAppActivity$g$b:
    1:1:void <init>(io.dcloud.WebAppActivity$g) -> <init>
    1:14:void run() -> run
io.dcloud.WebviewActivity -> io.dcloud.WebviewActivity:
    1:20:void <init>() -> <init>
    1:1:android.widget.TextView a(io.dcloud.WebviewActivity) -> a
    2:2:boolean a(io.dcloud.WebviewActivity,boolean) -> a
    3:185:void a(android.webkit.WebView) -> a
    1:1:boolean b(io.dcloud.WebviewActivity) -> b
    2:9:boolean b() -> b
    1:1:io.dcloud.WebviewActivity$e c(io.dcloud.WebviewActivity) -> c
    2:5:void c() -> c
    1:1:android.widget.FrameLayout d(io.dcloud.WebviewActivity) -> d
    2:74:void d() -> d
    1:1:boolean e(io.dcloud.WebviewActivity) -> e
    2:6:void e() -> e
    1:1:android.widget.TextView f(io.dcloud.WebviewActivity) -> f
    2:7:void f() -> f
    1:6:void finish() -> finish
    1:1:android.webkit.WebView g(io.dcloud.WebviewActivity) -> g
    2:15:void g() -> g
    1:1:void h(io.dcloud.WebviewActivity) -> h
    2:42:void h() -> h
    1:1:void i(io.dcloud.WebviewActivity) -> i
    2:14:void i() -> i
    1:1:void j(io.dcloud.WebviewActivity) -> j
    1:9:void onClick(android.view.View) -> onClick
    1:7:void onCreate(android.os.Bundle) -> onCreate
    1:13:void onDestroy() -> onDestroy
    1:8:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    1:20:void setImmersive(android.app.Activity) -> setImmersive
io.dcloud.WebviewActivity$a -> io.dcloud.WebviewActivity$a:
    1:1:void <init>(io.dcloud.WebviewActivity) -> <init>
    1:2:void onGeolocationPermissionsShowPrompt(java.lang.String,android.webkit.GeolocationPermissions$Callback) -> onGeolocationPermissionsShowPrompt
    1:15:void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
    1:3:void onReceivedTitle(android.webkit.WebView,java.lang.String) -> onReceivedTitle
io.dcloud.WebviewActivity$b -> io.dcloud.WebviewActivity$b:
    1:1:void <init>(io.dcloud.WebviewActivity) -> <init>
    1:2:void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    1:37:void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
    1:68:boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
io.dcloud.WebviewActivity$b$a -> io.dcloud.WebviewActivity$b$a:
    1:1:void <init>(io.dcloud.WebviewActivity$b,android.content.Intent) -> <init>
    1:1:void onClick(android.view.View) -> onClick
io.dcloud.WebviewActivity$b$b -> io.dcloud.WebviewActivity$b$b:
    1:1:void <init>(io.dcloud.WebviewActivity$b,android.app.AlertDialog,android.net.http.SslError,android.webkit.SslErrorHandler) -> <init>
    1:7:void onClick(android.content.DialogInterface,int) -> onClick
io.dcloud.WebviewActivity$c -> io.dcloud.WebviewActivity$c:
    1:1:void <init>(io.dcloud.WebviewActivity) -> <init>
    1:77:void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long) -> onDownloadStart
io.dcloud.WebviewActivity$c$a -> io.dcloud.WebviewActivity$c$a:
    1:1:void <init>(io.dcloud.WebviewActivity$c,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    1:1:void onClick(android.view.View) -> onClick
io.dcloud.WebviewActivity$c$a$a -> io.dcloud.WebviewActivity$c$a$a:
    1:1:void <init>(io.dcloud.WebviewActivity$c$a) -> <init>
    1:15:java.lang.Object onCallBack(int,android.content.Context,java.lang.Object) -> onCallBack
io.dcloud.WebviewActivity$d -> io.dcloud.WebviewActivity$d:
    1:1:void <init>(io.dcloud.WebviewActivity) -> <init>
    1:6:void onItemClick(int) -> onItemClick
io.dcloud.WebviewActivity$e -> io.dcloud.WebviewActivity$e:
    1:12:void <init>(android.content.Context) -> <init>
    1:1:void a() -> a
    2:24:void a(int) -> a
    1:1:int b() -> b
    1:4:void c() -> c
    1:3:void onDraw(android.graphics.Canvas) -> onDraw
    1:2:void onMeasure(int,int) -> onMeasure
io.dcloud.WebviewActivity$e$a -> io.dcloud.WebviewActivity$e$a:
    1:1:void <init>(io.dcloud.WebviewActivity$e) -> <init>
    1:10:void run() -> run
io.dcloud.WebviewActivity$e$b -> io.dcloud.WebviewActivity$e$b:
    1:1:void <init>(io.dcloud.WebviewActivity$e) -> <init>
    1:13:void run() -> run
io.dcloud.a -> io.dcloud.a:
    1:3:void a(android.app.Application) -> a
    4:7:void a(android.content.Context) -> a
    8:13:java.lang.Object a(android.content.Context,java.lang.String,java.lang.String,java.lang.Object) -> a
    14:22:io.dcloud.common.DHInterface.IWaiter a() -> a
    23:24:android.view.View a(android.app.Activity,io.dcloud.common.DHInterface.ICallBack,java.lang.String) -> a
    1:8:boolean b() -> b
io.dcloud.ads.activity.WebViewActivity -> io.dcloud.ads.activity.WebViewActivity:
    1:1:void <init>() -> <init>
io.dcloud.ads.base.entry.AdData -> io.dcloud.ads.base.entry.AdData:
    1:1:void <clinit>() -> <clinit>
    1:17:void <init>() -> <init>
    18:492:void <init>(android.os.Parcel) -> <init>
    1:1:java.lang.String a(io.dcloud.ads.base.entry.AdData) -> a
    2:2:byte[] a(io.dcloud.ads.base.entry.AdData,byte[]) -> a
    3:3:java.lang.String a(io.dcloud.ads.base.entry.AdData,java.lang.String) -> a
    4:11:void a(org.json.JSONObject) -> a
    12:15:void a(org.json.JSONArray,java.util.List) -> a
    16:25:void a(org.json.JSONObject,io.dcloud.ads.base.entry.AdData$e) -> a
    26:26:void a(android.view.MotionEvent) -> a
    27:27:void a(android.content.Context) -> a
    28:38:java.lang.String a(java.lang.String) -> a
    39:41:void a(java.util.List) -> a
    42:42:void a() -> a
    43:43:void a(android.graphics.RectF) -> a
    1:1:byte[] b(io.dcloud.ads.base.entry.AdData) -> b
    2:52:void b(org.json.JSONObject,io.dcloud.ads.base.entry.AdData$e) -> b
    53:53:void b(org.json.JSONObject) -> b
    54:54:void b(android.view.MotionEvent) -> b
    55:94:void b(android.content.Context) -> b
    95:95:java.lang.String b() -> b
    1:1:java.lang.String c(io.dcloud.ads.base.entry.AdData) -> c
    2:2:void c(android.content.Context) -> c
    3:3:java.lang.String c() -> c
    1:1:java.lang.String d(io.dcloud.ads.base.entry.AdData) -> d
    2:2:java.lang.String d() -> d
    1:1:java.lang.String e(io.dcloud.ads.base.entry.AdData) -> e
    2:2:java.lang.String e() -> e
    1:1:java.lang.String f(io.dcloud.ads.base.entry.AdData) -> f
    2:2:java.lang.String f() -> f
    1:1:java.lang.String g(io.dcloud.ads.base.entry.AdData) -> g
    2:2:byte[] g() -> g
    1:6:java.lang.String h() -> h
    1:1:java.lang.String i() -> i
    1:1:java.lang.String j() -> j
    1:1:java.lang.String k() -> k
    1:5:boolean l() -> l
    1:1:boolean m() -> m
    1:25:void writeToParcel(android.os.Parcel,int) -> writeToParcel
io.dcloud.ads.base.entry.AdData$ExtBean -> io.dcloud.ads.base.entry.AdData$ExtBean:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    2:4:void <init>(android.os.Parcel) -> <init>
    1:2:void writeToParcel(android.os.Parcel,int) -> writeToParcel
io.dcloud.ads.base.entry.AdData$ExtBean$a -> io.dcloud.ads.base.entry.AdData$ExtBean$a:
    1:1:void <init>() -> <init>
    1:1:io.dcloud.ads.base.entry.AdData$ExtBean a(android.os.Parcel) -> a
    2:2:io.dcloud.ads.base.entry.AdData$ExtBean[] a(int) -> a
    1:1:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1:1:java.lang.Object[] newArray(int) -> newArray
io.dcloud.ads.base.entry.AdData$TrackerBean -> io.dcloud.ads.base.entry.AdData$TrackerBean:
    1:1:void <clinit>() -> <clinit>
    1:2:void <init>(java.lang.String) -> <init>
    3:4:void <init>(android.os.Parcel) -> <init>
    1:1:java.lang.String a(io.dcloud.ads.base.entry.AdData$TrackerBean) -> a
    1:1:void writeToParcel(android.os.Parcel,int) -> writeToParcel
io.dcloud.ads.base.entry.AdData$TrackerBean$a -> io.dcloud.ads.base.entry.AdData$TrackerBean$a:
    1:1:void <init>() -> <init>
    1:1:io.dcloud.ads.base.entry.AdData$TrackerBean a(android.os.Parcel) -> a
    2:2:io.dcloud.ads.base.entry.AdData$TrackerBean[] a(int) -> a
    1:1:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1:1:java.lang.Object[] newArray(int) -> newArray
io.dcloud.ads.base.entry.AdData$a -> io.dcloud.ads.base.entry.AdData$a:
    1:1:void <init>(io.dcloud.ads.base.entry.AdData,java.lang.String,io.dcloud.ads.base.entry.AdData$e) -> <init>
    1:10:void run() -> run
io.dcloud.ads.base.entry.AdData$b -> io.dcloud.ads.base.entry.AdData$b:
    1:1:void <init>(io.dcloud.ads.base.entry.AdData,android.content.Context) -> <init>
    1:2:void run() -> run
io.dcloud.ads.base.entry.AdData$c -> io.dcloud.ads.base.entry.AdData$c:
    1:1:void <init>(io.dcloud.ads.base.entry.AdData,io.dcloud.ads.base.entry.AdData$TrackerBean) -> <init>
    1:2:void run() -> run
io.dcloud.ads.base.entry.AdData$d -> io.dcloud.ads.base.entry.AdData$d:
    1:1:void <init>() -> <init>
    1:1:io.dcloud.ads.base.entry.AdData a(android.os.Parcel) -> a
    2:2:io.dcloud.ads.base.entry.AdData[] a(int) -> a
    1:1:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1:1:java.lang.Object[] newArray(int) -> newArray
io.dcloud.ads.base.entry.EAdData -> io.dcloud.ads.base.entry.EAdData:
    1:1:void <init>() -> <init>
    1:1:void a() -> a
io.dcloud.ads.base.entry.a -> io.dcloud.ads.base.entry.a:
    1:2:void <init>(java.lang.String) -> <init>
    1:7:void a(java.lang.String) -> a
    8:14:void a(android.content.Context,io.dcloud.ads.base.entry.AdData) -> a
    15:15:java.lang.String a() -> a
    1:1:boolean b() -> b
io.dcloud.ads.base.service.DownloadService -> io.dcloud.ads.base.service.DownloadService:
    1:6:void <init>() -> <init>
    1:1:void a(io.dcloud.ads.base.service.DownloadService,java.lang.String,io.dcloud.ads.base.entry.AdData) -> a
    2:9:void a() -> a
    10:28:void a(java.lang.String,io.dcloud.ads.base.entry.AdData) -> a
    29:29:void a(android.content.Context,io.dcloud.ads.base.entry.AdData,int) -> a
    1:1:void onCreate() -> onCreate
    1:16:void onHandleWork(android.content.Intent) -> onHandleWork
io.dcloud.ads.base.service.DownloadService$a -> io.dcloud.ads.base.service.DownloadService$a:
    1:1:void <init>(android.content.Context,io.dcloud.ads.base.entry.AdData,int) -> <init>
    1:1:void run() -> run
io.dcloud.ads.base.service.DownloadService$b -> io.dcloud.ads.base.service.DownloadService$b:
    1:5:void <init>(io.dcloud.ads.base.service.DownloadService,io.dcloud.ads.base.entry.AdData) -> <init>
    1:2:java.lang.String a() -> a
    1:1:dc.squareup.okhttp3.Request b() -> b
    1:1:boolean c() -> c
    1:2:void onFailure(dc.squareup.okhttp3.Call,java.io.IOException) -> onFailure
    1:8:void onResponse(dc.squareup.okhttp3.Call,dc.squareup.okhttp3.Response) -> onResponse
io.dcloud.ads.base.service.DownloadService$c -> io.dcloud.ads.base.service.DownloadService$c:
    1:4:void <init>(io.dcloud.ads.base.service.DownloadService,io.dcloud.ads.base.entry.AdData,android.app.Application) -> <init>
    1:6:void onReceive(android.content.Context,android.content.Intent) -> onReceive
io.dcloud.ads.base.service.provider.DCloudAdFileProvider -> io.dcloud.ads.base.service.provider.DCloudAdFileProvider:
    1:1:void <init>() -> <init>
io.dcloud.application.DCLoudApplicationImpl -> io.dcloud.application.DCLoudApplicationImpl:
    1:220:void <init>() -> <init>
    1:2:void addActivityStatusListener(io.dcloud.application.DCLoudApplicationImpl$ActivityStatusListener) -> addActivityStatusListener
    1:5:void attachBaseContext(android.content.Context) -> attachBaseContext
    1:1:android.content.Context getContext() -> getContext
    1:1:io.dcloud.common.DHInterface.INativeAppInfo getNativeInfo(android.app.Application) -> getNativeInfo
    1:6:void init(android.app.Application,boolean) -> init
    1:4:void initLanguageConfig() -> initLanguageConfig
    1:2:void initX5(android.app.Application) -> initX5
    1:1:boolean isInit() -> isInit
    1:8:boolean isMainProcess(android.content.Context) -> isMainProcess
    1:52:void onCreate(android.app.Application) -> onCreate
    1:2:void removeActivityStatusListener(io.dcloud.application.DCLoudApplicationImpl$ActivityStatusListener) -> removeActivityStatusListener
    1:4:io.dcloud.application.DCLoudApplicationImpl self() -> self
    1:2:void setContext(android.content.Context) -> setContext
    1:2:void stopActivityStatusListener() -> stopActivityStatusListener
    1:3:void supportMultiDex(android.content.Context) -> supportMultiDex
    1:4:void webviewSetPath(android.content.Context) -> webviewSetPath
io.dcloud.application.DCLoudApplicationImpl$ActivityCallbacks -> io.dcloud.application.DCLoudApplicationImpl$ActivityCallbacks:
    1:6:void <init>(io.dcloud.application.DCLoudApplicationImpl) -> <init>
    7:7:void <init>(io.dcloud.application.DCLoudApplicationImpl,io.dcloud.application.DCLoudApplicationImpl$1) -> <init>
    1:3:void addListener(io.dcloud.application.DCLoudApplicationImpl$ActivityStatusListener) -> addListener
    1:1:void onActivityPaused(android.app.Activity) -> onActivityPaused
    1:1:void onActivityResumed(android.app.Activity) -> onActivityResumed
    1:13:void onActivityStarted(android.app.Activity) -> onActivityStarted
    1:22:void onActivityStopped(android.app.Activity) -> onActivityStopped
    1:2:void removeListener(io.dcloud.application.DCLoudApplicationImpl$ActivityStatusListener) -> removeListener
    1:1:void stopListener() -> stopListener
io.dcloud.application.DCLoudApplicationImpl$DynamicLanguageReceiver -> io.dcloud.application.DCLoudApplicationImpl$DynamicLanguageReceiver:
    1:1:void <init>(io.dcloud.application.DCLoudApplicationImpl) -> <init>
    1:5:void onReceive(android.content.Context,android.content.Intent) -> onReceive
io.dcloud.application.DCloudApplication -> io.dcloud.application.DCloudApplication:
    1:2:void <init>() -> <init>
    1:1:void addActivityStatusListener(io.dcloud.application.DCLoudApplicationImpl$ActivityStatusListener) -> addActivityStatusListener
    1:7:void attachBaseContext(android.content.Context) -> attachBaseContext
    1:2:void onCreate() -> onCreate
    1:2:void onLowMemory() -> onLowMemory
    1:2:void onTrimMemory(int) -> onTrimMemory
    1:1:void removeActivityStatusListener(io.dcloud.application.DCLoudApplicationImpl$ActivityStatusListener) -> removeActivityStatusListener
    1:1:void stopB2FOnce() -> stopB2FOnce
io.dcloud.b -> io.dcloud.b:
    1:11:void <init>() -> <init>
    1:1:void a(io.dcloud.b) -> a
    2:2:void a(io.dcloud.b,android.content.Intent) -> a
    3:3:void a(io.dcloud.b,java.lang.String,int) -> a
    4:4:void a(io.dcloud.b,java.lang.String[]) -> a
    5:5:void a(java.lang.String[]) -> a
    6:34:void a(java.lang.String,int) -> a
    35:50:void a(android.content.Context) -> a
    51:53:void a(android.content.Intent) -> a
    1:1:java.lang.String b(io.dcloud.b) -> b
    1:1:java.lang.String c(io.dcloud.b) -> c
    2:6:void c() -> c
    1:8:void checkAndRequestPhoneState() -> checkAndRequestPhoneState
    1:27:void checkAndRequestStoragePermission() -> checkAndRequestStoragePermission
    1:1:int d(io.dcloud.b) -> d
    2:12:void d() -> d
    1:3:void displayBriefMemory() -> displayBriefMemory
    1:1:int e(io.dcloud.b) -> e
    1:10:android.content.res.Resources getResources() -> getResources
    1:6:void handleNewIntent(android.content.Intent) -> handleNewIntent
    1:13:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    1:9:void onBackPressed() -> onBackPressed
    1:6:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    1:83:void onCreate(android.os.Bundle) -> onCreate
    1:3:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    1:9:void onDestroy() -> onDestroy
    1:14:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    1:1:boolean onKeyEventExecute(io.dcloud.common.DHInterface.ISysEventListener$SysEventType,int,android.view.KeyEvent) -> onKeyEventExecute
    1:5:boolean onKeyLongPress(int,android.view.KeyEvent) -> onKeyLongPress
    1:9:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    1:3:void onLowMemory() -> onLowMemory
    1:3:void onNewIntentImpl(android.content.Intent) -> onNewIntentImpl
    1:3:void onPause() -> onPause
    1:5:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    1:7:void onResume() -> onResume
    1:3:void onRuntimeCreate(android.os.Bundle) -> onRuntimeCreate
    1:4:void onRuntimePreCreate(android.os.Bundle) -> onRuntimePreCreate
    1:6:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    1:1:void setSecondPrivacyAlert() -> setSecondPrivacyAlert
    1:19:void updateParam(java.lang.String,java.lang.Object) -> updateParam
io.dcloud.b$a -> io.dcloud.b$a:
    1:1:void <init>(io.dcloud.b,android.os.Bundle) -> <init>
    1:6:void run() -> run
io.dcloud.b$b -> io.dcloud.b$b:
    1:1:void <init>(io.dcloud.b) -> <init>
    1:1:void onClick(android.content.DialogInterface,int) -> onClick
io.dcloud.b$c -> io.dcloud.b$c:
    1:1:void <init>(io.dcloud.b) -> <init>
    1:5:void a(java.lang.String) -> a
    6:8:void a() -> a
    9:13:void a(io.dcloud.common.ui.Info.AndroidPrivacyResponse) -> a
io.dcloud.b$d -> io.dcloud.b$d:
    1:1:void <init>(io.dcloud.b) -> <init>
    1:2:void a(java.lang.String,boolean) -> a
io.dcloud.b$e -> io.dcloud.b$e:
    1:1:void <init>(io.dcloud.b) -> <init>
    1:3:void a() -> a
    4:5:void a(io.dcloud.common.ui.Info.AndroidPrivacyResponse) -> a
io.dcloud.b$f -> io.dcloud.b$f:
    1:1:void <init>(io.dcloud.b) -> <init>
    1:16:void onDenied(java.lang.String) -> onDenied
    1:4:void onGranted(java.lang.String) -> onGranted
io.dcloud.b$g -> io.dcloud.b$g:
    1:1:void <init>(io.dcloud.b) -> <init>
    1:1:void onClick(android.content.DialogInterface,int) -> onClick
io.dcloud.b$h -> io.dcloud.b$h:
    1:1:void <init>(io.dcloud.b,java.lang.String) -> <init>
    1:16:void onClick(android.content.DialogInterface,int) -> onClick
io.dcloud.base.BuildConfig -> io.dcloud.base.BuildConfig:
    1:1:void <init>() -> <init>
io.dcloud.c -> io.dcloud.c:
    1:29:void <init>() -> <init>
    1:11:void b() -> b
    1:1:android.content.Context getContext() -> getContext
    1:3:java.lang.String getUrlByFilePath(java.lang.String,java.lang.String) -> getUrlByFilePath
    1:10:void onCreate(android.os.Bundle) -> onCreate
    1:5:void onDestroy() -> onDestroy
    1:7:void registerLocalReceiver(io.dcloud.feature.internal.reflect.BroadcastReceiver,android.content.IntentFilter) -> registerLocalReceiver
    1:6:android.content.Intent registerReceiver(io.dcloud.feature.internal.reflect.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler) -> registerReceiver
    7:13:void registerReceiver(io.dcloud.feature.internal.reflect.BroadcastReceiver,android.content.IntentFilter) -> registerReceiver
    1:1:void sendLocalBroadcast(android.content.Intent) -> sendLocalBroadcast
    1:7:void unregisterReceiver(io.dcloud.feature.internal.reflect.BroadcastReceiver) -> unregisterReceiver
io.dcloud.common.DHInterface.AbsMgr -> io.dcloud.common.DHInterface.AbsMgr:
    1:18:void <init>(io.dcloud.common.DHInterface.ICore,java.lang.String,io.dcloud.common.DHInterface.IMgr$MgrType) -> <init>
    1:1:boolean checkMgrId(io.dcloud.common.DHInterface.IMgr$MgrType) -> checkMgrId
    1:1:android.content.Context getContext() -> getContext
    1:1:boolean isStreamAppMode() -> isStreamAppMode
io.dcloud.common.DHInterface.BaseFeature -> io.dcloud.common.DHInterface.BaseFeature:
    1:167:void <init>() -> <init>
    1:3:io.dcloud.common.DHInterface.BaseFeature$BaseModule getBaseModuleById(java.lang.String) -> getBaseModuleById
    1:1:android.app.Activity getDPluginActivity() -> getDPluginActivity
    1:1:android.content.Context getDPluginContext() -> getDPluginContext
    1:3:void init(io.dcloud.common.DHInterface.AbsMgr,java.lang.String) -> init
    1:2:void initDPlugin(android.content.Context,android.app.Activity) -> initDPlugin
    1:45:java.util.ArrayList loadModules() -> loadModules
    1:31:boolean onExecute(io.dcloud.common.DHInterface.ISysEventListener$SysEventType,java.lang.Object) -> onExecute
    1:1:void registerSysEvent(io.dcloud.common.DHInterface.IWebview,io.dcloud.common.DHInterface.ISysEventListener$SysEventType) -> registerSysEvent
    2:2:void registerSysEvent(io.dcloud.common.DHInterface.IApp,io.dcloud.common.DHInterface.ISysEventListener$SysEventType) -> registerSysEvent
    3:3:void registerSysEvent(io.dcloud.common.DHInterface.IWebview) -> registerSysEvent
    4:4:void registerSysEvent(io.dcloud.common.DHInterface.IApp) -> registerSysEvent
    1:6:org.json.JSONArray toModuleJSONArray() -> toModuleJSONArray
    1:1:void unregisterSysEvent(io.dcloud.common.DHInterface.IWebview,io.dcloud.common.DHInterface.ISysEventListener$SysEventType) -> unregisterSysEvent
    2:2:void unregisterSysEvent(io.dcloud.common.DHInterface.IApp,io.dcloud.common.DHInterface.ISysEventListener$SysEventType) -> unregisterSysEvent
    3:3:void unregisterSysEvent(io.dcloud.common.DHInterface.IWebview) -> unregisterSysEvent
    4:4:void unregisterSysEvent(io.dcloud.common.DHInterface.IApp) -> unregisterSysEvent
io.dcloud.common.DHInterface.BaseFeature$BaseModule -> io.dcloud.common.DHInterface.BaseFeature$BaseModule:
    1:16:void <init>() -> <init>
    1:1:java.lang.String getFullDescription() -> getFullDescription
    1:1:void init(android.content.Context) -> init
io.dcloud.common.DHInterface.FeatureMessageDispatcher -> io.dcloud.common.DHInterface.FeatureMessageDispatcher:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:9:boolean contains(java.lang.Object) -> contains
    1:21:void dispatchMessage(java.lang.Object,java.lang.Object) -> dispatchMessage
    22:22:void dispatchMessage(java.lang.Object) -> dispatchMessage
    1:1:void registerListener(io.dcloud.common.DHInterface.FeatureMessageDispatcher$MessageListener) -> registerListener
    1:1:void unregisterListener(io.dcloud.common.DHInterface.FeatureMessageDispatcher$MessageListener) -> unregisterListener
io.dcloud.common.DHInterface.FeatureMessageDispatcher$1 -> io.dcloud.common.DHInterface.FeatureMessageDispatcher$1:
    1:1:void <init>(java.lang.Object) -> <init>
    1:1:void execute(java.lang.Object) -> execute
io.dcloud.common.DHInterface.FeatureMessageDispatcher$2 -> io.dcloud.common.DHInterface.FeatureMessageDispatcher$2:
    1:1:void <init>(java.lang.Object) -> <init>
    1:1:void execute(java.lang.Object) -> execute
io.dcloud.common.DHInterface.FeatureMessageDispatcher$StrongMessageListener -> io.dcloud.common.DHInterface.FeatureMessageDispatcher$StrongMessageListener:
    1:2:void <init>(java.lang.Object) -> <init>
io.dcloud.common.DHInterface.IApp$ConfigProperty$ThridInfo -> io.dcloud.common.DHInterface.IApp$ConfigProperty$ThridInfo:
    1:10:void <clinit>() -> <clinit>
    1:1:void <init>(java.lang.String,int) -> <init>
    1:1:io.dcloud.common.DHInterface.IApp$ConfigProperty$ThridInfo valueOf(java.lang.String) -> valueOf
    1:1:io.dcloud.common.DHInterface.IApp$ConfigProperty$ThridInfo[] values() -> values
io.dcloud.common.DHInterface.IMgr$MgrType -> io.dcloud.common.DHInterface.IMgr$MgrType:
    1:5:void <clinit>() -> <clinit>
    1:1:void <init>(java.lang.String,int) -> <init>
    1:1:io.dcloud.common.DHInterface.IMgr$MgrType valueOf(java.lang.String) -> valueOf
    1:1:io.dcloud.common.DHInterface.IMgr$MgrType[] values() -> values
io.dcloud.common.DHInterface.IReqListener$NetState -> io.dcloud.common.DHInterface.IReqListener$NetState:
    1:10:void <clinit>() -> <clinit>
    1:1:void <init>(java.lang.String,int) -> <init>
    1:1:io.dcloud.common.DHInterface.IReqListener$NetState valueOf(java.lang.String) -> valueOf
    1:1:io.dcloud.common.DHInterface.IReqListener$NetState[] values() -> values
io.dcloud.common.DHInterface.ISmartUpdate$SmartUpdateCallbackParams -> io.dcloud.common.DHInterface.ISmartUpdate$SmartUpdateCallbackParams:
    1:33:void <init>(java.lang.String) -> <init>
io.dcloud.common.DHInterface.ISysEventListener$SysEventType -> io.dcloud.common.DHInterface.ISysEventListener$SysEventType:
    1:30:void <clinit>() -> <clinit>
    1:1:void <init>(java.lang.String,int) -> <init>
    1:1:io.dcloud.common.DHInterface.ISysEventListener$SysEventType valueOf(java.lang.String) -> valueOf
    1:1:io.dcloud.common.DHInterface.ISysEventListener$SysEventType[] values() -> values
io.dcloud.common.DHInterface.SplashView -> io.dcloud.common.DHInterface.SplashView:
    1:126:void <init>(android.content.Context,android.graphics.Bitmap) -> <init>
    1:3:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    1:10:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    1:2:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    1:19:void onShowProgressBar(android.view.ViewGroup,int) -> onShowProgressBar
    1:1:void showWaiting() -> showWaiting
    2:2:void showWaiting(int) -> showWaiting
io.dcloud.common.DHInterface.SplashView$1 -> io.dcloud.common.DHInterface.SplashView$1:
    1:1:void <init>(io.dcloud.common.DHInterface.SplashView,int) -> <init>
    1:1:void run() -> run
io.dcloud.common.DHInterface.StandardFeature -> io.dcloud.common.DHInterface.StandardFeature:
    1:3:void <init>() -> <init>
    1:11:void arrangeInnerMethod() -> arrangeInnerMethod
    1:1:java.lang.String execute(io.dcloud.common.DHInterface.IWebview,java.lang.String,org.json.JSONArray) -> execute
    1:29:java.lang.String executeAction(java.lang.String,io.dcloud.common.DHInterface.IWebview,org.json.JSONArray) -> executeAction
    1:2:void init(io.dcloud.common.DHInterface.AbsMgr,java.lang.String) -> init
    1:3:boolean isStandardFeatureMethod(java.lang.Class[]) -> isStandardFeatureMethod
io.dcloud.common.DHInterface.ViewHelper -> io.dcloud.common.DHInterface.ViewHelper:
    1:1:void <init>() -> <init>
    1:23:android.app.Dialog createDefaultDialog(android.content.Context,int,int) -> createDefaultDialog
    1:25:void showDefaultDialog(android.app.Dialog,android.view.View$OnClickListener,android.graphics.Bitmap,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int) -> showDefaultDialog
io.dcloud.common.DHInterface.ViewHelper$1 -> io.dcloud.common.DHInterface.ViewHelper$1:
    1:1:void <init>(android.app.Dialog) -> <init>
    1:2:void run() -> run
io.dcloud.common.DHInterface.ViewHelper$2 -> io.dcloud.common.DHInterface.ViewHelper$2:
    1:1:void <init>(java.util.Timer,android.graphics.Bitmap) -> <init>
    1:3:void onDismiss(android.content.DialogInterface) -> onDismiss
io.dcloud.common.DHInterface.message.AbsActionObserver -> io.dcloud.common.DHInterface.message.AbsActionObserver:
    1:2:void <init>(io.dcloud.common.DHInterface.message.IObserveAble) -> <init>
    1:1:io.dcloud.common.DHInterface.message.EnumUniqueID getObserverUniqueID() -> getObserverUniqueID
io.dcloud.common.DHInterface.message.ActionBus -> io.dcloud.common.DHInterface.message.ActionBus:
    1:1:void <clinit>() -> <clinit>
    1:18:void <init>() -> <init>
    1:1:io.dcloud.common.DHInterface.message.ActionBus getInstance() -> getInstance
    1:6:boolean observeAction(io.dcloud.common.DHInterface.message.AbsActionObserver) -> observeAction
    1:15:boolean sendToBus(io.dcloud.common.DHInterface.message.action.IAction) -> sendToBus
    1:1:void stopObserve(io.dcloud.common.DHInterface.message.EnumUniqueID) -> stopObserve
io.dcloud.common.DHInterface.message.EnumUniqueID -> io.dcloud.common.DHInterface.message.EnumUniqueID:
    1:2:void <clinit>() -> <clinit>
    1:1:void <init>(java.lang.String,int) -> <init>
    1:1:io.dcloud.common.DHInterface.message.EnumUniqueID valueOf(java.lang.String) -> valueOf
    1:1:io.dcloud.common.DHInterface.message.EnumUniqueID[] values() -> values
io.dcloud.common.DHInterface.message.action.BadgeSyncAction -> io.dcloud.common.DHInterface.message.action.BadgeSyncAction:
    1:2:void <init>(io.dcloud.common.DHInterface.message.action.BadgeSyncAction$ENUM_ACTION_TYPE) -> <init>
    1:1:io.dcloud.common.DHInterface.message.action.BadgeSyncAction$ENUM_ACTION_TYPE getActionType() -> getActionType
    1:1:int getSyncNumVal() -> getSyncNumVal
    1:1:io.dcloud.common.DHInterface.message.action.BadgeSyncAction obtain(io.dcloud.common.DHInterface.message.action.BadgeSyncAction$ENUM_ACTION_TYPE) -> obtain
    1:1:io.dcloud.common.DHInterface.message.action.BadgeSyncAction setSyncNum(int) -> setSyncNum
io.dcloud.common.DHInterface.message.action.BadgeSyncAction$ENUM_ACTION_TYPE -> io.dcloud.common.DHInterface.message.action.BadgeSyncAction$ENUM_ACTION_TYPE:
    1:2:void <clinit>() -> <clinit>
    1:1:void <init>(java.lang.String,int) -> <init>
    1:1:io.dcloud.common.DHInterface.message.action.BadgeSyncAction$ENUM_ACTION_TYPE valueOf(java.lang.String) -> valueOf
    1:1:io.dcloud.common.DHInterface.message.action.BadgeSyncAction$ENUM_ACTION_TYPE[] values() -> values
io.dcloud.common.adapter.io.AdDownloadReceiver -> io.dcloud.common.adapter.io.AdDownloadReceiver:
    1:1:void <init>() -> <init>
io.dcloud.common.adapter.io.AdaService -> io.dcloud.common.adapter.io.AdaService:
    1:1:void <clinit>() -> <clinit>
    1:6:void <init>(android.content.Context,java.lang.String) -> <init>
    1:1:io.dcloud.common.adapter.io.AdaService getServiceListener(java.lang.String) -> getServiceListener
    1:1:void removeServiceListener(java.lang.String) -> removeServiceListener
io.dcloud.common.adapter.io.DHFile -> io.dcloud.common.adapter.io.DHFile:
    1:1:void <init>() -> <init>
    1:11:void addFile(java.lang.String,byte[]) -> addFile
    1:3:boolean canRead(java.lang.String) -> canRead
    1:4:boolean checkIsNeedReload(java.lang.String) -> checkIsNeedReload
    1:28:boolean copyAssetsFile(java.lang.String,java.lang.String) -> copyAssetsFile
    1:51:void copyDir(java.lang.String,java.lang.String) -> copyDir
    1:313:int copyFile(java.lang.String,java.lang.String,boolean,boolean) -> copyFile
    314:314:int copyFile(java.lang.String,java.lang.String) -> copyFile
    1:1:java.lang.Object createFileHandler(java.lang.String) -> createFileHandler
    1:32:byte createNewFile(java.lang.Object) -> createNewFile
    1:37:boolean delete(java.lang.Object) -> delete
    1:3:int deleteFile(java.lang.String) -> deleteFile
    1:16:boolean exists(java.lang.Object) -> exists
    1:8:java.io.File getFile(java.lang.Object) -> getFile
    1:1:java.lang.String getFileName(java.lang.Object) -> getFileName
    1:1:java.lang.String getFilePath(java.lang.Object) -> getFilePath
    1:7:long getFileSize(java.io.File) -> getFileSize
    1:1:java.lang.String getFileUrl(java.lang.Object) -> getFileUrl
    1:23:java.io.InputStream getInputStream(java.lang.Object) -> getInputStream
    1:4:long getLastModify(java.lang.String) -> getLastModify
    1:11:java.lang.String getName(java.lang.Object) -> getName
    1:17:java.io.OutputStream getOutputStream(java.lang.Object) -> getOutputStream
    18:37:java.io.OutputStream getOutputStream(java.lang.Object,boolean) -> getOutputStream
    1:9:java.lang.Object getParent(java.lang.Object) -> getParent
    1:9:java.lang.String getPath(java.lang.Object) -> getPath
    1:28:java.lang.String getRealPath(java.lang.String) -> getRealPath
    1:1:boolean hasFile() -> hasFile
    1:2:boolean isDirectory(java.lang.Object) -> isDirectory
    1:3:boolean isExist(java.lang.String) -> isExist
    4:8:boolean isExist(java.lang.Object) -> isExist
    1:5:boolean isHidden(java.lang.Object) -> isHidden
    6:9:boolean isHidden(java.lang.String) -> isHidden
    1:4:long length(java.lang.Object) -> length
    1:9:java.lang.String[] list(java.lang.Object) -> list
    1:8:java.lang.String[] listDir(java.lang.Object) -> listDir
    1:15:java.lang.Object[] listFiles(java.lang.Object) -> listFiles
    1:2:java.lang.String[] listRoot() -> listRoot
    1:2:java.lang.Object openFile(java.lang.String,int,boolean) -> openFile
    3:3:java.lang.Object openFile(java.lang.String,int) -> openFile
    1:52:byte[] readAll(java.lang.Object) -> readAll
    1:21:int rename(java.lang.String,java.lang.String) -> rename
    1:22:boolean writeFile(java.io.InputStream,java.lang.String) -> writeFile
    23:76:void writeFile(byte[],int,java.lang.String) -> writeFile
    77:139:void writeFile(java.io.InputStream,int,java.lang.String) -> writeFile
io.dcloud.common.adapter.io.DownloadReceiver -> io.dcloud.common.adapter.io.DownloadReceiver:
    1:1:void <init>() -> <init>
    1:7:void onReceive(android.content.Context,android.content.Intent) -> onReceive
io.dcloud.common.adapter.io.MiniServerService -> io.dcloud.common.adapter.io.MiniServerService:
    1:3:void <init>() -> <init>
    1:1:void onCreate() -> onCreate
    1:8:void onDestroy() -> onDestroy
    1:5:void onStart(android.content.Intent,int) -> onStart
    1:7:int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    1:4:void startServer() -> startServer
io.dcloud.common.adapter.io.PushReceiver -> io.dcloud.common.adapter.io.PushReceiver:
    1:1:void <init>() -> <init>
    1:45:void handle(android.content.Context,android.content.Intent) -> handle
    1:7:void onReceive(android.content.Context,android.content.Intent) -> onReceive
io.dcloud.common.adapter.io.PushReceiver$1 -> io.dcloud.common.adapter.io.PushReceiver$1:
    1:1:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> <init>
    1:1:void run() -> run
io.dcloud.common.adapter.io.PushReceiver$2 -> io.dcloud.common.adapter.io.PushReceiver$2:
    1:1:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> <init>
    1:1:void run() -> run
io.dcloud.common.adapter.io.UnicodeInputStream -> io.dcloud.common.adapter.io.UnicodeInputStream:
    1:10:void <init>(java.io.InputStream,java.lang.String) -> <init>
    1:2:void close() -> close
    1:1:java.lang.String getDefaultEncoding() -> getDefaultEncoding
    1:11:java.lang.String getEncoding() -> getEncoding
    1:36:void init() -> init
    1:3:int read() -> read
io.dcloud.common.adapter.ui.AdaContainerFrameItem -> io.dcloud.common.adapter.ui.AdaContainerFrameItem:
    1:10:void <init>(android.content.Context) -> <init>
    1:1:void addFrameItem(io.dcloud.common.adapter.ui.AdaFrameItem,android.view.ViewGroup$LayoutParams) -> addFrameItem
    2:2:void addFrameItem(io.dcloud.common.adapter.ui.AdaFrameItem) -> addFrameItem
    3:20:void addFrameItem(io.dcloud.common.adapter.ui.AdaFrameItem,int,android.view.ViewGroup$LayoutParams) -> addFrameItem
    21:22:void addFrameItem(io.dcloud.common.adapter.ui.AdaFrameItem,int) -> addFrameItem
    1:5:void addNativeViewChild(io.dcloud.common.DHInterface.INativeView) -> addNativeViewChild
    1:7:boolean checkITypeofAble() -> checkITypeofAble
    1:12:void clearView() -> clearView
    1:2:void dispose() -> dispose
    1:1:java.util.ArrayList getChilds() -> getChilds
    1:1:android.view.ViewGroup obtainMainViewGroup() -> obtainMainViewGroup
    1:4:boolean onDispose() -> onDispose
    1:4:void onPopFromStack(boolean) -> onPopFromStack
    1:4:void onPushToStack(boolean) -> onPushToStack
    1:3:void onResize() -> onResize
    1:5:void removeAllFrameItem() -> removeAllFrameItem
    6:22:void removeAllFrameItem(boolean) -> removeAllFrameItem
    1:6:void removeFrameItem(io.dcloud.common.adapter.ui.AdaFrameItem) -> removeFrameItem
    1:2:void removeNativeViewChild(io.dcloud.common.DHInterface.INativeView) -> removeNativeViewChild
    1:4:void sortNativeViewBringToFront() -> sortNativeViewBringToFront
io.dcloud.common.adapter.ui.AdaFrameItem -> io.dcloud.common.adapter.ui.AdaFrameItem:
    1:55:void <init>(android.content.Context) -> <init>
    1:39:void addStatusBar(io.dcloud.common.adapter.ui.AdaFrameItem) -> addStatusBar
    1:7:void clearAnimInfo() -> clearAnimInfo
    1:12:void dispose() -> dispose
    1:1:android.app.Activity getActivity() -> getActivity
    1:4:io.dcloud.common.adapter.util.AnimOptions getAnimOptions() -> getAnimOptions
    1:1:android.content.Context getContext() -> getContext
    1:1:io.dcloud.common.adapter.ui.AdaContainerFrameItem getParentFrameItem() -> getParentFrameItem
    1:1:boolean isAutoPop() -> isAutoPop
    1:1:boolean isAutoPush() -> isAutoPush
    1:1:boolean isDisposed() -> isDisposed
    1:50:void makeViewOptions_animate() -> makeViewOptions_animate
    1:1:io.dcloud.common.adapter.util.ViewOptions obtainFrameOptions() -> obtainFrameOptions
    1:1:io.dcloud.common.adapter.util.ViewOptions obtainFrameOptions_Animate() -> obtainFrameOptions_Animate
    1:1:io.dcloud.common.adapter.util.ViewOptions obtainFrameOptions_Birth() -> obtainFrameOptions_Birth
    1:1:android.view.View obtainMainView() -> obtainMainView
    1:1:void onPopFromStack(boolean) -> onPopFromStack
    1:1:void onPushToStack(boolean) -> onPushToStack
    1:131:void onResize() -> onResize
    1:1:void resize() -> resize
    1:1:void scrollBy(int,int) -> scrollBy
    1:1:void scrollTo(int,int) -> scrollTo
    1:1:void setAnimOptions(io.dcloud.common.adapter.util.AnimOptions) -> setAnimOptions
    1:1:void setAnimatorLinstener(io.dcloud.nineoldandroids.animation.Animator$AnimatorListener) -> setAnimatorLinstener
    1:1:void setBgcolor(int) -> setBgcolor
    1:1:void setFrameOptions(io.dcloud.common.adapter.util.ViewOptions) -> setFrameOptions
    1:1:void setFrameOptions_Animate(io.dcloud.common.adapter.util.ViewOptions) -> setFrameOptions_Animate
    1:1:void setFrameOptions_Birth(io.dcloud.common.adapter.util.ViewOptions) -> setFrameOptions_Birth
    1:1:void setMainView(android.view.View) -> setMainView
    1:1:void setParentFrameItem(io.dcloud.common.adapter.ui.AdaContainerFrameItem) -> setParentFrameItem
    1:1:void setPosition(int) -> setPosition
    1:1:void setSlipping(boolean) -> setSlipping
    1:2:void setVisibility(int) -> setVisibility
    1:1:void updateViewRect(io.dcloud.common.adapter.ui.AdaFrameItem,int[],int[]) -> updateViewRect
    2:10:void updateViewRect(io.dcloud.common.adapter.ui.AdaFrameItem,int[],int[],boolean[],boolean[]) -> updateViewRect
    1:1:void useDefaultMainView() -> useDefaultMainView
io.dcloud.common.adapter.ui.AdaFrameItem$DefaultView -> io.dcloud.common.adapter.ui.AdaFrameItem$DefaultView:
    1:2:void <init>(io.dcloud.common.adapter.ui.AdaFrameItem,android.content.Context) -> <init>
    1:2:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    1:1:void onDraw(android.graphics.Canvas) -> onDraw
io.dcloud.common.adapter.ui.AdaFrameItem$LayoutParamsUtil -> io.dcloud.common.adapter.ui.AdaFrameItem$LayoutParamsUtil:
    1:1:void <init>() -> <init>
    1:1:android.view.ViewGroup$LayoutParams createLayoutParams(int,int,int,int) -> createLayoutParams
    1:46:void preAndroid30SetViewLayoutParams(android.view.View,int,int) -> preAndroid30SetViewLayoutParams
    1:19:void setViewLayoutParams(android.view.View,int,int,int,int) -> setViewLayoutParams
io.dcloud.common.adapter.ui.AdaFrameItem$LayoutParamsUtil$1 -> io.dcloud.common.adapter.ui.AdaFrameItem$LayoutParamsUtil$1:
    1:1:void <init>(android.view.View,int,int) -> <init>
    1:1:void onAnimationCancel(io.dcloud.nineoldandroids.animation.Animator) -> onAnimationCancel
io.dcloud.common.adapter.ui.AdaFrameItem$LayoutParamsUtil$1$1 -> io.dcloud.common.adapter.ui.AdaFrameItem$LayoutParamsUtil$1$1:
    1:1:void <init>(io.dcloud.common.adapter.ui.AdaFrameItem$LayoutParamsUtil$1) -> <init>
    1:2:void run() -> run
io.dcloud.common.adapter.ui.AdaFrameView -> io.dcloud.common.adapter.ui.AdaFrameView:
    1:1161:void <init>(android.content.Context,int,java.lang.Object) -> <init>
    1:1:io.dcloud.common.adapter.ui.DHImageView access$000(io.dcloud.common.adapter.ui.AdaFrameView) -> access$000
    1:1:io.dcloud.common.DHInterface.ICallBack access$100(io.dcloud.common.adapter.ui.AdaFrameView) -> access$100
    1:1:io.dcloud.common.DHInterface.ICallBack access$102(io.dcloud.common.adapter.ui.AdaFrameView,io.dcloud.common.DHInterface.ICallBack) -> access$102
    1:1:io.dcloud.common.DHInterface.ICallBack access$200(io.dcloud.common.adapter.ui.AdaFrameView) -> access$200
    1:1:io.dcloud.common.DHInterface.ICallBack access$202(io.dcloud.common.adapter.ui.AdaFrameView,io.dcloud.common.DHInterface.ICallBack) -> access$202
    1:1:android.os.Handler access$300(io.dcloud.common.adapter.ui.AdaFrameView) -> access$300
    1:1:void access$400(io.dcloud.common.adapter.ui.AdaFrameView,int,java.lang.String) -> access$400
    1:10:void addCaptureImageView(android.view.ViewGroup,io.dcloud.common.adapter.ui.DHImageView,android.graphics.Bitmap) -> addCaptureImageView
    1:5:void addFrameViewListener(io.dcloud.common.DHInterface.IEventCallback) -> addFrameViewListener
    1:3:void animate(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String) -> animate
    1:249:boolean captureAnimation(io.dcloud.nineoldandroids.animation.Animator,int) -> captureAnimation
    1:37:void captureSnapshot(java.lang.String,io.dcloud.common.DHInterface.ICallBack,io.dcloud.common.DHInterface.ICallBack) -> captureSnapshot
    1:63:void changeWebParentViewRect() -> changeWebParentViewRect
    1:7:void changeWebviewRect() -> changeWebviewRect
    1:73:void chkUseCaptureAnimation(boolean,int,boolean) -> chkUseCaptureAnimation
    1:24:void clearSnapshot(java.lang.String) -> clearSnapshot
    1:9:void dispatchFrameViewEvents(java.lang.String,java.lang.Object) -> dispatchFrameViewEvents
    1:9:void dispose() -> dispose
    1:1:void draw(android.view.View,io.dcloud.common.DHInterface.INativeBitmap,boolean,boolean,android.graphics.Rect,java.lang.String,io.dcloud.common.DHInterface.ICallBack,io.dcloud.common.DHInterface.ICallBack) -> draw
    1:1:io.dcloud.common.DHInterface.IFrameView findPageB() -> findPageB
    1:1:com.dcloud.android.v4.widget.IRefreshAble getCircleRefreshView() -> getCircleRefreshView
    1:9:int getFrameHeight() -> getFrameHeight
    1:1:int getFrameType() -> getFrameType
    1:29:void handleNativeViewByAction(io.dcloud.common.adapter.ui.DHImageView,int) -> handleNativeViewByAction
    1:2:int indexOfViewInParent(android.view.View,android.view.ViewGroup) -> indexOfViewInParent
    1:1:void interceptTouchEvent(boolean) -> interceptTouchEvent
    1:1:boolean isTabItem() -> isTabItem
    1:41:boolean isWebviewCovered() -> isWebviewCovered
    1:1:byte obtainStatus() -> obtainStatus
    1:3:void onDestroy() -> onDestroy
    1:4:boolean onDispose() -> onDispose
    1:10:void onDrawAfter(android.graphics.Canvas) -> onDrawAfter
    1:1:void onInit() -> onInit
    1:1:void onLoading() -> onLoading
    1:1:void onPreLoading() -> onPreLoading
    1:2:void onPreShow(io.dcloud.common.DHInterface.IFrameView) -> onPreShow
    1:11:void onResize() -> onResize
    1:15:void paint(android.graphics.Canvas) -> paint
    1:2:void removeFrameViewListener(io.dcloud.common.DHInterface.IEventCallback) -> removeFrameViewListener
    1:3:void restore() -> restore
    1:5:void sendErrorMessage(int,java.lang.String) -> sendErrorMessage
    1:1:void setAccelerationType(java.lang.String) -> setAccelerationType
    1:1:void setCircleRefreshView(com.dcloud.android.v4.widget.IRefreshAble) -> setCircleRefreshView
    1:4:void setSnapshot(android.graphics.Bitmap) -> setSnapshot
    1:2:void setSnapshotView(io.dcloud.common.DHInterface.INativeView,java.lang.String) -> setSnapshotView
    1:1:void setTabItem(boolean) -> setTabItem
    1:3:void setVisible(boolean,boolean) -> setVisible
    1:1:void startAnimator(int) -> startAnimator
    2:45:void startAnimator(io.dcloud.common.adapter.ui.AdaFrameView$OnAnimationEnd,int) -> startAnimator
    1:32:void updateFrameRelViewRect(io.dcloud.common.adapter.util.ViewRect) -> updateFrameRelViewRect
io.dcloud.common.adapter.ui.AdaFrameView$1 -> io.dcloud.common.adapter.ui.AdaFrameView$1:
    1:1:void <init>(io.dcloud.common.adapter.ui.AdaFrameView,int,android.view.ViewGroup,io.dcloud.common.core.ui.k,io.dcloud.nineoldandroids.animation.Animator) -> <init>
    1:5:void onAnimationCancel(io.dcloud.nineoldandroids.animation.Animator) -> onAnimationCancel
    1:38:void onAnimationEnd(io.dcloud.nineoldandroids.animation.Animator) -> onAnimationEnd
    1:2:void onAnimationRepeat(io.dcloud.nineoldandroids.animation.Animator) -> onAnimationRepeat
    1:9:void onAnimationStart(io.dcloud.nineoldandroids.animation.Animator) -> onAnimationStart
io.dcloud.common.adapter.ui.AdaFrameView$1$1 -> io.dcloud.common.adapter.ui.AdaFrameView$1$1:
    1:1:void <init>(io.dcloud.common.adapter.ui.AdaFrameView$1) -> <init>
    1:12:void run() -> run
io.dcloud.common.adapter.ui.AdaFrameView$2 -> io.dcloud.common.adapter.ui.AdaFrameView$2:
    1:1:void <init>(io.dcloud.common.adapter.ui.AdaFrameView,android.view.ViewGroup,int) -> <init>
    1:22:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    1:2:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    1:6:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
io.dcloud.common.adapter.ui.AdaFrameView$2$1 -> io.dcloud.common.adapter.ui.AdaFrameView$2$1:
    1:1:void <init>(io.dcloud.common.adapter.ui.AdaFrameView$2) -> <init>
    1:12:void run() -> run
io.dcloud.common.adapter.ui.AdaFrameView$3 -> io.dcloud.common.adapter.ui.AdaFrameView$3:
    1:1:void <init>(io.dcloud.common.adapter.ui.AdaFrameView,io.dcloud.common.adapter.ui.AdaFrameView$OnAnimationEnd) -> <init>
    1:7:void execute(java.lang.Object) -> execute
io.dcloud.common.adapter.ui.AdaFrameView$4 -> io.dcloud.common.adapter.ui.AdaFrameView$4:
    1:1:void <init>(io.dcloud.common.adapter.ui.AdaFrameView) -> <init>
    1:17:void handleMessage(android.os.Message) -> handleMessage
io.dcloud.common.adapter.ui.AdaFrameView$5 -> io.dcloud.common.adapter.ui.AdaFrameView$5:
    1:1:void <init>(io.dcloud.common.adapter.ui.AdaFrameView,java.lang.String,io.dcloud.common.DHInterface.ICallBack,io.dcloud.common.DHInterface.ICallBack) -> <init>
    1:30:void run() -> run
io.dcloud.common.adapter.ui.AdaFrameView$6 -> io.dcloud.common.adapter.ui.AdaFrameView$6:
    1:1:void <init>(io.dcloud.common.adapter.ui.AdaFrameView,android.view.View,boolean,boolean,android.graphics.Rect,java.lang.String,io.dcloud.common.DHInterface.INativeBitmap,io.dcloud.common.DHInterface.ICallBack,io.dcloud.common.DHInterface.ICallBack) -> <init>
    1:16:void run() -> run
io.dcloud.common.adapter.ui.AdaFrameView$7 -> io.dcloud.common.adapter.ui.AdaFrameView$7:
    1:1:void <init>(io.dcloud.common.adapter.ui.AdaFrameView) -> <init>
    1:2:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    1:2:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    1:2:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
io.dcloud.common.adapter.ui.AdaRootView -> io.dcloud.common.adapter.ui.AdaRootView:
    1:11:void <init>(android.content.Context,android.widget.FrameLayout) -> <init>
io.dcloud.common.adapter.ui.AdaRootView$GestureListenerImpl -> io.dcloud.common.adapter.ui.AdaRootView$GestureListenerImpl:
    1:1:void <init>() -> <init>
    1:2:void onGestureEnded(android.gesture.GestureOverlayView,android.view.MotionEvent) -> onGestureEnded
io.dcloud.common.adapter.ui.AdaRootView$MyRootView -> io.dcloud.common.adapter.ui.AdaRootView$MyRootView:
    1:6:void <init>(io.dcloud.common.adapter.ui.AdaRootView,android.content.Context,io.dcloud.common.adapter.ui.AdaRootView) -> <init>
    1:2:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    1:3:void onSizeChanged(int,int,int,int) -> onSizeChanged
io.dcloud.common.adapter.ui.AdaUniWebView -> io.dcloud.common.adapter.ui.AdaUniWebView:
    1:88:void <init>(android.content.Context,io.dcloud.common.DHInterface.IApp,io.dcloud.common.adapter.ui.AdaFrameView,java.lang.String,java.lang.String,org.json.JSONObject,boolean) -> <init>
    1:3:void dispose() -> dispose
    1:6:void endWebViewEvent(java.lang.String) -> endWebViewEvent
    1:1:void evalJS(java.lang.String) -> evalJS
    2:2:void evalJS(java.lang.String,io.dcloud.common.adapter.ui.ReceiveJSValue$ReceiveJSValueCallback) -> evalJS
    1:4:void evalJSToUniNative(java.lang.String) -> evalJSToUniNative
    1:10:java.lang.String exec(java.lang.String,java.lang.String,org.json.JSONArray) -> exec
    1:1:void executeScript(java.lang.String) -> executeScript
    1:5:void fireEvent(io.dcloud.common.adapter.util.EventActionInfo) -> fireEvent
    1:79:java.lang.Object getConfigInfo() -> getConfigInfo
    1:7:java.lang.String getCookie(java.lang.String) -> getCookie
    1:1:java.lang.String getOriginalUrl() -> getOriginalUrl
    1:1:float getScale() -> getScale
    1:1:boolean isUniService() -> isUniService
    1:2:void loadUrl(java.lang.String) -> loadUrl
    1:1:io.dcloud.common.DHInterface.IApp obtainApp() -> obtainApp
    1:1:io.dcloud.common.DHInterface.IFrameView obtainFrameView() -> obtainFrameView
    1:1:java.lang.String obtainFullUrl() -> obtainFullUrl
    1:1:java.lang.String obtainUrl() -> obtainUrl
    1:1:android.view.ViewGroup obtainWindowView() -> obtainWindowView
    1:15:java.lang.String prompt(java.lang.String,java.lang.String) -> prompt
    1:2:void reload() -> reload
    3:3:void reload(boolean) -> reload
    1:2:void setNVuePath(java.lang.String) -> setNVuePath
    1:1:void setOriginalUrl(java.lang.String) -> setOriginalUrl
    1:11:void setWebViewEvent(java.lang.String,java.lang.Object) -> setWebViewEvent
    1:2:void titleNViewRefresh() -> titleNViewRefresh
    1:22:void updateScreenAndDisplay() -> updateScreenAndDisplay
io.dcloud.common.adapter.ui.AdaUniWebView$1 -> io.dcloud.common.adapter.ui.AdaUniWebView$1:
    1:1:void <init>(io.dcloud.common.adapter.ui.AdaUniWebView) -> <init>
    1:5:void execute(java.lang.Object) -> execute
io.dcloud.common.adapter.ui.AdaWebViewParent -> io.dcloud.common.adapter.ui.AdaWebViewParent:
    1:9:void <init>(android.content.Context) -> <init>
    10:23:void <init>(android.content.Context,boolean) -> <init>
    1:5:void beginPullRefresh() -> beginPullRefresh
    1:9:void dispose() -> dispose
    1:5:void endPullRefresh() -> endPullRefresh
    1:7:void fillsWithWebview(io.dcloud.common.adapter.ui.AdaWebview) -> fillsWithWebview
    1:11:void initPullView(io.dcloud.common.adapter.ui.fresh.PullToRefreshBase$OnStateChangeListener,int,int) -> initPullView
    1:8:void initRootView(android.content.Context,boolean) -> initRootView
    1:22:void onResize() -> onResize
    1:28:void parseBounce(org.json.JSONObject) -> parseBounce
    1:50:void parsePullToReFresh(org.json.JSONObject) -> parsePullToReFresh
    1:2:void reInit() -> reInit
    1:4:void resetBounce() -> resetBounce
    1:1:java.lang.String toString() -> toString
io.dcloud.common.adapter.ui.AdaWebViewParent$PullToRefreshWebViewExt -> io.dcloud.common.adapter.ui.AdaWebViewParent$PullToRefreshWebViewExt:
    1:2:void <init>(io.dcloud.common.adapter.ui.AdaWebViewParent,android.content.Context) -> <init>
    1:1:boolean directPageIsLaunchPage(io.dcloud.common.DHInterface.IApp) -> directPageIsLaunchPage
    1:11:void onAddRefreshableView(android.widget.LinearLayout$LayoutParams) -> onAddRefreshableView
    1:4:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1:1:void setLayoutParams(android.view.ViewGroup$LayoutParams) -> setLayoutParams
io.dcloud.common.adapter.ui.AdaWebview -> io.dcloud.common.adapter.ui.AdaWebview:
    1:1620:void <init>(android.content.Context) -> <init>
    1621:3279:void <init>(android.content.Context,io.dcloud.common.adapter.ui.AdaFrameView) -> <init>
    3280:4938:void <init>(android.content.Context,io.dcloud.common.adapter.ui.AdaFrameView,io.dcloud.common.DHInterface.IDCloudWebviewClientListener) -> <init>
    4939:6570:void <init>(android.content.Context,io.dcloud.common.adapter.ui.AdaFrameView,io.dcloud.common.adapter.ui.webview.OnPageFinishedCallack) -> <init>
    1:1:void access$000(io.dcloud.common.adapter.ui.AdaWebview) -> access$000
    1:1:java.util.ArrayList access$100(io.dcloud.common.adapter.ui.AdaWebview) -> access$100
    1:1:java.util.ArrayList access$102(io.dcloud.common.adapter.ui.AdaWebview,java.util.ArrayList) -> access$102
    1:1:void addFrameItem(io.dcloud.common.adapter.ui.AdaFrameItem) -> addFrameItem
    1:1:void addJsInterface(java.lang.String,java.lang.String) -> addJsInterface
    2:2:void addJsInterface(java.lang.String,java.lang.Object) -> addJsInterface
    3:6:void addJsInterface(java.lang.String,io.dcloud.common.DHInterface.IJsInterface) -> addJsInterface
    1:2:void addStateListener(io.dcloud.common.DHInterface.IWebviewStateListener) -> addStateListener
    1:8:void appendPreloadJsFile(java.lang.String) -> appendPreloadJsFile
    1:1:boolean backOrForward(int) -> backOrForward
    1:2:boolean canGoBack() -> canGoBack
    1:1:boolean canGoForward() -> canGoForward
    1:2:void checkIfNeedLoadOriginalUrl() -> checkIfNeedLoadOriginalUrl
    1:13:void checkInjectSitemap() -> checkInjectSitemap
    1:4:boolean checkOverrideUrl(java.lang.String) -> checkOverrideUrl
    1:1:void checkPreLoadJsContent() -> checkPreLoadJsContent
    1:14:java.lang.String checkRedCssline(java.lang.String) -> checkRedCssline
    1:9:boolean checkResourceLoading(java.lang.String) -> checkResourceLoading
    1:33:io.dcloud.common.adapter.ui.AdaWebview$OverrideResourceRequestItem checkResourceRequestUrl(java.lang.String) -> checkResourceRequestUrl
    1:2:boolean checkWhite(java.lang.String) -> checkWhite
    1:3:void clearData() -> clearData
    1:7:void clearHistory() -> clearHistory
    1:8:io.dcloud.common.DHInterface.IJsInterface[] combineObj2Array(io.dcloud.common.DHInterface.IJsInterface[],io.dcloud.common.DHInterface.IJsInterface) -> combineObj2Array
    1:39:void dispatchWebviewStateEvent(int,java.lang.Object) -> dispatchWebviewStateEvent
    1:27:void dispose() -> dispose
    1:7:void endWebViewEvent(java.lang.String) -> endWebViewEvent
    1:5:void evalJS(java.lang.String) -> evalJS
    6:8:void evalJS(java.lang.String,io.dcloud.common.adapter.ui.ReceiveJSValue$ReceiveJSValueCallback) -> evalJS
    1:3:void evalJSSync(java.lang.String,io.dcloud.common.DHInterface.ICallBack) -> evalJSSync
    1:7:java.lang.String execScript(java.lang.String,java.lang.String,org.json.JSONArray,boolean) -> execScript
    1:3:void executeScript(java.lang.String) -> executeScript
    1:6:void execute_eval_js_stack() -> execute_eval_js_stack
    1:2:java.lang.String getAppName() -> getAppName
    1:2:java.lang.String getCookie(java.lang.String) -> getCookie
    1:1:java.lang.String getCssString() -> getCssString
    1:1:io.dcloud.common.adapter.ui.webview.DCWebView getDCWebView() -> getDCWebView
    1:1:int getFixBottom() -> getFixBottom
    1:1:java.lang.Object getFlag() -> getFlag
    1:1:io.dcloud.common.DHInterface.IWebview getOpener() -> getOpener
    1:1:java.lang.String getOriginalUrl() -> getOriginalUrl
    1:16:java.lang.String getPreLoadJsString() -> getPreLoadJsString
    1:1:float getScale() -> getScale
    1:1:float getScaleOfOpenerWebview() -> getScaleOfOpenerWebview
    1:9:java.lang.String getScreenAndDisplayJson(io.dcloud.common.DHInterface.IWebview) -> getScreenAndDisplayJson
    1:1:java.lang.String getTitle() -> getTitle
    1:1:java.lang.String getWebviewANID() -> getWebviewANID
    1:1:io.dcloud.common.adapter.ui.AdaWebViewParent getWebviewParent() -> getWebviewParent
    1:19:java.lang.String getWebviewProperty(java.lang.String) -> getWebviewProperty
    1:1:java.lang.String getWebviewUUID() -> getWebviewUUID
    1:13:java.lang.String get_eval_js_stack() -> get_eval_js_stack
    1:2:void goBackOrForward(int) -> goBackOrForward
    1:1:boolean hadClearHistory(java.lang.String) -> hadClearHistory
    1:1:boolean hasPreLoadJsFile() -> hasPreLoadJsFile
    1:3:boolean hasWebViewEvent(java.lang.String) -> hasWebViewEvent
    1:2:void init() -> init
    1:2:void initANID() -> initANID
    1:1:void initSitemapState() -> initSitemapState
    1:1:void initWebviewUUID(java.lang.String) -> initWebviewUUID
    1:1:boolean isDisposed() -> isDisposed
    1:1:boolean isIWebViewFocusable() -> isIWebViewFocusable
    1:1:boolean isLoaded() -> isLoaded
    1:1:boolean isPause() -> isPause
    1:4:boolean isRealInject(java.lang.String) -> isRealInject
    1:1:void loadContentData(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> loadContentData
    1:19:boolean loadCssFile() -> loadCssFile
    1:19:void loadFileContent(io.dcloud.common.adapter.ui.AdaWebview$IFExecutePreloadJSContentCallBack) -> loadFileContent
    20:58:java.lang.String loadFileContent(java.lang.String,int) -> loadFileContent
    1:11:void loadForceAHeadJs() -> loadForceAHeadJs
    1:8:void loadUrl(java.lang.String) -> loadUrl
    1:1:java.lang.String obtainFrameId() -> obtainFrameId
    1:1:io.dcloud.common.DHInterface.IFrameView obtainFrameView() -> obtainFrameView
    1:4:java.lang.String obtainFullUrl() -> obtainFullUrl
    1:9:java.lang.String obtainPageTitle() -> obtainPageTitle
    1:12:java.lang.String obtainUrl() -> obtainUrl
    1:2:android.webkit.WebView obtainWebview() -> obtainWebview
    1:1:android.view.ViewGroup obtainWindowView() -> obtainWindowView
    1:6:boolean onDispose() -> onDispose
    1:21:void onPageStarted() -> onPageStarted
    1:3:void onRootViewGlobalLayout(android.view.View) -> onRootViewGlobalLayout
    1:13:void pause() -> pause
    1:9:void pushEvalJsOption(java.lang.String) -> pushEvalJsOption
    1:18:void releaseConfigCallback() -> releaseConfigCallback
    1:12:void reload() -> reload
    13:16:void reload(java.lang.String) -> reload
    17:20:void reload(boolean) -> reload
    1:8:void removeAllCookie() -> removeAllCookie
    1:8:void removeSessionCookie() -> removeSessionCookie
    1:2:void removeStateListener(io.dcloud.common.DHInterface.IWebviewStateListener) -> removeStateListener
    1:11:void resetPlusLoadSaveData() -> resetPlusLoadSaveData
    1:13:void resume() -> resume
    1:19:void saveWebViewData(java.lang.String) -> saveWebViewData
    1:15:void setAssistantType(java.lang.String) -> setAssistantType
    1:16:void setCookie(java.lang.String,java.lang.String) -> setCookie
    1:6:void setCssFile(java.lang.String,java.lang.String) -> setCssFile
    1:1:void setFixBottom(int) -> setFixBottom
    1:1:void setFlag(java.lang.Object) -> setFlag
    1:1:void setFrameId(java.lang.String) -> setFrameId
    1:9:void setIWebViewFocusable(boolean) -> setIWebViewFocusable
    1:1:void setJsInterface(io.dcloud.common.DHInterface.IJsInterface) -> setJsInterface
    1:1:void setListenResourceLoading(org.json.JSONObject) -> setListenResourceLoading
    1:2:void setLoadURLHeads(java.lang.String,java.util.HashMap) -> setLoadURLHeads
    1:1:void setOpener(io.dcloud.common.DHInterface.IWebview) -> setOpener
    1:1:void setOriginalUrl(java.lang.String) -> setOriginalUrl
    1:1:void setOverrideResourceRequest(org.json.JSONArray) -> setOverrideResourceRequest
    1:6:void setOverrideUrlLoadingData(org.json.JSONObject) -> setOverrideUrlLoadingData
    1:12:void setPreloadJsFile(java.lang.String,boolean) -> setPreloadJsFile
    1:1:void setProgressView(android.view.View) -> setProgressView
    1:13:void setScrollIndicator(java.lang.String) -> setScrollIndicator
    1:2:void setWebViewCacheMode(java.lang.String) -> setWebViewCacheMode
    1:12:void setWebViewEvent(java.lang.String,java.lang.Object) -> setWebViewEvent
    1:86:void setWebviewProperty(java.lang.String,java.lang.String) -> setWebviewProperty
    1:1:void setWebviewclientListener(io.dcloud.common.DHInterface.IDCloudWebviewClientListener) -> setWebviewclientListener
    1:37:void startWebProgress() -> startWebProgress
    1:2:void stopLoading() -> stopLoading
    1:18:java.lang.String syncUpdateWebViewData(java.lang.String) -> syncUpdateWebViewData
    1:5:java.lang.String toString() -> toString
    1:1:boolean unReceiveTitle() -> unReceiveTitle
    1:25:java.lang.String wrapAppendJsFile(java.lang.String,int) -> wrapAppendJsFile
io.dcloud.common.adapter.ui.AdaWebview$1 -> io.dcloud.common.adapter.ui.AdaWebview$1:
    1:1:void <init>(io.dcloud.common.adapter.ui.AdaWebview) -> <init>
    1:1:void run() -> run
io.dcloud.common.adapter.ui.AdaWebview$2 -> io.dcloud.common.adapter.ui.AdaWebview$2:
    1:1:void <init>(io.dcloud.common.adapter.ui.AdaWebview) -> <init>
    1:1:void run() -> run
io.dcloud.common.adapter.ui.AdaWebview$3 -> io.dcloud.common.adapter.ui.AdaWebview$3:
    1:1:void <init>(io.dcloud.common.adapter.ui.AdaWebview) -> <init>
    1:24:void execute(java.lang.Object) -> execute
io.dcloud.common.adapter.ui.AdaWebview$4 -> io.dcloud.common.adapter.ui.AdaWebview$4:
    1:1:void <init>(io.dcloud.common.adapter.ui.AdaWebview) -> <init>
    1:6:void execute(java.lang.Object) -> execute
io.dcloud.common.adapter.ui.AdaWebview$5 -> io.dcloud.common.adapter.ui.AdaWebview$5:
    1:1:void <init>(io.dcloud.common.adapter.ui.AdaWebview) -> <init>
    1:2:void execute(java.lang.Object) -> execute
io.dcloud.common.adapter.ui.AdaWebview$6 -> io.dcloud.common.adapter.ui.AdaWebview$6:
    1:1:void <init>(io.dcloud.common.adapter.ui.AdaWebview) -> <init>
    1:3:void run() -> run
io.dcloud.common.adapter.ui.AdaWebview$7 -> io.dcloud.common.adapter.ui.AdaWebview$7:
    1:1:void <init>(io.dcloud.common.adapter.ui.AdaWebview) -> <init>
    1:1:void run() -> run
io.dcloud.common.adapter.ui.AdaWebview$OverrideResourceRequestItem -> io.dcloud.common.adapter.ui.AdaWebview$OverrideResourceRequestItem:
    1:3:void <init>(io.dcloud.common.adapter.ui.AdaWebview) -> <init>
io.dcloud.common.adapter.ui.AdaWebview$WebProgressView -> io.dcloud.common.adapter.ui.AdaWebview$WebProgressView:
    1:2:void <init>(io.dcloud.common.adapter.ui.AdaWebview,android.content.Context) -> <init>
io.dcloud.common.adapter.ui.BounceView -> io.dcloud.common.adapter.ui.BounceView:
    1:1:void <clinit>() -> <clinit>
    1:67:void <init>(io.dcloud.common.adapter.ui.AdaFrameView,io.dcloud.common.adapter.ui.AdaWebview) -> <init>
    1:27:void checkOffset(io.dcloud.common.adapter.ui.AdaFrameView,io.dcloud.common.adapter.ui.AdaWebViewParent$PullToRefreshWebViewExt,org.json.JSONObject,int,int) -> checkOffset
    1:1:void onResize() -> onResize
    1:14:void onStateChanged(io.dcloud.common.adapter.ui.fresh.ILoadingLayout$State,boolean) -> onStateChanged
    1:44:void parseJsonOption(org.json.JSONObject) -> parseJsonOption
io.dcloud.common.adapter.ui.BounceView$1 -> io.dcloud.common.adapter.ui.BounceView$1:
    1:1:void <init>(io.dcloud.common.adapter.ui.BounceView,io.dcloud.common.adapter.ui.AdaWebViewParent$PullToRefreshWebViewExt) -> <init>
    1:1:void run() -> run
io.dcloud.common.adapter.ui.CustomeizedInputConnection -> io.dcloud.common.adapter.ui.CustomeizedInputConnection:
    1:6:void <clinit>() -> <clinit>
    1:151:void <init>(io.dcloud.common.DHInterface.IWebview,android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,io.dcloud.common.adapter.ui.CustomeizedInputConnection) -> <init>
    1:2:void checkLastInputConnection() -> checkLastInputConnection
    1:1:void clearComposingText() -> clearComposingText
    1:4:void closeRecordView() -> closeRecordView
    1:8:boolean commitText(java.lang.CharSequence,int) -> commitText
    1:21:boolean finishComposingText() -> finishComposingText
    1:4:java.lang.CharSequence getTextBeforeCursor(int,int) -> getTextBeforeCursor
    1:6:boolean needRecord(int,java.lang.String) -> needRecord
    1:39:void recordInputType(android.view.inputmethod.EditorInfo) -> recordInputType
    1:7:void recordText() -> recordText
    1:3:boolean setComposingText(java.lang.CharSequence,int) -> setComposingText
    1:3:boolean setSelection(int,int) -> setSelection
    1:14:void setText(java.lang.String) -> setText
    1:1:void showRecordView(int,boolean) -> showRecordView
    2:7:void showRecordView(int,int) -> showRecordView
    1:1:void update(int) -> update
    1:1:void updateInputType(int) -> updateInputType
io.dcloud.common.adapter.ui.DHImageView -> io.dcloud.common.adapter.ui.DHImageView:
    1:27:void <init>(android.content.Context) -> <init>
    1:14:void addNativeView(io.dcloud.common.DHInterface.IFrameView,io.dcloud.common.DHInterface.INativeView) -> addNativeView
    1:5:void clear() -> clear
    1:1:android.graphics.Bitmap getBitmap() -> getBitmap
    1:1:boolean isNativeView() -> isNativeView
    1:1:boolean isSlipping() -> isSlipping
    1:4:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1:2:void recycledBitmap(android.graphics.Bitmap) -> recycledBitmap
    1:15:void refreshImagerView() -> refreshImagerView
    1:4:void removeNativeView() -> removeNativeView
    1:15:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    1:1:void setIntercept(boolean) -> setIntercept
    1:2:void setNativeAnimationRuning(boolean) -> setNativeAnimationRuning
    1:1:void setScaleType(android.widget.ImageView$ScaleType) -> setScaleType
    1:1:void setSlipping(boolean) -> setSlipping
io.dcloud.common.adapter.ui.FileChooseDialog -> io.dcloud.common.adapter.ui.FileChooseDialog:
    1:75:void <init>(android.content.Context,android.app.Activity,android.content.Intent) -> <init>
    1:1:android.app.Activity access$000(io.dcloud.common.adapter.ui.FileChooseDialog) -> access$000
    1:1:android.view.View access$100(io.dcloud.common.adapter.ui.FileChooseDialog,android.content.Context,io.dcloud.common.adapter.ui.FileChooseDialog$Item) -> access$100
    1:15:android.view.View createView(android.content.Context,io.dcloud.common.adapter.ui.FileChooseDialog$Item) -> createView
    1:8:void show() -> show
io.dcloud.common.adapter.ui.FileChooseDialog$1 -> io.dcloud.common.adapter.ui.FileChooseDialog$1:
    1:1:void <init>(io.dcloud.common.adapter.ui.FileChooseDialog) -> <init>
    1:1:void onClick(android.view.View) -> onClick
io.dcloud.common.adapter.ui.FileChooseDialog$2 -> io.dcloud.common.adapter.ui.FileChooseDialog$2:
    1:1:void <init>(io.dcloud.common.adapter.ui.FileChooseDialog,io.dcloud.common.adapter.ui.FileChooseDialog$Item) -> <init>
    1:14:void onClick(android.view.View) -> onClick
io.dcloud.common.adapter.ui.FileChooseDialog$2$1 -> io.dcloud.common.adapter.ui.FileChooseDialog$2$1:
    1:1:void <init>(io.dcloud.common.adapter.ui.FileChooseDialog$2) -> <init>
    1:1:void onGranted(java.lang.String) -> onGranted
io.dcloud.common.adapter.ui.FileChooseDialog$GridAdapter -> io.dcloud.common.adapter.ui.FileChooseDialog$GridAdapter:
    1:3:void <init>(io.dcloud.common.adapter.ui.FileChooseDialog,android.content.Context,java.util.List) -> <init>
    1:1:int getCount() -> getCount
    1:1:java.lang.Object getItem(int) -> getItem
    1:10:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
io.dcloud.common.adapter.ui.FileChooseDialog$GridAdapter$ViewHolder -> io.dcloud.common.adapter.ui.FileChooseDialog$GridAdapter$ViewHolder:
    1:1:void <init>(io.dcloud.common.adapter.ui.FileChooseDialog$GridAdapter) -> <init>
    2:2:void <init>(io.dcloud.common.adapter.ui.FileChooseDialog$GridAdapter,io.dcloud.common.adapter.ui.FileChooseDialog$1) -> <init>
io.dcloud.common.adapter.ui.FileChooseDialog$Item -> io.dcloud.common.adapter.ui.FileChooseDialog$Item:
    1:4:void <init>(io.dcloud.common.adapter.ui.FileChooseDialog,java.lang.String,android.graphics.drawable.Drawable,android.content.Intent) -> <init>
io.dcloud.common.adapter.ui.FrameBitmapView -> io.dcloud.common.adapter.ui.FrameBitmapView:
    1:16:void <init>(android.app.Activity) -> <init>
    1:1:boolean access$000(io.dcloud.common.adapter.ui.FrameBitmapView) -> access$000
    1:1:io.dcloud.common.adapter.ui.FrameBitmapView$ClearAnimationListener access$100(io.dcloud.common.adapter.ui.FrameBitmapView) -> access$100
    1:1:int access$200(io.dcloud.common.adapter.ui.FrameBitmapView) -> access$200
    1:1:int access$208(io.dcloud.common.adapter.ui.FrameBitmapView) -> access$208
    1:1:io.dcloud.common.DHInterface.INativeBitmap access$300(io.dcloud.common.adapter.ui.FrameBitmapView) -> access$300
    1:1:android.graphics.RectF access$402(io.dcloud.common.adapter.ui.FrameBitmapView,android.graphics.RectF) -> access$402
    1:9:void clearData() -> clearData
    1:6:void configurationChanged(int,int) -> configurationChanged
    1:2:float getFontHeight(android.graphics.Paint) -> getFontHeight
    1:2:float getFontLeading(android.graphics.Paint) -> getFontLeading
    1:1:float getFontlength(android.graphics.Paint,java.lang.String) -> getFontlength
    1:5:void initBitmapXY() -> initBitmapXY
    1:72:void initTextData() -> initTextData
    1:10:void injectionData(java.lang.Object,java.lang.String,int,int,float) -> injectionData
    1:1:boolean isInit() -> isInit
    1:18:void onDraw(android.graphics.Canvas) -> onDraw
    1:1:void onMeasure(int,int) -> onMeasure
    1:2:void runClearAnimation(int,int,io.dcloud.common.adapter.ui.FrameBitmapView$ClearAnimationListener) -> runClearAnimation
    3:3:void runClearAnimation(int,int) -> runClearAnimation
    1:1:void setStopAnimation(boolean) -> setStopAnimation
io.dcloud.common.adapter.ui.FrameBitmapView$1 -> io.dcloud.common.adapter.ui.FrameBitmapView$1:
    1:1:void <init>(io.dcloud.common.adapter.ui.FrameBitmapView,int,int) -> <init>
    1:16:void run() -> run
io.dcloud.common.adapter.ui.FrameSwitchView -> io.dcloud.common.adapter.ui.FrameSwitchView:
    1:298:void <init>() -> <init>
    299:597:void <init>(android.app.Activity) -> <init>
    1:1:boolean access$000(io.dcloud.common.adapter.ui.FrameSwitchView) -> access$000
    1:1:boolean access$002(io.dcloud.common.adapter.ui.FrameSwitchView,boolean) -> access$002
    1:1:void access$100(io.dcloud.common.adapter.ui.FrameSwitchView,android.view.View,int) -> access$100
    1:1:io.dcloud.common.DHInterface.IWebview access$200(io.dcloud.common.adapter.ui.FrameSwitchView) -> access$200
    1:1:boolean access$300(io.dcloud.common.adapter.ui.FrameSwitchView) -> access$300
    1:1:io.dcloud.common.adapter.ui.FrameBitmapView access$400(io.dcloud.common.adapter.ui.FrameSwitchView) -> access$400
    1:1:io.dcloud.common.adapter.ui.FrameBitmapView access$500(io.dcloud.common.adapter.ui.FrameSwitchView) -> access$500
    1:1:java.lang.String access$600(io.dcloud.common.adapter.ui.FrameSwitchView) -> access$600
    1:1:android.view.View access$700(io.dcloud.common.adapter.ui.FrameSwitchView) -> access$700
    1:1:android.view.View access$800(io.dcloud.common.adapter.ui.FrameSwitchView) -> access$800
    1:6:void addView(android.view.View) -> addView
    1:9:void clearData() -> clearData
    1:1:void clearSwitchAnimation(java.lang.String) -> clearSwitchAnimation
    1:6:void endAnimationLayout(android.view.View,int) -> endAnimationLayout
    1:21:void endRefreshView() -> endRefreshView
    1:4:android.view.animation.TranslateAnimation getAnimation(int,int,int,android.view.animation.Animation$AnimationListener) -> getAnimation
    1:8:io.dcloud.common.adapter.ui.FrameSwitchView getInstance(android.app.Activity) -> getInstance
    9:9:io.dcloud.common.adapter.ui.FrameSwitchView getInstance() -> getInstance
    1:21:void initScreenData() -> initScreenData
    1:10:void initView() -> initView
    1:1:boolean isInit() -> isInit
    1:102:void runingAnimation(io.dcloud.common.DHInterface.IWebview,int,int,java.lang.String,java.lang.String) -> runingAnimation
    1:32:void startAnimation(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.Object,java.lang.String,java.lang.Object,java.lang.String,java.lang.String) -> startAnimation
    1:19:void stopAnimation() -> stopAnimation
io.dcloud.common.adapter.ui.FrameSwitchView$1 -> io.dcloud.common.adapter.ui.FrameSwitchView$1:
    1:1:void <init>(io.dcloud.common.adapter.ui.FrameSwitchView,android.view.View,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> <init>
    1:4:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    1:1:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
io.dcloud.common.adapter.ui.FrameSwitchView$2 -> io.dcloud.common.adapter.ui.FrameSwitchView$2:
    1:1:void <init>(io.dcloud.common.adapter.ui.FrameSwitchView,android.view.View) -> <init>
    1:1:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
io.dcloud.common.adapter.ui.FrameSwitchView$3 -> io.dcloud.common.adapter.ui.FrameSwitchView$3:
    1:1:void <init>(io.dcloud.common.adapter.ui.FrameSwitchView,android.view.View,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> <init>
    1:4:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    1:1:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
io.dcloud.common.adapter.ui.FrameSwitchView$4 -> io.dcloud.common.adapter.ui.FrameSwitchView$4:
    1:1:void <init>(io.dcloud.common.adapter.ui.FrameSwitchView,android.view.View) -> <init>
    1:1:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
io.dcloud.common.adapter.ui.FrameSwitchView$5 -> io.dcloud.common.adapter.ui.FrameSwitchView$5:
    1:1:void <init>(io.dcloud.common.adapter.ui.FrameSwitchView,android.view.View,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> <init>
    1:4:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    1:1:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
io.dcloud.common.adapter.ui.FrameSwitchView$6 -> io.dcloud.common.adapter.ui.FrameSwitchView$6:
    1:1:void <init>(io.dcloud.common.adapter.ui.FrameSwitchView,android.view.View,int,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> <init>
    1:4:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    1:1:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
io.dcloud.common.adapter.ui.FrameSwitchView$7 -> io.dcloud.common.adapter.ui.FrameSwitchView$7:
    1:1:void <init>(io.dcloud.common.adapter.ui.FrameSwitchView) -> <init>
    1:1:void onAnimationEnd() -> onAnimationEnd
io.dcloud.common.adapter.ui.FrameSwitchView$SwitchLayout -> io.dcloud.common.adapter.ui.FrameSwitchView$SwitchLayout:
    1:2:void <init>(io.dcloud.common.adapter.ui.FrameSwitchView,android.content.Context) -> <init>
    1:10:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    1:3:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    1:7:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
io.dcloud.common.adapter.ui.PullRefreshView -> io.dcloud.common.adapter.ui.PullRefreshView:
    1:282:void <init>(io.dcloud.common.adapter.ui.AdaFrameItem,io.dcloud.common.adapter.ui.AdaWebview) -> <init>
    1:1:void access$000(android.view.View,int,int) -> access$000
    1:11:void changeStringInfo(java.lang.String) -> changeStringInfo
    1:16:void init(java.lang.String) -> init
    1:7:void onDraw(android.graphics.Canvas) -> onDraw
    1:8:void onExecuting() -> onExecuting
    1:42:boolean onMove(float,float) -> onMove
    1:16:void onPullDown_end() -> onPullDown_end
    1:16:void onPullDown_start(float,float) -> onPullDown_start
    1:34:void parseJsonOption(org.json.JSONObject) -> parseJsonOption
    1:1:void scrollToByMessage(android.view.View,int,int) -> scrollToByMessage
    1:2:void setColorByParentChild(android.view.View) -> setColorByParentChild
    1:2:void smoothScrollTo(android.view.ViewGroup,android.view.View,int,int,int) -> smoothScrollTo
    1:7:void smoothScrollToStateHeight(boolean) -> smoothScrollToStateHeight
    1:3:void startUpdateScreenTimer() -> startUpdateScreenTimer
    1:3:void stopUpdateScreenTimer() -> stopUpdateScreenTimer
    1:6:void updateScreen() -> updateScreen
    1:18:boolean updateScrollState(byte) -> updateScrollState
io.dcloud.common.adapter.ui.PullRefreshView$1 -> io.dcloud.common.adapter.ui.PullRefreshView$1:
    1:1:void <init>(io.dcloud.common.adapter.ui.PullRefreshView) -> <init>
    1:1:void run() -> run
io.dcloud.common.adapter.ui.PullRefreshView$2 -> io.dcloud.common.adapter.ui.PullRefreshView$2:
    1:18:void <init>(android.view.View,android.view.ViewGroup,int,int,java.util.Timer) -> <init>
    1:22:void run() -> run
io.dcloud.common.adapter.ui.PullRefreshView$2$1 -> io.dcloud.common.adapter.ui.PullRefreshView$2$1:
    1:1:void <init>(io.dcloud.common.adapter.ui.PullRefreshView$2) -> <init>
    1:1:void run() -> run
io.dcloud.common.adapter.ui.PullRefreshView$3 -> io.dcloud.common.adapter.ui.PullRefreshView$3:
    1:1:void <init>(android.view.View,int,int) -> <init>
    1:1:void run() -> run
io.dcloud.common.adapter.ui.ReceiveJSValue -> io.dcloud.common.adapter.ui.ReceiveJSValue:
    1:1:void <clinit>() -> <clinit>
    1:17:void <init>() -> <init>
    1:3:java.lang.String __js__call__native__(java.lang.String,java.lang.String) -> __js__call__native__
    1:5:void addJavascriptInterface(io.dcloud.common.adapter.ui.AdaWebview) -> addJavascriptInterface
    1:1:java.lang.String registerCallback(java.lang.String,io.dcloud.common.adapter.ui.ReceiveJSValue$ReceiveJSValueCallback) -> registerCallback
    2:9:java.lang.String registerCallback(io.dcloud.common.adapter.ui.AdaWebview,java.lang.String,io.dcloud.common.adapter.ui.ReceiveJSValue$ReceiveJSValueCallback) -> registerCallback
io.dcloud.common.adapter.ui.RecordView -> io.dcloud.common.adapter.ui.RecordView:
    1:202:void <init>(android.content.Context,android.view.ViewGroup,java.lang.String) -> <init>
    1:1:void access$000(io.dcloud.common.adapter.ui.RecordView,android.view.MotionEvent,int) -> access$000
    1:1:void access$100(io.dcloud.common.adapter.ui.RecordView,android.widget.TextView) -> access$100
    1:1:void access$200(io.dcloud.common.adapter.ui.RecordView,java.lang.String,java.lang.String) -> access$200
    1:1:java.lang.String access$300(android.content.Context,java.lang.String,int) -> access$300
    1:1:void access$400(android.content.Context,java.lang.String,int,java.lang.String) -> access$400
    1:1:boolean checkLocationPermission(android.app.Activity) -> checkLocationPermission
    1:1:boolean checkLocationService(android.app.Activity) -> checkLocationService
    0:5:void dispose() -> dispose
    1:1:int dp2px(android.content.Context,float) -> dp2px
    1:1:java.lang.String getAssisBundleData(java.lang.String) -> getAssisBundleData
    2:2:java.lang.String getAssisBundleData(android.content.Context,java.lang.String) -> getAssisBundleData
    1:1:java.lang.String getRecordDatas(java.lang.String,java.lang.String) -> getRecordDatas
    2:2:java.lang.String getRecordDatas(android.content.Context,java.lang.String,java.lang.String) -> getRecordDatas
    0:4:java.lang.String getRecordDatas(android.content.Context,java.lang.String,int) -> getRecordDatas
    1:7:java.lang.String getRecordDatas0(android.content.Context,java.lang.String,java.lang.String) -> getRecordDatas0
    1:3:android.widget.TextView getTextView(android.view.View,java.lang.String) -> getTextView
    1:1:android.view.View getView(android.view.View,java.lang.String) -> getView
    1:22:void handleAssistInputPreviousOrNextButtOnTouch(android.view.MotionEvent,int) -> handleAssistInputPreviousOrNextButtOnTouch
    1:25:boolean handleMessage(android.os.Message) -> handleMessage
    1:17:void initArrowView(android.view.View) -> initArrowView
    1:5:android.view.ViewGroup initView1(android.content.Context,android.view.ViewGroup) -> initView1
    1:6:android.view.ViewGroup initView2(android.content.Context,android.view.ViewGroup) -> initView2
    1:1:void log(java.lang.String,java.lang.String) -> log
    1:14:void onClick(android.view.View) -> onClick
    1:1:void record(java.lang.String,int) -> record
    1:39:void requestCurrentLocation(android.widget.TextView) -> requestCurrentLocation
    1:25:void requestCurrentLocation0(android.widget.TextView) -> requestCurrentLocation0
    1:1:void setAssisBundleData(android.content.Context,java.lang.String,java.lang.String) -> setAssisBundleData
    1:5:void setRcordDatas(android.content.Context,java.lang.String,int,java.lang.String) -> setRcordDatas
    6:6:void setRcordDatas(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> setRcordDatas
    1:2:void setRcordDatas0(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> setRcordDatas0
    1:7:void showConfrim(android.app.Activity,java.lang.String,java.lang.String[],android.content.DialogInterface$OnClickListener) -> showConfrim
    1:1:void update(int,int) -> update
    1:54:void update0(int,int) -> update0
io.dcloud.common.adapter.ui.RecordView$1 -> io.dcloud.common.adapter.ui.RecordView$1:
    1:1:void <init>(io.dcloud.common.adapter.ui.RecordView) -> <init>
    1:1:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
io.dcloud.common.adapter.ui.RecordView$2 -> io.dcloud.common.adapter.ui.RecordView$2:
    1:1:void <init>(io.dcloud.common.adapter.ui.RecordView) -> <init>
    1:1:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
io.dcloud.common.adapter.ui.RecordView$3 -> io.dcloud.common.adapter.ui.RecordView$3:
    1:1:void <init>(io.dcloud.common.adapter.ui.RecordView,int,int) -> <init>
    1:1:void run() -> run
io.dcloud.common.adapter.ui.RecordView$4 -> io.dcloud.common.adapter.ui.RecordView$4:
    1:1:void <init>(io.dcloud.common.adapter.ui.RecordView,android.widget.TextView,android.app.Activity) -> <init>
    1:22:void onClick(android.content.DialogInterface,int) -> onClick
io.dcloud.common.adapter.ui.RecordView$4$1 -> io.dcloud.common.adapter.ui.RecordView$4$1:
    1:1:void <init>(io.dcloud.common.adapter.ui.RecordView$4) -> <init>
    1:3:boolean onExecute(io.dcloud.common.DHInterface.ISysEventListener$SysEventType,java.lang.Object) -> onExecute
io.dcloud.common.adapter.ui.RecordView$5 -> io.dcloud.common.adapter.ui.RecordView$5:
    1:1:void <init>(io.dcloud.common.adapter.ui.RecordView,android.widget.TextView,android.app.Activity) -> <init>
    1:20:void onClick(android.content.DialogInterface,int) -> onClick
io.dcloud.common.adapter.ui.RecordView$5$1 -> io.dcloud.common.adapter.ui.RecordView$5$1:
    1:1:void <init>(io.dcloud.common.adapter.ui.RecordView$5) -> <init>
    1:3:boolean onExecute(io.dcloud.common.DHInterface.ISysEventListener$SysEventType,java.lang.Object) -> onExecute
io.dcloud.common.adapter.ui.RecordView$6 -> io.dcloud.common.adapter.ui.RecordView$6:
    1:1:void <init>(io.dcloud.common.adapter.ui.RecordView,java.lang.Object,android.widget.TextView) -> <init>
    1:5:void onReceiver(java.lang.Object) -> onReceiver
io.dcloud.common.adapter.ui.RecordView$RecordData -> io.dcloud.common.adapter.ui.RecordView$RecordData:
    1:2:void <init>(io.dcloud.common.adapter.ui.RecordView) -> <init>
    1:16:void checkType(int) -> checkType
    1:1:boolean hasChanged(int) -> hasChanged
    1:56:void record(java.lang.String,int) -> record
io.dcloud.common.adapter.ui.RecordView$RecordItem -> io.dcloud.common.adapter.ui.RecordView$RecordItem:
    1:3:void <init>(io.dcloud.common.adapter.ui.RecordView,java.lang.String,long) -> <init>
    1:1:java.lang.String toString() -> toString
io.dcloud.common.adapter.ui.RecordView$Utils -> io.dcloud.common.adapter.ui.RecordView$Utils:
    1:1:void <init>() -> <init>
    1:15:int convertInt(java.lang.String) -> convertInt
    1:21:boolean needRecord(int) -> needRecord
io.dcloud.common.adapter.ui.RefreshView -> io.dcloud.common.adapter.ui.RefreshView:
    1:200:void <init>(io.dcloud.common.adapter.ui.AdaFrameView,io.dcloud.common.adapter.ui.AdaWebview) -> <init>
    1:1:void access$000(io.dcloud.common.adapter.ui.RefreshView) -> access$000
    1:11:void changeStringInfo(java.lang.String) -> changeStringInfo
    1:11:void computePosition(android.graphics.Paint) -> computePosition
    1:17:void init(java.lang.String) -> init
    1:1:void onResize() -> onResize
    1:20:void onStateChanged(io.dcloud.common.adapter.ui.fresh.ILoadingLayout$State,boolean) -> onStateChanged
    1:9:void paint(android.graphics.Canvas,int,int) -> paint
    1:35:void parseJsonOption(org.json.JSONObject) -> parseJsonOption
    1:4:void startUpdateScreenTimer() -> startUpdateScreenTimer
    1:3:void stopUpdateScreenTimer() -> stopUpdateScreenTimer
    1:5:void updateScreen() -> updateScreen
io.dcloud.common.adapter.ui.RefreshView$1 -> io.dcloud.common.adapter.ui.RefreshView$1:
    1:1:void <init>(io.dcloud.common.adapter.ui.RefreshView) -> <init>
    1:8:void run() -> run
io.dcloud.common.adapter.ui.WaitingView -> io.dcloud.common.adapter.ui.WaitingView:
    1:1:void <init>(io.dcloud.common.DHInterface.IWebview) -> <init>
    2:47:void <init>(io.dcloud.common.DHInterface.IWebview,java.lang.String,org.json.JSONObject,java.lang.String) -> <init>
    1:2:void close() -> close
    1:1:boolean isInRect(int,int,android.graphics.Rect) -> isInRect
    1:4:void updateTitle(java.lang.String) -> updateTitle
io.dcloud.common.adapter.ui.WaitingView$PopupWindowImpl -> io.dcloud.common.adapter.ui.WaitingView$PopupWindowImpl:
    1:9:void <init>(io.dcloud.common.adapter.ui.WaitingView,android.content.Context) -> <init>
    1:2:void init(boolean) -> init
    1:1:void onDismiss() -> onDismiss
    1:4:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
io.dcloud.common.adapter.ui.WaitingView$WaitingViewImpl -> io.dcloud.common.adapter.ui.WaitingView$WaitingViewImpl:
    1:18:void <init>(io.dcloud.common.adapter.ui.WaitingView,android.content.Context,android.widget.PopupWindow,java.lang.String) -> <init>
    1:4:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    1:1:void initBackground(int) -> initBackground
    1:9:void initProgressBar(java.lang.String,int) -> initProgressBar
    1:4:void initProgressBar1(int) -> initProgressBar1
    1:41:void initTitleView(java.lang.String) -> initTitleView
    1:21:void onLayout(boolean,int,int,int,int) -> onLayout
    1:37:void onMeasure(int,int) -> onMeasure
io.dcloud.common.adapter.ui.WaitingView$WaitingViewImpl$1 -> io.dcloud.common.adapter.ui.WaitingView$WaitingViewImpl$1:
    1:1:void <init>(io.dcloud.common.adapter.ui.WaitingView$WaitingViewImpl,android.content.Context) -> <init>
    1:16:void onMeasure(int,int) -> onMeasure
io.dcloud.common.adapter.ui.WebParentView -> io.dcloud.common.adapter.ui.WebParentView:
    1:26:void <init>(android.content.Context) -> <init>
    1:4:boolean isCanCircleRefresh() -> isCanCircleRefresh
    1:6:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    1:38:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1:10:void onSizeChanged(int,int,int,int) -> onSizeChanged
    1:9:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1:1:void setWebView(io.dcloud.common.adapter.ui.AdaWebview) -> setWebView
io.dcloud.common.adapter.ui.fresh.FooterLoadingLayout -> io.dcloud.common.adapter.ui.fresh.FooterLoadingLayout:
    1:2:void <init>(android.content.Context) -> <init>
    3:4:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1:2:android.view.View createLoadingView(android.content.Context,android.util.AttributeSet) -> createLoadingView
    1:1:int getContentSize() -> getContentSize
    1:1:void init(android.content.Context) -> init
    1:1:void onStateChanged(io.dcloud.common.adapter.ui.fresh.ILoadingLayout$State,io.dcloud.common.adapter.ui.fresh.ILoadingLayout$State) -> onStateChanged
io.dcloud.common.adapter.ui.fresh.HeaderLoadingLayout -> io.dcloud.common.adapter.ui.fresh.HeaderLoadingLayout:
    1:2:void <init>(android.content.Context) -> <init>
    3:4:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1:1:android.view.View createLoadingView(android.content.Context,android.util.AttributeSet) -> createLoadingView
    1:1:int getContentSize() -> getContentSize
    1:1:void onStateChanged(io.dcloud.common.adapter.ui.fresh.ILoadingLayout$State,io.dcloud.common.adapter.ui.fresh.ILoadingLayout$State) -> onStateChanged
io.dcloud.common.adapter.ui.fresh.ILoadingLayout$State -> io.dcloud.common.adapter.ui.fresh.ILoadingLayout$State:
    1:36:void <clinit>() -> <clinit>
    1:1:void <init>(java.lang.String,int) -> <init>
    1:1:io.dcloud.common.adapter.ui.fresh.ILoadingLayout$State valueOf(java.lang.String) -> valueOf
    1:1:io.dcloud.common.adapter.ui.fresh.ILoadingLayout$State[] values() -> values
io.dcloud.common.adapter.ui.fresh.LoadingLayout -> io.dcloud.common.adapter.ui.fresh.LoadingLayout:
    1:1:void <init>(android.content.Context) -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    3:37:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1:1:io.dcloud.common.adapter.ui.fresh.ILoadingLayout$State getPreState() -> getPreState
    1:1:io.dcloud.common.adapter.ui.fresh.ILoadingLayout$State getState() -> getState
    1:23:void onStateChanged(io.dcloud.common.adapter.ui.fresh.ILoadingLayout$State,io.dcloud.common.adapter.ui.fresh.ILoadingLayout$State) -> onStateChanged
    1:4:void setState(io.dcloud.common.adapter.ui.fresh.ILoadingLayout$State) -> setState
    1:12:void show(boolean) -> show
io.dcloud.common.adapter.ui.fresh.LoadingLayout$1 -> io.dcloud.common.adapter.ui.fresh.LoadingLayout$1:
    1:1:void <clinit>() -> <clinit>
io.dcloud.common.adapter.ui.fresh.PullToRefreshBase -> io.dcloud.common.adapter.ui.fresh.PullToRefreshBase:
    1:391:void <init>(android.content.Context) -> <init>
    1:1:int access$000(io.dcloud.common.adapter.ui.fresh.PullToRefreshBase) -> access$000
    1:1:int access$100(io.dcloud.common.adapter.ui.fresh.PullToRefreshBase) -> access$100
    1:1:io.dcloud.common.adapter.ui.fresh.LoadingLayout access$200(io.dcloud.common.adapter.ui.fresh.PullToRefreshBase) -> access$200
    1:1:io.dcloud.common.adapter.ui.fresh.LoadingLayout access$300(io.dcloud.common.adapter.ui.fresh.PullToRefreshBase) -> access$300
    1:1:void access$400(io.dcloud.common.adapter.ui.fresh.PullToRefreshBase,int,long,long) -> access$400
    1:1:io.dcloud.common.adapter.ui.fresh.PullToRefreshBase$OnRefreshListener access$500(io.dcloud.common.adapter.ui.fresh.PullToRefreshBase) -> access$500
    1:1:void access$600(io.dcloud.common.adapter.ui.fresh.PullToRefreshBase,int,int) -> access$600
    1:21:void addHeaderAndFooter(android.content.Context) -> addHeaderAndFooter
    1:3:void addRefreshableView(android.view.View) -> addRefreshableView
    1:20:void beginPullRefresh() -> beginPullRefresh
    1:5:boolean canDoPullDownEvent(float,float) -> canDoPullDownEvent
    1:2:io.dcloud.common.adapter.ui.fresh.LoadingLayout createHeaderLoadingLayout(android.content.Context) -> createHeaderLoadingLayout
    1:1:void doPullRefreshing(boolean,long) -> doPullRefreshing
    1:1:double getAngle(float,float,float,float) -> getAngle
    1:1:java.lang.String getAppId() -> getAppId
    1:1:io.dcloud.common.adapter.ui.fresh.LoadingLayout getFooterLoadingLayout() -> getFooterLoadingLayout
    1:1:io.dcloud.common.adapter.ui.fresh.LoadingLayout getHeaderLoadingLayout() -> getHeaderLoadingLayout
    1:1:android.view.View getRefreshableView() -> getRefreshableView
    1:1:int getScrollYValue() -> getScrollYValue
    1:10:boolean handlePullUpEvent(android.view.MotionEvent) -> handlePullUpEvent
    1:21:void init(android.content.Context) -> init
    1:1:boolean isInterceptTouchEventEnabled() -> isInterceptTouchEventEnabled
    1:1:boolean isPullLoadEnabled() -> isPullLoadEnabled
    1:1:boolean isPullLoading() -> isPullLoading
    1:1:boolean isPullRefreshEnabled() -> isPullRefreshEnabled
    1:1:boolean isPullRefreshing() -> isPullRefreshing
    1:1:boolean isScrollLoadEnabled() -> isScrollLoadEnabled
    1:101:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1:26:void onPullDownRefreshComplete() -> onPullDownRefreshComplete
    1:21:void onPullUpRefreshComplete() -> onPullUpRefreshComplete
    1:13:void onSizeChanged(int,int,int,int) -> onSizeChanged
    1:2:void onStateChanged(io.dcloud.common.adapter.ui.fresh.ILoadingLayout$State,boolean) -> onStateChanged
    1:48:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1:23:void pullFooterLayout(float) -> pullFooterLayout
    1:26:void pullHeaderLayout(float) -> pullHeaderLayout
    1:32:void refreshLoadingViewsSize() -> refreshLoadingViewsSize
    1:5:void refreshRefreshableViewSize(int,int) -> refreshRefreshableViewSize
    1:12:void resetFooterLayout() -> resetFooterLayout
    1:12:void resetHeaderLayout() -> resetHeaderLayout
    1:1:void setAppId(java.lang.String) -> setAppId
    1:1:void setHeaderHeight(int) -> setHeaderHeight
    1:1:void setHeaderPullDownMaxHeight(int) -> setHeaderPullDownMaxHeight
    1:1:void setInterceptTouchEventEnabled(boolean) -> setInterceptTouchEventEnabled
    1:6:void setLastUpdatedLabel(java.lang.CharSequence) -> setLastUpdatedLabel
    1:1:void setOnOnPullUpListener(io.dcloud.common.adapter.ui.fresh.PullToRefreshBase$OnPullUpListener) -> setOnOnPullUpListener
    1:1:void setOnRefreshListener(io.dcloud.common.adapter.ui.fresh.PullToRefreshBase$OnRefreshListener) -> setOnRefreshListener
    1:1:void setOnStateChangeListener(io.dcloud.common.adapter.ui.fresh.PullToRefreshBase$OnStateChangeListener) -> setOnStateChangeListener
    1:2:void setOrientation(int) -> setOrientation
    1:1:void setPullLoadEnabled(boolean) -> setPullLoadEnabled
    1:1:void setPullRefreshEnabled(boolean) -> setPullRefreshEnabled
    1:1:void setRefreshableView(android.view.View) -> setRefreshableView
    1:1:void setScrollBy(int,int) -> setScrollBy
    1:1:void setScrollLoadEnabled(boolean) -> setScrollLoadEnabled
    1:1:void setScrollTo(int,int) -> setScrollTo
    1:1:void smoothScrollTo(int) -> smoothScrollTo
    2:16:void smoothScrollTo(int,long,long) -> smoothScrollTo
    1:20:void startLoading() -> startLoading
    1:20:void startRefreshing() -> startRefreshing
io.dcloud.common.adapter.ui.fresh.PullToRefreshBase$1 -> io.dcloud.common.adapter.ui.fresh.PullToRefreshBase$1:
    1:1:void <init>(io.dcloud.common.adapter.ui.fresh.PullToRefreshBase) -> <init>
    1:2:void onGlobalLayout() -> onGlobalLayout
io.dcloud.common.adapter.ui.fresh.PullToRefreshBase$2 -> io.dcloud.common.adapter.ui.fresh.PullToRefreshBase$2:
    1:1:void <init>(io.dcloud.common.adapter.ui.fresh.PullToRefreshBase) -> <init>
    1:1:void run() -> run
io.dcloud.common.adapter.ui.fresh.PullToRefreshBase$3 -> io.dcloud.common.adapter.ui.fresh.PullToRefreshBase$3:
    1:2:void <init>(io.dcloud.common.adapter.ui.fresh.PullToRefreshBase) -> <init>
    1:9:void run() -> run
io.dcloud.common.adapter.ui.fresh.PullToRefreshBase$4 -> io.dcloud.common.adapter.ui.fresh.PullToRefreshBase$4:
    1:1:void <init>(io.dcloud.common.adapter.ui.fresh.PullToRefreshBase) -> <init>
    1:2:void run() -> run
io.dcloud.common.adapter.ui.fresh.PullToRefreshBase$5 -> io.dcloud.common.adapter.ui.fresh.PullToRefreshBase$5:
    1:1:void <init>(io.dcloud.common.adapter.ui.fresh.PullToRefreshBase) -> <init>
    1:2:void run() -> run
io.dcloud.common.adapter.ui.fresh.PullToRefreshBase$6 -> io.dcloud.common.adapter.ui.fresh.PullToRefreshBase$6:
    1:1:void <init>(io.dcloud.common.adapter.ui.fresh.PullToRefreshBase,boolean) -> <init>
    1:5:void run() -> run
io.dcloud.common.adapter.ui.fresh.PullToRefreshBase$7 -> io.dcloud.common.adapter.ui.fresh.PullToRefreshBase$7:
    1:1:void <init>(io.dcloud.common.adapter.ui.fresh.PullToRefreshBase) -> <init>
    1:1:void run() -> run
io.dcloud.common.adapter.ui.fresh.PullToRefreshBase$8 -> io.dcloud.common.adapter.ui.fresh.PullToRefreshBase$8:
    1:1:void <init>(io.dcloud.common.adapter.ui.fresh.PullToRefreshBase) -> <init>
    1:1:void run() -> run
io.dcloud.common.adapter.ui.fresh.PullToRefreshBase$SmoothScrollRunnable -> io.dcloud.common.adapter.ui.fresh.PullToRefreshBase$SmoothScrollRunnable:
    1:19:void <init>(io.dcloud.common.adapter.ui.fresh.PullToRefreshBase,int,int,long) -> <init>
    1:34:void run() -> run
    1:2:void stop() -> stop
io.dcloud.common.adapter.ui.fresh.PullToRefreshWebView -> io.dcloud.common.adapter.ui.fresh.PullToRefreshWebView:
    1:1:void <init>(android.content.Context) -> <init>
    1:1:boolean isReadyForPullDown() -> isReadyForPullDown
    1:7:boolean isReadyForPullUp() -> isReadyForPullUp
    1:1:void onScrollChanged(int,int,int,int) -> onScrollChanged
io.dcloud.common.adapter.ui.webview.PerWrapper -> io.dcloud.common.adapter.ui.webview.PerWrapper:
    1:7:void <init>(java.lang.Object,io.dcloud.common.adapter.ui.AdaWebview,java.lang.String,java.lang.String,org.json.JSONArray,boolean) -> <init>
    1:2:void confirm(java.lang.String) -> confirm
io.dcloud.common.adapter.ui.webview.SysWebView -> io.dcloud.common.adapter.ui.webview.SysWebView:
    1:919:void <init>(android.content.Context,io.dcloud.common.adapter.ui.AdaWebview) -> <init>
    920:1839:void <init>(android.content.Context,io.dcloud.common.adapter.ui.AdaWebview,io.dcloud.common.DHInterface.IDCloudWebviewClientListener) -> <init>
    1840:2758:void <init>(android.content.Context,io.dcloud.common.adapter.ui.AdaWebview,io.dcloud.common.adapter.ui.webview.OnPageFinishedCallack) -> <init>
    1:17:android.graphics.Bitmap captureWebView(android.webkit.WebView,android.graphics.Rect) -> captureWebView
    1:6:boolean checkApkUrl(java.lang.String,java.lang.String) -> checkApkUrl
    1:47:boolean checkOverrideUrl(org.json.JSONObject,java.lang.String) -> checkOverrideUrl
    1:24:boolean checkWhite(java.lang.String) -> checkWhite
    1:1:void closeWap2AppBlockDialog(boolean) -> closeWap2AppBlockDialog
    1:9:java.lang.String convertRelPath(java.lang.String) -> convertRelPath
    1:16:void destroyWeb() -> destroyWeb
    1:7:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    1:7:boolean doKeyDownAction(int,android.view.KeyEvent) -> doKeyDownAction
    1:3:boolean doKeyUpAction(int,android.view.KeyEvent) -> doKeyUpAction
    1:2:long downloadFile(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,io.dcloud.common.DHInterface.ILoadCallBack) -> downloadFile
    1:16:void evalJSSync(java.lang.String,io.dcloud.common.DHInterface.ICallBack) -> evalJSSync
    1:1:java.lang.String getBaseUrl() -> getBaseUrl
    1:1:int getCacheMode() -> getCacheMode
    1:2:java.lang.String getCookie(java.lang.String) -> getCookie
    1:1:java.lang.String getPageTitle() -> getPageTitle
    1:1:float getScale() -> getScale
    1:1:java.lang.String getStreamAppFlag() -> getStreamAppFlag
    1:1:java.lang.String getUrlStr() -> getUrlStr
    1:1:java.lang.String getUserAgentString() -> getUserAgentString
    1:1:int getWebViewScrollY() -> getWebViewScrollY
    1:149:void init() -> init
    1:6:void initScalable(boolean) -> initScalable
    1:38:void initUserAgent(io.dcloud.common.DHInterface.IApp) -> initUserAgent
    1:8:void invalidate() -> invalidate
    1:16:boolean isChildSpeciaView(float,float) -> isChildSpeciaView
    1:1:boolean isDidTouch() -> isDidTouch
    1:16:boolean isReadyForPullUp(int) -> isReadyForPullUp
    1:1:void listenPageFinishTimeout(java.lang.String) -> listenPageFinishTimeout
    1:21:void loadUrl(java.lang.String) -> loadUrl
    1:3:void onAttachedToWindow() -> onAttachedToWindow
    1:10:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    1:6:void onDetachedFromWindow() -> onDetachedFromWindow
    1:43:void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long) -> onDownloadStart
    1:39:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1:4:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    1:4:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    1:1:void onPageStarted() -> onPageStarted
    1:1:void onPreloadJSContent(java.lang.String) -> onPreloadJSContent
    1:2:void onRefresh(int) -> onRefresh
    1:17:void onScrollChanged(int,int,int,int) -> onScrollChanged
    1:1:void onSizeChanged(int,int,int,int) -> onSizeChanged
    1:12:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1:1:void onUpdatePlusData(java.lang.String) -> onUpdatePlusData
    1:1:void putHeads(java.lang.String,java.util.HashMap) -> putHeads
    1:2:void removeAllCookie() -> removeAllCookie
    1:10:void removeAllViews() -> removeAllViews
    1:2:void removeSessionCookie() -> removeSessionCookie
    1:14:void removeUnSafeJavascriptInterface() -> removeUnSafeJavascriptInterface
    1:1:void setBlockNetworkImage(boolean) -> setBlockNetworkImage
    1:4:void setCookie(java.lang.String,java.lang.String) -> setCookie
    1:1:void setDcloudwebviewclientListener(io.dcloud.common.DHInterface.IDCloudWebviewClientListener) -> setDcloudwebviewclientListener
    1:1:void setDidTouch(boolean) -> setDidTouch
    1:1:void setPageTitle(java.lang.String) -> setPageTitle
    1:1:void setUrlStr(java.lang.String) -> setUrlStr
    1:1:void setUserAgentString(java.lang.String) -> setUserAgentString
    1:10:void setWebViewCacheMode(java.lang.String) -> setWebViewCacheMode
    1:2:void setWebViewClient(android.webkit.WebViewClient) -> setWebViewClient
    1:19:void setWebViewData() -> setWebViewData
    1:6:android.view.ActionMode startActionMode(android.view.ActionMode$Callback) -> startActionMode
    1:9:java.lang.String toString() -> toString
    1:6:void webReload(boolean) -> webReload
io.dcloud.common.adapter.ui.webview.SysWebView$1 -> io.dcloud.common.adapter.ui.webview.SysWebView$1:
    1:1:void <init>(io.dcloud.common.adapter.ui.webview.SysWebView,io.dcloud.common.DHInterface.ICallBack) -> <init>
    1:1:void onReceiveValue(java.lang.Object) -> onReceiveValue
    2:3:void onReceiveValue(java.lang.String) -> onReceiveValue
io.dcloud.common.adapter.ui.webview.SysWebView$2 -> io.dcloud.common.adapter.ui.webview.SysWebView$2:
    1:1:void <init>(io.dcloud.common.adapter.ui.webview.SysWebView) -> <init>
    1:5:boolean onLongClick(android.view.View) -> onLongClick
io.dcloud.common.adapter.ui.webview.SysWebView$3 -> io.dcloud.common.adapter.ui.webview.SysWebView$3:
    1:1:void <init>(io.dcloud.common.adapter.ui.webview.SysWebView,android.content.Context,java.lang.String,java.lang.String,io.dcloud.common.DHInterface.ILoadCallBack) -> <init>
    1:74:java.lang.Object onCallBack(int,android.content.Context,java.lang.Object) -> onCallBack
io.dcloud.common.adapter.ui.webview.SysWebView$4 -> io.dcloud.common.adapter.ui.webview.SysWebView$4:
    1:1:void <init>(io.dcloud.common.adapter.ui.webview.SysWebView,java.lang.String,java.lang.String,java.lang.String) -> <init>
    1:1:void onClick(android.view.View) -> onClick
io.dcloud.common.adapter.ui.webview.SysWebView$BorderDrawable -> io.dcloud.common.adapter.ui.webview.SysWebView$BorderDrawable:
    1:6:void <init>(int,int) -> <init>
    1:4:void draw(android.graphics.Canvas) -> draw
    1:1:int getOpacity() -> getOpacity
    1:1:void setAlpha(int) -> setAlpha
    1:1:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
io.dcloud.common.adapter.ui.webview.SysWebView$CustomizedSelectActionModeCallback -> io.dcloud.common.adapter.ui.webview.SysWebView$CustomizedSelectActionModeCallback:
    1:2:void <init>(io.dcloud.common.adapter.ui.webview.SysWebView,android.view.ActionMode$Callback) -> <init>
    1:1:boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    1:7:boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    1:1:void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
    1:1:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
io.dcloud.common.adapter.ui.webview.WebJsEvent -> io.dcloud.common.adapter.ui.webview.WebJsEvent:
    1:1:void <clinit>() -> <clinit>
    1:848:void <init>(io.dcloud.common.adapter.ui.AdaWebview) -> <init>
    1:1:void access$000(io.dcloud.common.adapter.ui.webview.WebJsEvent,android.webkit.ValueCallback,android.webkit.ValueCallback,java.lang.String,java.lang.String,android.webkit.WebChromeClient$FileChooserParams) -> access$000
    1:1:void destroy() -> destroy
    1:1:android.graphics.Bitmap getDefaultVideoPoster() -> getDefaultVideoPoster
    1:27:void handleConsoleMessage(android.webkit.ConsoleMessage) -> handleConsoleMessage
    1:3:void handleMessage(android.webkit.JsPromptResult,io.dcloud.common.adapter.ui.AdaWebview,java.lang.String,java.lang.String,java.lang.String,boolean) -> handleMessage
    1:48:void hideCustomView() -> hideCustomView
    1:8:void initUniLoadUrl() -> initUniLoadUrl
    1:1:boolean isCallbackId(java.lang.String) -> isCallbackId
    1:4:boolean isFilterConsoleMessage(java.lang.String) -> isFilterConsoleMessage
    1:1:boolean onConsoleMessage(android.webkit.ConsoleMessage) -> onConsoleMessage
    1:2:void onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage$QuotaUpdater) -> onExceededDatabaseQuota
    1:2:void onGeolocationPermissionsHidePrompt() -> onGeolocationPermissionsHidePrompt
    1:7:void onGeolocationPermissionsShowPrompt(java.lang.String,android.webkit.GeolocationPermissions$Callback) -> onGeolocationPermissionsShowPrompt
    1:1:void onHideCustomView() -> onHideCustomView
    1:29:boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsAlert
    1:1:boolean onJsBeforeUnload(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsBeforeUnload
    1:46:boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsConfirm
    1:91:boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> onJsPrompt
    1:1:void onPermissionRequest(android.webkit.PermissionRequest) -> onPermissionRequest
    1:10:void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
    1:3:void onReachedMaxAppCacheSize(long,long,android.webkit.WebStorage$QuotaUpdater) -> onReachedMaxAppCacheSize
    1:12:void onReceivedTitle(android.webkit.WebView,java.lang.String) -> onReceivedTitle
    1:2:void onReceivedTouchIconUrl(android.webkit.WebView,java.lang.String,boolean) -> onReceivedTouchIconUrl
    1:2:void onRequestFocus(android.webkit.WebView) -> onRequestFocus
    1:1:void onShowCustomView(android.view.View,android.webkit.WebChromeClient$CustomViewCallback) -> onShowCustomView
    1:1:boolean onShowFileChooser(android.webkit.WebView,android.webkit.ValueCallback,android.webkit.WebChromeClient$FileChooserParams) -> onShowFileChooser
    1:1:void openFileChooser(android.webkit.ValueCallback) -> openFileChooser
    2:2:void openFileChooser(android.webkit.ValueCallback,java.lang.String) -> openFileChooser
    3:3:void openFileChooser(android.webkit.ValueCallback,java.lang.String,java.lang.String) -> openFileChooser
    1:1:void openFileChooserLogic(android.webkit.ValueCallback,java.lang.String,java.lang.String) -> openFileChooserLogic
    2:6:void openFileChooserLogic(android.webkit.ValueCallback,android.webkit.ValueCallback,java.lang.String,java.lang.String,android.webkit.WebChromeClient$FileChooserParams) -> openFileChooserLogic
    1:3:void releaseDefaultVideoPoster() -> releaseDefaultVideoPoster
    1:4:void setStatusBarVisibility(android.app.Activity,boolean) -> setStatusBarVisibility
    1:108:void showCustomView(android.view.View,android.webkit.WebChromeClient$CustomViewCallback) -> showCustomView
    1:117:void showOpenFileChooser(android.webkit.ValueCallback,android.webkit.ValueCallback,java.lang.String,java.lang.String,android.webkit.WebChromeClient$FileChooserParams) -> showOpenFileChooser
    1:51:void updateTitleNViewTitle(java.lang.String) -> updateTitleNViewTitle
io.dcloud.common.adapter.ui.webview.WebJsEvent$1 -> io.dcloud.common.adapter.ui.webview.WebJsEvent$1:
    1:1:void <init>(io.dcloud.common.adapter.ui.webview.WebJsEvent,android.widget.EditText,android.webkit.JsPromptResult) -> <init>
    1:2:void onClick(android.content.DialogInterface,int) -> onClick
io.dcloud.common.adapter.ui.webview.WebJsEvent$10 -> io.dcloud.common.adapter.ui.webview.WebJsEvent$10:
    1:1:void <init>(io.dcloud.common.adapter.ui.webview.WebJsEvent) -> <init>
    1:17:android.net.Uri getUri(android.net.Uri) -> getUri
    1:53:boolean onExecute(io.dcloud.common.DHInterface.ISysEventListener$SysEventType,java.lang.Object) -> onExecute
io.dcloud.common.adapter.ui.webview.WebJsEvent$11 -> io.dcloud.common.adapter.ui.webview.WebJsEvent$11:
    1:1:void <init>(io.dcloud.common.adapter.ui.webview.WebJsEvent) -> <init>
    1:4:void onCancel(android.content.DialogInterface) -> onCancel
io.dcloud.common.adapter.ui.webview.WebJsEvent$12 -> io.dcloud.common.adapter.ui.webview.WebJsEvent$12:
    1:1:void <init>(io.dcloud.common.adapter.ui.webview.WebJsEvent,io.dcloud.common.DHInterface.IApp,android.webkit.GeolocationPermissions$Callback,java.lang.String) -> <init>
    1:1:void onDenied(java.lang.String) -> onDenied
    1:1:void onGranted(java.lang.String) -> onGranted
io.dcloud.common.adapter.ui.webview.WebJsEvent$13 -> io.dcloud.common.adapter.ui.webview.WebJsEvent$13:
    1:1:void <init>(io.dcloud.common.adapter.ui.webview.WebJsEvent) -> <init>
    1:6:boolean onExecute(io.dcloud.common.DHInterface.ISysEventListener$SysEventType,java.lang.Object) -> onExecute
io.dcloud.common.adapter.ui.webview.WebJsEvent$2 -> io.dcloud.common.adapter.ui.webview.WebJsEvent$2:
    1:1:void <init>(io.dcloud.common.adapter.ui.webview.WebJsEvent,android.webkit.JsPromptResult) -> <init>
    1:1:void onClick(android.content.DialogInterface,int) -> onClick
io.dcloud.common.adapter.ui.webview.WebJsEvent$3 -> io.dcloud.common.adapter.ui.webview.WebJsEvent$3:
    1:1:void <init>(io.dcloud.common.adapter.ui.webview.WebJsEvent,android.app.AlertDialog,android.webkit.JsPromptResult) -> <init>
    1:4:boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
io.dcloud.common.adapter.ui.webview.WebJsEvent$4 -> io.dcloud.common.adapter.ui.webview.WebJsEvent$4:
    1:1:void <init>(io.dcloud.common.adapter.ui.webview.WebJsEvent,android.webkit.JsResult,android.app.AlertDialog) -> <init>
    1:4:boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
io.dcloud.common.adapter.ui.webview.WebJsEvent$5 -> io.dcloud.common.adapter.ui.webview.WebJsEvent$5:
    1:1:void <init>(io.dcloud.common.adapter.ui.webview.WebJsEvent,android.webkit.JsResult) -> <init>
    1:1:void onClick(android.content.DialogInterface,int) -> onClick
io.dcloud.common.adapter.ui.webview.WebJsEvent$6 -> io.dcloud.common.adapter.ui.webview.WebJsEvent$6:
    1:1:void <init>(io.dcloud.common.adapter.ui.webview.WebJsEvent,android.webkit.JsResult) -> <init>
    1:1:void onClick(android.content.DialogInterface,int) -> onClick
io.dcloud.common.adapter.ui.webview.WebJsEvent$7 -> io.dcloud.common.adapter.ui.webview.WebJsEvent$7:
    1:1:void <init>(io.dcloud.common.adapter.ui.webview.WebJsEvent,android.webkit.JsResult) -> <init>
    1:1:void onCancel(android.content.DialogInterface) -> onCancel
io.dcloud.common.adapter.ui.webview.WebJsEvent$8 -> io.dcloud.common.adapter.ui.webview.WebJsEvent$8:
    1:1:void <init>(io.dcloud.common.adapter.ui.webview.WebJsEvent,android.webkit.JsResult,android.app.AlertDialog) -> <init>
    1:4:boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
io.dcloud.common.adapter.ui.webview.WebJsEvent$9 -> io.dcloud.common.adapter.ui.webview.WebJsEvent$9:
    1:1:void <init>(io.dcloud.common.adapter.ui.webview.WebJsEvent,android.webkit.ValueCallback,android.webkit.ValueCallback,java.lang.String,java.lang.String,android.webkit.WebChromeClient$FileChooserParams) -> <init>
    1:1:void onGranted(java.lang.String) -> onGranted
io.dcloud.common.adapter.ui.webview.WebJsEvent$DialogListener -> io.dcloud.common.adapter.ui.webview.WebJsEvent$DialogListener:
    1:2:void <init>(io.dcloud.common.adapter.ui.webview.WebJsEvent) -> <init>
    1:1:void onClick(android.content.DialogInterface,int) -> onClick
io.dcloud.common.adapter.ui.webview.WebLoadEvent -> io.dcloud.common.adapter.ui.webview.WebLoadEvent:
    1:951:void <init>(io.dcloud.common.adapter.ui.AdaWebview) -> <init>
    1:1:void access$000(io.dcloud.common.adapter.ui.webview.WebLoadEvent,android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.Object[]) -> access$000
    1:1:boolean access$100(io.dcloud.common.adapter.ui.webview.WebLoadEvent,android.webkit.WebView,java.lang.String,java.lang.String) -> access$100
    1:1:void access$200(io.dcloud.common.adapter.ui.webview.WebLoadEvent,android.webkit.WebView,java.lang.String,java.lang.String) -> access$200
    1:2:boolean checkCssFile(java.lang.String) -> checkCssFile
    1:2:boolean checkJsFile(java.lang.String) -> checkJsFile
    1:38:android.webkit.WebResourceResponse checkWebResourceResponseRedirect(android.webkit.WebView,java.lang.String) -> checkWebResourceResponseRedirect
    1:7:void closeWap2AppBlockDialog(boolean) -> closeWap2AppBlockDialog
    1:24:void completeLoadJs(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.Object[]) -> completeLoadJs
    1:5:void destroy() -> destroy
    1:1:boolean directPageIsLaunchPage(io.dcloud.common.DHInterface.IApp) -> directPageIsLaunchPage
    1:2:void doUpdateVisitedHistory(android.webkit.WebView,java.lang.String,boolean) -> doUpdateVisitedHistory
    1:16:android.webkit.WebResourceResponse downloadResponse(android.webkit.WebView,java.lang.String) -> downloadResponse
    17:78:android.webkit.WebResourceResponse downloadResponse(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.WebResourceResponse,java.io.File,boolean) -> downloadResponse
    1:122:android.webkit.WebResourceResponse downloadResponseInjection(android.webkit.WebResourceResponse,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> downloadResponseInjection
    1:7:java.lang.String getCacheLocalFilePath(java.lang.String,java.lang.String) -> getCacheLocalFilePath
    1:38:java.lang.String getErrorPage() -> getErrorPage
    1:6:java.lang.String getMimeType(java.lang.String) -> getMimeType
    1:7:java.lang.String getUrlByFilePath(java.lang.String) -> getUrlByFilePath
    1:63:io.dcloud.common.adapter.ui.webview.WebLoadEvent$CatchFile getUrlFile(java.lang.String,java.lang.String) -> getUrlFile
    1:6:android.webkit.WebResourceResponse handleDecode(java.lang.String,android.webkit.WebResourceResponse) -> handleDecode
    1:1:void hideLoading() -> hideLoading
    1:22:void injectScript(android.webkit.WebView,java.lang.String,java.lang.String) -> injectScript
    1:17:void listenPageFinishTimeout(android.webkit.WebView,java.lang.String,java.lang.String) -> listenPageFinishTimeout
    1:18:void listenPlusInjectTimeout(android.webkit.WebView,java.lang.String,java.lang.String) -> listenPlusInjectTimeout
    1:3:void loadAllJSContent(android.webkit.WebView,java.lang.String,java.lang.String) -> loadAllJSContent
    1:3:void onExecuteEvalJSStatck(android.webkit.WebView,java.lang.String,java.lang.String) -> onExecuteEvalJSStatck
    1:6:void onLoadCssContent() -> onLoadCssContent
    1:23:boolean onLoadPlusJSContent(android.webkit.WebView,java.lang.String,java.lang.String) -> onLoadPlusJSContent
    1:20:void onLoadResource(android.webkit.WebView,java.lang.String) -> onLoadResource
    1:98:void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    1:81:void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    1:6:void onPlusreadyEvent(android.webkit.WebView,java.lang.String,java.lang.String) -> onPlusreadyEvent
    1:12:void onPreloadJSContent(android.webkit.WebView,java.lang.String,java.lang.String) -> onPreloadJSContent
    1:113:void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    1:45:void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
    1:10:void onUnhandledKeyEvent(android.webkit.WebView,android.view.KeyEvent) -> onUnhandledKeyEvent
    1:3:void onUpdatePlusData(android.webkit.WebView,java.lang.String,java.lang.String) -> onUpdatePlusData
    1:17:void printOpenLog(android.webkit.WebView,java.lang.String) -> printOpenLog
    1:28:void printResourceLog(android.webkit.WebView,io.dcloud.common.DHInterface.IApp,java.lang.String,java.lang.String) -> printResourceLog
    1:1:void reset() -> reset
    1:30:void sendStatistics(java.lang.String,android.content.Context,java.lang.String,java.lang.String,io.dcloud.common.DHInterface.IApp) -> sendStatistics
    1:1:void setDcloudwebviewclientListener(io.dcloud.common.DHInterface.IDCloudWebviewClientListener) -> setDcloudwebviewclientListener
    1:1:void setPageFinishedCallack(io.dcloud.common.adapter.ui.webview.OnPageFinishedCallack) -> setPageFinishedCallack
    1:205:android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,java.lang.String) -> shouldInterceptRequest
    1:99:boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    1:1:boolean shouldRuntimeHandle(java.lang.String) -> shouldRuntimeHandle
    1:9:void showLoading() -> showLoading
    1:1:void startTryLoadAllJSContent(android.webkit.WebView,java.lang.String,java.lang.String) -> startTryLoadAllJSContent
io.dcloud.common.adapter.ui.webview.WebLoadEvent$1 -> io.dcloud.common.adapter.ui.webview.WebLoadEvent$1:
    1:1:void <init>(io.dcloud.common.adapter.ui.webview.WebLoadEvent,android.webkit.WebView,java.lang.String) -> <init>
    1:3:void execute(java.lang.Object) -> execute
io.dcloud.common.adapter.ui.webview.WebLoadEvent$10 -> io.dcloud.common.adapter.ui.webview.WebLoadEvent$10:
    1:1:void <init>(io.dcloud.common.adapter.ui.webview.WebLoadEvent,android.webkit.WebView,java.lang.String,java.lang.String) -> <init>
    1:5:void run() -> run
io.dcloud.common.adapter.ui.webview.WebLoadEvent$11 -> io.dcloud.common.adapter.ui.webview.WebLoadEvent$11:
    1:1:void <init>(io.dcloud.common.adapter.ui.webview.WebLoadEvent) -> <init>
    1:2:void run() -> run
io.dcloud.common.adapter.ui.webview.WebLoadEvent$12 -> io.dcloud.common.adapter.ui.webview.WebLoadEvent$12:
    1:1:void <init>(io.dcloud.common.adapter.ui.webview.WebLoadEvent) -> <init>
    1:9:void run() -> run
io.dcloud.common.adapter.ui.webview.WebLoadEvent$2 -> io.dcloud.common.adapter.ui.webview.WebLoadEvent$2:
    1:1:void <init>(io.dcloud.common.adapter.ui.webview.WebLoadEvent,android.app.AlertDialog,android.net.http.SslError,android.webkit.SslErrorHandler) -> <init>
    1:7:void onClick(android.content.DialogInterface,int) -> onClick
io.dcloud.common.adapter.ui.webview.WebLoadEvent$3 -> io.dcloud.common.adapter.ui.webview.WebLoadEvent$3:
    1:1:void <init>(io.dcloud.common.adapter.ui.webview.WebLoadEvent,java.lang.String,android.app.AlertDialog) -> <init>
    1:12:void onClick(android.content.DialogInterface,int) -> onClick
io.dcloud.common.adapter.ui.webview.WebLoadEvent$4 -> io.dcloud.common.adapter.ui.webview.WebLoadEvent$4:
    1:1:void <init>(io.dcloud.common.adapter.ui.webview.WebLoadEvent,android.app.AlertDialog) -> <init>
    1:4:boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
io.dcloud.common.adapter.ui.webview.WebLoadEvent$5 -> io.dcloud.common.adapter.ui.webview.WebLoadEvent$5:
    1:1:void <init>(io.dcloud.common.adapter.ui.webview.WebLoadEvent,java.lang.String,io.dcloud.common.DHInterface.IApp) -> <init>
    1:10:boolean onExecute(io.dcloud.common.DHInterface.ISysEventListener$SysEventType,java.lang.Object) -> onExecute
io.dcloud.common.adapter.ui.webview.WebLoadEvent$5$1 -> io.dcloud.common.adapter.ui.webview.WebLoadEvent$5$1:
    1:1:void <init>(io.dcloud.common.adapter.ui.webview.WebLoadEvent$5) -> <init>
    1:3:void run() -> run
io.dcloud.common.adapter.ui.webview.WebLoadEvent$6 -> io.dcloud.common.adapter.ui.webview.WebLoadEvent$6:
    1:1:void <init>(io.dcloud.common.adapter.ui.webview.WebLoadEvent,java.lang.String,android.webkit.WebView,java.lang.String) -> <init>
    1:4:void run() -> run
io.dcloud.common.adapter.ui.webview.WebLoadEvent$7 -> io.dcloud.common.adapter.ui.webview.WebLoadEvent$7:
    1:1:void <init>(io.dcloud.common.adapter.ui.webview.WebLoadEvent,java.lang.String,android.webkit.WebView,java.lang.String) -> <init>
    1:5:void run() -> run
io.dcloud.common.adapter.ui.webview.WebLoadEvent$8 -> io.dcloud.common.adapter.ui.webview.WebLoadEvent$8:
    1:1:void <init>(io.dcloud.common.adapter.ui.webview.WebLoadEvent,java.lang.String,android.webkit.WebView,java.lang.String) -> <init>
    1:4:void run() -> run
io.dcloud.common.adapter.ui.webview.WebLoadEvent$9 -> io.dcloud.common.adapter.ui.webview.WebLoadEvent$9:
    1:1:void <init>(io.dcloud.common.adapter.ui.webview.WebLoadEvent,java.lang.String,android.webkit.WebView,java.lang.String,java.lang.String[],java.lang.String,java.lang.Object[],java.lang.ref.SoftReference) -> <init>
    1:14:java.lang.String callback(org.json.JSONArray) -> callback
io.dcloud.common.adapter.ui.webview.WebLoadEvent$CatchFile -> io.dcloud.common.adapter.ui.webview.WebLoadEvent$CatchFile:
    1:5:void <init>(io.dcloud.common.adapter.ui.webview.WebLoadEvent) -> <init>
io.dcloud.common.adapter.ui.webview.WebLoadEvent$TitleNViewProgressStop -> io.dcloud.common.adapter.ui.webview.WebLoadEvent$TitleNViewProgressStop:
    1:2:void <init>(io.dcloud.common.adapter.ui.AdaWebview) -> <init>
    1:13:void run() -> run
io.dcloud.common.adapter.ui.webview.WebResUtil -> io.dcloud.common.adapter.ui.webview.WebResUtil:
    1:1:void <init>() -> <init>
    1:1:java.io.InputStream getEncryptionInputStream(java.lang.String,io.dcloud.common.DHInterface.IApp) -> getEncryptionInputStream
    1:6:java.lang.String getHBuilderPrintUrl(java.lang.String) -> getHBuilderPrintUrl
    1:5:java.lang.String getOriginalUrl(java.lang.String) -> getOriginalUrl
    1:3:java.lang.String getRelPath(java.lang.String,io.dcloud.common.DHInterface.IApp) -> getRelPath
    1:1:java.lang.String handleWap2appTemplateFilePath(java.lang.String) -> handleWap2appTemplateFilePath
    1:1:boolean isWap2appTemplateFile(io.dcloud.common.DHInterface.IApp,java.lang.String) -> isWap2appTemplateFile
    1:1:java.lang.Object opAdData(android.content.Context,java.lang.String,java.lang.String,java.lang.Object) -> opAdData
io.dcloud.common.adapter.ui.webview.WebViewFactory -> io.dcloud.common.adapter.ui.webview.WebViewFactory:
    1:151:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:1:boolean access$002(boolean) -> access$002
    1:1:io.dcloud.common.DHInterface.ICallBack access$100() -> access$100
    1:1:io.dcloud.common.DHInterface.ICallBack access$102(io.dcloud.common.DHInterface.ICallBack) -> access$102
    1:9:java.lang.String getDefWebViewUA(android.content.Context) -> getDefWebViewUA
    1:1:io.dcloud.common.DHInterface.IWebViewFactory getOtherWebViewFactory() -> getOtherWebViewFactory
    1:6:io.dcloud.common.adapter.ui.webview.DCWebView getWebView(android.app.Activity,io.dcloud.common.adapter.ui.AdaWebview) -> getWebView
    7:12:io.dcloud.common.adapter.ui.webview.DCWebView getWebView(android.app.Activity,io.dcloud.common.adapter.ui.AdaWebview,io.dcloud.common.DHInterface.IDCloudWebviewClientListener) -> getWebView
    13:18:io.dcloud.common.adapter.ui.webview.DCWebView getWebView(android.app.Activity,io.dcloud.common.adapter.ui.AdaWebview,io.dcloud.common.adapter.ui.webview.OnPageFinishedCallack) -> getWebView
    1:3:void initOther(boolean) -> initOther
    1:1:boolean isIsLoadOtherTimeOut() -> isIsLoadOtherTimeOut
    1:1:boolean isIsOtherInitSuccess() -> isIsOtherInitSuccess
    1:1:boolean isOther() -> isOther
    1:1:boolean isOtherInitialised() -> isOtherInitialised
    1:1:void resetSysWebViewState() -> resetSysWebViewState
    1:20:void setFileAccess(java.lang.Object,io.dcloud.common.DHInterface.IApp,boolean) -> setFileAccess
    21:21:void setFileAccess(java.lang.Object,boolean) -> setFileAccess
    1:2:void setOtherCallBack(io.dcloud.common.DHInterface.ICallBack) -> setOtherCallBack
    1:8:void setOtherState(boolean,io.dcloud.common.DHInterface.IWebViewFactory) -> setOtherState
    1:1:void setSslHandlerState(android.os.Handler,int) -> setSslHandlerState
io.dcloud.common.adapter.ui.webview.WebViewFactory$1 -> io.dcloud.common.adapter.ui.webview.WebViewFactory$1:
    1:1:void <init>() -> <init>
    1:4:void run() -> run
io.dcloud.common.adapter.util.AndroidResources -> io.dcloud.common.adapter.util.AndroidResources:
    1:1:void <init>() -> <init>
    1:5:void clearData() -> clearData
    1:2:int getIdentifier(java.lang.String,java.lang.String) -> getIdentifier
    1:4:int getIdentifierFromApk(android.content.Context,java.lang.String,java.lang.String) -> getIdentifierFromApk
    1:11:java.lang.String getMetaValue(java.lang.String) -> getMetaValue
    1:2:java.lang.String getString(int) -> getString
    1:15:void initAndroidResources(android.content.Context) -> initAndroidResources
    1:10:void setMetaValue(java.lang.String,java.lang.String) -> setMetaValue
io.dcloud.common.adapter.util.AnimOptions -> io.dcloud.common.adapter.util.AnimOptions:
    1:16:void <clinit>() -> <clinit>
    1:65:void <init>() -> <init>
    1:73:io.dcloud.nineoldandroids.animation.Animator closeOrHideAnimator(io.dcloud.common.adapter.ui.AdaFrameItem,io.dcloud.common.adapter.util.ViewOptions,io.dcloud.common.adapter.util.ViewOptions,io.dcloud.common.adapter.util.ViewOptions) -> closeOrHideAnimator
    1:28:io.dcloud.nineoldandroids.animation.Animator createAnimation() -> createAnimation
    1:3:java.lang.String getCloseAnimType(java.lang.String) -> getCloseAnimType
    1:1:boolean isUseBackground() -> isUseBackground
    1:5:io.dcloud.nineoldandroids.animation.ObjectAnimator ofFloat(io.dcloud.nineoldandroids.animation.AnimatorSet,java.lang.Object,java.lang.String,float[]) -> ofFloat
    1:5:io.dcloud.nineoldandroids.animation.ObjectAnimator ofInt(io.dcloud.nineoldandroids.animation.AnimatorSet,java.lang.Object,java.lang.String,int[]) -> ofInt
    1:6:void parseTransition(org.json.JSONObject) -> parseTransition
    1:7:void setCloseAnimType(java.lang.String) -> setCloseAnimType
    1:36:io.dcloud.nineoldandroids.animation.Animator setStyleOptionAnimator(io.dcloud.common.adapter.ui.AdaFrameItem,io.dcloud.common.adapter.util.ViewOptions,io.dcloud.common.adapter.util.ViewOptions,io.dcloud.common.adapter.util.ViewOptions) -> setStyleOptionAnimator
    1:22:void setTimingFunction(io.dcloud.nineoldandroids.animation.Animator) -> setTimingFunction
    1:77:io.dcloud.nineoldandroids.animation.AnimatorSet showOrHideShowAnimator(io.dcloud.common.adapter.ui.AdaFrameItem,io.dcloud.common.adapter.util.ViewOptions,io.dcloud.common.adapter.util.ViewOptions,io.dcloud.common.adapter.util.ViewOptions) -> showOrHideShowAnimator
io.dcloud.common.adapter.util.AnimOptions$AnimMode -> io.dcloud.common.adapter.util.AnimOptions$AnimMode:
    1:2:void <clinit>() -> <clinit>
    1:1:void <init>(java.lang.String,int) -> <init>
    1:1:io.dcloud.common.adapter.util.AnimOptions$AnimMode valueOf(java.lang.String) -> valueOf
    1:1:io.dcloud.common.adapter.util.AnimOptions$AnimMode[] values() -> values
io.dcloud.common.adapter.util.AsyncTaskHandler -> io.dcloud.common.adapter.util.AsyncTaskHandler:
    1:1:void <init>() -> <init>
    1:1:void executeAsyncTask(io.dcloud.common.adapter.util.AsyncTaskHandler$IAsyncTaskListener,java.lang.String[]) -> executeAsyncTask
    1:1:void executeThreadTask(io.dcloud.common.adapter.util.AsyncTaskHandler$IAsyncTaskListener) -> executeThreadTask
io.dcloud.common.adapter.util.AsyncTaskHandler$1 -> io.dcloud.common.adapter.util.AsyncTaskHandler$1:
    1:1:void <init>(io.dcloud.common.adapter.util.AsyncTaskHandler$IAsyncTaskListener) -> <init>
    1:4:void run() -> run
io.dcloud.common.adapter.util.AsyncTaskHandler$1$1 -> io.dcloud.common.adapter.util.AsyncTaskHandler$1$1:
    1:1:void <init>(io.dcloud.common.adapter.util.AsyncTaskHandler$1,java.lang.Object) -> <init>
    1:1:void run() -> run
io.dcloud.common.adapter.util.AsyncTaskHandler$MyAsyncTask -> io.dcloud.common.adapter.util.AsyncTaskHandler$MyAsyncTask:
    1:4:void <init>(io.dcloud.common.adapter.util.AsyncTaskHandler$IAsyncTaskListener) -> <init>
    1:1:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    2:2:java.lang.Object doInBackground(java.lang.String[][]) -> doInBackground
    1:1:void onCancelled() -> onCancelled
    1:2:void onPostExecute(java.lang.Object) -> onPostExecute
    1:2:void onPreExecute() -> onPreExecute
io.dcloud.common.adapter.util.ByteUtil -> io.dcloud.common.adapter.util.ByteUtil:
    1:1:void <init>() -> <init>
    1:2:float bytesToFloat(byte[]) -> bytesToFloat
    1:2:long bytesToLong(byte[]) -> bytesToLong
    1:1:byte[] floatToBytes(float) -> floatToBytes
    1:1:byte[] longToBytes(long) -> longToBytes
    1:1:byte[] toBytes(int) -> toBytes
    1:1:int toInt(byte[]) -> toInt
io.dcloud.common.adapter.util.CanvasHelper -> io.dcloud.common.adapter.util.CanvasHelper:
    1:1:void <init>() -> <init>
    1:3:void clearData() -> clearData
    1:1:int dip2px(android.content.Context,float) -> dip2px
    1:4:void drawClipBitmap(android.graphics.Canvas,android.graphics.Bitmap,android.graphics.Paint,int,int,int,int,int,int) -> drawClipBitmap
    1:62:void drawNinePatchs(android.graphics.Canvas,android.graphics.Bitmap,int[],int,int,int,int) -> drawNinePatchs
    1:24:void drawString(android.graphics.Canvas,java.lang.String,int,int,int,android.graphics.Paint) -> drawString
    1:5:android.graphics.Bitmap getBitmap(java.lang.String) -> getBitmap
    1:8:android.graphics.drawable.Drawable getDrawable() -> getDrawable
    9:11:android.graphics.drawable.Drawable getDrawable(android.content.Context,java.lang.String) -> getDrawable
    12:14:android.graphics.drawable.Drawable getDrawable(java.lang.String) -> getDrawable
    1:2:int getFontHeight(android.graphics.Paint) -> getFontHeight
    1:1:float getViablePx(int) -> getViablePx
    1:1:int px2dip(android.content.Context,float) -> px2dip
io.dcloud.common.adapter.util.ContentUriUtil -> io.dcloud.common.adapter.util.ContentUriUtil:
    1:1:void <init>() -> <init>
    1:10:java.lang.String getDataColumn(android.content.Context,android.net.Uri,java.lang.String,java.lang.String[]) -> getDataColumn
    1:39:java.lang.String getImageAbsolutePath(android.content.Context,android.net.Uri) -> getImageAbsolutePath
    1:1:boolean isDownloadsDocument(android.net.Uri) -> isDownloadsDocument
    1:1:boolean isExternalStorageDocument(android.net.Uri) -> isExternalStorageDocument
    1:1:boolean isGooglePhotosUri(android.net.Uri) -> isGooglePhotosUri
    1:1:boolean isMediaDocument(android.net.Uri) -> isMediaDocument
io.dcloud.common.adapter.util.CryptoProvider -> io.dcloud.common.adapter.util.CryptoProvider:
    1:3:void <init>() -> <init>
io.dcloud.common.adapter.util.DCOKDns -> io.dcloud.common.adapter.util.DCOKDns:
    1:1:void <init>() -> <init>
    1:15:java.util.List lookup(java.lang.String) -> lookup
io.dcloud.common.adapter.util.DCloudTrustManager -> io.dcloud.common.adapter.util.DCloudTrustManager:
    1:1:void <init>() -> <init>
    1:1:java.security.SecureRandom createSecureRandom() -> createSecureRandom
    1:4:org.apache.http.conn.ssl.X509HostnameVerifier getHostnameVerifier(boolean) -> getHostnameVerifier
    1:1:javax.net.ssl.SSLSocketFactory getSSLSocketFactory() -> getSSLSocketFactory
    2:16:javax.net.ssl.SSLSocketFactory getSSLSocketFactory(java.lang.String) -> getSSLSocketFactory
io.dcloud.common.adapter.util.DeviceInfo -> io.dcloud.common.adapter.util.DeviceInfo:
    1:633:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:13:boolean checkCoverLoadApp() -> checkCoverLoadApp
    1:10:void closeHardwareAccelerated(android.app.Activity,int,java.lang.Object) -> closeHardwareAccelerated
    1:6:long getAvailMemory() -> getAvailMemory
    1:4:java.lang.String getBuildValue(java.lang.String) -> getBuildValue
    1:1:java.lang.String getCurrentAPN() -> getCurrentAPN
    1:3:int getDeivceSuitablePixel(android.app.Activity,int) -> getDeivceSuitablePixel
    1:13:java.lang.String getDevicestatus_js(io.dcloud.common.DHInterface.IApp) -> getDevicestatus_js
    1:5:java.lang.String getMac(android.content.Context) -> getMac
    1:62:java.lang.String getNetWorkType() -> getNetWorkType
    1:21:int getNumCores() -> getNumCores
    1:18:int getStatusHeight(android.content.Context) -> getStatusHeight
    1:20:long getTotalMemory() -> getTotalMemory
    1:3:java.lang.String getUpdateIMSI() -> getUpdateIMSI
    1:7:void hideIME(android.view.View) -> hideIME
    1:21:void init(android.content.Context) -> init
    1:22:void initAppDir(android.content.Context) -> initAppDir
    1:1:void initBaseFsRootPath() -> initBaseFsRootPath
    1:25:void initGsmCdmaCell() -> initGsmCdmaCell
    1:43:void initPath(android.content.Context) -> initPath
    1:1:java.lang.String intToIp(int) -> intToIp
    1:1:boolean isOMS() -> isOMS
    1:2:boolean isSDcardExists() -> isSDcardExists
    1:5:boolean isStreamMode() -> isStreamMode
    1:12:void openHardwareAccelerated(android.app.Activity,int,java.lang.Object) -> openHardwareAccelerated
    1:14:void showIME(android.view.View) -> showIME
    1:1:boolean startsWithSdcard(java.lang.String) -> startsWithSdcard
    1:1:void updateIMEI() -> updateIMEI
    1:10:void updatePath() -> updatePath
    1:6:void updateStatusBarHeight(android.app.Activity) -> updateStatusBarHeight
io.dcloud.common.adapter.util.DeviceInfo$1 -> io.dcloud.common.adapter.util.DeviceInfo$1:
    1:1:void <init>(android.view.View) -> <init>
    1:3:void run() -> run
io.dcloud.common.adapter.util.DeviceInfo$1CpuFilter -> io.dcloud.common.adapter.util.DeviceInfo$1CpuFilter:
    1:1:void <init>() -> <init>
    1:1:boolean accept(java.io.File) -> accept
io.dcloud.common.adapter.util.DeviceInfo$2 -> io.dcloud.common.adapter.util.DeviceInfo$2:
    1:1:void <init>() -> <init>
    1:3:void run() -> run
io.dcloud.common.adapter.util.DownloadUtil -> io.dcloud.common.adapter.util.DownloadUtil:
    1:20:void <init>(android.content.Context) -> <init>
    1:1:void access$000(io.dcloud.common.adapter.util.DownloadUtil,android.content.Context) -> access$000
    1:5:void addDownlaodCallBack(long,java.lang.String,java.lang.String,io.dcloud.common.DHInterface.ILoadCallBack) -> addDownlaodCallBack
    1:78:void checkDownloadStatus(android.app.Activity,long,io.dcloud.common.DHInterface.ILoadCallBack) -> checkDownloadStatus
    1:13:android.content.Intent getAPKInstallIntent(android.content.Context,java.lang.String) -> getAPKInstallIntent
    1:4:io.dcloud.common.adapter.util.DownloadUtil getInstance(android.content.Context) -> getInstance
    1:66:void queryDownloadStatus(android.content.Context) -> queryDownloadStatus
    1:1:void runCallBack(android.app.Activity,io.dcloud.common.DHInterface.ILoadCallBack,int,java.lang.Object) -> runCallBack
    1:23:long startRequest(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,io.dcloud.common.DHInterface.ILoadCallBack) -> startRequest
    1:7:void stop() -> stop
io.dcloud.common.adapter.util.DownloadUtil$1 -> io.dcloud.common.adapter.util.DownloadUtil$1:
    1:1:void <init>(io.dcloud.common.adapter.util.DownloadUtil) -> <init>
    1:5:void onReceive(android.content.Context,android.content.Intent) -> onReceive
io.dcloud.common.adapter.util.DownloadUtil$2 -> io.dcloud.common.adapter.util.DownloadUtil$2:
    1:1:void <init>(io.dcloud.common.adapter.util.DownloadUtil,io.dcloud.common.DHInterface.ILoadCallBack,int,android.app.Activity,java.lang.Object) -> <init>
    1:1:void run() -> run
io.dcloud.common.adapter.util.DownloadUtil$MyRequest -> io.dcloud.common.adapter.util.DownloadUtil$MyRequest:
    1:8:void <init>(io.dcloud.common.adapter.util.DownloadUtil,java.lang.String,java.lang.String,io.dcloud.common.DHInterface.ILoadCallBack) -> <init>
io.dcloud.common.adapter.util.DragBean -> io.dcloud.common.adapter.util.DragBean:
    1:7:void <init>() -> <init>
io.dcloud.common.adapter.util.EventActionInfo -> io.dcloud.common.adapter.util.EventActionInfo:
    1:2:void <init>(java.lang.String) -> <init>
    3:5:void <init>(java.lang.String,java.util.Map) -> <init>
    6:8:void <init>(java.lang.String,java.lang.String) -> <init>
    9:12:void <init>(java.lang.String,java.lang.String,java.util.Map) -> <init>
    1:1:java.lang.String getEvalJs() -> getEvalJs
    1:1:java.lang.String getEventAction() -> getEventAction
    1:1:java.util.Map getParams() -> getParams
io.dcloud.common.adapter.util.InvokeExecutorHelper -> io.dcloud.common.adapter.util.InvokeExecutorHelper:
    1:1:void <init>() -> <init>
    1:3:io.dcloud.common.adapter.util.InvokeExecutorHelper$InvokeExecutor create(java.lang.String) -> create
    1:7:io.dcloud.common.adapter.util.InvokeExecutorHelper$InvokeExecutor createInvokeExecutor(java.lang.String,java.lang.Class[],java.lang.Object[]) -> createInvokeExecutor
io.dcloud.common.adapter.util.InvokeExecutorHelper$InvokeExecutor -> io.dcloud.common.adapter.util.InvokeExecutorHelper$InvokeExecutor:
    1:87:void <init>() -> <init>
    1:5:int getInt(java.lang.String) -> getInt
    1:2:java.lang.String getString(java.lang.String) -> getString
    1:1:boolean hasObject() -> hasObject
    1:8:java.lang.String invoke(java.lang.String) -> invoke
    9:16:java.lang.String invoke(java.lang.String,java.lang.String) -> invoke
    17:20:boolean invoke(java.lang.String,java.lang.String,boolean) -> invoke
    21:24:java.lang.Object invoke(java.lang.String,java.lang.Class[],java.lang.Object[]) -> invoke
    1:1:io.dcloud.common.adapter.util.InvokeExecutorHelper$InvokeExecutor setInstance(java.lang.Object) -> setInstance
io.dcloud.common.adapter.util.Logger -> io.dcloud.common.adapter.util.Logger:
    1:1:void <init>() -> <init>
    1:14:void WriteExceptionToSDcard(java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable) -> WriteExceptionToSDcard
    1:9:void WriteLogToSDcard(java.lang.String,java.lang.String,java.lang.String) -> WriteLogToSDcard
    1:1:int access$000() -> access$000
    1:1:java.io.File access$100() -> access$100
    1:14:boolean canStoreLogToSDcard() -> canStoreLogToSDcard
    1:4:java.lang.String concatString(java.lang.String,java.lang.String) -> concatString
    1:7:void d(java.lang.String,java.lang.String) -> d
    8:20:void d(java.lang.String,java.lang.Object[]) -> d
    21:21:void d(java.lang.String) -> d
    1:14:void deleteOldLog(java.io.File) -> deleteOldLog
    1:3:void e(java.lang.String,java.lang.String) -> e
    4:4:void e(java.lang.String) -> e
    1:3:void es(java.lang.String,java.lang.String) -> es
    4:5:void es(java.lang.String) -> es
    1:5:java.lang.String generateLog(java.lang.String,java.lang.String,java.lang.String) -> generateLog
    1:8:java.lang.String generateTimeStamp(java.lang.Boolean) -> generateTimeStamp
    9:11:java.lang.String generateTimeStamp(java.lang.String,java.util.Date) -> generateTimeStamp
    1:9:java.text.SimpleDateFormat getDateFormatFromCache(java.lang.String) -> getDateFormatFromCache
    1:3:void i(java.lang.String,java.lang.String) -> i
    4:4:void i(java.lang.String) -> i
    1:25:void init(java.lang.String,java.lang.String) -> init
    1:15:void initLogger(android.content.Context) -> initLogger
    1:4:void initWriteLogToSdCardThread() -> initWriteLogToSdCardThread
    1:1:boolean isOpen() -> isOpen
    1:2:boolean isSDcardExists() -> isSDcardExists
    1:1:boolean isTurnOn() -> isTurnOn
    1:1:void p(java.lang.String,java.lang.String) -> p
    2:2:void p(java.lang.String) -> p
    1:2:void privacyLog(java.lang.String,java.lang.String) -> privacyLog
    1:6:void setOpen(boolean) -> setOpen
    1:11:void stopWriteLogToSdCardThread() -> stopWriteLogToSdCardThread
    1:15:void storeLogToSDcard() -> storeLogToSDcard
    1:1:void turnOff() -> turnOff
    1:5:void w(java.lang.String,java.lang.Throwable) -> w
    6:6:void w(java.lang.Throwable) -> w
io.dcloud.common.adapter.util.Logger$1 -> io.dcloud.common.adapter.util.Logger$1:
    1:1:void <init>(java.lang.String,java.lang.String) -> <init>
    1:14:void run() -> run
io.dcloud.common.adapter.util.Logger$WriteLogToSdCardThreadHandler -> io.dcloud.common.adapter.util.Logger$WriteLogToSdCardThreadHandler:
    1:1:void <init>(android.os.Looper) -> <init>
    1:38:void handleMessage(android.os.Message) -> handleMessage
io.dcloud.common.adapter.util.MessageHandler -> io.dcloud.common.adapter.util.MessageHandler:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:1:void post(java.lang.Runnable) -> post
    1:8:java.lang.Object postAndWait(io.dcloud.common.adapter.util.MessageHandler$UncheckedCallable) -> postAndWait
    1:1:void postDelayed(java.lang.Runnable,long) -> postDelayed
    1:1:void removeCallbacks(java.lang.Runnable) -> removeCallbacks
    1:4:void sendMessage(io.dcloud.common.adapter.util.MessageHandler$IMessages,java.lang.Object) -> sendMessage
    5:8:void sendMessage(io.dcloud.common.adapter.util.MessageHandler$IMessages,long,java.lang.Object) -> sendMessage
io.dcloud.common.adapter.util.MessageHandler$1 -> io.dcloud.common.adapter.util.MessageHandler$1:
    1:1:void <init>(android.os.Looper) -> <init>
    1:7:void handleMessage(android.os.Message) -> handleMessage
io.dcloud.common.adapter.util.MessageHandler$2 -> io.dcloud.common.adapter.util.MessageHandler$2:
    1:1:void <init>(io.dcloud.common.adapter.util.MessageHandler$UncheckedCallable) -> <init>
    1:1:void onRun(io.dcloud.common.adapter.util.MessageHandler$WaitableRunnable) -> onRun
io.dcloud.common.adapter.util.MessageHandler$WaitableRunnable -> io.dcloud.common.adapter.util.MessageHandler$WaitableRunnable:
    1:2:void <init>() -> <init>
    1:5:void callBack(java.lang.Object) -> callBack
    1:13:java.lang.Object invoke(android.os.Handler) -> invoke
    1:11:void join() -> join
    1:5:void run() -> run
io.dcloud.common.adapter.util.MobilePhoneModel -> io.dcloud.common.adapter.util.MobilePhoneModel:
    1:31:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:146:boolean checkDeviceHtml5Geo() -> checkDeviceHtml5Geo
    1:1:boolean checkPhoneBanAcceleration(java.lang.String) -> checkPhoneBanAcceleration
    1:27:java.lang.String getDeviceRomVersionName() -> getDeviceRomVersionName
    1:1:boolean hasToast(java.lang.String) -> hasToast
    1:2:boolean isAppointPhone(java.lang.String) -> isAppointPhone
    1:13:boolean isDLGeoPhone() -> isDLGeoPhone
    1:3:boolean isSmartisanLauncherPhone(android.content.Context) -> isSmartisanLauncherPhone
    1:2:boolean isSpecialPhone(android.content.Context) -> isSpecialPhone
    1:9:boolean isYunOSRom() -> isYunOSRom
    1:1:boolean needToast(java.lang.String) -> needToast
io.dcloud.common.adapter.util.NinePatchChunk -> io.dcloud.common.adapter.util.NinePatchChunk:
    1:6:void <init>() -> <init>
    1:1:void checkDivCount(int) -> checkDivCount
    1:28:io.dcloud.common.adapter.util.NinePatchChunk deserialize(byte[]) -> deserialize
    1:2:void readIntArray(int[],java.nio.ByteBuffer) -> readIntArray
io.dcloud.common.adapter.util.PermissionUtil -> io.dcloud.common.adapter.util.PermissionUtil:
    1:942:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:1:java.util.HashMap access$000() -> access$000
    1:1:void access$300(android.app.Activity,java.lang.String,io.dcloud.common.adapter.util.PermissionUtil$Request,int) -> access$300
    1:1:void access$400(io.dcloud.common.DHInterface.IApp,io.dcloud.common.DHInterface.ISysEventListener) -> access$400
    1:1:void access$500() -> access$500
    1:1:int access$600() -> access$600
    1:3:boolean caseVersion(android.app.Activity) -> caseVersion
    1:9:boolean checkLocationPermission(android.app.Activity) -> checkLocationPermission
    1:6:boolean checkLocationService(android.app.Activity) -> checkLocationService
    1:7:java.lang.String checkPermission(io.dcloud.common.DHInterface.IWebview,java.lang.String[]) -> checkPermission
    1:4:boolean checkPermission_EMUI(android.app.Activity) -> checkPermission_EMUI
    1:3:boolean checkPermission_Flyme(android.app.Activity) -> checkPermission_Flyme
    1:11:int checkSelfPermission(android.app.Activity,java.lang.String,java.lang.String) -> checkSelfPermission
    12:12:int checkSelfPermission(android.app.Activity,java.lang.String) -> checkSelfPermission
    1:2:int checkStreamAppPermission(android.content.Context,java.lang.String,java.lang.String) -> checkStreamAppPermission
    1:9:void clearPermission(android.content.Context,java.lang.String) -> clearPermission
    1:1:void clearUseRejectedCache() -> clearUseRejectedCache
    0:6:boolean continueShowStreamAppPermissionDialog(io.dcloud.common.adapter.util.PermissionUtil$ShowDialogData) -> continueShowStreamAppPermissionDialog
    1:19:java.lang.String convert2StreamPermission(java.lang.String) -> convert2StreamPermission
    1:19:java.lang.String convert2SystemPermission(java.lang.String) -> convert2SystemPermission
    1:1:java.lang.String convert5PlusValue(int) -> convert5PlusValue
    1:1:java.lang.String convertNativePermission(java.lang.String) -> convertNativePermission
    1:3:int getDeivceSuitablePixel(android.app.Activity,int) -> getDeivceSuitablePixel
    1:5:int getRequestCode() -> getRequestCode
    1:4:void goPermissionCenter(android.app.Activity,java.lang.String,java.lang.String,io.dcloud.common.adapter.util.PermissionUtil$Request) -> goPermissionCenter
    1:1:void goSafeCenter(android.app.Activity) -> goSafeCenter
    1:6:boolean isAndroid(android.app.Activity,java.lang.String,io.dcloud.common.adapter.util.PermissionUtil$Request) -> isAndroid
    1:1:boolean isEMUIRom(android.app.Activity) -> isEMUIRom
    1:8:boolean isFlyme(android.app.Activity,java.lang.String,io.dcloud.common.adapter.util.PermissionUtil$Request) -> isFlyme
    1:1:boolean isFlymeRom(android.app.Activity) -> isFlymeRom
    1:1:boolean isMainStreamPermission(java.lang.String) -> isMainStreamPermission
    1:20:int isMiui(android.app.Activity,java.lang.String,java.lang.String) -> isMiui
    21:62:boolean isMiui(android.app.Activity,java.lang.String,io.dcloud.common.adapter.util.PermissionUtil$Request) -> isMiui
    1:3:boolean isMiuiRom(android.app.Activity) -> isMiuiRom
    1:13:void onActivityResult(android.app.Activity,int,int,android.content.Intent) -> onActivityResult
    1:3:void onRequestSysPermissionResume(android.app.Activity) -> onRequestSysPermissionResume
    1:50:void onSystemPermissionsResult(android.app.Activity,int,java.lang.String[],int[]) -> onSystemPermissionsResult
    1:2:void putStreamAppPermission(android.content.Context,java.lang.String,java.lang.String,int) -> putStreamAppPermission
    1:2:void removeStreamAppPermission(android.content.Context,java.lang.String,java.lang.String) -> removeStreamAppPermission
    1:15:void removeTempPermission(android.content.Context,java.lang.String) -> removeTempPermission
    1:1:void requestPermissions(android.app.Activity,java.lang.String[],int) -> requestPermissions
    1:13:void requestSystemPermissions(android.app.Activity,java.lang.String[],int,io.dcloud.common.adapter.util.PermissionUtil$Request) -> requestSystemPermissions
    1:1:void restRequstCode() -> restRequstCode
    1:3:void saveCallabckData(android.app.Activity,java.lang.String,io.dcloud.common.adapter.util.PermissionUtil$Request,int) -> saveCallabckData
    0:9:void showStreamAppPermissionDialog() -> showStreamAppPermissionDialog
    10:135:void showStreamAppPermissionDialog(io.dcloud.common.adapter.util.PermissionUtil$ShowDialogData) -> showStreamAppPermissionDialog
    1:116:int trycatchGetPermission(android.app.Activity,java.lang.String,java.lang.String) -> trycatchGetPermission
    1:1:void unregisterWebAppReStartEvent(io.dcloud.common.DHInterface.IApp,io.dcloud.common.DHInterface.ISysEventListener) -> unregisterWebAppReStartEvent
    0:16:void usePermission(android.app.Activity,java.lang.String,java.lang.String,int,io.dcloud.common.adapter.util.PermissionUtil$Request) -> usePermission
    17:17:void usePermission(android.app.Activity,java.lang.String,io.dcloud.common.adapter.util.PermissionUtil$Request) -> usePermission
    1:18:int useStreamPermission(io.dcloud.common.adapter.util.PermissionUtil$ShowDialogData) -> useStreamPermission
    1:19:boolean useSystemPermission(android.app.Activity,java.lang.String,io.dcloud.common.adapter.util.PermissionUtil$Request) -> useSystemPermission
    1:37:void useSystemPermissions(android.app.Activity,java.lang.String[],io.dcloud.common.adapter.util.PermissionUtil$Request) -> useSystemPermissions
io.dcloud.common.adapter.util.PermissionUtil$1 -> io.dcloud.common.adapter.util.PermissionUtil$1:
    1:1:void <init>(java.lang.String,io.dcloud.common.adapter.util.PermissionUtil$Request) -> <init>
    1:21:void onDenied(java.lang.String) -> onDenied
    1:8:void onGranted(java.lang.String) -> onGranted
io.dcloud.common.adapter.util.PermissionUtil$2 -> io.dcloud.common.adapter.util.PermissionUtil$2:
    1:1:void <init>(io.dcloud.common.adapter.util.PermissionUtil$Request) -> <init>
    1:1:void onDenied(java.lang.String) -> onDenied
    1:1:void onGranted(java.lang.String) -> onGranted
io.dcloud.common.adapter.util.PermissionUtil$3 -> io.dcloud.common.adapter.util.PermissionUtil$3:
    1:1:void <init>(android.app.AlertDialog,io.dcloud.common.adapter.util.PermissionUtil$ShowDialogData,io.dcloud.common.adapter.util.PermissionUtil$Request,java.lang.String) -> <init>
    1:9:boolean onExecute(io.dcloud.common.DHInterface.ISysEventListener$SysEventType,java.lang.Object) -> onExecute
io.dcloud.common.adapter.util.PermissionUtil$4 -> io.dcloud.common.adapter.util.PermissionUtil$4:
    1:1:void <init>(android.app.AlertDialog,io.dcloud.common.adapter.util.PermissionUtil$ShowDialogData,io.dcloud.common.DHInterface.ISysEventListener,android.widget.CheckBox,android.app.Activity,java.lang.String,java.lang.String,io.dcloud.common.adapter.util.PermissionUtil$Request) -> <init>
    1:13:void onClick(android.content.DialogInterface,int) -> onClick
io.dcloud.common.adapter.util.PermissionUtil$5 -> io.dcloud.common.adapter.util.PermissionUtil$5:
    1:1:void <init>(android.app.AlertDialog,io.dcloud.common.adapter.util.PermissionUtil$ShowDialogData,io.dcloud.common.DHInterface.ISysEventListener,io.dcloud.common.adapter.util.PermissionUtil$Request,java.lang.String) -> <init>
    1:6:boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
io.dcloud.common.adapter.util.PermissionUtil$6 -> io.dcloud.common.adapter.util.PermissionUtil$6:
    1:1:void <init>(android.app.Activity,android.app.AlertDialog) -> <init>
    1:2:void onDismiss(android.content.DialogInterface) -> onDismiss
io.dcloud.common.adapter.util.PermissionUtil$PermissionData -> io.dcloud.common.adapter.util.PermissionUtil$PermissionData:
    1:5:void <init>(java.lang.String,int,int,int) -> <init>
io.dcloud.common.adapter.util.PermissionUtil$Request -> io.dcloud.common.adapter.util.PermissionUtil$Request:
    1:5:void <init>() -> <init>
    1:1:int getRequestCode() -> getRequestCode
    1:1:void setRequestCode(int) -> setRequestCode
io.dcloud.common.adapter.util.PermissionUtil$SafeCenter -> io.dcloud.common.adapter.util.PermissionUtil$SafeCenter:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:1:void access$100(android.app.Activity) -> access$100
    1:1:boolean access$200(android.app.Activity,java.lang.String,io.dcloud.common.adapter.util.PermissionUtil$Request) -> access$200
    1:35:void goSafeCenter(android.app.Activity) -> goSafeCenter
    36:97:boolean goSafeCenter(android.app.Activity,java.lang.String,io.dcloud.common.adapter.util.PermissionUtil$Request) -> goSafeCenter
    1:26:void init(android.content.Context) -> init
io.dcloud.common.adapter.util.PermissionUtil$SafeCenter$Item -> io.dcloud.common.adapter.util.PermissionUtil$SafeCenter$Item:
    1:5:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
io.dcloud.common.adapter.util.PermissionUtil$ShowDialogData -> io.dcloud.common.adapter.util.PermissionUtil$ShowDialogData:
    1:2:void <init>(android.app.Activity,io.dcloud.common.DHInterface.IApp,java.lang.String,java.lang.String,java.lang.String,io.dcloud.common.adapter.util.PermissionUtil$Request) -> <init>
    3:10:void <init>(android.app.Activity,io.dcloud.common.DHInterface.IApp,java.lang.String,java.lang.String,java.lang.String) -> <init>
    1:1:void setRequestHandler(io.dcloud.common.adapter.util.PermissionUtil$Request) -> setRequestHandler
io.dcloud.common.adapter.util.PermissionUtil$StreamPermissionRequest -> io.dcloud.common.adapter.util.PermissionUtil$StreamPermissionRequest:
    1:9:void <init>(io.dcloud.common.DHInterface.IApp) -> <init>
    1:1:java.lang.String getAppName() -> getAppName
    1:1:java.lang.String[] getStreamRequestPermission() -> getStreamRequestPermission
    1:1:java.lang.String[] getSystemRequestPermission() -> getSystemRequestPermission
    1:3:void setApp(io.dcloud.common.DHInterface.IApp) -> setApp
    1:4:io.dcloud.common.adapter.util.PermissionUtil$StreamPermissionRequest setRequestPermission(java.lang.String[]) -> setRequestPermission
io.dcloud.common.adapter.util.PlatformUtil -> io.dcloud.common.adapter.util.PlatformUtil:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:7:int[] GET_BLACK_LINE(int) -> GET_BLACK_LINE
    1:7:int[] GET_WIHTE_LINE(int) -> GET_WIHTE_LINE
    1:12:int MESURE_SCREEN_CONTENT_HEIGHT(android.app.Activity) -> MESURE_SCREEN_CONTENT_HEIGHT
    1:12:int MESURE_SCREEN_STATUSBAR_HEIGHT(android.app.Activity) -> MESURE_SCREEN_STATUSBAR_HEIGHT
    1:5:void RESET_H_W() -> RESET_H_W
    1:4:int SCREEN_HEIGHT(android.content.Context) -> SCREEN_HEIGHT
    1:4:int SCREEN_WIDTH(android.content.Context) -> SCREEN_WIDTH
    1:1:android.graphics.Bitmap captureView(android.view.View) -> captureView
    2:25:android.graphics.Bitmap captureView(android.view.View,boolean,boolean,android.graphics.Rect,java.lang.String) -> captureView
    26:26:android.graphics.Bitmap captureView(android.view.View,java.lang.String) -> captureView
    27:44:android.graphics.Bitmap captureView(android.view.View,android.graphics.Rect,java.lang.String) -> captureView
    1:1:boolean checkClass(java.lang.String) -> checkClass
    1:1:boolean checkGTAndYoumeng() -> checkGTAndYoumeng
    1:26:boolean checkLauncherScreenSpace(android.content.Context) -> checkLauncherScreenSpace
    1:12:void createShortut(android.content.Context,java.lang.String,java.lang.String,int,boolean) -> createShortut
    13:23:void createShortut(android.content.Context,java.lang.String,java.lang.String,android.graphics.Bitmap,boolean) -> createShortut
    1:10:void delShortcut(java.lang.String,java.lang.String,java.lang.String) -> delShortcut
    1:1:void destroyDrawingCache(android.view.View) -> destroyDrawingCache
    1:18:void disableWebViewMultiProcess(android.content.Context) -> disableWebViewMultiProcess
    1:40:io.dcloud.common.adapter.util.PlatformUtil$APKInfo getApkFileInfo(android.content.Context,java.lang.String) -> getApkFileInfo
    1:12:android.content.pm.ActivityInfo getBestActivityInfo(java.util.List,java.util.LinkedList) -> getBestActivityInfo
    1:9:byte[] getFileContent(java.lang.String,int) -> getFileContent
    1:3:java.lang.String getFileContent4S(java.lang.String) -> getFileContent4S
    1:11:java.lang.String getFilePathFromContentUri(android.net.Uri,android.content.ContentResolver) -> getFilePathFromContentUri
    1:15:java.io.InputStream getInputStream(java.lang.String,int) -> getInputStream
    16:21:java.io.InputStream getInputStream(java.lang.String) -> getInputStream
    1:26:java.io.InputStream getResInputStream(java.lang.String) -> getResInputStream
    1:17:java.lang.String getSechemeList(android.content.Context,java.lang.String) -> getSechemeList
    1:17:java.lang.String getStartupSechemeList(android.content.Context,java.lang.String) -> getStartupSechemeList
    1:6:boolean hasAppInstalled(android.content.Context,java.lang.String) -> hasAppInstalled
    1:1:void init(android.content.Context) -> init
    1:22:boolean initComponentName(android.content.Context,android.content.Intent,java.lang.String) -> initComponentName
    0:34:java.lang.Object invokeFieldValue(java.lang.String,java.lang.String,java.lang.Object) -> invokeFieldValue
    1:1:java.lang.Object invokeMethod(java.lang.String,java.lang.String) -> invokeMethod
    2:2:java.lang.Object invokeMethod(java.lang.String,java.lang.String,java.lang.Object) -> invokeMethod
    3:22:java.lang.Object invokeMethod(java.lang.String,java.lang.String,java.lang.Object,java.lang.Class[],java.lang.Object[]) -> invokeMethod
    23:33:java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Class[],java.lang.Object[]) -> invokeMethod
    1:29:boolean invokeSetFieldValue(java.lang.Object,java.lang.String,java.lang.Object) -> invokeSetFieldValue
    1:1:boolean isAppInstalled(android.content.Context,java.lang.String) -> isAppInstalled
    1:1:boolean isEmulator() -> isEmulator
    1:8:boolean isLineWhiteBitmap(android.graphics.Bitmap,boolean) -> isLineWhiteBitmap
    1:2:boolean isPureColor(int[]) -> isPureColor
    1:4:boolean isResFileExists(java.lang.String) -> isResFileExists
    1:1:boolean isWhiteBitmap(android.graphics.Bitmap) -> isWhiteBitmap
    2:19:boolean isWhiteBitmap(android.graphics.Bitmap,boolean,boolean) -> isWhiteBitmap
    1:32:void launchApplication(android.content.Context,java.lang.String,java.lang.String,java.util.HashMap,boolean) -> launchApplication
    1:3:java.lang.String[] listFsAppsFiles(java.lang.String) -> listFsAppsFiles
    1:4:java.lang.String[] listResFiles(java.lang.String) -> listResFiles
    1:7:java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]) -> newInstance
    1:41:void openFileBySystem(android.content.Context,java.lang.String,java.lang.String,java.lang.String,io.dcloud.common.DHInterface.ICallBack) -> openFileBySystem
    1:11:void openURL(android.content.Context,java.lang.String,java.lang.String) -> openURL
    1:2:android.content.pm.PackageInfo parseApkInfo(android.content.Context,java.lang.String) -> parseApkInfo
    1:18:boolean queryDefaultShortcut(java.lang.String) -> queryDefaultShortcut
    1:18:boolean queryHTCShortCut(java.lang.String) -> queryHTCShortCut
    1:15:int queryMaxLauncherScreenCount(android.content.Context) -> queryMaxLauncherScreenCount
    1:7:boolean setPackageName(android.content.Context,android.content.Intent,java.lang.String) -> setPackageName
    1:1:java.lang.String useAndroidPath(java.lang.String) -> useAndroidPath
io.dcloud.common.adapter.util.PlatformUtil$APKInfo -> io.dcloud.common.adapter.util.PlatformUtil$APKInfo:
    1:1:void <init>() -> <init>
io.dcloud.common.adapter.util.SP -> io.dcloud.common.adapter.util.SP:
    1:1:void <init>() -> <init>
    1:3:void clearBundle(android.content.SharedPreferences) -> clearBundle
    4:4:void clearBundle(java.lang.String) -> clearBundle
    5:8:void clearBundle(android.content.Context,java.lang.String) -> clearBundle
    1:1:java.lang.String getBundleData(java.lang.String,java.lang.String) -> getBundleData
    2:2:java.lang.String getBundleData(android.content.Context,java.lang.String,java.lang.String) -> getBundleData
    3:3:java.lang.String getBundleData(java.lang.String,java.lang.String,boolean) -> getBundleData
    4:5:java.lang.String getBundleData(android.content.Context,java.lang.String,java.lang.String,boolean) -> getBundleData
    6:6:java.lang.String getBundleData(android.content.SharedPreferences,java.lang.String) -> getBundleData
    1:1:android.content.SharedPreferences getOrCreateBundle(java.lang.String,boolean) -> getOrCreateBundle
    1:19:android.content.SharedPreferences getOrCreateBundle(android.content.Context,java.lang.String,boolean) -> getOrCreateBundle
    20:20:android.content.SharedPreferences getOrCreateBundle(java.lang.String) -> getOrCreateBundle
    21:21:android.content.SharedPreferences getOrCreateBundle(android.content.Context,java.lang.String) -> getOrCreateBundle
    1:1:java.lang.String getsBundleData(java.lang.String,java.lang.String) -> getsBundleData
    2:3:java.lang.String getsBundleData(android.content.Context,java.lang.String,java.lang.String) -> getsBundleData
    1:1:io.dcloud.g.d.b getsOrCreateBundle(java.lang.String) -> getsOrCreateBundle
    2:2:io.dcloud.g.d.b getsOrCreateBundle(android.content.Context,java.lang.String) -> getsOrCreateBundle
    1:3:boolean hasChanged(android.content.Context,java.lang.String,boolean) -> hasChanged
    1:3:void removeBundleData(android.content.SharedPreferences,java.lang.String) -> removeBundleData
    4:7:void removeBundleData(android.content.Context,java.lang.String,java.lang.String,boolean) -> removeBundleData
    8:8:void removeBundleData(java.lang.String,java.lang.String) -> removeBundleData
    9:9:void removeBundleData(android.content.Context,java.lang.String,java.lang.String) -> removeBundleData
    1:3:void setBundleData(android.content.SharedPreferences,java.lang.String,java.lang.String) -> setBundleData
    4:10:void setBundleData(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean) -> setBundleData
    11:11:void setBundleData(java.lang.String,java.lang.String,java.lang.String) -> setBundleData
    12:12:void setBundleData(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> setBundleData
    1:1:void setsBundleData(java.lang.String,java.lang.String,java.lang.String) -> setsBundleData
    2:3:void setsBundleData(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> setsBundleData
io.dcloud.common.adapter.util.SharedPreferencesExt -> io.dcloud.common.adapter.util.SharedPreferencesExt:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>(android.content.Context,java.lang.String) -> <init>
    2:326:void <init>(android.content.Context,java.lang.String,int) -> <init>
    1:1:java.util.LinkedHashMap access$100(io.dcloud.common.adapter.util.SharedPreferencesExt) -> access$100
    1:1:boolean access$200(io.dcloud.common.adapter.util.SharedPreferencesExt) -> access$200
    1:3:void checkModify() -> checkModify
    1:2:boolean contains(java.lang.String) -> contains
    1:2:android.content.SharedPreferences$Editor edit() -> edit
    1:2:java.util.Map getAll() -> getAll
    1:9:boolean getBoolean(java.lang.String,boolean) -> getBoolean
    1:9:float getFloat(java.lang.String,float) -> getFloat
    1:9:int getInt(java.lang.String,int) -> getInt
    1:10:long getLong(java.lang.String,long) -> getLong
    1:8:java.lang.String getString(java.lang.String,java.lang.String) -> getString
    1:5:java.util.Set getStringSet(java.lang.String,java.util.Set) -> getStringSet
    1:1:boolean hasChaged() -> hasChaged
    1:26:void load(java.util.LinkedHashMap,java.lang.String,byte[],int,byte) -> load
    1:34:void reset() -> reset
    1:65:void save(java.util.LinkedHashMap) -> save
    1:1:boolean saveLocal() -> saveLocal
io.dcloud.common.adapter.util.SharedPreferencesExt$W2AEditor -> io.dcloud.common.adapter.util.SharedPreferencesExt$W2AEditor:
    1:1:void <init>(io.dcloud.common.adapter.util.SharedPreferencesExt,io.dcloud.common.adapter.util.SharedPreferencesExt$1) -> <init>
    2:6:void <init>(io.dcloud.common.adapter.util.SharedPreferencesExt) -> <init>
    1:2:void apply() -> apply
    1:1:android.content.SharedPreferences$Editor clear() -> clear
    1:3:boolean commit() -> commit
    1:1:android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean) -> putBoolean
    1:1:android.content.SharedPreferences$Editor putFloat(java.lang.String,float) -> putFloat
    1:1:android.content.SharedPreferences$Editor putInt(java.lang.String,int) -> putInt
    1:1:android.content.SharedPreferences$Editor putLong(java.lang.String,long) -> putLong
    1:1:android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String) -> putString
    1:1:android.content.SharedPreferences$Editor putStringSet(java.lang.String,java.util.Set) -> putStringSet
    1:1:android.content.SharedPreferences$Editor remove(java.lang.String) -> remove
io.dcloud.common.adapter.util.UEH -> io.dcloud.common.adapter.util.UEH:
    1:3:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:1:java.io.File access$000(android.content.Context,java.lang.Throwable) -> access$000
    1:1:void access$100(android.content.Context,java.lang.Throwable) -> access$100
    1:21:void catchUncaughtException(android.content.Context) -> catchUncaughtException
    1:21:void commitBaseUncatchInfo(android.content.Context,java.lang.StringBuffer) -> commitBaseUncatchInfo
    1:1:void commitErrorLog(java.lang.String) -> commitErrorLog
    1:6:void commitUncatchException(android.content.Context,java.lang.String,java.lang.String) -> commitUncatchException
    7:18:void commitUncatchException(android.content.Context,java.lang.Throwable) -> commitUncatchException
    1:21:java.lang.String getAppUseMem(android.content.Context) -> getAppUseMem
    1:44:java.io.File handleUncaughtException(android.content.Context,java.lang.Throwable) -> handleUncaughtException
io.dcloud.common.adapter.util.UEH$1 -> io.dcloud.common.adapter.util.UEH$1:
    1:1:void <init>(android.content.Context) -> <init>
    1:14:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
io.dcloud.common.adapter.util.UEH$2 -> io.dcloud.common.adapter.util.UEH$2:
    1:1:void <init>(java.lang.String) -> <init>
    1:3:void run() -> run
io.dcloud.common.adapter.util.UniMPConfig -> io.dcloud.common.adapter.util.UniMPConfig:
    1:1:void <init>() -> <init>
io.dcloud.common.adapter.util.ViewOptions -> io.dcloud.common.adapter.util.ViewOptions:
    1:58:void <init>() -> <init>
    1:1:io.dcloud.common.adapter.util.ViewOptions createViewOptionsData(io.dcloud.common.adapter.util.ViewOptions,io.dcloud.common.adapter.util.ViewRect) -> createViewOptionsData
    0:6:io.dcloud.common.adapter.util.ViewOptions createViewOptionsData(io.dcloud.common.adapter.util.ViewOptions,io.dcloud.common.adapter.util.ViewRect,io.dcloud.common.adapter.util.ViewRect) -> createViewOptionsData
    1:1:java.lang.String getScrollIndicator() -> getScrollIndicator
    1:1:boolean hasBackground() -> hasBackground
    1:1:boolean hasMask() -> hasMask
    1:1:boolean hasTransparentValue() -> hasTransparentValue
    1:1:boolean isTabHasBg() -> isTabHasBg
    1:1:boolean isTransparent() -> isTransparent
    1:4:void setBackButtonAutoControl(org.json.JSONObject) -> setBackButtonAutoControl
    1:18:void setDragData(org.json.JSONObject,org.json.JSONObject,io.dcloud.common.DHInterface.IFrameView,io.dcloud.common.DHInterface.IFrameView,java.lang.String,android.view.View) -> setDragData
    1:41:void setTitleNView(org.json.JSONObject,io.dcloud.common.DHInterface.IWebview) -> setTitleNView
    1:1:void updateViewData(io.dcloud.common.adapter.util.ViewRect) -> updateViewData
    2:127:boolean updateViewData(org.json.JSONObject) -> updateViewData
io.dcloud.common.adapter.util.ViewRect -> io.dcloud.common.adapter.util.ViewRect:
    1:40:void <init>() -> <init>
    1:13:void checkValueIsPercentage(java.lang.String,int,int,boolean,boolean) -> checkValueIsPercentage
    1:8:void commitUpdate2JSONObject(boolean,boolean) -> commitUpdate2JSONObject
    9:9:void commitUpdate2JSONObject() -> commitUpdate2JSONObject
    1:1:void delRelViewRect(io.dcloud.common.adapter.util.ViewRect) -> delRelViewRect
    1:1:io.dcloud.common.adapter.util.ViewRect getParentViewRect() -> getParentViewRect
    1:6:boolean hasHeightAbsolutevalue() -> hasHeightAbsolutevalue
    1:1:boolean hasRectChanged(io.dcloud.common.adapter.util.ViewRect,io.dcloud.common.adapter.util.ViewRect) -> hasRectChanged
    1:1:boolean isBottomAbsolute() -> isBottomAbsolute
    1:11:boolean isHeightAbsolute() -> isHeightAbsolute
    1:92:void layoutDockViewRect(io.dcloud.common.adapter.util.ViewRect,io.dcloud.common.adapter.util.ViewRect,boolean) -> layoutDockViewRect
    93:93:void layoutDockViewRect(io.dcloud.common.adapter.util.ViewRect,io.dcloud.common.adapter.util.ViewRect) -> layoutDockViewRect
    1:3:void layoutWithRelViewRect() -> layoutWithRelViewRect
    1:1:void onScreenChanged(int,int) -> onScreenChanged
    2:2:void onScreenChanged() -> onScreenChanged
    1:2:void putRelViewRect(io.dcloud.common.adapter.util.ViewRect) -> putRelViewRect
    1:3:void setFrameParentViewRect(io.dcloud.common.adapter.util.ViewRect) -> setFrameParentViewRect
    1:1:void setParentViewRect(io.dcloud.common.adapter.util.ViewRect) -> setParentViewRect
    1:1:void setUpdateAction(boolean) -> setUpdateAction
    1:1:boolean updateViewData(org.json.JSONObject,int,int) -> updateViewData
    2:90:boolean updateViewData(org.json.JSONObject,int,int,float) -> updateViewData
    91:98:void updateViewData(io.dcloud.common.adapter.util.ViewRect) -> updateViewData
    99:104:boolean updateViewData(org.json.JSONObject) -> updateViewData
io.dcloud.common.constant.AbsoluteConst -> io.dcloud.common.constant.AbsoluteConst:
    1:6:void <clinit>() -> <clinit>
io.dcloud.common.constant.DOMException -> io.dcloud.common.constant.DOMException:
    1:98:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:1:java.lang.String getString(int) -> getString
    1:3:java.lang.String toJSON(int,java.lang.String) -> toJSON
    4:6:java.lang.String toJSON(java.lang.String,java.lang.String) -> toJSON
    7:9:java.lang.String toJSON(int,java.lang.String,int) -> toJSON
    1:7:java.lang.String toString(int,java.lang.String,java.lang.String,java.lang.String) -> toString
    8:14:java.lang.String toString(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> toString
    15:15:java.lang.String toString(java.lang.String) -> toString
    1:3:java.lang.String toStringForThirdSDK(java.lang.String,java.lang.String,int,java.lang.String) -> toStringForThirdSDK
    4:6:java.lang.String toStringForThirdSDK(java.lang.String,java.lang.String,java.lang.String) -> toStringForThirdSDK
io.dcloud.common.constant.DataInterface -> io.dcloud.common.constant.DataInterface:
    1:1:void <init>() -> <init>
    1:1:java.lang.String getAppListUrl(java.lang.String) -> getAppListUrl
    1:1:java.lang.String getBaseUrl() -> getBaseUrl
    1:3:java.lang.String getDatailUrl(java.lang.String) -> getDatailUrl
    1:22:java.lang.String getDatailsUrl(java.lang.String,java.util.ArrayList,java.lang.String[]) -> getDatailsUrl
    1:2:java.lang.String getJsonUrl(java.lang.String,java.lang.String,java.lang.String,android.content.Context,java.lang.String) -> getJsonUrl
    1:5:java.lang.String getRomVersion() -> getRomVersion
    1:3:java.lang.String getSplashUrl(java.lang.String,java.lang.String,java.lang.String) -> getSplashUrl
    1:1:java.util.HashMap getStartupUrlBaseData(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> getStartupUrlBaseData
    2:27:java.util.HashMap getStartupUrlBaseData(android.content.Context,java.lang.String,java.lang.String,java.lang.String,boolean) -> getStartupUrlBaseData
    1:5:java.lang.String getStatisticsUrl(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String) -> getStatisticsUrl
    1:4:java.lang.String getStreamappFrom(android.content.Intent) -> getStreamappFrom
    1:25:java.lang.String getSystemProperty() -> getSystemProperty
    1:7:java.lang.String getTestParam(java.lang.String) -> getTestParam
    1:15:java.lang.String getUrlBaseData(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> getUrlBaseData
io.dcloud.common.constant.IntentConst -> io.dcloud.common.constant.IntentConst:
    1:60:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:1:boolean allowToHtml(java.lang.String) -> allowToHtml
    1:7:android.content.Intent modifyStartFrom(android.content.Intent) -> modifyStartFrom
    1:57:java.lang.String obtainArgs(android.content.Intent,java.lang.String) -> obtainArgs
    1:17:android.content.Intent removeArgs(android.content.Intent,java.lang.String) -> removeArgs
    1:3:void saveType(java.lang.String,java.lang.String) -> saveType
io.dcloud.common.constant.StringConst -> io.dcloud.common.constant.StringConst:
    1:1:void <init>() -> <init>
    1:1:java.lang.String STREAMAPP_KEY_BASESERVICEURL() -> STREAMAPP_KEY_BASESERVICEURL
    1:1:boolean canChangeHost(java.lang.String) -> canChangeHost
    1:1:java.lang.String changeHost(java.lang.String) -> changeHost
    1:24:int getIntSF(java.lang.String) -> getIntSF
io.dcloud.common.core.a.a -> io.dcloud.common.core.a.a:
    1:1:void <init>() -> <init>
    1:1:void a(org.json.JSONObject) -> a
    2:2:io.dcloud.common.DHInterface.IApp a() -> a
    1:1:void b(org.json.JSONObject) -> b
    1:56:void bc(java.lang.String) -> bc
    1:53:void c(org.json.JSONObject) -> c
    1:12:void d(org.json.JSONObject) -> d
    1:14:void e(org.json.JSONObject) -> e
    1:20:java.lang.String gd() -> gd
io.dcloud.common.core.a.a$a -> io.dcloud.common.core.a.a$a:
    1:1:void <init>(org.json.JSONObject) -> <init>
    1:1:void run() -> run
io.dcloud.common.core.a.a$b -> io.dcloud.common.core.a.a$b:
    1:1:void <init>(org.json.JSONObject) -> <init>
    1:1:void run() -> run
io.dcloud.common.core.a.a$c -> io.dcloud.common.core.a.a$c:
    1:1:void <init>(org.json.JSONObject,io.dcloud.common.DHInterface.IApp) -> <init>
    1:1:void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
    1:12:void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    1:1:void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.dcloudimageloader.core.assist.FailReason) -> onLoadingFailed
    1:1:void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
io.dcloud.common.core.permission.PermissionControler -> io.dcloud.common.core.permission.PermissionControler:
    1:4:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:46:java.lang.String checkPermission(io.dcloud.common.DHInterface.IWebview,java.lang.String[]) -> checkPermission
    1:1:boolean checkSafePermission(java.lang.String,java.lang.String) -> checkSafePermission
    1:1:void clearCRequestPermissionsCache() -> clearCRequestPermissionsCache
    1:1:java.lang.String convertNativePermission(java.lang.String) -> convertNativePermission
    1:2:void destroy() -> destroy
    1:1:java.util.ArrayList getPermissionList(java.lang.String) -> getPermissionList
    1:3:java.lang.String getPermissionsErrorDesp(java.lang.String) -> getPermissionsErrorDesp
    1:2:void registerPermission(java.lang.String,java.util.ArrayList) -> registerPermission
    1:1:void registerRootPermission(java.lang.String) -> registerRootPermission
    1:3:void removeRequestPermissionForCode(int) -> removeRequestPermissionForCode
    1:10:void requestPermissions(android.app.Activity,java.lang.String[],int) -> requestPermissions
    1:5:void runNextRequestPermission(android.app.Activity,int) -> runNextRequestPermission
    1:6:void runRequestPermissions(android.app.Activity,java.lang.String[],int) -> runRequestPermissions
    1:1:void unregisterRootPermission(java.lang.String) -> unregisterRootPermission
io.dcloud.common.core.permission.a -> io.dcloud.common.core.permission.a:
    1:3:void <init>(java.lang.String[],int) -> <init>
io.dcloud.common.core.ui.DCKeyboardManager -> io.dcloud.common.core.ui.DCKeyboardManager:
    1:430:void <init>() -> <init>
    1:1:android.view.View access$000(io.dcloud.common.core.ui.DCKeyboardManager) -> access$000
    1:1:android.view.View access$100(io.dcloud.common.core.ui.DCKeyboardManager) -> access$100
    1:1:boolean access$200(io.dcloud.common.core.ui.DCKeyboardManager) -> access$200
    1:1:java.lang.Runnable access$300(io.dcloud.common.core.ui.DCKeyboardManager) -> access$300
    1:1:java.lang.Runnable access$302(io.dcloud.common.core.ui.DCKeyboardManager,java.lang.Runnable) -> access$302
    1:1:android.os.Handler access$400(io.dcloud.common.core.ui.DCKeyboardManager) -> access$400
    1:1:java.lang.Runnable access$500(io.dcloud.common.core.ui.DCKeyboardManager) -> access$500
    1:1:java.lang.Runnable access$502(io.dcloud.common.core.ui.DCKeyboardManager,java.lang.Runnable) -> access$502
    1:1:io.dcloud.common.core.ui.a access$600(io.dcloud.common.core.ui.DCKeyboardManager) -> access$600
    1:1:int access$700(io.dcloud.common.core.ui.DCKeyboardManager) -> access$700
    1:1:float access$800(io.dcloud.common.core.ui.DCKeyboardManager) -> access$800
    1:5:void dhAppRootIsReady(io.dcloud.common.core.ui.a) -> dhAppRootIsReady
    1:8:void fireKeyboardEvent(io.dcloud.common.DHInterface.IFrameView,int) -> fireKeyboardEvent
    1:21:java.lang.String getActivityInput(android.app.Activity) -> getActivityInput
    1:3:java.lang.String getFrameSoftInputMode() -> getFrameSoftInputMode
    1:1:java.lang.String getFrontInputType() -> getFrontInputType
    1:4:io.dcloud.common.core.ui.DCKeyboardManager getInstance() -> getInstance
    1:11:int getKeyBoardHeight() -> getKeyBoardHeight
    1:1:android.view.View getNativeInput() -> getNativeInput
    1:11:android.view.View getScrollView(android.view.View) -> getScrollView
    1:2:boolean isTakeOver() -> isTakeOver
    1:5:void keyboardHide(io.dcloud.common.adapter.ui.AdaFrameView,android.view.View,java.lang.String) -> keyboardHide
    1:27:void keyboardShow(android.view.View,int,java.lang.String,boolean) -> keyboardShow
    1:34:void nativeEditTextFocus(java.lang.String,android.view.View,boolean,java.lang.String,float) -> nativeEditTextFocus
    1:16:void onCreate(android.app.Activity) -> onCreate
    1:102:void onKeyboardChanged(int,boolean) -> onKeyboardChanged
    1:8:void onStop() -> onStop
    1:1:void setAdjust(boolean) -> setAdjust
    1:1:void setContentView(io.dcloud.common.DHInterface.IActivityHandler) -> setContentView
    1:1:void setFrontInputType(java.lang.String) -> setFrontInputType
    1:42:void setHTMLInputRect(io.dcloud.common.DHInterface.IWebview,java.lang.String) -> setHTMLInputRect
    1:3:void setNativeInput(android.view.View,float) -> setNativeInput
io.dcloud.common.core.ui.DCKeyboardManager$a -> io.dcloud.common.core.ui.DCKeyboardManager$a:
    1:1:void <init>(io.dcloud.common.core.ui.DCKeyboardManager,android.app.Activity) -> <init>
    1:65:void onGlobalLayout() -> onGlobalLayout
io.dcloud.common.core.ui.DCKeyboardManager$a$a -> io.dcloud.common.core.ui.DCKeyboardManager$a$a:
    1:1:void <init>(io.dcloud.common.core.ui.DCKeyboardManager$a,int) -> <init>
    1:4:void run() -> run
io.dcloud.common.core.ui.DCKeyboardManager$a$b -> io.dcloud.common.core.ui.DCKeyboardManager$a$b:
    1:1:void <init>(io.dcloud.common.core.ui.DCKeyboardManager$a) -> <init>
    1:6:void run() -> run
io.dcloud.common.core.ui.DCKeyboardManager$b -> io.dcloud.common.core.ui.DCKeyboardManager$b:
    1:1:void <init>(io.dcloud.common.core.ui.DCKeyboardManager) -> <init>
    1:2:void run() -> run
io.dcloud.common.core.ui.DCKeyboardManager$c -> io.dcloud.common.core.ui.DCKeyboardManager$c:
    1:1:void <init>(io.dcloud.common.core.ui.DCKeyboardManager) -> <init>
    1:2:void run() -> run
io.dcloud.common.core.ui.DCKeyboardManager$d -> io.dcloud.common.core.ui.DCKeyboardManager$d:
    1:1:void <init>(io.dcloud.common.core.ui.DCKeyboardManager,java.lang.String,io.dcloud.common.adapter.ui.AdaFrameView,android.view.View) -> <init>
    1:13:void run() -> run
io.dcloud.common.core.ui.DCKeyboardManager$e -> io.dcloud.common.core.ui.DCKeyboardManager$e:
    1:1:void <init>(io.dcloud.common.core.ui.DCKeyboardManager,int,android.view.View) -> <init>
    1:3:void run() -> run
io.dcloud.common.core.ui.TabBarWebview -> io.dcloud.common.core.ui.TabBarWebview:
    1:34:void <init>(android.content.Context,io.dcloud.common.DHInterface.IApp,io.dcloud.common.core.ui.l,io.dcloud.common.core.ui.c,org.json.JSONObject) -> <init>
    1:1:com.dcloud.android.widget.TabView access$000(io.dcloud.common.core.ui.TabBarWebview) -> access$000
    1:16:void append(java.lang.String,io.dcloud.common.DHInterface.ICallBack) -> append
    17:65:void append(io.dcloud.common.core.ui.b) -> append
    1:2:boolean checkPagePathIsTab(java.lang.String) -> checkPagePathIsTab
    1:7:boolean checkUrlToReload(java.lang.String) -> checkUrlToReload
    1:4:void dispose() -> dispose
    1:1:float getScale() -> getScale
    1:1:int getSelectIndex() -> getSelectIndex
    1:1:java.lang.String getTabBarHeight() -> getTabBarHeight
    1:41:void hideTabBar(com.alibaba.fastjson.JSONObject) -> hideTabBar
    1:1:void hideTabBarRedDot(com.alibaba.fastjson.JSONObject) -> hideTabBarRedDot
    1:10:void initPagePaths(com.alibaba.fastjson.JSONObject) -> initPagePaths
    1:3:boolean isInsertLauch() -> isInsertLauch
    1:1:boolean isVisible() -> isVisible
    1:1:io.dcloud.common.DHInterface.IApp obtainApp() -> obtainApp
    1:1:android.view.ViewGroup obtainWindowView() -> obtainWindowView
    1:1:void onResize() -> onResize
    1:9:void popFrame(java.lang.String) -> popFrame
    1:9:void pushFrame(java.lang.String) -> pushFrame
    1:4:void removeFrameView(io.dcloud.common.core.ui.b) -> removeFrameView
    1:1:void removeTabBarBadge(com.alibaba.fastjson.JSONObject) -> removeTabBarBadge
    1:1:void setClickCallBack(io.dcloud.common.DHInterface.ICallBack) -> setClickCallBack
    1:1:void setDoubleClickCallBack(io.dcloud.common.DHInterface.ICallBack) -> setDoubleClickCallBack
    1:1:void setItem(com.alibaba.fastjson.JSONObject) -> setItem
    1:1:void setMask(com.alibaba.fastjson.JSONObject) -> setMask
    1:1:void setMaskButtonClickCallBack(io.dcloud.common.DHInterface.ICallBack) -> setMaskButtonClickCallBack
    1:1:void setMidButtonClickCallBack(io.dcloud.common.DHInterface.ICallBack) -> setMidButtonClickCallBack
    1:3:void setStyle(com.alibaba.fastjson.JSONObject) -> setStyle
    1:1:void setTabBarBadge(com.alibaba.fastjson.JSONObject) -> setTabBarBadge
    1:29:void setTabItemsBottomMargin(int) -> setTabItemsBottomMargin
    1:32:void showTabBar(com.alibaba.fastjson.JSONObject) -> showTabBar
    1:1:void showTabBarRedDot(com.alibaba.fastjson.JSONObject) -> showTabBarRedDot
    1:2:void switchSelect(int) -> switchSelect
    1:7:void tabItemActive(io.dcloud.common.core.ui.b) -> tabItemActive
io.dcloud.common.core.ui.TabBarWebview$a -> io.dcloud.common.core.ui.TabBarWebview$a:
    1:1:void <init>(io.dcloud.common.core.ui.TabBarWebview,io.dcloud.common.core.ui.b) -> <init>
    1:1:void run() -> run
io.dcloud.common.core.ui.TabBarWebview$b -> io.dcloud.common.core.ui.TabBarWebview$b:
    1:1:void <init>(io.dcloud.common.core.ui.TabBarWebview) -> <init>
    1:1:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
io.dcloud.common.core.ui.TabBarWebview$c -> io.dcloud.common.core.ui.TabBarWebview$c:
    1:1:void <init>(io.dcloud.common.core.ui.TabBarWebview) -> <init>
    1:1:void run() -> run
io.dcloud.common.core.ui.TabBarWebview$d -> io.dcloud.common.core.ui.TabBarWebview$d:
    1:1:void <init>(io.dcloud.common.core.ui.TabBarWebview) -> <init>
    1:1:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
io.dcloud.common.core.ui.TabBarWebview$e -> io.dcloud.common.core.ui.TabBarWebview$e:
    1:1:void <init>(io.dcloud.common.core.ui.TabBarWebview,io.dcloud.common.core.ui.b) -> <init>
    1:5:void run() -> run
io.dcloud.common.core.ui.TabBarWebviewMgr -> io.dcloud.common.core.ui.TabBarWebviewMgr:
    1:1:void <init>() -> <init>
    1:4:io.dcloud.common.core.ui.TabBarWebviewMgr getInstance() -> getInstance
    1:1:io.dcloud.common.core.ui.TabBarWebview getLaunchTabBar() -> getLaunchTabBar
    1:1:void setLancheTabBar(io.dcloud.common.core.ui.TabBarWebview) -> setLancheTabBar
io.dcloud.common.core.ui.a -> io.dcloud.common.core.ui.a:
    1:1524:void <init>(android.content.Context,io.dcloud.common.DHInterface.IApp,io.dcloud.common.core.ui.b) -> <init>
    1:1:java.util.Stack a(io.dcloud.common.core.ui.a) -> a
    2:2:boolean a(io.dcloud.common.core.ui.a,boolean) -> a
    3:6:void a(io.dcloud.common.core.ui.b,int,int) -> a
    7:40:void a(java.util.ArrayList,java.util.ArrayList) -> a
    41:47:boolean a(com.dcloud.android.graphics.Region) -> a
    48:48:boolean a(java.util.ArrayList,io.dcloud.common.core.ui.b) -> a
    49:51:boolean a(com.dcloud.android.graphics.Region,int,int,int,int) -> a
    52:55:void a(io.dcloud.common.core.ui.b) -> a
    56:60:void a(io.dcloud.common.DHInterface.IApp) -> a
    61:63:io.dcloud.common.core.ui.b a(int) -> a
    64:84:void a(io.dcloud.common.core.ui.a,io.dcloud.common.core.ui.b,int,boolean,int) -> a
    85:165:void a(io.dcloud.common.core.ui.a,int) -> a
    166:171:java.lang.Object a(android.view.View,io.dcloud.common.DHInterface.ICallBack) -> a
    172:182:void a(java.util.ArrayList) -> a
    183:197:void a(io.dcloud.common.DHInterface.IFrameView,java.util.ArrayList) -> a
    198:204:void a(io.dcloud.common.core.ui.b,io.dcloud.common.core.ui.b) -> a
    205:299:io.dcloud.common.adapter.ui.DHImageView a(io.dcloud.common.core.ui.b,int,boolean) -> a
    300:301:boolean a(android.view.ViewGroup) -> a
    1:1:java.util.ArrayList b(io.dcloud.common.core.ui.a) -> b
    2:170:void b(io.dcloud.common.core.ui.b) -> b
    171:171:void b(java.util.ArrayList,io.dcloud.common.core.ui.b) -> b
    172:188:void b() -> b
    189:191:void b(io.dcloud.common.DHInterface.IApp) -> b
    1:1:java.util.ArrayList c(io.dcloud.common.core.ui.a) -> c
    2:2:int c(io.dcloud.common.core.ui.b) -> c
    3:14:void c() -> c
    1:1:io.dcloud.common.adapter.util.ViewOptions d(io.dcloud.common.core.ui.a) -> d
    2:3:boolean d(io.dcloud.common.core.ui.b) -> d
    4:4:java.util.ArrayList d() -> d
    1:1:boolean didCloseSplash() -> didCloseSplash
    0:16:void dispose() -> dispose
    1:1:io.dcloud.common.adapter.util.ViewOptions e(io.dcloud.common.core.ui.a) -> e
    2:2:java.util.Stack e() -> e
    3:30:int e(io.dcloud.common.core.ui.b) -> e
    1:1:io.dcloud.common.core.ui.b f() -> f
    2:5:void f(io.dcloud.common.core.ui.b) -> f
    1:10:io.dcloud.common.DHInterface.IFrameView findFrameViewB(io.dcloud.common.DHInterface.IFrameView) -> findFrameViewB
    1:1:void g(io.dcloud.common.core.ui.b) -> g
    2:2:io.dcloud.common.core.ui.b g() -> g
    1:4:void goHome(io.dcloud.common.DHInterface.IFrameView) -> goHome
    1:6:void h() -> h
    7:27:void h(io.dcloud.common.core.ui.b) -> h
    1:4:io.dcloud.common.core.ui.b i() -> i
    5:8:void i(io.dcloud.common.core.ui.b) -> i
    1:15:void j() -> j
    1:3:void k() -> k
    1:1:void l() -> l
    1:5:void m() -> m
    1:21:void onAppActive(io.dcloud.common.DHInterface.IApp) -> onAppActive
    1:21:void onAppStart(io.dcloud.common.DHInterface.IApp) -> onAppStart
    1:1:void onAppStop(io.dcloud.common.DHInterface.IApp) -> onAppStop
    1:2:void onAppUnActive(io.dcloud.common.DHInterface.IApp) -> onAppUnActive
    1:333:boolean onExecute(io.dcloud.common.DHInterface.ISysEventListener$SysEventType,java.lang.Object) -> onExecute
    1:38:void onRootViewGlobalLayout(android.view.View) -> onRootViewGlobalLayout
    1:5:void reload(boolean) -> reload
    6:30:void reload(java.lang.String) -> reload
io.dcloud.common.core.ui.a$a -> io.dcloud.common.core.ui.a$a:
    1:1:void <clinit>() -> <clinit>
io.dcloud.common.core.ui.a$b -> io.dcloud.common.core.ui.a$b:
    1:1:void <init>(io.dcloud.common.core.ui.a) -> <init>
    1:7:java.lang.Object onCallBack(int,java.lang.Object) -> onCallBack
io.dcloud.common.core.ui.a$c -> io.dcloud.common.core.ui.a$c:
    1:1:void <init>(io.dcloud.common.core.ui.a,io.dcloud.common.core.ui.b) -> <init>
    1:4:void execute(java.lang.Object) -> execute
io.dcloud.common.core.ui.a$d -> io.dcloud.common.core.ui.a$d:
    1:1:void <init>(io.dcloud.common.core.ui.a,java.util.ArrayList) -> <init>
    1:12:void execute(java.lang.Object) -> execute
io.dcloud.common.core.ui.a$e -> io.dcloud.common.core.ui.a$e:
    1:1:void <init>(io.dcloud.common.core.ui.a) -> <init>
    1:2:void run() -> run
io.dcloud.common.core.ui.a$f -> io.dcloud.common.core.ui.a$f:
    1:1:void <init>(io.dcloud.common.core.ui.a,boolean,io.dcloud.common.core.ui.a,int) -> <init>
    1:2:void execute(java.lang.Object) -> execute
io.dcloud.common.core.ui.a$g -> io.dcloud.common.core.ui.a$g:
    1:1:void <init>(io.dcloud.common.core.ui.a,io.dcloud.common.core.ui.a,int) -> <init>
    1:2:void run() -> run
io.dcloud.common.core.ui.a$h -> io.dcloud.common.core.ui.a$h:
    1:1:void <init>(io.dcloud.common.core.ui.a) -> <init>
    1:5:java.lang.Object onCallBack(int,java.lang.Object) -> onCallBack
io.dcloud.common.core.ui.a$i -> io.dcloud.common.core.ui.a$i:
    1:1:void <init>(io.dcloud.common.core.ui.a) -> <init>
    1:5:void onGlobalLayout() -> onGlobalLayout
io.dcloud.common.core.ui.a$j -> io.dcloud.common.core.ui.a$j:
    1:1:void <init>(io.dcloud.common.core.ui.a) -> <init>
    1:5:void execute(java.lang.Object) -> execute
io.dcloud.common.core.ui.a$k -> io.dcloud.common.core.ui.a$k:
    1:3:void <init>(io.dcloud.common.core.ui.a) -> <init>
    1:6:void a(io.dcloud.common.core.ui.b) -> a
    7:7:int a() -> a
    1:2:void b(io.dcloud.common.core.ui.b) -> b
io.dcloud.common.core.ui.a$l -> io.dcloud.common.core.ui.a$l:
    1:33:void <init>(io.dcloud.common.core.ui.a,android.content.Context,io.dcloud.common.core.ui.a) -> <init>
    1:12:void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    1:26:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    1:4:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    1:3:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    1:1:void onLayout(boolean,int,int,int,int) -> onLayout
    1:3:void onMeasure(int,int) -> onMeasure
    1:18:void onSizeChanged(int,int,int,int) -> onSizeChanged
io.dcloud.common.core.ui.a$l$a -> io.dcloud.common.core.ui.a$l$a:
    1:1:void <init>(io.dcloud.common.core.ui.a$l) -> <init>
    1:2:java.lang.Object onCallBack(int,java.lang.Object) -> onCallBack
io.dcloud.common.core.ui.a$l$b -> io.dcloud.common.core.ui.a$l$b:
    1:1:void <init>(io.dcloud.common.core.ui.a$l) -> <init>
    1:4:void run() -> run
io.dcloud.common.core.ui.a$l$c -> io.dcloud.common.core.ui.a$l$c:
    1:3:void <init>(io.dcloud.common.core.ui.a$l) -> <init>
    1:7:void run() -> run
io.dcloud.common.core.ui.a$n -> io.dcloud.common.core.ui.a$n:
    1:1:void <init>(io.dcloud.common.core.ui.a) -> <init>
    1:5:int a(io.dcloud.common.core.ui.b,io.dcloud.common.core.ui.b) -> a
    1:1:int compare(java.lang.Object,java.lang.Object) -> compare
io.dcloud.common.core.ui.a$o -> io.dcloud.common.core.ui.a$o:
    1:1:void <init>(io.dcloud.common.core.ui.a) -> <init>
    1:6:int a(io.dcloud.common.adapter.ui.AdaFrameItem,io.dcloud.common.adapter.ui.AdaFrameItem) -> a
    1:1:int compare(java.lang.Object,java.lang.Object) -> compare
io.dcloud.common.core.ui.b -> io.dcloud.common.core.ui.b:
    1:680:void <init>(android.content.Context,io.dcloud.common.core.ui.l,io.dcloud.common.DHInterface.IApp,io.dcloud.common.core.ui.a,int,java.lang.Object) -> <init>
    1:1:java.lang.Boolean a(io.dcloud.common.core.ui.b,java.lang.Boolean) -> a
    2:2:boolean a(io.dcloud.common.core.ui.b,boolean) -> a
    3:3:io.dcloud.common.adapter.util.ViewOptions a(io.dcloud.common.core.ui.b) -> a
    4:34:void a(boolean) -> a
    35:36:void a(io.dcloud.common.adapter.util.ViewOptions,io.dcloud.common.adapter.ui.AdaFrameItem,io.dcloud.common.adapter.ui.AdaFrameItem,io.dcloud.common.adapter.ui.AdaFrameItem) -> a
    37:38:void a(android.view.View,int,int,java.lang.String) -> a
    39:42:void a(java.util.ArrayList) -> a
    43:49:void a(int,int) -> a
    50:58:android.view.View a(android.view.View) -> a
    1:1:io.dcloud.common.adapter.util.ViewOptions b(io.dcloud.common.core.ui.b) -> b
    2:17:void b(io.dcloud.common.adapter.util.ViewOptions,io.dcloud.common.adapter.ui.AdaFrameItem,io.dcloud.common.adapter.ui.AdaFrameItem,io.dcloud.common.adapter.ui.AdaFrameItem) -> b
    18:51:void b(boolean) -> b
    52:54:void b() -> b
    1:21:void c(boolean) -> c
    22:30:void c() -> c
    1:1:boolean d() -> d
    2:2:void d(boolean) -> d
    1:20:void dispose() -> dispose
    1:1:boolean e() -> e
    1:1:boolean f() -> f
    1:3:boolean g() -> g
    1:1:io.dcloud.common.adapter.ui.AdaFrameItem getParent() -> getParent
    1:6:void h() -> h
    1:9:void i() -> i
    1:2:void initMainView(android.content.Context,int,java.lang.Object) -> initMainView
    1:1:void j() -> j
    1:24:void k() -> k
    1:1:void l() -> l
    1:17:void m() -> m
    1:18:void n() -> n
    1:14:void o() -> o
    1:1:io.dcloud.common.DHInterface.IApp obtainApp() -> obtainApp
    1:2:java.lang.String obtainPrePlusreadyJs() -> obtainPrePlusreadyJs
    1:1:io.dcloud.common.DHInterface.IWebAppRootView obtainWebAppRootView() -> obtainWebAppRootView
    1:1:io.dcloud.common.DHInterface.IWebview obtainWebView() -> obtainWebView
    1:1:io.dcloud.common.adapter.ui.AdaWebViewParent obtainWebviewParent() -> obtainWebviewParent
    1:1:io.dcloud.common.DHInterface.AbsMgr obtainWindowMgr() -> obtainWindowMgr
    1:5:void onConfigurationChanged() -> onConfigurationChanged
    1:3:void onDestroy() -> onDestroy
    1:4:boolean onDispose() -> onDispose
    1:1:void onInit() -> onInit
    1:1:void onLoading() -> onLoading
    1:7:void onPopFromStack(boolean) -> onPopFromStack
    1:3:void onPreLoading() -> onPreLoading
    1:1:void onPreShow(io.dcloud.common.DHInterface.IFrameView) -> onPreShow
    1:11:void p() -> p
    1:4:void popFromViewStack() -> popFromViewStack
    1:4:void pushToViewStack() -> pushToViewStack
    1:2:void q() -> q
    1:2:void r() -> r
    1:1:void s() -> s
    1:1:void setNeedRender(boolean) -> setNeedRender
    1:5:void setVisible(boolean,boolean) -> setVisible
    1:2:void startAnimator(int) -> startAnimator
    1:1:void t() -> t
    1:1:java.lang.String toString() -> toString
    1:2:void transition(byte) -> transition
io.dcloud.common.core.ui.b$a -> io.dcloud.common.core.ui.b$a:
    1:1:void <init>(io.dcloud.common.core.ui.b) -> <init>
    1:1:void a(io.dcloud.common.core.ui.b$a) -> a
    2:40:void a() -> a
    1:1:void onAnimationCancel(io.dcloud.nineoldandroids.animation.Animator) -> onAnimationCancel
    1:23:void onAnimationEnd(io.dcloud.nineoldandroids.animation.Animator) -> onAnimationEnd
    1:5:void onAnimationStart(io.dcloud.nineoldandroids.animation.Animator) -> onAnimationStart
io.dcloud.common.core.ui.b$a$a -> io.dcloud.common.core.ui.b$a$a:
    1:1:void <init>(io.dcloud.common.core.ui.b$a) -> <init>
    1:2:void run() -> run
io.dcloud.common.core.ui.c -> io.dcloud.common.core.ui.c:
    1:4:void <init>(android.content.Context,io.dcloud.common.core.ui.l,io.dcloud.common.DHInterface.IApp,io.dcloud.common.core.ui.a,int,org.json.JSONObject) -> <init>
    1:3:void c(io.dcloud.common.core.ui.b) -> c
    1:2:boolean checkPagePathIsTab(java.lang.String) -> checkPagePathIsTab
    1:3:void d(io.dcloud.common.core.ui.b) -> d
    1:3:void dispose() -> dispose
    1:2:void initMainView(android.content.Context,int,java.lang.Object) -> initMainView
    1:2:void removeFrameView(io.dcloud.common.core.ui.b) -> removeFrameView
    1:1:io.dcloud.common.core.ui.b u() -> u
io.dcloud.common.core.ui.d -> io.dcloud.common.core.ui.d:
    1:3:void <init>(android.content.Context,io.dcloud.common.core.ui.b,java.lang.String,java.lang.String,org.json.JSONObject,boolean) -> <init>
    1:2:io.dcloud.common.DHInterface.IApp obtainApp() -> obtainApp
io.dcloud.common.core.ui.e -> io.dcloud.common.core.ui.e:
    1:9:void <init>(android.content.Context,io.dcloud.common.DHInterface.AbsMgr,io.dcloud.common.core.ui.b) -> <init>
    10:18:void <init>(android.content.Context,io.dcloud.common.DHInterface.AbsMgr,io.dcloud.common.core.ui.b,io.dcloud.common.DHInterface.IDCloudWebviewClientListener) -> <init>
    1:2:io.dcloud.common.DHInterface.IApp obtainApp() -> obtainApp
    1:3:void show(android.view.animation.Animation) -> show
io.dcloud.common.core.ui.f -> io.dcloud.common.core.ui.f:
    1:2:void b() -> b
io.dcloud.common.core.ui.g -> io.dcloud.common.core.ui.g:
    1:1084:void <init>(io.dcloud.common.DHInterface.IFrameView,android.content.Context) -> <init>
    1:1:android.view.View a(io.dcloud.common.core.ui.g) -> a
    2:2:android.view.View a(io.dcloud.common.core.ui.g,android.view.View) -> a
    3:3:java.lang.String a(io.dcloud.common.core.ui.g,java.lang.String) -> a
    4:4:io.dcloud.nineoldandroids.animation.ValueAnimator a(io.dcloud.common.core.ui.g,android.view.View,int,int,boolean,boolean) -> a
    5:5:void a(io.dcloud.common.core.ui.g,boolean) -> a
    6:6:void a(io.dcloud.common.core.ui.g,android.view.View,int) -> a
    7:7:boolean a(boolean) -> a
    8:8:void a(io.dcloud.common.core.ui.g,java.lang.String,boolean,boolean,java.lang.String) -> a
    9:9:int a(io.dcloud.common.core.ui.g,int) -> a
    10:10:void a(io.dcloud.common.core.ui.g,boolean,boolean) -> a
    11:11:io.dcloud.nineoldandroids.animation.ValueAnimator a(io.dcloud.common.core.ui.g,android.view.View,int,int,boolean) -> a
    12:242:boolean a(android.view.MotionEvent) -> a
    243:266:void a(org.json.JSONObject) -> a
    267:286:boolean a(android.view.View,android.view.View) -> a
    287:290:void a() -> a
    291:293:void a(boolean,boolean) -> a
    294:299:void a(android.view.View,int) -> a
    300:300:io.dcloud.nineoldandroids.animation.ValueAnimator a(android.view.View,int,int,boolean) -> a
    301:410:io.dcloud.nineoldandroids.animation.ValueAnimator a(android.view.View,int,int,boolean,boolean) -> a
    411:411:void a(java.lang.String,boolean,java.lang.String) -> a
    412:482:void a(java.lang.String,boolean,boolean,java.lang.String) -> a
    483:495:android.view.View a(java.lang.String) -> a
    496:509:float a(float) -> a
    510:516:int a(android.view.View) -> a
    517:518:boolean a(io.dcloud.common.core.ui.b) -> a
    1:1:java.lang.String b(io.dcloud.common.core.ui.g) -> b
    2:2:boolean b(io.dcloud.common.core.ui.g,boolean) -> b
    3:3:boolean b(io.dcloud.common.core.ui.g,java.lang.String) -> b
    4:4:void b(io.dcloud.common.core.ui.g,android.view.View,int) -> b
    5:5:int b(io.dcloud.common.core.ui.g,android.view.View) -> b
    6:27:void b(android.view.MotionEvent) -> b
    28:190:int b(java.lang.String) -> b
    191:193:void b(boolean) -> b
    194:198:void b() -> b
    199:202:int b(android.view.View) -> b
    203:214:void b(android.view.View,int) -> b
    1:1:int c(io.dcloud.common.core.ui.g) -> c
    2:2:int c(io.dcloud.common.core.ui.g,android.view.View) -> c
    3:3:void c(boolean) -> c
    4:66:boolean c(android.view.MotionEvent) -> c
    67:71:void c() -> c
    72:74:java.lang.String c(java.lang.String) -> c
    1:1:int d(io.dcloud.common.core.ui.g) -> d
    2:48:boolean d(android.view.MotionEvent) -> d
    49:52:void d() -> d
    53:60:boolean d(java.lang.String) -> d
    1:1:java.lang.String e(io.dcloud.common.core.ui.g) -> e
    2:4:java.util.HashMap e() -> e
    5:62:boolean e(java.lang.String) -> e
    63:176:boolean e(android.view.MotionEvent) -> e
    1:1:int f(io.dcloud.common.core.ui.g) -> f
    2:31:boolean f(android.view.MotionEvent) -> f
    32:78:boolean f() -> f
    1:1:int g(io.dcloud.common.core.ui.g) -> g
    2:34:boolean g(android.view.MotionEvent) -> g
    35:36:boolean g() -> g
    1:1:int h(io.dcloud.common.core.ui.g) -> h
    2:66:boolean h() -> h
    1:1:boolean i(io.dcloud.common.core.ui.g) -> i
    2:9:void i() -> i
    1:1:io.dcloud.common.core.ui.b j(io.dcloud.common.core.ui.g) -> j
    2:8:boolean j() -> j
    1:1:int k(io.dcloud.common.core.ui.g) -> k
    2:19:void k() -> k
    1:1:io.dcloud.common.core.ui.b l(io.dcloud.common.core.ui.g) -> l
    1:1:java.lang.String m(io.dcloud.common.core.ui.g) -> m
    1:1:java.lang.String n(io.dcloud.common.core.ui.g) -> n
    1:1:java.lang.String o(io.dcloud.common.core.ui.g) -> o
    1:1:java.lang.String p(io.dcloud.common.core.ui.g) -> p
    1:1:int q(io.dcloud.common.core.ui.g) -> q
    1:1:int r(io.dcloud.common.core.ui.g) -> r
    1:1:android.view.View s(io.dcloud.common.core.ui.g) -> s
    1:1:int t(io.dcloud.common.core.ui.g) -> t
io.dcloud.common.core.ui.g$a -> io.dcloud.common.core.ui.g$a:
    1:1:void <init>(io.dcloud.common.core.ui.g) -> <init>
    1:26:void onGlobalLayout() -> onGlobalLayout
io.dcloud.common.core.ui.g$b -> io.dcloud.common.core.ui.g$b:
    1:1:void <init>(io.dcloud.common.core.ui.g) -> <init>
    1:107:void onGlobalLayout() -> onGlobalLayout
io.dcloud.common.core.ui.g$c -> io.dcloud.common.core.ui.g$c:
    1:1:void <init>(io.dcloud.common.core.ui.g) -> <init>
    1:161:void onGlobalLayout() -> onGlobalLayout
io.dcloud.common.core.ui.g$d -> io.dcloud.common.core.ui.g$d:
    1:1:void <init>(io.dcloud.common.core.ui.g,boolean,boolean,android.view.View,int) -> <init>
    1:83:void onAnimationEnd(io.dcloud.nineoldandroids.animation.Animator) -> onAnimationEnd
    1:1:void onAnimationStart(io.dcloud.nineoldandroids.animation.Animator) -> onAnimationStart
io.dcloud.common.core.ui.g$e -> io.dcloud.common.core.ui.g$e:
    1:1:void <init>(io.dcloud.common.core.ui.g,android.view.View) -> <init>
    1:18:void onAnimationUpdate(io.dcloud.nineoldandroids.animation.ValueAnimator) -> onAnimationUpdate
io.dcloud.common.core.ui.g$f -> io.dcloud.common.core.ui.g$f:
    1:1:void <init>(io.dcloud.common.core.ui.g) -> <init>
    1:136:void onGlobalLayout() -> onGlobalLayout
io.dcloud.common.core.ui.h -> io.dcloud.common.core.ui.h:
    1:14:void <init>(io.dcloud.common.DHInterface.IWebview) -> <init>
    1:1:java.lang.String exec(java.lang.String,java.lang.String,java.lang.String) -> exec
    2:25:java.lang.String exec(java.lang.String,java.lang.String,org.json.JSONArray) -> exec
    1:2:void forceStop(java.lang.String) -> forceStop
    1:21:java.lang.String prompt(java.lang.String,java.lang.String) -> prompt
io.dcloud.common.core.ui.h$a -> io.dcloud.common.core.ui.h$a:
    1:1:void <init>(io.dcloud.common.core.ui.h) -> <init>
    1:5:void execute(java.lang.Object) -> execute
io.dcloud.common.core.ui.i -> io.dcloud.common.core.ui.i:
    1:1:void a(io.dcloud.common.core.ui.b) -> a
    2:57:void a(io.dcloud.common.core.ui.b,int) -> a
    58:208:void a(int,io.dcloud.common.core.ui.b,io.dcloud.common.core.ui.b) -> a
    209:221:void a(io.dcloud.common.core.ui.b,io.dcloud.common.core.ui.b) -> a
    1:5:boolean b(io.dcloud.common.core.ui.b) -> b
    6:121:void b(int,io.dcloud.common.core.ui.b,io.dcloud.common.core.ui.b) -> b
    1:7:void c(io.dcloud.common.core.ui.b) -> c
io.dcloud.common.core.ui.i$a -> io.dcloud.common.core.ui.i$a:
    1:1:void <init>(io.dcloud.common.core.ui.b) -> <init>
    1:19:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    1:4:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
io.dcloud.common.core.ui.i$b -> io.dcloud.common.core.ui.i$b:
    1:1:void <init>(io.dcloud.common.core.ui.b) -> <init>
    1:11:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    1:5:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
io.dcloud.common.core.ui.i$b$a -> io.dcloud.common.core.ui.i$b$a:
    1:1:void <init>(io.dcloud.common.core.ui.i$b) -> <init>
    1:15:void run() -> run
io.dcloud.common.core.ui.i$c -> io.dcloud.common.core.ui.i$c:
    1:1:void <init>(io.dcloud.common.core.ui.b) -> <init>
    1:8:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    1:1:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
io.dcloud.common.core.ui.i$d -> io.dcloud.common.core.ui.i$d:
    1:1:void <init>(io.dcloud.common.core.ui.b) -> <init>
    1:8:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    1:1:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
io.dcloud.common.core.ui.j -> io.dcloud.common.core.ui.j:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>(android.view.ViewGroup,io.dcloud.common.core.ui.j$c,io.dcloud.common.core.ui.a) -> <init>
    2:899:void <init>(android.content.Context,android.view.ViewGroup,io.dcloud.common.core.ui.j$c,io.dcloud.common.core.ui.a) -> <init>
    1:10:void a(android.view.View,int) -> a
    11:16:void a() -> a
    17:32:int a(android.view.View,int,int,int,int) -> a
    33:33:int a(int,int,int) -> a
    34:34:float a(float,float,float) -> a
    35:35:float a(float) -> a
    36:68:boolean a(boolean) -> a
    69:76:void a(float,float) -> a
    77:87:void a(int) -> a
    88:438:void a(android.view.MotionEvent) -> a
    439:454:void a(float,float,int) -> a
    455:468:boolean a(float,float,int,int) -> a
    469:477:boolean a(android.view.View,float,float) -> a
    478:488:void a(int,int,int,int) -> a
    489:490:boolean a(android.view.View,int,int) -> a
    491:498:android.view.View a(int,int) -> a
    1:1:void b(float) -> b
    2:18:boolean b(int,int,int,int) -> b
    19:33:int b(int,int,int) -> b
    34:44:void b() -> b
    45:70:void b(int) -> b
    71:76:void b(float,float,int) -> b
    77:83:void b(android.view.MotionEvent) -> b
    84:90:boolean b(android.view.View,int) -> b
    91:97:int b(int,int) -> b
    1:1:int c() -> c
    2:2:boolean c(int) -> c
    3:283:boolean c(android.view.MotionEvent) -> c
    284:284:boolean c(int,int) -> c
    1:5:void d(int) -> d
    6:6:boolean d(int,int) -> d
    7:18:void d() -> d
    1:1:void e(int) -> e
    2:11:boolean e(int,int) -> e
    1:1:void f(int) -> f
io.dcloud.common.core.ui.j$a -> io.dcloud.common.core.ui.j$a:
    1:1:void <init>() -> <init>
io.dcloud.common.core.ui.j$b -> io.dcloud.common.core.ui.j$b:
    1:1:void <init>(io.dcloud.common.core.ui.j) -> <init>
    1:1:void run() -> run
io.dcloud.common.core.ui.j$c -> io.dcloud.common.core.ui.j$c:
    1:1:void <init>() -> <init>
io.dcloud.common.core.ui.k -> io.dcloud.common.core.ui.k:
    1:51:void <init>(android.content.Context,io.dcloud.common.core.ui.a) -> <init>
    1:1:android.view.View a(io.dcloud.common.core.ui.k) -> a
    2:2:io.dcloud.common.core.ui.b a(io.dcloud.common.core.ui.k,io.dcloud.common.core.ui.b) -> a
    3:3:android.view.View a(io.dcloud.common.core.ui.k,android.view.View) -> a
    4:4:int a(io.dcloud.common.core.ui.k,int) -> a
    5:5:float a(io.dcloud.common.core.ui.k,float) -> a
    6:8:void a(android.graphics.drawable.Drawable,int) -> a
    9:9:void a(int,int) -> a
    10:16:void a(android.graphics.Canvas,android.view.View) -> a
    17:23:void a(io.dcloud.common.core.ui.b) -> a
    24:31:void a() -> a
    32:33:void a(io.dcloud.common.adapter.ui.AdaFrameView,java.lang.String,java.lang.Object) -> a
    1:1:io.dcloud.common.core.ui.b b(io.dcloud.common.core.ui.k) -> b
    2:2:void b(io.dcloud.common.core.ui.k,io.dcloud.common.core.ui.b) -> b
    3:3:int b(io.dcloud.common.core.ui.k,int) -> b
    4:9:void b() -> b
    1:1:io.dcloud.common.core.ui.b c(io.dcloud.common.core.ui.k) -> c
    2:2:io.dcloud.common.core.ui.b c(io.dcloud.common.core.ui.k,io.dcloud.common.core.ui.b) -> c
    3:7:void c() -> c
    1:4:void computeScroll() -> computeScroll
    1:1:void d(io.dcloud.common.core.ui.k) -> d
    1:5:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    1:1:void e(io.dcloud.common.core.ui.k) -> e
    1:1:boolean f(io.dcloud.common.core.ui.k) -> f
    1:1:int g(io.dcloud.common.core.ui.k) -> g
    1:1:io.dcloud.common.adapter.ui.DHImageView getLeftImageView() -> getLeftImageView
    1:1:io.dcloud.common.adapter.ui.DHImageView getRightImageView() -> getRightImageView
    1:1:io.dcloud.common.core.ui.j h(io.dcloud.common.core.ui.k) -> h
    1:1:int i(io.dcloud.common.core.ui.k) -> i
    1:1:io.dcloud.common.core.ui.k$b j(io.dcloud.common.core.ui.k) -> j
    1:1:int k(io.dcloud.common.core.ui.k) -> k
    1:1:float l(io.dcloud.common.core.ui.k) -> l
    1:1:android.graphics.drawable.Drawable m(io.dcloud.common.core.ui.k) -> m
    1:1:float n(io.dcloud.common.core.ui.k) -> n
    1:5:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1:8:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1:7:void requestLayout() -> requestLayout
    1:1:void setEdgeSize(int) -> setEdgeSize
    1:2:void setEdgeTrackingEnabled(int) -> setEdgeTrackingEnabled
    1:1:void setEnableGesture(boolean) -> setEnableGesture
    1:2:void setScrollThresHold(float) -> setScrollThresHold
    1:1:void setSwipeListener(io.dcloud.common.core.ui.k$b) -> setSwipeListener
io.dcloud.common.core.ui.k$c -> io.dcloud.common.core.ui.k$c:
    1:1:void <init>(io.dcloud.common.core.ui.k) -> <init>
    2:2:void <init>(io.dcloud.common.core.ui.k,io.dcloud.common.core.ui.k$a) -> <init>
    1:20:void a(android.view.View,int,int,int,int) -> a
    21:32:void a(android.view.View,float,float) -> a
    33:33:int a(android.view.View,int,int) -> a
    34:90:boolean a(io.dcloud.common.core.ui.b) -> a
    1:10:boolean b(android.view.View,int) -> b
    1:26:void c(int) -> c
io.dcloud.common.core.ui.keyboard.DCEditText -> io.dcloud.common.core.ui.keyboard.DCEditText:
    1:10:void <init>(android.content.Context,java.lang.String) -> <init>
    1:3:void destroy() -> destroy
    1:1:io.dcloud.common.core.ui.keyboard.DCEditText$OnKeyboardHeightChangeListener getKeyboardHeightChangeListener() -> getKeyboardHeightChangeListener
    1:2:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    1:1:void setCursorSpacing(float) -> setCursorSpacing
    1:1:void setInputSoftMode(java.lang.String) -> setInputSoftMode
    1:1:void setkeyBoardHeightChangeListener(io.dcloud.common.core.ui.keyboard.DCEditText$OnKeyboardHeightChangeListener) -> setkeyBoardHeightChangeListener
io.dcloud.common.core.ui.l -> io.dcloud.common.core.ui.l:
    1:1698:void <init>(io.dcloud.common.DHInterface.ICore) -> <init>
    1:1:void a(io.dcloud.common.core.ui.l,io.dcloud.common.DHInterface.IApp,io.dcloud.common.core.ui.a) -> a
    2:2:boolean a(io.dcloud.common.core.ui.l,io.dcloud.common.DHInterface.IApp) -> a
    2:4:void a(io.dcloud.common.core.ui.l$m) -> a
    5:14:void a(android.view.ViewGroup,io.dcloud.common.DHInterface.IApp,io.dcloud.common.DHInterface.IWebview,android.view.ViewGroup$LayoutParams) -> a
    14:33:boolean a(io.dcloud.common.DHInterface.IApp,java.lang.String) -> a
    34:254:void a(int,java.lang.Object) -> a
    255:284:void a(io.dcloud.common.DHInterface.IApp,io.dcloud.common.core.ui.a,java.lang.String,java.lang.String,org.json.JSONObject) -> a
    285:296:void a(io.dcloud.common.DHInterface.IApp,android.view.ViewGroup) -> a
    297:297:boolean a(io.dcloud.common.DHInterface.IApp) -> a
    298:404:void a(int,io.dcloud.common.core.ui.a,java.lang.String,io.dcloud.common.core.ui.b,io.dcloud.common.DHInterface.IApp,java.lang.String,io.dcloud.common.DHInterface.IWebview) -> a
    405:418:void a(int,io.dcloud.common.core.ui.a,io.dcloud.common.core.ui.b,int) -> a
    419:421:void a(io.dcloud.common.core.ui.a) -> a
    422:435:void a(io.dcloud.common.DHInterface.IApp,io.dcloud.common.DHInterface.IWebview,org.json.JSONObject) -> a
    436:437:void a(io.dcloud.common.DHInterface.IApp,io.dcloud.common.DHInterface.IWebview) -> a
    438:474:void a(io.dcloud.common.DHInterface.IApp,io.dcloud.common.core.ui.a) -> a
    475:499:void a(io.dcloud.common.DHInterface.IWebview,io.dcloud.common.DHInterface.IApp,boolean,io.dcloud.common.core.ui.a,int,io.dcloud.common.core.ui.b,int,int) -> a
    500:812:io.dcloud.common.core.ui.b a(int,io.dcloud.common.DHInterface.IApp,io.dcloud.common.core.ui.a,io.dcloud.common.core.ui.b,io.dcloud.common.DHInterface.IEventCallback,java.lang.Object[],io.dcloud.common.DHInterface.IDCloudWebviewClientListener) -> a
    813:861:void a(io.dcloud.common.core.ui.b,boolean) -> a
    862:868:boolean a(int,java.lang.String,java.lang.String,boolean) -> a
    869:922:void a(io.dcloud.common.adapter.ui.AdaFrameItem,io.dcloud.common.DHInterface.IApp) -> a
    923:924:io.dcloud.common.core.ui.b a() -> a
    925:935:void a(io.dcloud.common.core.ui.b) -> a
    936:986:void a(io.dcloud.common.core.ui.b,java.lang.Object[]) -> a
    987:1045:void a(io.dcloud.common.core.ui.b,boolean,org.json.JSONObject,java.lang.String) -> a
    1046:1163:void a(io.dcloud.common.core.ui.b,io.dcloud.common.core.ui.b) -> a
    1:51:void b(int,java.lang.Object) -> b
    52:54:void b(io.dcloud.common.DHInterface.IApp,io.dcloud.common.DHInterface.IWebview) -> b
    55:56:io.dcloud.common.core.ui.b b(io.dcloud.common.DHInterface.IApp) -> b
    57:58:io.dcloud.common.core.ui.a b() -> b
    59:67:void b(io.dcloud.common.core.ui.b) -> b
    68:88:io.dcloud.common.core.ui.c b(io.dcloud.common.DHInterface.IApp,io.dcloud.common.core.ui.a) -> b
    0:13:void c() -> c
    14:23:void c(io.dcloud.common.core.ui.b) -> c
    1:10:void d(io.dcloud.common.core.ui.b) -> d
    1:14:void dispose() -> dispose
    1:6435:java.lang.Object processEvent(io.dcloud.common.DHInterface.IMgr$MgrType,int,java.lang.Object) -> processEvent
io.dcloud.common.core.ui.l$a -> io.dcloud.common.core.ui.l$a:
    1:1:void <init>(io.dcloud.common.core.ui.l,io.dcloud.common.core.ui.b,io.dcloud.common.DHInterface.IApp,io.dcloud.common.core.ui.a) -> <init>
    1:4:java.lang.Object onCallBack(java.lang.String,java.lang.Object) -> onCallBack
io.dcloud.common.core.ui.l$b -> io.dcloud.common.core.ui.l$b:
    1:2:void <init>(io.dcloud.common.core.ui.l,io.dcloud.common.DHInterface.IApp,io.dcloud.common.core.ui.b,boolean,boolean,java.lang.String,io.dcloud.common.adapter.ui.AdaWebview,io.dcloud.common.core.ui.a,int) -> <init>
    1:51:java.lang.Object onCallBack(int,java.lang.Object) -> onCallBack
io.dcloud.common.core.ui.l$b$a -> io.dcloud.common.core.ui.l$b$a:
    1:1:void <init>(io.dcloud.common.core.ui.l$b) -> <init>
    1:6:void execute(java.lang.Object) -> execute
io.dcloud.common.core.ui.l$c -> io.dcloud.common.core.ui.l$c:
    1:1:void <init>(io.dcloud.common.core.ui.l,io.dcloud.common.adapter.ui.AdaFrameItem) -> <init>
    1:1:void run() -> run
io.dcloud.common.core.ui.l$d -> io.dcloud.common.core.ui.l$d:
    1:1:void <init>(io.dcloud.common.core.ui.l,io.dcloud.common.core.ui.b,java.lang.Object[]) -> <init>
    1:3:java.lang.Object onCallBack(int,java.lang.Object) -> onCallBack
io.dcloud.common.core.ui.l$e -> io.dcloud.common.core.ui.l$e:
    1:1:void <init>(io.dcloud.common.core.ui.l,io.dcloud.common.core.ui.b) -> <init>
    1:54:java.lang.Object onCallBack(int,java.lang.Object) -> onCallBack
io.dcloud.common.core.ui.l$f -> io.dcloud.common.core.ui.l$f:
    1:1:void <init>(io.dcloud.common.core.ui.l,io.dcloud.common.core.ui.b) -> <init>
    1:38:java.lang.Object onCallBack(int,java.lang.Object) -> onCallBack
io.dcloud.common.core.ui.l$g -> io.dcloud.common.core.ui.l$g:
    1:1:void <init>(io.dcloud.common.core.ui.l,io.dcloud.common.core.ui.b,int) -> <init>
    1:125:java.lang.Object onCallBack(int,java.lang.Object) -> onCallBack
io.dcloud.common.core.ui.l$h -> io.dcloud.common.core.ui.l$h:
    1:1:void <init>(io.dcloud.common.core.ui.l,io.dcloud.common.core.ui.b) -> <init>
    1:4:java.lang.Object onCallBack(int,java.lang.Object) -> onCallBack
io.dcloud.common.core.ui.l$i -> io.dcloud.common.core.ui.l$i:
    1:2:void <init>(io.dcloud.common.core.ui.l,java.lang.String,boolean,io.dcloud.common.DHInterface.IApp,io.dcloud.common.core.ui.a,java.lang.String,io.dcloud.common.DHInterface.IWebview,int,io.dcloud.common.core.ui.b,int,long) -> <init>
    1:43:java.lang.Object onCallBack(int,java.lang.Object) -> onCallBack
io.dcloud.common.core.ui.l$j -> io.dcloud.common.core.ui.l$j:
    1:1:void <init>(io.dcloud.common.core.ui.l,io.dcloud.common.core.ui.a,io.dcloud.common.core.ui.b,int) -> <init>
    1:5:void run() -> run
io.dcloud.common.core.ui.l$k -> io.dcloud.common.core.ui.l$k:
    1:1:void <init>(io.dcloud.common.core.ui.l,io.dcloud.common.core.ui.b,io.dcloud.common.core.ui.a,io.dcloud.common.DHInterface.IApp) -> <init>
    1:13:void run() -> run
io.dcloud.common.core.ui.l$l -> io.dcloud.common.core.ui.l$l:
    1:1:void <init>(io.dcloud.common.core.ui.l,io.dcloud.common.core.ui.a,boolean,io.dcloud.common.core.ui.b,io.dcloud.common.DHInterface.IWebview,io.dcloud.common.DHInterface.IApp,int,int,int) -> <init>
    1:15:void run() -> run
io.dcloud.common.cs.DA -> io.dcloud.common.cs.DA:
    34:34:void <clinit>() -> <clinit>
    26:26:void <init>() -> <init>
    55:56:void act(java.lang.String,java.lang.Object) -> act
    50:51:void ar(java.lang.String,java.lang.Object) -> ar
    37:40:io.dcloud.common.DHInterface.DAI getInstance() -> getInstance
    45:46:void sc() -> sc
io.dcloud.common.ui.GifImageView -> io.dcloud.common.ui.GifImageView:
    1:1:void <init>(android.content.Context) -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    3:41:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1:12:void a(android.content.Context,android.util.AttributeSet,int) -> a
    13:16:void a(android.graphics.Canvas) -> a
    1:2:void b() -> b
    1:6:void c() -> c
    1:17:int getCurrentFrameTime() -> getCurrentFrameTime
    1:2:int getDuration() -> getDuration
    1:1:boolean isPaused() -> isPaused
    1:1:boolean isPlaying() -> isPlaying
    1:12:void onDraw(android.graphics.Canvas) -> onDraw
    1:4:void onLayout(boolean,int,int,int,int) -> onLayout
    1:13:void onMeasure(int,int) -> onMeasure
    1:3:void onScreenStateChanged(int) -> onScreenStateChanged
    1:3:void onVisibilityChanged(android.view.View,int) -> onVisibilityChanged
    1:3:void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    1:10:void pause() -> pause
    1:6:void play(int) -> play
    7:19:void play() -> play
    1:2:void playOver() -> playOver
    1:7:void playReverse() -> playReverse
    1:6:void setGifResource(int,io.dcloud.common.ui.GifImageView$a) -> setGifResource
    7:7:void setGifResource(int) -> setGifResource
    8:14:void setGifResource(java.lang.String,io.dcloud.common.ui.GifImageView$a) -> setGifResource
    1:1:void setOnPlayListener(io.dcloud.common.ui.GifImageView$a) -> setOnPlayListener
    1:6:void setPercent(float) -> setPercent
io.dcloud.common.ui.Info.AndroidPrivacyResponse -> io.dcloud.common.ui.Info.AndroidPrivacyResponse:
    1:3:void <init>() -> <init>
io.dcloud.common.ui.Info.AndroidPrivacyResponse$SecondDTO -> io.dcloud.common.ui.Info.AndroidPrivacyResponse$SecondDTO:
    1:1:void <init>() -> <init>
io.dcloud.common.ui.Info.AndroidPrivacyResponse$StylesDTO -> io.dcloud.common.ui.Info.AndroidPrivacyResponse$StylesDTO:
    1:1:void <init>() -> <init>
io.dcloud.common.ui.Info.AndroidPrivacyResponse$StylesDTO$ButtonAcceptDTO -> io.dcloud.common.ui.Info.AndroidPrivacyResponse$StylesDTO$ButtonAcceptDTO:
    1:1:void <init>() -> <init>
io.dcloud.common.ui.Info.AndroidPrivacyResponse$StylesDTO$ButtonRefuseDTO -> io.dcloud.common.ui.Info.AndroidPrivacyResponse$StylesDTO$ButtonRefuseDTO:
    1:1:void <init>() -> <init>
io.dcloud.common.ui.Info.AndroidPrivacyResponse$StylesDTO$TitleDTO -> io.dcloud.common.ui.Info.AndroidPrivacyResponse$StylesDTO$TitleDTO:
    1:1:void <init>() -> <init>
io.dcloud.common.ui.PermissionGuideWindow -> io.dcloud.common.ui.PermissionGuideWindow:
    1:13:void <init>(android.content.Context) -> <init>
    1:9:void dismissWindow() -> dismissWindow
    1:1:void dismissWindowDelayed(long) -> dismissWindowDelayed
    1:4:io.dcloud.common.ui.PermissionGuideWindow getInstance(android.content.Context) -> getInstance
    1:93:void showWindow(java.lang.String,int) -> showWindow
io.dcloud.common.ui.PermissionGuideWindow$a -> io.dcloud.common.ui.PermissionGuideWindow$a:
    1:1:void <init>(io.dcloud.common.ui.PermissionGuideWindow) -> <init>
    1:1:void run() -> run
io.dcloud.common.ui.PermissionGuideWindow$b -> io.dcloud.common.ui.PermissionGuideWindow$b:
    1:1:void <init>(io.dcloud.common.ui.PermissionGuideWindow) -> <init>
    1:1:void onClick(android.view.View) -> onClick
io.dcloud.common.ui.PermissionGuideWindow$c -> io.dcloud.common.ui.PermissionGuideWindow$c:
    1:1:void <init>(io.dcloud.common.ui.PermissionGuideWindow,android.widget.ImageView) -> <init>
    1:2:void c() -> c
io.dcloud.common.ui.PermissionGuideWindow$d -> io.dcloud.common.ui.PermissionGuideWindow$d:
    1:1:void <init>(io.dcloud.common.ui.PermissionGuideWindow,io.dcloud.common.ui.GifImageView,android.widget.ImageView) -> <init>
    1:5:void onClick(android.view.View) -> onClick
io.dcloud.common.ui.PermissionGuideWindow$e -> io.dcloud.common.ui.PermissionGuideWindow$e:
    1:1:void <init>(io.dcloud.common.ui.PermissionGuideWindow,io.dcloud.common.ui.GifImageView,android.widget.ImageView) -> <init>
    1:5:void onClick(android.view.View) -> onClick
io.dcloud.common.ui.a -> io.dcloud.common.ui.a:
    1:155:void <init>(android.content.Context) -> <init>
    1:1:io.dcloud.common.ui.Info.AndroidPrivacyResponse a(io.dcloud.common.ui.a) -> a
    2:2:int a(io.dcloud.common.ui.a,java.lang.String) -> a
    3:3:int a(io.dcloud.common.ui.a,android.content.Context,float) -> a
    4:4:void a(int) -> a
    5:7:void a(io.dcloud.common.ui.Info.AndroidPrivacyResponse,boolean,io.dcloud.common.ui.a$d) -> a
    8:14:void a() -> a
    15:19:java.lang.CharSequence a(java.lang.String,io.dcloud.common.ui.a$e) -> a
    20:75:void a(android.text.SpannableStringBuilder,android.text.style.URLSpan,io.dcloud.common.ui.a$e) -> a
    76:76:int a(android.content.Context,float) -> a
    77:78:int a(java.lang.String) -> a
    1:1:io.dcloud.common.ui.a$d b(io.dcloud.common.ui.a) -> b
    1:1:boolean c(io.dcloud.common.ui.a) -> c
    1:1:int d(io.dcloud.common.ui.a) -> d
io.dcloud.common.ui.a$a -> io.dcloud.common.ui.a$a:
    1:1:void <init>(io.dcloud.common.ui.a,io.dcloud.common.ui.a$e,android.text.style.URLSpan) -> <init>
    1:43:void onClick(android.view.View) -> onClick
io.dcloud.common.ui.a$b -> io.dcloud.common.ui.a$b:
    1:2:void <init>(io.dcloud.common.ui.a,io.dcloud.common.ui.a$e) -> <init>
    1:10:void updateDrawState(android.text.TextPaint) -> updateDrawState
io.dcloud.common.ui.a$c -> io.dcloud.common.ui.a$c:
    1:18:void <init>(io.dcloud.common.ui.a,android.content.Context) -> <init>
    1:1:void a(io.dcloud.common.ui.a$c) -> a
    2:9:void a() -> a
    1:156:void b() -> b
    1:11:void c() -> c
io.dcloud.common.ui.a$c$a -> io.dcloud.common.ui.a$c$a:
    1:1:void <init>(io.dcloud.common.ui.a$c) -> <init>
    1:2:void onClick(android.view.View) -> onClick
io.dcloud.common.ui.a$c$b -> io.dcloud.common.ui.a$c$b:
    1:1:void <init>(io.dcloud.common.ui.a$c) -> <init>
    1:2:void onClick(android.view.View) -> onClick
io.dcloud.common.ui.a$c$c -> io.dcloud.common.ui.a$c$c:
    1:1:void <init>(io.dcloud.common.ui.a$c) -> <init>
    1:2:void onClick(android.view.View) -> onClick
io.dcloud.common.ui.a$c$d -> io.dcloud.common.ui.a$c$d:
    1:1:void <init>(io.dcloud.common.ui.a$c) -> <init>
    1:1:void onClick(android.view.View) -> onClick
io.dcloud.common.ui.a$c$e -> io.dcloud.common.ui.a$c$e:
    1:1:void <init>(io.dcloud.common.ui.a$c) -> <init>
    1:1:void onClick(android.view.View) -> onClick
io.dcloud.common.ui.a$e -> io.dcloud.common.ui.a$e:
    1:1:void <init>() -> <init>
    1:9:io.dcloud.common.ui.a$e a(java.lang.String) -> a
io.dcloud.common.ui.a$f -> io.dcloud.common.ui.a$f:
    1:2:void <init>() -> <init>
    1:8:io.dcloud.common.ui.a$f a(java.lang.String) -> a
io.dcloud.common.ui.b -> io.dcloud.common.ui.b:
    1:28:void <init>() -> <init>
    1:1:io.dcloud.common.ui.Info.AndroidPrivacyResponse a(io.dcloud.common.ui.b) -> a
    2:5:io.dcloud.common.ui.b a() -> a
    6:275:void a(android.content.Context) -> a
    276:309:java.lang.String a(java.lang.String) -> a
    310:322:java.lang.String a(android.content.Context,java.lang.String) -> a
    323:365:void a(android.app.Activity,io.dcloud.common.ui.b$b,boolean) -> a
    1:1:boolean b() -> b
    2:12:boolean b(android.content.Context) -> b
    1:11:boolean c(android.content.Context) -> c
    1:27:boolean d(android.content.Context) -> d
io.dcloud.common.ui.b$a -> io.dcloud.common.ui.b$a:
    1:1:void <init>(io.dcloud.common.ui.b,android.app.Activity,io.dcloud.common.ui.b$b) -> <init>
    1:6:void a(java.lang.String) -> a
    1:2:void onCancel() -> onCancel
io.dcloud.common.ui.c -> io.dcloud.common.ui.c:
    1:2:void <init>(android.content.Context) -> <init>
    1:4:io.dcloud.common.ui.c a(android.content.Context) -> a
    5:9:java.lang.CharSequence a(java.lang.String) -> a
    10:52:void a(android.text.SpannableStringBuilder,android.text.style.URLSpan) -> a
io.dcloud.common.ui.c$a -> io.dcloud.common.ui.c$a:
    1:1:void <init>(io.dcloud.common.ui.c,android.text.style.URLSpan) -> <init>
    1:10:void onClick(android.view.View) -> onClick
io.dcloud.common.util.ADUtils -> io.dcloud.common.util.ADUtils:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:8:java.lang.Object ADHandlerMethod(java.lang.String,java.lang.Object[]) -> ADHandlerMethod
    1:1:com.dcloud.android.downloader.callback.DownloadListener access$000() -> access$000
    1:1:java.lang.String access$100(java.lang.String) -> access$100
    1:19:void checkADDownload(android.app.Activity) -> checkADDownload
    1:1:void downloadCommit(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String) -> downloadCommit
    1:33:void dwApp(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,boolean,boolean,java.lang.String) -> dwApp
    1:14:org.json.JSONObject getDdDataForUrl(java.lang.String) -> getDdDataForUrl
    1:1:java.lang.String getDownloadDataKey(long) -> getDownloadDataKey
    1:1:java.lang.String getLoadAppDataKey(java.lang.String) -> getLoadAppDataKey
    1:8:org.json.JSONObject getLoadData(long) -> getLoadData
    1:1:java.lang.String getSplashAdpId() -> getSplashAdpId
    1:9:long loadADFile(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,io.dcloud.common.DHInterface.ILoadCallBack,boolean,java.lang.String) -> loadADFile
    1:1:void loadAppTip(android.content.Context) -> loadAppTip
    1:11:void openBrowser(android.content.Context,java.lang.String) -> openBrowser
    1:15:boolean openDeepLink(android.content.Context,java.lang.String) -> openDeepLink
    1:42:void openStreamApp(android.content.Context,java.lang.String,org.json.JSONObject,int,java.lang.String) -> openStreamApp
    1:10:void openUrl(android.content.Context,java.lang.String) -> openUrl
    1:7:org.json.JSONObject removeDownlaodData(android.content.Context,long) -> removeDownlaodData
    1:12:org.json.JSONObject removeLoadAppData(android.content.Context,java.lang.String) -> removeLoadAppData
    1:1:void runThreadCheckADDownload(android.app.Activity) -> runThreadCheckADDownload
    1:1:void saveLoadAppData(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> saveLoadAppData
    1:16:void saveLoadData(io.dcloud.common.util.ADUtils$ADLoadData) -> saveLoadData
io.dcloud.common.util.ADUtils$1 -> io.dcloud.common.util.ADUtils$1:
    1:1:void <init>() -> <init>
    1:5:void onDownloadFailed(com.dcloud.android.downloader.domain.DownloadInfo,com.dcloud.android.downloader.exception.DownloadException) -> onDownloadFailed
    1:15:void onDownloadSuccess(com.dcloud.android.downloader.domain.DownloadInfo) -> onDownloadSuccess
io.dcloud.common.util.ADUtils$2 -> io.dcloud.common.util.ADUtils$2:
    1:1:void <init>() -> <init>
    1:3:java.lang.Object onCallBack(int,android.content.Context,java.lang.Object) -> onCallBack
io.dcloud.common.util.ADUtils$3 -> io.dcloud.common.util.ADUtils$3:
    1:1:void <init>(android.app.Activity) -> <init>
    1:3:void run() -> run
io.dcloud.common.util.ADUtils$4 -> io.dcloud.common.util.ADUtils$4:
    1:1:void <init>(com.dcloud.android.downloader.domain.DownloadInfo,android.app.Activity,long,java.lang.String,com.dcloud.android.downloader.callback.DCDownloadManager,long,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    1:74:void run() -> run
io.dcloud.common.util.ADUtils$5 -> io.dcloud.common.util.ADUtils$5:
    1:1:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    1:23:void run() -> run
io.dcloud.common.util.ADUtils$6 -> io.dcloud.common.util.ADUtils$6:
    1:1:void <init>() -> <init>
    1:1:void execute(java.lang.Object) -> execute
io.dcloud.common.util.ADUtils$7 -> io.dcloud.common.util.ADUtils$7:
    1:1:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String) -> <init>
    1:1:void run() -> run
io.dcloud.common.util.ADUtils$ADLoadData -> io.dcloud.common.util.ADUtils$ADLoadData:
    1:10:void <init>() -> <init>
io.dcloud.common.util.AESUtil -> io.dcloud.common.util.AESUtil:
    1:1:void <init>() -> <init>
    1:5:javax.crypto.Cipher createCipher(int,byte[],java.lang.String,byte[]) -> createCipher
    1:6:java.lang.String decrypt(java.lang.String,java.lang.String,byte[]) -> decrypt
    7:8:byte[] decrypt(byte[],byte[],byte[]) -> decrypt
    1:1:byte[] encrypt(java.lang.String,java.lang.String,java.lang.String) -> encrypt
    2:5:byte[] encrypt(java.lang.String,java.lang.String,byte[]) -> encrypt
    6:7:byte[] encrypt(byte[],byte[],java.lang.String,byte[]) -> encrypt
io.dcloud.common.util.AppConsoleLogUtil -> io.dcloud.common.util.AppConsoleLogUtil:
    1:1:void <init>() -> <init>
    1:31:void DCLog(java.lang.String,java.lang.String) -> DCLog
io.dcloud.common.util.AppPermissionUtil -> io.dcloud.common.util.AppPermissionUtil:
    1:17:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:37:void againShortcutOpsDialog(io.dcloud.common.DHInterface.IApp,android.app.Activity,java.lang.String,java.lang.String) -> againShortcutOpsDialog
    1:65:int checkNoShortcutPermionGuide(android.content.Context,java.lang.String,boolean,io.dcloud.common.DHInterface.IApp,java.lang.String,android.content.SharedPreferences,boolean) -> checkNoShortcutPermionGuide
    1:16:int checkOp(android.content.Context) -> checkOp
    1:21:int checkPermission(android.content.Context,java.lang.String) -> checkPermission
    1:4:boolean checkShortcutOps(io.dcloud.common.DHInterface.IApp,android.app.Activity,java.lang.String,java.lang.String) -> checkShortcutOps
    1:3:int getCheckShortcutOps(android.app.Activity) -> getCheckShortcutOps
    1:14:int getFlymePermissionGranted(android.content.Context,int,android.content.Intent) -> getFlymePermissionGranted
    1:9:int getFlymeShortcutPid() -> getFlymeShortcutPid
    1:21:int getShotCutOpId() -> getShotCutOpId
    1:13:boolean isEmuiShortcutallowAllow() -> isEmuiShortcutallowAllow
    1:3:boolean isFlymeShortcutallowAllow(android.content.Context,android.content.Intent) -> isFlymeShortcutallowAllow
    1:38:void showShortCutDialog(io.dcloud.common.DHInterface.IApp,android.app.Activity,java.lang.String,android.content.SharedPreferences,int,java.lang.String) -> showShortCutDialog
    1:37:void showShortCutOpsDialog(io.dcloud.common.DHInterface.IApp,android.app.Activity,java.lang.String,android.content.SharedPreferences) -> showShortCutOpsDialog
io.dcloud.common.util.AppPermissionUtil$1 -> io.dcloud.common.util.AppPermissionUtil$1:
    1:1:void <init>(io.dcloud.common.DHInterface.IApp,android.app.Activity,java.lang.String) -> <init>
    1:1:void onClick(android.content.DialogInterface,int) -> onClick
io.dcloud.common.util.AppPermissionUtil$2 -> io.dcloud.common.util.AppPermissionUtil$2:
    1:1:void <init>(android.app.Activity,android.content.SharedPreferences,java.lang.String) -> <init>
    1:4:void onClick(android.content.DialogInterface,int) -> onClick
io.dcloud.common.util.AppPermissionUtil$3 -> io.dcloud.common.util.AppPermissionUtil$3:
    1:1:void <init>(io.dcloud.common.DHInterface.IApp,android.app.Activity,java.lang.String) -> <init>
    1:1:void onCancel(android.content.DialogInterface) -> onCancel
io.dcloud.common.util.AppPermissionUtil$4 -> io.dcloud.common.util.AppPermissionUtil$4:
    1:1:void <init>(io.dcloud.common.DHInterface.IApp) -> <init>
    1:3:void onClick(android.content.DialogInterface,int) -> onClick
io.dcloud.common.util.AppPermissionUtil$5 -> io.dcloud.common.util.AppPermissionUtil$5:
    1:1:void <init>(android.app.Activity,android.content.SharedPreferences,java.lang.String) -> <init>
    1:4:void onClick(android.content.DialogInterface,int) -> onClick
io.dcloud.common.util.AppPermissionUtil$6 -> io.dcloud.common.util.AppPermissionUtil$6:
    1:1:void <init>(io.dcloud.common.DHInterface.IApp) -> <init>
    1:1:void onCancel(android.content.DialogInterface) -> onCancel
io.dcloud.common.util.AppPermissionUtil$7 -> io.dcloud.common.util.AppPermissionUtil$7:
    1:1:void <init>() -> <init>
    1:1:void onClick(android.content.DialogInterface,int) -> onClick
io.dcloud.common.util.AppPermissionUtil$8 -> io.dcloud.common.util.AppPermissionUtil$8:
    1:1:void <init>(android.app.Activity,android.content.SharedPreferences,java.lang.String,java.lang.String,int) -> <init>
    1:4:void onClick(android.content.DialogInterface,int) -> onClick
io.dcloud.common.util.AppRuntime -> io.dcloud.common.util.AppRuntime:
    1:1:void <init>() -> <init>
    1:1:io.dcloud.common.DHInterface.IUniInstanceMgr getInstanceMgr() -> getInstanceMgr
    1:1:boolean hasPrivacyForNotShown(android.content.Context) -> hasPrivacyForNotShown
    1:3:void initUniappPlugin(android.app.Application) -> initUniappPlugin
    1:3:void initWeex(io.dcloud.common.DHInterface.INativeAppInfo) -> initWeex
    1:1:void initX5(android.app.Application) -> initX5
    1:45:boolean isAppResourcesInAssetsPath(android.content.Context,java.lang.String) -> isAppResourcesInAssetsPath
    1:1:boolean isUniApp(java.lang.String) -> isUniApp
    1:11:java.io.InputStream loadWeexAsset(java.lang.String,android.content.Context) -> loadWeexAsset
    1:3:void onSubProcess(android.app.Application) -> onSubProcess
    1:3:void restartWeex(android.app.Application,io.dcloud.common.DHInterface.ICallBack,java.lang.String) -> restartWeex
io.dcloud.common.util.AppStatus -> io.dcloud.common.util.AppStatus:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:2:int getAppStatus(java.lang.String) -> getAppStatus
    1:1:void setAppStatus(java.lang.String,int) -> setAppStatus
io.dcloud.common.util.AppStatusBarManager -> io.dcloud.common.util.AppStatusBarManager:
    1:22:void <init>(android.app.Activity,io.dcloud.g.a.f) -> <init>
    1:1:android.view.View access$000(io.dcloud.common.util.AppStatusBarManager,android.app.Activity) -> access$000
    1:40:boolean checkImmersedStatusBar(android.content.Context,boolean) -> checkImmersedStatusBar
    1:38:void diyContentFullScreenBug(android.app.Activity) -> diyContentFullScreenBug
    1:10:org.json.JSONObject getDirectStatusJson(io.dcloud.common.DHInterface.IApp) -> getDirectStatusJson
    1:1:android.view.View getRootView(android.app.Activity) -> getRootView
    1:1:int getStatusBarDefaultColor() -> getStatusBarDefaultColor
    1:2:int getStatusbarColorIndex() -> getStatusbarColorIndex
    1:9:void initDirectImmersive() -> initDirectImmersive
    1:8:void initStatusBarDefaultColor(android.app.Activity) -> initStatusBarDefaultColor
    1:1:boolean isFullScreenOrImmersive() -> isFullScreenOrImmersive
    1:18:void setFullScreen(android.app.Activity,boolean) -> setFullScreen
    1:36:void setImmersive(android.app.Activity,boolean) -> setImmersive
    1:16:void setMeizuStatusBarDarkIcon(android.app.Activity,boolean) -> setMeizuStatusBarDarkIcon
    1:8:void setMiuiStatusBarDarkMode(android.app.Activity,boolean) -> setMiuiStatusBarDarkMode
    1:7:void setStatusBarColor(android.app.Activity,int) -> setStatusBarColor
    1:30:void setStatusBarMode(android.app.Activity,java.lang.String) -> setStatusBarMode
    1:10:void setTranslucentStatus(android.app.Activity,boolean) -> setTranslucentStatus
io.dcloud.common.util.AppStatusBarManager$1 -> io.dcloud.common.util.AppStatusBarManager$1:
    1:1:void <init>(io.dcloud.common.util.AppStatusBarManager,android.app.Activity) -> <init>
    1:5:void run() -> run
io.dcloud.common.util.AppStatusBarManager$2 -> io.dcloud.common.util.AppStatusBarManager$2:
    1:1:void <init>(io.dcloud.common.util.AppStatusBarManager,android.app.Activity) -> <init>
    1:5:void run() -> run
io.dcloud.common.util.AppStreamUtil -> io.dcloud.common.util.AppStreamUtil:
    1:18:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
io.dcloud.common.util.ArrayUtil -> io.dcloud.common.util.ArrayUtil:
    1:1:void <init>() -> <init>
    1:8:java.lang.String[] riseArray(java.lang.String[],java.lang.String) -> riseArray
io.dcloud.common.util.AssistInputUtil -> io.dcloud.common.util.AssistInputUtil:
    1:1:void <init>() -> <init>
    0:20:void changeSaveDataToEncrypt(android.content.Context) -> changeSaveDataToEncrypt
    1:3:void clearData(android.content.Context) -> clearData
    1:9:java.lang.String decrypt(java.lang.String) -> decrypt
    1:7:java.lang.String encrypt(java.lang.String) -> encrypt
    1:22:java.lang.String[] getCoreRecordViewSaveData(java.lang.String) -> getCoreRecordViewSaveData
    1:1:java.lang.String getCurrentAddress(android.content.Context) -> getCurrentAddress
    1:1:java.lang.String getDutyParagraph(android.content.Context) -> getDutyParagraph
    1:1:java.lang.String getEmailA(android.content.Context) -> getEmailA
    1:1:java.lang.String getEmailB(android.content.Context) -> getEmailB
    1:1:java.lang.String getHomeAddress(android.content.Context) -> getHomeAddress
    1:1:java.lang.String getId(android.content.Context) -> getId
    1:1:java.lang.String getName(android.content.Context) -> getName
    1:1:java.lang.String getNameB(android.content.Context) -> getNameB
    1:1:java.lang.String getPhoneA(android.content.Context) -> getPhoneA
    1:1:java.lang.String getPhoneB(android.content.Context) -> getPhoneB
    1:1:java.lang.String[] getRecordViewCompany() -> getRecordViewCompany
    1:1:java.lang.String[] getRecordViewEmails() -> getRecordViewEmails
    1:1:java.lang.String[] getRecordViewId() -> getRecordViewId
    1:1:java.lang.String[] getRecordViewNames() -> getRecordViewNames
    1:1:java.lang.String[] getRecordViewPhones() -> getRecordViewPhones
    1:1:java.lang.String[] getRecordViewTax() -> getRecordViewTax
    1:1:java.lang.String getWorkAddress(android.content.Context) -> getWorkAddress
    1:1:java.lang.String getWorkName(android.content.Context) -> getWorkName
    1:30:void saveAll(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> saveAll
    31:47:void saveAll(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> saveAll
    0:18:void saveCompany(android.content.Context,boolean,java.lang.String) -> saveCompany
    1:3:void saveCurrentAddress(android.content.Context,java.lang.String) -> saveCurrentAddress
    0:29:void saveEmail(android.content.Context,boolean,java.lang.String,java.lang.String) -> saveEmail
    0:18:void saveId(android.content.Context,boolean,java.lang.String) -> saveId
    0:29:void saveName(android.content.Context,boolean,java.lang.String,java.lang.String) -> saveName
    0:29:void savePhone(android.content.Context,boolean,java.lang.String,java.lang.String) -> savePhone
    0:17:void saveTax(android.content.Context,boolean,java.lang.String) -> saveTax
    1:2:boolean useAssistSettingCompany() -> useAssistSettingCompany
    1:2:boolean useAssistSettingEmail() -> useAssistSettingEmail
    1:2:boolean useAssistSettingId() -> useAssistSettingId
    1:2:boolean useAssistSettingName() -> useAssistSettingName
    1:2:boolean useAssistSettingPhone() -> useAssistSettingPhone
    1:2:boolean useAssistSettingTax() -> useAssistSettingTax
io.dcloud.common.util.Base64 -> io.dcloud.common.util.Base64:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:17:java.lang.String decode2String(java.lang.String) -> decode2String
    1:157:byte[] decode2bytes(java.lang.String) -> decode2bytes
    1:1:java.lang.String decodeString(java.lang.String,boolean,int) -> decodeString
    1:1:java.lang.String encode(java.lang.String) -> encode
    2:33:java.lang.String encode(byte[]) -> encode
    1:1:java.lang.String encodeString(java.lang.String,boolean,int) -> encodeString
io.dcloud.common.util.BaseInfo -> io.dcloud.common.util.BaseInfo:
    1:1107:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:1:java.lang.String access$000() -> access$000
    1:3:boolean checkAppIsTest(java.lang.String) -> checkAppIsTest
    1:53:void checkOrResetTemplate(io.dcloud.common.DHInterface.IApp) -> checkOrResetTemplate
    1:3:boolean checkTestOpenFile() -> checkTestOpenFile
    1:9:void clearData() -> clearData
    1:4:boolean containsInTemplate(io.dcloud.common.DHInterface.IApp,java.lang.String) -> containsInTemplate
    1:9:void createAppTestFile(java.lang.String) -> createAppTestFile
    1:3:boolean existsBase() -> existsBase
    1:1:boolean existsLibso() -> existsLibso
    1:1:boolean existsStreamEnv() -> existsStreamEnv
    1:11:java.lang.String getAnalysisChannel() -> getAnalysisChannel
    1:4:io.dcloud.common.util.BaseInfo$CmtInfo getCmitInfo(java.lang.String) -> getCmitInfo
    1:1:java.lang.String getCrashLogsPath(android.content.Context) -> getCrashLogsPath
    1:3:java.lang.String getLastKey(java.util.LinkedHashMap) -> getLastKey
    1:33:java.lang.String getLaunchType(android.content.Intent) -> getLaunchType
    1:5:java.lang.String getLauncherData(java.lang.String) -> getLauncherData
    1:6:java.lang.String getStackTrace() -> getStackTrace
    1:3:java.lang.String getStartupTimeData(java.lang.String) -> getStartupTimeData
    1:4:java.lang.String getUniNViewId(io.dcloud.common.DHInterface.IFrameView) -> getUniNViewId
    1:10:java.lang.String installAppMapToString() -> installAppMapToString
    1:1:boolean isBase(android.content.Context) -> isBase
    1:6:boolean isChannelGooglePlay() -> isChannelGooglePlay
    1:12:boolean isDebugSignature(android.content.Context) -> isDebugSignature
    1:10:boolean isUniAppAppid(io.dcloud.common.DHInterface.IApp) -> isUniAppAppid
    1:2:boolean isUniNViewBackgroud() -> isUniNViewBackgroud
    1:7:boolean isWap2AppAppid(java.lang.String) -> isWap2AppAppid
    1:2:boolean isWeexUniJs(io.dcloud.common.DHInterface.IApp) -> isWeexUniJs
    1:4:boolean isWifi(android.content.Context) -> isWifi
    1:25:void loadCustomPath(java.lang.String) -> loadCustomPath
    1:23:void loadInstalledAppInfo(android.content.Context) -> loadInstalledAppInfo
    1:20:void parseControl() -> parseControl
    21:149:java.lang.String[] parseControl(android.content.Context,io.dcloud.common.DHInterface.ICore,io.dcloud.common.DHInterface.ICore$ICoreStatusListener) -> parseControl
    1:2:void putLauncherData(java.lang.String,java.lang.String) -> putLauncherData
    1:2:void putStartupTimeData(java.lang.String,java.lang.String) -> putStartupTimeData
    1:4:void removeTestFile(java.lang.String) -> removeTestFile
    1:2:void saveInstalledAppInfo(android.content.Context) -> saveInstalledAppInfo
    1:22:void updateBaseInfo() -> updateBaseInfo
    1:7:void updateBaseInfoByApp(java.lang.String,java.lang.String) -> updateBaseInfoByApp
io.dcloud.common.util.BaseInfo$AppIsTestWrapper -> io.dcloud.common.util.BaseInfo$AppIsTestWrapper:
    1:3:void <init>() -> <init>
    1:2:boolean containsKey(java.lang.String) -> containsKey
    1:1:void init(android.content.Context) -> init
    1:4:void put(java.lang.String,java.lang.String) -> put
    1:2:void remove(java.lang.String) -> remove
io.dcloud.common.util.BaseInfo$BaseAppInfo -> io.dcloud.common.util.BaseInfo$BaseAppInfo:
    1:9:void <init>(java.lang.String,java.lang.String) -> <init>
    1:1:void clearBundleData() -> clearBundleData
    1:24:boolean compareVersion(java.lang.String,java.lang.String) -> compareVersion
    1:1:boolean high(io.dcloud.common.util.BaseInfo$BaseAppInfo) -> high
    1:9:void saveToBundleData(android.content.Context) -> saveToBundleData
io.dcloud.common.util.BaseInfo$CmtInfo -> io.dcloud.common.util.BaseInfo$CmtInfo:
    1:25:void <init>() -> <init>
io.dcloud.common.util.Birdge -> io.dcloud.common.util.Birdge:
    1:2:void <init>(io.dcloud.common.DHInterface.IJsInterface) -> <init>
    1:1:java.lang.String exec(java.lang.String,java.lang.String,java.lang.String) -> exec
    2:2:java.lang.String exec(java.lang.String,java.lang.String,org.json.JSONArray) -> exec
    1:1:void execute(java.lang.Object) -> execute
    1:1:void forceStop(java.lang.String) -> forceStop
    1:1:java.lang.String prompt(java.lang.String,java.lang.String) -> prompt
io.dcloud.common.util.BuildProperties -> io.dcloud.common.util.BuildProperties:
    1:3:void <init>() -> <init>
    1:1:boolean containsKey(java.lang.Object) -> containsKey
    1:1:boolean containsValue(java.lang.Object) -> containsValue
    1:1:java.util.Set entrySet() -> entrySet
    1:42:java.lang.String getBuildPropertiesLimit(android.content.Context) -> getBuildPropertiesLimit
    1:8:io.dcloud.common.util.BuildProperties getInstance() -> getInstance
    1:1:java.lang.String getProperty(java.lang.String) -> getProperty
    2:2:java.lang.String getProperty(java.lang.String,java.lang.String) -> getProperty
    1:1:boolean isEmpty() -> isEmpty
    1:1:java.util.Set keySet() -> keySet
    1:1:java.util.Enumeration keys() -> keys
    1:1:int size() -> size
    1:1:java.util.Collection values() -> values
io.dcloud.common.util.CheckSignatureUtil -> io.dcloud.common.util.CheckSignatureUtil:
    1:1:void <init>() -> <init>
    1:15:boolean check(java.lang.String) -> check
    1:6:java.lang.String getSignature(java.lang.String) -> getSignature
io.dcloud.common.util.CreateShortResultReceiver -> io.dcloud.common.util.CreateShortResultReceiver:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:1:java.lang.String access$000() -> access$000
    1:2:void onReceive(android.content.Context,android.content.Intent) -> onReceive
io.dcloud.common.util.CreateShortResultReceiver$1 -> io.dcloud.common.util.CreateShortResultReceiver$1:
    1:1:void <init>(io.dcloud.common.util.CreateShortResultReceiver,android.content.Context,android.content.Intent) -> <init>
    1:20:void run() -> run
io.dcloud.common.util.DCFileUriData -> io.dcloud.common.util.DCFileUriData:
    1:5:void <init>() -> <init>
    1:8:void clear() -> clear
io.dcloud.common.util.DCloud_FileProvider -> io.dcloud.common.util.DCloud_FileProvider:
    1:1:void <init>() -> <init>
io.dcloud.common.util.DLGeolocation -> io.dcloud.common.util.DLGeolocation:
    1:2:void <init>(io.dcloud.common.DHInterface.IWebview) -> <init>
    1:3:boolean checkAmapGeo() -> checkAmapGeo
    1:3:boolean checkBDmapGeo() -> checkBDmapGeo
    1:1:boolean checkGeo(android.content.Context) -> checkGeo
    1:1:boolean checkInjectGeo(java.lang.String) -> checkInjectGeo
    1:1:java.lang.String exec(java.lang.String,java.lang.String,java.lang.String) -> exec
    1:31:java.lang.String[] getGeoArgs(java.lang.String,java.lang.String,java.lang.String) -> getGeoArgs
    1:7:java.lang.Object initGeoManager() -> initGeoManager
    1:13:void runGeolocation(java.lang.String,java.lang.String,java.lang.String) -> runGeolocation
io.dcloud.common.util.DataUtil -> io.dcloud.common.util.DataUtil:
    1:1:void <init>() -> <init>
    1:13:java.lang.String GBK2Unicode(java.lang.String) -> GBK2Unicode
    1:34:java.lang.String Unicode2GBK(java.lang.String) -> Unicode2GBK
    1:1:void datToJsString(java.lang.String,io.dcloud.common.DHInterface.ICallBack) -> datToJsString
    1:32:java.lang.String datToJsStringSync(java.lang.String) -> datToJsStringSync
    1:2:java.lang.String gbk2utf8(java.lang.String) -> gbk2utf8
    1:61:java.lang.String unicodeToUtf8(java.lang.String) -> unicodeToUtf8
    1:2:java.lang.String utf82gbk(java.lang.String) -> utf82gbk
    1:26:java.lang.String utf8ToUnicode(java.lang.String) -> utf8ToUnicode
io.dcloud.common.util.DataUtil$1 -> io.dcloud.common.util.DataUtil$1:
    1:1:void <init>(java.lang.String,io.dcloud.common.DHInterface.ICallBack) -> <init>
    1:3:void run() -> run
io.dcloud.common.util.DensityUtils -> io.dcloud.common.util.DensityUtils:
    1:1:void <init>() -> <init>
    1:1:int dip2px(android.content.Context,float) -> dip2px
    1:1:int dp2px(android.content.Context,float) -> dp2px
    1:1:float px2dp(android.content.Context,float) -> px2dp
    1:1:float px2sp(android.content.Context,float) -> px2sp
    1:1:int sp2px(android.content.Context,float) -> sp2px
io.dcloud.common.util.Deprecated_JSUtil -> io.dcloud.common.util.Deprecated_JSUtil:
    1:1:void <init>() -> <init>
    1:1:void excCallbackError(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String) -> excCallbackError
    2:2:void excCallbackError(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String,boolean) -> excCallbackError
    1:1:void excCallbackSuccess(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String) -> excCallbackSuccess
    2:2:void excCallbackSuccess(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String,boolean) -> excCallbackSuccess
    3:3:void excCallbackSuccess(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String,boolean,boolean) -> excCallbackSuccess
    1:5:void excDownloadCallBack(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String) -> excDownloadCallBack
    1:5:void excUploadCallBack(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String) -> excUploadCallBack
    1:18:void execCallback(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String,int,boolean,boolean) -> execCallback
    1:8:java.lang.String wrapJsVar(java.lang.String,boolean) -> wrapJsVar
io.dcloud.common.util.DialogUtil -> io.dcloud.common.util.DialogUtil:
    1:1:void <init>() -> <init>
    1:7:android.app.AlertDialog$Builder initDialogTheme(android.app.Activity,boolean) -> initDialogTheme
    8:13:android.app.AlertDialog$Builder initDialogTheme(android.app.Activity) -> initDialogTheme
    1:55:void showAlertDialog(android.app.Activity,java.lang.String,java.lang.String,java.lang.String,android.view.View$OnClickListener,android.view.View$OnClickListener,android.content.DialogInterface$OnCancelListener,android.content.DialogInterface$OnDismissListener,boolean,int,int,int) -> showAlertDialog
    1:22:void showConfirm(android.app.Activity,java.lang.String,java.lang.String,java.lang.String[],io.dcloud.common.DHInterface.ICallBack) -> showConfirm
    1:31:void showDialog(android.app.Activity,java.lang.String,java.lang.String,java.lang.String[]) -> showDialog
    1:12:void showLoadAPPDialog(android.content.Context,java.lang.String,java.lang.String) -> showLoadAPPDialog
io.dcloud.common.util.DialogUtil$1 -> io.dcloud.common.util.DialogUtil$1:
    1:1:void <init>(android.app.AlertDialog,io.dcloud.common.DHInterface.ICallBack) -> <init>
    1:7:void onClick(android.content.DialogInterface,int) -> onClick
io.dcloud.common.util.DialogUtil$2 -> io.dcloud.common.util.DialogUtil$2:
    1:1:void <init>(android.content.Context,java.lang.String) -> <init>
    1:3:void onClick(android.content.DialogInterface,int) -> onClick
io.dcloud.common.util.DialogUtil$3 -> io.dcloud.common.util.DialogUtil$3:
    1:1:void <init>(android.app.AlertDialog) -> <init>
    1:1:void onClick(android.content.DialogInterface,int) -> onClick
io.dcloud.common.util.DialogUtil$4 -> io.dcloud.common.util.DialogUtil$4:
    1:1:void <init>(android.app.AlertDialog) -> <init>
    1:3:boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
io.dcloud.common.util.DialogUtil$5 -> io.dcloud.common.util.DialogUtil$5:
    1:1:void <init>(android.app.Dialog,android.view.View$OnClickListener) -> <init>
    1:3:void onClick(android.view.View) -> onClick
io.dcloud.common.util.DialogUtil$6 -> io.dcloud.common.util.DialogUtil$6:
    1:1:void <init>(android.app.Dialog,android.view.View$OnClickListener) -> <init>
    1:3:void onClick(android.view.View) -> onClick
io.dcloud.common.util.ErrorDialogUtil -> io.dcloud.common.util.ErrorDialogUtil:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:1:java.util.ArrayList access$000() -> access$000
    1:21:void checkAppKeyErrorTips(android.app.Activity) -> checkAppKeyErrorTips
    1:24:android.app.Dialog getLossDialog(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String,java.lang.String) -> getLossDialog
    1:15:void showErrorTipsAlert(android.app.Activity,java.lang.String,android.content.DialogInterface$OnClickListener) -> showErrorTipsAlert
io.dcloud.common.util.ErrorDialogUtil$1 -> io.dcloud.common.util.ErrorDialogUtil$1:
    1:1:void <init>(java.lang.String,io.dcloud.common.DHInterface.IWebview) -> <init>
    1:5:void onClick(android.content.DialogInterface,int) -> onClick
io.dcloud.common.util.ErrorDialogUtil$2 -> io.dcloud.common.util.ErrorDialogUtil$2:
    1:1:void <init>(java.lang.String) -> <init>
    1:1:void onDismiss(android.content.DialogInterface) -> onDismiss
io.dcloud.common.util.ErrorDialogUtil$3 -> io.dcloud.common.util.ErrorDialogUtil$3:
    1:1:void <init>() -> <init>
    1:1:void onClick(android.content.DialogInterface,int) -> onClick
io.dcloud.common.util.ErrorDialogUtil$4 -> io.dcloud.common.util.ErrorDialogUtil$4:
    1:1:void <init>() -> <init>
io.dcloud.common.util.ErrorDialogUtil$5 -> io.dcloud.common.util.ErrorDialogUtil$5:
    1:1:void <init>() -> <init>
io.dcloud.common.util.EventDispatchManager -> io.dcloud.common.util.EventDispatchManager:
    1:4:void <init>() -> <init>
    1:1:void addListener(io.dcloud.common.util.EventDispatchManager$ActivityEventDispatchListener) -> addListener
    1:2:boolean dispatchEvent(io.dcloud.common.DHInterface.ISysEventListener$SysEventType,java.lang.Object) -> dispatchEvent
    1:8:io.dcloud.common.util.EventDispatchManager getInstance() -> getInstance
    1:1:void removeListener(io.dcloud.common.util.EventDispatchManager$ActivityEventDispatchListener) -> removeListener
io.dcloud.common.util.FileUtil -> io.dcloud.common.util.FileUtil:
    1:1:void <init>() -> <init>
    1:7:boolean checkFilePathLegalization(android.content.Context,java.lang.String) -> checkFilePathLegalization
    1:3:boolean checkPathAccord(android.content.Context,java.lang.String[]) -> checkPathAccord
    1:11:boolean checkPrivatePath(android.content.Context,java.lang.String) -> checkPrivatePath
    1:40:android.net.Uri copyMediaFile(android.content.Context,java.io.InputStream,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> copyMediaFile
    1:20:android.net.Uri copyMediaFileToDCIM(android.content.Context,java.lang.String) -> copyMediaFileToDCIM
    21:33:android.net.Uri copyMediaFileToDCIM(android.content.Context,java.io.InputStream,java.lang.String) -> copyMediaFileToDCIM
    1:20:android.net.Uri createPublicDocumentsFile(android.content.Context,java.lang.String,java.lang.String) -> createPublicDocumentsFile
    1:4:void deleteFile(android.content.Context,java.lang.String) -> deleteFile
    1:42:android.net.Uri getContentUriForSuffix(java.lang.String) -> getContentUriForSuffix
    1:5:java.io.InputStream getFileInputStream(android.content.Context,java.lang.String) -> getFileInputStream
    6:164:java.io.InputStream getFileInputStream(android.content.Context,java.io.File) -> getFileInputStream
    1:6:java.lang.String getFileNameForPath(java.lang.String) -> getFileNameForPath
    1:9:java.lang.String getFileNameWithSuffix(java.lang.String) -> getFileNameWithSuffix
    1:13:java.lang.String getFileProviderUriToPath(android.content.Context,android.net.Uri) -> getFileProviderUriToPath
    1:2:java.lang.String getFileTypeForSuffix(java.lang.String) -> getFileTypeForSuffix
    1:11:android.net.Uri getFileUri(android.content.Context,java.io.File,android.net.Uri) -> getFileUri
    1:7:java.io.InputStream getImageFileStream(android.content.Context,java.io.File) -> getImageFileStream
    1:2:android.net.Uri getImageFileUri(android.content.Context,java.lang.String) -> getImageFileUri
    3:6:android.net.Uri getImageFileUri(android.content.Context,java.io.File) -> getImageFileUri
    1:14:java.lang.String getPathForPublicType(java.lang.String) -> getPathForPublicType
    1:56:java.lang.String getPathFromUri(android.content.Context,android.net.Uri) -> getPathFromUri
    1:28:io.dcloud.common.util.DCFileUriData getShareImageUri(android.content.Context,java.io.File,java.lang.String,android.content.Intent) -> getShareImageUri
    1:5:android.net.Uri getVideoFileUri(android.content.Context,java.lang.String) -> getVideoFileUri
    1:3:boolean isAssetFile(java.lang.String) -> isAssetFile
    1:1:boolean isExternalPublicDir(java.lang.String) -> isExternalPublicDir
    1:13:boolean isFilePathForPublic(android.content.Context,java.lang.String) -> isFilePathForPublic
    1:1:boolean needMediaStoreOpenFile(android.content.Context) -> needMediaStoreOpenFile
    1:19:java.lang.String queryAbsolutePath(android.content.Context,android.net.Uri) -> queryAbsolutePath
    1:11:java.lang.Object readData4Disk(android.content.Context,java.lang.String) -> readData4Disk
    1:14:void saveData2Disk(android.content.Context,java.lang.Object,java.lang.String) -> saveData2Disk
    1:17:void writeStream2File(java.io.InputStream,java.io.File) -> writeStream2File
io.dcloud.common.util.HashUtils -> io.dcloud.common.util.HashUtils:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:10:java.lang.String getHash(java.lang.String) -> getHash
    1:6:java.lang.String toHexString(byte[]) -> toHexString
io.dcloud.common.util.IOUtil -> io.dcloud.common.util.IOUtil:
    1:1:void <init>() -> <init>
    1:1:java.io.InputStream byte2InputStream(byte[]) -> byte2InputStream
    1:3:void close(java.io.InputStream) -> close
    4:6:void close(java.io.OutputStream) -> close
    1:13:byte[] getBytes(java.io.InputStream) -> getBytes
    1:18:java.lang.String readStringFile(java.lang.String) -> readStringFile
    1:1:java.lang.String toString(java.io.InputStream) -> toString
    1:7:java.lang.StringBuilder toStringBuffer(java.io.InputStream) -> toStringBuffer
    1:13:boolean writeStringFile(java.lang.String,java.lang.String) -> writeStringFile
io.dcloud.common.util.ImageLoaderUtil -> io.dcloud.common.util.ImageLoaderUtil:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:2:void addNetIconDownloadUrl(java.lang.String) -> addNetIconDownloadUrl
    1:3:void clearCache() -> clearCache
    1:11:com.nostra13.dcloudimageloader.core.DisplayImageOptions getIconDisplayOptions(android.content.Context) -> getIconDisplayOptions
    1:1:java.lang.String getIconLoaclfolder() -> getIconLoaclfolder
    1:1:java.lang.String getOtherImageLoaclfolder() -> getOtherImageLoaclfolder
    1:10:com.nostra13.dcloudimageloader.core.DisplayImageOptions getStreamIconDisplayOptions(android.content.Context) -> getStreamIconDisplayOptions
    1:22:void initImageLoader(android.content.Context) -> initImageLoader
    1:23:void initImageLoaderL(android.content.Context) -> initImageLoaderL
    1:1:boolean isDownload(java.lang.String) -> isDownload
    1:8:void updateIcon(java.lang.String) -> updateIcon
io.dcloud.common.util.JSONUtil -> io.dcloud.common.util.JSONUtil:
    1:1:void <init>() -> <init>
    1:24:org.json.JSONObject combinJSONObject(org.json.JSONObject,org.json.JSONObject) -> combinJSONObject
    1:26:org.json.JSONObject combinSitemapHtmlJSONObject(org.json.JSONObject,org.json.JSONObject) -> combinSitemapHtmlJSONObject
    1:9:org.json.JSONArray createJSONArray(java.lang.String) -> createJSONArray
    1:3:org.json.JSONObject createJSONObject(java.lang.String) -> createJSONObject
    1:4:boolean getBoolean(org.json.JSONObject,java.lang.String) -> getBoolean
    1:3:int getInt(org.json.JSONObject,java.lang.String) -> getInt
    1:3:org.json.JSONArray getJSONArray(org.json.JSONArray,int) -> getJSONArray
    4:6:org.json.JSONArray getJSONArray(org.json.JSONObject,java.lang.String) -> getJSONArray
    1:3:org.json.JSONObject getJSONObject(org.json.JSONObject,java.lang.String) -> getJSONObject
    4:6:org.json.JSONObject getJSONObject(org.json.JSONArray,int) -> getJSONObject
    1:4:long getLong(org.json.JSONObject,java.lang.String) -> getLong
    1:1:java.lang.String getString(org.json.JSONObject,java.lang.String) -> getString
    2:4:java.lang.String getString(org.json.JSONArray,int) -> getString
    1:1:boolean isNull(org.json.JSONObject,java.lang.String) -> isNull
    1:1:java.lang.String toJSONableString(java.lang.String) -> toJSONableString
    1:6:java.util.HashMap toMap(org.json.JSONObject) -> toMap
io.dcloud.common.util.JSUtil -> io.dcloud.common.util.JSUtil:
    1:1:void <init>() -> <init>
    1:12:java.lang.String arrayList2JsStringArray(java.util.ArrayList) -> arrayList2JsStringArray
    1:6:void broadcastWebviewEvent(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String,java.lang.String) -> broadcastWebviewEvent
    1:5:boolean checkOperateDirErrorAndCallback(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String) -> checkOperateDirErrorAndCallback
    1:1:java.lang.String consoleTest(java.lang.String) -> consoleTest
    1:1:void execCallback(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String,int,boolean) -> execCallback
    2:2:void execCallback(io.dcloud.common.DHInterface.IWebview,java.lang.String,double,int,boolean) -> execCallback
    3:3:void execCallback(io.dcloud.common.DHInterface.IWebview,java.lang.String,org.json.JSONArray,int,boolean) -> execCallback
    4:4:void execCallback(io.dcloud.common.DHInterface.IWebview,java.lang.String,org.json.JSONObject,int,boolean) -> execCallback
    1:8:void execGEOCallback(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String,int,boolean,boolean) -> execGEOCallback
    1:3:java.lang.String[] jsonArrayToStringArr(org.json.JSONArray) -> jsonArrayToStringArr
    1:5:java.lang.String toJsResponseText(java.lang.String) -> toJsResponseText
    1:1:java.lang.String wrapJsVar(double) -> wrapJsVar
    2:2:java.lang.String wrapJsVar(float) -> wrapJsVar
    3:3:java.lang.String wrapJsVar(org.json.JSONArray) -> wrapJsVar
    4:4:java.lang.String wrapJsVar(org.json.JSONObject) -> wrapJsVar
    5:5:java.lang.String wrapJsVar(java.lang.String) -> wrapJsVar
    6:6:java.lang.String wrapJsVar(boolean) -> wrapJsVar
io.dcloud.common.util.JsEventUtil -> io.dcloud.common.util.JsEventUtil:
    1:1:void <init>() -> <init>
    1:1:java.lang.String broadcastEvents_format(java.lang.String,java.lang.String,boolean,java.lang.String[]) -> broadcastEvents_format
    1:1:java.lang.String eventListener_format(java.lang.String,java.lang.String,boolean) -> eventListener_format
io.dcloud.common.util.LauncherUtil -> io.dcloud.common.util.LauncherUtil:
    1:1:void <init>() -> <init>
    1:1:java.lang.String getAuthorityFromPermission(android.content.Context,java.lang.String) -> getAuthorityFromPermission
    1:7:java.lang.String getAuthorityFromPermissionDefault(android.content.Context) -> getAuthorityFromPermissionDefault
    1:12:java.lang.String getLauncherPackageName(android.content.Context) -> getLauncherPackageName
io.dcloud.common.util.LoadAppUtils -> io.dcloud.common.util.LoadAppUtils:
    1:1:void <init>() -> <init>
    1:102:java.lang.String getApkFileLable(android.content.Context,java.lang.String) -> getApkFileLable
    1:35:java.lang.String[] getApkFileSignatureAndPackageName(android.content.Context,java.lang.String) -> getApkFileSignatureAndPackageName
    1:17:java.lang.String[] getApkFileSignatureAndPackageNameEx(android.content.Context,java.lang.String) -> getApkFileSignatureAndPackageNameEx
    1:15:android.content.pm.Signature[] getApkSignature(java.lang.Object,java.lang.String) -> getApkSignature
    1:10:java.lang.String getAppName(android.content.Context) -> getAppName
    1:5:java.lang.String getAppSignatureMd5(android.content.Context,java.lang.String) -> getAppSignatureMd5
    1:7:java.lang.String getAppSignatureSHA1(android.content.Context) -> getAppSignatureSHA1
    1:3:java.lang.String getAppVersionName(android.content.Context,java.lang.String) -> getAppVersionName
    1:11:android.content.Intent getDataAndTypeIntent(android.content.Context,java.lang.String,java.lang.String) -> getDataAndTypeIntent
    1:1:int getLoadState(android.content.pm.PackageInfo,int) -> getLoadState
    1:5:android.content.pm.PackageInfo getLoadedApp(android.content.Context,android.content.pm.PackageManager,java.lang.String) -> getLoadedApp
    1:3:java.lang.String getLoadedAppNameByPackageInfo(android.content.Context,android.content.pm.PackageManager,android.content.pm.PackageInfo) -> getLoadedAppNameByPackageInfo
    1:13:java.lang.String[] getPackageSignatures(android.content.Context,java.lang.String) -> getPackageSignatures
    1:14:java.lang.String getSignatureString(android.content.pm.Signature,java.lang.String) -> getSignatureString
    1:11:boolean isAppLoad(android.content.Context,java.lang.String) -> isAppLoad
    1:1:boolean isEMUIRom() -> isEMUIRom
    1:3:boolean isSystemApp(android.content.pm.ApplicationInfo) -> isSystemApp
    1:3:boolean isValidAppPackageName(java.lang.String) -> isValidAppPackageName
    1:1:boolean isVivoRom() -> isVivoRom
    1:2:void loadRunApp(android.content.Context,java.lang.String) -> loadRunApp
    1:4:boolean openApp(android.content.Context,java.lang.String) -> openApp
    1:74:java.lang.Object parsePackage(java.lang.String,int) -> parsePackage
    1:1:boolean startAppDetailSettings(android.content.Context,java.lang.String) -> startAppDetailSettings
    1:7:boolean startSecuritySettingPage(android.content.Context) -> startSecuritySettingPage
    1:7:boolean startShortcutSettingsEMUI(android.content.Context,java.lang.String) -> startShortcutSettingsEMUI
    1:11:boolean startShortcutSettingsVivo(android.content.Context) -> startShortcutSettingsVivo
    1:6:void uninstall(android.content.Context,java.lang.String) -> uninstall
io.dcloud.common.util.LoadAppUtils$SafeCenter -> io.dcloud.common.util.LoadAppUtils$SafeCenter:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:1:boolean access$000(android.content.Context) -> access$000
    1:32:boolean goSafeCenter(android.content.Context) -> goSafeCenter
    1:26:void init(android.content.Context) -> init
io.dcloud.common.util.LoadAppUtils$SafeCenter$Item -> io.dcloud.common.util.LoadAppUtils$SafeCenter$Item:
    1:5:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
io.dcloud.common.util.Md5 -> io.dcloud.common.util.Md5:
    1:1:void <clinit>() -> <clinit>
    1:39:void <init>() -> <init>
    1:4:void Decode(long[],byte[],int) -> Decode
    1:4:void Encode(byte[],long[],int) -> Encode
    1:1:long FF(long,long,long,long,long,long,long) -> FF
    1:1:long GG(long,long,long,long,long,long,long) -> GG
    1:1:long HH(long,long,long,long,long,long,long) -> HH
    1:1:long II(long,long,long,long,long,long,long) -> II
    1:7:java.lang.String byteHEX(byte) -> byteHEX
    1:6:byte[] getMD5ofBytes(java.lang.String) -> getMD5ofBytes
    1:8:java.lang.String getMD5ofStr(java.lang.String) -> getMD5ofStr
    1:16:byte[] getMD5ofStream(java.io.InputStream) -> getMD5ofStream
    1:16:void md5Final() -> md5Final
    1:8:void md5Init() -> md5Init
    1:1:void md5Memcpy(byte[],byte[],int,int,int) -> md5Memcpy
    1:81:void md5Transform(byte[]) -> md5Transform
    1:28:void md5Update(byte[],int) -> md5Update
io.dcloud.common.util.Md5Utils -> io.dcloud.common.util.Md5Utils:
    1:2:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:6:java.lang.String md5(java.lang.String) -> md5
    7:10:java.lang.String md5(byte[]) -> md5
    11:11:java.lang.String md5(java.io.File) -> md5
    12:46:java.lang.String md5(java.io.File,java.lang.String) -> md5
    1:9:java.lang.String md5LowerCase(java.lang.String) -> md5LowerCase
    1:6:java.lang.String toHex(byte[]) -> toHex
    1:6:java.lang.String toLowerCaseHex(byte[]) -> toLowerCaseHex
    1:3:boolean verifyFileMd5(java.lang.String,java.lang.String) -> verifyFileMd5
io.dcloud.common.util.NetTool -> io.dcloud.common.util.NetTool:
    1:1:void <init>() -> <init>
    1:27:java.net.HttpURLConnection createConnection(java.net.URL,java.lang.String,int,boolean,boolean) -> createConnection
    1:1:javax.net.ssl.HostnameVerifier getDefaultHostnameVerifier() -> getDefaultHostnameVerifier
    1:1:byte[] httpGet(java.lang.String,java.util.HashMap) -> httpGet
    2:2:byte[] httpGet(java.lang.String,java.util.HashMap,boolean) -> httpGet
    3:3:byte[] httpGet(java.lang.String,java.util.HashMap,int) -> httpGet
    4:4:byte[] httpGet(java.lang.String,java.util.HashMap,int,boolean) -> httpGet
    5:5:byte[] httpGet(java.lang.String) -> httpGet
    6:10:byte[] httpGet(java.lang.String,boolean) -> httpGet
    11:11:byte[] httpGet(java.lang.String,int) -> httpGet
    12:16:byte[] httpGet(java.lang.String,int,boolean) -> httpGet
    1:1:byte[] httpGetThrows(java.lang.String) -> httpGetThrows
    2:2:byte[] httpGetThrows(java.lang.String,boolean) -> httpGetThrows
    1:1:byte[] httpPost(java.lang.String,java.lang.String,java.util.HashMap) -> httpPost
    2:2:byte[] httpPost(java.lang.String,java.lang.String,java.util.HashMap,boolean) -> httpPost
    3:3:byte[] httpPost(java.lang.String,java.lang.String,java.util.HashMap,boolean,boolean) -> httpPost
    4:4:byte[] httpPost(java.lang.String,java.lang.String,java.util.HashMap,boolean,java.lang.String[]) -> httpPost
    5:5:byte[] httpPost(java.lang.String,java.lang.String,java.util.HashMap,boolean,boolean,java.lang.String[]) -> httpPost
    6:6:byte[] httpPost(java.lang.String,java.lang.String,java.util.HashMap,int) -> httpPost
    7:7:byte[] httpPost(java.lang.String,java.lang.String,java.util.HashMap,int,boolean) -> httpPost
    1:9:boolean isNetworkAvailable(android.content.Context) -> isNetworkAvailable
    1:17:byte[] read(java.io.InputStream) -> read
    1:1:byte[] request(java.lang.String,java.lang.String,java.util.HashMap,java.lang.String,int,boolean) -> request
    2:2:byte[] request(java.lang.String,java.lang.String,java.util.HashMap,java.lang.String,int,boolean,boolean) -> request
    3:34:byte[] request(java.lang.String,java.lang.String,java.util.HashMap,java.lang.String,int,boolean,boolean,java.lang.String[]) -> request
    1:2:void write(java.io.OutputStream,java.lang.String) -> write
io.dcloud.common.util.NetworkTypeUtil -> io.dcloud.common.util.NetworkTypeUtil:
    1:1:void <init>() -> <init>
    1:7:java.lang.String getCurrentAPN(android.content.Context) -> getCurrentAPN
    1:30:int getNetworkType(android.content.Context) -> getNetworkType
    1:12:boolean isWifiProxy(android.content.Context) -> isWifiProxy
io.dcloud.common.util.NotificationUtil -> io.dcloud.common.util.NotificationUtil:
    1:1:void <init>() -> <init>
    1:2:void cancelNotification(android.content.Context,int) -> cancelNotification
    1:68:void createCustomNotification(android.content.Context,java.lang.String,android.graphics.Bitmap,java.lang.String,java.lang.String,int,android.app.PendingIntent) -> createCustomNotification
    1:8:void createNotificationChannel(android.content.Context) -> createNotificationChannel
    1:2:boolean isMiuiRom(android.content.Context) -> isMiuiRom
    1:50:void showNotification(android.content.Context,java.lang.String,java.lang.String,android.app.PendingIntent,android.graphics.Bitmap,int) -> showNotification
    51:117:void showNotification(android.content.Context,java.lang.String,java.lang.String,android.content.Intent,int,int,int,boolean) -> showNotification
io.dcloud.common.util.PdrUtil -> io.dcloud.common.util.PdrUtil:
    1:1:void <init>() -> <init>
    1:19:void alert(android.app.Activity,java.lang.String,android.graphics.Bitmap) -> alert
    1:9:java.lang.String appendByDeviceRootDir(java.lang.String) -> appendByDeviceRootDir
    1:2:boolean checkStatusbarColor(int) -> checkStatusbarColor
    1:17:void closeAndroidPDialog() -> closeAndroidPDialog
    1:12:java.lang.String convertAppPath(io.dcloud.common.DHInterface.IWebview,java.lang.String) -> convertAppPath
    1:20:int convertToScreenInt(java.lang.String,int,int,float) -> convertToScreenInt
    1:1:float dpiFromPx(int,android.util.DisplayMetrics) -> dpiFromPx
    1:8:java.lang.String encodeURL(java.lang.String) -> encodeURL
    1:15:org.json.JSONObject getConfigData(android.content.Context,java.lang.String,java.lang.String,boolean) -> getConfigData
    1:9:int getConfigOrientation(org.json.JSONObject) -> getConfigOrientation
    1:7:java.lang.String getDefaultPrivateDocPath(java.lang.String,java.lang.String) -> getDefaultPrivateDocPath
    1:74:java.lang.String getDownloadFilename(java.lang.String,java.lang.String,java.lang.String) -> getDownloadFilename
    1:1:java.lang.String getExtensionFromMimeType(java.lang.String) -> getExtensionFromMimeType
    1:16:java.lang.String getFileNameByUrl(java.lang.String,java.lang.String,java.lang.String) -> getFileNameByUrl
    1:4:java.lang.Object getKeyByIndex(java.util.HashMap,int) -> getKeyByIndex
    1:6:java.lang.Object getKeyByValue(java.util.HashMap,java.lang.Object,boolean) -> getKeyByValue
    7:7:java.lang.Object getKeyByValue(java.util.HashMap,java.lang.Object) -> getKeyByValue
    1:7:java.lang.String getMimeType(java.lang.String) -> getMimeType
    1:6:java.lang.String getNavBarOverride() -> getNavBarOverride
    1:5:int getNavigationBarHeight(android.content.Context) -> getNavigationBarHeight
    1:1:java.lang.String getNonString(java.lang.String,java.lang.String) -> getNonString
    1:3:java.lang.Object getObject(java.lang.Object[],int) -> getObject
    1:117:org.json.JSONObject getSitemapParameters(org.json.JSONObject,java.lang.String,java.lang.String) -> getSitemapParameters
    1:1:java.lang.String getUrlPathName(java.lang.String) -> getUrlPathName
    1:14:boolean hasNavBar(android.content.Context) -> hasNavBar
    1:1:java.lang.String int2DecimalStr(int,int) -> int2DecimalStr
    1:36:boolean isAllScreenDevice(android.app.Activity) -> isAllScreenDevice
    1:3:boolean isContains(java.lang.String,java.lang.String) -> isContains
    1:1:boolean isDeviceRootDir(java.lang.String) -> isDeviceRootDir
    1:1:boolean isEmpty(java.lang.Object) -> isEmpty
    1:1:boolean isEquals(java.lang.String,java.lang.String) -> isEquals
    1:1:boolean isFilePath(java.lang.String) -> isFilePath
    1:1:boolean isFullScreen(android.app.Activity) -> isFullScreen
    1:7:boolean isNavigationBarExist(android.app.Activity) -> isNavigationBarExist
    1:11:boolean isNavigationBarShow(android.app.Activity) -> isNavigationBarShow
    1:17:boolean isNavigationBarShowing(android.content.Context) -> isNavigationBarShowing
    1:4:boolean isNetPath(java.lang.String) -> isNetPath
    1:1:boolean isSafeEntryName(java.lang.String) -> isSafeEntryName
    1:7:boolean isSameDay(long,long) -> isSameDay
    1:9:boolean isSupportOaid() -> isSupportOaid
    1:1:boolean isUniMPHostForUniApp() -> isUniMPHostForUniApp
    1:16:void loadProperties2HashMap(java.util.HashMap,java.lang.String) -> loadProperties2HashMap
    17:52:void loadProperties2HashMap(java.util.HashMap,java.util.HashMap,java.util.HashMap,java.lang.String) -> loadProperties2HashMap
    1:12:java.lang.String makeQueryStringAllRegExp(java.lang.String) -> makeQueryStringAllRegExp
    1:3:boolean match(java.lang.String,java.lang.String) -> match
    1:3:boolean matchArray(org.json.JSONArray,java.lang.String) -> matchArray
    1:6:boolean navigationGestureEnabled(android.content.Context) -> navigationGestureEnabled
    1:4:boolean parseBoolean(java.lang.String,boolean,boolean) -> parseBoolean
    5:8:boolean parseBoolean(java.lang.String,boolean) -> parseBoolean
    1:1:float parseFloat(java.lang.String,float) -> parseFloat
    2:2:float parseFloat(java.lang.String,float,float) -> parseFloat
    3:13:float parseFloat(java.lang.String,float,float,float) -> parseFloat
    1:1:int parseInt(java.lang.String,int) -> parseInt
    2:25:int parseInt(java.lang.String,int,int) -> parseInt
    1:1:long parseLong(java.lang.String,long) -> parseLong
    1:1:int pxFromDp(float,android.util.DisplayMetrics) -> pxFromDp
    1:1:int pxFromSp(float,android.util.DisplayMetrics) -> pxFromSp
    1:15:android.graphics.Bitmap renderCroppedGreyscaleBitmap(byte[],int,int,int,int,int,int) -> renderCroppedGreyscaleBitmap
    1:14:boolean saveBitmapToFile(android.graphics.Bitmap,java.lang.String) -> saveBitmapToFile
    1:22:java.lang.String standardizedURL(java.lang.String,java.lang.String) -> standardizedURL
    1:6:java.lang.String[] stringSplit(java.lang.String,java.lang.String) -> stringSplit
    1:56:int stringToColor(java.lang.String) -> stringToColor
    1:1:java.lang.String stripAnchor(java.lang.String) -> stripAnchor
    1:3:java.lang.String stripQuery(java.lang.String) -> stripQuery
    1:15:java.lang.String toHexFromColor(int) -> toHexFromColor
    1:12:void toast(android.content.Context,java.lang.String,android.graphics.Bitmap) -> toast
io.dcloud.common.util.PdrUtil$1 -> io.dcloud.common.util.PdrUtil$1:
    1:1:void <init>(android.app.AlertDialog) -> <init>
    1:1:void onClick(android.content.DialogInterface,int) -> onClick
io.dcloud.common.util.ReflectUtils -> io.dcloud.common.util.ReflectUtils:
    1:1:void <init>() -> <init>
    1:3:java.lang.Class classForName(java.lang.String) -> classForName
    1:5:android.content.Context getApplicationContext() -> getApplicationContext
    1:5:java.lang.reflect.Field getDeclaredField(java.lang.Object,java.lang.String) -> getDeclaredField
    1:4:java.lang.reflect.Method getDeclaredMethod(java.lang.Object,java.lang.String,java.lang.Class[]) -> getDeclaredMethod
    1:1:java.lang.Object getField(java.lang.Object,java.lang.String) -> getField
    1:8:java.lang.Object getFieldValue(java.lang.Object,java.lang.String) -> getFieldValue
    1:8:int getIntField(java.lang.Object,java.lang.String) -> getIntField
    1:4:java.lang.reflect.Method getMethod(java.lang.String,java.lang.String,java.lang.Class[]) -> getMethod
    5:9:java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> getMethod
    1:6:java.lang.reflect.Constructor getObjectConstructor(java.lang.String,java.lang.Class[]) -> getObjectConstructor
    1:8:java.lang.Object getObjectField(java.lang.Object,java.lang.String) -> getObjectField
    1:8:java.lang.Object getObjectFieldNoDeclared(java.lang.Object,java.lang.String) -> getObjectFieldNoDeclared
    1:11:int getStaticIntField(java.lang.String,java.lang.String) -> getStaticIntField
    1:11:java.lang.Object getStaticObjectField(java.lang.String,java.lang.String) -> getStaticObjectField
    1:1:java.lang.String getStaticStringField(java.lang.String,java.lang.String) -> getStaticStringField
    1:5:java.lang.String getSystemProperties(java.lang.String,java.lang.String) -> getSystemProperties
    1:3:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
    1:8:java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Class[],java.lang.Object[]) -> invokeMethod
    1:11:void modifyPushBigContentView(java.lang.Object,java.lang.String,java.lang.Object) -> modifyPushBigContentView
    1:11:void modifyPushPriority(java.lang.Object,java.lang.String,java.lang.Object) -> modifyPushPriority
    1:8:java.lang.reflect.Field prepareField(java.lang.Class,java.lang.String) -> prepareField
    1:1:void setField(java.lang.Object,java.lang.String,java.lang.Object) -> setField
    1:11:void setFieldValue(java.lang.Object,java.lang.String,java.lang.Object) -> setFieldValue
    1:1:java.lang.Object stubAsInterface(java.lang.String,android.os.IBinder) -> stubAsInterface
    2:11:java.lang.Object stubAsInterface(java.lang.Class,android.os.IBinder) -> stubAsInterface
    1:9:void windowDismissed(android.view.inputmethod.InputMethodManager,android.os.IBinder) -> windowDismissed
io.dcloud.common.util.RuningAcitvityUtil -> io.dcloud.common.util.RuningAcitvityUtil:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:3:void StartActivity(android.content.Context,android.content.Intent) -> StartActivity
    1:11:java.lang.String getAppName(android.content.Context) -> getAppName
    1:8:android.app.Activity getTopRuningActivity(android.app.Activity) -> getTopRuningActivity
    1:7:boolean isRunningProcess(android.content.Context,java.lang.String) -> isRunningProcess
    1:2:void putRuningActivity(android.app.Activity) -> putRuningActivity
    1:2:void removeRuningActivity(java.lang.String) -> removeRuningActivity
io.dcloud.common.util.ServiceUtil -> io.dcloud.common.util.ServiceUtil:
    1:1:void <init>() -> <init>
    1:5:boolean isServiceRunning(android.content.Context,java.lang.Class) -> isServiceRunning
io.dcloud.common.util.ShortCutUtil -> io.dcloud.common.util.ShortCutUtil:
    1:1:void <init>() -> <init>
    1:1:void addShortCutSrc(android.content.Context,android.content.Intent,java.lang.String) -> addShortCutSrc
    1:7:void checkShortcutPermission(io.dcloud.common.DHInterface.IApp,java.lang.String,android.content.SharedPreferences,java.lang.String) -> checkShortcutPermission
    1:1:void commitShortcut(io.dcloud.common.DHInterface.IApp,int,int) -> commitShortcut
    2:2:void commitShortcut(io.dcloud.common.DHInterface.IApp,int,boolean,boolean,boolean,int) -> commitShortcut
    3:42:void commitShortcut(io.dcloud.common.DHInterface.IApp,int,boolean,boolean,boolean,int,java.lang.String) -> commitShortcut
    1:130:void createShortcut(io.dcloud.common.DHInterface.IApp,java.lang.String,android.graphics.Bitmap,boolean) -> createShortcut
    1:98:int createShortcutGuide(io.dcloud.common.DHInterface.IApp,java.lang.String,android.graphics.Bitmap,boolean,boolean,boolean) -> createShortcutGuide
    1:1:boolean createShortcutToDeskTop(android.content.Context,java.lang.String,java.lang.String,android.graphics.Bitmap,java.lang.String,org.json.JSONObject,boolean) -> createShortcutToDeskTop
    2:6:boolean createShortcutToDeskTop(io.dcloud.common.DHInterface.IApp,boolean) -> createShortcutToDeskTop
    7:37:boolean createShortcutToDeskTop(android.content.Context,java.lang.String,java.lang.String,android.graphics.Bitmap,java.lang.String,org.json.JSONObject,boolean,boolean) -> createShortcutToDeskTop
    1:5:android.content.Intent getHeadShortCutIntent(java.lang.String) -> getHeadShortCutIntent
    1:18:java.lang.String getShortCutUri(android.content.Context) -> getShortCutUri
    1:21:java.lang.String getSreamAppShortName(android.content.Context) -> getSreamAppShortName
    1:25:android.net.Uri getUriFromLauncher(android.content.Context) -> getUriFromLauncher
    1:2:boolean hasShortcut(android.content.Context,java.lang.String) -> hasShortcut
    1:54:boolean isHasShortCut(io.dcloud.common.DHInterface.IApp,long,java.lang.String) -> isHasShortCut
    1:3:boolean isOpsCreateShortcut(android.content.Context,java.lang.String) -> isOpsCreateShortcut
    1:4:boolean isRunShortCut(android.content.Context,java.lang.String) -> isRunShortCut
    1:38:void onResumeCreateShortcut(io.dcloud.common.DHInterface.IApp) -> onResumeCreateShortcut
    1:33:void onResumeCreateShortcutGuide(io.dcloud.common.DHInterface.IApp) -> onResumeCreateShortcutGuide
    1:3:void removeRunHandler() -> removeRunHandler
    1:43:boolean removeShortcutFromDeskTop(android.content.Context,java.lang.String,java.lang.String,java.lang.String,org.json.JSONObject) -> removeShortcutFromDeskTop
    1:42:java.lang.String requestShortCut(android.content.Context,java.lang.String) -> requestShortCut
    1:1:java.lang.String requestShortCutForCommit(android.content.Context,java.lang.String) -> requestShortCutForCommit
    1:25:java.lang.String requestShortCutPermissionVivo(android.content.Context,java.lang.String) -> requestShortCutPermissionVivo
    1:9:void showCreateShortCutToast(io.dcloud.common.DHInterface.IApp) -> showCreateShortCutToast
    1:66:boolean showSettingsDialog(io.dcloud.common.DHInterface.IApp,java.lang.String,android.graphics.Bitmap) -> showSettingsDialog
    1:8:boolean showToast(io.dcloud.common.DHInterface.IApp,android.app.Activity,java.lang.String,android.content.SharedPreferences) -> showToast
    1:3:void updateShortcutFromDeskTop(android.app.Activity,java.lang.String,java.lang.String,android.graphics.Bitmap,java.lang.String) -> updateShortcutFromDeskTop
io.dcloud.common.util.ShortCutUtil$1 -> io.dcloud.common.util.ShortCutUtil$1:
    1:1:void <init>(java.lang.String,io.dcloud.common.DHInterface.IApp,int,int,boolean,boolean,boolean) -> <init>
    1:35:void run() -> run
io.dcloud.common.util.ShortCutUtil$2 -> io.dcloud.common.util.ShortCutUtil$2:
    1:1:void <init>(io.dcloud.common.DHInterface.IApp,java.lang.String,android.graphics.Bitmap) -> <init>
    1:5:void onClick(android.content.DialogInterface,int) -> onClick
io.dcloud.common.util.ShortCutUtil$3 -> io.dcloud.common.util.ShortCutUtil$3:
    1:1:void <init>(android.content.SharedPreferences,io.dcloud.common.DHInterface.IApp) -> <init>
    1:23:void onClick(android.content.DialogInterface,int) -> onClick
io.dcloud.common.util.ShortCutUtil$4 -> io.dcloud.common.util.ShortCutUtil$4:
    1:1:void <init>(io.dcloud.common.DHInterface.IApp) -> <init>
    1:1:java.lang.String getType() -> getType
    1:23:void run() -> run
    1:1:void setType(java.lang.String) -> setType
io.dcloud.common.util.ShortcutCreateUtil -> io.dcloud.common.util.ShortcutCreateUtil:
    1:210:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:25:boolean canCreateShortcut(android.content.Context) -> canCreateShortcut
    1:1:java.lang.String getBrand() -> getBrand
    1:5:java.util.List getDisablePackageList() -> getDisablePackageList
    1:1:java.util.List getDuplicatePackages() -> getDuplicatePackages
    1:1:java.util.List getHasTipPackageList() -> getHasTipPackageList
    1:1:java.util.List getNoTipPackageList() -> getNoTipPackageList
    1:1:java.util.List getSystemLauncherList() -> getSystemLauncherList
    1:1:boolean isDeleteLaucher(android.content.Context) -> isDeleteLaucher
    1:23:boolean isDisableShort(android.content.Context) -> isDisableShort
    1:6:boolean isDuplicateLauncher(android.content.Context) -> isDuplicateLauncher
    1:1:boolean isSystemLauncher(android.content.Context) -> isSystemLauncher
    1:1:boolean needToast(android.content.Context) -> needToast
io.dcloud.common.util.StringUtil -> io.dcloud.common.util.StringUtil:
    1:1:void <init>() -> <init>
    1:19:java.lang.String convert(java.lang.String) -> convert
    1:1:java.lang.String format(java.lang.String,java.lang.Object[]) -> format
    1:3:java.lang.String getSCString(java.lang.String,java.lang.String) -> getSCString
    1:43:java.lang.String revert(java.lang.String) -> revert
    1:18:android.graphics.Bitmap textToBitmap(android.app.Activity,java.lang.String) -> textToBitmap
    1:5:java.lang.String trimString(java.lang.String,char) -> trimString
    6:7:java.lang.String[] trimString(java.lang.String[],char) -> trimString
io.dcloud.common.util.SubNViewsUtil -> io.dcloud.common.util.SubNViewsUtil:
    1:1:void <init>() -> <init>
    1:56:void initFrameSubNViews(io.dcloud.common.adapter.ui.AdaFrameView) -> initFrameSubNViews
    1:69:boolean startAnimation(io.dcloud.common.adapter.ui.AdaFrameView,io.dcloud.nineoldandroids.animation.Animator,int) -> startAnimation
    1:3:void updateSubNViews(io.dcloud.common.adapter.ui.AdaFrameView,org.json.JSONArray) -> updateSubNViews
io.dcloud.common.util.SubNViewsUtil$1 -> io.dcloud.common.util.SubNViewsUtil$1:
    1:1:void <init>(io.dcloud.common.adapter.ui.AdaFrameView,android.view.View,java.util.ArrayList,android.view.ViewGroup,android.view.ViewGroup) -> <init>
    1:5:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    1:3:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
io.dcloud.common.util.SubNViewsUtil$1$1 -> io.dcloud.common.util.SubNViewsUtil$1$1:
    1:1:void <init>(io.dcloud.common.util.SubNViewsUtil$1) -> <init>
    1:12:void run() -> run
io.dcloud.common.util.TelephonyUtil -> io.dcloud.common.util.TelephonyUtil:
    1:1:void <init>() -> <init>
    1:25:java.lang.String createRandomBSFile(android.content.Context,java.io.File,java.io.File,java.lang.String) -> createRandomBSFile
    1:1:java.lang.String getAId(android.content.Context) -> getAId
    1:7:java.lang.String getAPSubId(android.content.Context) -> getAPSubId
    1:1:java.lang.String getIMEI(android.content.Context) -> getIMEI
    2:2:java.lang.String getIMEI(android.content.Context,boolean) -> getIMEI
    3:3:java.lang.String getIMEI(android.content.Context,boolean,boolean) -> getIMEI
    1:3:java.lang.String getIMEIS(android.content.Context) -> getIMEIS
    1:23:java.lang.String getIMSI(android.content.Context) -> getIMSI
    1:56:java.lang.String[] getMultiIMEI(android.content.Context) -> getMultiIMEI
    1:7:java.lang.Object getPhoneInfo(int,android.content.Context) -> getPhoneInfo
    1:1:java.lang.String getSBBS(android.content.Context,boolean,boolean) -> getSBBS
    2:361:java.lang.String getSBBS(android.content.Context,boolean,boolean,boolean) -> getSBBS
    1:14:int getSubId(int,android.content.Context) -> getSubId
    1:7:java.lang.String getUUID(android.content.Context) -> getUUID
    1:14:java.lang.String getWifiData(android.content.Context) -> getWifiData
    1:1:boolean isUnValid(java.lang.String) -> isUnValid
    1:20:java.lang.String savePublicFile(java.io.File,java.io.File,java.lang.String,java.lang.String,android.content.Context) -> savePublicFile
    1:15:java.lang.String updateIMEI(android.content.Context) -> updateIMEI
io.dcloud.common.util.TestUtil -> io.dcloud.common.util.TestUtil:
    1:2:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:1:void clearTimers() -> clearTimers
    1:3:void delete(java.lang.String) -> delete
    1:3:io.dcloud.common.util.TestUtil$Timer findTimer(java.lang.String) -> findTimer
    1:1:java.lang.Object getRecord(java.lang.String) -> getRecord
    1:3:long getUseTime(java.lang.String,java.lang.String) -> getUseTime
    1:1:void mark(java.lang.String) -> mark
    1:3:void print(java.lang.String) -> print
    4:6:void print(java.lang.String,java.lang.String) -> print
    1:1:void record(java.lang.String,java.lang.Object) -> record
    2:2:void record(java.lang.String) -> record
    3:3:void record(java.lang.String,java.lang.String) -> record
    1:5:void record0(java.lang.String,java.lang.String) -> record0
    1:3:void setRecordExtra(java.lang.String,java.lang.String) -> setRecordExtra
io.dcloud.common.util.TestUtil$DCErrorInfo -> io.dcloud.common.util.TestUtil$DCErrorInfo:
    1:3:void <init>(int,int) -> <init>
io.dcloud.common.util.TestUtil$PointTime -> io.dcloud.common.util.TestUtil$PointTime:
    1:106:void <clinit>() -> <clinit>
    1:12:void <init>(java.lang.String,int) -> <init>
    0:3:void addErrorInfo(io.dcloud.common.util.TestUtil$DCErrorInfo) -> addErrorInfo
    1:2:boolean checkCommitEnv(android.content.Context,java.lang.String,java.lang.String) -> checkCommitEnv
    1:1:void commitRatio(android.content.Context,java.lang.String,java.lang.String,int,java.lang.String,java.util.HashMap) -> commitRatio
    1:1:void commitTid(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int) -> commitTid
    2:2:void commitTid(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,boolean,java.lang.String) -> commitTid
    3:3:void commitTid(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.util.HashMap) -> commitTid
    4:4:void commitTid(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,org.json.JSONObject,java.lang.String,java.lang.String,java.util.HashMap) -> commitTid
    1:3:io.dcloud.common.util.TestUtil$PointTime createPointTime(java.lang.String,int) -> createPointTime
    1:2:void delData(android.content.Context,java.lang.String,java.lang.String) -> delData
    1:8:void delPointData(android.content.Context,java.lang.String) -> delPointData
    1:4:void deleteStreamAppStatus(android.content.Context,java.lang.String,java.lang.String) -> deleteStreamAppStatus
    1:1:io.dcloud.common.util.TestUtil$PointTime destroyPointTime(java.lang.String) -> destroyPointTime
    1:11:java.lang.String getAllCommitData(android.content.Context,java.lang.String) -> getAllCommitData
    1:2:java.lang.String getData(android.content.Context,java.lang.String,java.lang.String) -> getData
    1:15:java.lang.String getErrorInfoString() -> getErrorInfoString
    1:1:int getIndex() -> getIndex
    1:1:long getPoint(int) -> getPoint
    1:1:io.dcloud.common.util.TestUtil$PointTime getPointTime(java.lang.String) -> getPointTime
    1:1:java.lang.String getPointsString() -> getPointsString
    2:9:java.lang.String getPointsString(java.lang.String) -> getPointsString
    1:1:long getStartTime() -> getStartTime
    1:1:boolean hasPointTime(java.lang.String) -> hasPointTime
    1:2:boolean hasStreamAppStatus(android.content.Context,java.lang.String,java.lang.String) -> hasStreamAppStatus
    1:2:io.dcloud.common.util.TestUtil$PointTime point() -> point
    3:4:io.dcloud.common.util.TestUtil$PointTime point(int) -> point
    5:8:io.dcloud.common.util.TestUtil$PointTime point(int,long) -> point
    1:1:void pre(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> pre
    1:4:void saveData(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> saveData
    1:54:void savePointData(android.content.Context,java.lang.String,int,java.lang.String) -> savePointData
    1:4:void saveStreamAppStatus(android.content.Context,java.lang.String,java.lang.String) -> saveStreamAppStatus
    1:5:void updateData(io.dcloud.common.util.TestUtil$PointTime) -> updateData
    1:7:io.dcloud.common.util.TestUtil$PointTime updatePointTime(java.lang.String) -> updatePointTime
io.dcloud.common.util.TestUtil$Timer -> io.dcloud.common.util.TestUtil$Timer:
    1:3:void <init>(java.lang.String) -> <init>
    4:5:void <init>(java.lang.String,java.lang.String) -> <init>
    1:4:long pointTime(java.lang.String) -> pointTime
    1:4:void print() -> print
    5:8:void print(java.lang.String) -> print
io.dcloud.common.util.ThreadPool -> io.dcloud.common.util.ThreadPool:
    1:1:void <init>(io.dcloud.common.util.ThreadPool$1) -> <init>
    2:14:void <init>() -> <init>
    0:2:void addSingleThreadTask(java.lang.Runnable) -> addSingleThreadTask
    1:1:void addThreadTask(java.lang.Runnable) -> addThreadTask
    1:4:void addThreadTask(java.lang.Runnable,boolean) -> addThreadTask
    1:1:io.dcloud.common.util.ThreadPool self() -> self
io.dcloud.common.util.ThreadPool$ThreadPoolHolder -> io.dcloud.common.util.ThreadPool$ThreadPoolHolder:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
io.dcloud.common.util.TitleNViewUtil -> io.dcloud.common.util.TitleNViewUtil:
    1:1:void <init>() -> <init>
    1:38:boolean backButtonIsChanged(org.json.JSONObject,org.json.JSONObject) -> backButtonIsChanged
    1:12:boolean backgroundImageIsChanged(org.json.JSONObject,org.json.JSONObject) -> backgroundImageIsChanged
    1:16:boolean backgroundIsChanged(org.json.JSONObject,org.json.JSONObject) -> backgroundIsChanged
    1:1:int changeColorAlpha(int,float) -> changeColorAlpha
    2:40:java.lang.String changeColorAlpha(java.lang.String,float) -> changeColorAlpha
    1:5:boolean checkKeyValueIsModify(java.lang.String,org.json.JSONObject,org.json.JSONObject) -> checkKeyValueIsModify
    1:119:java.lang.String color2Color(java.lang.String,java.lang.String,float) -> color2Color
    1:38:boolean compareColor(java.lang.String,java.lang.String) -> compareColor
    1:11:void drawTitle(io.dcloud.common.DHInterface.IFrameView,io.dcloud.common.DHInterface.ITitleNView,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> drawTitle
    1:5:int getColorAlpha(java.lang.String) -> getColorAlpha
    1:2:java.lang.Object getTitleNView(io.dcloud.common.DHInterface.AbsMgr,io.dcloud.common.DHInterface.IWebview,io.dcloud.common.DHInterface.IFrameView,java.lang.String) -> getTitleNView
    1:6:java.lang.String getTitleNViewId(io.dcloud.common.DHInterface.IFrameView) -> getTitleNViewId
    1:1:java.lang.String getTitleNViewSearchInputText(io.dcloud.common.DHInterface.ITitleNView) -> getTitleNViewSearchInputText
    1:17:java.lang.String intColor2String(int,boolean) -> intColor2String
    1:1:boolean isButtonsIsChanged(org.json.JSONObject,org.json.JSONObject) -> isButtonsIsChanged
    1:35:boolean isSearchInputChange(org.json.JSONObject,org.json.JSONObject) -> isSearchInputChange
    1:15:boolean isShadowChanged(org.json.JSONObject,org.json.JSONObject) -> isShadowChanged
    1:1:boolean isTitleTypeForDef(org.json.JSONObject) -> isTitleTypeForDef
    1:1:void jsonCompare(org.json.JSONObject,org.json.JSONObject) -> jsonCompare
    1:10:boolean paddingIsChanged(org.json.JSONObject,org.json.JSONObject) -> paddingIsChanged
    1:23:boolean progressIsChanged(org.json.JSONObject,org.json.JSONObject) -> progressIsChanged
    1:16:boolean redDotChange(org.json.JSONObject,org.json.JSONObject) -> redDotChange
    1:49:void setBackButton(io.dcloud.common.DHInterface.ITitleNView,org.json.JSONObject,int) -> setBackButton
    1:2:void setBackgroundImage(io.dcloud.common.DHInterface.ITitleNView,org.json.JSONObject) -> setBackgroundImage
    1:69:void setButtons(io.dcloud.common.DHInterface.ITitleNView,org.json.JSONObject,io.dcloud.common.DHInterface.IWebview) -> setButtons
    1:3:void setCapsuleButtonStyle(io.dcloud.common.DHInterface.ITitleNView,org.json.JSONObject) -> setCapsuleButtonStyle
    1:25:void setHomeButton(io.dcloud.common.DHInterface.ITitleNView,org.json.JSONObject,int) -> setHomeButton
    1:15:void setProgress(io.dcloud.common.DHInterface.ITitleNView,org.json.JSONObject) -> setProgress
    1:2:void setRedDotColor(io.dcloud.common.DHInterface.ITitleNView,org.json.JSONObject) -> setRedDotColor
    1:13:void setSearchInput(io.dcloud.common.DHInterface.ITitleNView,org.json.JSONObject,io.dcloud.common.DHInterface.IWebview) -> setSearchInput
    1:5:void setShadow(io.dcloud.common.DHInterface.ITitleNView,org.json.JSONObject) -> setShadow
    1:25:void setSplitLine(io.dcloud.common.DHInterface.ITitleNView,io.dcloud.common.DHInterface.IWebview,org.json.JSONObject,org.json.JSONObject,boolean,java.lang.String) -> setSplitLine
    1:12:void setSubTitleIcon(io.dcloud.common.DHInterface.ITitleNView,org.json.JSONObject) -> setSubTitleIcon
    1:2:void setTitleAlign(io.dcloud.common.DHInterface.ITitleNView,org.json.JSONObject) -> setTitleAlign
    1:39:void setTitleNViewButtonStyle(io.dcloud.common.DHInterface.ITitleNView,java.lang.String,org.json.JSONObject,io.dcloud.common.DHInterface.IFrameView) -> setTitleNViewButtonStyle
    1:15:void setTitleNViewPadding(io.dcloud.common.DHInterface.ITitleNView,io.dcloud.common.DHInterface.IWebview,org.json.JSONObject) -> setTitleNViewPadding
    1:1:void setTitleNViewSearchInputFocus(io.dcloud.common.DHInterface.ITitleNView,java.lang.String) -> setTitleNViewSearchInputFocus
    1:1:void setTitleNViewSearchInputText(io.dcloud.common.DHInterface.ITitleNView,java.lang.String) -> setTitleNViewSearchInputText
    1:29:boolean splitLineIsChanged(org.json.JSONObject,org.json.JSONObject) -> splitLineIsChanged
    1:1:void startProcess(io.dcloud.common.DHInterface.ITitleNView) -> startProcess
    1:1:void stopProcess(io.dcloud.common.DHInterface.ITitleNView) -> stopProcess
    1:12:boolean subTitleIconChanged(org.json.JSONObject,org.json.JSONObject) -> subTitleIconChanged
    1:14:boolean titleAlignIsChanged(org.json.JSONObject,org.json.JSONObject) -> titleAlignIsChanged
    1:43:boolean titleColorIsChanged(org.json.JSONObject,org.json.JSONObject) -> titleColorIsChanged
    1:43:boolean titleIsChanged(org.json.JSONObject,org.json.JSONObject) -> titleIsChanged
    1:1:void titleNViewButtonBadge(io.dcloud.common.DHInterface.ITitleNView,org.json.JSONObject,boolean) -> titleNViewButtonBadge
    1:1:void titleNViewButtonRedDot(io.dcloud.common.DHInterface.ITitleNView,org.json.JSONObject,boolean) -> titleNViewButtonRedDot
    1:10:boolean titleNViewStyleNoTitle(org.json.JSONObject) -> titleNViewStyleNoTitle
    1:22:boolean titleOverflowIsChanged(org.json.JSONObject,org.json.JSONObject) -> titleOverflowIsChanged
    1:43:boolean titleSizeIsChanged(org.json.JSONObject,org.json.JSONObject) -> titleSizeIsChanged
    1:211:void updateTitleNViewStatus(io.dcloud.common.DHInterface.ITitleNView,io.dcloud.common.DHInterface.IWebview,float,org.json.JSONObject,float) -> updateTitleNViewStatus
io.dcloud.common.util.TitleNViewUtil$1 -> io.dcloud.common.util.TitleNViewUtil$1:
    1:1:void <init>(io.dcloud.common.DHInterface.ITitleNView,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    1:1:void onAnimationEnd() -> onAnimationEnd
io.dcloud.common.util.XmlUtil -> io.dcloud.common.util.XmlUtil:
    1:1:void <init>() -> <init>
    1:4:io.dcloud.common.util.XmlUtil$DHNode XML_Parser(java.io.InputStream) -> XML_Parser
    1:9:io.dcloud.common.util.XmlUtil$DHNode XML_ParserDocument(java.io.InputStream) -> XML_ParserDocument
    1:1:void addChild(io.dcloud.common.util.XmlUtil$DHNode,io.dcloud.common.util.XmlUtil$DHNode,int) -> addChild
    1:9:void attrFill2HashMap(java.util.HashMap,io.dcloud.common.util.XmlUtil$DHNode) -> attrFill2HashMap
    1:11:java.lang.String elementToString(io.dcloud.common.util.XmlUtil$DHNode) -> elementToString
    1:1:java.lang.String getAttributeValue(io.dcloud.common.util.XmlUtil$DHNode,java.lang.String,java.lang.String) -> getAttributeValue
    2:4:int getAttributeValue(io.dcloud.common.util.XmlUtil$DHNode,java.lang.String,int) -> getAttributeValue
    5:6:java.lang.String getAttributeValue(io.dcloud.common.util.XmlUtil$DHNode,java.lang.String) -> getAttributeValue
    1:11:java.util.ArrayList getAttributes(io.dcloud.common.util.XmlUtil$DHNode) -> getAttributes
    1:2:io.dcloud.common.util.XmlUtil$DHNode getChild(io.dcloud.common.util.XmlUtil$DHNode,int) -> getChild
    1:6:io.dcloud.common.util.XmlUtil$DHNode getElement(io.dcloud.common.util.XmlUtil$DHNode,java.lang.String) -> getElement
    1:1:io.dcloud.common.util.XmlUtil$DHNode getElementDocument(io.dcloud.common.util.XmlUtil$DHNode) -> getElementDocument
    1:1:java.lang.String getElementName(io.dcloud.common.util.XmlUtil$DHNode) -> getElementName
    1:8:java.util.ArrayList getElements(io.dcloud.common.util.XmlUtil$DHNode,java.lang.String) -> getElements
    1:1:int getNodeType(io.dcloud.common.util.XmlUtil$DHNode,int) -> getNodeType
    1:5:io.dcloud.common.util.XmlUtil$DHNode getRootElement(io.dcloud.common.util.XmlUtil$DHNode) -> getRootElement
    1:14:java.lang.String getText(io.dcloud.common.util.XmlUtil$DHNode) -> getText
    1:1:java.lang.String getTextValue(io.dcloud.common.util.XmlUtil$DHNode) -> getTextValue
    1:1:boolean isElement(java.lang.Object) -> isElement
    1:1:boolean isText(io.dcloud.common.util.XmlUtil$DHNode) -> isText
    1:9:io.dcloud.common.util.XmlUtil$DHNode newDocument() -> newDocument
    1:2:io.dcloud.common.util.XmlUtil$DHNode newElement(io.dcloud.common.util.XmlUtil$DHNode,java.lang.String) -> newElement
    1:4:void removeAttribute(io.dcloud.common.util.XmlUtil$DHNode,java.lang.String) -> removeAttribute
    1:1:void removeChild(io.dcloud.common.util.XmlUtil$DHNode,int) -> removeChild
    2:2:void removeChild(io.dcloud.common.util.XmlUtil$DHNode,io.dcloud.common.util.XmlUtil$DHNode) -> removeChild
    1:4:void setAttributeValue(io.dcloud.common.util.XmlUtil$DHNode,java.lang.String,java.lang.String) -> setAttributeValue
    1:1:void setText(io.dcloud.common.util.XmlUtil$DHNode,java.lang.String) -> setText
io.dcloud.common.util.XmlUtil$DHNode -> io.dcloud.common.util.XmlUtil$DHNode:
    1:1:void <init>(org.w3c.dom.Node,io.dcloud.common.util.XmlUtil$1) -> <init>
    2:3:void <init>(org.w3c.dom.Node) -> <init>
    1:4:boolean equals(java.lang.Object) -> equals
io.dcloud.common.util.ZipUtils -> io.dcloud.common.util.ZipUtils:
    1:1:void <init>() -> <init>
    1:25:java.lang.String inflaterString(byte[]) -> inflaterString
    1:39:void upZipFile(java.io.File,java.lang.String) -> upZipFile
    1:20:void zipFile(java.io.File,java.util.zip.ZipOutputStream,java.lang.String) -> zipFile
    1:10:void zipFiles(java.io.File[],java.io.File) -> zipFiles
    1:11:byte[] zipString(java.lang.String) -> zipString
io.dcloud.common.util.db.DCSQLiteOpenHelper -> io.dcloud.common.util.db.DCSQLiteOpenHelper:
    1:1:void <clinit>() -> <clinit>
    1:2:void <init>(android.content.Context) -> <init>
    0:5:void closeDatabase() -> closeDatabase
    1:16:void createTableIfNotExists(android.database.sqlite.SQLiteDatabase) -> createTableIfNotExists
    17:48:void createTableIfNotExists(android.database.sqlite.SQLiteDatabase,java.lang.String) -> createTableIfNotExists
    1:2:boolean deleteDB() -> deleteDB
    0:37:void ensureDatabase(java.lang.String) -> ensureDatabase
    1:2:android.database.sqlite.SQLiteDatabase getDatabase() -> getDatabase
    3:4:android.database.sqlite.SQLiteDatabase getDatabase(java.lang.String) -> getDatabase
    1:4:io.dcloud.common.util.db.DCSQLiteOpenHelper getSQLiteOpenHelper(android.content.Context) -> getSQLiteOpenHelper
    1:1:void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
io.dcloud.common.util.db.DCStorage -> io.dcloud.common.util.db.DCStorage:
    1:41:void <init>(android.content.Context) -> <init>
    1:1:io.dcloud.common.util.db.DCSQLiteOpenHelper access$000(io.dcloud.common.util.db.DCStorage) -> access$000
    1:1:java.util.concurrent.ExecutorService access$100(io.dcloud.common.util.db.DCStorage) -> access$100
    1:1:java.util.concurrent.ExecutorService access$102(io.dcloud.common.util.db.DCStorage,java.util.concurrent.ExecutorService) -> access$102
    0:12:void checkSPstorageToDB(android.content.Context,java.lang.String) -> checkSPstorageToDB
    1:4:void clearDBFile(android.content.Context,java.lang.String) -> clearDBFile
    1:1:void close() -> close
    1:6:void execute(java.lang.Runnable) -> execute
    1:1:java.lang.String getBaseDBFilePath(android.content.Context,java.lang.String) -> getBaseDBFilePath
    1:1:java.lang.String getCurrentTableName(java.lang.String) -> getCurrentTableName
    1:34:java.lang.String getDBFileValue(java.lang.String) -> getDBFileValue
    1:4:io.dcloud.common.util.db.DCStorage getDCStorage(android.content.Context) -> getDCStorage
    1:7:java.lang.String getMsgForCode(android.content.Context,int) -> getMsgForCode
    0:17:io.dcloud.common.util.db.DCStorage$StorageInfo performClear(android.content.Context,java.lang.String) -> performClear
    0:27:io.dcloud.common.util.db.DCStorage$StorageInfo performGetAllKeys(java.lang.String) -> performGetAllKeys
    0:64:io.dcloud.common.util.db.DCStorage$StorageInfo performGetItem(java.lang.String,java.lang.String) -> performGetItem
    0:29:io.dcloud.common.util.db.DCStorage$StorageInfo performGetLength(java.lang.String) -> performGetLength
    0:26:io.dcloud.common.util.db.DCStorage$StorageInfo performRemoveItem(android.content.Context,java.lang.String,java.lang.String) -> performRemoveItem
    0:82:io.dcloud.common.util.db.DCStorage$StorageInfo performSetItem(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> performSetItem
    1:2:void removeDBFile(android.content.Context,java.lang.String,java.lang.String) -> removeDBFile
    3:11:void removeDBFile(java.lang.String) -> removeDBFile
    1:27:java.lang.String saveDBFileValue(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> saveDBFileValue
io.dcloud.common.util.db.DCStorage$1 -> io.dcloud.common.util.db.DCStorage$1:
    1:1:void <init>(io.dcloud.common.util.db.DCStorage) -> <init>
    1:10:void run() -> run
io.dcloud.common.util.db.DCStorage$StorageInfo -> io.dcloud.common.util.db.DCStorage$StorageInfo:
    1:1:void <init>(io.dcloud.common.util.db.DCStorage) -> <init>
io.dcloud.common.util.emulator.CheckResult -> io.dcloud.common.util.emulator.CheckResult:
    1:3:void <init>(int,java.lang.String) -> <init>
io.dcloud.common.util.emulator.CommandUtil -> io.dcloud.common.util.emulator.CommandUtil:
    1:1:void <init>(io.dcloud.common.util.emulator.CommandUtil$1) -> <init>
    2:2:void <init>() -> <init>
    1:4:java.lang.String getProperty(java.lang.String) -> getProperty
    1:1:io.dcloud.common.util.emulator.CommandUtil getSingleInstance() -> getSingleInstance
io.dcloud.common.util.emulator.CommandUtil$SingletonHolder -> io.dcloud.common.util.emulator.CommandUtil$SingletonHolder:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:1:io.dcloud.common.util.emulator.CommandUtil access$100() -> access$100
io.dcloud.common.util.emulator.EmulatorCheckUtil -> io.dcloud.common.util.emulator.EmulatorCheckUtil:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>(io.dcloud.common.util.emulator.EmulatorCheckUtil$1) -> <init>
    2:2:void <init>() -> <init>
    1:6:io.dcloud.common.util.emulator.CheckResult checkFeaturesByBaseBand() -> checkFeaturesByBaseBand
    1:8:io.dcloud.common.util.emulator.CheckResult checkFeaturesByBoard() -> checkFeaturesByBoard
    1:8:io.dcloud.common.util.emulator.CheckResult checkFeaturesByFlavor() -> checkFeaturesByFlavor
    1:19:io.dcloud.common.util.emulator.CheckResult checkFeaturesByHardware() -> checkFeaturesByHardware
    1:8:io.dcloud.common.util.emulator.CheckResult checkFeaturesByManufacturer() -> checkFeaturesByManufacturer
    1:9:io.dcloud.common.util.emulator.CheckResult checkFeaturesByModel() -> checkFeaturesByModel
    1:7:io.dcloud.common.util.emulator.CheckResult checkFeaturesByPlatform() -> checkFeaturesByPlatform
    1:23:io.dcloud.common.util.emulator.CheckResult checkPkgNameForEmulator() -> checkPkgNameForEmulator
    1:98:boolean emulatorCheck(android.content.Context) -> emulatorCheck
    1:2:java.lang.String getProperty(java.lang.String) -> getProperty
    1:2:int getSensorNumber(android.content.Context) -> getSensorNumber
    1:1:io.dcloud.common.util.emulator.EmulatorCheckUtil getSingleInstance() -> getSingleInstance
    1:3:int getUserAppNum(java.lang.String) -> getUserAppNum
    1:2:boolean hasLightSensor(android.content.Context) -> hasLightSensor
    1:1:boolean supportBluetooth(android.content.Context) -> supportBluetooth
    1:1:boolean supportCameraFlash(android.content.Context) -> supportCameraFlash
io.dcloud.common.util.emulator.EmulatorCheckUtil$SingletonHolder -> io.dcloud.common.util.emulator.EmulatorCheckUtil$SingletonHolder:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:1:io.dcloud.common.util.emulator.EmulatorCheckUtil access$100() -> access$100
io.dcloud.common.util.hostpicker.HostPicker -> io.dcloud.common.util.hostpicker.HostPicker:
    1:1:void <clinit>() -> <clinit>
    1:6:void <init>() -> <init>
    1:1:io.dcloud.common.util.hostpicker.HostPicker getInstance() -> getInstance
    1:41:void initHostsForRequest(android.content.Context,java.util.List,java.lang.String) -> initHostsForRequest
    1:36:void pickSuitHost(android.content.Context,java.util.List,java.lang.String,io.dcloud.common.util.hostpicker.HostPicker$HostPickCallback) -> pickSuitHost
io.dcloud.common.util.hostpicker.HostPicker$Host -> io.dcloud.common.util.hostpicker.HostPicker$Host:
    1:48:void <init>(java.lang.String,io.dcloud.common.util.hostpicker.HostPicker$Host$PriorityEnum) -> <init>
    1:1:java.lang.Object clone() -> clone
    2:2:io.dcloud.common.util.hostpicker.HostPicker$Host clone() -> clone
    1:1:int compareTo(java.lang.Object) -> compareTo
    2:4:int compareTo(io.dcloud.common.util.hostpicker.HostPicker$Host) -> compareTo
    1:8:boolean equals(java.lang.Object) -> equals
    1:1:java.lang.String getHostUrl() -> getHostUrl
    1:1:io.dcloud.common.util.hostpicker.HostPicker$Host$PriorityEnum getPriority() -> getPriority
    1:12:java.lang.String getRealHost() -> getRealHost
    1:1:int hashCode() -> hashCode
    1:1:boolean isFormatRightful() -> isFormatRightful
    1:1:java.lang.String toString() -> toString
io.dcloud.common.util.hostpicker.HostPicker$Host$PriorityEnum -> io.dcloud.common.util.hostpicker.HostPicker$Host$PriorityEnum:
    1:10:void <clinit>() -> <clinit>
    1:5:void <init>(java.lang.String,int,int) -> <init>
    1:1:io.dcloud.common.util.hostpicker.HostPicker$Host$PriorityEnum valueOf(java.lang.String) -> valueOf
    1:1:io.dcloud.common.util.hostpicker.HostPicker$Host$PriorityEnum[] values() -> values
io.dcloud.common.util.language.LanguageUtil -> io.dcloud.common.util.language.LanguageUtil:
    1:1:void <init>() -> <init>
    1:13:android.content.Context createConfiguration(android.content.Context,java.lang.String) -> createConfiguration
    1:9:java.util.Locale getCurrentLocal() -> getCurrentLocal
    1:27:java.lang.String getCurrentLocaleLanguage() -> getCurrentLocaleLanguage
    1:49:java.lang.String getString(com.alibaba.fastjson.JSONObject,java.lang.String) -> getString
    50:51:java.lang.String getString(java.lang.String,com.alibaba.fastjson.JSONObject) -> getString
    1:1:android.content.Context initAppLanguage(android.content.Context) -> initAppLanguage
    2:29:android.content.Context initAppLanguage(android.content.Context,boolean) -> initAppLanguage
    1:10:void updateConfiguration(android.content.Context,java.lang.String) -> updateConfiguration
    1:29:void updateLanguage(android.content.Context,java.lang.String) -> updateLanguage
io.dcloud.common.util.net.DownloadMgr -> io.dcloud.common.util.net.DownloadMgr:
    1:3:void <init>() -> <init>
    1:1:void addQuestTask(io.dcloud.common.util.net.NetWork) -> addQuestTask
    1:4:void dispose() -> dispose
    1:4:io.dcloud.common.util.net.DownloadMgr getDownloadMgr() -> getDownloadMgr
    1:1:void removeTask(io.dcloud.common.util.net.NetWork) -> removeTask
io.dcloud.common.util.net.NetCheckReceiver -> io.dcloud.common.util.net.NetCheckReceiver:
    1:4:void <init>(io.dcloud.common.DHInterface.AbsMgr) -> <init>
    1:10:void onReceive(android.content.Context,android.content.Intent) -> onReceive
io.dcloud.common.util.net.NetMgr -> io.dcloud.common.util.net.NetMgr:
    1:19:void <init>(io.dcloud.common.DHInterface.ICore) -> <init>
    1:11:void dispose() -> dispose
    1:4:io.dcloud.common.util.net.http.IServer initLocalServer() -> initLocalServer
    1:13:void onExecute(io.dcloud.common.DHInterface.ISysEventListener$SysEventType,java.lang.Object) -> onExecute
    1:11:java.lang.Object processEvent(io.dcloud.common.DHInterface.IMgr$MgrType,int,java.lang.Object) -> processEvent
    1:6:void startMiniServer() -> startMiniServer
io.dcloud.common.util.net.NetWork -> io.dcloud.common.util.net.NetWork:
    1:82:void <init>(int,io.dcloud.common.util.net.RequestData,io.dcloud.common.DHInterface.IReqListener,io.dcloud.common.DHInterface.IResponseListener) -> <init>
    1:4:void cancelWork() -> cancelWork
    1:2:void dispose() -> dispose
    1:12:java.lang.String getBoundry() -> getBoundry
    1:3:java.lang.String getCharset(java.lang.String) -> getCharset
    1:1:java.util.Map getHeadersAndValues() -> getHeadersAndValues
    1:1:java.io.InputStream getResponseInput() -> getResponseInput
    1:1:java.lang.String getResponseText() -> getResponseText
    1:24:void handleResponseText(java.io.InputStream) -> handleResponseText
    1:17:void initHttpsURLConnectionVel() -> initHttpsURLConnectionVel
    1:190:void run() -> run
    1:12:void setHeadersAndValues(java.util.Map) -> setHeadersAndValues
    1:1:void setRetryIntervalTime(long) -> setRetryIntervalTime
    1:4:void startWork() -> startWork
io.dcloud.common.util.net.NetWorkLoop -> io.dcloud.common.util.net.NetWorkLoop:
    1:23:void <init>() -> <init>
    0:3:void addNetWork(io.dcloud.common.util.net.NetWork) -> addNetWork
    1:18:void dispose() -> dispose
    1:2:void execSyncTask(io.dcloud.common.util.net.NetWork) -> execSyncTask
    0:18:void removeNetWork(io.dcloud.common.util.net.NetWork) -> removeNetWork
    1:28:void startThreadPool() -> startThreadPool
io.dcloud.common.util.net.NetWorkLoop$1 -> io.dcloud.common.util.net.NetWorkLoop$1:
    1:1:void <init>(io.dcloud.common.util.net.NetWorkLoop) -> <init>
    1:19:void run() -> run
io.dcloud.common.util.net.NetWorkLoop$2 -> io.dcloud.common.util.net.NetWorkLoop$2:
    1:1:void <init>(io.dcloud.common.util.net.NetWorkLoop,io.dcloud.common.util.net.NetWork) -> <init>
    1:1:void run() -> run
io.dcloud.common.util.net.NetWorkLoop$LoopComparator -> io.dcloud.common.util.net.NetWorkLoop$LoopComparator:
    1:1:void <init>(io.dcloud.common.util.net.NetWorkLoop) -> <init>
    1:1:int compare(java.lang.Object,java.lang.Object) -> compare
    2:2:int compare(io.dcloud.common.util.net.NetWork,io.dcloud.common.util.net.NetWork) -> compare
io.dcloud.common.util.net.RequestData -> io.dcloud.common.util.net.RequestData:
    1:52:void <init>(java.lang.String,java.lang.String) -> <init>
    1:2:boolean addBody(java.lang.String) -> addBody
    3:14:void addBody(java.net.HttpURLConnection) -> addBody
    1:3:boolean addHeader(java.lang.String,java.lang.String) -> addHeader
    4:9:void addHeader(java.net.HttpURLConnection) -> addHeader
    1:3:boolean addParemeter(java.lang.String,java.lang.String) -> addParemeter
    1:2:void clearData() -> clearData
    1:9:boolean containHeader(java.lang.String) -> containHeader
    1:76:java.net.HttpURLConnection getHttpRequest() -> getHttpRequest
    1:1:java.lang.String getIP() -> getIP
    1:1:java.lang.String getPort() -> getPort
    1:1:java.lang.String getReqmethod() -> getReqmethod
    1:1:java.lang.String getUrl() -> getUrl
    1:1:void setReqmethod(java.lang.String) -> setReqmethod
    1:1:void setUrl(java.lang.String) -> setUrl
io.dcloud.common.util.net.RequestData$1 -> io.dcloud.common.util.net.RequestData$1:
    1:1:void <clinit>() -> <clinit>
io.dcloud.common.util.net.RequestData$HttpOption -> io.dcloud.common.util.net.RequestData$HttpOption:
    1:2:void <clinit>() -> <clinit>
    1:1:void <init>(java.lang.String,int) -> <init>
    1:1:io.dcloud.common.util.net.RequestData$HttpOption valueOf(java.lang.String) -> valueOf
    1:1:io.dcloud.common.util.net.RequestData$HttpOption[] values() -> values
io.dcloud.common.util.net.UploadMgr -> io.dcloud.common.util.net.UploadMgr:
    1:3:void <init>() -> <init>
    1:1:void abort(io.dcloud.common.util.net.NetWork) -> abort
    1:4:io.dcloud.common.util.net.UploadMgr getUploadMgr() -> getUploadMgr
    1:1:void removeNetWork(io.dcloud.common.util.net.NetWork) -> removeNetWork
    1:1:void start(io.dcloud.common.util.net.NetWork) -> start
io.dcloud.common.util.net.http.Request -> io.dcloud.common.util.net.http.Request:
    1:2:void <init>(java.io.InputStream) -> <init>
    1:1:java.lang.String getData() -> getData
    1:1:java.lang.String getUri() -> getUri
    1:16:void parse() -> parse
    1:5:java.lang.String parseUri(java.lang.String) -> parseUri
io.dcloud.common.util.net.http.Response -> io.dcloud.common.util.net.http.Response:
    1:1:void <clinit>() -> <clinit>
    1:16:void <init>(java.net.Socket,io.dcloud.common.DHInterface.AbsMgr) -> <init>
    1:18:void addResponseHead(long,java.io.OutputStream) -> addResponseHead
    1:117:void run() -> run
    1:1:void write(java.io.OutputStream,java.lang.String) -> write
    1:2:void writeHeader(java.io.OutputStream,java.lang.String) -> writeHeader
    1:9:void writeRequest(java.io.OutputStream,java.lang.String) -> writeRequest
io.dcloud.common.util.net.http.WebkitCookieManagerProxy -> io.dcloud.common.util.net.http.WebkitCookieManagerProxy:
    1:1:void <init>() -> <init>
    2:3:void <init>(java.net.CookieStore,java.net.CookiePolicy) -> <init>
    1:16:java.util.Map get(java.net.URI,java.util.Map) -> get
    1:1:java.net.CookieStore getCookieStore() -> getCookieStore
    1:10:void put(java.net.URI,java.util.Map) -> put
    1:2:boolean removeAllCookie() -> removeAllCookie
    1:2:boolean removeSessionCookie() -> removeSessionCookie
io.dcloud.d -> io.dcloud.d:
    1:6:void <init>(io.dcloud.feature.internal.reflect.BroadcastReceiver,android.content.IntentFilter) -> <init>
    1:2:void onReceive(android.content.Context,android.content.Intent) -> onReceive
io.dcloud.f.a.a -> io.dcloud.f.a.a:
    1:2:io.dcloud.f.a.c.a a(io.dcloud.f.a.b.a$c,android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    3:14:void a(android.content.Context) -> a
io.dcloud.f.a.b.a -> io.dcloud.f.a.b.a:
    1:4:void <init>(io.dcloud.f.a.b.a$c,android.content.Context,java.lang.String) -> <init>
    1:9:void a(android.view.ViewGroup) -> a
    10:11:void a(int,java.lang.String) -> a
    12:13:void a() -> a
    1:1:android.content.Context b() -> b
io.dcloud.f.a.b.a$a -> io.dcloud.f.a.b.a$a:
    1:1:void <init>(io.dcloud.f.a.b.a,int,java.lang.String) -> <init>
    1:1:void run() -> run
io.dcloud.f.a.b.a$b -> io.dcloud.f.a.b.a$b:
    1:1:void <init>(io.dcloud.f.a.b.a) -> <init>
    1:1:void run() -> run
io.dcloud.f.a.c.a -> io.dcloud.f.a.c.a:
    1:18:void <init>(io.dcloud.f.a.b.a$c,android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    19:25:void <init>(io.dcloud.f.a.b.a$c,android.content.Context,java.lang.String) -> <init>
    1:1:java.lang.String a(io.dcloud.f.a.c.a) -> a
    2:2:io.dcloud.ads.base.entry.AdData a(io.dcloud.f.a.c.a,io.dcloud.ads.base.entry.AdData) -> a
    3:3:void a(io.dcloud.f.a.c.a,int,java.lang.String) -> a
    1:1:java.util.HashMap b(io.dcloud.f.a.c.a) -> b
    2:2:void b(io.dcloud.f.a.c.a,int,java.lang.String) -> b
    3:3:io.dcloud.ads.base.entry.AdData b(io.dcloud.f.a.c.a,io.dcloud.ads.base.entry.AdData) -> b
    1:1:void c(io.dcloud.f.a.c.a) -> c
    2:2:void c(io.dcloud.f.a.c.a,int,java.lang.String) -> c
    3:48:void c() -> c
    1:1:java.lang.String d(io.dcloud.f.a.c.a) -> d
    1:1:java.lang.String e(io.dcloud.f.a.c.a) -> e
    1:1:java.lang.String f(io.dcloud.f.a.c.a) -> f
    1:1:java.lang.String g(io.dcloud.f.a.c.a) -> g
    1:1:java.lang.String h(io.dcloud.f.a.c.a) -> h
    1:1:void i(io.dcloud.f.a.c.a) -> i
    1:1:io.dcloud.ads.base.entry.AdData j(io.dcloud.f.a.c.a) -> j
io.dcloud.f.a.c.a$a -> io.dcloud.f.a.c.a$a:
    1:1:void <init>(io.dcloud.f.a.c.a,java.lang.String) -> <init>
    1:54:void run() -> run
io.dcloud.f.a.c.a$a$a -> io.dcloud.f.a.c.a$a$a:
    1:1:void <init>(io.dcloud.f.a.c.a$a,io.dcloud.ads.base.entry.AdData) -> <init>
    1:2:void a() -> a
    3:22:void a(int,java.lang.String) -> a
io.dcloud.f.a.c.b.a -> io.dcloud.f.a.c.b.a:
    1:15:javax.crypto.spec.IvParameterSpec a(java.lang.String) -> a
    16:22:byte[] a(byte[],java.lang.String,java.lang.String) -> a
io.dcloud.f.a.c.b.b -> io.dcloud.f.a.c.b.b:
    1:5:void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.util.HashMap) -> a
io.dcloud.f.a.c.b.c -> io.dcloud.f.a.c.b.c:
    1:1:java.lang.String a(android.content.Context) -> a
    2:7:java.lang.Object a(int,android.content.Context) -> a
    8:11:java.lang.Object a(java.lang.String,java.lang.String,java.lang.Object,java.lang.Class[],java.lang.Object[]) -> a
    12:12:boolean a(java.lang.String) -> a
    1:2:java.lang.String b(android.content.Context) -> b
    3:16:int b(int,android.content.Context) -> b
    1:16:java.lang.String c(android.content.Context) -> c
    1:55:java.lang.String[] d(android.content.Context) -> d
io.dcloud.f.a.c.b.d -> io.dcloud.f.a.c.b.d:
    1:12:java.lang.String a(android.content.Context) -> a
    13:20:java.lang.String a() -> a
    21:26:java.lang.String a(int) -> a
io.dcloud.f.a.c.b.e -> io.dcloud.f.a.c.b.e:
    1:36:void <init>() -> <init>
    1:1:java.lang.String a(io.dcloud.f.a.c.b.e,java.lang.String) -> a
    2:9:io.dcloud.f.a.c.b.e a() -> a
    10:31:int a(android.content.Context) -> a
    32:40:java.lang.Object a(java.lang.Object,java.lang.String,java.lang.Class[],java.lang.Object[]) -> a
    1:1:boolean b(android.content.Context) -> b
    1:4:java.lang.String c(android.content.Context) -> c
io.dcloud.f.a.c.b.e$b -> io.dcloud.f.a.c.b.e$b:
    1:1:void <init>(io.dcloud.f.a.c.b.e) -> <init>
    2:2:void <init>(io.dcloud.f.a.c.b.e,io.dcloud.f.a.c.b.e$a) -> <init>
    1:22:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
io.dcloud.f.a.c.b.f -> io.dcloud.f.a.c.b.f:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:11:io.dcloud.f.b.a a(android.content.Context) -> a
    12:20:io.dcloud.f.a.c.b.f a() -> a
    21:24:void a(android.content.Context,java.lang.String,java.lang.String) -> a
    25:36:void a(android.content.Context,io.dcloud.ads.base.entry.AdData,java.lang.String) -> a
    37:38:java.lang.String a(android.content.Context,java.lang.String) -> a
    1:14:java.util.Map b(android.content.Context) -> b
    15:22:void b(android.content.Context,java.lang.String) -> b
    1:6:void c(android.content.Context) -> c
io.dcloud.f.a.c.b.g -> io.dcloud.f.a.c.b.g:
    1:5:org.json.JSONObject a(android.content.Context) -> a
    1:35:org.json.JSONObject b(android.content.Context) -> b
    1:28:org.json.JSONObject c(android.content.Context) -> c
    1:75:org.json.JSONObject d(android.content.Context) -> d
    1:63:java.lang.String e(android.content.Context) -> e
    1:9:java.lang.String f(android.content.Context) -> f
io.dcloud.f.a.c.b.h -> io.dcloud.f.a.c.b.h:
    1:11:byte[] a(java.lang.String) -> a
io.dcloud.f.a.c.c.a -> io.dcloud.f.a.c.c.a:
    1:92:void <init>(android.graphics.Bitmap,android.content.Context) -> <init>
    1:29:void a() -> a
    30:37:void a(android.graphics.Bitmap) -> a
    1:16:int b(android.graphics.Bitmap) -> b
    1:7:void draw(android.graphics.Canvas) -> draw
io.dcloud.f.a.c.c.b -> io.dcloud.f.a.c.c.b:
    1:17:void <init>(android.content.Context,io.dcloud.f.a.b.a$c,io.dcloud.ads.base.entry.AdData) -> <init>
    1:1:io.dcloud.f.a.b.a$c a(io.dcloud.f.a.c.c.b) -> a
    2:11:void a(android.view.ViewGroup) -> a
    1:1:io.dcloud.ads.base.entry.AdData b(io.dcloud.f.a.c.c.b) -> b
    1:1:android.widget.ImageView c(io.dcloud.f.a.c.c.b) -> c
    1:6:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    1:9:void onClick(android.view.View) -> onClick
    1:1:void onVisibilityChanged(android.view.View,int) -> onVisibilityChanged
io.dcloud.f.a.c.c.b$a -> io.dcloud.f.a.c.c.b$a:
    1:1:void <init>(io.dcloud.f.a.c.c.b) -> <init>
    1:3:void run() -> run
io.dcloud.f.a.c.c.b$b -> io.dcloud.f.a.c.c.b$b:
    1:1:void <init>(io.dcloud.f.a.c.c.b,android.view.ViewGroup) -> <init>
    1:25:void run() -> run
io.dcloud.f.a.d.a -> io.dcloud.f.a.d.a:
    1:1:boolean a(android.view.View) -> a
io.dcloud.f.a.d.b -> io.dcloud.f.a.d.b:
    1:10:boolean a(android.content.Context,java.lang.String) -> a
    1:11:void b(android.content.Context,java.lang.String) -> b
    1:13:boolean c(android.content.Context,java.lang.String) -> c
io.dcloud.f.a.d.c -> io.dcloud.f.a.d.c:
    1:53:void a(byte[],int,java.lang.String) -> a
io.dcloud.f.a.d.d -> io.dcloud.f.a.d.d:
    1:1:byte[] a(java.lang.String,java.util.HashMap,boolean) -> a
    2:2:byte[] a(java.lang.String,java.util.HashMap,boolean,java.lang.String[]) -> a
    3:3:byte[] a(java.lang.String,java.lang.String,java.util.HashMap,java.lang.String,int,boolean) -> a
    4:34:byte[] a(java.lang.String,java.lang.String,java.util.HashMap,java.lang.String,int,boolean,boolean,java.lang.String[]) -> a
    35:36:void a(java.io.OutputStream,java.lang.String) -> a
    37:53:byte[] a(java.io.InputStream) -> a
    54:61:java.net.HttpURLConnection a(java.net.URL,java.lang.String,int,boolean,boolean) -> a
    62:62:byte[] a(java.lang.String,java.lang.String,java.util.HashMap,java.lang.String[]) -> a
io.dcloud.f.a.d.e -> io.dcloud.f.a.d.e:
    1:4:void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
    5:7:java.lang.String a(android.content.Context,java.lang.String,java.lang.String) -> a
io.dcloud.f.a.d.f -> io.dcloud.f.a.d.f:
    1:2:void <init>() -> <init>
    1:8:io.dcloud.f.a.d.f a() -> a
    9:9:void a(java.lang.Runnable) -> a
io.dcloud.f.b.a -> io.dcloud.f.b.a:
    1:619:void <clinit>() -> <clinit>
    1:41:void <init>(java.io.File,int,int,long) -> <init>
    1:1:java.io.Writer a(io.dcloud.f.b.a) -> a
    2:2:java.lang.String a(java.io.InputStream) -> a
    3:3:java.io.OutputStream a() -> a
    4:4:void a(io.dcloud.f.b.a,io.dcloud.f.b.a$c,boolean) -> a
    5:5:int a(io.dcloud.f.b.a,int) -> a
    6:46:io.dcloud.f.b.a a(java.io.File,int,int,long) -> a
    47:48:void a(java.io.File) -> a
    49:52:void a(java.io.File,java.io.File,boolean) -> a
    53:53:io.dcloud.f.b.a$c a(java.lang.String) -> a
    53:73:io.dcloud.f.b.a$c a(java.lang.String,long) -> a
    73:130:void a(io.dcloud.f.b.a$c,boolean) -> a
    1:1:void b(io.dcloud.f.b.a) -> b
    1:42:io.dcloud.f.b.a$e b(java.lang.String) -> b
    43:44:void b() -> b
    45:45:java.lang.String b(java.io.InputStream) -> b
    1:1:int c(io.dcloud.f.b.a) -> c
    2:37:void c(java.lang.String) -> c
    38:39:void c() -> c
    0:11:void close() -> close
    1:1:java.io.File d(io.dcloud.f.b.a) -> d
    2:3:boolean d() -> d
    3:25:boolean d(java.lang.String) -> d
    1:1:boolean e(io.dcloud.f.b.a) -> e
    2:15:void e() -> e
    16:18:void e(java.lang.String) -> e
    1:1:void f(io.dcloud.f.b.a) -> f
    2:45:void f() -> f
    0:3:void flush() -> flush
    0:36:void g() -> g
    1:3:void h() -> h
io.dcloud.f.b.a$a -> io.dcloud.f.b.a$a:
    1:1:void <init>(io.dcloud.f.b.a) -> <init>
    1:10:java.lang.Void a() -> a
    1:1:java.lang.Object call() -> call
io.dcloud.f.b.a$b -> io.dcloud.f.b.a$b:
    1:1:void <init>() -> <init>
io.dcloud.f.b.a$c -> io.dcloud.f.b.a$c:
    1:1:void <init>(io.dcloud.f.b.a,io.dcloud.f.b.a$d,io.dcloud.f.b.a$a) -> <init>
    2:4:void <init>(io.dcloud.f.b.a,io.dcloud.f.b.a$d) -> <init>
    1:1:io.dcloud.f.b.a$d a(io.dcloud.f.b.a$c) -> a
    2:2:boolean a(io.dcloud.f.b.a$c,boolean) -> a
    3:46:java.io.OutputStream a(int) -> a
    47:47:void a() -> a
    1:1:boolean[] b(io.dcloud.f.b.a$c) -> b
    2:6:void b() -> b
io.dcloud.f.b.a$c$a -> io.dcloud.f.b.a$c$a:
    1:1:void <init>(io.dcloud.f.b.a$c,java.io.OutputStream,io.dcloud.f.b.a$a) -> <init>
    2:3:void <init>(io.dcloud.f.b.a$c,java.io.OutputStream) -> <init>
    1:3:void close() -> close
    1:3:void flush() -> flush
    1:3:void write(int) -> write
    4:6:void write(byte[],int,int) -> write
io.dcloud.f.b.a$d -> io.dcloud.f.b.a$d:
    1:1:void <init>(io.dcloud.f.b.a,java.lang.String,io.dcloud.f.b.a$a) -> <init>
    2:4:void <init>(io.dcloud.f.b.a,java.lang.String) -> <init>
    1:1:long[] a(io.dcloud.f.b.a$d) -> a
    2:2:long a(io.dcloud.f.b.a$d,long) -> a
    3:3:boolean a(io.dcloud.f.b.a$d,boolean) -> a
    4:4:io.dcloud.f.b.a$c a(io.dcloud.f.b.a$d,io.dcloud.f.b.a$c) -> a
    5:5:void a(io.dcloud.f.b.a$d,java.lang.String[]) -> a
    6:10:java.lang.String a() -> a
    11:11:java.io.IOException a(java.lang.String[]) -> a
    12:12:java.io.File a(int) -> a
    1:1:java.lang.String b(io.dcloud.f.b.a$d) -> b
    2:12:void b(java.lang.String[]) -> b
    13:13:java.io.File b(int) -> b
    1:1:long c(io.dcloud.f.b.a$d) -> c
    1:1:boolean d(io.dcloud.f.b.a$d) -> d
    1:1:io.dcloud.f.b.a$c e(io.dcloud.f.b.a$d) -> e
io.dcloud.f.b.a$e -> io.dcloud.f.b.a$e:
    1:1:void <init>(io.dcloud.f.b.a,java.lang.String,long,java.io.InputStream[],long[],io.dcloud.f.b.a$a) -> <init>
    2:5:void <init>(io.dcloud.f.b.a,java.lang.String,long,java.io.InputStream[],long[]) -> <init>
    1:1:java.io.InputStream a(int) -> a
    1:1:java.lang.String b(int) -> b
    1:2:void close() -> close
io.dcloud.f.b.b -> io.dcloud.f.b.b:
    1:1:void <init>(java.io.InputStream,java.nio.charset.Charset) -> <init>
    2:18:void <init>(java.io.InputStream,int,java.nio.charset.Charset) -> <init>
    1:1:java.nio.charset.Charset a(io.dcloud.f.b.b) -> a
    2:8:void a() -> a
    1:96:java.lang.String b() -> b
    1:6:void close() -> close
io.dcloud.f.b.b$a -> io.dcloud.f.b.b$a:
    1:1:void <init>(io.dcloud.f.b.b,int) -> <init>
    1:5:java.lang.String toString() -> toString
io.dcloud.f.b.c -> io.dcloud.f.b.c:
    1:2:void <clinit>() -> <clinit>
    1:9:java.lang.String a(java.io.Reader) -> a
    10:20:void a(java.io.File) -> a
    21:23:void a(java.io.Closeable) -> a
io.dcloud.feature.ad.AdFeatureImplMgr -> io.dcloud.feature.ad.AdFeatureImplMgr:
    1:1:void <clinit>() -> <clinit>
    1:10:void <init>() -> <init>
    1:1:void clearAdType() -> clearAdType
    1:11:java.lang.Object doForFeature(java.lang.String,java.lang.Object) -> doForFeature
    1:1:io.dcloud.common.DHInterface.IWaiter self() -> self
io.dcloud.feature.ad.AdSplashUtil -> io.dcloud.feature.ad.AdSplashUtil:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:26:java.lang.String da(java.lang.String,java.lang.String) -> da
    1:9:org.json.JSONArray dah(java.lang.String) -> dah
    1:1:int dh(android.content.Context) -> dh
    1:1:int dw(android.content.Context) -> dw
    1:35:java.lang.String getAL(android.content.Context) -> getAL
    1:3:java.util.List getAdOrder() -> getAdOrder
    1:10:java.lang.String getAdpId(io.dcloud.common.DHInterface.IApp,java.lang.String) -> getAdpId
    1:19:java.lang.String getAppKey(java.lang.String,java.lang.String) -> getAppKey
    1:19:java.lang.String getAppKey2(java.lang.String,java.lang.String) -> getAppKey2
    1:3:android.graphics.drawable.Drawable getApplicationIcon(android.content.Context) -> getApplicationIcon
    1:3:java.lang.String getApplicationName(android.content.Context) -> getApplicationName
    1:3:java.lang.String getPlashType() -> getPlashType
    1:26:java.lang.String getSplashAdpId(java.lang.String,java.lang.String) -> getSplashAdpId
    1:8:org.json.JSONObject getUniad() -> getUniad
    1:14:java.lang.String random(org.json.JSONObject) -> random
    1:53:java.util.List reorderList(java.util.List,java.lang.String,org.json.JSONObject,org.json.JSONObject,boolean) -> reorderList
    1:18:void saveADShowCount(java.lang.String,java.lang.String) -> saveADShowCount
    1:9:void saveOperate(android.content.Context,java.lang.String,java.util.HashMap) -> saveOperate
    10:10:void saveOperate(java.util.HashMap) -> saveOperate
io.dcloud.feature.ad.Range -> io.dcloud.feature.ad.Range:
    1:4:void <init>(double,double,java.lang.String) -> <init>
    1:1:boolean contains(double) -> contains
    1:1:java.lang.String getType() -> getType
io.dcloud.feature.ad.dcloud.ADBaseHandler -> io.dcloud.feature.ad.dcloud.ADBaseHandler:
    1:25:void <init>() -> <init>
    1:2:void addRequestListener(io.dcloud.feature.ad.dcloud.ADBaseHandler$OnAdsRequestListener) -> addRequestListener
    1:1:void clearListener() -> clearListener
    1:1:void endLoadAds() -> endLoadAds
    1:16:void execFail(int,java.lang.String) -> execFail
    1:3:void execSuccess() -> execSuccess
    1:1:int getAdRequestStatus() -> getAdRequestStatus
    1:1:java.lang.String getErrorMsg() -> getErrorMsg
    1:8:org.json.JSONObject getResult() -> getResult
    1:1:int getSource() -> getSource
    1:1:boolean isBest() -> isBest
    1:1:boolean isHasContext() -> isHasContext
    1:1:boolean isShow() -> isShow
    1:2:void pullAds(android.content.Context) -> pullAds
    1:1:void setBest() -> setBest
    1:1:void setShowed() -> setShowed
    1:1:void setSource(int) -> setSource
    1:1:void startLoadAds() -> startLoadAds
io.dcloud.feature.ad.dcloud.ADBaseSplashView -> io.dcloud.feature.ad.dcloud.ADBaseSplashView:
    1:2:void <init>(android.app.Activity) -> <init>
    1:1:java.lang.String get(java.lang.String) -> get
    1:2:int getBgColor() -> getBgColor
    1:15:android.graphics.drawable.Drawable getIcon() -> getIcon
    1:1:android.widget.FrameLayout getImgContainer() -> getImgContainer
    1:18:void initView(android.app.Activity) -> initView
    1:6:void onFinishShow() -> onFinishShow
    1:2:void onWillCloseSplash() -> onWillCloseSplash
    1:1:void setAppid(java.lang.String) -> setAppid
    1:1:void setCallBack(io.dcloud.common.DHInterface.ICallBack) -> setCallBack
    1:1:void setPullTime(long) -> setPullTime
io.dcloud.feature.ad.dcloud.ADHandler -> io.dcloud.feature.ad.dcloud.ADHandler:
    1:887:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:13:java.lang.Boolean SplashAdIsEnable(android.content.Context) -> SplashAdIsEnable
    1:1:void access$000(java.util.List,java.lang.String,java.lang.String,boolean,io.dcloud.feature.ad.dcloud.IADReceiver[]) -> access$000
    1:1:void access$100(byte[],io.dcloud.feature.ad.dcloud.IADReceiver[]) -> access$100
    1:1:org.json.JSONObject access$200(io.dcloud.feature.ad.dcloud.ADHandler$AdData) -> access$200
    1:1:java.util.LinkedList access$300() -> access$300
    1:1:void access$400(android.content.Context,java.io.File,io.dcloud.feature.ad.dcloud.ADHandler$AdData) -> access$400
    1:1:void access$500(android.content.Context,org.json.JSONObject,long) -> access$500
    1:1:void access$600(android.content.Context,java.lang.Boolean) -> access$600
    1:10:void addThreadTask(io.dcloud.feature.ad.dcloud.ADHandler$ThreadTask) -> addThreadTask
    1:1:boolean allReady(android.content.Context) -> allReady
    1:40:void analysisPullData(byte[],io.dcloud.feature.ad.dcloud.IADReceiver[]) -> analysisPullData
    1:1:java.lang.String appid(android.content.Context) -> appid
    1:63:java.lang.String bd(android.content.Context,java.lang.Boolean,java.lang.Boolean) -> bd
    64:66:java.lang.String bd(android.content.Context) -> bd
    1:2:int bg(android.content.Context) -> bg
    1:28:void click(android.content.Context,io.dcloud.feature.ad.dcloud.ADHandler$AdData,java.lang.String) -> click
    1:69:void click_base(android.content.Context,io.dcloud.feature.ad.dcloud.ADHandler$AdData,java.lang.String) -> click_base
    1:187:java.lang.String d(android.content.Context) -> d
    1:6:java.lang.Boolean defAdConfig(android.content.Context) -> defAdConfig
    1:13:void exec5Plus(java.util.List,java.lang.String,io.dcloud.feature.ad.dcloud.IADReceiver[]) -> exec5Plus
    1:33:void fileAdData(android.content.Context,java.io.File,io.dcloud.feature.ad.dcloud.ADHandler$AdData) -> fileAdData
    1:12:java.lang.String formatUrl(java.lang.String,org.json.JSONObject) -> formatUrl
    1:2:void get(java.lang.StringBuilder,java.lang.String,java.lang.String) -> get
    3:3:java.lang.String get(android.content.Context,java.lang.String) -> get
    4:4:java.lang.String get(java.lang.String) -> get
    1:13:org.json.JSONObject getArgsJsonData(org.json.JSONObject) -> getArgsJsonData
    1:7:java.lang.String getBId() -> getBId
    1:2:io.dcloud.feature.ad.dcloud.ADHandler$AdData getBestAdData(android.content.Context,java.lang.String) -> getBestAdData
    3:22:io.dcloud.feature.ad.dcloud.ADHandler$AdData getBestAdData(android.content.Context,java.lang.String,io.dcloud.feature.ad.dcloud.ADHandler$AdData) -> getBestAdData
    1:19:org.json.JSONObject getClickData(io.dcloud.feature.ad.dcloud.ADHandler$AdData) -> getClickData
    1:5:java.lang.String getRootPath(android.content.Context) -> getRootPath
    1:20:java.lang.String getUT() -> getUT
    1:12:void handleAdBaseData(android.content.Context,org.json.JSONObject,java.lang.String,java.lang.String,java.lang.String) -> handleAdBaseData
    1:13:void handleAdData(android.content.Context,org.json.JSONObject,long) -> handleAdData
    1:10:void handleAdData_dcloud(android.content.Context,org.json.JSONObject,long) -> handleAdData_dcloud
    1:7:void handleSplashAdEnable(android.content.Context,java.lang.Boolean) -> handleSplashAdEnable
    1:3:boolean hasOtherAd() -> hasOtherAd
    1:15:android.graphics.drawable.Drawable img(android.content.Context) -> img
    1:36:void listExpiresAdData(android.content.Context,io.dcloud.feature.ad.dcloud.ADHandler$AdDataWatcher) -> listExpiresAdData
    1:9:java.lang.String mc(android.content.Context) -> mc
    1:1:java.lang.String name(android.content.Context) -> name
    1:11:java.lang.String papEnable(android.content.Context) -> papEnable
    1:30:void postSplashError(android.content.Context,java.lang.String,java.lang.String) -> postSplashError
    1:9:void pr(android.content.Context,java.util.Map) -> pr
    1:6:java.lang.String psap(android.content.Context) -> psap
    1:19:java.lang.String psas(android.content.Context) -> psas
    1:31:void pull(android.content.Context,java.lang.String,boolean,java.util.List,io.dcloud.feature.ad.dcloud.IADReceiver[]) -> pull
    32:32:void pull(java.util.List,java.lang.String,java.lang.String,boolean,io.dcloud.feature.ad.dcloud.IADReceiver[]) -> pull
    1:34:void pullRad(android.content.Context,java.util.Map,io.dcloud.feature.ad.dcloud.IADReceiver[]) -> pullRad
    1:8:void sortDesc(java.io.File[]) -> sortDesc
    1:22:void view(android.content.Context,io.dcloud.feature.ad.dcloud.ADHandler$AdData,java.lang.String) -> view
io.dcloud.feature.ad.dcloud.ADHandler$1 -> io.dcloud.feature.ad.dcloud.ADHandler$1:
    1:1:void <init>(java.util.List,java.lang.String,boolean,io.dcloud.feature.ad.dcloud.IADReceiver[]) -> <init>
    1:12:void execute() -> execute
io.dcloud.feature.ad.dcloud.ADHandler$10 -> io.dcloud.feature.ad.dcloud.ADHandler$10:
    1:1:void <init>(io.dcloud.feature.ad.dcloud.ADHandler$AdData,android.content.Context) -> <init>
    1:1:boolean find() -> find
    1:1:void operate(java.lang.Object) -> operate
    2:3:void operate(java.io.File) -> operate
io.dcloud.feature.ad.dcloud.ADHandler$11 -> io.dcloud.feature.ad.dcloud.ADHandler$11:
    1:1:void <init>(org.json.JSONObject,java.lang.String,java.lang.String,android.content.Context) -> <init>
    1:21:void execute() -> execute
io.dcloud.feature.ad.dcloud.ADHandler$2 -> io.dcloud.feature.ad.dcloud.ADHandler$2:
    1:1:void <init>(io.dcloud.feature.ad.dcloud.ADHandler$ThreadTask) -> <init>
    1:1:void run() -> run
io.dcloud.feature.ad.dcloud.ADHandler$3 -> io.dcloud.feature.ad.dcloud.ADHandler$3:
    1:2:void <init>(io.dcloud.feature.ad.dcloud.IADReceiver[],java.lang.String,boolean) -> <init>
    1:7:boolean doRequest(io.dcloud.common.util.hostpicker.HostPicker$Host) -> doRequest
    1:2:void onNoOnePicked() -> onNoOnePicked
io.dcloud.feature.ad.dcloud.ADHandler$4 -> io.dcloud.feature.ad.dcloud.ADHandler$4:
    1:1:void <init>(java.lang.String,boolean,io.dcloud.feature.ad.dcloud.IADReceiver[]) -> <init>
    1:3:void execute() -> execute
io.dcloud.feature.ad.dcloud.ADHandler$5 -> io.dcloud.feature.ad.dcloud.ADHandler$5:
    1:1:void <init>(java.lang.String) -> <init>
    1:1:void execute() -> execute
io.dcloud.feature.ad.dcloud.ADHandler$6 -> io.dcloud.feature.ad.dcloud.ADHandler$6:
    1:1:void <init>(io.dcloud.feature.ad.dcloud.ADHandler$AdData,android.content.Context,java.lang.String,java.lang.String) -> <init>
    1:9:void run() -> run
io.dcloud.feature.ad.dcloud.ADHandler$7 -> io.dcloud.feature.ad.dcloud.ADHandler$7:
    1:1:void <init>(io.dcloud.feature.ad.dcloud.ADHandler$AdData,android.content.Context,java.lang.String,java.lang.String) -> <init>
    1:5:void run() -> run
io.dcloud.feature.ad.dcloud.ADHandler$8 -> io.dcloud.feature.ad.dcloud.ADHandler$8:
    1:1:void <init>(io.dcloud.feature.ad.dcloud.ADHandler$AdData,android.content.Context,java.lang.String,java.lang.String) -> <init>
    1:11:void run() -> run
io.dcloud.feature.ad.dcloud.ADHandler$9 -> io.dcloud.feature.ad.dcloud.ADHandler$9:
    1:1:void <init>(java.lang.StringBuffer) -> <init>
    1:1:void operate(java.lang.Object) -> operate
    2:6:void operate(java.io.File) -> operate
io.dcloud.feature.ad.dcloud.ADHandler$ADReceiver -> io.dcloud.feature.ad.dcloud.ADHandler$ADReceiver:
    1:5:void <init>(android.content.Context) -> <init>
    1:6:void broadcastADReceive() -> broadcastADReceive
    1:1:void onError(java.lang.String,java.lang.String) -> onError
    1:19:void onReceiver(org.json.JSONObject) -> onReceiver
    1:6:java.lang.Boolean pap(org.json.JSONObject) -> pap
io.dcloud.feature.ad.dcloud.ADHandler$AdData -> io.dcloud.feature.ad.dcloud.ADHandler$AdData:
    1:11:void <init>() -> <init>
    1:1:boolean check() -> check
    1:1:org.json.JSONObject data() -> data
    1:1:org.json.JSONObject full() -> full
    1:1:boolean isEClick() -> isEClick
    1:1:boolean isEShow() -> isEShow
    1:28:void listenADReceive(android.content.Context,io.dcloud.feature.ad.dcloud.IADReceiver) -> listenADReceive
    1:1:org.json.JSONObject report() -> report
io.dcloud.feature.ad.dcloud.ADHandler$AdData$1 -> io.dcloud.feature.ad.dcloud.ADHandler$AdData$1:
    1:1:void <init>(io.dcloud.feature.ad.dcloud.ADHandler$AdData,io.dcloud.feature.ad.dcloud.IADReceiver) -> <init>
    1:13:void onReceive(android.content.Context,android.content.Intent) -> onReceive
io.dcloud.feature.ad.dcloud.ADHandler_wanka -> io.dcloud.feature.ad.dcloud.ADHandler_wanka:
    1:1:void <init>() -> <init>
    1:1:boolean access$000(android.content.Context,java.lang.String) -> access$000
    1:1:void access$100(org.json.JSONArray,org.json.JSONObject,java.lang.String) -> access$100
    1:1:void access$200(android.content.Context,org.json.JSONObject,int) -> access$200
    1:1:void access$300(android.content.Context,io.dcloud.feature.ad.dcloud.ADHandler$AdData,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.json.JSONObject) -> access$300
    1:1:void access$400(java.lang.String,java.lang.String,int,int,boolean,io.dcloud.common.DHInterface.ICallBack,java.lang.String,boolean) -> access$400
    1:1:void access$500(android.content.Context,org.json.JSONObject,android.content.Intent) -> access$500
    1:3:void checkRunLoad(android.content.Context,org.json.JSONObject,int) -> checkRunLoad
    1:78:void click_wanka(android.content.Context,io.dcloud.feature.ad.dcloud.ADHandler$AdData,java.lang.String) -> click_wanka
    1:67:void click_wanka_other(android.content.Context,io.dcloud.feature.ad.dcloud.ADHandler$AdData,java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.json.JSONObject) -> click_wanka_other
    1:1:void click_wanka_url(android.content.Context,io.dcloud.feature.ad.dcloud.ADHandler$AdData,org.json.JSONArray,java.lang.String,java.lang.String) -> click_wanka_url
    1:3:void dplk_wanka(android.content.Context,io.dcloud.feature.ad.dcloud.ADHandler$AdData,java.lang.String) -> dplk_wanka
    1:1:void handleAdData_wanka(android.content.Context,org.json.JSONObject,long) -> handleAdData_wanka
    1:1:void handleTrackers_wanka(org.json.JSONArray,org.json.JSONObject,java.lang.String) -> handleTrackers_wanka
    2:3:void handleTrackers_wanka(java.lang.String,java.lang.String,int,int,boolean,io.dcloud.common.DHInterface.ICallBack,java.lang.String,boolean) -> handleTrackers_wanka
    4:19:void handleTrackers_wanka(org.json.JSONArray,org.json.JSONObject,io.dcloud.common.DHInterface.ICallBack,java.lang.String) -> handleTrackers_wanka
    1:7:boolean isRun(android.content.Context,java.lang.String) -> isRun
    1:1:void log(java.lang.String) -> log
    1:11:void runApp(android.content.Context,org.json.JSONObject,android.content.Intent) -> runApp
    1:4:void view_wanka(android.content.Context,io.dcloud.feature.ad.dcloud.ADHandler$AdData,java.lang.String) -> view_wanka
io.dcloud.feature.ad.dcloud.ADHandler_wanka$1 -> io.dcloud.feature.ad.dcloud.ADHandler_wanka$1:
    1:1:void <init>(org.json.JSONObject,android.content.Context,int) -> <init>
    1:11:void run() -> run
io.dcloud.feature.ad.dcloud.ADHandler_wanka$2 -> io.dcloud.feature.ad.dcloud.ADHandler_wanka$2:
    1:1:void <init>(io.dcloud.feature.ad.dcloud.ADHandler$AdData,android.content.Context,java.lang.String) -> <init>
    1:14:java.lang.Object onCallBack(int,java.lang.Object) -> onCallBack
io.dcloud.feature.ad.dcloud.ADHandler_wanka$3 -> io.dcloud.feature.ad.dcloud.ADHandler_wanka$3:
    1:1:void <init>(io.dcloud.feature.ad.dcloud.ADHandler$AdData,android.content.Context,java.lang.String) -> <init>
    1:3:void run() -> run
io.dcloud.feature.ad.dcloud.ADHandler_wanka$4 -> io.dcloud.feature.ad.dcloud.ADHandler_wanka$4:
    1:1:void <init>(org.json.JSONArray,io.dcloud.feature.ad.dcloud.ADHandler$AdData,android.content.Context) -> <init>
    1:27:void run() -> run
io.dcloud.feature.ad.dcloud.ADHandler_wanka$5 -> io.dcloud.feature.ad.dcloud.ADHandler_wanka$5:
    1:1:void <init>(boolean,int,java.lang.String,java.lang.String,boolean,int,io.dcloud.common.DHInterface.ICallBack) -> <init>
    1:26:void run() -> run
io.dcloud.feature.ad.dcloud.ADHandler_wanka$6 -> io.dcloud.feature.ad.dcloud.ADHandler_wanka$6:
    1:1:void <init>(org.json.JSONObject,org.json.JSONObject) -> <init>
    1:5:java.lang.Object onCallBack(int,android.content.Context,java.lang.Object) -> onCallBack
io.dcloud.feature.ad.dcloud.ADHandler_wanka$7 -> io.dcloud.feature.ad.dcloud.ADHandler_wanka$7:
    1:1:void <init>(org.json.JSONObject,org.json.JSONObject) -> <init>
    1:6:java.lang.Object onCallBack(int,android.content.Context,java.lang.Object) -> onCallBack
io.dcloud.feature.ad.dcloud.ADHandler_youdao -> io.dcloud.feature.ad.dcloud.ADHandler_youdao:
    1:1:void <init>() -> <init>
    1:6:void click_youdao(android.content.Context,io.dcloud.feature.ad.dcloud.ADHandler$AdData,java.lang.String) -> click_youdao
    1:4:void dplk_youdao(android.content.Context,io.dcloud.feature.ad.dcloud.ADHandler$AdData,java.lang.String) -> dplk_youdao
    1:1:void handleAdData_youdao(android.content.Context,org.json.JSONObject,long) -> handleAdData_youdao
    1:13:void handleTrackers_youdao(org.json.JSONArray,java.lang.String,io.dcloud.feature.ad.dcloud.ADHandler$AdData) -> handleTrackers_youdao
    1:4:void view_youdao(android.content.Context,io.dcloud.feature.ad.dcloud.ADHandler$AdData,java.lang.String) -> view_youdao
io.dcloud.feature.ad.dcloud.ADHandler_youdao$1 -> io.dcloud.feature.ad.dcloud.ADHandler_youdao$1:
    1:1:void <init>(java.lang.String,java.util.HashMap) -> <init>
    1:1:void run() -> run
io.dcloud.feature.ad.dcloud.ADResult -> io.dcloud.feature.ad.dcloud.ADResult:
    1:2:void <init>(io.dcloud.feature.ad.dcloud.IADReceiver[]) -> <init>
    1:18:void cad(java.lang.String) -> cad
    1:48:void dc(java.lang.String,int,int) -> dc
    1:9:java.lang.String gd() -> gd
io.dcloud.feature.ad.dcloud.ADResult$CADReceiver -> io.dcloud.feature.ad.dcloud.ADResult$CADReceiver:
    1:2:void <init>(android.content.Context) -> <init>
    1:43:void checkPromptData(org.json.JSONArray) -> checkPromptData
    1:4:void onReceiver(org.json.JSONObject) -> onReceiver
io.dcloud.feature.ad.dcloud.ADResult$CADReceiver$1 -> io.dcloud.feature.ad.dcloud.ADResult$CADReceiver$1:
    1:1:void <init>(io.dcloud.feature.ad.dcloud.ADResult$CADReceiver,org.json.JSONArray) -> <init>
    1:1:void run() -> run
io.dcloud.feature.ad.dcloud.ADResult$CADReceiver$2 -> io.dcloud.feature.ad.dcloud.ADResult$CADReceiver$2:
    1:1:void <init>(io.dcloud.feature.ad.dcloud.ADResult$CADReceiver,java.lang.String) -> <init>
    1:4:void onClick(android.content.DialogInterface,int) -> onClick
io.dcloud.feature.ad.dcloud.ADSim -> io.dcloud.feature.ad.dcloud.ADSim:
    1:11:void <init>(android.content.Context,org.json.JSONObject) -> <init>
    1:1:void access$000(io.dcloud.feature.ad.dcloud.ADSim) -> access$000
    1:1:io.dcloud.feature.ad.dcloud.ADHandler$AdData access$100(io.dcloud.feature.ad.dcloud.ADSim,org.json.JSONObject) -> access$100
    1:1:void access$200(io.dcloud.feature.ad.dcloud.ADSim,java.lang.String,java.lang.String) -> access$200
    1:1:void access$300(io.dcloud.feature.ad.dcloud.ADSim) -> access$300
    1:7:void click() -> click
    1:11:io.dcloud.feature.ad.dcloud.ADHandler$AdData crateAdData(org.json.JSONObject) -> crateAdData
    1:70:void dwApp(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,io.dcloud.common.DHInterface.ILoadCallBack,java.lang.String) -> dwApp
    1:1:int getRandomInt(int,int) -> getRandomInt
    1:1:void initAdImg(java.lang.String,java.lang.String) -> initAdImg
    1:3:void initClick() -> initClick
    1:3:void initSimSplsh() -> initSimSplsh
    1:3:void openUrl(android.content.Context,java.lang.String) -> openUrl
    1:14:void start() -> start
io.dcloud.feature.ad.dcloud.ADSim$1 -> io.dcloud.feature.ad.dcloud.ADSim$1:
    1:1:void <init>(io.dcloud.feature.ad.dcloud.ADSim,android.os.Looper) -> <init>
    1:4:void handleMessage(android.os.Message) -> handleMessage
io.dcloud.feature.ad.dcloud.ADSim$2 -> io.dcloud.feature.ad.dcloud.ADSim$2:
    1:1:void <init>(io.dcloud.feature.ad.dcloud.ADSim) -> <init>
    1:7:void run() -> run
io.dcloud.feature.ad.dcloud.ADSim$3 -> io.dcloud.feature.ad.dcloud.ADSim$3:
    1:1:void <init>(io.dcloud.feature.ad.dcloud.ADSim,java.lang.String,java.lang.String) -> <init>
    1:8:void run() -> run
io.dcloud.feature.ad.dcloud.ADSim$4 -> io.dcloud.feature.ad.dcloud.ADSim$4:
    1:1:void <init>(io.dcloud.feature.ad.dcloud.ADSim) -> <init>
    1:1:void run() -> run
io.dcloud.feature.ad.dcloud.ADSim$5 -> io.dcloud.feature.ad.dcloud.ADSim$5:
    1:1:void <init>(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.dcloud.android.downloader.callback.DCDownloadManager) -> <init>
    1:6:void onDownloadFailed(com.dcloud.android.downloader.domain.DownloadInfo,com.dcloud.android.downloader.exception.DownloadException) -> onDownloadFailed
    1:10:void onDownloadSuccess(com.dcloud.android.downloader.domain.DownloadInfo) -> onDownloadSuccess
io.dcloud.feature.ad.dcloud.ADWebView -> io.dcloud.feature.ad.dcloud.ADWebView:
    1:112:void <init>(android.content.Context) -> <init>
    1:2:void loadUrl(java.lang.String) -> loadUrl
    1:14:void removeUnSafeJavascriptInterface() -> removeUnSafeJavascriptInterface
io.dcloud.feature.ad.dcloud.ADWebView$1 -> io.dcloud.feature.ad.dcloud.ADWebView$1:
    1:1:void <init>(io.dcloud.feature.ad.dcloud.ADWebView) -> <init>
    1:5:void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    1:38:void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
    1:3:boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
io.dcloud.feature.ad.dcloud.ADWebView$1$1 -> io.dcloud.feature.ad.dcloud.ADWebView$1$1:
    1:1:void <init>(io.dcloud.feature.ad.dcloud.ADWebView$1,java.lang.String) -> <init>
    1:7:void run() -> run
io.dcloud.feature.ad.dcloud.ADWebView$1$2 -> io.dcloud.feature.ad.dcloud.ADWebView$1$2:
    1:1:void <init>(io.dcloud.feature.ad.dcloud.ADWebView$1,android.app.AlertDialog,android.net.http.SslError,android.webkit.SslErrorHandler) -> <init>
    1:7:void onClick(android.content.DialogInterface,int) -> onClick
io.dcloud.feature.ad.dcloud.ADWebView$2 -> io.dcloud.feature.ad.dcloud.ADWebView$2:
    1:1:void <init>(io.dcloud.feature.ad.dcloud.ADWebView) -> <init>
io.dcloud.feature.ad.dcloud.ADhandler_common -> io.dcloud.feature.ad.dcloud.ADhandler_common:
    1:1:void <init>() -> <init>
    1:6:void click_common(android.content.Context,io.dcloud.feature.ad.dcloud.ADHandler$AdData,java.lang.String) -> click_common
    1:1:void handleAdData_common(android.content.Context,org.json.JSONObject,long) -> handleAdData_common
    1:13:void handleTrackers_common(org.json.JSONArray,java.lang.String,io.dcloud.feature.ad.dcloud.ADHandler$AdData) -> handleTrackers_common
    1:4:void handletask_common(android.content.Context,io.dcloud.feature.ad.dcloud.ADHandler$AdData,java.lang.String,java.lang.String) -> handletask_common
io.dcloud.feature.ad.dcloud.ADhandler_common$1 -> io.dcloud.feature.ad.dcloud.ADhandler_common$1:
    1:1:void <init>(java.lang.String,java.util.HashMap) -> <init>
    1:1:void run() -> run
io.dcloud.feature.ad.dcloud.AdFeatureImpl -> io.dcloud.feature.ad.dcloud.AdFeatureImpl:
    1:26:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:1:boolean access$100() -> access$100
    1:1:void access$200(android.content.Context,java.lang.String,java.lang.String) -> access$200
    1:1:boolean access$302(boolean) -> access$302
    1:1:int access$500() -> access$500
    1:1:int access$508() -> access$508
    1:1:android.os.Handler access$700() -> access$700
    1:165:java.lang.Object doForFeature(java.lang.String,java.lang.Object) -> doForFeature
    1:2:void setRequest(android.content.Context,java.lang.String,java.lang.String) -> setRequest
io.dcloud.feature.ad.dcloud.AdFeatureImpl$1 -> io.dcloud.feature.ad.dcloud.AdFeatureImpl$1:
    1:6:void <init>() -> <init>
io.dcloud.feature.ad.dcloud.AdFeatureImpl$2 -> io.dcloud.feature.ad.dcloud.AdFeatureImpl$2:
    1:1:void <init>(android.content.Context) -> <init>
    1:2:void onSuccess() -> onSuccess
io.dcloud.feature.ad.dcloud.AdFeatureImpl$AdReceiver -> io.dcloud.feature.ad.dcloud.AdFeatureImpl$AdReceiver:
    1:4:void <init>(android.content.Context,java.lang.Object[],java.lang.String) -> <init>
    1:1:android.content.Context access$400(io.dcloud.feature.ad.dcloud.AdFeatureImpl$AdReceiver) -> access$400
    1:1:java.lang.String access$600(io.dcloud.feature.ad.dcloud.AdFeatureImpl$AdReceiver) -> access$600
    1:36:java.util.List getActivities() -> getActivities
    1:22:void onError(java.lang.String,java.lang.String) -> onError
    1:89:void onReceiver(org.json.JSONObject) -> onReceiver
io.dcloud.feature.ad.dcloud.AdFeatureImpl$AdReceiver$1 -> io.dcloud.feature.ad.dcloud.AdFeatureImpl$AdReceiver$1:
    1:1:void <init>(io.dcloud.feature.ad.dcloud.AdFeatureImpl$AdReceiver) -> <init>
    1:2:void run() -> run
io.dcloud.feature.ad.dcloud.AdFeatureImpl$AdReceiver$2 -> io.dcloud.feature.ad.dcloud.AdFeatureImpl$AdReceiver$2:
    1:1:void <init>(io.dcloud.feature.ad.dcloud.AdFeatureImpl$AdReceiver) -> <init>
    1:1:void run() -> run
io.dcloud.feature.ad.dcloud.AdFeatureImpl$MyHandler -> io.dcloud.feature.ad.dcloud.AdFeatureImpl$MyHandler:
    1:1:void <init>() -> <init>
    2:2:void <init>(io.dcloud.feature.ad.dcloud.AdFeatureImpl$1) -> <init>
    1:4:void handleMessage(android.os.Message) -> handleMessage
io.dcloud.feature.ad.dcloud.BitmapView -> io.dcloud.feature.ad.dcloud.BitmapView:
    1:22:void <init>(android.content.Context,android.graphics.Bitmap,io.dcloud.feature.ad.dcloud.ADHandler$AdData) -> <init>
    1:8:void blurBitmap(android.graphics.Bitmap) -> blurBitmap
    1:27:void drawBackgroundImage(android.graphics.Canvas) -> drawBackgroundImage
    1:16:int getBright(android.graphics.Bitmap) -> getBright
    1:12:void initRect() -> initRect
    1:2:void onDetachedFromWindow() -> onDetachedFromWindow
    1:5:void onDraw(android.graphics.Canvas) -> onDraw
    1:8:void testData(android.graphics.Canvas) -> testData
io.dcloud.feature.ad.dcloud.CommonSplashHandler -> io.dcloud.feature.ad.dcloud.CommonSplashHandler:
    1:25:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    1:1:java.lang.String access$000(io.dcloud.feature.ad.dcloud.CommonSplashHandler) -> access$000
    1:1:java.lang.String access$100(io.dcloud.feature.ad.dcloud.CommonSplashHandler) -> access$100
    1:1:java.lang.String access$200(io.dcloud.feature.ad.dcloud.CommonSplashHandler) -> access$200
    1:1:java.lang.String access$300(io.dcloud.feature.ad.dcloud.CommonSplashHandler) -> access$300
    1:1:void commitData(int) -> commitData
    1:5:org.json.JSONObject getResult() -> getResult
    1:1:void onAdClicked() -> onAdClicked
    1:1:void onAdShow() -> onAdShow
    1:2:void onAdShowEnd() -> onAdShowEnd
    1:2:void onAdShowError(int,java.lang.String) -> onAdShowError
    1:8:android.view.View onCreateSplash(android.content.Context,java.lang.String,io.dcloud.common.DHInterface.ICallBack) -> onCreateSplash
    1:2:void onError(int,java.lang.String) -> onError
    1:2:void onSkippedAd() -> onSkippedAd
    1:2:void onSplashAdLoad() -> onSplashAdLoad
    1:2:boolean onSplashClose(android.view.View) -> onSplashClose
    1:6:void pullAds(android.content.Context) -> pullAds
    7:19:void pullAds(android.content.Context,java.lang.String,io.dcloud.feature.ad.dcloud.ADBaseHandler$OnAdsRequestListener) -> pullAds
    1:1:void setAdpid(java.lang.String) -> setAdpid
io.dcloud.feature.ad.dcloud.CommonSplashHandler$1 -> io.dcloud.feature.ad.dcloud.CommonSplashHandler$1:
    1:1:void <init>(io.dcloud.feature.ad.dcloud.CommonSplashHandler,int) -> <init>
    1:2:void run() -> run
io.dcloud.feature.ad.dcloud.DcloudHandler -> io.dcloud.feature.ad.dcloud.DcloudHandler:
    1:133:void <init>() -> <init>
    1:1:io.dcloud.feature.ad.dcloud.ADHandler$AdData access$002(io.dcloud.feature.ad.dcloud.DcloudHandler,io.dcloud.feature.ad.dcloud.ADHandler$AdData) -> access$002
    1:1:io.dcloud.feature.ad.dcloud.SplashADView access$102(io.dcloud.feature.ad.dcloud.DcloudHandler,io.dcloud.feature.ad.dcloud.SplashADView) -> access$102
    1:4:int getAdRequestStatus() -> getAdRequestStatus
    1:3:void getBestAD(android.content.Context,java.lang.String) -> getBestAD
    1:5:void initAdData(android.content.Context,java.lang.String) -> initAdData
    1:8:void notifyCreateSplash(android.content.Context,java.lang.String) -> notifyCreateSplash
    1:1:void onCreate(android.content.Context) -> onCreate
    1:30:android.view.View onCreateSplash(android.content.Context,java.lang.String,io.dcloud.common.DHInterface.ICallBack) -> onCreateSplash
    1:2:boolean onSplashClose(android.view.View) -> onSplashClose
    1:37:void pullAds(android.content.Context,java.lang.String,io.dcloud.feature.ad.dcloud.ADBaseHandler$OnAdsRequestListener) -> pullAds
io.dcloud.feature.ad.dcloud.DcloudHandler$1 -> io.dcloud.feature.ad.dcloud.DcloudHandler$1:
    1:1:void <init>(io.dcloud.feature.ad.dcloud.DcloudHandler) -> <init>
    1:2:void onShowFinish() -> onShowFinish
io.dcloud.feature.ad.dcloud.SplashADView -> io.dcloud.feature.ad.dcloud.SplashADView:
    1:10:void <init>(android.content.Context,io.dcloud.common.DHInterface.ICallBack,io.dcloud.feature.ad.dcloud.ADHandler$AdData) -> <init>
    1:1:io.dcloud.feature.ad.dcloud.SplashADView$CloseSplashListener access$000(io.dcloud.feature.ad.dcloud.SplashADView) -> access$000
    1:1:int getBgColor(android.content.Context) -> getBgColor
    1:1:android.graphics.drawable.Drawable getIcon(android.content.Context) -> getIcon
    1:1:java.lang.String getName(android.content.Context) -> getName
    1:6:android.view.View getSkipButtonView(android.view.View) -> getSkipButtonView
    1:26:void init0(android.content.Context) -> init0
    1:1:void setListener(io.dcloud.feature.ad.dcloud.SplashADView$CloseSplashListener) -> setListener
io.dcloud.feature.ad.dcloud.SplashADView$1 -> io.dcloud.feature.ad.dcloud.SplashADView$1:
    1:1:void <init>(io.dcloud.feature.ad.dcloud.SplashADView) -> <init>
    1:1:void onError(int,java.lang.String) -> onError
    1:5:void onFinishShow() -> onFinishShow
io.dcloud.feature.ad.dcloud.SplashADViewWrapper -> io.dcloud.feature.ad.dcloud.SplashADViewWrapper:
    1:202:void <init>(android.content.Context,io.dcloud.feature.ad.dcloud.ADHandler$AdData,android.view.ViewGroup,io.dcloud.feature.ad.dcloud.AdViewListener) -> <init>
    1:1:void access$000(io.dcloud.feature.ad.dcloud.SplashADViewWrapper) -> access$000
    1:1:void access$100(io.dcloud.feature.ad.dcloud.SplashADViewWrapper) -> access$100
    1:1:boolean imm() -> imm
    1:72:void initAdMainView(android.content.Context,android.view.View) -> initAdMainView
    1:15:void onFinishShow() -> onFinishShow
    1:14:void onWillCloseSplash() -> onWillCloseSplash
    1:6:void runInitMainView() -> runInitMainView
    1:4:void setImageDownlaodListen(android.content.Context) -> setImageDownlaodListen
io.dcloud.feature.ad.dcloud.SplashADViewWrapper$1 -> io.dcloud.feature.ad.dcloud.SplashADViewWrapper$1:
    1:1:void <init>(io.dcloud.feature.ad.dcloud.SplashADViewWrapper,android.content.Context) -> <init>
    1:5:void onError(java.lang.String,java.lang.String) -> onError
    1:11:void onReceiver(org.json.JSONObject) -> onReceiver
io.dcloud.feature.ad.dcloud.SplashADViewWrapper$2 -> io.dcloud.feature.ad.dcloud.SplashADViewWrapper$2:
    1:1:void <init>(io.dcloud.feature.ad.dcloud.SplashADViewWrapper) -> <init>
    1:18:void onReceive(android.content.Context,android.content.Intent) -> onReceive
io.dcloud.feature.ad.dcloud.SplashADViewWrapper$3 -> io.dcloud.feature.ad.dcloud.SplashADViewWrapper$3:
    1:1:void <init>(io.dcloud.feature.ad.dcloud.SplashADViewWrapper,android.content.Context) -> <init>
    1:18:void onClick(android.view.View) -> onClick
io.dcloud.feature.ad.dcloud.SplashADViewWrapper$3$1 -> io.dcloud.feature.ad.dcloud.SplashADViewWrapper$3$1:
    1:1:void <init>(io.dcloud.feature.ad.dcloud.SplashADViewWrapper$3) -> <init>
    1:1:void run() -> run
io.dcloud.feature.ad.dcloud.SplashADViewWrapper$4 -> io.dcloud.feature.ad.dcloud.SplashADViewWrapper$4:
    1:1:void <init>(io.dcloud.feature.ad.dcloud.SplashADViewWrapper) -> <init>
    1:4:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
io.dcloud.feature.ad.dcloud.SplashADViewWrapper$5 -> io.dcloud.feature.ad.dcloud.SplashADViewWrapper$5:
    1:1:void <init>(io.dcloud.feature.ad.dcloud.SplashADViewWrapper) -> <init>
    1:1:void onClick(android.view.View) -> onClick
io.dcloud.feature.ad.dcloud.SplashADViewWrapper$6 -> io.dcloud.feature.ad.dcloud.SplashADViewWrapper$6:
    1:1:void <init>(io.dcloud.feature.ad.dcloud.SplashADViewWrapper) -> <init>
    1:1:void run() -> run
io.dcloud.feature.ad.dcloud.Support -> io.dcloud.feature.ad.dcloud.Support:
    1:1:void <clinit>() -> <clinit>
io.dcloud.feature.ad.dcloud.mgr.SplashAd -> io.dcloud.feature.ad.dcloud.mgr.SplashAd:
    1:30:void <init>(java.lang.String,android.app.Activity,java.util.List,int) -> <init>
    1:1:int access$100(io.dcloud.feature.ad.dcloud.mgr.SplashAd) -> access$100
    1:1:int access$102(io.dcloud.feature.ad.dcloud.mgr.SplashAd,int) -> access$102
    1:1:java.util.LinkedList access$200(io.dcloud.feature.ad.dcloud.mgr.SplashAd) -> access$200
    1:1:void access$300(io.dcloud.feature.ad.dcloud.mgr.SplashAd,java.lang.String,org.json.JSONArray) -> access$300
    1:1:long access$402(io.dcloud.feature.ad.dcloud.mgr.SplashAd,long) -> access$402
    1:1:io.dcloud.feature.ad.dcloud.mgr.SplashAd$WaitSplashSuccessHandler access$500(io.dcloud.feature.ad.dcloud.mgr.SplashAd) -> access$500
    1:1:android.view.View access$600(io.dcloud.feature.ad.dcloud.mgr.SplashAd) -> access$600
    1:1:android.app.Activity access$700(io.dcloud.feature.ad.dcloud.mgr.SplashAd) -> access$700
    1:1:java.lang.String access$800(io.dcloud.feature.ad.dcloud.mgr.SplashAd) -> access$800
    1:1:java.lang.String access$900(io.dcloud.feature.ad.dcloud.mgr.SplashAd) -> access$900
    1:18:void commitData(java.lang.String,org.json.JSONArray) -> commitData
    1:2:void disorderPull() -> disorderPull
    1:8:io.dcloud.feature.ad.dcloud.ADBaseHandler getB2CSplashAd() -> getB2CSplashAd
    1:19:java.lang.String getErrorMsg() -> getErrorMsg
    1:1:io.dcloud.feature.ad.dcloud.ADBaseHandler getSplash() -> getSplash
    1:8:boolean hasAvailableAds() -> hasAvailableAds
    1:1:boolean isTimeout() -> isTimeout
    1:8:boolean isValid() -> isValid
    1:4:void notifyListener(io.dcloud.feature.ad.dcloud.mgr.SplashAdManager$OnGetBestAdsListener) -> notifyListener
    1:27:android.view.View onCreateSplash(io.dcloud.common.DHInterface.ICallBack,io.dcloud.feature.ad.dcloud.mgr.SplashAdManager$OnGetBestAdsListener) -> onCreateSplash
    1:2:void onSplashClose(android.view.View) -> onSplashClose
    1:17:void orderPull() -> orderPull
    1:47:void showSplashAd() -> showSplashAd
io.dcloud.feature.ad.dcloud.mgr.SplashAd$1 -> io.dcloud.feature.ad.dcloud.mgr.SplashAd$1:
    1:1:void <init>(io.dcloud.feature.ad.dcloud.mgr.SplashAd) -> <init>
    1:2:void fail(io.dcloud.feature.ad.dcloud.ADBaseHandler) -> fail
    1:14:void success(io.dcloud.feature.ad.dcloud.ADBaseHandler) -> success
io.dcloud.feature.ad.dcloud.mgr.SplashAd$2 -> io.dcloud.feature.ad.dcloud.mgr.SplashAd$2:
    1:1:void <init>(io.dcloud.feature.ad.dcloud.mgr.SplashAd) -> <init>
    1:37:void fail(io.dcloud.feature.ad.dcloud.ADBaseHandler) -> fail
    1:27:void success(io.dcloud.feature.ad.dcloud.ADBaseHandler) -> success
io.dcloud.feature.ad.dcloud.mgr.SplashAd$3 -> io.dcloud.feature.ad.dcloud.mgr.SplashAd$3:
    1:1:void <init>(io.dcloud.feature.ad.dcloud.mgr.SplashAd,io.dcloud.common.DHInterface.IActivityHandler) -> <init>
    1:10:java.lang.Object onCallBack(int,java.lang.Object) -> onCallBack
io.dcloud.feature.ad.dcloud.mgr.SplashAd$4 -> io.dcloud.feature.ad.dcloud.mgr.SplashAd$4:
    1:1:void <init>(io.dcloud.feature.ad.dcloud.mgr.SplashAd,java.util.HashMap) -> <init>
    1:1:void run() -> run
io.dcloud.feature.ad.dcloud.mgr.SplashAd$WaitSplashSuccessHandler -> io.dcloud.feature.ad.dcloud.mgr.SplashAd$WaitSplashSuccessHandler:
    1:1:void <init>(io.dcloud.feature.ad.dcloud.mgr.SplashAd) -> <init>
    2:2:void <init>(io.dcloud.feature.ad.dcloud.mgr.SplashAd,io.dcloud.feature.ad.dcloud.mgr.SplashAd$1) -> <init>
    1:8:void handleMessage(android.os.Message) -> handleMessage
io.dcloud.feature.ad.dcloud.mgr.SplashAdManager -> io.dcloud.feature.ad.dcloud.mgr.SplashAdManager:
    1:6:void <init>() -> <init>
    1:8:io.dcloud.feature.ad.dcloud.mgr.SplashAdManager getInstance() -> getInstance
    1:6:io.dcloud.feature.ad.dcloud.mgr.SplashAd pullSplash(java.lang.String,java.lang.String,android.app.Activity,java.util.List,int) -> pullSplash
    1:11:void showSplash() -> showSplash
io.dcloud.feature.audio.AbsAudio -> io.dcloud.feature.audio.AbsAudio:
    1:1:void <init>() -> <init>
io.dcloud.feature.audio.AudioFeatureImpl -> io.dcloud.feature.audio.AudioFeatureImpl:
    1:3:void <init>() -> <init>
    1:107:java.lang.String execute(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String[]) -> execute
    108:333:void execute(java.lang.Object) -> execute
    1:6:java.lang.Object findAppObj(java.lang.String,java.lang.String) -> findAppObj
    1:4:java.util.ArrayList getAppObjList(java.lang.String) -> getAppObjList
    1:1:void init(io.dcloud.common.DHInterface.AbsMgr,java.lang.String) -> init
    1:2:void putAppObjList(java.lang.String,java.lang.Object) -> putAppObjList
    1:3:void removeAppObjFromList(java.lang.String,java.lang.Object) -> removeAppObjFromList
    1:8:void setCanPlay(java.lang.String,java.lang.String,boolean) -> setCanPlay
    1:6:void setSpeakerphoneOn(android.media.AudioManager,boolean) -> setSpeakerphoneOn
io.dcloud.feature.audio.AudioPlayer -> io.dcloud.feature.audio.AudioPlayer:
    1:344:void <init>(org.json.JSONObject,io.dcloud.common.DHInterface.IWebview) -> <init>
    1:1:boolean access$000(io.dcloud.feature.audio.AudioPlayer) -> access$000
    1:1:int access$102(io.dcloud.feature.audio.AudioPlayer,int) -> access$102
    1:1:io.dcloud.common.DHInterface.IWebview access$200(io.dcloud.feature.audio.AudioPlayer) -> access$200
    1:1:void addEventListener(java.lang.String,java.lang.String) -> addEventListener
    1:75:void addListener() -> addListener
    1:1:io.dcloud.feature.audio.AudioPlayer createAudioPlayer(org.json.JSONObject,io.dcloud.common.DHInterface.IWebview) -> createAudioPlayer
    1:9:void destory() -> destory
    1:17:void execEvents(java.lang.String,java.lang.String) -> execEvents
    1:2:void failCallback(int,java.lang.String) -> failCallback
    1:4:java.lang.String getBuffer() -> getBuffer
    1:9:java.lang.String getDuration() -> getDuration
    1:3:java.lang.String getPosition() -> getPosition
    1:61:java.lang.String getStyles(java.lang.String) -> getStyles
    1:1:java.lang.String getVolume() -> getVolume
    1:1:boolean isCanMix() -> isCanMix
    1:4:java.lang.String isPause() -> isPause
    1:4:java.lang.Object onCallBack(java.lang.String,java.lang.Object) -> onCallBack
    1:2:boolean onExecute(io.dcloud.common.DHInterface.ISysEventListener$SysEventType,java.lang.Object) -> onExecute
    1:5:void pause() -> pause
    1:21:void play() -> play
    1:1:void removeEventListener(java.lang.String) -> removeEventListener
    1:5:void requestAudioFocus() -> requestAudioFocus
    1:2:void resume() -> resume
    1:2:void seekTo(int) -> seekTo
    1:1:void setCanMix(boolean) -> setCanMix
    1:1:void setParams(org.json.JSONObject) -> setParams
    1:2:void setSessionCategory(java.lang.String) -> setSessionCategory
    1:48:void setSrc(java.lang.String) -> setSrc
    1:24:void setStyle(org.json.JSONObject) -> setStyle
    1:5:void startPlay() -> startPlay
    1:5:void stop() -> stop
    1:1:void successCallback() -> successCallback
io.dcloud.feature.audio.AudioPlayer$1 -> io.dcloud.feature.audio.AudioPlayer$1:
    1:1:void <init>(io.dcloud.feature.audio.AudioPlayer) -> <init>
    1:2:void onAudioFocusChange(int) -> onAudioFocusChange
io.dcloud.feature.audio.AudioPlayer$2 -> io.dcloud.feature.audio.AudioPlayer$2:
    1:1:void <init>(io.dcloud.feature.audio.AudioPlayer) -> <init>
    1:1:void onPrepared(android.media.MediaPlayer) -> onPrepared
io.dcloud.feature.audio.AudioPlayer$3 -> io.dcloud.feature.audio.AudioPlayer$3:
    1:1:void <init>(io.dcloud.feature.audio.AudioPlayer) -> <init>
    1:1:void onSeekComplete(android.media.MediaPlayer) -> onSeekComplete
io.dcloud.feature.audio.AudioPlayer$4 -> io.dcloud.feature.audio.AudioPlayer$4:
    1:1:void <init>(io.dcloud.feature.audio.AudioPlayer) -> <init>
    1:1:void onBufferingUpdate(android.media.MediaPlayer,int) -> onBufferingUpdate
io.dcloud.feature.audio.AudioPlayer$5 -> io.dcloud.feature.audio.AudioPlayer$5:
    1:1:void <init>(io.dcloud.feature.audio.AudioPlayer) -> <init>
    1:1:boolean onInfo(android.media.MediaPlayer,int,int) -> onInfo
io.dcloud.feature.audio.AudioPlayer$6 -> io.dcloud.feature.audio.AudioPlayer$6:
    1:1:void <init>(io.dcloud.feature.audio.AudioPlayer) -> <init>
    1:38:boolean onError(android.media.MediaPlayer,int,int) -> onError
io.dcloud.feature.audio.AudioPlayer$7 -> io.dcloud.feature.audio.AudioPlayer$7:
    1:1:void <init>(io.dcloud.feature.audio.AudioPlayer) -> <init>
    1:1:void onCompletion(android.media.MediaPlayer) -> onCompletion
io.dcloud.feature.audio.AudioRecorderMgr -> io.dcloud.feature.audio.AudioRecorderMgr:
    1:1:void <init>() -> <init>
    1:1:io.dcloud.feature.audio.AudioRecorderMgr access$000() -> access$000
    1:1:void access$100(io.dcloud.feature.audio.AudioRecorderMgr,java.lang.String) -> access$100
    1:2:void failCallback(java.lang.String) -> failCallback
    1:1:boolean isPause(java.lang.String) -> isPause
    1:2:void pause() -> pause
    1:2:void resume() -> resume
    1:52:io.dcloud.feature.audio.AudioRecorderMgr startRecorder(io.dcloud.feature.audio.recorder.RecordOption,java.lang.String) -> startRecorder
    1:6:void stop() -> stop
    1:3:void successCallback() -> successCallback
io.dcloud.feature.audio.AudioRecorderMgr$1 -> io.dcloud.feature.audio.AudioRecorderMgr$1:
    1:1:void <init>(io.dcloud.common.DHInterface.IApp) -> <init>
    1:1:void onDenied(java.lang.String) -> onDenied
    1:33:void onGranted(java.lang.String) -> onGranted
io.dcloud.feature.audio.aac.AacEncode -> io.dcloud.feature.audio.aac.AacEncode:
    1:68:void <init>(int,int) -> <init>
    1:9:void addADTStoPacket(byte[],int) -> addADTStoPacket
    1:7:void close() -> close
    1:1:long computePresentationTime(long) -> computePresentationTime
    1:4:io.dcloud.feature.audio.aac.AacEncode getAacEncode(int,int) -> getAacEncode
    5:5:io.dcloud.feature.audio.aac.AacEncode getAacEncode() -> getAacEncode
    1:13:void initFreqidxs() -> initFreqidxs
    1:44:byte[] offerEncoder(byte[]) -> offerEncoder
io.dcloud.feature.audio.mp3.SimpleLame -> io.dcloud.feature.audio.mp3.SimpleLame:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
io.dcloud.feature.audio.recorder.AbsRecorder -> io.dcloud.feature.audio.recorder.AbsRecorder:
    1:1:void <init>() -> <init>
io.dcloud.feature.audio.recorder.AudioRecorder -> io.dcloud.feature.audio.recorder.AudioRecorder:
    1:44:void <init>(io.dcloud.feature.audio.recorder.RecordOption) -> <init>
    1:1:void release() -> release
    1:1:void start() -> start
    1:1:void stop() -> stop
io.dcloud.feature.audio.recorder.DataEncodeThread -> io.dcloud.feature.audio.recorder.DataEncodeThread:
    1:152:void <init>(java.io.File,int,java.lang.String) -> <init>
    1:1:int access$000(io.dcloud.feature.audio.recorder.DataEncodeThread) -> access$000
    1:1:void access$100(io.dcloud.feature.audio.recorder.DataEncodeThread) -> access$100
    1:1:void addTask(short[],int) -> addTask
    2:2:void addTask(short[],short[],int) -> addTask
    3:3:void addTask(byte[],int) -> addTask
    1:44:void flushAndRelease() -> flushAndRelease
    1:5:android.os.Handler getHandler() -> getHandler
    1:1:void onPeriodicNotification(android.media.AudioRecord) -> onPeriodicNotification
    1:27:int processData() -> processData
    1:4:void run() -> run
io.dcloud.feature.audio.recorder.DataEncodeThread$StopHandler -> io.dcloud.feature.audio.recorder.DataEncodeThread$StopHandler:
    1:2:void <init>(io.dcloud.feature.audio.recorder.DataEncodeThread) -> <init>
    1:10:void handleMessage(android.os.Message) -> handleMessage
io.dcloud.feature.audio.recorder.DataEncodeThread$Task -> io.dcloud.feature.audio.recorder.DataEncodeThread$Task:
    1:3:void <init>(io.dcloud.feature.audio.recorder.DataEncodeThread,short[],int) -> <init>
    4:6:void <init>(io.dcloud.feature.audio.recorder.DataEncodeThread,byte[],int) -> <init>
    7:10:void <init>(io.dcloud.feature.audio.recorder.DataEncodeThread,short[],short[],int) -> <init>
    1:1:byte[] getByteData() -> getByteData
    1:1:short[] getData() -> getData
    1:1:int getReadSize() -> getReadSize
    1:1:short[] getRightData() -> getRightData
io.dcloud.feature.audio.recorder.HighGradeRecorder -> io.dcloud.feature.audio.recorder.HighGradeRecorder:
    1:3:void <init>() -> <init>
    1:1:int getRecorderState() -> getRecorderState
    1:1:int getmMaxDuration() -> getmMaxDuration
    1:4:void onstart() -> onstart
    1:5:void pause() -> pause
    1:10:void reset() -> reset
    1:5:void resume() -> resume
    1:1:io.dcloud.feature.audio.recorder.HighGradeRecorder setCallback(io.dcloud.feature.audio.recorder.HighGradeRecorder$Callback) -> setCallback
    1:1:io.dcloud.feature.audio.recorder.HighGradeRecorder setMaxDuration(int) -> setMaxDuration
    1:1:io.dcloud.feature.audio.recorder.HighGradeRecorder setOutputFile(java.lang.String) -> setOutputFile
    1:2:io.dcloud.feature.audio.recorder.HighGradeRecorder setRecordOption(io.dcloud.feature.audio.recorder.RecordOption) -> setRecordOption
    1:17:void start() -> start
    1:1:void stop() -> stop
    2:6:void stop(int) -> stop
io.dcloud.feature.audio.recorder.HighGradeRecorder$State -> io.dcloud.feature.audio.recorder.HighGradeRecorder$State:
    1:1:void <init>(io.dcloud.feature.audio.recorder.HighGradeRecorder) -> <init>
io.dcloud.feature.audio.recorder.PCMFormat -> io.dcloud.feature.audio.recorder.PCMFormat:
    1:3:void <clinit>() -> <clinit>
    1:3:void <init>(java.lang.String,int,int,int) -> <init>
    1:1:int getAudioFormat() -> getAudioFormat
    1:1:int getBytesPerFrame() -> getBytesPerFrame
    1:1:io.dcloud.feature.audio.recorder.PCMFormat valueOf(java.lang.String) -> valueOf
    1:1:io.dcloud.feature.audio.recorder.PCMFormat[] values() -> values
io.dcloud.feature.audio.recorder.RecordOption -> io.dcloud.feature.audio.recorder.RecordOption:
    1:26:void <init>(io.dcloud.common.DHInterface.IWebview,org.json.JSONObject) -> <init>
io.dcloud.feature.audio.recorder.RecorderTask -> io.dcloud.feature.audio.recorder.RecorderTask:
    1:55:void <init>(java.io.File,io.dcloud.feature.audio.recorder.HighGradeRecorder,io.dcloud.feature.audio.recorder.RecordOption) -> <init>
    1:1:double access$000(io.dcloud.feature.audio.recorder.RecorderTask) -> access$000
    1:1:io.dcloud.feature.audio.recorder.HighGradeRecorder$Callback access$100(io.dcloud.feature.audio.recorder.RecorderTask) -> access$100
    1:1:int access$200(io.dcloud.feature.audio.recorder.RecorderTask) -> access$200
    1:6:double calVolume(short[],double) -> calVolume
    1:1:void cancel() -> cancel
    1:1:void createRecord(int,int,int) -> createRecord
    1:1:int getDuration() -> getDuration
    1:40:void init() -> init
    1:28:boolean isFound() -> isFound
    1:1:boolean isRecording() -> isRecording
    1:1:void pauseRecord() -> pauseRecord
    1:1:void resumeRecord() -> resumeRecord
    1:86:void run() -> run
    1:1:void setCallback(io.dcloud.feature.audio.recorder.HighGradeRecorder$Callback) -> setCallback
    1:1:void setMaxDuration(int) -> setMaxDuration
    1:1:void startRecording() -> startRecording
    1:12:void stopRecord() -> stopRecord
io.dcloud.feature.audio.recorder.RecorderTask$1 -> io.dcloud.feature.audio.recorder.RecorderTask$1:
    1:1:void <init>(io.dcloud.feature.audio.recorder.RecorderTask) -> <init>
    1:1:void run() -> run
io.dcloud.feature.audio.recorder.RecorderTask$2 -> io.dcloud.feature.audio.recorder.RecorderTask$2:
    1:1:void <init>(io.dcloud.feature.audio.recorder.RecorderTask,double) -> <init>
    1:4:void run() -> run
io.dcloud.feature.audio.recorder.RecorderUtil -> io.dcloud.feature.audio.recorder.RecorderUtil:
    1:1:void <init>() -> <init>
    1:1:android.content.Context access$000() -> access$000
    1:1:android.content.Context getContext() -> getContext
    1:4:android.os.Handler getMainHandler() -> getMainHandler
    1:3:void init(android.content.Context,boolean) -> init
    1:1:boolean isContainMp3() -> isContainMp3
    1:1:boolean isDebug() -> isDebug
    1:1:void postTaskSafely(java.lang.Runnable) -> postTaskSafely
    1:4:void showDebugToast(java.lang.String) -> showDebugToast
io.dcloud.feature.audio.recorder.RecorderUtil$1 -> io.dcloud.feature.audio.recorder.RecorderUtil$1:
    1:1:void <init>(java.lang.String) -> <init>
    1:1:void run() -> run
io.dcloud.feature.barcode2.BarcodeFeatureImpl -> io.dcloud.feature.barcode2.BarcodeFeatureImpl:
    1:1:void <init>() -> <init>
    1:1:void dispose(java.lang.String) -> dispose
    1:1:java.lang.Object doForFeature(java.lang.String,java.lang.Object) -> doForFeature
    1:1:java.lang.String execute(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String[]) -> execute
    1:2:void init(io.dcloud.common.DHInterface.AbsMgr,java.lang.String) -> init
io.dcloud.feature.barcode2.BarcodeFrameItem -> io.dcloud.feature.barcode2.BarcodeFrameItem:
    1:51:void <clinit>() -> <clinit>
    1:660:void <init>(io.dcloud.feature.barcode2.BarcodeProxy,io.dcloud.common.DHInterface.IWebview,java.lang.String,org.json.JSONArray,org.json.JSONArray,org.json.JSONObject) -> <init>
    1:1:android.content.Context access$000(io.dcloud.feature.barcode2.BarcodeFrameItem) -> access$000
    1:1:void access$100(io.dcloud.feature.barcode2.BarcodeFrameItem,android.widget.AbsoluteLayout$LayoutParams,android.widget.AbsoluteLayout) -> access$100
    1:2:void addCallBackId(java.lang.String,java.lang.String) -> addCallBackId
    1:5:void appendToFrameView(io.dcloud.common.adapter.ui.AdaFrameView) -> appendToFrameView
    1:1:void autoFocus() -> autoFocus
    1:13:android.graphics.Bitmap byte2bitmap(byte[],android.hardware.Camera) -> byte2bitmap
    1:6:void cancel() -> cancel
    1:16:void cancel_scan() -> cancel_scan
    1:3:void close_scan() -> close_scan
    1:16:com.dcloud.zxing2.BarcodeFormat convertNumToBarcodeFormat(int) -> convertNumToBarcodeFormat
    1:31:int convertTypestrToNum(com.dcloud.zxing2.BarcodeFormat) -> convertTypestrToNum
    1:13:void dispose() -> dispose
    1:1:void drawViewfinder() -> drawViewfinder
    1:41:android.widget.AbsoluteLayout$LayoutParams getFrameLayoutParam(org.json.JSONArray,org.json.JSONObject) -> getFrameLayoutParam
    1:1:android.os.Handler getHandler() -> getHandler
    1:9:org.json.JSONObject getJsBarcode() -> getJsBarcode
    1:1:io.dcloud.feature.barcode2.view.ViewfinderView getViewfinderView() -> getViewfinderView
    1:25:void handleDecode(com.dcloud.zxing2.Result,android.graphics.Bitmap) -> handleDecode
    1:20:void initBeepSound() -> initBeepSound
    1:17:void initCamera(android.graphics.SurfaceTexture) -> initCamera
    1:8:void initCameraView(android.widget.AbsoluteLayout$LayoutParams,android.widget.AbsoluteLayout) -> initCameraView
    1:19:void initDecodeFormats(org.json.JSONArray) -> initDecodeFormats
    1:43:void initLandScapeCameraView(android.widget.AbsoluteLayout$LayoutParams,android.widget.AbsoluteLayout) -> initLandScapeCameraView
    1:40:void initPortraitCameraView(android.widget.AbsoluteLayout$LayoutParams,android.widget.AbsoluteLayout) -> initPortraitCameraView
    1:20:void initStyles(org.json.JSONObject,android.view.View) -> initStyles
    1:1:boolean isRunning() -> isRunning
    1:1:void listenHideAndShow(io.dcloud.common.DHInterface.IWebview) -> listenHideAndShow
    1:5:void onDestroy() -> onDestroy
    1:10:void onPause() -> onPause
    1:3:void onPopFromStack(boolean) -> onPopFromStack
    1:3:void onPushToStack(boolean) -> onPushToStack
    1:22:void onResume(boolean) -> onResume
    1:7:void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureAvailable
    1:1:boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture) -> onSurfaceTextureDestroyed
    1:9:void playBeepSoundAndVibrate() -> playBeepSoundAndVibrate
    1:4:void removeMapFrameItem(io.dcloud.common.DHInterface.IWebview) -> removeMapFrameItem
    1:1:void resumeOrientationState() -> resumeOrientationState
    1:5:void runJsCallBack(java.lang.String,int,boolean,boolean) -> runJsCallBack
    1:1:void saveOrientationState() -> saveOrientationState
    1:1:void setFlash(boolean) -> setFlash
    1:19:void start() -> start
    1:38:void toFrameView() -> toFrameView
    1:17:void upateStyles(org.json.JSONObject) -> upateStyles
io.dcloud.feature.barcode2.BarcodeFrameItem$1 -> io.dcloud.feature.barcode2.BarcodeFrameItem$1:
    1:2:void <init>(io.dcloud.feature.barcode2.BarcodeFrameItem,android.content.Context,android.widget.AbsoluteLayout$LayoutParams) -> <init>
    1:14:void onDraw(android.graphics.Canvas) -> onDraw
io.dcloud.feature.barcode2.BarcodeFrameItem$2 -> io.dcloud.feature.barcode2.BarcodeFrameItem$2:
    1:1:void <init>(io.dcloud.feature.barcode2.BarcodeFrameItem,io.dcloud.common.DHInterface.IApp,android.widget.AbsoluteLayout$LayoutParams,android.widget.AbsoluteLayout) -> <init>
    1:2:void onDenied(java.lang.String) -> onDenied
    1:1:void onGranted(java.lang.String) -> onGranted
io.dcloud.feature.barcode2.BarcodeFrameItem$2$1 -> io.dcloud.feature.barcode2.BarcodeFrameItem$2$1:
    1:1:void <init>(io.dcloud.feature.barcode2.BarcodeFrameItem$2) -> <init>
    1:2:void execute(java.lang.Object) -> execute
io.dcloud.feature.barcode2.BarcodeFrameItem$3 -> io.dcloud.feature.barcode2.BarcodeFrameItem$3:
    1:1:void <init>(io.dcloud.feature.barcode2.BarcodeFrameItem,android.widget.AbsoluteLayout) -> <init>
    1:2:void execute(java.lang.Object) -> execute
io.dcloud.feature.barcode2.BarcodeFrameItem$4 -> io.dcloud.feature.barcode2.BarcodeFrameItem$4:
    1:1:void <init>(io.dcloud.feature.barcode2.BarcodeFrameItem,android.widget.AbsoluteLayout) -> <init>
    1:2:void execute(java.lang.Object) -> execute
io.dcloud.feature.barcode2.BarcodeFrameItem$5 -> io.dcloud.feature.barcode2.BarcodeFrameItem$5:
    1:1:void <init>(io.dcloud.feature.barcode2.BarcodeFrameItem) -> <init>
    1:5:java.lang.Object onCallBack(java.lang.String,java.lang.Object) -> onCallBack
io.dcloud.feature.barcode2.BarcodeFrameItem$6 -> io.dcloud.feature.barcode2.BarcodeFrameItem$6:
    1:1:void <init>(io.dcloud.feature.barcode2.BarcodeFrameItem) -> <init>
    1:1:void onCompletion(android.media.MediaPlayer) -> onCompletion
io.dcloud.feature.barcode2.BarcodeProxy -> io.dcloud.feature.barcode2.BarcodeProxy:
    1:6:void <init>() -> <init>
    1:2:void appendToFrameView(io.dcloud.common.adapter.ui.AdaFrameView) -> appendToFrameView
    1:95:void execute(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String[]) -> execute
    1:2:org.json.JSONObject getJsBarcode() -> getJsBarcode
    1:5:void onDestroy() -> onDestroy
    1:4:boolean onExecute(io.dcloud.common.DHInterface.ISysEventListener$SysEventType,java.lang.Object) -> onExecute
    1:2:void onPause() -> onPause
    1:2:void onResume() -> onResume
io.dcloud.feature.barcode2.BarcodeProxyMgr -> io.dcloud.feature.barcode2.BarcodeProxyMgr:
    1:2:void <init>() -> <init>
    1:8:java.lang.Object doForFeature(java.lang.String,java.lang.Object) -> doForFeature
    1:17:java.lang.String execute(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String[]) -> execute
    1:4:io.dcloud.common.DHInterface.IWebview findWebviewByUuid(io.dcloud.common.DHInterface.IWebview,java.lang.String) -> findWebviewByUuid
    1:3:io.dcloud.feature.barcode2.BarcodeProxy getBarcodeProxyById(java.lang.String) -> getBarcodeProxyById
    1:2:io.dcloud.feature.barcode2.BarcodeProxy getBarcodeProxyByUuid(java.lang.String) -> getBarcodeProxyByUuid
    1:4:io.dcloud.feature.barcode2.BarcodeProxyMgr getBarcodeProxyMgr() -> getBarcodeProxyMgr
    1:7:void onDestroy() -> onDestroy
    1:3:void removeBarcodeProxy(java.lang.String) -> removeBarcodeProxy
    1:1:void setFeatureMgr(io.dcloud.common.DHInterface.AbsMgr) -> setFeatureMgr
io.dcloud.feature.barcode2.camera.AutoFocusCallback -> io.dcloud.feature.barcode2.camera.AutoFocusCallback:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:9:void onAutoFocus(boolean,android.hardware.Camera) -> onAutoFocus
    1:2:void setHandler(android.os.Handler,int) -> setHandler
io.dcloud.feature.barcode2.camera.CameraConfigurationManager -> io.dcloud.feature.barcode2.camera.CameraConfigurationManager:
    1:1:void <clinit>() -> <clinit>
    1:2:void <init>(android.content.Context) -> <init>
    1:10:int findBestMotZoomValue(java.lang.CharSequence,int) -> findBestMotZoomValue
    1:43:android.graphics.Point findBestPreviewSizeValue(java.lang.CharSequence,android.graphics.Point) -> findBestPreviewSizeValue
    1:66:android.graphics.Point findBestPreviewSizeValue0(java.lang.CharSequence,android.graphics.Point) -> findBestPreviewSizeValue0
    1:1:android.graphics.Point getCameraResolution() -> getCameraResolution
    2:17:android.graphics.Point getCameraResolution(android.hardware.Camera$Parameters,android.graphics.Point) -> getCameraResolution
    1:1:int getPreviewFormat() -> getPreviewFormat
    1:1:java.lang.String getPreviewFormatString() -> getPreviewFormatString
    1:19:void initFromCameraParameters(android.hardware.Camera) -> initFromCameraParameters
    1:10:void setDesiredCameraParameters(android.hardware.Camera) -> setDesiredCameraParameters
    1:7:void setFlash(android.hardware.Camera$Parameters) -> setFlash
    1:13:void setSharpness(android.hardware.Camera$Parameters) -> setSharpness
    1:59:void setZoom(android.hardware.Camera$Parameters) -> setZoom
io.dcloud.feature.barcode2.camera.CameraManager -> io.dcloud.feature.barcode2.camera.CameraManager:
    1:85:void <clinit>() -> <clinit>
    1:43:void <init>(android.content.Context) -> <init>
    1:23:io.dcloud.feature.barcode2.camera.PlanarYUVLuminanceSource buildLuminanceSource(byte[],int,int) -> buildLuminanceSource
    1:2:void clearLastBitmapData() -> clearLastBitmapData
    1:5:void closeDriver() -> closeDriver
    1:1:io.dcloud.feature.barcode2.camera.CameraManager get() -> get
    1:1:io.dcloud.feature.barcode2.camera.AutoFocusCallback getAutoFocusCallback() -> getAutoFocusCallback
    1:27:android.graphics.Point getCR(int,int) -> getCR
    1:1:android.hardware.Camera getCameraHandler() -> getCameraHandler
    1:4:android.graphics.Rect getFramingRectInPreview() -> getFramingRectInPreview
    1:12:android.graphics.Rect getLandscapeFramingRectInPreview() -> getLandscapeFramingRectInPreview
    1:4:byte[] getLastBitmapData() -> getLastBitmapData
    1:12:android.graphics.Rect getPortraitFramingRectInPreview() -> getPortraitFramingRectInPreview
    1:2:void init(android.content.Context) -> init
    3:4:void init(android.content.Context,boolean) -> init
    1:18:void openDriver(android.graphics.SurfaceTexture) -> openDriver
    1:2:void removeAutoFocus() -> removeAutoFocus
    1:7:void requestAutoFocus(android.os.Handler,int) -> requestAutoFocus
    1:6:void requestPreviewFrame(io.dcloud.feature.barcode2.decoding.IBarHandler,android.os.Handler,int) -> requestPreviewFrame
    1:3:void setFlashlight(boolean) -> setFlashlight
    1:1:void setHorizontalOrientation(boolean) -> setHorizontalOrientation
    1:3:void startPreview() -> startPreview
    1:8:void stopPreview() -> stopPreview
io.dcloud.feature.barcode2.camera.FlashlightManager -> io.dcloud.feature.barcode2.camera.FlashlightManager:
    1:11:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:1:void disableFlashlight() -> disableFlashlight
    1:1:void enableFlashlight() -> enableFlashlight
    1:26:java.lang.Object getHardwareService() -> getHardwareService
    1:2:java.lang.reflect.Method getSetFlashEnabledMethod(java.lang.Object) -> getSetFlashEnabledMethod
    1:11:java.lang.Object invoke(java.lang.reflect.Method,java.lang.Object,java.lang.Object[]) -> invoke
    1:6:java.lang.Class maybeForName(java.lang.String) -> maybeForName
    1:6:java.lang.reflect.Method maybeGetMethod(java.lang.Class,java.lang.String,java.lang.Class[]) -> maybeGetMethod
    1:14:void setFlashlight(boolean) -> setFlashlight
io.dcloud.feature.barcode2.camera.PlanarYUVLuminanceSource -> io.dcloud.feature.barcode2.camera.PlanarYUVLuminanceSource:
    1:75:void <init>(byte[],int,int,int,int,int,int) -> <init>
    1:1:int getDataHeight() -> getDataHeight
    1:1:int getDataWidth() -> getDataWidth
    1:25:byte[] getMatrix() -> getMatrix
    1:10:byte[] getRow(int,byte[]) -> getRow
    1:1:android.graphics.Bitmap renderCroppedGreyscaleBitmap() -> renderCroppedGreyscaleBitmap
    2:30:android.graphics.Bitmap renderCroppedGreyscaleBitmap(boolean) -> renderCroppedGreyscaleBitmap
    1:17:com.dcloud.zxing2.LuminanceSource rotateCounterClockwise() -> rotateCounterClockwise
io.dcloud.feature.barcode2.camera.PreviewCallback -> io.dcloud.feature.barcode2.camera.PreviewCallback:
    1:10:void <clinit>() -> <clinit>
    1:43:void <init>(io.dcloud.feature.barcode2.camera.CameraConfigurationManager,boolean) -> <init>
    1:1:byte[] getLastBitmapData() -> getLastBitmapData
    1:25:void onPreviewFrame(byte[],android.hardware.Camera) -> onPreviewFrame
    1:4:void setHandler(io.dcloud.feature.barcode2.decoding.IBarHandler,android.os.Handler,int,boolean) -> setHandler
    1:1:void setLastBitmapData(byte[]) -> setLastBitmapData
io.dcloud.feature.barcode2.decoding.BitmapLuminanceSource -> io.dcloud.feature.barcode2.decoding.BitmapLuminanceSource:
    1:10:void <init>(android.graphics.Bitmap) -> <init>
    1:1:byte[] getMatrix() -> getMatrix
    1:1:byte[] getRow(int,byte[]) -> getRow
io.dcloud.feature.barcode2.decoding.CaptureActivityHandler -> io.dcloud.feature.barcode2.decoding.CaptureActivityHandler:
    1:1:void <clinit>() -> <clinit>
    1:8:void <init>(io.dcloud.feature.barcode2.decoding.IBarHandler,java.util.Vector,java.lang.String,boolean) -> <init>
    1:1:void autoFocus() -> autoFocus
    1:44:android.graphics.Bitmap convertToBMW(android.graphics.Bitmap,int,int,int) -> convertToBMW
    1:11:com.dcloud.zxing2.Result decode(android.graphics.Bitmap,boolean) -> decode
    1:32:void handleMessage(android.os.Message) -> handleMessage
    1:12:void quitSynchronously() -> quitSynchronously
    1:4:void restartPreviewAndDecode() -> restartPreviewAndDecode
    1:3:void resume() -> resume
    1:4:void stopDecode() -> stopDecode
    1:19:com.dcloud.zxing2.Result tryBiggerBitmap(android.graphics.Bitmap,boolean) -> tryBiggerBitmap
    1:107:com.dcloud.zxing2.Result trySmallerBitmap(android.graphics.Bitmap,boolean,boolean) -> trySmallerBitmap
io.dcloud.feature.barcode2.decoding.CaptureActivityHandler$1 -> io.dcloud.feature.barcode2.decoding.CaptureActivityHandler$1:
    1:1:void <init>(java.util.List) -> <init>
    1:1:void foundPossibleResultPoint(com.dcloud.zxing2.ResultPoint) -> foundPossibleResultPoint
io.dcloud.feature.barcode2.decoding.CaptureActivityHandler$2 -> io.dcloud.feature.barcode2.decoding.CaptureActivityHandler$2:
    1:1:void <init>(java.util.List) -> <init>
    1:1:void foundPossibleResultPoint(com.dcloud.zxing2.ResultPoint) -> foundPossibleResultPoint
io.dcloud.feature.barcode2.decoding.CaptureActivityHandler$3 -> io.dcloud.feature.barcode2.decoding.CaptureActivityHandler$3:
    1:1:void <init>(java.util.List) -> <init>
    1:1:void foundPossibleResultPoint(com.dcloud.zxing2.ResultPoint) -> foundPossibleResultPoint
io.dcloud.feature.barcode2.decoding.CaptureActivityHandler$State -> io.dcloud.feature.barcode2.decoding.CaptureActivityHandler$State:
    1:4:void <clinit>() -> <clinit>
    1:1:void <init>(java.lang.String,int) -> <init>
    1:1:io.dcloud.feature.barcode2.decoding.CaptureActivityHandler$State valueOf(java.lang.String) -> valueOf
    1:1:io.dcloud.feature.barcode2.decoding.CaptureActivityHandler$State[] values() -> values
io.dcloud.feature.barcode2.decoding.DecodeFormatManager -> io.dcloud.feature.barcode2.decoding.DecodeFormatManager:
    1:23:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:5:java.util.Vector parseDecodeFormats(android.content.Intent) -> parseDecodeFormats
    6:10:java.util.Vector parseDecodeFormats(android.net.Uri) -> parseDecodeFormats
    11:32:java.util.Vector parseDecodeFormats(java.lang.Iterable,java.lang.String) -> parseDecodeFormats
io.dcloud.feature.barcode2.decoding.DecodeHandler -> io.dcloud.feature.barcode2.decoding.DecodeHandler:
    1:6:void <clinit>() -> <clinit>
    1:4:void <init>(io.dcloud.feature.barcode2.decoding.IBarHandler,java.util.Hashtable) -> <init>
    1:56:void decode(byte[],int,int) -> decode
    57:93:com.dcloud.zxing2.Result decode(android.graphics.Bitmap,com.dcloud.zxing2.ResultPointCallback,boolean) -> decode
    94:94:com.dcloud.zxing2.Result decode(android.graphics.Bitmap,boolean) -> decode
    1:30:void handleMessage(android.os.Message) -> handleMessage
io.dcloud.feature.barcode2.decoding.DecodeThread -> io.dcloud.feature.barcode2.decoding.DecodeThread:
    1:42:void <init>(io.dcloud.feature.barcode2.decoding.IBarHandler,java.util.Vector,java.lang.String,com.dcloud.zxing2.ResultPointCallback,boolean) -> <init>
    1:5:android.os.Handler getHandler() -> getHandler
    1:4:void run() -> run
io.dcloud.feature.barcode2.decoding.FinishListener -> io.dcloud.feature.barcode2.decoding.FinishListener:
    1:2:void <init>(android.app.Activity) -> <init>
    1:1:void onCancel(android.content.DialogInterface) -> onCancel
    1:1:void onClick(android.content.DialogInterface,int) -> onClick
io.dcloud.feature.barcode2.decoding.InactivityTimer -> io.dcloud.feature.barcode2.decoding.InactivityTimer:
    1:9:void <init>(android.app.Activity) -> <init>
    1:3:void cancel() -> cancel
    1:2:void onActivity() -> onActivity
    1:2:void shutdown() -> shutdown
io.dcloud.feature.barcode2.decoding.InactivityTimer$DaemonThreadFactory -> io.dcloud.feature.barcode2.decoding.InactivityTimer$DaemonThreadFactory:
    1:1:void <init>() -> <init>
    2:2:void <init>(io.dcloud.feature.barcode2.decoding.InactivityTimer$1) -> <init>
    1:2:java.lang.Thread newThread(java.lang.Runnable) -> newThread
io.dcloud.feature.barcode2.decoding.Intents -> io.dcloud.feature.barcode2.decoding.Intents:
    1:1:void <init>() -> <init>
io.dcloud.feature.barcode2.decoding.Intents$Encode -> io.dcloud.feature.barcode2.decoding.Intents$Encode:
    1:1:void <init>() -> <init>
io.dcloud.feature.barcode2.decoding.Intents$Scan -> io.dcloud.feature.barcode2.decoding.Intents$Scan:
    1:1:void <init>() -> <init>
io.dcloud.feature.barcode2.decoding.Intents$SearchBookContents -> io.dcloud.feature.barcode2.decoding.Intents$SearchBookContents:
    1:1:void <init>() -> <init>
io.dcloud.feature.barcode2.decoding.Intents$Share -> io.dcloud.feature.barcode2.decoding.Intents$Share:
    1:1:void <init>() -> <init>
io.dcloud.feature.barcode2.decoding.Intents$WifiConnect -> io.dcloud.feature.barcode2.decoding.Intents$WifiConnect:
    1:1:void <init>() -> <init>
io.dcloud.feature.barcode2.view.DetectorViewConfig -> io.dcloud.feature.barcode2.view.DetectorViewConfig:
    1:39:void <init>() -> <init>
    1:1:void clearData() -> clearData
    1:18:android.graphics.Rect getDetectorRect() -> getDetectorRect
    1:4:io.dcloud.feature.barcode2.view.DetectorViewConfig getInstance() -> getInstance
    1:1:void initSurfaceViewRect(int,int,int,int) -> initSurfaceViewRect
io.dcloud.feature.barcode2.view.ViewfinderResultPointCallback -> io.dcloud.feature.barcode2.view.ViewfinderResultPointCallback:
    1:2:void <init>(io.dcloud.feature.barcode2.view.ViewfinderView) -> <init>
    1:1:void foundPossibleResultPoint(com.dcloud.zxing2.ResultPoint) -> foundPossibleResultPoint
io.dcloud.feature.barcode2.view.ViewfinderView -> io.dcloud.feature.barcode2.view.ViewfinderView:
    1:128:void <init>(android.content.Context,io.dcloud.feature.barcode2.decoding.IBarHandler) -> <init>
    1:1:void access$000(io.dcloud.feature.barcode2.view.ViewfinderView) -> access$000
    1:1:void addPossibleResultPoint(com.dcloud.zxing2.ResultPoint) -> addPossibleResultPoint
    1:29:void drawDetectorCorner(android.graphics.Canvas,android.graphics.Rect) -> drawDetectorCorner
    1:9:void drawLaserLine(android.graphics.Canvas,android.graphics.Rect) -> drawLaserLine
    1:7:void drawNonDetectorArea(android.graphics.Canvas,android.graphics.Rect,android.graphics.Rect) -> drawNonDetectorArea
    1:23:void drawResultPoint(android.graphics.Canvas,android.graphics.Rect) -> drawResultPoint
    1:1:void drawViewfinder() -> drawViewfinder
    1:22:void onDraw(android.graphics.Canvas) -> onDraw
    1:11:void startUpdateScreenTimer() -> startUpdateScreenTimer
    1:7:void stopUpdateScreenTimer() -> stopUpdateScreenTimer
    1:7:void updateScreen() -> updateScreen
io.dcloud.feature.barcode2.view.ViewfinderView$1 -> io.dcloud.feature.barcode2.view.ViewfinderView$1:
    1:1:void <init>(io.dcloud.feature.barcode2.view.ViewfinderView) -> <init>
    1:1:void run() -> run
io.dcloud.feature.device.DeviceFeatureImpl -> io.dcloud.feature.device.DeviceFeatureImpl:
    1:7:void <clinit>() -> <clinit>
    1:434:void <init>() -> <init>
    1:1:void a(io.dcloud.feature.device.DeviceFeatureImpl,io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String,java.lang.String) -> a
    2:2:void a(io.dcloud.feature.device.DeviceFeatureImpl,io.dcloud.common.DHInterface.IWebview,float,boolean) -> a
    3:14:java.lang.String a(io.dcloud.common.DHInterface.IApp,float) -> a
    15:44:void a(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String,java.lang.String) -> a
    45:53:int a(android.app.Activity,boolean) -> a
    54:59:void a(io.dcloud.common.DHInterface.IWebview,float,boolean) -> a
    60:60:int a(float) -> a
    61:67:void a(io.dcloud.common.DHInterface.IWebview,java.lang.String,boolean) -> a
    1:1:void b(io.dcloud.common.DHInterface.IWebview,float,boolean) -> b
    1:732:java.lang.String execute(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String[]) -> execute
    1:12:void init(io.dcloud.common.DHInterface.AbsMgr,java.lang.String) -> init
    1:5:boolean onExecute(io.dcloud.common.DHInterface.ISysEventListener$SysEventType,java.lang.Object) -> onExecute
io.dcloud.feature.device.DeviceFeatureImpl$a -> io.dcloud.feature.device.DeviceFeatureImpl$a:
    1:1:void <init>(io.dcloud.feature.device.DeviceFeatureImpl,io.dcloud.common.DHInterface.IApp,io.dcloud.common.DHInterface.IWebview,java.lang.String[],boolean) -> <init>
    1:1:void onGranted(java.lang.String) -> onGranted
io.dcloud.feature.device.DeviceFeatureImpl$b -> io.dcloud.feature.device.DeviceFeatureImpl$b:
    1:1:void <init>(io.dcloud.feature.device.DeviceFeatureImpl,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> <init>
    1:2:void onDenied(java.lang.String) -> onDenied
    1:5:void onGranted(java.lang.String) -> onGranted
io.dcloud.feature.device.DeviceFeatureImpl$c -> io.dcloud.feature.device.DeviceFeatureImpl$c:
    1:1:void <init>(io.dcloud.feature.device.DeviceFeatureImpl,io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String) -> <init>
    1:3:void a(java.lang.String,boolean) -> a
io.dcloud.feature.device.DeviceFeatureImpl$d -> io.dcloud.feature.device.DeviceFeatureImpl$d:
    1:1:void <init>(io.dcloud.feature.device.DeviceFeatureImpl,boolean,io.dcloud.common.DHInterface.IWebview,float) -> <init>
    1:5:void run() -> run
io.dcloud.feature.device.DeviceFeatureImpl$d$a -> io.dcloud.feature.device.DeviceFeatureImpl$d$a:
    1:1:void <init>(io.dcloud.feature.device.DeviceFeatureImpl$d) -> <init>
    1:18:void onDenied(java.lang.String) -> onDenied
    1:1:void onGranted(java.lang.String) -> onGranted
io.dcloud.feature.device.DeviceFeatureImpl$e -> io.dcloud.feature.device.DeviceFeatureImpl$e:
    1:4:void <init>(io.dcloud.feature.device.DeviceFeatureImpl) -> <init>
    1:44:void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
io.dcloud.feature.gallery.imageedit.IMGEditActivity -> io.dcloud.feature.gallery.imageedit.IMGEditActivity:
    1:16:void <init>() -> <init>
    2:2:void a(io.dcloud.feature.gallery.imageedit.c.d) -> a
    3:11:void a(io.dcloud.feature.gallery.imageedit.c.b) -> a
    12:15:android.graphics.Bitmap a(android.graphics.Bitmap) -> a
    16:16:void a(int) -> a
    17:18:java.lang.String a(java.lang.String) -> a
    2:79:android.graphics.Bitmap c() -> c
    1:1:void e() -> e
    1:11:void f() -> f
    1:25:void g() -> g
    1:125:void h() -> h
    1:5:void i() -> i
    1:1:void j() -> j
    1:1:void k() -> k
    1:5:void m() -> m
    1:1:void onClick(android.view.View) -> onClick
io.dcloud.feature.gallery.imageedit.a -> io.dcloud.feature.gallery.imageedit.a:
    1:1:void <init>() -> <init>
    1:2:void a() -> a
    1:1:void b(int) -> b
    2:3:void b() -> b
    1:4:void c(int) -> c
    1:14:void d() -> d
    1:6:void l() -> l
    1:17:void n() -> n
    1:4:void onBackPressed() -> onBackPressed
    1:1:void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
    1:23:void onClick(android.view.View) -> onClick
    1:22:void onCreate(android.os.Bundle) -> onCreate
    1:1:void onDismiss(android.content.DialogInterface) -> onDismiss
    1:1:void onShow(android.content.DialogInterface) -> onShow
io.dcloud.feature.gallery.imageedit.a$a -> io.dcloud.feature.gallery.imageedit.a$a:
    1:1:void <clinit>() -> <clinit>
io.dcloud.feature.gallery.imageedit.b -> io.dcloud.feature.gallery.imageedit.b:
    1:12:void <init>(android.content.Context,io.dcloud.feature.gallery.imageedit.b$a) -> <init>
    1:1:void a(io.dcloud.feature.gallery.imageedit.c.d) -> a
    2:17:void a() -> a
    1:5:void b() -> b
    1:11:void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
    1:21:void onClick(android.view.View) -> onClick
    1:11:void onCreate(android.os.Bundle) -> onCreate
    1:30:void onStart() -> onStart
io.dcloud.feature.gallery.imageedit.c.a -> io.dcloud.feature.gallery.imageedit.c.a:
    1:1:void <clinit>() -> <clinit>
    1:466:void <init>() -> <init>
    1:15:void a(android.graphics.Bitmap) -> a
    16:48:void a(io.dcloud.feature.gallery.imageedit.c.b) -> a
    49:57:io.dcloud.feature.gallery.imageedit.c.i.a a(float,float) -> a
    58:58:void a(io.dcloud.feature.gallery.imageedit.c.j.a) -> a
    59:76:void a(io.dcloud.feature.gallery.imageedit.c.c,float,float) -> a
    77:80:void a(io.dcloud.feature.gallery.imageedit.c.a$c) -> a
    81:84:void a() -> a
    85:86:void a(android.graphics.Canvas,int) -> a
    87:95:void a(android.graphics.Canvas) -> a
    96:97:void a(android.graphics.Canvas,float,float) -> a
    98:109:io.dcloud.feature.gallery.imageedit.c.i.a a(float,float,float,float) -> a
    110:114:void a(int) -> a
    115:136:void a(float,float,float) -> a
    137:137:void a(float) -> a
    138:150:boolean a(float,float,boolean) -> a
    151:152:void a(boolean) -> a
    153:154:void a(int,int) -> a
    155:155:void a(io.dcloud.feature.gallery.imageedit.c.a$b) -> a
    1:6:void b(float) -> b
    7:7:android.graphics.RectF b() -> b
    8:52:io.dcloud.feature.gallery.imageedit.c.i.a b(float,float) -> b
    53:62:void b(io.dcloud.feature.gallery.imageedit.c.j.a) -> b
    63:64:void b(io.dcloud.feature.gallery.imageedit.c.a$c) -> b
    65:75:void b(android.graphics.Canvas) -> b
    76:76:void b(float,float,float) -> b
    77:77:void b(boolean) -> b
    78:78:void b(int) -> b
    1:1:io.dcloud.feature.gallery.imageedit.c.b c() -> c
    2:2:io.dcloud.feature.gallery.imageedit.c.i.a c(float,float) -> c
    3:9:void c(io.dcloud.feature.gallery.imageedit.c.j.a) -> c
    10:20:int c(android.graphics.Canvas) -> c
    21:21:void c(float) -> c
    22:24:void c(boolean) -> c
    1:1:void d(io.dcloud.feature.gallery.imageedit.c.j.a) -> d
    2:13:void d(float,float) -> d
    14:20:void d(android.graphics.Canvas) -> d
    21:21:float d() -> d
    22:22:void d(float) -> d
    1:4:void e(io.dcloud.feature.gallery.imageedit.c.j.a) -> e
    5:7:void e(android.graphics.Canvas) -> e
    8:10:void e(float,float) -> e
    11:11:void e(float) -> e
    12:12:float e() -> e
    1:2:void f(io.dcloud.feature.gallery.imageedit.c.j.a) -> f
    3:20:void f(android.graphics.Canvas) -> f
    21:28:void f(float,float) -> f
    29:29:float f() -> f
    1:3:void finalize() -> finalize
    1:4:void g() -> g
    5:11:void g(float,float) -> g
    1:1:boolean h() -> h
    2:17:void h(float,float) -> h
    1:1:boolean i() -> i
    1:1:boolean j() -> j
    1:1:boolean k() -> k
    1:20:void l() -> l
    1:1:boolean m() -> m
    1:5:void n() -> n
    1:2:void o() -> o
    1:2:void r() -> r
    1:3:void s() -> s
    1:1:void t() -> t
    1:10:void u() -> u
    1:18:void v() -> v
    1:2:void w() -> w
    1:2:void x() -> x
io.dcloud.feature.gallery.imageedit.c.a$a -> io.dcloud.feature.gallery.imageedit.c.a$a:
    1:1:void <clinit>() -> <clinit>
io.dcloud.feature.gallery.imageedit.c.b -> io.dcloud.feature.gallery.imageedit.c.b:
    1:5:void <clinit>() -> <clinit>
    1:1:void <init>(java.lang.String,int) -> <init>
    1:1:io.dcloud.feature.gallery.imageedit.c.b valueOf(java.lang.String) -> valueOf
    1:1:io.dcloud.feature.gallery.imageedit.c.b[] values() -> values
io.dcloud.feature.gallery.imageedit.c.c -> io.dcloud.feature.gallery.imageedit.c.c:
    1:1:void <init>() -> <init>
    2:2:void <init>(android.graphics.Path) -> <init>
    3:3:void <init>(android.graphics.Path,io.dcloud.feature.gallery.imageedit.c.b) -> <init>
    4:4:void <init>(android.graphics.Path,io.dcloud.feature.gallery.imageedit.c.b,int) -> <init>
    5:38:void <init>(android.graphics.Path,io.dcloud.feature.gallery.imageedit.c.b,int,float) -> <init>
    1:1:int a() -> a
    2:2:void a(int) -> a
    3:3:void a(io.dcloud.feature.gallery.imageedit.c.b) -> a
    4:4:void a(float) -> a
    5:9:void a(android.graphics.Canvas,android.graphics.Paint) -> a
    10:10:void a(android.graphics.Matrix) -> a
    1:1:io.dcloud.feature.gallery.imageedit.c.b b() -> b
    2:4:void b(android.graphics.Canvas,android.graphics.Paint) -> b
    1:1:android.graphics.Path c() -> c
    1:1:float d() -> d
io.dcloud.feature.gallery.imageedit.c.d -> io.dcloud.feature.gallery.imageedit.c.d:
    1:9:void <init>(java.lang.String,int,int) -> <init>
    1:1:int a() -> a
    1:1:int b() -> b
    1:1:java.lang.String c() -> c
    1:1:boolean d() -> d
    1:1:java.lang.String toString() -> toString
io.dcloud.feature.gallery.imageedit.c.f.a -> io.dcloud.feature.gallery.imageedit.c.f.a:
    1:7:void <init>() -> <init>
    1:2:void a(io.dcloud.feature.gallery.imageedit.c.i.a,io.dcloud.feature.gallery.imageedit.c.i.a) -> a
    3:3:boolean a() -> a
    1:5:void setObjectValues(java.lang.Object[]) -> setObjectValues
io.dcloud.feature.gallery.imageedit.c.g.a -> io.dcloud.feature.gallery.imageedit.c.g.a:
    1:11:void <clinit>() -> <clinit>
io.dcloud.feature.gallery.imageedit.c.g.a$a -> io.dcloud.feature.gallery.imageedit.c.g.a$a:
    1:32:void <clinit>() -> <clinit>
    1:2:void <init>(java.lang.String,int,int) -> <init>
    1:57:void a(android.graphics.RectF,android.graphics.RectF,float,float,float[],boolean) -> a
    58:58:float a(float,float,float) -> a
    59:59:float[] a(android.graphics.RectF,float,float) -> a
    60:60:boolean a(android.graphics.RectF,float,float,float) -> a
    61:63:io.dcloud.feature.gallery.imageedit.c.g.a$a a(int) -> a
    1:1:io.dcloud.feature.gallery.imageedit.c.g.a$a valueOf(java.lang.String) -> valueOf
    1:1:io.dcloud.feature.gallery.imageedit.c.g.a$a[] values() -> values
io.dcloud.feature.gallery.imageedit.c.g.b -> io.dcloud.feature.gallery.imageedit.c.g.b:
    1:59:void <init>() -> <init>
    1:4:void a(android.graphics.RectF,float) -> a
    5:6:void a(float) -> a
    7:7:void a(boolean) -> a
    8:8:android.graphics.RectF a() -> a
    9:46:void a(android.graphics.Canvas) -> a
    47:60:io.dcloud.feature.gallery.imageedit.c.g.a$a a(float,float) -> a
    61:61:void a(io.dcloud.feature.gallery.imageedit.c.g.a$a,float,float) -> a
    62:62:void a(int) -> a
    1:4:boolean b() -> b
    5:5:void b(boolean) -> b
    6:7:android.graphics.RectF b(float,float) -> b
    1:11:void c(float,float) -> c
    12:12:boolean c() -> c
    13:13:void c(boolean) -> c
    1:6:void d(float,float) -> d
    7:7:boolean d() -> d
    1:2:void e(float,float) -> e
    3:3:boolean e() -> e
    1:1:boolean f() -> f
io.dcloud.feature.gallery.imageedit.c.h.a -> io.dcloud.feature.gallery.imageedit.c.h.a:
    1:2:void <init>(android.content.Context,android.net.Uri) -> <init>
    1:15:android.graphics.Bitmap a(android.graphics.BitmapFactory$Options) -> a
io.dcloud.feature.gallery.imageedit.c.h.b -> io.dcloud.feature.gallery.imageedit.c.h.b:
    1:2:void <init>(android.net.Uri) -> <init>
    1:1:android.net.Uri a() -> a
io.dcloud.feature.gallery.imageedit.c.h.c -> io.dcloud.feature.gallery.imageedit.c.h.c:
    1:1:void <init>(android.net.Uri) -> <init>
    1:13:android.graphics.Bitmap a(android.graphics.BitmapFactory$Options) -> a
io.dcloud.feature.gallery.imageedit.c.i.a -> io.dcloud.feature.gallery.imageedit.c.i.a:
    1:5:void <init>(float,float,float,float) -> <init>
    1:4:void a(float,float,float,float) -> a
    5:7:void a(io.dcloud.feature.gallery.imageedit.c.i.a) -> a
    8:8:boolean a(io.dcloud.feature.gallery.imageedit.c.i.a,io.dcloud.feature.gallery.imageedit.c.i.a) -> a
    1:1:java.lang.String toString() -> toString
io.dcloud.feature.gallery.imageedit.c.i.b -> io.dcloud.feature.gallery.imageedit.c.i.b:
    1:1:void <init>() -> <init>
    1:12:io.dcloud.feature.gallery.imageedit.c.i.a a(float,io.dcloud.feature.gallery.imageedit.c.i.a,io.dcloud.feature.gallery.imageedit.c.i.a) -> a
    1:1:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
io.dcloud.feature.gallery.imageedit.c.j.b -> io.dcloud.feature.gallery.imageedit.c.j.b:
    1:7:void <init>(io.dcloud.feature.gallery.imageedit.view.IMGStickerView,android.view.View) -> <init>
    1:1:double a(float,float) -> a
    2:2:double a(float,float,float,float) -> a
    1:72:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
io.dcloud.feature.gallery.imageedit.c.j.c -> io.dcloud.feature.gallery.imageedit.c.j.c:
    1:5:void <init>(android.view.View) -> <init>
    1:3:boolean a() -> a
    4:4:void a(io.dcloud.feature.gallery.imageedit.c.j.e$a) -> a
    5:5:boolean a(android.view.View) -> a
    1:1:boolean b() -> b
    2:2:void b(io.dcloud.feature.gallery.imageedit.c.j.e$a) -> b
    3:6:void b(android.view.View) -> b
    1:1:boolean c() -> c
    2:4:void c(android.view.View) -> c
    1:3:boolean dismiss() -> dismiss
    1:11:android.graphics.RectF getFrame() -> getFrame
io.dcloud.feature.gallery.imageedit.c.j.d -> io.dcloud.feature.gallery.imageedit.c.j.d:
    1:1:void <clinit>() -> <clinit>
    1:2:void <init>(android.view.View) -> <init>
    1:16:boolean a(android.view.View,android.view.MotionEvent) -> a
io.dcloud.feature.gallery.imageedit.c.k.a -> io.dcloud.feature.gallery.imageedit.c.k.a:
    1:1:void <clinit>() -> <clinit>
    1:1:void a(android.graphics.RectF,android.graphics.RectF) -> a
    2:2:void a(android.graphics.RectF,android.graphics.RectF,float) -> a
    3:29:void a(android.graphics.RectF,android.graphics.RectF,float,float,float,float) -> a
    30:62:io.dcloud.feature.gallery.imageedit.c.i.a a(android.graphics.RectF,android.graphics.RectF,boolean) -> a
    63:86:io.dcloud.feature.gallery.imageedit.c.i.a a(android.graphics.RectF,android.graphics.RectF,float,float) -> a
    1:33:io.dcloud.feature.gallery.imageedit.c.i.a b(android.graphics.RectF,android.graphics.RectF,float,float) -> b
    34:48:io.dcloud.feature.gallery.imageedit.c.i.a b(android.graphics.RectF,android.graphics.RectF) -> b
io.dcloud.feature.gallery.imageedit.c.k.b -> io.dcloud.feature.gallery.imageedit.c.k.b:
    1:14:int a(android.content.Context) -> a
io.dcloud.feature.gallery.imageedit.view.IMGColorGroup -> io.dcloud.feature.gallery.imageedit.view.IMGColorGroup:
    1:1:void <init>(android.content.Context) -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1:4:int getCheckColor() -> getCheckColor
    1:5:void setCheckColor(int) -> setCheckColor
io.dcloud.feature.gallery.imageedit.view.IMGColorRadio -> io.dcloud.feature.gallery.imageedit.view.IMGColorRadio:
    1:1:void <init>(android.content.Context) -> <init>
    2:25:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    26:54:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1:11:void a(android.content.Context,android.util.AttributeSet,int) -> a
    12:12:float a(float) -> a
    1:1:float b(float) -> b
    1:14:void draw(android.graphics.Canvas) -> draw
    1:7:android.animation.ValueAnimator getAnimator() -> getAnimator
    1:1:int getColor() -> getColor
    1:2:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
    1:11:void setChecked(boolean) -> setChecked
    1:2:void setColor(int) -> setColor
io.dcloud.feature.gallery.imageedit.view.IMGStickerTextView -> io.dcloud.feature.gallery.imageedit.view.IMGStickerTextView:
    1:1:void <init>(android.content.Context) -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    3:3:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1:6:android.view.View a(android.content.Context) -> a
    7:11:void a(io.dcloud.feature.gallery.imageedit.c.d) -> a
    1:7:void b(android.content.Context) -> b
    1:3:void c() -> c
    1:4:io.dcloud.feature.gallery.imageedit.b getDialog() -> getDialog
    1:1:io.dcloud.feature.gallery.imageedit.c.d getText() -> getText
    1:5:void setText(io.dcloud.feature.gallery.imageedit.c.d) -> setText
io.dcloud.feature.gallery.imageedit.view.IMGStickerView -> io.dcloud.feature.gallery.imageedit.view.IMGStickerView:
    1:1:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2:49:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1:1:void a(float) -> a
    2:2:boolean a() -> a
    3:4:void a(android.graphics.Canvas) -> a
    5:5:void a(io.dcloud.feature.gallery.imageedit.c.j.e$a) -> a
    1:20:void b(android.content.Context) -> b
    21:21:boolean b() -> b
    22:22:void b(io.dcloud.feature.gallery.imageedit.c.j.e$a) -> b
    1:1:void d() -> d
    1:1:boolean dismiss() -> dismiss
    1:9:void draw(android.graphics.Canvas) -> draw
    1:1:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    1:1:android.view.ViewGroup$LayoutParams getAnchorLayoutParams() -> getAnchorLayoutParams
    1:1:android.view.ViewGroup$LayoutParams getContentLayoutParams() -> getContentLayoutParams
    1:1:android.graphics.RectF getFrame() -> getFrame
    1:1:float getScale() -> getScale
    1:2:void onClick(android.view.View) -> onClick
    1:6:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1:22:void onLayout(boolean,int,int,int,int) -> onLayout
    1:24:void onMeasure(int,int) -> onMeasure
    1:20:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1:17:void setScale(float) -> setScale
io.dcloud.feature.gallery.imageedit.view.IMGView -> io.dcloud.feature.gallery.imageedit.view.IMGView:
    1:1:void <init>(android.content.Context) -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    3:53:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1:1:void a(io.dcloud.feature.gallery.imageedit.view.IMGView) -> a
    2:2:boolean a(io.dcloud.feature.gallery.imageedit.view.IMGView,float,float) -> a
    3:6:void a(android.content.Context) -> a
    7:13:void a(io.dcloud.feature.gallery.imageedit.c.i.a,io.dcloud.feature.gallery.imageedit.c.i.a) -> a
    14:15:void a() -> a
    16:75:void a(android.graphics.Canvas) -> a
    76:79:void a(android.view.View,android.widget.FrameLayout$LayoutParams) -> a
    80:95:void a(io.dcloud.feature.gallery.imageedit.c.d) -> a
    96:99:boolean a(android.view.MotionEvent) -> a
    100:103:void a(io.dcloud.feature.gallery.imageedit.c.i.a) -> a
    104:105:boolean a(int,int) -> a
    106:112:boolean a(android.view.View) -> a
    113:118:boolean a(float,float) -> a
    1:1:io.dcloud.feature.gallery.imageedit.c.a b(io.dcloud.feature.gallery.imageedit.view.IMGView) -> b
    2:4:void b() -> b
    5:6:void b(int,int) -> b
    7:8:boolean b(android.view.MotionEvent) -> b
    9:10:void b(android.view.View) -> b
    1:3:void c() -> c
    4:6:boolean c(android.view.MotionEvent) -> c
    7:8:void c(android.view.View) -> c
    1:2:boolean d() -> d
    3:42:boolean d(android.view.MotionEvent) -> d
    1:5:void e() -> e
    6:6:boolean e(android.view.MotionEvent) -> e
    1:9:boolean f(android.view.MotionEvent) -> f
    10:15:boolean f() -> f
    1:5:boolean g() -> g
    1:1:io.dcloud.feature.gallery.imageedit.c.b getMode() -> getMode
    1:2:void h() -> h
    1:27:android.graphics.Bitmap i() -> i
    1:2:void j() -> j
    1:2:void k() -> k
    1:2:void l() -> l
    1:3:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    1:4:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    1:3:void onAnimationStart(android.animation.Animator) -> onAnimationStart
    1:2:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
    1:3:void onDetachedFromWindow() -> onDetachedFromWindow
    1:1:void onDraw(android.graphics.Canvas) -> onDraw
    1:4:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1:3:void onLayout(boolean,int,int,int,int) -> onLayout
    1:8:boolean onScale(android.view.ScaleGestureDetector) -> onScale
    1:2:boolean onScaleBegin(android.view.ScaleGestureDetector) -> onScaleBegin
    1:1:void onScaleEnd(android.view.ScaleGestureDetector) -> onScaleEnd
    1:15:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1:2:void run() -> run
    1:1:void setDoodleTouchListener(io.dcloud.feature.gallery.imageedit.c.a$b) -> setDoodleTouchListener
    1:2:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    1:11:void setMode(io.dcloud.feature.gallery.imageedit.c.b) -> setMode
    1:1:void setPenColor(int) -> setPenColor
io.dcloud.feature.gallery.imageedit.view.IMGView$a -> io.dcloud.feature.gallery.imageedit.view.IMGView$a:
    1:1:void <init>(io.dcloud.feature.gallery.imageedit.view.IMGView) -> <init>
    1:2:void a() -> a
io.dcloud.feature.gallery.imageedit.view.IMGView$b -> io.dcloud.feature.gallery.imageedit.view.IMGView$b:
    1:1:void <init>(io.dcloud.feature.gallery.imageedit.view.IMGView) -> <init>
    2:2:void <init>(io.dcloud.feature.gallery.imageedit.view.IMGView,io.dcloud.feature.gallery.imageedit.view.IMGView$a) -> <init>
    1:1:boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    1:1:boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
io.dcloud.feature.gallery.imageedit.view.IMGView$c -> io.dcloud.feature.gallery.imageedit.view.IMGView$c:
    1:3:void <init>() -> <init>
    4:4:void <init>(io.dcloud.feature.gallery.imageedit.view.IMGView$a) -> <init>
    1:1:void a(float,float) -> a
    1:3:void b(float,float) -> b
    4:4:boolean b(int) -> b
    1:1:void c(int) -> c
    1:1:boolean e() -> e
    1:2:void f() -> f
    1:6:io.dcloud.feature.gallery.imageedit.c.c g() -> g
io.dcloud.feature.gallery.imageedit.view.WindowInsertLinearLayout -> io.dcloud.feature.gallery.imageedit.view.WindowInsertLinearLayout:
    1:1:void <init>(android.content.Context) -> <init>
    2:3:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1:4:android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets) -> dispatchApplyWindowInsets
io.dcloud.feature.gallery.imageedit.view.WindowInsertLinearLayout$a -> io.dcloud.feature.gallery.imageedit.view.WindowInsertLinearLayout$a:
    1:1:void <init>(io.dcloud.feature.gallery.imageedit.view.WindowInsertLinearLayout) -> <init>
    1:2:void onChildViewAdded(android.view.View,android.view.View) -> onChildViewAdded
io.dcloud.feature.internal.sdk.SDK -> io.dcloud.feature.internal.sdk.SDK:
    1:1:void <init>() -> <init>
    1:5:void closeWebView(io.dcloud.common.DHInterface.IWebview) -> closeWebView
    1:8:io.dcloud.common.DHInterface.IWebview createWebView(io.dcloud.common.DHInterface.IApp,java.lang.String,org.json.JSONObject,io.dcloud.common.DHInterface.IFrameView,io.dcloud.common.DHInterface.IEventCallback) -> createWebView
    1:1:void initSDK(io.dcloud.common.DHInterface.ICore) -> initSDK
    1:1:boolean isUniMPSDK() -> isUniMPSDK
    1:5:java.util.ArrayList obtainAllIWebview(java.lang.String) -> obtainAllIWebview
    6:10:java.util.ArrayList obtainAllIWebview() -> obtainAllIWebview
    1:4:io.dcloud.common.DHInterface.IApp obtainCurrentApp() -> obtainCurrentApp
    1:4:java.lang.String obtainCurrentRunnbingAppId() -> obtainCurrentRunnbingAppId
    1:3:io.dcloud.common.DHInterface.IWebview obtainWebview(java.lang.String,java.lang.String) -> obtainWebview
    1:5:void popWebView(io.dcloud.common.DHInterface.IWebview) -> popWebView
    1:4:void registerJsApi(java.lang.String,java.lang.String,java.lang.String) -> registerJsApi
    1:4:void requestAllFeature() -> requestAllFeature
    1:4:void requestFeature(java.lang.String,java.lang.String,boolean) -> requestFeature
io.dcloud.feature.internal.sdk.SDK$IntegratedMode -> io.dcloud.feature.internal.sdk.SDK$IntegratedMode:
    1:4:void <clinit>() -> <clinit>
    1:1:void <init>(java.lang.String,int) -> <init>
    1:1:io.dcloud.feature.internal.sdk.SDK$IntegratedMode valueOf(java.lang.String) -> valueOf
    1:1:io.dcloud.feature.internal.sdk.SDK$IntegratedMode[] values() -> values
io.dcloud.feature.internal.splash.SplashActivity -> io.dcloud.feature.internal.splash.SplashActivity:
    1:1:void <init>() -> <init>
io.dcloud.feature.internal.splash.SplashView4StreamApp -> io.dcloud.feature.internal.splash.SplashView4StreamApp:
    1:1:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    3:5:void <init>(android.content.Context,android.graphics.Bitmap,java.lang.String) -> <init>
    6:8:void <init>(android.content.Context,android.graphics.Bitmap,java.lang.String,java.lang.String) -> <init>
    1:19:void a(android.content.Context,java.lang.String,java.lang.String) -> a
    1:6:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    1:2:void setNameText(java.lang.String) -> setNameText
io.dcloud.feature.internal.splash.SplashViewDBackground -> io.dcloud.feature.internal.splash.SplashViewDBackground:
    1:68:void <init>(android.content.Context,android.graphics.Bitmap,java.lang.String,boolean) -> <init>
    1:38:void a(android.graphics.Bitmap) -> a
    1:4:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    1:2:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    1:1:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    1:2:void setNameText(java.lang.String) -> setNameText
io.dcloud.feature.internal.splash.a -> io.dcloud.feature.internal.splash.a:
    1:59:void <clinit>() -> <clinit>
    1:1:void a(java.lang.String) -> a
    1:1:void b(java.lang.String) -> b
io.dcloud.feature.internal.splash.b -> io.dcloud.feature.internal.splash.b:
    1:19:void <init>(android.content.Context,boolean) -> <init>
    1:4:float a(float) -> a
    5:36:void a(android.graphics.Bitmap,int,int,int,int,int) -> a
    37:42:void a(android.graphics.Canvas) -> a
    1:11:void b(android.graphics.Canvas) -> b
    1:25:void c(android.graphics.Canvas) -> c
    1:3:void onDraw(android.graphics.Canvas) -> onDraw
    1:2:void onMeasure(int,int) -> onMeasure
    1:2:void setBackgroundColor(int) -> setBackgroundColor
    1:4:void setBitmap(android.graphics.Bitmap) -> setBitmap
io.dcloud.feature.nativeObj.BannerImageView -> io.dcloud.feature.nativeObj.BannerImageView:
    1:3:void <init>(android.content.Context,io.dcloud.feature.nativeObj.data.NativeImageDataItem) -> <init>
    1:65:void onDraw(android.graphics.Canvas) -> onDraw
io.dcloud.feature.nativeObj.BannerLayout -> io.dcloud.feature.nativeObj.BannerLayout:
    1:1:void <init>(android.content.Context,boolean,boolean) -> <init>
    2:2:void <init>(android.content.Context,android.util.AttributeSet,boolean,boolean) -> <init>
    3:121:void <init>(android.content.Context,android.util.AttributeSet,int,boolean,boolean) -> <init>
    1:1:int access$000(io.dcloud.feature.nativeObj.BannerLayout) -> access$000
    1:1:androidx.viewpager.widget.ViewPager access$100(io.dcloud.feature.nativeObj.BannerLayout) -> access$100
    1:1:boolean access$1000(io.dcloud.feature.nativeObj.BannerLayout) -> access$1000
    1:1:io.dcloud.feature.nativeObj.BannerLayout$ImageLoader access$1100(io.dcloud.feature.nativeObj.BannerLayout) -> access$1100
    1:1:void access$1200(io.dcloud.feature.nativeObj.BannerLayout,int) -> access$1200
    1:1:boolean access$200(io.dcloud.feature.nativeObj.BannerLayout) -> access$200
    1:1:java.util.ArrayList access$300(io.dcloud.feature.nativeObj.BannerLayout) -> access$300
    1:1:boolean access$400(io.dcloud.feature.nativeObj.BannerLayout) -> access$400
    1:1:int access$500(io.dcloud.feature.nativeObj.BannerLayout) -> access$500
    1:1:android.os.Handler access$600(io.dcloud.feature.nativeObj.BannerLayout) -> access$600
    1:1:io.dcloud.feature.nativeObj.BannerLayout$OnBannerItemClickListener access$700(io.dcloud.feature.nativeObj.BannerLayout) -> access$700
    1:1:int access$800(io.dcloud.feature.nativeObj.BannerLayout) -> access$800
    1:1:int access$802(io.dcloud.feature.nativeObj.BannerLayout,int) -> access$802
    1:1:int access$900(io.dcloud.feature.nativeObj.BannerLayout) -> access$900
    1:36:void addViewUrls(java.util.ArrayList,int) -> addViewUrls
    1:4:void clearBannerData() -> clearBannerData
    1:15:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    1:1:int getCurrentPosition() -> getCurrentPosition
    1:55:android.view.View getImageView(io.dcloud.feature.nativeObj.data.NativeImageDataItem,int) -> getImageView
    1:14:android.widget.TextView getIndicatorTextView() -> getIndicatorTextView
    1:1:androidx.viewpager.widget.ViewPager getPager() -> getPager
    1:1:java.util.ArrayList getUrls() -> getUrls
    1:54:void init(boolean,boolean) -> init
    1:91:void initIndicatiorContainer() -> initIndicatiorContainer
    1:2:void onAttachedToWindow() -> onAttachedToWindow
    1:2:void onDetachedFromWindow() -> onDetachedFromWindow
    1:4:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1:3:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1:6:void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    1:3:void setAllowImageDownload(boolean,boolean) -> setAllowImageDownload
    1:2:void setAutoPlay(boolean,int) -> setAutoPlay
    1:1:void setImageLoader(io.dcloud.feature.nativeObj.BannerLayout$ImageLoader) -> setImageLoader
    1:1:void setImageLoop(java.lang.Boolean) -> setImageLoop
    1:17:void setIndicatorContainerData(io.dcloud.feature.nativeObj.BannerLayout$Position,int,int,int,java.lang.String) -> setIndicatorContainerData
    1:9:void setIndicatorType(java.lang.String) -> setIndicatorType
    1:1:void setOnBannerItemClickListener(io.dcloud.feature.nativeObj.BannerLayout$OnBannerItemClickListener) -> setOnBannerItemClickListener
    1:1:void setScrollDuration(int) -> setScrollDuration
    1:6:void setSliderTransformDuration(int) -> setSliderTransformDuration
    1:33:void setViewUrls(java.util.ArrayList,int) -> setViewUrls
    1:61:void setViews(java.util.List,int) -> setViews
    1:2:void setmIndicatorType(java.lang.String) -> setmIndicatorType
    1:3:void startAutoPlay() -> startAutoPlay
    1:7:void stopAutoPlay() -> stopAutoPlay
    1:8:void switchIndicator(int) -> switchIndicator
io.dcloud.feature.nativeObj.BannerLayout$1 -> io.dcloud.feature.nativeObj.BannerLayout$1:
    1:1:void <init>(io.dcloud.feature.nativeObj.BannerLayout) -> <init>
    1:13:boolean handleMessage(android.os.Message) -> handleMessage
io.dcloud.feature.nativeObj.BannerLayout$2 -> io.dcloud.feature.nativeObj.BannerLayout$2:
    1:1:void <init>(io.dcloud.feature.nativeObj.BannerLayout,int) -> <init>
    1:2:void onClick(android.view.View) -> onClick
io.dcloud.feature.nativeObj.BannerLayout$3 -> io.dcloud.feature.nativeObj.BannerLayout$3:
    1:1:void <init>(io.dcloud.feature.nativeObj.BannerLayout,int) -> <init>
    1:2:boolean onLongClick(android.view.View) -> onLongClick
io.dcloud.feature.nativeObj.BannerLayout$4 -> io.dcloud.feature.nativeObj.BannerLayout$4:
    1:1:void <init>(io.dcloud.feature.nativeObj.BannerLayout,int) -> <init>
    1:2:void onClick(android.view.View) -> onClick
io.dcloud.feature.nativeObj.BannerLayout$5 -> io.dcloud.feature.nativeObj.BannerLayout$5:
    1:1:void <init>(io.dcloud.feature.nativeObj.BannerLayout) -> <init>
    1:1:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    1:1:void onPageScrolled(int,float,int) -> onPageScrolled
    1:10:void onPageSelected(int) -> onPageSelected
io.dcloud.feature.nativeObj.BannerLayout$6 -> io.dcloud.feature.nativeObj.BannerLayout$6:
    1:2:void <clinit>() -> <clinit>
io.dcloud.feature.nativeObj.BannerLayout$FixedSpeedScroller -> io.dcloud.feature.nativeObj.BannerLayout$FixedSpeedScroller:
    1:3:void <init>(io.dcloud.feature.nativeObj.BannerLayout,android.content.Context) -> <init>
    4:6:void <init>(io.dcloud.feature.nativeObj.BannerLayout,android.content.Context,android.view.animation.Interpolator) -> <init>
    7:8:void <init>(io.dcloud.feature.nativeObj.BannerLayout,android.content.Context,android.view.animation.Interpolator,int) -> <init>
    1:1:void startScroll(int,int,int,int,int) -> startScroll
    2:2:void startScroll(int,int,int,int) -> startScroll
io.dcloud.feature.nativeObj.BannerLayout$LoopPagerAdapter -> io.dcloud.feature.nativeObj.BannerLayout$LoopPagerAdapter:
    1:4:void <init>(io.dcloud.feature.nativeObj.BannerLayout,java.util.List) -> <init>
    1:3:void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    1:1:int getCount() -> getCount
    1:5:int getItemPosition(java.lang.Object) -> getItemPosition
    1:1:java.util.List getViews() -> getViews
    1:14:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    1:2:void notifyDataSetChanged() -> notifyDataSetChanged
    1:2:void notifyItemsView(java.util.List) -> notifyItemsView
io.dcloud.feature.nativeObj.BannerLayout$Position -> io.dcloud.feature.nativeObj.BannerLayout$Position:
    1:8:void <clinit>() -> <clinit>
    1:1:void <init>(java.lang.String,int) -> <init>
    1:1:io.dcloud.feature.nativeObj.BannerLayout$Position valueOf(java.lang.String) -> valueOf
    1:1:io.dcloud.feature.nativeObj.BannerLayout$Position[] values() -> values
io.dcloud.feature.nativeObj.BannerLayout$SavedState -> io.dcloud.feature.nativeObj.BannerLayout$SavedState:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>(android.os.Parcel,io.dcloud.feature.nativeObj.BannerLayout$1) -> <init>
    2:2:void <init>(android.os.Parcelable) -> <init>
    3:4:void <init>(android.os.Parcel) -> <init>
    1:2:void writeToParcel(android.os.Parcel,int) -> writeToParcel
io.dcloud.feature.nativeObj.BannerLayout$SavedState$1 -> io.dcloud.feature.nativeObj.BannerLayout$SavedState$1:
    1:1:void <init>() -> <init>
    1:1:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2:2:io.dcloud.feature.nativeObj.BannerLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1:1:java.lang.Object[] newArray(int) -> newArray
    2:2:io.dcloud.feature.nativeObj.BannerLayout$SavedState[] newArray(int) -> newArray
io.dcloud.feature.nativeObj.BannerLayout$Shape -> io.dcloud.feature.nativeObj.BannerLayout$Shape:
    1:2:void <clinit>() -> <clinit>
    1:1:void <init>(java.lang.String,int) -> <init>
    1:1:io.dcloud.feature.nativeObj.BannerLayout$Shape valueOf(java.lang.String) -> valueOf
    1:1:io.dcloud.feature.nativeObj.BannerLayout$Shape[] values() -> values
io.dcloud.feature.nativeObj.FeatureImpl -> io.dcloud.feature.nativeObj.FeatureImpl:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:2:void destroyNativeView(java.lang.String,io.dcloud.feature.nativeObj.NativeView) -> destroyNativeView
    1:17:void dispose(java.lang.String) -> dispose
    1:15:java.lang.Object doForFeature(java.lang.String,java.lang.Object) -> doForFeature
    1:6:java.lang.String execute(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String[]) -> execute
    1:2:io.dcloud.common.DHInterface.INativeBitmap getNativeBitmap(java.lang.String,java.lang.String) -> getNativeBitmap
    1:3:void init(io.dcloud.common.DHInterface.AbsMgr,java.lang.String) -> init
io.dcloud.feature.nativeObj.GIFCornerRadiusTransform -> io.dcloud.feature.nativeObj.GIFCornerRadiusTransform:
    1:7:void <init>(float,int) -> <init>
    1:1:android.graphics.RectF getBounds() -> getBounds
    1:1:float getCornerRadius() -> getCornerRadius
    1:2:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    1:16:void onDraw(android.graphics.Canvas,android.graphics.Paint,android.graphics.Bitmap) -> onDraw
    1:1:void setCornerRadius(float) -> setCornerRadius
    1:4:void setCornerRadiusSafely(float) -> setCornerRadiusSafely
io.dcloud.feature.nativeObj.NativeBitmap -> io.dcloud.feature.nativeObj.NativeBitmap:
    1:311:void <init>(io.dcloud.common.DHInterface.IApp,java.lang.String,java.lang.String,java.lang.String) -> <init>
    1:1:io.dcloud.common.DHInterface.ICallBack access$000(io.dcloud.feature.nativeObj.NativeBitmap) -> access$000
    1:1:io.dcloud.common.DHInterface.ICallBack access$002(io.dcloud.feature.nativeObj.NativeBitmap,io.dcloud.common.DHInterface.ICallBack) -> access$002
    1:1:android.os.Handler access$100(io.dcloud.feature.nativeObj.NativeBitmap) -> access$100
    1:1:android.graphics.Bitmap access$200(io.dcloud.feature.nativeObj.NativeBitmap) -> access$200
    1:1:android.graphics.Bitmap access$202(io.dcloud.feature.nativeObj.NativeBitmap,android.graphics.Bitmap) -> access$202
    1:1:io.dcloud.common.DHInterface.ICallBack access$300(io.dcloud.feature.nativeObj.NativeBitmap) -> access$300
    1:1:io.dcloud.common.DHInterface.ICallBack access$302(io.dcloud.feature.nativeObj.NativeBitmap,io.dcloud.common.DHInterface.ICallBack) -> access$302
    1:1:java.lang.String access$400(io.dcloud.feature.nativeObj.NativeBitmap) -> access$400
    1:1:java.lang.String access$402(io.dcloud.feature.nativeObj.NativeBitmap,java.lang.String) -> access$402
    1:1:void access$500(io.dcloud.feature.nativeObj.NativeBitmap,java.lang.String,android.graphics.Bitmap,io.dcloud.feature.nativeObj.NativeBitmapSaveOptions) -> access$500
    0:4:java.lang.String bitmap2String(android.graphics.Bitmap) -> bitmap2String
    1:3:void clear() -> clear
    1:12:android.graphics.Bitmap getBitmap() -> getBitmap
    1:4:android.graphics.Bitmap$CompressFormat getCF() -> getCF
    1:15:java.lang.String getExt(java.lang.String) -> getExt
    1:5:void getExtFromBase64(java.lang.String) -> getExtFromBase64
    1:28:java.lang.String getFilePath(java.lang.String) -> getFilePath
    1:40:pl.droidsonroids.gif.GifDrawable getGifDrawable() -> getGifDrawable
    1:1:java.lang.String getId() -> getId
    1:5:com.nostra13.dcloudimageloader.core.DisplayImageOptions getImageOptions() -> getImageOptions
    1:9:android.graphics.Bitmap initNetworkBitmap(com.nostra13.dcloudimageloader.core.assist.ImageLoadingListener) -> initNetworkBitmap
    1:2:boolean isGif() -> isGif
    1:3:boolean isNetWorkBitmap() -> isNetWorkBitmap
    1:1:boolean isRecycled() -> isRecycled
    1:36:void load(io.dcloud.common.DHInterface.IWebview,android.content.Context,java.lang.String,io.dcloud.common.DHInterface.ICallBack,io.dcloud.common.DHInterface.ICallBack) -> load
    1:13:void loadBase64Data(java.lang.String,io.dcloud.common.DHInterface.ICallBack,io.dcloud.common.DHInterface.ICallBack) -> loadBase64Data
    1:1:void recycle() -> recycle
    2:14:void recycle(boolean) -> recycle
    1:63:void save(io.dcloud.common.DHInterface.IApp,java.lang.String,io.dcloud.feature.nativeObj.NativeBitmapSaveOptions,float,io.dcloud.common.DHInterface.ICallBack,io.dcloud.common.DHInterface.ICallBack) -> save
    1:27:void saveFile(java.lang.String,android.graphics.Bitmap,io.dcloud.feature.nativeObj.NativeBitmapSaveOptions) -> saveFile
    1:1:void setBitmap(android.graphics.Bitmap) -> setBitmap
    1:1:void setNetWorkBitmapDownload(boolean) -> setNetWorkBitmapDownload
    1:6:android.graphics.Bitmap string2Bitmap(java.lang.String) -> string2Bitmap
    1:1:java.lang.String toBase64Data() -> toBase64Data
    1:1:java.lang.String toJsString() -> toJsString
io.dcloud.feature.nativeObj.NativeBitmap$1 -> io.dcloud.feature.nativeObj.NativeBitmap$1:
    1:1:void <init>(io.dcloud.feature.nativeObj.NativeBitmap,io.dcloud.common.DHInterface.ICallBack,io.dcloud.common.DHInterface.ICallBack) -> <init>
    1:3:void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    1:2:void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.dcloudimageloader.core.assist.FailReason) -> onLoadingFailed
io.dcloud.feature.nativeObj.NativeBitmap$2 -> io.dcloud.feature.nativeObj.NativeBitmap$2:
    1:1:void <init>(io.dcloud.feature.nativeObj.NativeBitmap,io.dcloud.feature.nativeObj.NativeBitmapSaveOptions,float,java.lang.String,io.dcloud.common.DHInterface.ICallBack,io.dcloud.common.DHInterface.ICallBack) -> <init>
    1:31:void run() -> run
io.dcloud.feature.nativeObj.NativeBitmap$3 -> io.dcloud.feature.nativeObj.NativeBitmap$3:
    1:1:void <init>(io.dcloud.feature.nativeObj.NativeBitmap) -> <init>
    1:17:void handleMessage(android.os.Message) -> handleMessage
io.dcloud.feature.nativeObj.NativeBitmapMgr -> io.dcloud.feature.nativeObj.NativeBitmapMgr:
    1:920:void <init>() -> <init>
    1:5:void createBitmap(io.dcloud.common.DHInterface.IApp,java.lang.String,java.lang.String,java.lang.String) -> createBitmap
    1:22:void destroy() -> destroy
    1:6:void destroyNativeView(io.dcloud.feature.nativeObj.NativeView) -> destroyNativeView
    1:95:java.lang.Object doForFeature(java.lang.String,java.lang.Object) -> doForFeature
    1:1506:java.lang.String execute(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String[]) -> execute
    1:2:io.dcloud.common.DHInterface.INativeBitmap getBitmapById(java.lang.String) -> getBitmapById
    1:1:io.dcloud.common.DHInterface.INativeBitmap getBitmapByUuid(java.lang.String) -> getBitmapByUuid
    1:9:org.json.JSONArray getItems() -> getItems
    1:4:io.dcloud.feature.nativeObj.NativeView getNativeView(java.lang.String,java.lang.String) -> getNativeView
    1:17:io.dcloud.feature.nativeObj.NativeBitmap getSrcNativeBitmap(io.dcloud.common.DHInterface.IWebview,io.dcloud.common.DHInterface.IApp,java.lang.String) -> getSrcNativeBitmap
    1:99:void initViewDrawItme(io.dcloud.common.DHInterface.IWebview,io.dcloud.feature.nativeObj.NativeView,org.json.JSONArray) -> initViewDrawItme
    1:10:void load(io.dcloud.common.DHInterface.IWebview,io.dcloud.feature.nativeObj.NativeBitmap,java.lang.String,java.lang.String) -> load
    1:10:void loadBase64Data(io.dcloud.common.DHInterface.IWebview,io.dcloud.feature.nativeObj.NativeBitmap,java.lang.String,java.lang.String) -> loadBase64Data
    1:16:void save(io.dcloud.common.DHInterface.IWebview,io.dcloud.feature.nativeObj.NativeBitmap,java.lang.String,org.json.JSONObject,java.lang.String) -> save
io.dcloud.feature.nativeObj.NativeBitmapMgr$1 -> io.dcloud.feature.nativeObj.NativeBitmapMgr$1:
    1:1:void <init>(io.dcloud.feature.nativeObj.NativeBitmapMgr,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> <init>
    1:1:java.lang.Object onCallBack(int,java.lang.Object) -> onCallBack
io.dcloud.feature.nativeObj.NativeBitmapMgr$2 -> io.dcloud.feature.nativeObj.NativeBitmapMgr$2:
    1:1:void <init>(io.dcloud.feature.nativeObj.NativeBitmapMgr,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> <init>
    1:2:java.lang.Object onCallBack(int,java.lang.Object) -> onCallBack
io.dcloud.feature.nativeObj.NativeBitmapMgr$3 -> io.dcloud.feature.nativeObj.NativeBitmapMgr$3:
    1:1:void <init>(io.dcloud.feature.nativeObj.NativeBitmapMgr,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> <init>
    1:1:java.lang.Object onCallBack(int,java.lang.Object) -> onCallBack
io.dcloud.feature.nativeObj.NativeBitmapMgr$4 -> io.dcloud.feature.nativeObj.NativeBitmapMgr$4:
    1:1:void <init>(io.dcloud.feature.nativeObj.NativeBitmapMgr,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> <init>
    1:3:java.lang.Object onCallBack(int,java.lang.Object) -> onCallBack
io.dcloud.feature.nativeObj.NativeBitmapMgr$5 -> io.dcloud.feature.nativeObj.NativeBitmapMgr$5:
    1:1:void <init>(io.dcloud.feature.nativeObj.NativeBitmapMgr,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> <init>
    1:5:java.lang.Object onCallBack(int,java.lang.Object) -> onCallBack
io.dcloud.feature.nativeObj.NativeBitmapMgr$6 -> io.dcloud.feature.nativeObj.NativeBitmapMgr$6:
    1:1:void <init>(io.dcloud.feature.nativeObj.NativeBitmapMgr,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> <init>
    1:1:java.lang.Object onCallBack(int,java.lang.Object) -> onCallBack
io.dcloud.feature.nativeObj.NativeBitmapMgr$7 -> io.dcloud.feature.nativeObj.NativeBitmapMgr$7:
    1:1:void <clinit>() -> <clinit>
io.dcloud.feature.nativeObj.NativeBitmapMgr$Action -> io.dcloud.feature.nativeObj.NativeBitmapMgr$Action:
    1:6:void <clinit>() -> <clinit>
    1:1:void <init>(java.lang.String,int) -> <init>
    1:1:io.dcloud.feature.nativeObj.NativeBitmapMgr$Action valueOf(java.lang.String) -> valueOf
    1:1:io.dcloud.feature.nativeObj.NativeBitmapMgr$Action[] values() -> values
io.dcloud.feature.nativeObj.NativeBitmapSaveOptions -> io.dcloud.feature.nativeObj.NativeBitmapSaveOptions:
    1:20:void <init>(java.lang.String) -> <init>
    1:1:java.lang.String toJsString() -> toJsString
io.dcloud.feature.nativeObj.NativeImageSlider -> io.dcloud.feature.nativeObj.NativeImageSlider:
    1:16:void <init>(android.content.Context,io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String,org.json.JSONObject) -> <init>
    1:1:void access$000(io.dcloud.feature.nativeObj.NativeImageSlider,int,int) -> access$000
    1:118:void addBannerView(io.dcloud.common.DHInterface.IWebview) -> addBannerView
    1:3:void addImages(io.dcloud.common.DHInterface.IWebview,org.json.JSONArray) -> addImages
    1:6:void clearNativeViewData() -> clearNativeViewData
    1:13:void configurationCange() -> configurationCange
    1:10:java.lang.Object doForFeature(java.lang.String,java.lang.Object) -> doForFeature
    1:2:int getCurrentImageIndex() -> getCurrentImageIndex
    1:1:java.lang.String getEventJSON() -> getEventJSON
    1:15:int getNViewContentHeight() -> getNViewContentHeight
    1:5:void init() -> init
    1:1:void interceptTouchEvent(boolean) -> interceptTouchEvent
    1:4:void measureChildViewToTop(int) -> measureChildViewToTop
    1:3:void setImages(io.dcloud.common.DHInterface.IWebview,org.json.JSONArray) -> setImages
    1:21:void setStyle(org.json.JSONObject,boolean) -> setStyle
    1:2:void setStyleBackgroundColor(int) -> setStyleBackgroundColor
    1:23:java.util.ArrayList toArrayList(io.dcloud.common.DHInterface.IWebview,org.json.JSONArray) -> toArrayList
    1:9:void updateSliderHeight(int,int) -> updateSliderHeight
io.dcloud.feature.nativeObj.NativeImageSlider$1 -> io.dcloud.feature.nativeObj.NativeImageSlider$1:
    1:1:void <init>(io.dcloud.feature.nativeObj.NativeImageSlider) -> <init>
    1:1:void displayImage(android.content.Context,java.lang.String,android.view.View,int) -> displayImage
io.dcloud.feature.nativeObj.NativeImageSlider$1$1 -> io.dcloud.feature.nativeObj.NativeImageSlider$1$1:
    1:1:void <init>(io.dcloud.feature.nativeObj.NativeImageSlider$1,int,android.view.View) -> <init>
    1:14:void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    1:1:void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
io.dcloud.feature.nativeObj.NativeImageSlider$2 -> io.dcloud.feature.nativeObj.NativeImageSlider$2:
    1:1:void <init>(io.dcloud.feature.nativeObj.NativeImageSlider) -> <init>
    1:14:void onItemClick(int) -> onItemClick
io.dcloud.feature.nativeObj.NativeTypefaceFactory -> io.dcloud.feature.nativeObj.NativeTypefaceFactory:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:2:void clearCache() -> clearCache
    1:20:android.graphics.Typeface getTypeface(io.dcloud.common.DHInterface.IApp,java.lang.String) -> getTypeface
io.dcloud.feature.nativeObj.NativeView -> io.dcloud.feature.nativeObj.NativeView:
    1:540:void <init>(android.content.Context,io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String,org.json.JSONObject) -> <init>
    1:23:void StartAnimate(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String) -> StartAnimate
    1:6:void UpdateRegionData() -> UpdateRegionData
    1:1:void access$000(io.dcloud.feature.nativeObj.NativeView) -> access$000
    1:1:void access$100(io.dcloud.feature.nativeObj.NativeView,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> access$100
    1:1:void access$200(io.dcloud.feature.nativeObj.NativeView,io.dcloud.common.DHInterface.IWebview,java.lang.String,int,int,int,int,int,int,int,int,int) -> access$200
    1:1:boolean access$600(io.dcloud.feature.nativeObj.NativeView,float,float) -> access$600
    1:1:android.graphics.RectF access$700(io.dcloud.feature.nativeObj.NativeView) -> access$700
    1:1:void addEventListener(java.lang.String,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> addEventListener
    1:28:void addGifImagview(io.dcloud.feature.nativeObj.NativeView$Overlay) -> addGifImagview
    1:199:void addInput(io.dcloud.feature.nativeObj.NativeView$Overlay,java.lang.String) -> addInput
    1:5:void askRegionJson() -> askRegionJson
    1:3:void attachCanvasView() -> attachCanvasView
    1:34:void attachToViewGroup(io.dcloud.common.DHInterface.IFrameView) -> attachToViewGroup
    1:3:boolean checkTouchRectsContains(float,float) -> checkTouchRectsContains
    1:7:void clearAnimate() -> clearAnimate
    1:5:void clearNativeViewData() -> clearNativeViewData
    1:11:void clearViewData() -> clearViewData
    1:16:android.graphics.RectF createTouchRect(org.json.JSONObject) -> createTouchRect
    1:11:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    1:8:java.lang.Object doForFeature(java.lang.String,java.lang.Object) -> doForFeature
    1:2:void endAnimatecallback(io.dcloud.common.DHInterface.IWebview,java.lang.String) -> endAnimatecallback
    1:1:int getDrawLeft(int) -> getDrawLeft
    1:1:int getDrawTop(int) -> getDrawTop
    1:1:java.lang.String getEventJSON() -> getEventJSON
    1:1:int getInnerBottom() -> getInnerBottom
    1:1:int getInnerHeight() -> getInnerHeight
    1:6:android.widget.EditText getInputById(java.lang.String) -> getInputById
    1:3:boolean getInputFocusById(java.lang.String) -> getInputFocusById
    1:4:java.lang.String getInputValueById(java.lang.String) -> getInputValueById
    1:12:int getNViewContentHeight() -> getNViewContentHeight
    1:26:int getRectHeightForBitmap(io.dcloud.feature.nativeObj.NativeView,org.json.JSONObject,android.graphics.Rect,io.dcloud.feature.nativeObj.NativeView$Overlay,int) -> getRectHeightForBitmap
    1:10:int getRectWidthForBitmap(io.dcloud.feature.nativeObj.NativeView,org.json.JSONObject,android.graphics.Rect) -> getRectWidthForBitmap
    1:5:java.lang.String getStyleBackgroundColor() -> getStyleBackgroundColor
    1:1:int getStyleLeft() -> getStyleLeft
    1:1:int getStyleWidth() -> getStyleWidth
    1:1:java.lang.String getViewId() -> getViewId
    1:1:java.lang.String getViewUUId() -> getViewUUId
    1:99:void init() -> init
    1:26:void initJsonTouchRect() -> initJsonTouchRect
    1:43:void initScreenData() -> initScreenData
    1:22:void initStatusBarView(int) -> initStatusBarView
    1:1:void interceptTouchEvent(boolean) -> interceptTouchEvent
    1:1:boolean isAnimate() -> isAnimate
    1:2:boolean isDock() -> isDock
    1:4:boolean isDockTop() -> isDockTop
    1:1:boolean isStatusBar() -> isStatusBar
    1:50:android.graphics.Rect makeBitmapSrcRect(io.dcloud.feature.nativeObj.NativeView,org.json.JSONObject,io.dcloud.feature.nativeObj.NativeBitmap) -> makeBitmapSrcRect
    1:1:io.dcloud.feature.nativeObj.NativeView$Overlay makeOverlay(io.dcloud.common.DHInterface.IWebview,io.dcloud.feature.nativeObj.NativeBitmap,java.lang.String,int,org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.lang.String,java.lang.String,boolean) -> makeOverlay
    2:34:io.dcloud.feature.nativeObj.NativeView$Overlay makeOverlay(io.dcloud.common.DHInterface.IWebview,io.dcloud.feature.nativeObj.NativeBitmap,java.lang.String,int,org.json.JSONObject,org.json.JSONObject,org.json.JSONObject,java.lang.String,java.lang.String,boolean,boolean) -> makeOverlay
    1:50:android.graphics.Rect makeRect(io.dcloud.feature.nativeObj.NativeView,org.json.JSONObject,io.dcloud.feature.nativeObj.NativeView$Overlay) -> makeRect
    1:10:void makeRichText(io.dcloud.common.DHInterface.IWebview,java.lang.String,org.json.JSONObject,org.json.JSONObject,java.lang.String) -> makeRichText
    1:8:void makeWeexView(io.dcloud.common.DHInterface.IWebview,org.json.JSONObject,java.lang.String) -> makeWeexView
    1:1:void measureChildViewToTop(int) -> measureChildViewToTop
    1:219:void measureFitViewParent(boolean) -> measureFitViewParent
    1:12:void measureGifImageview(int) -> measureGifImageview
    1:10:void nativeInvalidate(boolean) -> nativeInvalidate
    1:5:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    1:1:int pxFromDp(int) -> pxFromDp
    1:49:void removeFromViewGroup() -> removeFromViewGroup
    1:2:void resetNativeView() -> resetNativeView
    1:20:void runDrawRectF(io.dcloud.common.DHInterface.IWebview,java.lang.String,int,int,int,int,int,int,int,int,int) -> runDrawRectF
    1:17:void setInputFocusById(java.lang.String,boolean) -> setInputFocusById
    1:1:void setNativeShowType(boolean) -> setNativeShowType
    1:17:void setStyle(org.json.JSONObject,boolean) -> setStyle
    1:19:void setStyleBackgroundColor(java.lang.String) -> setStyleBackgroundColor
    20:22:void setStyleBackgroundColor(int) -> setStyleBackgroundColor
    1:9:void setStyleLeft(int) -> setStyleLeft
    1:2:void setTouchEventRect(java.lang.String) -> setTouchEventRect
    1:1:void setWebAnimationRuning(boolean) -> setWebAnimationRuning
    1:10:org.json.JSONObject toJSON() -> toJSON
    1:1:void viewPostResize(android.view.View,android.view.ViewGroup$LayoutParams,int,int,int,int) -> viewPostResize
io.dcloud.feature.nativeObj.NativeView$1 -> io.dcloud.feature.nativeObj.NativeView$1:
    1:1:void <init>(io.dcloud.feature.nativeObj.NativeView) -> <init>
    1:12:void run() -> run
io.dcloud.feature.nativeObj.NativeView$2 -> io.dcloud.feature.nativeObj.NativeView$2:
    1:1:void <init>(io.dcloud.feature.nativeObj.NativeView,java.lang.String) -> <init>
    1:4:java.lang.Object onCallBack(java.lang.String,java.lang.Object) -> onCallBack
io.dcloud.feature.nativeObj.NativeView$3 -> io.dcloud.feature.nativeObj.NativeView$3:
    1:1:void <init>(io.dcloud.feature.nativeObj.NativeView,android.view.ViewGroup$LayoutParams,int,int,android.view.View,int,int) -> <init>
    1:5:void run() -> run
io.dcloud.feature.nativeObj.NativeView$4 -> io.dcloud.feature.nativeObj.NativeView$4:
    1:1:void <init>(io.dcloud.feature.nativeObj.NativeView,int,int,io.dcloud.common.DHInterface.IWebview,java.lang.String,int,int,int,int,int,int,int) -> <init>
    1:6:void run() -> run
io.dcloud.feature.nativeObj.NativeView$5 -> io.dcloud.feature.nativeObj.NativeView$5:
    1:1:void <init>(io.dcloud.feature.nativeObj.NativeView) -> <init>
    1:9:void run() -> run
io.dcloud.feature.nativeObj.NativeView$6 -> io.dcloud.feature.nativeObj.NativeView$6:
    1:1:void <init>(io.dcloud.feature.nativeObj.NativeView,io.dcloud.feature.nativeObj.NativeView$Overlay,java.lang.String) -> <init>
    1:39:boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
io.dcloud.feature.nativeObj.NativeView$7 -> io.dcloud.feature.nativeObj.NativeView$7:
    1:1:void <init>(io.dcloud.feature.nativeObj.NativeView,java.lang.String,io.dcloud.feature.nativeObj.NativeView$Overlay) -> <init>
    1:43:void onFocusChange(android.view.View,boolean) -> onFocusChange
io.dcloud.feature.nativeObj.NativeView$NativeCanvasView -> io.dcloud.feature.nativeObj.NativeView$NativeCanvasView:
    1:53:void <init>(io.dcloud.feature.nativeObj.NativeView,android.content.Context) -> <init>
    1:1:java.lang.Runnable access$902(io.dcloud.feature.nativeObj.NativeView$NativeCanvasView,java.lang.Runnable) -> access$902
    1:51:void addEventListener(java.lang.String,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> addEventListener
    1:7:boolean doTypeEvent(java.lang.String) -> doTypeEvent
    1:22:void drawRect(android.graphics.Canvas,int,int,int,int,io.dcloud.feature.nativeObj.NativeView$Overlay) -> drawRect
    1:7:void initAuto(io.dcloud.feature.nativeObj.NativeView$Overlay) -> initAuto
    1:2:boolean listenClick() -> listenClick
    1:13:void onClick(android.view.View) -> onClick
    1:166:void onDraw(android.graphics.Canvas) -> onDraw
    1:12:void onMeasure(int,int) -> onMeasure
    1:62:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1:10:void postDelayedClickEvent() -> postDelayedClickEvent
io.dcloud.feature.nativeObj.NativeView$NativeCanvasView$1 -> io.dcloud.feature.nativeObj.NativeView$NativeCanvasView$1:
    1:1:void <init>(io.dcloud.feature.nativeObj.NativeView$NativeCanvasView) -> <init>
    1:2:void run() -> run
io.dcloud.feature.nativeObj.NativeView$NativeCanvasView$2 -> io.dcloud.feature.nativeObj.NativeView$NativeCanvasView$2:
    1:1:void <init>(io.dcloud.feature.nativeObj.NativeView$NativeCanvasView) -> <init>
    1:20:java.lang.Object onCallBack(java.lang.String,java.lang.Object) -> onCallBack
io.dcloud.feature.nativeObj.NativeView$Overlay -> io.dcloud.feature.nativeObj.NativeView$Overlay:
    1:32:void <init>(io.dcloud.feature.nativeObj.NativeView) -> <init>
    1:1:float access$300(io.dcloud.feature.nativeObj.NativeView$Overlay) -> access$300
    1:1:int access$400(io.dcloud.feature.nativeObj.NativeView$Overlay) -> access$400
    1:1:int access$500(io.dcloud.feature.nativeObj.NativeView$Overlay) -> access$500
    1:1:float access$800(io.dcloud.feature.nativeObj.NativeView$Overlay) -> access$800
    1:233:void parseJson(io.dcloud.common.DHInterface.IWebview) -> parseJson
io.dcloud.feature.nativeObj.NativeView$Overlay$1 -> io.dcloud.feature.nativeObj.NativeView$Overlay$1:
    1:1:void <init>(io.dcloud.feature.nativeObj.NativeView$Overlay,io.dcloud.feature.nativeObj.NativeView$Overlay) -> <init>
    1:11:void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
io.dcloud.feature.nativeObj.NativeViewBackButtonDrawable -> io.dcloud.feature.nativeObj.NativeViewBackButtonDrawable:
    1:3:void <init>(int) -> <init>
    1:22:void draw(android.graphics.Canvas) -> draw
    1:1:int getAlpha() -> getAlpha
    1:1:int getDrawableAlpha() -> getDrawableAlpha
    1:2:int getDrawableColor() -> getDrawableColor
    1:2:void setAlpha(int) -> setAlpha
    1:2:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    1:4:void setDrawableColor(int) -> setDrawableColor
    1:1:void setWidth(java.lang.String) -> setWidth
io.dcloud.feature.nativeObj.TitleNView -> io.dcloud.feature.nativeObj.TitleNView:
    1:2365:void <init>(android.content.Context,io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String,org.json.JSONObject) -> <init>
    1:1:java.util.ArrayList access$000(io.dcloud.feature.nativeObj.TitleNView) -> access$000
    1:1:android.widget.EditText access$100(io.dcloud.feature.nativeObj.TitleNView) -> access$100
    1:1:boolean access$1000(io.dcloud.feature.nativeObj.TitleNView) -> access$1000
    1:1:java.util.concurrent.atomic.AtomicBoolean access$200(io.dcloud.feature.nativeObj.TitleNView) -> access$200
    1:1:void access$300(io.dcloud.feature.nativeObj.TitleNView,java.lang.String,java.lang.String) -> access$300
    1:1:void access$400(io.dcloud.feature.nativeObj.TitleNView,java.lang.String,io.dcloud.common.DHInterface.IWebview) -> access$400
    1:1:void access$500(io.dcloud.feature.nativeObj.TitleNView,java.lang.String) -> access$500
    1:1:java.util.ArrayList access$600(io.dcloud.feature.nativeObj.TitleNView) -> access$600
    1:1:void access$700(io.dcloud.feature.nativeObj.TitleNView,java.lang.String,java.lang.String,java.lang.String,android.widget.TextView,boolean) -> access$700
    1:1:java.lang.String access$800(io.dcloud.feature.nativeObj.TitleNView) -> access$800
    1:1:int access$900(io.dcloud.feature.nativeObj.TitleNView) -> access$900
    1:153:void addBackButton(java.lang.String,java.lang.String,java.lang.String,org.json.JSONObject) -> addBackButton
    1:1:void addButtonOnClickListener(java.lang.String,io.dcloud.common.DHInterface.IWebview,android.view.View) -> addButtonOnClickListener
    1:71:void addHomeButton(java.lang.String,java.lang.String,java.lang.String) -> addHomeButton
    1:29:void addLeftButton(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String,boolean,java.lang.String,boolean,java.lang.String) -> addLeftButton
    1:45:void addRightButton(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String,boolean,java.lang.String,boolean,java.lang.String) -> addRightButton
    1:284:void addSearchInput(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,io.dcloud.common.DHInterface.IWebview) -> addSearchInput
    1:11:android.widget.TextView addSelect(android.view.ViewGroup,android.widget.TextView,int) -> addSelect
    1:28:void buttonOnclick(java.lang.String,io.dcloud.common.DHInterface.IWebview) -> buttonOnclick
    1:25:void caculateTitleMargin() -> caculateTitleMargin
    1:44:void capsuleButtonClick(java.lang.String) -> capsuleButtonClick
    1:11:void clearButtons() -> clearButtons
    1:5:void clearNativeViewData() -> clearNativeViewData
    1:7:void clearSearchInput() -> clearSearchInput
    1:70:android.view.View createButton(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String,boolean,java.lang.String,boolean,java.lang.String,java.lang.String) -> createButton
    1:9:android.content.res.ColorStateList createColorStateList(int,int) -> createColorStateList
    1:1:java.lang.String getBackgroundColor() -> getBackgroundColor
    1:14:android.widget.TextView getCapsuleButton(java.lang.String) -> getCapsuleButton
    1:13:java.lang.String getIconPath(java.lang.String) -> getIconPath
    1:36:org.json.JSONArray getMenuArray() -> getMenuArray
    1:34:java.lang.String getStatusBarColor() -> getStatusBarColor
    1:1:int getTitleColor() -> getTitleColor
    1:2:java.lang.String getTitleNViewSearchInputText() -> getTitleNViewSearchInputText
    1:20:void init() -> init
    1:84:void initCapsuleLayout() -> initCapsuleLayout
    1:22:void initCenterSearchLayout() -> initCenterSearchLayout
    1:10:void initLeftButtonLayout() -> initLeftButtonLayout
    1:15:void initRightButtonLayout() -> initRightButtonLayout
    1:26:void initTitleNViewLayout() -> initTitleNViewLayout
    1:3:boolean isBase64Image(java.lang.String) -> isBase64Image
    1:4:boolean isStatusBarHas() -> isStatusBarHas
    1:107:void layoutSubtitleIcon(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,android.widget.ImageView,android.widget.TextView,int,java.lang.String,java.lang.String) -> layoutSubtitleIcon
    1:4:void measureChildViewToTop(int) -> measureChildViewToTop
    1:2:void onLayout(boolean,int,int,int,int) -> onLayout
    1:2:void removeBackButton() -> removeBackButton
    1:2:void removeHomeButton() -> removeHomeButton
    1:6:void removeSplitLine() -> removeSplitLine
    1:33:void resetNativeView() -> resetNativeView
    1:1:void setBackButtonColor(java.lang.String,java.lang.String,java.lang.String) -> setBackButtonColor
    1:2:void setBackgroundColor(java.lang.String) -> setBackgroundColor
    1:8:void setBackgroundImage(java.lang.String) -> setBackgroundImage
    1:2:void setBackgroundRepeat(java.lang.String) -> setBackgroundRepeat
    1:9:void setBadgeText(org.json.JSONObject,boolean) -> setBadgeText
    1:57:void setButtonColor(android.view.View,java.lang.String,java.lang.String,java.lang.String) -> setButtonColor
    1:3:void setButtonColorByIndex(int,java.lang.String,java.lang.String,java.lang.String) -> setButtonColorByIndex
    1:2:void setButtonsColor(java.lang.String,java.lang.String,java.lang.String) -> setButtonsColor
    1:25:void setCapsuleButtonStyle(org.json.JSONObject) -> setCapsuleButtonStyle
    1:1:void setHomeButtonColor(java.lang.String,java.lang.String,java.lang.String) -> setHomeButtonColor
    1:15:void setIconSubTitleStyle(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> setIconSubTitleStyle
    1:21:void setProgress(java.lang.String,java.lang.String) -> setProgress
    1:5:void setRedDot(org.json.JSONObject,boolean) -> setRedDot
    1:7:void setRedDotColor(int) -> setRedDotColor
    1:11:void setSearchInputColor(java.lang.String) -> setSearchInputColor
    1:8:void setSearchInputFocus(boolean) -> setSearchInputFocus
    1:2:void setShadow(org.json.JSONObject) -> setShadow
    1:27:void setSplitLine(java.lang.String,java.lang.String) -> setSplitLine
    1:18:void setStatusBarColor(int) -> setStatusBarColor
    1:1:void setStyleBackgroundColor(int) -> setStyleBackgroundColor
    1:47:void setTextAndFont(java.lang.String,java.lang.String,java.lang.String,android.widget.TextView,boolean) -> setTextAndFont
    1:17:void setTextGravity(java.lang.String,java.lang.String) -> setTextGravity
    1:83:void setTitle(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> setTitle
    1:23:void setTitleAlign(java.lang.String) -> setTitleAlign
    1:10:void setTitleColor(java.lang.String) -> setTitleColor
    11:12:void setTitleColor(int) -> setTitleColor
    1:112:boolean setTitleNViewButtonStyle(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> setTitleNViewButtonStyle
    1:2:void setTitleNViewPadding(int,int,int,int) -> setTitleNViewPadding
    1:11:void setTitleNViewSearchInputText(java.lang.String) -> setTitleNViewSearchInputText
    1:5:void setTitleOverflow(java.lang.String) -> setTitleOverflow
    1:5:void setTitleSize(java.lang.String) -> setTitleSize
    1:2:void setTitleText(java.lang.String) -> setTitleText
    1:105:void showCapsuleMenu(org.json.JSONArray) -> showCapsuleMenu
    1:18:void startProgress() -> startProgress
    1:2:void stopProgress() -> stopProgress
    1:11:void updateCapsuleLayout() -> updateCapsuleLayout
io.dcloud.feature.nativeObj.TitleNView$1 -> io.dcloud.feature.nativeObj.TitleNView$1:
    1:1:void <init>(io.dcloud.feature.nativeObj.TitleNView) -> <init>
    1:20:void run() -> run
io.dcloud.feature.nativeObj.TitleNView$10 -> io.dcloud.feature.nativeObj.TitleNView$10:
    1:1:void <init>(io.dcloud.feature.nativeObj.TitleNView,io.dcloud.common.DHInterface.IWebview) -> <init>
    1:6:void onClick(android.view.View) -> onClick
io.dcloud.feature.nativeObj.TitleNView$11 -> io.dcloud.feature.nativeObj.TitleNView$11:
    1:1:void <init>(io.dcloud.feature.nativeObj.TitleNView,java.lang.String,io.dcloud.common.DHInterface.IWebview) -> <init>
    1:1:void onClick(android.view.View) -> onClick
io.dcloud.feature.nativeObj.TitleNView$12 -> io.dcloud.feature.nativeObj.TitleNView$12:
    1:1:void <init>(io.dcloud.feature.nativeObj.TitleNView) -> <init>
    1:1:void onClick(android.view.View) -> onClick
io.dcloud.feature.nativeObj.TitleNView$13 -> io.dcloud.feature.nativeObj.TitleNView$13:
    1:1:void <init>(io.dcloud.feature.nativeObj.TitleNView) -> <init>
    1:1:void onClick(android.view.View) -> onClick
io.dcloud.feature.nativeObj.TitleNView$14 -> io.dcloud.feature.nativeObj.TitleNView$14:
    1:1:void <init>(io.dcloud.feature.nativeObj.TitleNView,org.json.JSONArray) -> <init>
    1:5:void initCancelText(android.widget.TextView) -> initCancelText
    1:22:void initTextItem(int,android.widget.TextView,java.lang.String) -> initTextItem
    1:3:boolean onDismiss(int) -> onDismiss
    1:29:void onItemClick(int) -> onItemClick
io.dcloud.feature.nativeObj.TitleNView$2 -> io.dcloud.feature.nativeObj.TitleNView$2:
    1:1:void <init>(io.dcloud.feature.nativeObj.TitleNView) -> <init>
    1:4:void onClick(android.view.View) -> onClick
io.dcloud.feature.nativeObj.TitleNView$3 -> io.dcloud.feature.nativeObj.TitleNView$3:
    1:1:void <init>(io.dcloud.feature.nativeObj.TitleNView) -> <init>
    1:4:void onClick(android.view.View) -> onClick
io.dcloud.feature.nativeObj.TitleNView$4 -> io.dcloud.feature.nativeObj.TitleNView$4:
    1:1:void <init>(io.dcloud.feature.nativeObj.TitleNView) -> <init>
    1:1:void onClick(android.view.View) -> onClick
io.dcloud.feature.nativeObj.TitleNView$5 -> io.dcloud.feature.nativeObj.TitleNView$5:
    1:1:void <init>(io.dcloud.feature.nativeObj.TitleNView,android.widget.TextView,io.dcloud.common.DHInterface.IWebview) -> <init>
    1:12:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
io.dcloud.feature.nativeObj.TitleNView$6 -> io.dcloud.feature.nativeObj.TitleNView$6:
    1:1:void <init>(io.dcloud.feature.nativeObj.TitleNView,io.dcloud.common.DHInterface.IWebview,android.widget.TextView,java.lang.String,java.lang.String) -> <init>
    1:19:void onFocusChange(android.view.View,boolean) -> onFocusChange
io.dcloud.feature.nativeObj.TitleNView$7 -> io.dcloud.feature.nativeObj.TitleNView$7:
    1:1:void <init>(io.dcloud.feature.nativeObj.TitleNView,io.dcloud.common.DHInterface.IWebview) -> <init>
    1:7:boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
io.dcloud.feature.nativeObj.TitleNView$8 -> io.dcloud.feature.nativeObj.TitleNView$8:
    1:1:void <init>(io.dcloud.feature.nativeObj.TitleNView,boolean,io.dcloud.common.DHInterface.IWebview) -> <init>
    1:8:boolean onExecute(io.dcloud.common.DHInterface.ISysEventListener$SysEventType,java.lang.Object) -> onExecute
io.dcloud.feature.nativeObj.TitleNView$9 -> io.dcloud.feature.nativeObj.TitleNView$9:
    1:1:void <init>(io.dcloud.feature.nativeObj.TitleNView,boolean,boolean,io.dcloud.common.DHInterface.IWebview) -> <init>
    1:6:java.lang.Object onCallBack(java.lang.String,java.lang.Object) -> onCallBack
io.dcloud.feature.nativeObj.TitleNView$BackGroundDrawable -> io.dcloud.feature.nativeObj.TitleNView$BackGroundDrawable:
    1:230:void <init>(io.dcloud.feature.nativeObj.TitleNView) -> <init>
    1:25:void draw(android.graphics.Canvas) -> draw
    1:3:android.graphics.Paint getBackgroundColorPaint() -> getBackgroundColorPaint
    1:3:android.graphics.Paint getPaint() -> getPaint
    1:6:android.graphics.Shader getShader(java.util.List,float,float) -> getShader
    1:3:android.graphics.Paint getShadowPaint() -> getShadowPaint
    1:48:float[] parseGradientDirection(java.lang.String,float,float) -> parseGradientDirection
    1:27:java.util.List parseGradientValues(java.lang.String) -> parseGradientValues
    1:17:android.graphics.Bitmap scaleBitmap(android.graphics.Bitmap,int,int) -> scaleBitmap
    1:3:void setAlpha(int) -> setAlpha
    1:6:void setBackgroundColor(int) -> setBackgroundColor
    1:46:void setBackgroundImage(java.lang.String) -> setBackgroundImage
    1:5:void setRepeatType(java.lang.String,java.lang.String) -> setRepeatType
    1:11:void setShadowColor(org.json.JSONObject) -> setShadowColor
    1:16:void updatebound() -> updatebound
io.dcloud.feature.nativeObj.TitleNView$BadgeLinearLayout -> io.dcloud.feature.nativeObj.TitleNView$BadgeLinearLayout:
    1:9:void <init>(io.dcloud.feature.nativeObj.TitleNView,android.content.Context) -> <init>
    10:20:void <init>(io.dcloud.feature.nativeObj.TitleNView,android.content.Context,float,int) -> <init>
    1:4:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    1:1:void draw(android.graphics.Canvas) -> draw
    1:7:void setBadgeStr(java.lang.String) -> setBadgeStr
    1:3:void setDrawRedDot(boolean) -> setDrawRedDot
    1:2:void setRedDotColor(int) -> setRedDotColor
io.dcloud.feature.nativeObj.TitleNView$BadgeRelateiveLayout -> io.dcloud.feature.nativeObj.TitleNView$BadgeRelateiveLayout:
    1:9:void <init>(io.dcloud.feature.nativeObj.TitleNView,android.content.Context) -> <init>
    10:20:void <init>(io.dcloud.feature.nativeObj.TitleNView,android.content.Context,float,int) -> <init>
    1:20:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    1:1:void draw(android.graphics.Canvas) -> draw
    1:7:void setBadgeStr(java.lang.String) -> setBadgeStr
    1:3:void setDrawRedDot(boolean) -> setDrawRedDot
    1:2:void setRedDotColor(int) -> setRedDotColor
io.dcloud.feature.nativeObj.TitleNView$IWebviewStateListenerImpl -> io.dcloud.feature.nativeObj.TitleNView$IWebviewStateListenerImpl:
    1:2:void <init>(io.dcloud.feature.nativeObj.TitleNView$Progress) -> <init>
    1:6:java.lang.Object onCallBack(int,java.lang.Object) -> onCallBack
io.dcloud.feature.nativeObj.TitleNView$Progress -> io.dcloud.feature.nativeObj.TitleNView$Progress:
    1:1:void <init>(android.content.Context) -> <init>
io.dcloud.feature.nativeObj.TitleNView$SearchInputDrawable -> io.dcloud.feature.nativeObj.TitleNView$SearchInputDrawable:
    1:5:void <init>(io.dcloud.feature.nativeObj.TitleNView,int,int) -> <init>
    1:2:void draw(android.graphics.Canvas) -> draw
    1:1:int getAlpha() -> getAlpha
    1:2:int getDrawableColor() -> getDrawableColor
    1:2:void setAlpha(int) -> setAlpha
    1:2:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    1:4:void setDrawableColor(int) -> setDrawableColor
io.dcloud.feature.nativeObj.data.ButtonDataItem -> io.dcloud.feature.nativeObj.data.ButtonDataItem:
    1:7:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> <init>
    1:1:java.lang.String getFontSrc() -> getFontSrc
    1:1:java.lang.String getFontType() -> getFontType
    1:1:java.lang.String getOnclick() -> getOnclick
    1:1:java.lang.String getText() -> getText
    1:1:java.lang.String getTitle() -> getTitle
    1:1:java.lang.String getWebviewUuid() -> getWebviewUuid
    1:6:void update(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> update
io.dcloud.feature.nativeObj.data.NativeImageDataItem -> io.dcloud.feature.nativeObj.data.NativeImageDataItem:
    1:1:void <clinit>() -> <clinit>
    1:6:void <init>() -> <init>
    7:29:void <init>(android.os.Parcel) -> <init>
    1:2:int getHeight(int,float) -> getHeight
    1:1:java.lang.String getUrl() -> getUrl
    1:2:int getWidth(int,float) -> getWidth
    1:1:void setUrl(java.lang.String) -> setUrl
    1:5:void writeToParcel(android.os.Parcel,int) -> writeToParcel
io.dcloud.feature.nativeObj.data.NativeImageDataItem$1 -> io.dcloud.feature.nativeObj.data.NativeImageDataItem$1:
    1:1:void <init>() -> <init>
    1:1:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2:2:io.dcloud.feature.nativeObj.data.NativeImageDataItem createFromParcel(android.os.Parcel) -> createFromParcel
    1:1:java.lang.Object[] newArray(int) -> newArray
    2:2:io.dcloud.feature.nativeObj.data.NativeImageDataItem[] newArray(int) -> newArray
io.dcloud.feature.nativeObj.photoview.BounceBackViewPager -> io.dcloud.feature.nativeObj.photoview.BounceBackViewPager:
    1:12:void <init>(android.content.Context) -> <init>
    1:1:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    1:5:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1:2:void onTouchActionUp() -> onTouchActionUp
    1:121:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1:6:void recoveryPosition() -> recoveryPosition
    1:5:void whetherConditionIsRight(float) -> whetherConditionIsRight
io.dcloud.feature.nativeObj.photoview.LongClickEventManager -> io.dcloud.feature.nativeObj.photoview.LongClickEventManager:
    1:15:void <init>() -> <init>
    1:1:void addOnlongClickListener(java.lang.String,io.dcloud.feature.nativeObj.photoview.LongClickEventManager$OnLongClickListener) -> addOnlongClickListener
    1:4:void fireEvent(org.json.JSONObject) -> fireEvent
    1:7:io.dcloud.feature.nativeObj.photoview.LongClickEventManager getInstance() -> getInstance
    1:1:void removeOnLongClickListener(java.lang.String) -> removeOnLongClickListener
io.dcloud.feature.nativeObj.photoview.LongClickEventManager$OnLongClickListener -> io.dcloud.feature.nativeObj.photoview.LongClickEventManager$OnLongClickListener:
    1:3:void <init>(io.dcloud.common.DHInterface.IWebview,java.lang.String) -> <init>
    1:1:java.lang.String getCallbackIds() -> getCallbackIds
    1:1:io.dcloud.common.DHInterface.IWebview getPwebview() -> getPwebview
io.dcloud.feature.nativeObj.photoview.PhotoActivity -> io.dcloud.feature.nativeObj.photoview.PhotoActivity:
    1:17:void <init>() -> <init>
    1:1:java.lang.String[] access$000(io.dcloud.feature.nativeObj.photoview.PhotoActivity) -> access$000
    1:1:java.util.ArrayList access$100(io.dcloud.feature.nativeObj.photoview.PhotoActivity) -> access$100
    1:14:void fullScreen(android.app.Activity) -> fullScreen
    1:11:com.nostra13.dcloudimageloader.core.DisplayImageOptions getIconDisplayOptions() -> getIconDisplayOptions
    1:5:java.util.ArrayList listToNativeDataItems(java.util.ArrayList) -> listToNativeDataItems
    1:10:void onBackPressed() -> onBackPressed
    1:166:void onCreate(android.os.Bundle) -> onCreate
io.dcloud.feature.nativeObj.photoview.PhotoActivity$1 -> io.dcloud.feature.nativeObj.photoview.PhotoActivity$1:
    1:1:void <init>(io.dcloud.feature.nativeObj.photoview.PhotoActivity) -> <init>
    1:1:void run() -> run
io.dcloud.feature.nativeObj.photoview.PhotoActivity$2 -> io.dcloud.feature.nativeObj.photoview.PhotoActivity$2:
    1:1:void <init>(io.dcloud.feature.nativeObj.photoview.PhotoActivity) -> <init>
    1:73:void displayImage(android.content.Context,java.lang.String,android.view.View,int) -> displayImage
io.dcloud.feature.nativeObj.photoview.PhotoActivity$2$1 -> io.dcloud.feature.nativeObj.photoview.PhotoActivity$2$1:
    1:1:void <init>(io.dcloud.feature.nativeObj.photoview.PhotoActivity$2,android.view.View,java.lang.String,int) -> <init>
    1:4:void onLoadStarted(android.graphics.drawable.Drawable) -> onLoadStarted
    1:1:void onResourceReady(java.lang.Object,com.bumptech.glide.request.transition.Transition) -> onResourceReady
    2:23:void onResourceReady(java.io.File,com.bumptech.glide.request.transition.Transition) -> onResourceReady
    1:5:boolean typeOf(java.io.File,java.lang.String) -> typeOf
io.dcloud.feature.nativeObj.photoview.PhotoActivity$3 -> io.dcloud.feature.nativeObj.photoview.PhotoActivity$3:
    1:1:void <init>(io.dcloud.feature.nativeObj.photoview.PhotoActivity) -> <init>
    1:2:void onItemClick(int) -> onItemClick
    1:10:void onItemLongClick(int) -> onItemLongClick
io.dcloud.feature.nativeObj.photoview.subscaleview.ImageSource -> io.dcloud.feature.nativeObj.photoview.subscaleview.ImageSource:
    1:8:void <init>(android.graphics.Bitmap,boolean) -> <init>
    9:25:void <init>(android.net.Uri) -> <init>
    26:30:void <init>(int) -> <init>
    1:2:io.dcloud.feature.nativeObj.photoview.subscaleview.ImageSource asset(java.lang.String) -> asset
    1:2:io.dcloud.feature.nativeObj.photoview.subscaleview.ImageSource bitmap(android.graphics.Bitmap) -> bitmap
    1:2:io.dcloud.feature.nativeObj.photoview.subscaleview.ImageSource cachedBitmap(android.graphics.Bitmap) -> cachedBitmap
    1:5:io.dcloud.feature.nativeObj.photoview.subscaleview.ImageSource dimensions(int,int) -> dimensions
    1:1:android.graphics.Bitmap getBitmap() -> getBitmap
    1:1:java.lang.Integer getResource() -> getResource
    1:1:int getSHeight() -> getSHeight
    1:1:android.graphics.Rect getSRegion() -> getSRegion
    1:1:int getSWidth() -> getSWidth
    1:1:boolean getTile() -> getTile
    1:1:android.net.Uri getUri() -> getUri
    1:1:boolean isCached() -> isCached
    1:2:io.dcloud.feature.nativeObj.photoview.subscaleview.ImageSource region(android.graphics.Rect) -> region
    1:1:io.dcloud.feature.nativeObj.photoview.subscaleview.ImageSource resource(int) -> resource
    1:4:void setInvariants() -> setInvariants
    1:1:io.dcloud.feature.nativeObj.photoview.subscaleview.ImageSource tiling(boolean) -> tiling
    1:1:io.dcloud.feature.nativeObj.photoview.subscaleview.ImageSource tilingDisabled() -> tilingDisabled
    1:1:io.dcloud.feature.nativeObj.photoview.subscaleview.ImageSource tilingEnabled() -> tilingEnabled
    1:8:io.dcloud.feature.nativeObj.photoview.subscaleview.ImageSource uri(java.lang.String) -> uri
    9:10:io.dcloud.feature.nativeObj.photoview.subscaleview.ImageSource uri(android.net.Uri) -> uri
io.dcloud.feature.nativeObj.photoview.subscaleview.ImageViewState -> io.dcloud.feature.nativeObj.photoview.subscaleview.ImageViewState:
    1:5:void <init>(float,android.graphics.PointF,int) -> <init>
    1:1:android.graphics.PointF getCenter() -> getCenter
    1:1:int getOrientation() -> getOrientation
    1:1:float getScale() -> getScale
io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView -> io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView:
    1:50:void <clinit>() -> <clinit>
    1:180:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    181:181:void <init>(android.content.Context) -> <init>
    1:1:android.view.View$OnLongClickListener access$000(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView) -> access$000
    1:1:float access$1000(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView) -> access$1000
    1:1:int access$102(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView,int) -> access$102
    1:1:boolean access$1400(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView) -> access$1400
    1:1:void access$1500(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView,android.content.Context) -> access$1500
    1:1:boolean access$1600(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView) -> access$1600
    1:1:android.graphics.PointF access$1700(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView) -> access$1700
    1:1:android.graphics.PointF access$1702(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView,android.graphics.PointF) -> access$1702
    1:1:android.graphics.PointF access$1802(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView,android.graphics.PointF) -> access$1802
    1:1:float access$1902(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView,float) -> access$1902
    1:1:boolean access$2002(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView,boolean) -> access$2002
    1:1:void access$201(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView,android.view.View$OnLongClickListener) -> access$201
    1:1:float access$2102(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView,float) -> access$2102
    1:1:android.graphics.PointF access$2200(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView) -> access$2200
    1:1:android.graphics.PointF access$2202(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView,android.graphics.PointF) -> access$2202
    1:1:android.graphics.PointF access$2302(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView,android.graphics.PointF) -> access$2302
    1:1:android.graphics.PointF access$2402(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView,android.graphics.PointF) -> access$2402
    1:1:boolean access$2502(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView,boolean) -> access$2502
    1:1:void access$2600(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView,android.graphics.PointF,android.graphics.PointF) -> access$2600
    1:1:void access$301(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView,android.view.View$OnLongClickListener) -> access$301
    1:1:void access$5100(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView,java.lang.String,java.lang.Object[]) -> access$5100
    1:1:int access$5200(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView,android.content.Context,java.lang.String) -> access$5200
    1:1:android.graphics.Rect access$5300(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView) -> access$5300
    1:1:java.lang.String access$5400() -> access$5400
    1:1:void access$5500(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView,io.dcloud.feature.nativeObj.photoview.subscaleview.decoder.ImageRegionDecoder,int,int,int) -> access$5500
    1:1:io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$OnImageEventListener access$5600(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView) -> access$5600
    1:1:java.util.concurrent.locks.ReadWriteLock access$5700(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView) -> access$5700
    1:1:void access$5800(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView,android.graphics.Rect,android.graphics.Rect) -> access$5800
    1:1:void access$5900(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView) -> access$5900
    1:1:boolean access$600(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView) -> access$600
    1:1:void access$6000(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView,android.graphics.Bitmap) -> access$6000
    1:1:void access$6100(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView,android.graphics.Bitmap,int,boolean) -> access$6100
    1:1:java.util.List access$6300() -> access$6300
    1:1:io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$Anim access$6400(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView) -> access$6400
    1:1:io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$Anim access$6402(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView,io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$Anim) -> access$6402
    1:1:float access$6500(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView,float) -> access$6500
    1:1:android.graphics.PointF access$6600(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView,float,float,float,android.graphics.PointF) -> access$6600
    1:1:void access$6800(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView,boolean,io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$ScaleAndTranslate) -> access$6800
    1:1:boolean access$700(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView) -> access$700
    1:1:android.graphics.PointF access$800(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView) -> access$800
    1:1:boolean access$900(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView) -> access$900
    1:1:boolean access$902(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView,boolean) -> access$902
    1:4:io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$AnimationBuilder animateCenter(android.graphics.PointF) -> animateCenter
    1:4:io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$AnimationBuilder animateScale(float) -> animateScale
    1:4:io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$AnimationBuilder animateScaleAndCenter(float,android.graphics.PointF) -> animateScaleAndCenter
    1:20:int calculateInSampleSize(float) -> calculateInSampleSize
    1:7:boolean checkImageLoaded() -> checkImageLoaded
    1:7:boolean checkReady() -> checkReady
    1:15:void createPaints() -> createPaints
    1:2:void debug(java.lang.String,java.lang.Object[]) -> debug
    1:1:float distance(float,float,float,float) -> distance
    1:25:void doubleTapZoom(android.graphics.PointF,android.graphics.PointF) -> doubleTapZoom
    1:6:float ease(int,long,float,float,long) -> ease
    1:1:void execute(android.os.AsyncTask) -> execute
    1:8:void fileSRect(android.graphics.Rect,android.graphics.Rect) -> fileSRect
    1:41:void fitToBounds(boolean,io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$ScaleAndTranslate) -> fitToBounds
    42:55:void fitToBounds(boolean) -> fitToBounds
    1:1:int getAppliedOrientation() -> getAppliedOrientation
    1:3:android.graphics.PointF getCenter() -> getCenter
    1:43:int getExifOrientation(android.content.Context,java.lang.String) -> getExifOrientation
    1:1:android.graphics.Point getMaxBitmapDimensions(android.graphics.Canvas) -> getMaxBitmapDimensions
    1:1:float getMaxScale() -> getMaxScale
    1:1:float getMinScale() -> getMinScale
    1:1:int getOrientation() -> getOrientation
    1:22:void getPanRemaining(android.graphics.RectF) -> getPanRemaining
    1:1:android.graphics.Bitmap$Config getPreferredBitmapConfig() -> getPreferredBitmapConfig
    1:2:int getRequiredRotation() -> getRequiredRotation
    1:1:int getSHeight() -> getSHeight
    1:1:int getSWidth() -> getSWidth
    1:1:float getScale() -> getScale
    1:3:io.dcloud.feature.nativeObj.photoview.subscaleview.ImageViewState getState() -> getState
    1:1:boolean hasImage() -> hasImage
    0:31:void initialiseBaseLayer(android.graphics.Point) -> initialiseBaseLayer
    1:51:void initialiseTileMap(android.graphics.Point) -> initialiseTileMap
    1:8:boolean isBaseLayerReady() -> isBaseLayerReady
    1:1:boolean isImageLoaded() -> isImageLoaded
    1:1:boolean isPanEnabled() -> isPanEnabled
    1:1:boolean isQuickScaleEnabled() -> isQuickScaleEnabled
    1:1:boolean isReady() -> isReady
    1:1:boolean isZoomEnabled() -> isZoomEnabled
    1:6:android.graphics.PointF limitedSCenter(float,float,float,android.graphics.PointF) -> limitedSCenter
    1:2:float limitedScale(float) -> limitedScale
    1:9:float minScale() -> minScale
    1:178:void onDraw(android.graphics.Canvas) -> onDraw
    0:25:void onImageLoaded(android.graphics.Bitmap,int,boolean) -> onImageLoaded
    1:21:void onMeasure(int,int) -> onMeasure
    0:15:void onPreviewLoaded(android.graphics.Bitmap) -> onPreviewLoaded
    1:6:void onSizeChanged(int,int,int,int) -> onSizeChanged
    0:15:void onTileLoaded() -> onTileLoaded
    0:27:void onTilesInited(io.dcloud.feature.nativeObj.photoview.subscaleview.decoder.ImageRegionDecoder,int,int,int) -> onTilesInited
    1:40:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1:245:boolean onTouchEventInternal(android.view.MotionEvent) -> onTouchEventInternal
    1:20:void preDraw() -> preDraw
    1:1:int px(int) -> px
    1:5:void recycle() -> recycle
    1:31:void refreshRequiredTiles(boolean) -> refreshRequiredTiles
    1:3:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    1:84:void reset(boolean) -> reset
    1:8:void resetAllScale(int,int) -> resetAllScale
    1:8:void resetScaleAndCenter() -> resetScaleAndCenter
    1:6:void restoreState(io.dcloud.feature.nativeObj.photoview.subscaleview.ImageViewState) -> restoreState
    1:6:int sHeight() -> sHeight
    1:6:int sWidth() -> sWidth
    1:5:void sendStateChanged(float,android.graphics.PointF,int) -> sendStateChanged
    1:2:void setBitmapDecoderClass(java.lang.Class) -> setBitmapDecoderClass
    1:2:void setBitmapDecoderFactory(io.dcloud.feature.nativeObj.photoview.subscaleview.decoder.DecoderFactory) -> setBitmapDecoderFactory
    1:1:void setDebug(boolean) -> setDebug
    1:3:void setDoubleTapZoomDpi(int) -> setDoubleTapZoomDpi
    1:1:void setDoubleTapZoomDuration(int) -> setDoubleTapZoomDuration
    1:1:void setDoubleTapZoomScale(float) -> setDoubleTapZoomScale
    1:5:void setDoubleTapZoomStyle(int) -> setDoubleTapZoomStyle
    1:1:void setEagerLoadingEnabled(boolean) -> setEagerLoadingEnabled
    1:2:void setExecutor(java.util.concurrent.Executor) -> setExecutor
    1:52:void setGestureDetector(android.content.Context) -> setGestureDetector
    1:2:void setImage(io.dcloud.feature.nativeObj.photoview.subscaleview.ImageSource) -> setImage
    3:3:void setImage(io.dcloud.feature.nativeObj.photoview.subscaleview.ImageSource,io.dcloud.feature.nativeObj.photoview.subscaleview.ImageViewState) -> setImage
    4:4:void setImage(io.dcloud.feature.nativeObj.photoview.subscaleview.ImageSource,io.dcloud.feature.nativeObj.photoview.subscaleview.ImageSource) -> setImage
    5:70:void setImage(io.dcloud.feature.nativeObj.photoview.subscaleview.ImageSource,io.dcloud.feature.nativeObj.photoview.subscaleview.ImageSource,io.dcloud.feature.nativeObj.photoview.subscaleview.ImageViewState) -> setImage
    1:8:void setMatrixArray(float[],float,float,float,float,float,float,float,float) -> setMatrixArray
    1:1:void setMaxScale(float) -> setMaxScale
    1:2:void setMaxTileSize(int) -> setMaxTileSize
    3:4:void setMaxTileSize(int,int) -> setMaxTileSize
    1:3:void setMaximumDpi(int) -> setMaximumDpi
    1:1:void setMinScale(float) -> setMinScale
    1:3:void setMinimumDpi(int) -> setMinimumDpi
    1:8:void setMinimumScaleType(int) -> setMinimumScaleType
    1:6:void setMinimumTileDpi(int) -> setMinimumTileDpi
    1:1:void setOnImageEventListener(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$OnImageEventListener) -> setOnImageEventListener
    1:2:void setOnLongClickListener(android.view.View$OnLongClickListener) -> setOnLongClickListener
    1:1:void setOnStateChangedListener(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$OnStateChangedListener) -> setOnStateChangedListener
    1:1:void setOnTileInited(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$TilesInited) -> setOnTileInited
    1:8:void setOrientation(int) -> setOrientation
    1:7:void setPanEnabled(boolean) -> setPanEnabled
    1:8:void setPanLimit(int) -> setPanLimit
    1:1:void setPreferredBitmapConfig(android.graphics.Bitmap$Config) -> setPreferredBitmapConfig
    1:1:void setQuickScaleEnabled(boolean) -> setQuickScaleEnabled
    1:2:void setRegionDecoderClass(java.lang.Class) -> setRegionDecoderClass
    1:2:void setRegionDecoderFactory(io.dcloud.feature.nativeObj.photoview.subscaleview.decoder.DecoderFactory) -> setRegionDecoderFactory
    1:5:void setScaleAndCenter(float,android.graphics.PointF) -> setScaleAndCenter
    1:8:void setTileBackgroundColor(int) -> setTileBackgroundColor
    1:1:void setZoomEnabled(boolean) -> setZoomEnabled
    1:1:android.graphics.PointF sourceToViewCoord(android.graphics.PointF) -> sourceToViewCoord
    2:2:android.graphics.PointF sourceToViewCoord(float,float) -> sourceToViewCoord
    3:3:android.graphics.PointF sourceToViewCoord(android.graphics.PointF,android.graphics.PointF) -> sourceToViewCoord
    4:7:android.graphics.PointF sourceToViewCoord(float,float,android.graphics.PointF) -> sourceToViewCoord
    1:6:void sourceToViewRect(android.graphics.Rect,android.graphics.Rect) -> sourceToViewRect
    1:2:float sourceToViewX(float) -> sourceToViewX
    1:2:float sourceToViewY(float) -> sourceToViewY
    1:5:boolean tileVisible(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$Tile) -> tileVisible
    1:9:android.graphics.PointF vTranslateForSCenter(float,float,float) -> vTranslateForSCenter
    1:27:void viewToFileRect(android.graphics.Rect,android.graphics.Rect) -> viewToFileRect
    1:1:android.graphics.PointF viewToSourceCoord(android.graphics.PointF) -> viewToSourceCoord
    2:2:android.graphics.PointF viewToSourceCoord(float,float) -> viewToSourceCoord
    3:3:android.graphics.PointF viewToSourceCoord(android.graphics.PointF,android.graphics.PointF) -> viewToSourceCoord
    4:7:android.graphics.PointF viewToSourceCoord(float,float,android.graphics.PointF) -> viewToSourceCoord
    1:2:float viewToSourceX(float) -> viewToSourceX
    1:2:float viewToSourceY(float) -> viewToSourceY
    1:5:void visibleFileRect(android.graphics.Rect) -> visibleFileRect
io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$1 -> io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$1:
    1:1:void <init>(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView) -> <init>
    1:5:boolean handleMessage(android.os.Message) -> handleMessage
io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$2 -> io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$2:
    1:1:void <init>(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView,android.content.Context) -> <init>
    1:26:boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    1:8:boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
    1:1:boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$3 -> io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$3:
    1:1:void <init>(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView) -> <init>
    1:1:void onLongPress(android.view.MotionEvent) -> onLongPress
    1:1:boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$Anim -> io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$Anim:
    1:14:void <init>() -> <init>
    15:15:void <init>(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$1) -> <init>
    1:1:boolean access$2700(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$Anim) -> access$2700
    1:1:boolean access$2702(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$Anim,boolean) -> access$2702
    1:1:io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$OnAnimationEventListener access$2800(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$Anim) -> access$2800
    1:1:io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$OnAnimationEventListener access$2802(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$Anim,io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$OnAnimationEventListener) -> access$2802
    1:1:android.graphics.PointF access$3100(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$Anim) -> access$3100
    1:1:android.graphics.PointF access$3102(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$Anim,android.graphics.PointF) -> access$3102
    1:1:long access$3200(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$Anim) -> access$3200
    1:1:long access$3202(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$Anim,long) -> access$3202
    1:1:long access$3300(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$Anim) -> access$3300
    1:1:long access$3302(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$Anim,long) -> access$3302
    1:1:int access$3400(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$Anim) -> access$3400
    1:1:int access$3402(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$Anim,int) -> access$3402
    1:1:float access$3500(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$Anim) -> access$3500
    1:1:float access$3502(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$Anim,float) -> access$3502
    1:1:float access$3600(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$Anim) -> access$3600
    1:1:float access$3602(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$Anim,float) -> access$3602
    1:1:android.graphics.PointF access$3700(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$Anim) -> access$3700
    1:1:android.graphics.PointF access$3702(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$Anim,android.graphics.PointF) -> access$3702
    1:1:android.graphics.PointF access$3800(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$Anim) -> access$3800
    1:1:android.graphics.PointF access$3802(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$Anim,android.graphics.PointF) -> access$3802
    1:1:int access$3900(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$Anim) -> access$3900
    1:1:int access$3902(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$Anim,int) -> access$3902
    1:1:android.graphics.PointF access$4400(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$Anim) -> access$4400
    1:1:android.graphics.PointF access$4402(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$Anim,android.graphics.PointF) -> access$4402
    1:1:android.graphics.PointF access$4500(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$Anim) -> access$4500
    1:1:android.graphics.PointF access$4502(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$Anim,android.graphics.PointF) -> access$4502
io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$AnimationBuilder -> io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$AnimationBuilder:
    1:1:void <init>(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView,float,android.graphics.PointF,android.graphics.PointF,io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$1) -> <init>
    2:2:void <init>(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView,float,android.graphics.PointF,io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$1) -> <init>
    3:3:void <init>(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView,float,io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$1) -> <init>
    4:4:void <init>(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView,android.graphics.PointF,io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$1) -> <init>
    5:16:void <init>(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView,android.graphics.PointF) -> <init>
    17:34:void <init>(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView,float) -> <init>
    35:58:void <init>(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView,float,android.graphics.PointF) -> <init>
    59:88:void <init>(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView,float,android.graphics.PointF,android.graphics.PointF) -> <init>
    1:1:io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$AnimationBuilder access$1200(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$AnimationBuilder,boolean) -> access$1200
    1:1:io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$AnimationBuilder access$1300(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$AnimationBuilder,int) -> access$1300
    1:49:void start() -> start
    1:1:io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$AnimationBuilder withDuration(long) -> withDuration
    1:5:io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$AnimationBuilder withEasing(int) -> withEasing
    1:1:io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$AnimationBuilder withInterruptible(boolean) -> withInterruptible
    1:1:io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$AnimationBuilder withOnAnimationEventListener(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$OnAnimationEventListener) -> withOnAnimationEventListener
    1:1:io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$AnimationBuilder withOrigin(int) -> withOrigin
    1:1:io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$AnimationBuilder withPanLimited(boolean) -> withPanLimited
io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$BitmapLoadTask -> io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$BitmapLoadTask:
    1:6:void <init>(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView,android.content.Context,io.dcloud.feature.nativeObj.photoview.subscaleview.decoder.DecoderFactory,android.net.Uri,boolean) -> <init>
    1:1:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    2:18:java.lang.Integer doInBackground(java.lang.Void[]) -> doInBackground
    1:1:void onPostExecute(java.lang.Object) -> onPostExecute
    2:14:void onPostExecute(java.lang.Integer) -> onPostExecute
io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$DefaultOnAnimationEventListener -> io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$DefaultOnAnimationEventListener:
    1:1:void <init>() -> <init>
io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$DefaultOnImageEventListener -> io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$DefaultOnImageEventListener:
    1:1:void <init>() -> <init>
io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$DefaultOnStateChangedListener -> io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$DefaultOnStateChangedListener:
    1:1:void <init>() -> <init>
io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$ScaleAndTranslate -> io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$ScaleAndTranslate:
    1:1:void <init>(float,android.graphics.PointF,io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$1) -> <init>
    2:4:void <init>(float,android.graphics.PointF) -> <init>
    1:1:float access$4700(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$ScaleAndTranslate) -> access$4700
    1:1:float access$4702(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$ScaleAndTranslate,float) -> access$4702
    1:1:android.graphics.PointF access$4800(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$ScaleAndTranslate) -> access$4800
io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$Tile -> io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$Tile:
    1:1:void <init>() -> <init>
    2:2:void <init>(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$1) -> <init>
    1:1:boolean access$400(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$Tile) -> access$400
    1:1:boolean access$4000(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$Tile) -> access$4000
    1:1:boolean access$4002(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$Tile,boolean) -> access$4002
    1:1:boolean access$402(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$Tile,boolean) -> access$402
    1:1:android.graphics.Rect access$4100(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$Tile) -> access$4100
    1:1:android.graphics.Rect access$4102(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$Tile,android.graphics.Rect) -> access$4102
    1:1:android.graphics.Rect access$4200(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$Tile) -> access$4200
    1:1:android.graphics.Rect access$4202(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$Tile,android.graphics.Rect) -> access$4202
    1:1:int access$4300(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$Tile) -> access$4300
    1:1:int access$4302(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$Tile,int) -> access$4302
    1:1:android.graphics.Bitmap access$500(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$Tile) -> access$500
    1:1:android.graphics.Rect access$5000(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$Tile) -> access$5000
    1:1:android.graphics.Rect access$5002(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$Tile,android.graphics.Rect) -> access$5002
    1:1:android.graphics.Bitmap access$502(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$Tile,android.graphics.Bitmap) -> access$502
io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$TileLoadTask -> io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$TileLoadTask:
    1:5:void <init>(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView,io.dcloud.feature.nativeObj.photoview.subscaleview.decoder.ImageRegionDecoder,io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$Tile) -> <init>
    1:1:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    2:36:android.graphics.Bitmap doInBackground(java.lang.Void[]) -> doInBackground
    1:1:void onPostExecute(java.lang.Object) -> onPostExecute
    2:10:void onPostExecute(android.graphics.Bitmap) -> onPostExecute
io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$TilesInitTask -> io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView$TilesInitTask:
    1:5:void <init>(io.dcloud.feature.nativeObj.photoview.subscaleview.SubsamplingScaleImageView,android.content.Context,io.dcloud.feature.nativeObj.photoview.subscaleview.decoder.DecoderFactory,android.net.Uri) -> <init>
    1:1:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    2:25:int[] doInBackground(java.lang.Void[]) -> doInBackground
    1:1:void onPostExecute(java.lang.Object) -> onPostExecute
    2:7:void onPostExecute(int[]) -> onPostExecute
io.dcloud.feature.nativeObj.photoview.subscaleview.decoder.CompatDecoderFactory -> io.dcloud.feature.nativeObj.photoview.subscaleview.decoder.CompatDecoderFactory:
    1:1:void <init>(java.lang.Class) -> <init>
    2:4:void <init>(java.lang.Class,android.graphics.Bitmap$Config) -> <init>
    1:5:java.lang.Object make() -> make
io.dcloud.feature.nativeObj.photoview.subscaleview.decoder.SkiaImageDecoder -> io.dcloud.feature.nativeObj.photoview.subscaleview.decoder.SkiaImageDecoder:
    1:1:void <init>() -> <init>
    2:9:void <init>(android.graphics.Bitmap$Config) -> <init>
    1:48:android.graphics.Bitmap decode(android.content.Context,android.net.Uri) -> decode
io.dcloud.feature.nativeObj.photoview.subscaleview.decoder.SkiaImageRegionDecoder -> io.dcloud.feature.nativeObj.photoview.subscaleview.decoder.SkiaImageRegionDecoder:
    1:1:void <init>() -> <init>
    2:25:void <init>(android.graphics.Bitmap$Config) -> <init>
    1:24:android.graphics.Bitmap decodeRegion(android.graphics.Rect,int) -> decodeRegion
    1:4:java.util.concurrent.locks.Lock getDecodeLock() -> getDecodeLock
    1:44:android.graphics.Point init(android.content.Context,android.net.Uri) -> init
    1:1:boolean isReady() -> isReady
    0:6:void recycle() -> recycle
io.dcloud.feature.nativeObj.photoview.subscaleview.decoder.SkiaPooledImageRegionDecoder -> io.dcloud.feature.nativeObj.photoview.subscaleview.decoder.SkiaPooledImageRegionDecoder:
    1:1:void <init>() -> <init>
    2:33:void <init>(android.graphics.Bitmap$Config) -> <init>
    1:1:io.dcloud.feature.nativeObj.photoview.subscaleview.decoder.SkiaPooledImageRegionDecoder$DecoderPool access$100(io.dcloud.feature.nativeObj.photoview.subscaleview.decoder.SkiaPooledImageRegionDecoder) -> access$100
    1:1:long access$300(io.dcloud.feature.nativeObj.photoview.subscaleview.decoder.SkiaPooledImageRegionDecoder) -> access$300
    1:1:void access$400(io.dcloud.feature.nativeObj.photoview.subscaleview.decoder.SkiaPooledImageRegionDecoder,java.lang.String) -> access$400
    1:1:void access$500(io.dcloud.feature.nativeObj.photoview.subscaleview.decoder.SkiaPooledImageRegionDecoder) -> access$500
    1:13:boolean allowAdditionalDecoder(int,long) -> allowAdditionalDecoder
    1:2:void debug(java.lang.String) -> debug
    1:42:android.graphics.Bitmap decodeRegion(android.graphics.Rect,int) -> decodeRegion
    1:3:int getNumCoresOldPhones() -> getNumCoresOldPhones
    1:4:int getNumberOfCores() -> getNumberOfCores
    1:4:android.graphics.Point init(android.content.Context,android.net.Uri) -> init
    1:82:void initialiseDecoder() -> initialiseDecoder
    1:5:boolean isLowMemory() -> isLowMemory
    1:1:boolean isReady() -> isReady
    1:24:void lazyInit() -> lazyInit
    0:10:void recycle() -> recycle
    1:1:void setDebug(boolean) -> setDebug
io.dcloud.feature.nativeObj.photoview.subscaleview.decoder.SkiaPooledImageRegionDecoder$1 -> io.dcloud.feature.nativeObj.photoview.subscaleview.decoder.SkiaPooledImageRegionDecoder$1:
    1:1:void <init>(io.dcloud.feature.nativeObj.photoview.subscaleview.decoder.SkiaPooledImageRegionDecoder) -> <init>
    1:14:void run() -> run
io.dcloud.feature.nativeObj.photoview.subscaleview.decoder.SkiaPooledImageRegionDecoder$1CpuFilter -> io.dcloud.feature.nativeObj.photoview.subscaleview.decoder.SkiaPooledImageRegionDecoder$1CpuFilter:
    1:1:void <init>(io.dcloud.feature.nativeObj.photoview.subscaleview.decoder.SkiaPooledImageRegionDecoder) -> <init>
    1:1:boolean accept(java.io.File) -> accept
io.dcloud.feature.nativeObj.photoview.subscaleview.decoder.SkiaPooledImageRegionDecoder$DecoderPool -> io.dcloud.feature.nativeObj.photoview.subscaleview.decoder.SkiaPooledImageRegionDecoder$DecoderPool:
    1:3:void <init>() -> <init>
    4:4:void <init>(io.dcloud.feature.nativeObj.photoview.subscaleview.decoder.SkiaPooledImageRegionDecoder$1) -> <init>
    1:1:void access$1000(io.dcloud.feature.nativeObj.photoview.subscaleview.decoder.SkiaPooledImageRegionDecoder$DecoderPool) -> access$1000
    1:1:int access$200(io.dcloud.feature.nativeObj.photoview.subscaleview.decoder.SkiaPooledImageRegionDecoder$DecoderPool) -> access$200
    1:1:void access$600(io.dcloud.feature.nativeObj.photoview.subscaleview.decoder.SkiaPooledImageRegionDecoder$DecoderPool,android.graphics.BitmapRegionDecoder) -> access$600
    1:1:android.graphics.BitmapRegionDecoder access$700(io.dcloud.feature.nativeObj.photoview.subscaleview.decoder.SkiaPooledImageRegionDecoder$DecoderPool) -> access$700
    1:1:void access$800(io.dcloud.feature.nativeObj.photoview.subscaleview.decoder.SkiaPooledImageRegionDecoder$DecoderPool,android.graphics.BitmapRegionDecoder) -> access$800
    1:1:boolean access$900(io.dcloud.feature.nativeObj.photoview.subscaleview.decoder.SkiaPooledImageRegionDecoder$DecoderPool) -> access$900
    1:2:android.graphics.BitmapRegionDecoder acquire() -> acquire
    0:2:void add(android.graphics.BitmapRegionDecoder) -> add
    0:4:android.graphics.BitmapRegionDecoder getNextAvailable() -> getNextAvailable
    1:1:boolean isEmpty() -> isEmpty
    0:4:boolean markAsUnused(android.graphics.BitmapRegionDecoder) -> markAsUnused
    0:4:void recycle() -> recycle
    1:2:void release(android.graphics.BitmapRegionDecoder) -> release
    1:1:int size() -> size
io.dcloud.feature.nativeObj.richtext.RichTextLayout -> io.dcloud.feature.nativeObj.richtext.RichTextLayout:
    1:1:void <init>() -> <init>
    1:2:io.dcloud.feature.nativeObj.richtext.RichTextLayout$RichTextLayoutHolder makeRichText(android.content.Context,io.dcloud.common.DHInterface.IWebview,io.dcloud.feature.nativeObj.NativeView,java.lang.String,org.json.JSONObject,org.json.JSONObject,java.lang.String) -> makeRichText
    3:95:io.dcloud.feature.nativeObj.richtext.RichTextLayout$RichTextLayoutHolder makeRichText(io.dcloud.feature.nativeObj.richtext.RichTextLayout$RichTextLayoutHolder,java.lang.String,org.json.JSONObject,org.json.JSONObject) -> makeRichText
    96:101:android.widget.TextView makeRichText(java.lang.Object[]) -> makeRichText
io.dcloud.feature.nativeObj.richtext.RichTextLayout$1 -> io.dcloud.feature.nativeObj.richtext.RichTextLayout$1:
    1:1:void <init>(io.dcloud.common.DHInterface.IWebview) -> <init>
io.dcloud.feature.nativeObj.richtext.RichTextLayout$DefaultAssets -> io.dcloud.feature.nativeObj.richtext.RichTextLayout$DefaultAssets:
    1:1:void <init>(io.dcloud.common.DHInterface.IWebview) -> <init>
    2:12:void <init>(io.dcloud.common.DHInterface.IWebview,io.dcloud.feature.nativeObj.NativeView) -> <init>
    1:1:java.io.InputStream convert2InputStream(java.lang.String) -> convert2InputStream
    1:4:float convertHeight(java.lang.String,float) -> convertHeight
    1:4:float convertWidth(java.lang.String,float) -> convertWidth
    1:1:java.lang.String getOnClickCallBackId() -> getOnClickCallBackId
    1:4:float getScale() -> getScale
    1:1:boolean isClick() -> isClick
    1:1:void loadResource(io.dcloud.feature.nativeObj.richtext.dom.ImgDomElement$AsycLoader) -> loadResource
    1:1:void setClick(boolean) -> setClick
    1:1:void setOnClickCallBackId(java.lang.String) -> setOnClickCallBackId
    1:1:int stringToColor(java.lang.String) -> stringToColor
io.dcloud.feature.nativeObj.richtext.RichTextLayout$DefaultAssets$1 -> io.dcloud.feature.nativeObj.richtext.RichTextLayout$DefaultAssets$1:
    1:1:void <init>(io.dcloud.feature.nativeObj.richtext.RichTextLayout$DefaultAssets,io.dcloud.feature.nativeObj.richtext.dom.ImgDomElement$AsycLoader) -> <init>
    1:1:void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
io.dcloud.feature.nativeObj.richtext.RichTextLayout$RichTextLayoutHolder -> io.dcloud.feature.nativeObj.richtext.RichTextLayout$RichTextLayoutHolder:
    1:28:void <init>(android.content.Context,io.dcloud.common.DHInterface.IWebview,io.dcloud.feature.nativeObj.NativeView,java.lang.String) -> <init>
    1:1:java.io.InputStream convert2InputStream(java.lang.String) -> convert2InputStream
    1:1:float convertHeight(java.lang.String,float) -> convertHeight
    1:1:float convertWidth(java.lang.String,float) -> convertWidth
    1:1:int getDefaultColor(boolean) -> getDefaultColor
    1:1:io.dcloud.common.DHInterface.IWebview getIWebview() -> getIWebview
    1:1:java.lang.String getOnClickCallBackId() -> getOnClickCallBackId
    1:1:float getScale() -> getScale
    1:1:boolean isClick() -> isClick
    1:1:void loadResource(io.dcloud.feature.nativeObj.richtext.dom.ImgDomElement$AsycLoader) -> loadResource
    1:1:android.view.View obtainMainView() -> obtainMainView
    1:8:void onMeasure(int,int) -> onMeasure
    1:1:void setClick(boolean) -> setClick
    1:1:void setOnClickCallBackId(java.lang.String) -> setOnClickCallBackId
    1:1:int stringToColor(java.lang.String) -> stringToColor
    1:13:void updateLayout() -> updateLayout
io.dcloud.feature.nativeObj.richtext.RichTextLayout$RichTextLayoutHolder$1 -> io.dcloud.feature.nativeObj.richtext.RichTextLayout$RichTextLayoutHolder$1:
    1:1:void <init>(io.dcloud.feature.nativeObj.richtext.RichTextLayout$RichTextLayoutHolder,android.content.Context) -> <init>
    1:3:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
io.dcloud.feature.nativeObj.richtext.RichTextParser -> io.dcloud.feature.nativeObj.richtext.RichTextParser:
    1:1:void <init>() -> <init>
    1:1:void handleEndTag(io.dcloud.feature.nativeObj.richtext.IAssets,android.widget.TextView,android.text.SpannableStringBuilder,io.dcloud.feature.nativeObj.richtext.dom.DomElement) -> handleEndTag
    1:21:io.dcloud.feature.nativeObj.richtext.dom.DomElement handleStartTag(org.xmlpull.v1.XmlPullParser) -> handleStartTag
    1:53:android.text.SpannableStringBuilder makeSpannableStringBuilder(io.dcloud.feature.nativeObj.richtext.IAssets,android.widget.TextView,java.lang.String) -> makeSpannableStringBuilder
    1:1:void updateFromHTML(io.dcloud.feature.nativeObj.richtext.IAssets,io.dcloud.common.DHInterface.IWebview,android.widget.TextView,java.lang.String,org.json.JSONObject) -> updateFromHTML
    2:45:void updateFromHTML(io.dcloud.feature.nativeObj.richtext.IAssets,io.dcloud.common.DHInterface.IWebview,android.widget.TextView,java.lang.String,org.json.JSONObject,io.dcloud.common.DHInterface.ICallBack) -> updateFromHTML
io.dcloud.feature.nativeObj.richtext.RichTextParser$LinkMovementMethodExt -> io.dcloud.feature.nativeObj.richtext.RichTextParser$LinkMovementMethodExt:
    1:11:void <init>(io.dcloud.common.DHInterface.IWebview,io.dcloud.common.DHInterface.ICallBack,io.dcloud.feature.nativeObj.richtext.IAssets) -> <init>
    1:127:boolean onTouchEvent(android.widget.TextView,android.text.Spannable,android.view.MotionEvent) -> onTouchEvent
io.dcloud.feature.nativeObj.richtext.dom.DomElement -> io.dcloud.feature.nativeObj.richtext.dom.DomElement:
    1:1:void <init>() -> <init>
    1:1:void makeSpan(io.dcloud.feature.nativeObj.richtext.IAssets,android.widget.TextView,android.text.SpannableStringBuilder) -> makeSpan
    1:4:void parseDomElement(org.xmlpull.v1.XmlPullParser) -> parseDomElement
    1:11:void parseStyle(java.lang.String) -> parseStyle
io.dcloud.feature.nativeObj.richtext.dom.HrDomElement -> io.dcloud.feature.nativeObj.richtext.dom.HrDomElement:
    1:1:void <init>() -> <init>
    1:2:java.lang.String getColor() -> getColor
    1:7:void makeSpan(io.dcloud.feature.nativeObj.richtext.IAssets,android.widget.TextView,android.text.SpannableStringBuilder) -> makeSpan
    1:9:void parseDomElement(org.xmlpull.v1.XmlPullParser) -> parseDomElement
io.dcloud.feature.nativeObj.richtext.dom.ImgDomElement -> io.dcloud.feature.nativeObj.richtext.dom.ImgDomElement:
    1:1:void <init>() -> <init>
    1:1:java.lang.String getSrc() -> getSrc
    1:26:void makeSpan(io.dcloud.feature.nativeObj.richtext.IAssets,android.widget.TextView,android.text.SpannableStringBuilder) -> makeSpan
    1:5:void parseDomElement(org.xmlpull.v1.XmlPullParser) -> parseDomElement
io.dcloud.feature.nativeObj.richtext.dom.ImgDomElement$AsycLoader -> io.dcloud.feature.nativeObj.richtext.dom.ImgDomElement$AsycLoader:
    1:10:void <init>(android.widget.TextView,android.text.SpannableStringBuilder,io.dcloud.feature.nativeObj.richtext.span.ImgSpan,java.lang.String,int,int,java.lang.String) -> <init>
    1:14:void onComplete(android.graphics.Bitmap) -> onComplete
io.dcloud.feature.nativeObj.richtext.dom.ImgDomElement$AsycLoader$1 -> io.dcloud.feature.nativeObj.richtext.dom.ImgDomElement$AsycLoader$1:
    1:1:void <init>(io.dcloud.feature.nativeObj.richtext.dom.ImgDomElement$AsycLoader) -> <init>
    1:2:void run() -> run
io.dcloud.feature.nativeObj.richtext.dom.TextDomElement -> io.dcloud.feature.nativeObj.richtext.dom.TextDomElement:
    1:1:void <init>() -> <init>
    1:6:java.lang.String getColor() -> getColor
    1:5:java.lang.String getFontSize() -> getFontSize
    1:5:java.lang.String getFontStyle() -> getFontStyle
    1:2:int getFontStyleInt() -> getFontStyleInt
    1:5:java.lang.String getFontWeight() -> getFontWeight
    1:2:int getFontWeightInt() -> getFontWeightInt
    1:5:java.lang.String getTextDecoration() -> getTextDecoration
    1:2:int getTextDecorationInt() -> getTextDecorationInt
    1:23:void makeSpan(io.dcloud.feature.nativeObj.richtext.IAssets,android.widget.TextView,android.text.SpannableStringBuilder) -> makeSpan
    1:3:void parseDomElement(org.xmlpull.v1.XmlPullParser) -> parseDomElement
io.dcloud.feature.nativeObj.richtext.span.AHrefSpan -> io.dcloud.feature.nativeObj.richtext.span.AHrefSpan:
    1:6:void <init>(float,int,int,int,int,java.lang.String,java.lang.String) -> <init>
    1:1:java.lang.String getHref() -> getHref
    1:1:java.lang.String getOnClickEvent() -> getOnClickEvent
    1:1:boolean hasClickEvent() -> hasClickEvent
    1:3:void onClick(android.view.View,io.dcloud.common.DHInterface.IWebview) -> onClick
io.dcloud.feature.nativeObj.richtext.span.FontSpan -> io.dcloud.feature.nativeObj.richtext.span.FontSpan:
    1:11:void <init>(float,int,int,int,int) -> <init>
    1:16:void updateDrawState(android.text.TextPaint) -> updateDrawState
io.dcloud.feature.nativeObj.richtext.span.HrSpan -> io.dcloud.feature.nativeObj.richtext.span.HrSpan:
    1:6:void <init>(int,int,int,int,int) -> <init>
    1:10:void draw(android.graphics.Canvas,java.lang.CharSequence,int,int,float,int,int,int,android.graphics.Paint) -> draw
    1:6:int getSize(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt) -> getSize
io.dcloud.feature.nativeObj.richtext.span.ImgSpan -> io.dcloud.feature.nativeObj.richtext.span.ImgSpan:
    1:8:void <init>(android.graphics.drawable.Drawable,java.lang.String,int,java.lang.String,java.lang.String) -> <init>
    1:1:java.lang.String getHref() -> getHref
    1:1:java.lang.String getOnClickEvent() -> getOnClickEvent
    1:1:java.lang.String getSrc() -> getSrc
    1:1:boolean hasClickEvent() -> hasClickEvent
    1:3:void onClick(android.view.View,io.dcloud.common.DHInterface.IWebview) -> onClick
io.dcloud.feature.oauth.BaseOAuthService -> io.dcloud.feature.oauth.BaseOAuthService:
    1:232:void <init>() -> <init>
    1:5:void addPhoneNumber(io.dcloud.common.DHInterface.IWebview,org.json.JSONArray) -> addPhoneNumber
    1:5:void authorize(io.dcloud.common.DHInterface.IWebview,org.json.JSONArray) -> authorize
    1:1:java.lang.String checkToken(java.lang.String) -> checkToken
    1:1:java.lang.String decrypt(java.lang.String) -> decrypt
    1:1:java.lang.String encrypt(java.lang.String) -> encrypt
    1:6:org.json.JSONObject getErrorJsonbject(int,java.lang.String) -> getErrorJsonbject
    7:12:org.json.JSONObject getErrorJsonbject(java.lang.String,java.lang.String) -> getErrorJsonbject
    13:18:org.json.JSONObject getErrorJsonbject(int,java.lang.String,int) -> getErrorJsonbject
    1:3:java.lang.String getToken(java.lang.String) -> getToken
    1:5:void getUserInfo(io.dcloud.common.DHInterface.IWebview,org.json.JSONArray) -> getUserInfo
    6:8:java.lang.String getUserInfo(java.lang.String) -> getUserInfo
    1:6:java.lang.String getValue(java.lang.String) -> getValue
    1:3:boolean hasGeneralError(io.dcloud.common.DHInterface.IWebview,java.lang.String) -> hasGeneralError
    1:9:void login(io.dcloud.common.DHInterface.IWebview,org.json.JSONArray) -> login
    1:5:void logout(io.dcloud.common.DHInterface.IWebview,org.json.JSONArray) -> logout
    1:7:org.json.JSONObject makeResultJSONObject() -> makeResultJSONObject
    1:7:org.json.JSONObject makeResultJson() -> makeResultJson
    1:1:void onAddPhoneNumberFinished(org.json.JSONObject,boolean) -> onAddPhoneNumberFinished
    1:1:void onGetUserInfoFinished(org.json.JSONObject,boolean) -> onGetUserInfoFinished
    1:4:void onLoginFinished(org.json.JSONObject,boolean) -> onLoginFinished
    1:1:void onLogoutFinished(org.json.JSONObject,boolean) -> onLogoutFinished
    1:1:void onPreLoginFinished(org.json.JSONObject,boolean) -> onPreLoginFinished
    1:5:void otherLoginButtonClick(io.dcloud.common.DHInterface.IWebview,org.json.JSONArray) -> otherLoginButtonClick
    1:6:void preLogin(io.dcloud.common.DHInterface.IWebview,org.json.JSONArray) -> preLogin
    1:3:java.lang.String refreshToken(java.lang.String) -> refreshToken
    1:1:void removeToken() -> removeToken
    1:4:void removeValue(java.lang.String) -> removeValue
    1:5:void saveValue(java.lang.String,java.lang.String) -> saveValue
    1:1:org.json.JSONObject toJSONObject() -> toJSONObject
io.dcloud.feature.oauth.OAuthFeatureImpl -> io.dcloud.feature.oauth.OAuthFeatureImpl:
    1:1:void <init>() -> <init>
    1:7:void addPhoneNumber(io.dcloud.common.DHInterface.IWebview,org.json.JSONArray) -> addPhoneNumber
    1:11:void authorize(io.dcloud.common.DHInterface.IWebview,org.json.JSONArray) -> authorize
    1:4:void closeAuthView(io.dcloud.common.DHInterface.IWebview,org.json.JSONArray) -> closeAuthView
    1:4:boolean getCheckBoxState(io.dcloud.common.DHInterface.IWebview,org.json.JSONArray) -> getCheckBoxState
    1:3:void getServices(io.dcloud.common.DHInterface.IWebview,org.json.JSONArray) -> getServices
    1:7:void getUserInfo(io.dcloud.common.DHInterface.IWebview,org.json.JSONArray) -> getUserInfo
    1:11:void login(io.dcloud.common.DHInterface.IWebview,org.json.JSONArray) -> login
    1:7:void logout(io.dcloud.common.DHInterface.IWebview,org.json.JSONArray) -> logout
    1:4:void otherLoginButtonClick(io.dcloud.common.DHInterface.IWebview,org.json.JSONArray) -> otherLoginButtonClick
    1:7:void preLogin(io.dcloud.common.DHInterface.IWebview,org.json.JSONArray) -> preLogin
io.dcloud.feature.payment.AbsPaymentChannel -> io.dcloud.feature.payment.AbsPaymentChannel:
    1:56:void <init>() -> <init>
    1:1:java.lang.String a(io.dcloud.feature.payment.AbsPaymentChannel) -> a
    2:3:void a(java.lang.String,java.lang.String) -> a
    1:1:java.lang.String getFullDescription() -> getFullDescription
    1:1:void init(android.content.Context) -> init
    1:7:org.json.JSONObject toJSONObject() -> toJSONObject
    1:1:void updateWebview(io.dcloud.common.DHInterface.IWebview) -> updateWebview
io.dcloud.feature.payment.AbsPaymentChannel$a -> io.dcloud.feature.payment.AbsPaymentChannel$a:
    1:1:void <init>(io.dcloud.feature.payment.AbsPaymentChannel) -> <init>
    1:2:void onError(int,java.lang.String) -> onError
    1:1:void onSuccess(io.dcloud.feature.payment.PaymentResult) -> onSuccess
io.dcloud.feature.payment.PaymentFeatureImpl -> io.dcloud.feature.payment.PaymentFeatureImpl:
    1:5:void <init>() -> <init>
    1:26:void a(io.dcloud.common.DHInterface.IWebview) -> a
    27:31:org.json.JSONArray a() -> a
    32:33:io.dcloud.feature.payment.AbsPaymentChannel a(java.lang.String) -> a
    1:31:java.lang.String execute(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String[]) -> execute
    1:4:void init(io.dcloud.common.DHInterface.AbsMgr,java.lang.String) -> init
io.dcloud.feature.payment.PaymentResult -> io.dcloud.feature.payment.PaymentResult:
    1:2:void <init>(io.dcloud.feature.payment.AbsPaymentChannel) -> <init>
    1:12:org.json.JSONObject toJSONObject() -> toJSONObject
io.dcloud.feature.pdr.CoreCacheFeatureImpl -> io.dcloud.feature.pdr.CoreCacheFeatureImpl:
    1:1:void <init>() -> <init>
    1:26:java.lang.String execute(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String[]) -> execute
io.dcloud.feature.pdr.LoggerFeatureImpl -> io.dcloud.feature.pdr.LoggerFeatureImpl:
    1:1:void <init>() -> <init>
    1:20:java.lang.String execute(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String[]) -> execute
io.dcloud.feature.pdr.NStorageFeatureImpl -> io.dcloud.feature.pdr.NStorageFeatureImpl:
    1:1:void <init>() -> <init>
    1:3:void a(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String) -> a
    4:6:void a(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String,java.lang.String) -> a
    7:9:void a(io.dcloud.common.DHInterface.IWebview) -> a
    10:12:void a(io.dcloud.common.DHInterface.IWebview,java.lang.String) -> a
    13:19:java.lang.String a(io.dcloud.common.DHInterface.IWebview,int) -> a
    1:5:java.lang.String b(io.dcloud.common.DHInterface.IWebview,java.lang.String) -> b
    6:8:void b(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String) -> b
    9:29:java.lang.String b(io.dcloud.common.DHInterface.IWebview) -> b
    1:3:void c(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String) -> c
    4:6:void c(io.dcloud.common.DHInterface.IWebview,java.lang.String) -> c
    7:12:int c(io.dcloud.common.DHInterface.IWebview) -> c
    1:3:void d(io.dcloud.common.DHInterface.IWebview,java.lang.String) -> d
    1:3:void dispose(java.lang.String) -> dispose
    1:187:java.lang.String execute(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String[]) -> execute
io.dcloud.feature.pdr.NStorageFeatureImpl$a -> io.dcloud.feature.pdr.NStorageFeatureImpl$a:
    1:1:void <init>(io.dcloud.feature.pdr.NStorageFeatureImpl,io.dcloud.common.util.db.DCStorage,io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String) -> <init>
    1:17:void run() -> run
io.dcloud.feature.pdr.NStorageFeatureImpl$b -> io.dcloud.feature.pdr.NStorageFeatureImpl$b:
    1:1:void <init>(io.dcloud.feature.pdr.NStorageFeatureImpl,io.dcloud.common.util.db.DCStorage,io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String,java.lang.String) -> <init>
    1:14:void run() -> run
io.dcloud.feature.pdr.NStorageFeatureImpl$c -> io.dcloud.feature.pdr.NStorageFeatureImpl$c:
    1:1:void <init>(io.dcloud.feature.pdr.NStorageFeatureImpl,io.dcloud.common.util.db.DCStorage,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> <init>
    1:12:void run() -> run
io.dcloud.feature.pdr.NStorageFeatureImpl$d -> io.dcloud.feature.pdr.NStorageFeatureImpl$d:
    1:1:void <init>(io.dcloud.feature.pdr.NStorageFeatureImpl,io.dcloud.common.util.db.DCStorage,io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String) -> <init>
    1:12:void run() -> run
io.dcloud.feature.pdr.NStorageFeatureImpl$e -> io.dcloud.feature.pdr.NStorageFeatureImpl$e:
    1:1:void <init>(io.dcloud.feature.pdr.NStorageFeatureImpl,io.dcloud.common.util.db.DCStorage,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> <init>
    1:24:void run() -> run
io.dcloud.feature.pdr.RuntimeFeatureImpl -> io.dcloud.feature.pdr.RuntimeFeatureImpl:
    1:134:void <init>() -> <init>
    1:23:void a(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String) -> a
    24:34:void a(io.dcloud.common.DHInterface.IWebview,java.lang.String) -> a
    35:52:void a(java.lang.String,io.dcloud.common.DHInterface.IApp) -> a
    1:59:void b(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String) -> b
    60:64:void b(io.dcloud.common.DHInterface.IWebview,java.lang.String) -> b
    65:73:void b(java.lang.String,io.dcloud.common.DHInterface.IApp) -> b
    1:19:void c(io.dcloud.common.DHInterface.IWebview,java.lang.String) -> c
    1:16:void d(io.dcloud.common.DHInterface.IWebview,java.lang.String) -> d
    1:7:void e(io.dcloud.common.DHInterface.IWebview,java.lang.String) -> e
    1:261:java.lang.String execute(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String[]) -> execute
    262:534:void execute(java.lang.Object) -> execute
    1:6:void f(io.dcloud.common.DHInterface.IWebview,java.lang.String) -> f
    1:9:void init(io.dcloud.common.DHInterface.AbsMgr,java.lang.String) -> init
io.dcloud.feature.pdr.RuntimeFeatureImpl$a -> io.dcloud.feature.pdr.RuntimeFeatureImpl$a:
    1:1:void <init>(io.dcloud.feature.pdr.RuntimeFeatureImpl,java.lang.String[],java.lang.String,io.dcloud.common.DHInterface.IWebview) -> <init>
    1:14:void run() -> run
io.dcloud.feature.pdr.RuntimeFeatureImpl$b -> io.dcloud.feature.pdr.RuntimeFeatureImpl$b:
    1:1:void <init>(io.dcloud.feature.pdr.RuntimeFeatureImpl,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> <init>
    1:1:java.lang.Object onCallBack(int,java.lang.Object) -> onCallBack
io.dcloud.feature.pdr.RuntimeFeatureImpl$c -> io.dcloud.feature.pdr.RuntimeFeatureImpl$c:
    1:1:void <init>(io.dcloud.feature.pdr.RuntimeFeatureImpl,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> <init>
    1:3:java.lang.Object onCallBack(int,java.lang.Object) -> onCallBack
io.dcloud.feature.pdr.ZipFeature -> io.dcloud.feature.pdr.ZipFeature:
    1:1:void <init>() -> <init>
    1:1:void a(io.dcloud.feature.pdr.ZipFeature$a) -> a
    1:33:java.lang.String execute(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String[]) -> execute
    1:1:void init(io.dcloud.common.DHInterface.AbsMgr,java.lang.String) -> init
io.dcloud.feature.pdr.ZipFeature$a -> io.dcloud.feature.pdr.ZipFeature$a:
    1:3:void <init>(io.dcloud.feature.pdr.ZipFeature) -> <init>
    1:53:void run() -> run
io.dcloud.feature.pdr.a -> io.dcloud.feature.pdr.a:
    0:114:void a(io.dcloud.common.DHInterface.IWebview,java.lang.String[]) -> a
    115:132:void a(java.lang.String,java.lang.String) -> a
    133:140:android.graphics.Bitmap a(android.content.Context,java.lang.String,android.graphics.BitmapFactory$Options) -> a
    141:142:void a(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String,int) -> a
    143:143:void a(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String) -> a
    144:178:long a(java.lang.String,android.graphics.Bitmap,boolean,int) -> a
    179:191:boolean a(java.lang.String) -> a
    192:195:float a(java.lang.String,float,float) -> a
    1:1:void b(io.dcloud.common.DHInterface.IWebview,java.lang.String[]) -> b
    2:3:boolean b(java.lang.String) -> b
    1:5:android.graphics.Bitmap$CompressFormat c(java.lang.String) -> c
io.dcloud.feature.pdr.a$a -> io.dcloud.feature.pdr.a$a:
    1:1:void <init>(io.dcloud.common.DHInterface.IWebview,java.lang.String[]) -> <init>
    1:1:void run() -> run
io.dcloud.feature.pdr.a$b -> io.dcloud.feature.pdr.a$b:
    1:12:void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,float,float) -> <init>
    1:1:boolean a() -> a
io.dcloud.feature.pdr.a$c -> io.dcloud.feature.pdr.a$c:
    1:25:void <init>() -> <init>
    1:18:boolean a(org.json.JSONObject,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> a
    19:27:boolean a(io.dcloud.common.DHInterface.IWebview,java.lang.String) -> a
    28:62:void a(android.content.Context,java.lang.String,java.lang.String) -> a
io.dcloud.feature.pdr.b -> io.dcloud.feature.pdr.b:
    1:1:void <clinit>() -> <clinit>
    1:27:void WriteLogToSDcard(java.lang.String,java.lang.String,java.lang.String) -> WriteLogToSDcard
    1:4:void a(java.lang.String) -> a
    5:6:void a(java.lang.String,java.lang.String) -> a
    1:2:void d(java.lang.String,java.lang.String) -> d
    1:2:void e(java.lang.String,java.lang.String) -> e
    1:2:void i(java.lang.String,java.lang.String) -> i
    1:17:void storeLogToSDcard() -> storeLogToSDcard
io.dcloud.feature.sensor.AccelerometerFeatureImpl -> io.dcloud.feature.sensor.AccelerometerFeatureImpl:
    1:1:void <init>() -> <init>
    1:1:void dispose(java.lang.String) -> dispose
    1:1:java.lang.String execute(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String[]) -> execute
    1:1:void init(io.dcloud.common.DHInterface.AbsMgr,java.lang.String) -> init
io.dcloud.feature.sensor.OrientationFeatureImpl -> io.dcloud.feature.sensor.OrientationFeatureImpl:
    1:1:void <init>() -> <init>
    1:1:java.lang.String execute(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String[]) -> execute
    1:1:void init(io.dcloud.common.DHInterface.AbsMgr,java.lang.String) -> init
io.dcloud.feature.sensor.ProximityFeatureImpl -> io.dcloud.feature.sensor.ProximityFeatureImpl:
    1:3:void <init>() -> <init>
    1:1:java.lang.String execute(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String[]) -> execute
    1:1:void init(io.dcloud.common.DHInterface.AbsMgr,java.lang.String) -> init
io.dcloud.feature.sensor.a -> io.dcloud.feature.sensor.a:
    1:18:void <init>(io.dcloud.feature.sensor.b,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> <init>
    1:2:void a(float,float,float) -> a
    3:4:void a(int,java.lang.String) -> a
    1:9:void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
io.dcloud.feature.sensor.b -> io.dcloud.feature.sensor.b:
    1:5:void <init>(android.content.Context) -> <init>
    1:7:java.lang.String a(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String[]) -> a
    8:17:void a(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String) -> a
    18:21:void a(io.dcloud.common.DHInterface.IWebview) -> a
    22:28:void a(java.lang.String) -> a
    1:3:java.lang.Object onCallBack(java.lang.String,java.lang.Object) -> onCallBack
io.dcloud.feature.sensor.c -> io.dcloud.feature.sensor.c:
    1:5:void <init>(io.dcloud.common.DHInterface.IWebview,java.lang.String) -> <init>
    1:1:void a() -> a
    2:3:void a(float,float,float) -> a
    4:5:void a(int,java.lang.String) -> a
    1:1:void b() -> b
    1:12:void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
io.dcloud.feature.sensor.d -> io.dcloud.feature.sensor.d:
    1:2:void <init>(android.content.Context) -> <init>
    1:6:java.lang.String a(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String[]) -> a
    7:12:void a(io.dcloud.common.DHInterface.IWebview,java.lang.String) -> a
    13:15:void a(io.dcloud.common.DHInterface.IWebview) -> a
    1:3:java.lang.Object onCallBack(java.lang.String,java.lang.Object) -> onCallBack
io.dcloud.feature.sensor.e -> io.dcloud.feature.sensor.e:
    1:7:void <init>(io.dcloud.common.DHInterface.IWebview) -> <init>
    1:9:void a(float) -> a
    10:19:void a(int,java.lang.String) -> a
    20:20:void a() -> a
    1:3:void b() -> b
    1:5:void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
io.dcloud.feature.sensor.f -> io.dcloud.feature.sensor.f:
    1:3:void <init>() -> <init>
    1:24:java.lang.String a(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String[]) -> a
    1:6:java.lang.Object onCallBack(java.lang.String,java.lang.Object) -> onCallBack
io.dcloud.feature.ui.UIFeatureImpl -> io.dcloud.feature.ui.UIFeatureImpl:
    1:3:void <init>() -> <init>
    1:1:void dispose(java.lang.String) -> dispose
    1:7:java.lang.Object doForFeature(java.lang.String,java.lang.Object) -> doForFeature
    1:4:java.lang.String execute(io.dcloud.common.DHInterface.IWebview,java.lang.String,org.json.JSONArray) -> execute
    1:1:void init(io.dcloud.common.DHInterface.AbsMgr,java.lang.String) -> init
io.dcloud.feature.ui.a -> io.dcloud.feature.ui.a:
    1:658:void <init>(io.dcloud.common.DHInterface.AbsMgr,io.dcloud.common.DHInterface.IApp) -> <init>
    1:1:void a(java.lang.String,io.dcloud.feature.ui.b) -> a
    2:2:io.dcloud.feature.ui.b a(java.lang.String) -> a
    3:3:void a() -> a
    4:13:void a(java.lang.String,io.dcloud.feature.ui.c,int) -> a
    14:15:boolean a(io.dcloud.common.DHInterface.IWebview) -> a
    16:19:io.dcloud.feature.ui.c a(int) -> a
    20:23:io.dcloud.feature.ui.c a(io.dcloud.common.DHInterface.IFrameView) -> a
    23:32:io.dcloud.feature.ui.c a(java.lang.String,java.lang.String,java.lang.String) -> a
    33:58:boolean a(java.lang.String,io.dcloud.common.DHInterface.ISysEventListener$SysEventType,java.lang.String,int,boolean) -> a
    59:66:boolean a(io.dcloud.feature.ui.c) -> a
    67:81:void a(io.dcloud.common.DHInterface.IApp,io.dcloud.common.DHInterface.IWebview) -> a
    1:1:void b(io.dcloud.common.DHInterface.IFrameView) -> b
    2:2:boolean b(io.dcloud.common.DHInterface.IWebview) -> b
    2:15:java.lang.String b() -> b
    16:17:void b(io.dcloud.feature.ui.c) -> b
    18:35:boolean b(java.lang.String) -> b
    1:1:void c(io.dcloud.common.DHInterface.IFrameView) -> c
    2:7:int c(io.dcloud.feature.ui.c) -> c
    8:8:void c(io.dcloud.common.DHInterface.IWebview) -> c
    9:9:io.dcloud.feature.ui.c c() -> c
    1:1:io.dcloud.feature.ui.c d() -> d
    2:5:void d(io.dcloud.feature.ui.c) -> d
    1:2:void e(io.dcloud.feature.ui.c) -> e
    2:15:java.lang.String e() -> e
    1:7:void f(io.dcloud.feature.ui.c) -> f
    8:8:void f() -> f
    1:4:void g(io.dcloud.feature.ui.c) -> g
    5:5:void g() -> g
    1:4:void h() -> h
    1:19:void i() -> i
    1:148:boolean onExecute(io.dcloud.common.DHInterface.ISysEventListener$SysEventType,java.lang.Object) -> onExecute
io.dcloud.feature.ui.a$a -> io.dcloud.feature.ui.a$a:
    1:1:void <init>(io.dcloud.feature.ui.a) -> <init>
    1:3:int a(io.dcloud.feature.ui.c,io.dcloud.feature.ui.c) -> a
    1:1:int compare(java.lang.Object,java.lang.Object) -> compare
io.dcloud.feature.ui.b -> io.dcloud.feature.ui.b:
    1:7:void <clinit>() -> <clinit>
    1:123:void <init>(java.lang.String) -> <init>
    1:6:void a(android.content.Context,io.dcloud.feature.ui.a,io.dcloud.common.DHInterface.IWebview,java.lang.String,org.json.JSONObject) -> a
    7:7:android.content.Context a() -> a
    8:16:void a(java.lang.String,java.lang.String,java.lang.String) -> a
    17:25:void a(io.dcloud.feature.ui.b,java.util.HashMap) -> a
    26:29:boolean a(java.lang.String) -> a
    30:30:boolean a(java.lang.String,java.lang.String) -> a
    31:46:boolean a(java.lang.String,java.lang.String,boolean) -> a
    1:1:byte b() -> b
    2:11:void b(java.lang.String,java.lang.String) -> b
    1:1:byte c() -> c
    1:25:void f() -> f
    1:2:void g() -> g
    1:1:java.lang.String h() -> h
io.dcloud.feature.ui.c -> io.dcloud.feature.ui.c:
    1:6:void <clinit>() -> <clinit>
    1:1:void <init>(io.dcloud.feature.ui.a,java.lang.String,java.lang.String,java.lang.String,org.json.JSONObject) -> <init>
    2:2153:void <init>(io.dcloud.feature.ui.a,io.dcloud.common.DHInterface.IFrameView,java.lang.String,java.lang.String,java.lang.String,org.json.JSONObject) -> <init>
    1:1:java.lang.String a(io.dcloud.feature.ui.c) -> a
    2:2:void a(boolean) -> a
    3:7:void a(io.dcloud.common.DHInterface.IFrameView,java.lang.String) -> a
    8:8:void a(io.dcloud.common.DHInterface.IWebview,java.lang.String) -> a
    9:158:void a(io.dcloud.feature.ui.b) -> a
    159:186:void a(io.dcloud.feature.ui.b,io.dcloud.feature.ui.c) -> a
    187:208:void a(io.dcloud.common.DHInterface.IContainerView,io.dcloud.common.adapter.ui.AdaFrameItem,android.view.ViewGroup$LayoutParams,int,int,int,int) -> a
    208:213:void a(java.lang.String,java.lang.Object,java.util.List,io.dcloud.feature.ui.c) -> a
    214:1961:java.lang.String a(io.dcloud.common.DHInterface.IWebview,java.lang.String,org.json.JSONArray) -> a
    1962:1984:void a(io.dcloud.common.DHInterface.IWebview,org.json.JSONArray) -> a
    1985:1996:void a(io.dcloud.feature.ui.b,io.dcloud.feature.ui.c,java.lang.String) -> a
    1997:2027:void a(io.dcloud.feature.ui.c,java.lang.String) -> a
    2028:2084:void a(io.dcloud.common.DHInterface.IWebview,org.json.JSONArray,io.dcloud.feature.ui.c,java.lang.String) -> a
    2085:2143:void a(io.dcloud.common.DHInterface.IWebview,org.json.JSONObject,io.dcloud.feature.ui.c,java.lang.String) -> a
    2144:2153:void a(io.dcloud.common.DHInterface.IWebview,org.json.JSONArray,io.dcloud.feature.ui.c) -> a
    2154:2154:void a(io.dcloud.feature.ui.c,boolean) -> a
    2155:2164:boolean a(org.json.JSONObject,boolean) -> a
    2165:2181:java.lang.String a(java.util.ArrayList) -> a
    2182:2424:void a(io.dcloud.common.DHInterface.IWebview,io.dcloud.feature.ui.c,org.json.JSONObject,org.json.JSONObject) -> a
    2425:2429:void a(io.dcloud.feature.ui.c,org.json.JSONObject) -> a
    1:4:boolean b(io.dcloud.feature.ui.b) -> b
    5:9:void b(io.dcloud.feature.ui.c) -> b
    10:10:void b(io.dcloud.common.DHInterface.IWebview,java.lang.String) -> b
    11:56:void b(io.dcloud.common.DHInterface.IWebview,org.json.JSONArray,io.dcloud.feature.ui.c) -> b
    57:68:boolean b(java.lang.String,java.lang.String,boolean) -> b
    69:80:boolean b(java.lang.String) -> b
    1:5:io.dcloud.feature.ui.b c(java.lang.String) -> c
    6:25:void c(io.dcloud.feature.ui.b) -> c
    26:26:void c(io.dcloud.common.DHInterface.IWebview,java.lang.String) -> c
    27:60:void c(io.dcloud.common.DHInterface.IWebview,org.json.JSONArray,io.dcloud.feature.ui.c) -> c
    61:90:boolean c(java.lang.String,java.lang.String,boolean) -> c
    1:1:void d(io.dcloud.common.DHInterface.IWebview,java.lang.String) -> d
    2:2:io.dcloud.common.adapter.ui.AdaFrameItem d() -> d
    3:33:void d(io.dcloud.common.DHInterface.IWebview,org.json.JSONArray,io.dcloud.feature.ui.c) -> d
    1:1:void e(io.dcloud.common.DHInterface.IWebview,java.lang.String) -> e
    2:221:void e(io.dcloud.common.DHInterface.IWebview,org.json.JSONArray,io.dcloud.feature.ui.c) -> e
    222:242:void e() -> e
    1:1:void f(io.dcloud.common.DHInterface.IWebview,java.lang.String) -> f
    1:3:io.dcloud.common.DHInterface.INativeBitmap g(io.dcloud.common.DHInterface.IWebview,java.lang.String) -> g
    1:1:void h(io.dcloud.common.DHInterface.IWebview,java.lang.String) -> h
    2:5:java.lang.String h() -> h
    1:4:void i() -> i
    1:7:void j() -> j
    1:2:boolean k() -> k
    1:17:void l() -> l
    1:3:java.lang.String m() -> m
    1:3:java.lang.String n() -> n
    1:1:boolean o() -> o
    1:370:java.lang.Object onCallBack(java.lang.String,java.lang.Object) -> onCallBack
    1:1:boolean p() -> p
    1:1:io.dcloud.common.DHInterface.IWebview r() -> r
    1:21:void s() -> s
    1:4:void t() -> t
io.dcloud.feature.ui.c$a -> io.dcloud.feature.ui.c$a:
    1:1:void <init>(io.dcloud.feature.ui.c) -> <init>
    1:7:void run() -> run
io.dcloud.feature.ui.c$b -> io.dcloud.feature.ui.c$b:
    1:1:void <init>(io.dcloud.feature.ui.c,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> <init>
    1:18:java.lang.String callback(org.json.JSONArray) -> callback
io.dcloud.feature.ui.c$c -> io.dcloud.feature.ui.c$c:
    1:1:void <init>(io.dcloud.feature.ui.c,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> <init>
    1:1:void run() -> run
io.dcloud.feature.ui.c$d -> io.dcloud.feature.ui.c$d:
    1:1:void <init>(io.dcloud.feature.ui.c,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> <init>
    1:12:void run(io.dcloud.common.adapter.util.MessageHandler$WaitableRunnable) -> run
io.dcloud.feature.ui.c$d$a -> io.dcloud.feature.ui.c$d$a:
    1:1:void <init>(io.dcloud.feature.ui.c$d,io.dcloud.common.adapter.util.MessageHandler$WaitableRunnable) -> <init>
    1:2:java.lang.Object onCallBack(int,java.lang.Object) -> onCallBack
io.dcloud.feature.ui.c$e -> io.dcloud.feature.ui.c$e:
    1:1:void <init>(io.dcloud.feature.ui.c,io.dcloud.common.DHInterface.IWebview,java.lang.String,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> <init>
    1:5:void run() -> run
io.dcloud.feature.ui.c$f -> io.dcloud.feature.ui.c$f:
    1:1:void <init>(io.dcloud.feature.ui.c,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> <init>
    1:1:java.lang.Object onCallBack(int,java.lang.Object) -> onCallBack
io.dcloud.feature.ui.c$g -> io.dcloud.feature.ui.c$g:
    1:1:void <init>(io.dcloud.feature.ui.c,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> <init>
    1:1:java.lang.Object onCallBack(int,java.lang.Object) -> onCallBack
io.dcloud.feature.ui.c$h -> io.dcloud.feature.ui.c$h:
    1:1:void <init>(io.dcloud.feature.ui.c,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> <init>
    1:1:java.lang.Object onCallBack(int,java.lang.Object) -> onCallBack
io.dcloud.feature.ui.c$i -> io.dcloud.feature.ui.c$i:
    1:1:void <init>(io.dcloud.feature.ui.c,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> <init>
    1:1:java.lang.Object onCallBack(int,java.lang.Object) -> onCallBack
io.dcloud.feature.ui.c$j -> io.dcloud.feature.ui.c$j:
    1:1:void <init>(io.dcloud.feature.ui.c,java.lang.String,java.lang.String) -> <init>
    1:1:void run() -> run
io.dcloud.feature.ui.d -> io.dcloud.feature.ui.d:
    1:3:void <init>(java.lang.String,java.util.ArrayList,org.json.JSONObject) -> <init>
    1:1:void a(boolean) -> a
    2:2:void a(io.dcloud.common.DHInterface.IFrameView) -> a
    3:12:java.lang.String a(io.dcloud.common.DHInterface.IWebview,java.lang.String,org.json.JSONArray) -> a
    1:1:io.dcloud.common.adapter.ui.AdaFrameItem d() -> d
    1:5:void i() -> i
    1:2:java.lang.Object onCallBack(java.lang.String,java.lang.Object) -> onCallBack
io.dcloud.feature.ui.e -> io.dcloud.feature.ui.e:
    1:12:void <init>(io.dcloud.common.DHInterface.AbsMgr,java.lang.String) -> <init>
    1:1:int a(io.dcloud.feature.ui.e,android.view.View) -> a
    2:915:java.lang.String a(io.dcloud.common.DHInterface.IWebview,java.lang.String,org.json.JSONArray) -> a
    916:929:void a(java.lang.String,io.dcloud.feature.ui.a,io.dcloud.common.DHInterface.IFrameView) -> a
    930:966:io.dcloud.feature.ui.c a(io.dcloud.feature.ui.a,io.dcloud.common.DHInterface.IWebview,org.json.JSONArray,io.dcloud.common.DHInterface.IApp,java.lang.String,boolean) -> a
    967:1109:io.dcloud.feature.ui.c a(io.dcloud.feature.ui.a,io.dcloud.common.DHInterface.IWebview,io.dcloud.common.DHInterface.IApp,java.lang.String,java.lang.String,java.lang.String,org.json.JSONObject,org.json.JSONObject,org.json.JSONArray,boolean) -> a
    1110:1132:void a(io.dcloud.common.DHInterface.IWebview,io.dcloud.common.DHInterface.IApp,java.lang.String) -> a
    1133:1149:io.dcloud.feature.ui.b a(java.lang.String) -> a
    1150:1150:void a() -> a
    1151:1177:io.dcloud.nineoldandroids.animation.ValueAnimator a(android.view.View,int,int,java.lang.String,io.dcloud.common.DHInterface.IWebview,java.lang.String,io.dcloud.feature.ui.c) -> a
    1178:1181:int a(android.view.View) -> a
    1:1:java.lang.String b(io.dcloud.common.DHInterface.IWebview,java.lang.String,org.json.JSONArray) -> b
    2:27:void b(java.lang.String,io.dcloud.feature.ui.a,io.dcloud.common.DHInterface.IFrameView) -> b
    28:42:void b(java.lang.String) -> b
    1:14:java.lang.String c(java.lang.String) -> c
io.dcloud.feature.ui.e$a -> io.dcloud.feature.ui.e$a:
    1:1:void <init>(io.dcloud.feature.ui.e,io.dcloud.feature.ui.a,io.dcloud.feature.ui.c) -> <init>
    1:1:void execute(java.lang.Object) -> execute
io.dcloud.feature.ui.e$b -> io.dcloud.feature.ui.e$b:
    1:1:void <init>(io.dcloud.feature.ui.e,android.view.View) -> <init>
    1:14:void onAnimationUpdate(io.dcloud.nineoldandroids.animation.ValueAnimator) -> onAnimationUpdate
io.dcloud.feature.ui.e$c -> io.dcloud.feature.ui.e$c:
    1:1:void <init>(io.dcloud.feature.ui.e,android.view.View,io.dcloud.feature.ui.c,io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String) -> <init>
    1:21:void onAnimationEnd(io.dcloud.nineoldandroids.animation.Animator) -> onAnimationEnd
io.dcloud.feature.ui.e$d -> io.dcloud.feature.ui.e$d:
    1:1:void <clinit>() -> <clinit>
io.dcloud.feature.ui.e$e -> io.dcloud.feature.ui.e$e:
    1:3:void <clinit>() -> <clinit>
    1:1:void <init>(java.lang.String,int) -> <init>
    1:1:io.dcloud.feature.ui.e$e valueOf(java.lang.String) -> valueOf
    1:1:io.dcloud.feature.ui.e$e[] values() -> values
io.dcloud.feature.ui.nativeui.NativeUIFeatureImpl -> io.dcloud.feature.ui.nativeui.NativeUIFeatureImpl:
    1:607:void <init>() -> <init>
    1:1:void a(io.dcloud.feature.ui.nativeui.NativeUIFeatureImpl) -> a
    2:2:void a(java.lang.String) -> a
    3:276:void a(io.dcloud.common.DHInterface.IApp,io.dcloud.common.DHInterface.IWebview,java.lang.String,org.json.JSONObject) -> a
    277:410:void a(io.dcloud.common.DHInterface.IWebview,java.lang.String,org.json.JSONObject) -> a
    411:414:void a() -> a
    415:447:io.dcloud.feature.ui.nativeui.a a(java.lang.String,org.json.JSONObject,java.lang.String,io.dcloud.common.DHInterface.IWebview) -> a
    448:464:void a(byte,java.lang.String,org.json.JSONObject,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> a
    465:465:void a(byte,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> a
    466:607:void a(byte,java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,io.dcloud.common.DHInterface.IWebview,java.lang.String,int) -> a
    608:616:boolean a(java.lang.String,io.dcloud.common.DHInterface.IApp,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> a
    617:642:boolean a(byte,java.lang.String,java.lang.String[],io.dcloud.common.DHInterface.IApp,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> a
    643:656:boolean a(org.json.JSONArray,io.dcloud.common.DHInterface.IApp,java.lang.String,io.dcloud.common.DHInterface.IWebview) -> a
    657:661:void a(io.dcloud.common.DHInterface.IApp) -> a
    1:1:void b(io.dcloud.feature.ui.nativeui.NativeUIFeatureImpl) -> b
    2:4:void b() -> b
    5:116:void b(io.dcloud.common.DHInterface.IWebview,java.lang.String,org.json.JSONObject) -> b
    1:2:void dispose(java.lang.String) -> dispose
    1:852:java.lang.String execute(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String[]) -> execute
    1:1:void init(io.dcloud.common.DHInterface.AbsMgr,java.lang.String) -> init
io.dcloud.feature.ui.nativeui.NativeUIFeatureImpl$a -> io.dcloud.feature.ui.nativeui.NativeUIFeatureImpl$a:
    1:1:void <init>(io.dcloud.feature.ui.nativeui.NativeUIFeatureImpl,byte,android.widget.EditText,io.dcloud.common.DHInterface.IWebview,java.lang.String,int,android.app.AlertDialog) -> <init>
    1:17:void onClick(android.content.DialogInterface,int) -> onClick
io.dcloud.feature.ui.nativeui.NativeUIFeatureImpl$b -> io.dcloud.feature.ui.nativeui.NativeUIFeatureImpl$b:
    1:1:void <init>(io.dcloud.feature.ui.nativeui.NativeUIFeatureImpl,byte,android.widget.EditText,io.dcloud.common.DHInterface.IWebview,java.lang.String,android.app.AlertDialog) -> <init>
    1:17:boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
io.dcloud.feature.ui.nativeui.NativeUIFeatureImpl$c -> io.dcloud.feature.ui.nativeui.NativeUIFeatureImpl$c:
    1:1:void <init>(io.dcloud.feature.ui.nativeui.NativeUIFeatureImpl,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> <init>
    1:1:void onLongClickListener(org.json.JSONObject) -> onLongClickListener
io.dcloud.feature.ui.nativeui.NativeUIFeatureImpl$d -> io.dcloud.feature.ui.nativeui.NativeUIFeatureImpl$d:
    1:1:void <init>(io.dcloud.feature.ui.nativeui.NativeUIFeatureImpl,io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String) -> <init>
    1:2:boolean onDismiss(int) -> onDismiss
    1:1:void onItemClick(int) -> onItemClick
io.dcloud.feature.ui.nativeui.NativeUIFeatureImpl$e -> io.dcloud.feature.ui.nativeui.NativeUIFeatureImpl$e:
    1:1:void <init>(io.dcloud.feature.ui.nativeui.NativeUIFeatureImpl) -> <init>
    1:3:void onDateSet(android.widget.DatePicker,int,int,int) -> onDateSet
io.dcloud.feature.ui.nativeui.NativeUIFeatureImpl$f -> io.dcloud.feature.ui.nativeui.NativeUIFeatureImpl$f:
    1:12:void <init>(io.dcloud.feature.ui.nativeui.NativeUIFeatureImpl,android.content.Context,int,android.app.DatePickerDialog$OnDateSetListener,int,int,int,int,int,int,boolean,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> <init>
    1:27:void onClick(android.content.DialogInterface,int) -> onClick
    1:3:void onCreate(android.os.Bundle) -> onCreate
    1:9:void onDateChanged(android.widget.DatePicker,int,int,int) -> onDateChanged
io.dcloud.feature.ui.nativeui.NativeUIFeatureImpl$g -> io.dcloud.feature.ui.nativeui.NativeUIFeatureImpl$g:
    1:1:void <init>(io.dcloud.feature.ui.nativeui.NativeUIFeatureImpl,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> <init>
    1:8:void onDismiss(android.content.DialogInterface) -> onDismiss
io.dcloud.feature.ui.nativeui.NativeUIFeatureImpl$h -> io.dcloud.feature.ui.nativeui.NativeUIFeatureImpl$h:
    1:1:void <init>(io.dcloud.feature.ui.nativeui.NativeUIFeatureImpl) -> <init>
    1:2:void onTimeSet(android.widget.TimePicker,int,int) -> onTimeSet
io.dcloud.feature.ui.nativeui.NativeUIFeatureImpl$i -> io.dcloud.feature.ui.nativeui.NativeUIFeatureImpl$i:
    1:2:void <init>(io.dcloud.feature.ui.nativeui.NativeUIFeatureImpl,android.content.Context,android.app.TimePickerDialog$OnTimeSetListener,int,int,boolean,int,int,boolean,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> <init>
    1:28:void onClick(android.content.DialogInterface,int) -> onClick
    1:3:void onCreate(android.os.Bundle) -> onCreate
    1:4:void onTimeChanged(android.widget.TimePicker,int,int) -> onTimeChanged
io.dcloud.feature.ui.nativeui.NativeUIFeatureImpl$j -> io.dcloud.feature.ui.nativeui.NativeUIFeatureImpl$j:
    1:1:void <init>(io.dcloud.feature.ui.nativeui.NativeUIFeatureImpl,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> <init>
    1:8:void onDismiss(android.content.DialogInterface) -> onDismiss
io.dcloud.feature.ui.nativeui.NativeUIFeatureImpl$k -> io.dcloud.feature.ui.nativeui.NativeUIFeatureImpl$k:
    1:1:void <init>(io.dcloud.feature.ui.nativeui.NativeUIFeatureImpl,android.app.AlertDialog,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> <init>
    1:2:void onClick(android.content.DialogInterface,int) -> onClick
io.dcloud.feature.ui.nativeui.NativeUIFeatureImpl$l -> io.dcloud.feature.ui.nativeui.NativeUIFeatureImpl$l:
    1:1:void <init>(io.dcloud.feature.ui.nativeui.NativeUIFeatureImpl,android.app.AlertDialog,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> <init>
    1:4:boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
io.dcloud.feature.ui.nativeui.NativeUIR -> io.dcloud.feature.ui.nativeui.NativeUIR:
    1:35:void <clinit>() -> <clinit>
io.dcloud.feature.ui.nativeui.a -> io.dcloud.feature.ui.nativeui.a:
    1:18:void <init>(android.content.Context) -> <init>
    19:42:void <init>(android.content.Context,int) -> <init>
    1:1:boolean a(io.dcloud.feature.ui.nativeui.a,boolean) -> a
    2:9:void a(android.content.Context) -> a
    10:11:android.view.animation.Animation a() -> a
    12:48:android.graphics.drawable.Drawable a(int,int,boolean) -> a
    49:55:void a(int) -> a
    56:56:io.dcloud.feature.ui.nativeui.a a(float) -> a
    57:57:io.dcloud.feature.ui.nativeui.a a(java.lang.String) -> a
    58:58:io.dcloud.feature.ui.nativeui.a a(boolean) -> a
    59:77:io.dcloud.feature.ui.nativeui.a a(org.json.JSONArray) -> a
    78:78:io.dcloud.feature.ui.nativeui.a a(io.dcloud.feature.ui.nativeui.a$b) -> a
    1:3:android.view.animation.Animation b() -> b
    4:4:int b(int) -> b
    5:5:io.dcloud.feature.ui.nativeui.a b(java.lang.String) -> b
    6:6:io.dcloud.feature.ui.nativeui.a b(boolean) -> b
    1:1:android.widget.LinearLayout$LayoutParams c() -> c
    2:6:boolean c(int) -> c
    1:108:void d() -> d
    109:109:io.dcloud.feature.ui.nativeui.a d(int) -> d
    1:2:android.view.animation.Animation e() -> e
    3:3:io.dcloud.feature.ui.nativeui.a e(int) -> e
    1:3:android.view.animation.Animation f() -> f
    1:18:android.view.View g() -> g
    1:5:android.graphics.drawable.Drawable h() -> h
    1:9:void i() -> i
    1:6:void j() -> j
    1:12:void onClick(android.view.View) -> onClick
    1:7:void show() -> show
io.dcloud.feature.ui.nativeui.a$a -> io.dcloud.feature.ui.nativeui.a$a:
    1:1:void <init>(io.dcloud.feature.ui.nativeui.a) -> <init>
    1:4:void onCancel(android.content.DialogInterface) -> onCancel
io.dcloud.feature.ui.nativeui.a$c -> io.dcloud.feature.ui.nativeui.a$c:
    1:7:void <init>(io.dcloud.feature.ui.nativeui.a,java.lang.String,java.lang.String,java.lang.String) -> <init>
io.dcloud.feature.ui.nativeui.b -> io.dcloud.feature.ui.nativeui.b:
    1:1:void <clinit>() -> <clinit>
    1:23:void <init>(android.app.Activity,java.lang.String) -> <init>
    1:1:void a(io.dcloud.feature.ui.nativeui.b) -> a
    1:7:void a() -> a
    8:9:void a(android.view.View,android.widget.TextView) -> a
    9:15:void a(java.lang.String) -> a
    1:2:java.lang.Object onCallBack(int,java.lang.Object) -> onCallBack
    1:1:void setDuration(int) -> setDuration
    1:4:void setGravity(int,int,int) -> setGravity
    1:2:void setText(java.lang.CharSequence) -> setText
    0:9:void show() -> show
io.dcloud.feature.ui.nativeui.b$a -> io.dcloud.feature.ui.nativeui.b$a:
    1:1:void <init>(io.dcloud.feature.ui.nativeui.b) -> <init>
    1:1:void run() -> run
io.dcloud.feature.ui.nativeui.c -> io.dcloud.feature.ui.nativeui.c:
    1:58:void <init>(io.dcloud.feature.ui.nativeui.NativeUIFeatureImpl,io.dcloud.common.DHInterface.IWebview,java.lang.String,org.json.JSONObject,java.lang.String,android.app.Activity) -> <init>
    1:1:boolean a(io.dcloud.feature.ui.nativeui.c) -> a
    2:93:void a(io.dcloud.common.DHInterface.IWebview,org.json.JSONObject) -> a
    94:100:void a(android.view.View) -> a
    101:107:void a(java.lang.String) -> a
    108:110:int a(int) -> a
    111:119:byte[] a(java.io.InputStream) -> a
    120:124:void a() -> a
    1:1:java.lang.String b(io.dcloud.feature.ui.nativeui.c) -> b
    2:10:void b() -> b
    11:31:void b(java.lang.String) -> b
    1:1:android.app.Activity c(io.dcloud.feature.ui.nativeui.c) -> c
    2:4:void c() -> c
    1:1:io.dcloud.common.DHInterface.IWebview d(io.dcloud.feature.ui.nativeui.c) -> d
    2:31:void d() -> d
    1:3:void e() -> e
    1:7:void f() -> f
    1:65:void g() -> g
    1:24:void h() -> h
    1:10:void i() -> i
    1:19:void j() -> j
    1:14:void onDismiss() -> onDismiss
    1:11:boolean onExecute(io.dcloud.common.DHInterface.ISysEventListener$SysEventType,java.lang.Object) -> onExecute
io.dcloud.feature.ui.nativeui.c$a -> io.dcloud.feature.ui.nativeui.c$a:
    1:1:void <init>(io.dcloud.feature.ui.nativeui.c) -> <init>
    1:1:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
io.dcloud.feature.ui.nativeui.c$b -> io.dcloud.feature.ui.nativeui.c$b:
    1:1:void <init>(io.dcloud.feature.ui.nativeui.c) -> <init>
    1:20:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
io.dcloud.feature.ui.nativeui.c$c -> io.dcloud.feature.ui.nativeui.c$c:
    1:1:void <init>(io.dcloud.feature.ui.nativeui.c) -> <init>
    1:2:void onClick(android.view.View) -> onClick
io.dcloud.feature.ui.navigator.NavigatorUIFeatureImpl -> io.dcloud.feature.ui.navigator.NavigatorUIFeatureImpl:
    1:1:void <init>() -> <init>
    1:1:boolean a(io.dcloud.feature.ui.navigator.NavigatorUIFeatureImpl,io.dcloud.common.DHInterface.IWebview,java.lang.String[],io.dcloud.common.DHInterface.IApp,java.lang.String) -> a
    2:54:boolean a(io.dcloud.common.DHInterface.IWebview,java.lang.String[],io.dcloud.common.DHInterface.IApp,java.lang.String) -> a
    55:72:void a(android.content.Context,io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String) -> a
    73:75:android.graphics.Bitmap a(io.dcloud.common.DHInterface.IApp) -> a
    76:121:void a(io.dcloud.common.DHInterface.IWebview,java.lang.String,android.graphics.Bitmap,java.lang.String,java.lang.String,org.json.JSONObject,boolean,boolean,java.lang.String) -> a
    1:19:void b(android.content.Context,io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String) -> b
    20:23:java.lang.String b(io.dcloud.common.DHInterface.IApp) -> b
    1:1920:java.lang.String execute(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String[]) -> execute
    1:1:void init(io.dcloud.common.DHInterface.AbsMgr,java.lang.String) -> init
io.dcloud.feature.ui.navigator.NavigatorUIFeatureImpl$a -> io.dcloud.feature.ui.navigator.NavigatorUIFeatureImpl$a:
    1:1:void <init>(io.dcloud.feature.ui.navigator.NavigatorUIFeatureImpl,io.dcloud.common.DHInterface.IApp,io.dcloud.common.DHInterface.IWebview,java.lang.String[],io.dcloud.common.DHInterface.IApp,java.lang.String) -> <init>
    1:1:void onGranted(java.lang.String) -> onGranted
io.dcloud.feature.ui.navigator.NavigatorUIFeatureImpl$b -> io.dcloud.feature.ui.navigator.NavigatorUIFeatureImpl$b:
    1:1:void <init>(io.dcloud.feature.ui.navigator.NavigatorUIFeatureImpl,int,io.dcloud.common.DHInterface.IApp,io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String) -> <init>
    1:14:boolean onExecute(io.dcloud.common.DHInterface.ISysEventListener$SysEventType,java.lang.Object) -> onExecute
io.dcloud.feature.ui.navigator.NavigatorUIFeatureImpl$c -> io.dcloud.feature.ui.navigator.NavigatorUIFeatureImpl$c:
    1:1:void <init>(io.dcloud.feature.ui.navigator.NavigatorUIFeatureImpl,android.content.Context,java.lang.String,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> <init>
    1:9:void run() -> run
io.dcloud.feature.ui.navigator.QueryNotchTool -> io.dcloud.feature.ui.navigator.QueryNotchTool:
    1:1:void <init>() -> <init>
    1:8:boolean hasNotchInHuawei(android.content.Context) -> hasNotchInHuawei
    1:1:boolean hasNotchInOppo(android.content.Context) -> hasNotchInOppo
    1:11:boolean hasNotchInScreen(android.app.Activity) -> hasNotchInScreen
    1:6:boolean hasNotchInVoio(android.content.Context) -> hasNotchInVoio
    1:3:boolean hasNotchInXiaomi(android.content.Context) -> hasNotchInXiaomi
    1:5:android.view.DisplayCutout isAndroidP(android.app.Activity) -> isAndroidP
io.dcloud.feature.uniapp.AbsSDKEngine -> io.dcloud.feature.uniapp.AbsSDKEngine:
    23:23:void <init>() -> <init>
io.dcloud.feature.uniapp.UniMoudlesLoader -> io.dcloud.feature.uniapp.UniMoudlesLoader:
    24:24:void <init>() -> <init>
io.dcloud.feature.uniapp.UniSDKEngine -> io.dcloud.feature.uniapp.UniSDKEngine:
    43:43:void <init>() -> <init>
    85:85:boolean registerModuleWithFactory(java.lang.String,io.dcloud.feature.uniapp.ui.IExternalUniModuleGetter,boolean) -> registerModuleWithFactory
    57:57:boolean registerUniComponent(java.lang.String,java.lang.Class) -> registerUniComponent
    61:61:boolean registerUniComponent(java.lang.String,java.lang.Class,boolean) -> registerUniComponent
    65:65:boolean registerUniComponent(java.lang.String,io.dcloud.feature.uniapp.ui.IExternalUniComponentGetter,boolean) -> registerUniComponent
    69:69:boolean registerUniComponent(java.lang.Class,boolean,java.lang.String[]) -> registerUniComponent
    73:73:boolean registerUniComponent(io.dcloud.feature.uniapp.ui.IFUniComponentHolder,boolean,java.lang.String[]) -> registerUniComponent
    77:77:boolean registerUniModule(java.lang.String,java.lang.Class,boolean) -> registerUniModule
    89:89:boolean registerUniModule(java.lang.String,io.dcloud.feature.uniapp.bridge.UniModuleFactory,boolean) -> registerUniModule
    93:93:boolean registerUniModule(java.lang.String,java.lang.Class) -> registerUniModule
    81:81:boolean registerUniModuleWithFactory(java.lang.String,io.dcloud.feature.uniapp.UniSDKEngine$DestroyableUniModuleFactory,boolean) -> registerUniModuleWithFactory
    53:53:boolean registerUniVContainer(java.lang.String,java.lang.Class) -> registerUniVContainer
io.dcloud.feature.uniapp.UniSDKEngine$DestroyableUniModule -> io.dcloud.feature.uniapp.UniSDKEngine$DestroyableUniModule:
    45:45:void <init>() -> <init>
io.dcloud.feature.uniapp.UniSDKEngine$DestroyableUniModuleFactory -> io.dcloud.feature.uniapp.UniSDKEngine$DestroyableUniModuleFactory:
    48:49:void <init>(java.lang.Class) -> <init>
io.dcloud.feature.uniapp.UniSDKInstance -> io.dcloud.feature.uniapp.UniSDKInstance:
    29:45:void <init>(android.content.Context) -> <init>
    33:45:void <init>() -> <init>
    38:45:void <init>(android.content.Context,java.lang.String) -> <init>
    52:52:boolean isCompilerWithUniapp() -> isCompilerWithUniapp
    26:26:com.taobao.weex.WXSDKInstance newNestedInstance() -> newNestedInstance
    42:42:io.dcloud.feature.uniapp.UniSDKInstance newNestedInstance() -> newNestedInstance
    47:48:void setCompilerWithUniapp(boolean) -> setCompilerWithUniapp
io.dcloud.feature.uniapp.common.TypeUniModuleFactory -> io.dcloud.feature.uniapp.common.TypeUniModuleFactory:
    40:42:void <init>(java.lang.Class) -> <init>
    35:35:com.taobao.weex.common.WXModule buildInstance() -> buildInstance
    86:86:io.dcloud.feature.uniapp.common.UniModule buildInstance() -> buildInstance
    45:81:void generateMethodMap() -> generateMethodMap
    100:103:com.taobao.weex.bridge.Invoker getMethodInvoker(java.lang.String) -> getMethodInvoker
    91:95:java.lang.String[] getMethods() -> getMethods
io.dcloud.feature.uniapp.common.UniConstants -> io.dcloud.feature.uniapp.common.UniConstants:
    23:23:void <init>() -> <init>
io.dcloud.feature.uniapp.common.UniDestroyableModule -> io.dcloud.feature.uniapp.common.UniDestroyableModule:
    23:23:void <init>() -> <init>
io.dcloud.feature.uniapp.common.UniException -> io.dcloud.feature.uniapp.common.UniException:
    25:26:void <init>(java.lang.String) -> <init>
io.dcloud.feature.uniapp.common.UniModule -> io.dcloud.feature.uniapp.common.UniModule:
    23:23:void <init>() -> <init>
io.dcloud.feature.uniapp.dom.AbsAttr -> io.dcloud.feature.uniapp.dom.AbsAttr:
    74:76:void <init>() -> <init>
    78:80:void <init>(java.util.Map) -> <init>
    82:84:void <init>(java.util.Map,int) -> <init>
    519:559:boolean addBindingAttrIfStatement(java.lang.String,java.lang.Object) -> addBindingAttrIfStatement
    194:204:boolean autoPlay() -> autoPlay
    167:176:boolean canRecycled() -> canRecycled
    388:389:void clear() -> clear
    49:49:java.lang.Object clone() -> clone
    393:393:boolean containsKey(java.lang.Object) -> containsKey
    398:398:boolean containsValue(java.lang.Object) -> containsValue
    404:404:java.util.Set entrySet() -> entrySet
    378:378:boolean equals(java.lang.Object) -> equals
    496:512:java.util.Map filterStatementsFromAttrs(java.util.Map) -> filterStatementsFromAttrs
    409:416:java.lang.Object get(java.lang.Object) -> get
    55:55:java.util.Map getAttr() -> getAttr
    467:467:androidx.collection.ArrayMap getBindingAttrs() -> getBindingAttrs
    314:329:int getColumnCount() -> getColumnCount
    335:351:float getColumnGap() -> getColumnGap
    293:309:float getColumnWidth() -> getColumnWidth
    278:288:float getElevation(float) -> getElevation
    128:138:com.taobao.weex.dom.WXImageQuality getImageQuality() -> getImageQuality
    142:155:com.taobao.weex.common.WXImageSharpen getImageSharpen() -> getImageSharpen
    159:163:java.lang.String getImageSrc() -> getImageSrc
    243:253:boolean getIsRecycleImage() -> getIsRecycleImage
    355:372:int getLayoutType() -> getLayoutType
    223:227:java.lang.String getLoadMoreOffset() -> getLoadMoreOffset
    215:219:java.lang.String getLoadMoreRetry() -> getLoadMoreRetry
    264:274:int getOrientation() -> getOrientation
    87:94:java.lang.String getPrefix(java.util.Map) -> getPrefix
    208:212:java.lang.String getScope() -> getScope
    256:260:java.lang.String getScrollDirection() -> getScrollDirection
    474:474:com.taobao.weex.dom.binding.WXStatement getStatement() -> getStatement
    98:105:java.lang.String getSuffix(java.util.Map) -> getSuffix
    114:124:java.lang.String getValue(java.util.Map) -> getValue
    383:383:int hashCode() -> hashCode
    421:421:boolean isEmpty() -> isEmpty
    427:427:java.util.Set keySet() -> keySet
    568:572:void mergeAttr() -> mergeAttr
    231:239:java.lang.String optString(java.lang.String) -> optString
    487:490:void parseStatements() -> parseStatements
    49:49:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    432:435:java.lang.Object put(java.lang.String,java.lang.Object) -> put
    441:445:void putAll(java.util.Map) -> putAll
    449:449:java.lang.Object remove(java.lang.Object) -> remove
    479:480:void setBindingAttrs(androidx.collection.ArrayMap) -> setBindingAttrs
    483:484:void setStatement(com.taobao.weex.dom.binding.WXStatement) -> setStatement
    180:190:boolean showIndicators() -> showIndicators
    454:454:int size() -> size
    563:564:void skipFilterPutAll(java.util.Map) -> skipFilterPutAll
    580:580:java.lang.String toString() -> toString
    460:460:java.util.Collection values() -> values
io.dcloud.feature.uniapp.dom.AbsCSSShorthand -> io.dcloud.feature.uniapp.dom.AbsCSSShorthand:
    49:51:void <init>(float[]) -> <init>
    54:55:void <init>() -> <init>
    57:62:void <init>(boolean) -> <init>
    29:29:java.lang.Object clone() -> clone
    101:101:io.dcloud.feature.uniapp.dom.AbsCSSShorthand clone() -> clone
    81:81:float get(java.lang.Enum) -> get
    91:91:float get(io.dcloud.feature.uniapp.dom.AbsCSSShorthand$CORNER) -> get
    113:113:float getInternal(java.lang.Enum) -> getInternal
    96:97:void replace(float[]) -> replace
    66:67:void set(java.lang.Enum,float) -> set
    71:72:void set(io.dcloud.feature.uniapp.dom.AbsCSSShorthand$CORNER,float) -> set
    105:110:void setInternal(java.lang.Enum,float) -> setInternal
    119:119:java.lang.String toString() -> toString
io.dcloud.feature.uniapp.dom.AbsCSSShorthand$CORNER -> io.dcloud.feature.uniapp.dom.AbsCSSShorthand$CORNER:
    38:40:void <clinit>() -> <clinit>
    38:38:void <init>(java.lang.String,int) -> <init>
    38:38:io.dcloud.feature.uniapp.dom.AbsCSSShorthand$CORNER valueOf(java.lang.String) -> valueOf
    38:38:io.dcloud.feature.uniapp.dom.AbsCSSShorthand$CORNER[] values() -> values
io.dcloud.feature.uniapp.dom.AbsCSSShorthand$EDGE -> io.dcloud.feature.uniapp.dom.AbsCSSShorthand$EDGE:
    34:35:void <clinit>() -> <clinit>
    34:34:void <init>(java.lang.String,int) -> <init>
    34:34:io.dcloud.feature.uniapp.dom.AbsCSSShorthand$EDGE valueOf(java.lang.String) -> valueOf
    34:34:io.dcloud.feature.uniapp.dom.AbsCSSShorthand$EDGE[] values() -> values
io.dcloud.feature.uniapp.dom.AbsCSSShorthand$TYPE -> io.dcloud.feature.uniapp.dom.AbsCSSShorthand$TYPE:
    43:44:void <clinit>() -> <clinit>
    43:43:void <init>(java.lang.String,int) -> <init>
    43:43:io.dcloud.feature.uniapp.dom.AbsCSSShorthand$TYPE valueOf(java.lang.String) -> valueOf
    43:43:io.dcloud.feature.uniapp.dom.AbsCSSShorthand$TYPE[] values() -> values
io.dcloud.feature.uniapp.dom.AbsEvent -> io.dcloud.feature.uniapp.dom.AbsEvent:
    31:31:void <init>() -> <init>
    156:165:void addBindingArgsEvent(java.lang.String,java.lang.Object) -> addBindingArgsEvent
    143:148:java.lang.String addBindingEvent(com.alibaba.fastjson.JSONObject) -> addBindingEvent
    97:110:void addEvent(java.lang.Object) -> addEvent
    65:72:void clear() -> clear
    31:31:java.lang.Object clone() -> clone
    89:89:androidx.collection.ArrayMap getEventBindingArgs() -> getEventBindingArgs
    93:93:androidx.collection.ArrayMap getEventBindingArgsValues() -> getEventBindingArgsValues
    115:125:java.lang.String getEventName(java.lang.Object) -> getEventName
    130:140:void parseStatements() -> parseStatements
    168:176:void putEventBindingArgsValue(java.lang.String,java.util.List) -> putEventBindingArgsValue
    76:82:boolean remove(java.lang.String) -> remove
    152:153:void setEventBindingArgs(androidx.collection.ArrayMap) -> setEventBindingArgs
    57:58:void setEventBindingArgsValues(androidx.collection.ArrayMap) -> setEventBindingArgsValues
io.dcloud.feature.uniapp.dom.AbsStyle -> io.dcloud.feature.uniapp.dom.AbsStyle:
    59:61:void <init>() -> <init>
    63:66:void <init>(java.util.Map) -> <init>
    69:71:void <init>(java.util.Map,boolean) -> <init>
    510:518:boolean addBindingStyleIfStatement(java.lang.String,java.lang.Object) -> addBindingStyleIfStatement
    328:329:void clear() -> clear
    40:40:java.lang.Object clone() -> clone
    333:333:boolean containsKey(java.lang.Object) -> containsKey
    338:338:boolean containsValue(java.lang.Object) -> containsValue
    344:344:java.util.Set entrySet() -> entrySet
    318:318:boolean equals(java.lang.Object) -> equals
    349:349:java.lang.Object get(java.lang.Object) -> get
    290:291:java.lang.String getBackgroundColor() -> getBackgroundColor
    522:522:androidx.collection.ArrayMap getBindingStyle() -> getBindingStyle
    75:78:java.lang.String getBlur() -> getBlur
    229:230:java.lang.String getBorderColor() -> getBorderColor
    221:225:float getBorderRadius() -> getBorderRadius
    234:235:java.lang.String getBorderStyle() -> getBorderStyle
    279:283:float getBottom() -> getBottom
    165:173:java.lang.String getFontFamily(java.util.Map) -> getFontFamily
    154:161:int getFontSize(java.util.Map,int,float) -> getFontSize
    138:150:int getFontStyle(java.util.Map) -> getFontStyle
    118:134:int getFontWeight(java.util.Map) -> getFontWeight
    255:259:float getLeft() -> getLeft
    209:217:int getLineHeight(java.util.Map,float) -> getLineHeight
    205:205:int getLines(java.util.Map) -> getLines
    303:308:float getOpacity() -> getOpacity
    312:313:java.lang.String getOverflow() -> getOverflow
    395:398:java.util.Map getPesudoResetStyles() -> getPesudoResetStyles
    402:405:java.util.Map getPesudoStyles() -> getPesudoStyles
    263:267:float getRight() -> getRight
    177:177:android.text.Layout$Alignment getTextAlignment(java.util.Map) -> getTextAlignment
    181:192:android.text.Layout$Alignment getTextAlignment(java.util.Map,boolean) -> getTextAlignment
    110:114:java.lang.String getTextColor(java.util.Map) -> getTextColor
    87:106:com.taobao.weex.ui.component.WXTextDecoration getTextDecoration(java.util.Map) -> getTextDecoration
    196:201:android.text.TextUtils$TruncateAt getTextOverflow(java.util.Map) -> getTextOverflow
    295:299:int getTimeFontSize(int) -> getTimeFontSize
    271:275:float getTop() -> getTop
    323:323:int hashCode() -> hashCode
    463:472:void initPesudoMapsIfNeed(java.util.Map) -> initPesudoMapsIfNeed
    354:354:boolean isEmpty() -> isEmpty
    247:251:boolean isFixed() -> isFixed
    239:243:boolean isSticky() -> isSticky
    360:360:java.util.Set keySet() -> keySet
    486:503:java.util.Map parseBindingStylesStatements(java.util.Map) -> parseBindingStylesStatements
    477:480:void parseStatements() -> parseStatements
    409:442:void processPesudoClasses(java.util.Map) -> processPesudoClasses
    40:40:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    365:368:java.lang.Object put(java.lang.String,java.lang.Object) -> put
    373:374:void putAll(java.util.Map) -> putAll
    382:386:void putAll(java.util.Map,boolean) -> putAll
    446:446:java.lang.Object remove(java.lang.Object) -> remove
    451:451:int size() -> size
    531:531:java.lang.String toString() -> toString
    389:391:void updateStyle(java.util.Map,boolean) -> updateStyle
    457:457:java.util.Collection values() -> values
io.dcloud.feature.uniapp.dom.UniCSSConstants -> io.dcloud.feature.uniapp.dom.UniCSSConstants:
    23:23:void <init>() -> <init>
io.dcloud.feature.uniapp.dom.UniStyle -> io.dcloud.feature.uniapp.dom.UniStyle:
    23:23:void <init>() -> <init>
io.dcloud.feature.uniapp.layout.UniContentBoxMeasurement -> io.dcloud.feature.uniapp.layout.UniContentBoxMeasurement:
    23:23:void <init>() -> <init>
io.dcloud.feature.uniapp.ui.IExternalUniComponentGetter -> io.dcloud.feature.uniapp.ui.IExternalUniComponentGetter:
    25:25:void <init>() -> <init>
    28:28:java.lang.Class getExternalComponentClass(java.lang.String,com.taobao.weex.WXSDKInstance) -> getExternalComponentClass
io.dcloud.feature.uniapp.ui.action.AbsComponentData -> io.dcloud.feature.uniapp.ui.action.AbsComponentData:
    50:56:void <init>(java.lang.String,java.lang.String,java.lang.String) -> <init>
    74:82:void addAttr(java.util.Map) -> addAttr
    197:201:void addBorder(com.taobao.weex.dom.CSSShorthand$EDGE,float) -> addBorder
    85:92:void addEvent(java.util.Set) -> addEvent
    183:187:void addMargin(com.taobao.weex.dom.CSSShorthand$EDGE,float) -> addMargin
    190:194:void addPadding(com.taobao.weex.dom.CSSShorthand$EDGE,float) -> addPadding
    95:125:void addShorthand(float[],io.dcloud.feature.uniapp.dom.AbsCSSShorthand$TYPE) -> addShorthand
    128:180:void addShorthand(java.util.Map) -> addShorthand
    59:60:void addStyle(java.util.Map) -> addStyle
    63:71:void addStyle(java.util.Map,boolean) -> addStyle
    39:39:java.lang.Object clone() -> clone
    211:214:io.dcloud.feature.uniapp.dom.AbsAttr getAttrs() -> getAttrs
    248:251:io.dcloud.feature.uniapp.dom.AbsCSSShorthand getBorder() -> getBorder
    218:221:io.dcloud.feature.uniapp.dom.AbsEvent getEvents() -> getEvents
    228:231:io.dcloud.feature.uniapp.dom.AbsCSSShorthand getMargin() -> getMargin
    238:241:io.dcloud.feature.uniapp.dom.AbsCSSShorthand getPadding() -> getPadding
    271:271:long getRenderObjectPr() -> getRenderObjectPr
    204:207:io.dcloud.feature.uniapp.dom.AbsStyle getStyles() -> getStyles
    275:275:boolean isRenderPtrEmpty() -> isRenderPtrEmpty
    263:264:void setBorders(com.taobao.weex.dom.CSSShorthand) -> setBorders
    255:256:void setMargins(com.taobao.weex.dom.CSSShorthand) -> setMargins
    259:260:void setPaddings(com.taobao.weex.dom.CSSShorthand) -> setPaddings
    278:285:void setRenderObjectPr(long) -> setRenderObjectPr
io.dcloud.feature.uniapp.ui.action.AbsComponentData$1 -> io.dcloud.feature.uniapp.ui.action.AbsComponentData$1:
    99:99:void <clinit>() -> <clinit>
io.dcloud.feature.uniapp.ui.animation.UniAnimationBean -> io.dcloud.feature.uniapp.ui.animation.UniAnimationBean:
    23:23:void <init>() -> <init>
io.dcloud.feature.uniapp.ui.component.AbsBasicComponent -> io.dcloud.feature.uniapp.ui.component.AbsBasicComponent:
    46:52:void <init>(io.dcloud.feature.uniapp.ui.action.AbsComponentData) -> <init>
    112:116:void addAttr(java.util.Map) -> addAttr
    140:145:void addEvent(java.util.Set) -> addEvent
    148:151:void addShorthand(java.util.Map) -> addShorthand
    119:123:void addStyle(java.util.Map) -> addStyle
    126:130:void addStyle(java.util.Map,boolean) -> addStyle
    59:61:void bindComponent(io.dcloud.feature.uniapp.ui.component.AbsBasicComponent) -> bindComponent
    69:69:io.dcloud.feature.uniapp.dom.AbsAttr getAttrs() -> getAttrs
    55:55:io.dcloud.feature.uniapp.ui.action.AbsComponentData getBasicComponentData() -> getBasicComponentData
    96:96:io.dcloud.feature.uniapp.dom.AbsCSSShorthand getBorder() -> getBorder
    216:216:float getCSSLayoutBottom() -> getCSSLayoutBottom
    220:220:float getCSSLayoutLeft() -> getCSSLayoutLeft
    224:224:float getCSSLayoutRight() -> getCSSLayoutRight
    212:212:float getCSSLayoutTop() -> getCSSLayoutTop
    174:174:java.lang.String getComponentType() -> getComponentType
    74:74:io.dcloud.feature.uniapp.dom.AbsEvent getEvents() -> getEvents
    166:166:java.lang.Object getExtra() -> getExtra
    232:232:float getLayoutHeight() -> getLayoutHeight
    190:193:com.taobao.weex.ui.action.GraphicPosition getLayoutPosition() -> getLayoutPosition
    201:204:com.taobao.weex.ui.action.GraphicSize getLayoutSize() -> getLayoutSize
    228:228:float getLayoutWidth() -> getLayoutWidth
    81:81:io.dcloud.feature.uniapp.dom.AbsCSSShorthand getMargin() -> getMargin
    89:89:io.dcloud.feature.uniapp.dom.AbsCSSShorthand getPadding() -> getPadding
    178:178:java.lang.String getRef() -> getRef
    64:64:io.dcloud.feature.uniapp.dom.AbsStyle getStyles() -> getStyles
    158:158:int getViewPortWidth() -> getViewPortWidth
    154:154:float getViewPortWidthForFloat() -> getViewPortWidthForFloat
    186:186:boolean isLayoutRTL() -> isLayoutRTL
    108:109:void setBorders(com.taobao.weex.dom.CSSShorthand) -> setBorders
    182:183:void setIsLayoutRTL(boolean) -> setIsLayoutRTL
    197:198:void setLayoutPosition(com.taobao.weex.ui.action.GraphicPosition) -> setLayoutPosition
    208:209:void setLayoutSize(com.taobao.weex.ui.action.GraphicSize) -> setLayoutSize
    100:101:void setMargins(com.taobao.weex.dom.CSSShorthand) -> setMargins
    104:105:void setPaddings(com.taobao.weex.dom.CSSShorthand) -> setPaddings
    162:163:void setViewPortWidth(float) -> setViewPortWidth
    170:171:void updateExtra(java.lang.Object) -> updateExtra
    133:137:void updateStyle(java.util.Map,boolean) -> updateStyle
io.dcloud.feature.uniapp.ui.component.AbsVContainer -> io.dcloud.feature.uniapp.ui.component.AbsVContainer:
    50:51:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,java.lang.String,boolean,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    46:56:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,boolean,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    46:60:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    254:255:void addChild(com.taobao.weex.ui.component.WXComponent) -> addChild
    258:270:void addChild(com.taobao.weex.ui.component.WXComponent,int) -> addChild
    301:316:void addSubView(android.view.View,int) -> addSubView
    576:576:void appendTreeCreateFinish() -> appendTreeCreateFinish
    104:115:void applyLayoutAndEvent(io.dcloud.feature.uniapp.ui.component.AbsBasicComponent) -> applyLayoutAndEvent
    155:165:void bindComponentData(io.dcloud.feature.uniapp.ui.component.AbsBasicComponent) -> bindComponentData
    238:238:int childCount() -> childCount
    277:285:void createChildViewAt(int) -> createChildViewAt
    189:197:void createViewImpl() -> createViewImpl
    201:209:void destroy() -> destroy
    227:234:android.view.View detachViewAndClearPreInfo() -> detachViewAndClearPreInfo
    538:551:void doViewTreeRecycleImageView(android.view.ViewGroup,boolean) -> doViewTreeRecycleImageView
    242:246:com.taobao.weex.ui.component.WXComponent getChild(int) -> getChild
    250:250:int getChildCount() -> getChildCount
    121:135:android.view.ViewGroup$LayoutParams getChildLayoutParams(com.taobao.weex.ui.component.WXComponent,android.view.View,int,int,int,int,int,int) -> getChildLayoutParams
    91:91:int getChildrenLayoutTopOffset() -> getChildrenLayoutTopOffset
    140:150:com.taobao.weex.ui.component.Scrollable getFirstScroller() -> getFirstScroller
    45:45:android.view.View getRealView() -> getRealView
    184:184:android.view.ViewGroup getRealView() -> getRealView
    45:45:android.view.View getView() -> getView
    99:99:android.view.ViewGroup getView() -> getView
    79:85:void ignoreFocus() -> ignoreFocus
    273:273:int indexOf(com.taobao.weex.ui.component.WXComponent) -> indexOf
    66:73:void interceptFocus() -> interceptFocus
    352:362:void notifyAppearStateChange(java.lang.String,java.lang.String) -> notifyAppearStateChange
    431:437:boolean onActivityBack() -> onActivityBack
    369:375:void onActivityCreate() -> onActivityCreate
    420:427:void onActivityDestroy() -> onActivityDestroy
    390:396:void onActivityPause() -> onActivityPause
    442:449:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    400:406:void onActivityResume() -> onActivityResume
    379:386:void onActivityStart() -> onActivityStart
    410:416:void onActivityStop() -> onActivityStop
    452:458:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    474:480:void onRenderFinish(int) -> onRenderFinish
    464:470:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    288:296:android.util.Pair rearrangeIndexAndGetChild(int) -> rearrangeIndexAndGetChild
    510:532:void recoverImageList(java.lang.String) -> recoverImageList
    215:223:void recycled() -> recycled
    169:177:void refreshData(com.taobao.weex.ui.component.WXComponent) -> refreshData
    484:506:void releaseImageList(java.lang.String) -> releaseImageList
    319:348:void remove(com.taobao.weex.ui.component.WXComponent,boolean) -> remove
    555:564:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
io.dcloud.feature.uniapp.ui.component.UniAnimationHolder -> io.dcloud.feature.uniapp.ui.component.UniAnimationHolder:
    34:37:void <init>(io.dcloud.feature.uniapp.ui.animation.UniAnimationBean,java.lang.String) -> <init>
    41:45:void execute(io.dcloud.feature.uniapp.AbsSDKInstance,io.dcloud.feature.uniapp.ui.component.AbsBasicComponent) -> execute
io.dcloud.feature.uniapp.ui.component.UniComponent -> io.dcloud.feature.uniapp.ui.component.UniComponent:
    38:40:void <init>(io.dcloud.feature.uniapp.UniSDKInstance,io.dcloud.feature.uniapp.ui.component.AbsVContainer,int,io.dcloud.feature.uniapp.ui.action.AbsComponentData) -> <init>
    43:45:void <init>(io.dcloud.feature.uniapp.UniSDKInstance,io.dcloud.feature.uniapp.ui.component.AbsVContainer,io.dcloud.feature.uniapp.ui.action.AbsComponentData) -> <init>
    92:93:void addClickListener(io.dcloud.feature.uniapp.ui.component.UniComponent$OnClickListener) -> addClickListener
    88:89:void addFocusChangeListener(io.dcloud.feature.uniapp.ui.component.UniComponent$OnFocusChangeListener) -> addFocusChangeListener
    62:63:void bindData(com.taobao.weex.ui.component.WXComponent) -> bindData
    75:76:void bindHolder(io.dcloud.feature.uniapp.ui.AbsIComponentHolder) -> bindHolder
    80:81:void bindHolder(com.taobao.weex.ui.IFComponentHolder) -> bindHolder
    103:105:void destroy() -> destroy
    66:71:io.dcloud.feature.uniapp.ui.component.AbsBasicComponent findUniComponent(java.lang.String) -> findUniComponent
    48:48:io.dcloud.feature.uniapp.UniSDKInstance getUniInstance() -> getUniInstance
    84:85:void postAnimation(io.dcloud.feature.uniapp.ui.component.UniAnimationHolder) -> postAnimation
    52:53:void updateStyles(io.dcloud.feature.uniapp.ui.component.UniComponent) -> updateStyles
    57:58:void updateStyles(com.taobao.weex.ui.component.WXComponent) -> updateStyles
io.dcloud.feature.uniapp.ui.component.UniVContainer -> io.dcloud.feature.uniapp.ui.component.UniVContainer:
    32:33:void <init>(io.dcloud.feature.uniapp.UniSDKInstance,io.dcloud.feature.uniapp.ui.component.AbsVContainer,java.lang.String,boolean,io.dcloud.feature.uniapp.ui.action.AbsComponentData) -> <init>
    36:37:void <init>(io.dcloud.feature.uniapp.UniSDKInstance,io.dcloud.feature.uniapp.ui.component.AbsVContainer,boolean,io.dcloud.feature.uniapp.ui.action.AbsComponentData) -> <init>
    40:41:void <init>(io.dcloud.feature.uniapp.UniSDKInstance,io.dcloud.feature.uniapp.ui.component.AbsVContainer,io.dcloud.feature.uniapp.ui.action.AbsComponentData) -> <init>
    29:29:com.taobao.weex.WXSDKInstance getInstance() -> getInstance
    45:45:io.dcloud.feature.uniapp.UniSDKInstance getInstance() -> getInstance
io.dcloud.feature.uniapp.utils.UniLogLevel -> io.dcloud.feature.uniapp.utils.UniLogLevel:
    23:32:void <clinit>() -> <clinit>
    37:41:void <init>(java.lang.String,int,java.lang.String,int,int) -> <init>
    60:60:int compare(io.dcloud.feature.uniapp.utils.AbsLogLevel) -> compare
    45:45:java.lang.String getName() -> getName
    55:55:int getPriority() -> getPriority
    50:50:int getValue() -> getValue
    23:23:io.dcloud.feature.uniapp.utils.UniLogLevel valueOf(java.lang.String) -> valueOf
    23:23:io.dcloud.feature.uniapp.utils.UniLogLevel[] values() -> values
io.dcloud.feature.uniapp.utils.UniLogUtils -> io.dcloud.feature.uniapp.utils.UniLogUtils:
    23:23:void <init>() -> <init>
    32:33:void d(java.lang.String) -> d
    36:37:void d(java.lang.String,byte[]) -> d
    60:61:void e(java.lang.String) -> e
    64:65:void e(java.lang.String,byte[]) -> e
    40:41:void i(java.lang.String) -> i
    44:45:void i(java.lang.String,byte[]) -> i
    48:49:void info(java.lang.String) -> info
    28:29:void v(java.lang.String) -> v
    52:53:void w(java.lang.String) -> w
    56:57:void w(java.lang.String,byte[]) -> w
io.dcloud.feature.uniapp.utils.UniResourceUtils -> io.dcloud.feature.uniapp.utils.UniResourceUtils:
    23:23:void <init>() -> <init>
io.dcloud.feature.uniapp.utils.UniUtils -> io.dcloud.feature.uniapp.utils.UniUtils:
    23:23:void <init>() -> <init>
io.dcloud.feature.uniapp.utils.UniViewUtils -> io.dcloud.feature.uniapp.utils.UniViewUtils:
    23:23:void <init>() -> <init>
    26:26:int getUniHeight(java.lang.String) -> getUniHeight
io.dcloud.feature.weex.WXAnalyzerDelegate -> io.dcloud.feature.weex.WXAnalyzerDelegate:
    36:36:void <clinit>() -> <clinit>
    39:53:void <init>(android.content.Context) -> <init>
    56:65:void onCreate() -> onCreate
    118:127:void onDestroy() -> onDestroy
    158:170:void onException(com.taobao.weex.WXSDKInstance,java.lang.String,java.lang.String) -> onException
    145:153:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    94:103:void onPause() -> onPause
    81:90:void onResume() -> onResume
    69:78:void onStart() -> onStart
    106:115:void onStop() -> onStop
    131:141:void onWeexRenderSuccess(com.taobao.weex.WXSDKInstance) -> onWeexRenderSuccess
    173:182:android.view.View onWeexViewCreated(com.taobao.weex.WXSDKInstance,android.view.View) -> onWeexViewCreated
io.dcloud.feature.weex.WXBaseWrapper -> io.dcloud.feature.weex.WXBaseWrapper:
    30:30:void <clinit>() -> <clinit>
    28:35:void <init>(android.content.Context) -> <init>
    106:107:void beginPullRefresh() -> beginPullRefresh
    135:137:void destroy() -> destroy
    111:112:void endPullToRefresh() -> endPullToRefresh
    174:174:java.lang.String evalJs(java.lang.String,int) -> evalJs
    165:169:boolean fireGlobalEvent(java.lang.String,java.util.Map) -> fireGlobalEvent
    126:126:java.lang.String getType() -> getType
    47:67:void initRefresh(org.json.JSONObject) -> initRefresh
    161:161:void loadTemplate(org.json.JSONObject) -> loadTemplate
    155:155:android.view.ViewGroup obtainMainView() -> obtainMainView
    187:193:void onActivityPause() -> onActivityPause
    196:199:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    178:184:void onActivityResume() -> onActivityResume
    131:132:void onDestroy() -> onDestroy
    39:39:void onReady() -> onReady
    43:43:void onRefresh() -> onRefresh
    202:205:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    70:102:void parseData(org.json.JSONObject) -> parseData
    140:151:void recoveryInstance() -> recoveryInstance
    122:122:void reload() -> reload
    117:117:void titleNViewRefresh() -> titleNViewRefresh
io.dcloud.feature.weex.WXBaseWrapper$1 -> io.dcloud.feature.weex.WXBaseWrapper$1:
    55:55:void <init>(io.dcloud.feature.weex.WXBaseWrapper) -> <init>
    58:59:void onRefresh() -> onRefresh
io.dcloud.feature.weex.WXServiceWrapper -> io.dcloud.feature.weex.WXServiceWrapper:
    32:75:void <init>(io.dcloud.common.DHInterface.IApp,android.view.ViewGroup,java.lang.String,org.json.JSONObject) -> <init>
    49:49:java.lang.String evalJs(java.lang.String,int) -> evalJs
    121:128:void findWebViewToLoadUrL(java.lang.String,java.lang.String) -> findWebViewToLoadUrL
    94:97:java.util.Map getOptions() -> getOptions
    102:102:java.lang.String getType() -> getType
    44:44:io.dcloud.common.DHInterface.IApp obtanApp() -> obtanApp
    107:118:void onDestroy() -> onDestroy
    143:143:void onException(com.taobao.weex.WXSDKInstance,java.lang.String,java.lang.String) -> onException
    138:138:void onRefreshSuccess(com.taobao.weex.WXSDKInstance,int,int) -> onRefreshSuccess
    133:133:void onRenderSuccess(com.taobao.weex.WXSDKInstance,int,int) -> onRenderSuccess
    67:73:void onViewCreated(com.taobao.weex.WXSDKInstance,android.view.View) -> onViewCreated
    78:91:void reload() -> reload
    53:63:void render(java.lang.String,java.util.Map,java.lang.String) -> render
io.dcloud.feature.weex.WXViewWrapper -> io.dcloud.feature.weex.WXViewWrapper:
    79:712:void <init>(io.dcloud.common.DHInterface.IWebview,android.view.ViewGroup,org.json.JSONObject,java.lang.String,int,boolean) -> <init>
    78:78:void access$000(io.dcloud.feature.weex.WXViewWrapper,java.lang.Object,long) -> access$000
    78:78:java.lang.String access$100(io.dcloud.feature.weex.WXViewWrapper,java.lang.String) -> access$100
    78:78:java.util.List access$200(io.dcloud.feature.weex.WXViewWrapper) -> access$200
    78:78:java.util.List access$300(io.dcloud.feature.weex.WXViewWrapper) -> access$300
    78:78:boolean access$400(io.dcloud.feature.weex.WXViewWrapper) -> access$400
    78:78:java.util.Map access$500(io.dcloud.feature.weex.WXViewWrapper) -> access$500
    78:78:java.lang.String access$600(io.dcloud.feature.weex.WXViewWrapper) -> access$600
    78:78:void access$700(io.dcloud.feature.weex.WXViewWrapper,java.lang.Object,java.util.Map,java.lang.String) -> access$700
    343:463:void addScrollListener(com.taobao.weex.WXSDKInstance$OnInstanceVisibleListener) -> addScrollListener
    585:594:void delayedRender(java.lang.Object,long) -> delayedRender
    248:251:java.lang.String evalJs(java.lang.String,int) -> evalJs
    835:840:boolean fireGlobalEvent(java.lang.String,java.util.Map) -> fireGlobalEvent
    559:581:java.lang.String getAllUniService(java.lang.String) -> getAllUniService
    201:220:java.util.Map getInitOptions() -> getInitOptions
    232:243:java.lang.String getInitStringJsonData() -> getInitStringJsonData
    224:224:java.lang.String getSrcPath() -> getSrcPath
    729:729:java.lang.String getType() -> getType
    137:137:java.util.List getWaitServiceRenderList() -> getWaitServiceRenderList
    228:228:java.lang.String getWxId() -> getWxId
    883:887:void initFlexDirection() -> initFlexDirection
    597:633:java.lang.String initSrcPath(java.lang.String) -> initSrcPath
    322:340:void initTitleNView() -> initTitleNView
    871:880:void initViewPortWidth(boolean) -> initViewPortWidth
    476:545:void loadTemplate(org.json.JSONObject) -> loadTemplate
    735:749:java.lang.Object onCallBack(java.lang.String,java.lang.Object) -> onCallBack
    754:811:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    707:710:void onDestroy() -> onDestroy
    698:702:void onException(com.taobao.weex.WXSDKInstance,java.lang.String,java.lang.String) -> onException
    846:851:void onJsFrameworkReady() -> onJsFrameworkReady
    142:153:void onReady() -> onReady
    467:471:void onRefresh() -> onRefresh
    694:694:void onRefreshSuccess(com.taobao.weex.WXSDKInstance,int,int) -> onRefreshSuccess
    672:688:void onRenderSuccess(com.taobao.weex.WXSDKInstance,int,int) -> onRenderSuccess
    920:928:void onSizeChanged(int,int,int,int) -> onSizeChanged
    638:651:void onViewCreated(com.taobao.weex.WXSDKInstance,android.view.View) -> onViewCreated
    901:916:void recoveryInstance() -> recoveryInstance
    715:725:void reload() -> reload
    255:318:void render(java.lang.Object,java.util.Map,java.lang.String) -> render
    858:864:void runDelayedRenderCaches(java.util.List) -> runDelayedRenderCaches
    155:163:void runFireCache() -> runFireCache
    655:659:void setFocusable(int) -> setFocusable
    663:667:void setFocusableInTouchMode(boolean) -> setFocusableInTouchMode
    549:550:void titleNViewRefresh() -> titleNViewRefresh
    814:831:void updateInitDeviceParams(android.content.Context) -> updateInitDeviceParams
io.dcloud.feature.weex.WXViewWrapper$1 -> io.dcloud.feature.weex.WXViewWrapper$1:
    103:103:void <init>(io.dcloud.feature.weex.WXViewWrapper) -> <init>
    106:133:void handleMessage(android.os.Message) -> handleMessage
io.dcloud.feature.weex.WXViewWrapper$2 -> io.dcloud.feature.weex.WXViewWrapper$2:
    182:182:void <init>(io.dcloud.feature.weex.WXViewWrapper) -> <init>
    185:186:void onClick(android.content.DialogInterface,int) -> onClick
io.dcloud.feature.weex.WXViewWrapper$3 -> io.dcloud.feature.weex.WXViewWrapper$3:
    327:327:void <init>(io.dcloud.feature.weex.WXViewWrapper) -> <init>
    330:331:void onAppear() -> onAppear
    336:336:void onDisappear() -> onDisappear
io.dcloud.feature.weex.WXViewWrapper$4 -> io.dcloud.feature.weex.WXViewWrapper$4:
    373:373:void <init>(io.dcloud.feature.weex.WXViewWrapper,io.dcloud.common.adapter.ui.AdaFrameView,org.json.JSONObject) -> <init>
    405:405:void onScroll(io.dcloud.feature.weex_scroller.view.DCWXScrollView,int,int) -> onScroll
    376:385:void onScrollChanged(io.dcloud.feature.weex_scroller.view.DCWXScrollView,int,int,int,int) -> onScrollChanged
    400:400:void onScrollStopped(io.dcloud.feature.weex_scroller.view.DCWXScrollView,int,int) -> onScrollStopped
    390:390:void onScrollToBottom(io.dcloud.feature.weex_scroller.view.DCWXScrollView,int,int) -> onScrollToBottom
    395:395:void onScrollToTop(io.dcloud.feature.weex_scroller.view.DCWXScrollView,int,int) -> onScrollToTop
io.dcloud.feature.weex.WXViewWrapper$5 -> io.dcloud.feature.weex.WXViewWrapper$5:
    408:408:void <init>(io.dcloud.feature.weex.WXViewWrapper,io.dcloud.common.adapter.ui.AdaFrameView,org.json.JSONObject) -> <init>
    435:435:void onScroll(com.taobao.weex.ui.view.WXScrollView,int,int) -> onScroll
    411:420:void onScrollChanged(com.taobao.weex.ui.view.WXScrollView,int,int,int,int) -> onScrollChanged
    430:430:void onScrollStopped(com.taobao.weex.ui.view.WXScrollView,int,int) -> onScrollStopped
    425:425:void onScrollToBottom(com.taobao.weex.ui.view.WXScrollView,int,int) -> onScrollToBottom
io.dcloud.feature.weex.WXViewWrapper$6 -> io.dcloud.feature.weex.WXViewWrapper$6:
    438:438:void <init>(io.dcloud.feature.weex.WXViewWrapper,io.dcloud.common.adapter.ui.AdaFrameView,org.json.JSONObject) -> <init>
    444:458:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
io.dcloud.feature.weex.WXViewWrapper$7 -> io.dcloud.feature.weex.WXViewWrapper$7:
    503:503:void <init>(io.dcloud.feature.weex.WXViewWrapper) -> <init>
    506:539:void run() -> run
io.dcloud.feature.weex.WXViewWrapper$8 -> io.dcloud.feature.weex.WXViewWrapper$8:
    585:585:void <init>(io.dcloud.feature.weex.WXViewWrapper,java.lang.Object) -> <init>
    588:592:void run() -> run
io.dcloud.feature.weex.WXViewWrapper$FireEvent -> io.dcloud.feature.weex.WXViewWrapper$FireEvent:
    892:895:void <init>(io.dcloud.feature.weex.WXViewWrapper,java.lang.String,java.util.Map) -> <init>
io.dcloud.feature.weex.WeexFeature -> io.dcloud.feature.weex.WeexFeature:
    38:42:void <init>() -> <init>
    296:318:java.lang.String callNativeModule(java.lang.String,com.alibaba.fastjson.JSONObject) -> callNativeModule
    264:265:void createUniNView(io.dcloud.common.DHInterface.IWebview,android.view.ViewGroup,java.lang.String,org.json.JSONObject) -> createUniNView
    268:269:void createUniNView(io.dcloud.common.DHInterface.IWebview,android.view.ViewGroup,java.lang.String,org.json.JSONObject,int) -> createUniNView
    281:286:java.lang.Object createWeexService(java.lang.Object[]) -> createWeexService
    272:277:java.lang.Object createWeexWindow(java.lang.Object[]) -> createWeexWindow
    107:116:void dispose(java.lang.String) -> dispose
    120:260:java.lang.Object doForFeature(java.lang.String,java.lang.Object) -> doForFeature
    46:48:void init(io.dcloud.common.DHInterface.AbsMgr,java.lang.String) -> init
    87:89:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    77:83:void onDestroy() -> onDestroy
    66:68:void onPause() -> onPause
    72:74:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    60:62:void onResume() -> onResume
    52:56:void onStart(android.content.Context,android.os.Bundle,java.lang.String[]) -> onStart
    97:103:void registerAllEvent(io.dcloud.common.DHInterface.IApp) -> registerAllEvent
io.dcloud.feature.weex.WeexInstanceMgr -> io.dcloud.feature.weex.WeexInstanceMgr:
    101:101:void <clinit>() -> <clinit>
    93:1000:void <init>() -> <init>
    93:93:void access$000(io.dcloud.feature.weex.WeexInstanceMgr) -> access$000
    93:93:io.dcloud.common.DHInterface.ICallBack access$100(io.dcloud.feature.weex.WeexInstanceMgr) -> access$100
    93:93:io.dcloud.common.DHInterface.ICallBack access$102(io.dcloud.feature.weex.WeexInstanceMgr,io.dcloud.common.DHInterface.ICallBack) -> access$102
    93:93:android.app.Application access$200(io.dcloud.feature.weex.WeexInstanceMgr) -> access$200
    93:93:android.app.Application access$202(io.dcloud.feature.weex.WeexInstanceMgr,android.app.Application) -> access$202
    93:93:void access$300(io.dcloud.feature.weex.WeexInstanceMgr,android.content.Context,java.lang.String) -> access$300
    93:93:void access$400(io.dcloud.feature.weex.WeexInstanceMgr) -> access$400
    93:93:void access$500(io.dcloud.feature.weex.WeexInstanceMgr,android.app.Application,java.lang.String) -> access$500
    478:483:void addComponentByName(java.lang.String,java.lang.Class) -> addComponentByName
    1041:1044:void clearHandler() -> clearHandler
    536:538:io.dcloud.feature.weex.WXServiceWrapper createWeexService(io.dcloud.common.DHInterface.IApp,android.view.ViewGroup,java.lang.String,org.json.JSONObject) -> createWeexService
    507:509:io.dcloud.feature.weex.WXViewWrapper createWeexView(io.dcloud.common.DHInterface.IWebview,android.view.ViewGroup,org.json.JSONObject,java.lang.String,int) -> createWeexView
    608:611:java.lang.Object doForFeature(io.dcloud.common.DHInterface.IMgr$MgrType,int,java.lang.Object[]) -> doForFeature
    655:667:io.dcloud.feature.weex.WXViewWrapper findPathByWrapper(java.lang.String) -> findPathByWrapper
    584:590:io.dcloud.feature.weex.WXBaseWrapper findWXBaseWrapper(java.lang.String) -> findWXBaseWrapper
    615:625:io.dcloud.feature.weex.WXBaseWrapper findWXBaseWrapper(com.taobao.weex.WXSDKInstance) -> findWXBaseWrapper
    574:580:com.taobao.weex.WXSDKInstance findWXSDKInstance(java.lang.String) -> findWXSDKInstance
    549:558:io.dcloud.feature.weex.WXServiceWrapper findWXServiceWrapper(com.taobao.weex.WXSDKInstance) -> findWXServiceWrapper
    542:545:io.dcloud.feature.weex.WXViewWrapper findWXViewWrapper(java.lang.String) -> findWXViewWrapper
    594:599:io.dcloud.common.DHInterface.IWebview findWebview(io.dcloud.common.DHInterface.IWebview,io.dcloud.common.DHInterface.IApp,java.lang.String,java.lang.String) -> findWebview
    629:638:io.dcloud.common.DHInterface.IWebview findWebview(com.taobao.weex.WXSDKInstance) -> findWebview
    642:651:io.dcloud.common.DHInterface.IWebview findWebviewByInstanceId(java.lang.String) -> findWebviewByInstanceId
    759:776:void forEach(io.dcloud.feature.weex.WeexInstanceMgr$EachListener) -> forEach
    338:380:java.io.InputStream getAppFileStream(android.content.Context,java.lang.String,java.lang.String) -> getAppFileStream
    813:813:java.lang.String getComplier() -> getComplier
    486:503:java.lang.String getConfigParam() -> getConfigParam
    821:821:java.lang.String getControl() -> getControl
    1034:1037:android.os.Handler getHandler() -> getHandler
    937:937:java.lang.String getPreInstanceId() -> getPreInstanceId
    940:940:java.lang.String getPreUniAppid() -> getPreUniAppid
    1002:1005:io.dcloud.common.DHInterface.ICallBack getPreUniMPCallBack(java.lang.String) -> getPreUniMPCallBack
    987:994:java.lang.String getUniFileStr(android.content.Context,java.lang.String,java.lang.String) -> getUniFileStr
    156:156:java.lang.String getUniMPFeature() -> getUniMPFeature
    138:138:java.lang.String getUniNViewModules() -> getUniNViewModules
    824:824:int getVueVersion() -> getVueVersion
    399:419:java.lang.String handleEncryptionInputStream(java.io.InputStream,android.content.Context,boolean) -> handleEncryptionInputStream
    152:153:void init(io.dcloud.common.DHInterface.AbsMgr) -> init
    389:390:void initAppForPath(android.content.Context,java.lang.String) -> initAppForPath
    303:334:void initJSFramework(android.content.Context,java.lang.String) -> initJSFramework
    298:299:void initStatisticsListener() -> initStatisticsListener
    1051:1052:void initUniappPlugin(android.app.Application) -> initUniappPlugin
    162:167:void initWeexEnv(io.dcloud.common.DHInterface.INativeAppInfo) -> initWeexEnv
    170:237:void initWeexEnv(android.app.Application) -> initWeexEnv
    1055:1055:boolean isJSFKFileNotFound() -> isJSFKFileNotFound
    839:839:boolean isJsFrameworkReady() -> isJsFrameworkReady
    443:443:boolean isUniAppAssetsRes() -> isUniAppAssetsRes
    924:931:boolean isUniServiceCreated(io.dcloud.common.DHInterface.IApp) -> isUniServiceCreated
    828:828:boolean isWeexInitEnd() -> isWeexInitEnd
    284:290:void loadWeexToAppid(android.content.Context,java.lang.String,boolean) -> loadWeexToAppid
    513:525:io.dcloud.feature.weex.WXViewWrapper makeWXViewWrapper(io.dcloud.common.DHInterface.IWebview,android.view.ViewGroup,org.json.JSONObject,java.lang.String,int) -> makeWXViewWrapper
    705:706:void onActivityDestroy() -> onActivityDestroy
    708:730:void onActivityDestroy(boolean) -> onActivityDestroy
    688:694:void onActivityPause() -> onActivityPause
    697:703:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    679:685:void onActivityResume() -> onActivityResume
    901:901:void onException(java.lang.String,java.lang.String,java.lang.String) -> onException
    881:881:void onFirstScreen() -> onFirstScreen
    876:876:void onFirstView() -> onFirstView
    891:891:void onHeadersReceived() -> onHeadersReceived
    896:896:void onHttpFinish() -> onHttpFinish
    886:886:void onHttpStart() -> onHttpStart
    854:871:void onJsFrameworkReady() -> onJsFrameworkReady
    850:850:void onJsFrameworkStart() -> onJsFrameworkStart
    802:810:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    845:845:void onSDKEngineInitialize() -> onSDKEngineInitialize
    294:295:void onSubProcess(android.app.Application) -> onSubProcess
    969:984:void preUniControlService(android.app.Application,java.lang.String) -> preUniControlService
    1008:1031:void preUniMP(android.app.Application,java.lang.String,io.dcloud.common.DHInterface.ICallBack) -> preUniMP
    452:474:void registerReflexWeexPlugin(android.content.Context) -> registerReflexWeexPlugin
    424:439:void registerUniappService(android.content.Context,java.lang.String) -> registerUniappService
    562:571:void reloadWXServiceWrapper() -> reloadWXServiceWrapper
    753:755:void reloadWeexEngine() -> reloadWeexEngine
    671:676:void removeWeexView(java.lang.String) -> removeWeexView
    252:275:void restartWeex(android.app.Application,io.dcloud.common.DHInterface.ICallBack,java.lang.String) -> restartWeex
    119:123:io.dcloud.feature.weex.WeexInstanceMgr self() -> self
    240:241:void setApplication(android.app.Application) -> setApplication
    1059:1060:void setJSFKFileNotFound(boolean) -> setJSFKFileNotFound
    835:836:void setJsFrameworkReady(boolean) -> setJsFrameworkReady
    146:149:void setUniNViewModuleReladyCallBack(io.dcloud.common.DHInterface.ICallBack) -> setUniNViewModuleReladyCallBack
    128:135:void setUniNViewModules(java.lang.String) -> setUniNViewModules
    944:966:void setUniServiceCreated(boolean,io.dcloud.common.DHInterface.IApp) -> setUniServiceCreated
    908:911:void setWXStatisticsCallBack(io.dcloud.feature.weex.WeexInstanceMgr$IWXStatisticsCallBack) -> setWXStatisticsCallBack
    831:832:void setWeexInitEnd(boolean) -> setWeexInitEnd
    447:448:void unRegisterUniappService() -> unRegisterUniappService
    914:917:void unWXStatisticsCallBack(io.dcloud.feature.weex.WeexInstanceMgr$IWXStatisticsCallBack) -> unWXStatisticsCallBack
    791:799:void weexDebugReload() -> weexDebugReload
    733:746:void wrapperDestroy() -> wrapperDestroy
io.dcloud.feature.weex.WeexInstanceMgr$1 -> io.dcloud.feature.weex.WeexInstanceMgr$1:
    260:260:void <init>(io.dcloud.feature.weex.WeexInstanceMgr,io.dcloud.common.DHInterface.ICallBack,android.app.Application,java.lang.String) -> <init>
    263:271:void run() -> run
io.dcloud.feature.weex.WeexInstanceMgr$10 -> io.dcloud.feature.weex.WeexInstanceMgr$10:
    1018:1018:void <init>(io.dcloud.feature.weex.WeexInstanceMgr,android.app.Application,java.lang.String) -> <init>
    1021:1024:java.lang.Object onCallBack(int,java.lang.Object) -> onCallBack
io.dcloud.feature.weex.WeexInstanceMgr$2 -> io.dcloud.feature.weex.WeexInstanceMgr$2:
    679:679:void <init>(io.dcloud.feature.weex.WeexInstanceMgr) -> <init>
    679:679:void onEach(java.lang.Object) -> onEach
    682:683:void onEach(io.dcloud.feature.weex.WXBaseWrapper) -> onEach
io.dcloud.feature.weex.WeexInstanceMgr$3 -> io.dcloud.feature.weex.WeexInstanceMgr$3:
    688:688:void <init>(io.dcloud.feature.weex.WeexInstanceMgr) -> <init>
    688:688:void onEach(java.lang.Object) -> onEach
    691:692:void onEach(io.dcloud.feature.weex.WXBaseWrapper) -> onEach
io.dcloud.feature.weex.WeexInstanceMgr$4 -> io.dcloud.feature.weex.WeexInstanceMgr$4:
    697:697:void <init>(io.dcloud.feature.weex.WeexInstanceMgr,int,int,android.content.Intent) -> <init>
    697:697:void onEach(java.lang.Object) -> onEach
    700:701:void onEach(io.dcloud.feature.weex.WXBaseWrapper) -> onEach
io.dcloud.feature.weex.WeexInstanceMgr$5 -> io.dcloud.feature.weex.WeexInstanceMgr$5:
    713:713:void <init>(io.dcloud.feature.weex.WeexInstanceMgr) -> <init>
    716:717:void run() -> run
io.dcloud.feature.weex.WeexInstanceMgr$6 -> io.dcloud.feature.weex.WeexInstanceMgr$6:
    720:720:void <init>(io.dcloud.feature.weex.WeexInstanceMgr) -> <init>
    723:724:void run() -> run
io.dcloud.feature.weex.WeexInstanceMgr$7 -> io.dcloud.feature.weex.WeexInstanceMgr$7:
    733:733:void <init>(io.dcloud.feature.weex.WeexInstanceMgr) -> <init>
    733:733:void onEach(java.lang.Object) -> onEach
    736:739:void onEach(io.dcloud.feature.weex.WXBaseWrapper) -> onEach
io.dcloud.feature.weex.WeexInstanceMgr$8 -> io.dcloud.feature.weex.WeexInstanceMgr$8:
    802:802:void <init>(io.dcloud.feature.weex.WeexInstanceMgr,int,java.lang.String[],int[]) -> <init>
    802:802:void onEach(java.lang.Object) -> onEach
    805:808:void onEach(io.dcloud.feature.weex.WXBaseWrapper) -> onEach
io.dcloud.feature.weex.WeexInstanceMgr$9 -> io.dcloud.feature.weex.WeexInstanceMgr$9:
    857:857:void <init>(io.dcloud.feature.weex.WeexInstanceMgr) -> <init>
    860:862:void execute(java.lang.Object) -> execute
io.dcloud.feature.weex.adapter.DCDefaultConfigAdapter -> io.dcloud.feature.weex.adapter.DCDefaultConfigAdapter:
    5:5:void <init>() -> <init>
    18:18:boolean checkMode(java.lang.String) -> checkMode
    8:8:java.lang.String getConfig(java.lang.String,java.lang.String,java.lang.String) -> getConfig
    13:13:java.lang.String getConfigWhenInit(java.lang.String,java.lang.String,java.lang.String) -> getConfigWhenInit
io.dcloud.feature.weex.adapter.DCWXHttpAdapter -> io.dcloud.feature.weex.adapter.DCWXHttpAdapter:
    50:50:void <init>() -> <init>
    50:50:byte[] access$000(io.dcloud.feature.weex.adapter.DCWXHttpAdapter,java.io.InputStream,com.taobao.weex.adapter.IWXHttpAdapter$OnHttpListener) -> access$000
    50:50:java.lang.String access$100(io.dcloud.feature.weex.adapter.DCWXHttpAdapter,java.io.InputStream,com.taobao.weex.adapter.IWXHttpAdapter$OnHttpListener) -> access$100
    58:62:void execute(java.lang.Runnable) -> execute
    271:274:org.apache.http.conn.ssl.X509HostnameVerifier getHostnameVerifier(boolean) -> getHostnameVerifier
    129:226:dc.squareup.okhttp3.Request getOKRequest(dc.squareup.okhttp3.OkHttpClient$Builder,com.taobao.weex.common.WXRequest,com.taobao.weex.adapter.IWXHttpAdapter$OnHttpListener) -> getOKRequest
    253:267:java.lang.String readInputStream(java.io.InputStream,com.taobao.weex.adapter.IWXHttpAdapter$OnHttpListener) -> readInputStream
    230:249:byte[] readInputStreamAsBytes(java.io.InputStream,com.taobao.weex.adapter.IWXHttpAdapter$OnHttpListener) -> readInputStreamAsBytes
    67:124:void sendRequest(com.taobao.weex.common.WXRequest,com.taobao.weex.adapter.IWXHttpAdapter$OnHttpListener) -> sendRequest
io.dcloud.feature.weex.adapter.DCWXHttpAdapter$1 -> io.dcloud.feature.weex.adapter.DCWXHttpAdapter$1:
    70:70:void <init>(io.dcloud.feature.weex.adapter.DCWXHttpAdapter,com.taobao.weex.common.WXRequest,com.taobao.weex.adapter.IWXHttpAdapter$OnHttpListener) -> <init>
    73:122:void run() -> run
io.dcloud.feature.weex.adapter.DefaultWebSocketAdapter -> io.dcloud.feature.weex.adapter.DefaultWebSocketAdapter:
    56:56:void <init>() -> <init>
    56:56:dc.squareup.okhttp3.WebSocket access$002(io.dcloud.feature.weex.adapter.DefaultWebSocketAdapter,dc.squareup.okhttp3.WebSocket) -> access$002
    56:56:com.taobao.weex.appfram.websocket.IWebSocketAdapter$EventListener access$100(io.dcloud.feature.weex.adapter.DefaultWebSocketAdapter) -> access$100
    340:348:void close(int,java.lang.String) -> close
    64:160:void connect(java.lang.String,java.lang.String,com.taobao.weex.appfram.websocket.IWebSocketAdapter$EventListener) -> connect
    167:290:void connect(java.lang.String,java.lang.String,java.lang.String,com.taobao.weex.appfram.websocket.IWebSocketAdapter$EventListener) -> connect
    352:359:void destroy() -> destroy
    362:365:void reportError(java.lang.String) -> reportError
    295:313:void send(java.lang.String) -> send
    316:336:void send(com.alibaba.fastjson.JSONObject) -> send
io.dcloud.feature.weex.adapter.DefaultWebSocketAdapter$1 -> io.dcloud.feature.weex.adapter.DefaultWebSocketAdapter$1:
    105:105:void <init>(io.dcloud.feature.weex.adapter.DefaultWebSocketAdapter) -> <init>
    144:146:void onClosed(dc.squareup.okhttp3.WebSocket,int,java.lang.String) -> onClosed
    138:140:void onClosing(dc.squareup.okhttp3.WebSocket,int,java.lang.String) -> onClosing
    150:157:void onFailure(dc.squareup.okhttp3.WebSocket,java.lang.Throwable,dc.squareup.okhttp3.Response) -> onFailure
    120:123:void onMessage(dc.squareup.okhttp3.WebSocket,java.lang.String) -> onMessage
    127:134:void onMessage(dc.squareup.okhttp3.WebSocket,dc.squareup.okio.ByteString) -> onMessage
    108:116:void onOpen(dc.squareup.okhttp3.WebSocket,dc.squareup.okhttp3.Response) -> onOpen
io.dcloud.feature.weex.adapter.DefaultWebSocketAdapter$2 -> io.dcloud.feature.weex.adapter.DefaultWebSocketAdapter$2:
    234:234:void <init>(io.dcloud.feature.weex.adapter.DefaultWebSocketAdapter) -> <init>
    273:275:void onClosed(dc.squareup.okhttp3.WebSocket,int,java.lang.String) -> onClosed
    269:269:void onClosing(dc.squareup.okhttp3.WebSocket,int,java.lang.String) -> onClosing
    279:286:void onFailure(dc.squareup.okhttp3.WebSocket,java.lang.Throwable,dc.squareup.okhttp3.Response) -> onFailure
    249:252:void onMessage(dc.squareup.okhttp3.WebSocket,java.lang.String) -> onMessage
    256:263:void onMessage(dc.squareup.okhttp3.WebSocket,dc.squareup.okio.ByteString) -> onMessage
    237:245:void onOpen(dc.squareup.okhttp3.WebSocket,dc.squareup.okhttp3.Response) -> onOpen
io.dcloud.feature.weex.adapter.DefaultWebSocketAdapterFactory -> io.dcloud.feature.weex.adapter.DefaultWebSocketAdapterFactory:
    28:28:void <init>() -> <init>
    31:31:com.taobao.weex.appfram.websocket.IWebSocketAdapter createWebSocketAdapter() -> createWebSocketAdapter
io.dcloud.feature.weex.adapter.Fresco.DCGenericDraweeHierarchy -> io.dcloud.feature.weex.adapter.Fresco.DCGenericDraweeHierarchy:
    39:111:void <init>(io.dcloud.feature.weex.adapter.Fresco.DCGenericDraweeHierarchyBuilder) -> <init>
    119:121:android.graphics.drawable.Drawable buildActualImageBranch(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType,android.graphics.PointF,android.graphics.ColorFilter) -> buildActualImageBranch
    130:132:android.graphics.drawable.Drawable buildBranch(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> buildBranch
    162:165:void fadeInLayer(int) -> fadeInLayer
    154:159:void fadeOutBranches() -> fadeOutBranches
    168:171:void fadeOutLayer(int) -> fadeOutLayer
    378:379:void getActualImageBounds(android.graphics.RectF) -> getActualImageBounds
    361:364:com.facebook.drawee.drawable.ScalingUtils$ScaleType getActualImageScaleType() -> getActualImageScaleType
    204:204:android.graphics.Rect getBounds() -> getBounds
    340:340:int getFadeDuration() -> getFadeDuration
    281:288:com.facebook.drawee.drawable.DrawableParent getParentDrawableAtIndex(int) -> getParentDrawableAtIndex
    577:577:com.facebook.drawee.generic.RoundingParams getRoundingParams() -> getRoundingParams
    311:315:com.facebook.drawee.drawable.ScaleTypeDrawable getScaleTypeDrawableAtIndex(int) -> getScaleTypeDrawableAtIndex
    29:29:android.graphics.drawable.Drawable getTopLevelDrawable() -> getTopLevelDrawable
    199:199:io.dcloud.feature.weex.adapter.Fresco.DCRootDrawable getTopLevelDrawable() -> getTopLevelDrawable
    582:582:boolean hasImage() -> hasImage
    400:400:boolean hasPlaceholderImage() -> hasPlaceholderImage
    323:324:boolean hasScaleTypeDrawableAtIndex(int) -> hasScaleTypeDrawableAtIndex
    209:211:void reset() -> reset
    136:137:void resetActualImages() -> resetActualImages
    140:151:void resetFade() -> resetFade
    371:372:void setActualImageColorFilter(android.graphics.ColorFilter) -> setActualImageColorFilter
    347:349:void setActualImageFocusPoint(android.graphics.PointF) -> setActualImageFocusPoint
    355:357:void setActualImageScaleType(com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setActualImageScaleType
    536:537:void setBackgroundImage(android.graphics.drawable.Drawable) -> setBackgroundImage
    296:302:void setChildDrawableAtIndex(int,android.graphics.drawable.Drawable) -> setChildDrawableAtIndex
    267:268:void setControllerOverlay(android.graphics.drawable.Drawable) -> setControllerOverlay
    333:334:void setFadeDuration(int) -> setFadeDuration
    243:251:void setFailure(java.lang.Throwable) -> setFailure
    434:435:void setFailureImage(android.graphics.drawable.Drawable) -> setFailureImage
    441:443:void setFailureImage(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setFailureImage
    451:452:void setFailureImage(int) -> setFailureImage
    461:462:void setFailureImage(int,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setFailureImage
    215:226:void setImage(android.graphics.drawable.Drawable,float,boolean) -> setImage
    548:552:void setOverlayImage(int,android.graphics.drawable.Drawable) -> setOverlayImage
    558:559:void setOverlayImage(android.graphics.drawable.Drawable) -> setOverlayImage
    385:386:void setPlaceholderImage(android.graphics.drawable.Drawable) -> setPlaceholderImage
    392:394:void setPlaceholderImage(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setPlaceholderImage
    417:418:void setPlaceholderImage(int) -> setPlaceholderImage
    427:428:void setPlaceholderImage(int,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setPlaceholderImage
    407:409:void setPlaceholderImageFocusPoint(android.graphics.PointF) -> setPlaceholderImageFocusPoint
    174:193:void setProgress(float) -> setProgress
    230:239:void setProgress(float,boolean) -> setProgress
    502:503:void setProgressBarImage(android.graphics.drawable.Drawable) -> setProgressBarImage
    509:511:void setProgressBarImage(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setProgressBarImage
    519:520:void setProgressBarImage(int) -> setProgressBarImage
    529:530:void setProgressBarImage(int,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setProgressBarImage
    255:263:void setRetry(java.lang.Throwable) -> setRetry
    468:469:void setRetryImage(android.graphics.drawable.Drawable) -> setRetryImage
    475:477:void setRetryImage(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setRetryImage
    485:486:void setRetryImage(int) -> setRetryImage
    495:496:void setRetryImage(int,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setRetryImage
    565:570:void setRoundingParams(com.facebook.drawee.generic.RoundingParams) -> setRoundingParams
io.dcloud.feature.weex.adapter.Fresco.DCGenericDraweeHierarchyBuilder -> io.dcloud.feature.weex.adapter.Fresco.DCGenericDraweeHierarchyBuilder:
    20:22:void <clinit>() -> <clinit>
    55:58:void <init>(android.content.res.Resources) -> <init>
    630:631:io.dcloud.feature.weex.adapter.Fresco.DCGenericDraweeHierarchy build() -> build
    518:518:android.graphics.ColorFilter getActualImageColorFilter() -> getActualImageColorFilter
    500:500:android.graphics.PointF getActualImageFocusPoint() -> getActualImageFocusPoint
    477:477:com.facebook.drawee.drawable.ScalingUtils$ScaleType getActualImageScaleType() -> getActualImageScaleType
    536:536:android.graphics.drawable.Drawable getBackground() -> getBackground
    153:153:float getDesiredAspectRatio() -> getDesiredAspectRatio
    132:132:int getFadeDuration() -> getFadeDuration
    334:334:android.graphics.drawable.Drawable getFailureImage() -> getFailureImage
    353:353:com.facebook.drawee.drawable.ScalingUtils$ScaleType getFailureImageScaleType() -> getFailureImageScaleType
    572:572:java.util.List getOverlays() -> getOverlays
    182:182:android.graphics.drawable.Drawable getPlaceholderImage() -> getPlaceholderImage
    201:201:com.facebook.drawee.drawable.ScalingUtils$ScaleType getPlaceholderImageScaleType() -> getPlaceholderImageScaleType
    596:596:android.graphics.drawable.Drawable getPressedStateOverlay() -> getPressedStateOverlay
    410:410:android.graphics.drawable.Drawable getProgressBarImage() -> getProgressBarImage
    429:429:com.facebook.drawee.drawable.ScalingUtils$ScaleType getProgressBarImageScaleType() -> getProgressBarImageScaleType
    112:112:android.content.res.Resources getResources() -> getResources
    258:258:android.graphics.drawable.Drawable getRetryImage() -> getRetryImage
    277:277:com.facebook.drawee.drawable.ScalingUtils$ScaleType getRetryImageScaleType() -> getRetryImageScaleType
    615:615:com.facebook.drawee.generic.RoundingParams getRoundingParams() -> getRoundingParams
    68:94:void init() -> init
    61:61:io.dcloud.feature.weex.adapter.Fresco.DCGenericDraweeHierarchyBuilder newInstance(android.content.res.Resources) -> newInstance
    102:103:io.dcloud.feature.weex.adapter.Fresco.DCGenericDraweeHierarchyBuilder reset() -> reset
    510:511:io.dcloud.feature.weex.adapter.Fresco.DCGenericDraweeHierarchyBuilder setActualImageColorFilter(android.graphics.ColorFilter) -> setActualImageColorFilter
    492:493:io.dcloud.feature.weex.adapter.Fresco.DCGenericDraweeHierarchyBuilder setActualImageFocusPoint(android.graphics.PointF) -> setActualImageFocusPoint
    470:472:io.dcloud.feature.weex.adapter.Fresco.DCGenericDraweeHierarchyBuilder setActualImageScaleType(com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setActualImageScaleType
    528:529:io.dcloud.feature.weex.adapter.Fresco.DCGenericDraweeHierarchyBuilder setBackground(android.graphics.drawable.Drawable) -> setBackground
    145:146:io.dcloud.feature.weex.adapter.Fresco.DCGenericDraweeHierarchyBuilder setDesiredAspectRatio(float) -> setDesiredAspectRatio
    124:125:io.dcloud.feature.weex.adapter.Fresco.DCGenericDraweeHierarchyBuilder setFadeDuration(int) -> setFadeDuration
    315:316:io.dcloud.feature.weex.adapter.Fresco.DCGenericDraweeHierarchyBuilder setFailureImage(android.graphics.drawable.Drawable) -> setFailureImage
    326:327:io.dcloud.feature.weex.adapter.Fresco.DCGenericDraweeHierarchyBuilder setFailureImage(int) -> setFailureImage
    365:367:io.dcloud.feature.weex.adapter.Fresco.DCGenericDraweeHierarchyBuilder setFailureImage(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setFailureImage
    379:381:io.dcloud.feature.weex.adapter.Fresco.DCGenericDraweeHierarchyBuilder setFailureImage(int,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setFailureImage
    347:348:io.dcloud.feature.weex.adapter.Fresco.DCGenericDraweeHierarchyBuilder setFailureImageScaleType(com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setFailureImageScaleType
    560:565:io.dcloud.feature.weex.adapter.Fresco.DCGenericDraweeHierarchyBuilder setOverlay(android.graphics.drawable.Drawable) -> setOverlay
    549:550:io.dcloud.feature.weex.adapter.Fresco.DCGenericDraweeHierarchyBuilder setOverlays(java.util.List) -> setOverlays
    163:164:io.dcloud.feature.weex.adapter.Fresco.DCGenericDraweeHierarchyBuilder setPlaceholderImage(android.graphics.drawable.Drawable) -> setPlaceholderImage
    174:175:io.dcloud.feature.weex.adapter.Fresco.DCGenericDraweeHierarchyBuilder setPlaceholderImage(int) -> setPlaceholderImage
    213:215:io.dcloud.feature.weex.adapter.Fresco.DCGenericDraweeHierarchyBuilder setPlaceholderImage(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setPlaceholderImage
    227:229:io.dcloud.feature.weex.adapter.Fresco.DCGenericDraweeHierarchyBuilder setPlaceholderImage(int,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setPlaceholderImage
    195:196:io.dcloud.feature.weex.adapter.Fresco.DCGenericDraweeHierarchyBuilder setPlaceholderImageScaleType(com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setPlaceholderImageScaleType
    582:589:io.dcloud.feature.weex.adapter.Fresco.DCGenericDraweeHierarchyBuilder setPressedStateOverlay(android.graphics.drawable.Drawable) -> setPressedStateOverlay
    391:392:io.dcloud.feature.weex.adapter.Fresco.DCGenericDraweeHierarchyBuilder setProgressBarImage(android.graphics.drawable.Drawable) -> setProgressBarImage
    402:403:io.dcloud.feature.weex.adapter.Fresco.DCGenericDraweeHierarchyBuilder setProgressBarImage(int) -> setProgressBarImage
    441:443:io.dcloud.feature.weex.adapter.Fresco.DCGenericDraweeHierarchyBuilder setProgressBarImage(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setProgressBarImage
    455:457:io.dcloud.feature.weex.adapter.Fresco.DCGenericDraweeHierarchyBuilder setProgressBarImage(int,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setProgressBarImage
    423:424:io.dcloud.feature.weex.adapter.Fresco.DCGenericDraweeHierarchyBuilder setProgressBarImageScaleType(com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setProgressBarImageScaleType
    239:240:io.dcloud.feature.weex.adapter.Fresco.DCGenericDraweeHierarchyBuilder setRetryImage(android.graphics.drawable.Drawable) -> setRetryImage
    250:251:io.dcloud.feature.weex.adapter.Fresco.DCGenericDraweeHierarchyBuilder setRetryImage(int) -> setRetryImage
    289:291:io.dcloud.feature.weex.adapter.Fresco.DCGenericDraweeHierarchyBuilder setRetryImage(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setRetryImage
    303:305:io.dcloud.feature.weex.adapter.Fresco.DCGenericDraweeHierarchyBuilder setRetryImage(int,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setRetryImage
    271:272:io.dcloud.feature.weex.adapter.Fresco.DCGenericDraweeHierarchyBuilder setRetryImageScaleType(com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> setRetryImageScaleType
    606:607:io.dcloud.feature.weex.adapter.Fresco.DCGenericDraweeHierarchyBuilder setRoundingParams(com.facebook.drawee.generic.RoundingParams) -> setRoundingParams
    619:624:void validate() -> validate
io.dcloud.feature.weex.adapter.Fresco.DCGenericDraweeHierarchyInflater -> io.dcloud.feature.weex.adapter.Fresco.DCGenericDraweeHierarchyInflater:
    15:15:void <init>() -> <init>
    97:98:android.graphics.drawable.Drawable getDrawable(android.content.Context,android.content.res.TypedArray,int) -> getDrawable
    86:89:com.facebook.drawee.generic.RoundingParams getRoundingParams(io.dcloud.feature.weex.adapter.Fresco.DCGenericDraweeHierarchyBuilder) -> getRoundingParams
    109:132:com.facebook.drawee.drawable.ScalingUtils$ScaleType getScaleTypeFromXml(android.content.res.TypedArray,int) -> getScaleTypeFromXml
    31:40:io.dcloud.feature.weex.adapter.Fresco.DCGenericDraweeHierarchyBuilder inflateBuilder(android.content.Context,android.util.AttributeSet) -> inflateBuilder
    22:22:io.dcloud.feature.weex.adapter.Fresco.DCGenericDraweeHierarchy inflateHierarchy(android.content.Context,android.util.AttributeSet) -> inflateHierarchy
    59:81:io.dcloud.feature.weex.adapter.Fresco.DCGenericDraweeHierarchyBuilder updateBuilder(io.dcloud.feature.weex.adapter.Fresco.DCGenericDraweeHierarchyBuilder,android.content.Context,android.util.AttributeSet) -> updateBuilder
io.dcloud.feature.weex.adapter.Fresco.DCGenericDraweeView -> io.dcloud.feature.weex.adapter.Fresco.DCGenericDraweeView:
    37:40:void <init>(android.content.Context,io.dcloud.feature.weex.adapter.Fresco.DCGenericDraweeHierarchy) -> <init>
    43:46:void <init>(android.content.Context) -> <init>
    49:52:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    55:58:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    62:65:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    101:101:com.facebook.drawee.controller.AbstractDraweeControllerBuilder getControllerBuilder() -> getControllerBuilder
    88:98:void inflateHierarchy(android.content.Context,android.util.AttributeSet) -> inflateHierarchy
    69:85:void init() -> init
    27:28:void initialize(com.facebook.common.internal.Supplier) -> initialize
    174:175:void setActualImageResource(int) -> setActualImageResource
    189:190:void setActualImageResource(int,java.lang.Object) -> setActualImageResource
    110:114:void setImageRequest(com.facebook.imagepipeline.request.ImageRequest) -> setImageRequest
    201:202:void setImageResource(int) -> setImageResource
    124:125:void setImageURI(android.net.Uri) -> setImageURI
    133:134:void setImageURI(java.lang.String) -> setImageURI
    143:150:void setImageURI(android.net.Uri,java.lang.Object) -> setImageURI
    159:161:void setImageURI(java.lang.String,java.lang.Object) -> setImageURI
    31:32:void shutDown() -> shutDown
io.dcloud.feature.weex.adapter.Fresco.DCRootDrawable -> io.dcloud.feature.weex.adapter.Fresco.DCRootDrawable:
    12:15:void <init>(android.graphics.drawable.Drawable) -> <init>
    41:48:void draw(android.graphics.Canvas) -> draw
    18:19:void setRefresh(boolean) -> setRefresh
    23:24:void setVisibilityCallback(com.facebook.drawee.drawable.VisibilityCallback) -> setVisibilityCallback
    28:35:boolean setVisible(boolean,boolean) -> setVisible
io.dcloud.feature.weex.adapter.Fresco.DCWrappingUtils -> io.dcloud.feature.weex.adapter.Fresco.DCWrappingUtils:
    46:46:void <clinit>() -> <clinit>
    29:29:void <init>() -> <init>
    291:315:android.graphics.drawable.Drawable applyLeafRounding(android.graphics.drawable.Drawable,com.facebook.drawee.generic.RoundingParams,android.content.res.Resources) -> applyLeafRounding
    322:327:void applyRoundingParams(com.facebook.drawee.drawable.Rounded,com.facebook.drawee.generic.RoundingParams) -> applyRoundingParams
    345:351:com.facebook.drawee.drawable.DrawableParent findDrawableParentForLeaf(com.facebook.drawee.drawable.DrawableParent) -> findDrawableParentForLeaf
    255:274:android.graphics.drawable.Drawable maybeApplyLeafRounding(android.graphics.drawable.Drawable,com.facebook.drawee.generic.RoundingParams,android.content.res.Resources) -> maybeApplyLeafRounding
    109:112:android.graphics.drawable.Drawable maybeWrapWithMatrix(android.graphics.drawable.Drawable,android.graphics.Matrix) -> maybeWrapWithMatrix
    217:231:android.graphics.drawable.Drawable maybeWrapWithRoundedOverlayColor(android.graphics.drawable.Drawable,com.facebook.drawee.generic.RoundingParams) -> maybeWrapWithRoundedOverlayColor
    60:60:android.graphics.drawable.Drawable maybeWrapWithScaleType(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> maybeWrapWithScaleType
    77:93:android.graphics.drawable.Drawable maybeWrapWithScaleType(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType,android.graphics.PointF) -> maybeWrapWithScaleType
    333:338:void resetRoundingParams(com.facebook.drawee.drawable.Rounded) -> resetRoundingParams
    183:202:void updateLeafRounding(com.facebook.drawee.drawable.DrawableParent,com.facebook.drawee.generic.RoundingParams,android.content.res.Resources) -> updateLeafRounding
    141:165:void updateOverlayColorRounding(com.facebook.drawee.drawable.DrawableParent,com.facebook.drawee.generic.RoundingParams) -> updateOverlayColorRounding
    118:122:com.facebook.drawee.drawable.ScaleTypeDrawable wrapChildWithScaleType(com.facebook.drawee.drawable.DrawableParent,com.facebook.drawee.drawable.ScalingUtils$ScaleType) -> wrapChildWithScaleType
io.dcloud.feature.weex.adapter.FrescoDrawableLoader -> io.dcloud.feature.weex.adapter.FrescoDrawableLoader:
    16:18:void <init>(android.content.Context) -> <init>
    14:14:android.content.Context access$000(io.dcloud.feature.weex.adapter.FrescoDrawableLoader) -> access$000
    22:35:void setDrawable(java.lang.String,com.taobao.weex.adapter.IDrawableLoader$DrawableTarget,com.taobao.weex.adapter.DrawableStrategy) -> setDrawable
io.dcloud.feature.weex.adapter.FrescoDrawableLoader$1 -> io.dcloud.feature.weex.adapter.FrescoDrawableLoader$1:
    22:22:void <init>(io.dcloud.feature.weex.adapter.FrescoDrawableLoader,com.taobao.weex.adapter.IDrawableLoader$DrawableTarget) -> <init>
    33:33:void onFailure(java.lang.String,java.lang.Throwable) -> onFailure
    22:22:void onSuccess(java.lang.String,java.lang.Object) -> onSuccess
    25:28:void onSuccess(java.lang.String,android.graphics.Bitmap) -> onSuccess
io.dcloud.feature.weex.adapter.FrescoImageAdapter -> io.dcloud.feature.weex.adapter.FrescoImageAdapter:
    68:69:void <init>() -> <init>
    66:66:void access$000(java.lang.String,android.widget.ImageView,com.taobao.weex.dom.WXImageQuality,com.taobao.weex.common.WXImageStrategy,android.graphics.drawable.Drawable) -> access$000
    74:121:void setImage(java.lang.String,android.widget.ImageView,com.taobao.weex.dom.WXImageQuality,com.taobao.weex.common.WXImageStrategy) -> setImage
    124:236:void setImage(java.lang.String,android.widget.ImageView,com.taobao.weex.dom.WXImageQuality,com.taobao.weex.common.WXImageStrategy,android.graphics.drawable.Drawable) -> setImage
io.dcloud.feature.weex.adapter.FrescoImageAdapter$1 -> io.dcloud.feature.weex.adapter.FrescoImageAdapter$1:
    82:82:void <init>(io.dcloud.feature.weex.adapter.FrescoImageAdapter,java.lang.String,com.taobao.weex.common.WXImageStrategy,android.widget.ImageView,com.taobao.weex.dom.WXImageQuality) -> <init>
    85:109:void run() -> run
io.dcloud.feature.weex.adapter.FrescoImageAdapter$1$1 -> io.dcloud.feature.weex.adapter.FrescoImageAdapter$1$1:
    103:103:void <init>(io.dcloud.feature.weex.adapter.FrescoImageAdapter$1,android.graphics.drawable.Drawable) -> <init>
    106:107:void run() -> run
io.dcloud.feature.weex.adapter.FrescoImageAdapter$2 -> io.dcloud.feature.weex.adapter.FrescoImageAdapter$2:
    114:114:void <init>(io.dcloud.feature.weex.adapter.FrescoImageAdapter,java.lang.String,android.widget.ImageView,com.taobao.weex.dom.WXImageQuality,com.taobao.weex.common.WXImageStrategy) -> <init>
    117:118:void run() -> run
io.dcloud.feature.weex.adapter.FrescoImageAdapter$3 -> io.dcloud.feature.weex.adapter.FrescoImageAdapter$3:
    146:146:void <init>(com.taobao.weex.common.WXImageStrategy,java.lang.String,android.widget.ImageView) -> <init>
    181:185:void onFailure(java.lang.String,java.lang.Throwable) -> onFailure
    146:146:void onFinalImageSet(java.lang.String,java.lang.Object,android.graphics.drawable.Animatable) -> onFinalImageSet
    153:166:void onFinalImageSet(java.lang.String,com.facebook.imagepipeline.image.ImageInfo,android.graphics.drawable.Animatable) -> onFinalImageSet
    146:146:void onIntermediateImageSet(java.lang.String,java.lang.Object) -> onIntermediateImageSet
    170:171:void onIntermediateImageSet(java.lang.String,com.facebook.imagepipeline.image.ImageInfo) -> onIntermediateImageSet
io.dcloud.feature.weex.adapter.FrescoImageAdapter$4 -> io.dcloud.feature.weex.adapter.FrescoImageAdapter$4:
    201:201:void <init>(android.widget.ImageView,com.taobao.weex.common.WXImageStrategy,java.lang.String) -> <init>
    228:231:void onFailureImpl(com.facebook.datasource.DataSource) -> onFailureImpl
    204:224:void onNewResultImpl(com.facebook.datasource.DataSource) -> onNewResultImpl
io.dcloud.feature.weex.adapter.FrescoImageComponent -> io.dcloud.feature.weex.adapter.FrescoImageComponent:
    52:82:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    50:50:android.view.View initComponentHostView(android.content.Context) -> initComponentHostView
    86:88:android.widget.ImageView initComponentHostView(android.content.Context) -> initComponentHostView
    190:217:void onImageFinish(boolean,java.util.Map) -> onImageFinish
    93:97:void setFadeAnim(java.lang.String) -> setFadeAnim
    101:121:boolean setProperty(java.lang.String,java.lang.Object) -> setProperty
    127:186:void setResizeMode(java.lang.String) -> setResizeMode
    251:262:void updateBorderRadius() -> updateBorderRadius
    244:248:void updateProperties(java.util.Map) -> updateProperties
io.dcloud.feature.weex.adapter.FrescoImageComponent$1 -> io.dcloud.feature.weex.adapter.FrescoImageComponent$1:
    57:57:void <init>(io.dcloud.feature.weex.adapter.FrescoImageComponent) -> <init>
    80:80:void layoutAfter(float,float) -> layoutAfter
    76:76:void layoutBefore() -> layoutBefore
    64:72:void measureInternal(float,float,int,int) -> measureInternal
io.dcloud.feature.weex.adapter.FrescoImageComponent$CustomScaleType -> io.dcloud.feature.weex.adapter.FrescoImageComponent$CustomScaleType:
    223:226:void <init>(io.dcloud.feature.weex.adapter.FrescoImageComponent,float,float) -> <init>
    231:238:android.graphics.Matrix getTransform(android.graphics.Matrix,android.graphics.Rect,int,int,float,float) -> getTransform
io.dcloud.feature.weex.adapter.FrescoImageComponentU -> io.dcloud.feature.weex.adapter.FrescoImageComponentU:
    33:35:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,com.taobao.weex.ui.action.BasicComponentData) -> <init>
io.dcloud.feature.weex.adapter.FrescoImageView -> io.dcloud.feature.weex.adapter.FrescoImageView:
    35:36:void <init>(android.content.Context) -> <init>
    55:55:com.taobao.weex.ui.view.gesture.WXGesture getGestureListener() -> getGestureListener
    60:64:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    50:51:void registerGestureListener(com.taobao.weex.ui.view.gesture.WXGesture) -> registerGestureListener
    69:78:void setFadeShow(boolean) -> setFadeShow
io.dcloud.feature.weex.adapter.FrescoLoadUtil -> io.dcloud.feature.weex.adapter.FrescoLoadUtil:
    44:46:void <init>() -> <init>
    71:149:void fetch(android.content.Context,android.net.Uri,int,int,io.dcloud.feature.uniapp.utils.bitmap.BitmapLoadCallback) -> fetch
    36:39:io.dcloud.feature.uniapp.adapter.UniImageLoadAdapter getInstance() -> getInstance
    49:50:void loadImageBitmap(android.content.Context,java.lang.String,io.dcloud.feature.uniapp.utils.bitmap.BitmapLoadCallback) -> loadImageBitmap
    54:68:void loadImageBitmap(android.content.Context,java.lang.String,int,int,io.dcloud.feature.uniapp.utils.bitmap.BitmapLoadCallback) -> loadImageBitmap
io.dcloud.feature.weex.adapter.FrescoLoadUtil$1 -> io.dcloud.feature.weex.adapter.FrescoLoadUtil$1:
    71:71:void <init>(io.dcloud.feature.weex.adapter.FrescoLoadUtil,android.net.Uri,int,int,android.content.Context,io.dcloud.feature.uniapp.utils.bitmap.BitmapLoadCallback) -> <init>
    74:147:void run() -> run
io.dcloud.feature.weex.adapter.FrescoLoadUtil$1$1 -> io.dcloud.feature.weex.adapter.FrescoLoadUtil$1$1:
    78:78:void <init>(io.dcloud.feature.weex.adapter.FrescoLoadUtil$1) -> <init>
    99:99:java.lang.String getName() -> getName
    104:104:com.facebook.cache.common.CacheKey getPostprocessorCacheKey() -> getPostprocessorCacheKey
    81:93:com.facebook.common.references.CloseableReference process(android.graphics.Bitmap,com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory) -> process
io.dcloud.feature.weex.adapter.FrescoLoadUtil$1$2 -> io.dcloud.feature.weex.adapter.FrescoLoadUtil$1$2:
    110:110:void <init>(io.dcloud.feature.weex.adapter.FrescoLoadUtil$1) -> <init>
    141:144:void onFailureImpl(com.facebook.datasource.DataSource) -> onFailureImpl
    113:137:void onNewResultImpl(com.facebook.datasource.DataSource) -> onNewResultImpl
io.dcloud.feature.weex.adapter.JSExceptionAdapter -> io.dcloud.feature.weex.adapter.JSExceptionAdapter:
    11:11:void <init>() -> <init>
    14:26:void onJSException(com.taobao.weex.common.WXJSExceptionInfo) -> onJSException
io.dcloud.feature.weex.adapter.PlusUriAdapter -> io.dcloud.feature.weex.adapter.PlusUriAdapter:
    14:14:void <init>() -> <init>
    18:64:android.net.Uri rewrite(com.taobao.weex.WXSDKInstance,java.lang.String,android.net.Uri) -> rewrite
    70:79:android.net.Uri rewrite(java.lang.String,java.lang.String,android.net.Uri) -> rewrite
    83:104:java.lang.String standardizedURL(java.lang.String,java.lang.String) -> standardizedURL
io.dcloud.feature.weex.adapter.webview.DCWXWebView -> io.dcloud.feature.weex.adapter.webview.DCWXWebView:
    70:70:void <clinit>() -> <clinit>
    65:717:void <init>(android.content.Context,java.lang.String,io.dcloud.feature.weex.adapter.webview.WXDCWeb) -> <init>
    60:60:android.content.Context access$100(io.dcloud.feature.weex.adapter.webview.DCWXWebView) -> access$100
    60:60:void access$1100(io.dcloud.feature.weex.adapter.webview.DCWXWebView,android.view.View,android.webkit.WebChromeClient$CustomViewCallback) -> access$1100
    60:60:void access$1200(io.dcloud.feature.weex.adapter.webview.DCWXWebView) -> access$1200
    60:60:com.taobao.weex.ui.view.IWebView$OnPageListener access$200(io.dcloud.feature.weex.adapter.webview.DCWXWebView) -> access$200
    60:60:boolean access$300(io.dcloud.feature.weex.adapter.webview.DCWXWebView) -> access$300
    60:60:boolean access$302(io.dcloud.feature.weex.adapter.webview.DCWXWebView,boolean) -> access$302
    60:60:com.dcloud.android.widget.DCWebViewProgressBar access$400(io.dcloud.feature.weex.adapter.webview.DCWXWebView) -> access$400
    60:60:com.taobao.weex.ui.view.IWebView$OnErrorListener access$500(io.dcloud.feature.weex.adapter.webview.DCWXWebView) -> access$500
    60:60:void access$700(io.dcloud.feature.weex.adapter.webview.DCWXWebView,java.lang.String,int) -> access$700
    60:60:io.dcloud.feature.weex.adapter.webview.WXDCWeb$OnDCMessageListener access$800(io.dcloud.feature.weex.adapter.webview.DCWXWebView) -> access$800
    60:60:void access$900(io.dcloud.feature.weex.adapter.webview.DCWXWebView) -> access$900
    115:128:void destroy() -> destroy
    407:412:void evaluateJS(java.lang.String) -> evaluateJS
    93:110:android.view.View getView() -> getView
    60:60:android.view.View getWebView() -> getWebView
    230:230:android.webkit.WebView getWebView() -> getWebView
    153:156:void goBack() -> goBack
    160:163:void goForward() -> goForward
    692:710:void hideCustomView() -> hideCustomView
    234:353:void initWebView(android.webkit.WebView) -> initWebView
    139:142:void loadDataWithBaseURL(java.lang.String) -> loadDataWithBaseURL
    132:135:void loadUrl(java.lang.String) -> loadUrl
    214:217:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    385:404:void onMessage(java.lang.String,int) -> onMessage
    167:183:void postMessage(java.lang.Object) -> postMessage
    146:149:void reload() -> reload
    220:221:void setOnDCMessageListener(io.dcloud.feature.weex.adapter.webview.WXDCWeb$OnDCMessageListener) -> setOnDCMessageListener
    199:200:void setOnErrorListener(com.taobao.weex.ui.view.IWebView$OnErrorListener) -> setOnErrorListener
    210:210:void setOnMessageListener(com.taobao.weex.ui.view.IWebView$OnMessageListener) -> setOnMessageListener
    204:205:void setOnPageListener(com.taobao.weex.ui.view.IWebView$OnPageListener) -> setOnPageListener
    194:195:void setShowLoading(boolean) -> setShowLoading
    719:728:void setStatusBarVisibility(android.app.Activity,boolean) -> setStatusBarVisibility
    660:688:void showCustomView(android.view.View,android.webkit.WebChromeClient$CustomViewCallback) -> showCustomView
    224:225:void showWebView(boolean) -> showWebView
    356:382:void startWebProgress() -> startWebProgress
io.dcloud.feature.weex.adapter.webview.DCWXWebView$1 -> io.dcloud.feature.weex.adapter.webview.DCWXWebView$1:
    254:254:void <init>(io.dcloud.feature.weex.adapter.webview.DCWXWebView) -> <init>
    299:311:void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    290:295:void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    315:320:void onReceivedError(android.webkit.WebView,android.webkit.WebResourceRequest,android.webkit.WebResourceError) -> onReceivedError
    324:328:void onReceivedHttpError(android.webkit.WebView,android.webkit.WebResourceRequest,android.webkit.WebResourceResponse) -> onReceivedHttpError
    332:336:void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
    259:285:boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
io.dcloud.feature.weex.adapter.webview.DCWXWebView$2 -> io.dcloud.feature.weex.adapter.webview.DCWXWebView$2:
    341:341:void <init>(io.dcloud.feature.weex.adapter.webview.DCWXWebView) -> <init>
    344:345:void postMessage(java.lang.String) -> postMessage
    349:350:void postMessageToService(java.lang.String) -> postMessageToService
io.dcloud.feature.weex.adapter.webview.DCWXWebView$DCWXChromeClient -> io.dcloud.feature.weex.adapter.webview.DCWXWebView$DCWXChromeClient:
    446:446:void <init>(io.dcloud.feature.weex.adapter.webview.DCWXWebView) -> <init>
    446:446:void <init>(io.dcloud.feature.weex.adapter.webview.DCWXWebView,io.dcloud.feature.weex.adapter.webview.DCWXWebView$1) -> <init>
    446:446:void access$1000(io.dcloud.feature.weex.adapter.webview.DCWXWebView$DCWXChromeClient,android.webkit.WebView,android.webkit.ValueCallback,android.webkit.ValueCallback,java.lang.String,java.lang.String) -> access$1000
    496:511:void onGeolocationPermissionsShowPrompt(java.lang.String,android.webkit.GeolocationPermissions$Callback) -> onGeolocationPermissionsShowPrompt
    649:650:void onHideCustomView() -> onHideCustomView
    491:491:boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> onJsPrompt
    449:463:void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
    467:471:void onReceivedTitle(android.webkit.WebView,java.lang.String) -> onReceivedTitle
    574:640:void onResult(int,int,android.content.Intent) -> onResult
    644:645:void onShowCustomView(android.view.View,android.webkit.WebChromeClient$CustomViewCallback) -> onShowCustomView
    520:521:boolean onShowFileChooser(android.webkit.WebView,android.webkit.ValueCallback,android.webkit.WebChromeClient$FileChooserParams) -> onShowFileChooser
    525:540:void openFileChooserLogic(android.webkit.WebView,android.webkit.ValueCallback,android.webkit.ValueCallback,java.lang.String,java.lang.String) -> openFileChooserLogic
    543:571:void showOpenFileChooser(android.webkit.WebView,android.webkit.ValueCallback,android.webkit.ValueCallback,java.lang.String,java.lang.String) -> showOpenFileChooser
io.dcloud.feature.weex.adapter.webview.DCWXWebView$DCWXChromeClient$1 -> io.dcloud.feature.weex.adapter.webview.DCWXWebView$DCWXChromeClient$1:
    497:497:void <init>(io.dcloud.feature.weex.adapter.webview.DCWXWebView$DCWXChromeClient,android.webkit.GeolocationPermissions$Callback,java.lang.String) -> <init>
    505:506:void onDenied(java.lang.String) -> onDenied
    500:501:void onGranted(java.lang.String) -> onGranted
io.dcloud.feature.weex.adapter.webview.DCWXWebView$DCWXChromeClient$2 -> io.dcloud.feature.weex.adapter.webview.DCWXWebView$DCWXChromeClient$2:
    529:529:void <init>(io.dcloud.feature.weex.adapter.webview.DCWXWebView$DCWXChromeClient,android.webkit.WebView,android.webkit.ValueCallback,android.webkit.ValueCallback,java.lang.String,java.lang.String) -> <init>
    538:538:void onDenied(java.lang.String) -> onDenied
    532:533:void onGranted(java.lang.String) -> onGranted
io.dcloud.feature.weex.adapter.webview.DCWXWebView$DCWXChromeClient$3 -> io.dcloud.feature.weex.adapter.webview.DCWXWebView$DCWXChromeClient$3:
    555:555:void <init>(io.dcloud.feature.weex.adapter.webview.DCWXWebView$DCWXChromeClient) -> <init>
    559:567:void onCancel(android.content.DialogInterface) -> onCancel
io.dcloud.feature.weex.adapter.webview.DCWXWebView$MessageHandler -> io.dcloud.feature.weex.adapter.webview.DCWXWebView$MessageHandler:
    414:414:void <init>(io.dcloud.feature.weex.adapter.webview.DCWXWebView,io.dcloud.feature.weex.adapter.webview.DCWXWebView$1) -> <init>
    417:419:void <init>(io.dcloud.feature.weex.adapter.webview.DCWXWebView) -> <init>
    424:443:void handleMessage(android.os.Message) -> handleMessage
io.dcloud.feature.weex.adapter.webview.WXDCWeb -> io.dcloud.feature.weex.adapter.webview.WXDCWeb:
    37:38:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,boolean,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    32:32:void access$000(io.dcloud.feature.weex.adapter.webview.WXDCWeb,java.lang.String,java.lang.Object) -> access$000
    42:65:void createWebView() -> createWebView
    230:232:void destroy() -> destroy
    168:169:void evalJS(java.lang.String) -> evalJS
    157:164:void evalJs(java.lang.String) -> evalJs
    145:153:void fireEvent(java.lang.String,java.lang.Object) -> fireEvent
    211:215:com.alibaba.fastjson.JSONObject getWebStyles() -> getWebStyles
    69:141:android.view.View initComponentHostView(android.content.Context) -> initComponentHostView
    177:181:void loadUrl(java.lang.String) -> loadUrl
    185:188:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    220:226:void setBackgroundColor(java.lang.String) -> setBackgroundColor
    192:208:void webviewStyles(java.lang.String) -> webviewStyles
io.dcloud.feature.weex.adapter.webview.WXDCWeb$1 -> io.dcloud.feature.weex.adapter.webview.WXDCWeb$1:
    69:69:void <init>(io.dcloud.feature.weex.adapter.webview.WXDCWeb) -> <init>
    72:87:void onMessage(java.util.Map,int) -> onMessage
io.dcloud.feature.weex.adapter.webview.WXDCWeb$2 -> io.dcloud.feature.weex.adapter.webview.WXDCWeb$2:
    91:91:void <init>(io.dcloud.feature.weex.adapter.webview.WXDCWeb) -> <init>
    94:95:void onError(java.lang.String,java.lang.Object) -> onError
io.dcloud.feature.weex.adapter.webview.WXDCWeb$3 -> io.dcloud.feature.weex.adapter.webview.WXDCWeb$3:
    97:97:void <init>(io.dcloud.feature.weex.adapter.webview.WXDCWeb) -> <init>
    122:131:void onPageFinish(java.lang.String,boolean,boolean) -> onPageFinish
    111:118:void onPageStart(java.lang.String) -> onPageStart
    100:107:void onReceivedTitle(java.lang.String) -> onReceivedTitle
io.dcloud.feature.weex.adapter.webview.WXDCWeb$4 -> io.dcloud.feature.weex.adapter.webview.WXDCWeb$4:
    133:133:void <init>(io.dcloud.feature.weex.adapter.webview.WXDCWeb) -> <init>
    136:139:void onMessage(java.util.Map) -> onMessage
io.dcloud.feature.weex.adapter.webview.video.FullscreenHolder -> io.dcloud.feature.weex.adapter.webview.video.FullscreenHolder:
    10:12:void <init>(android.content.Context) -> <init>
    16:16:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
io.dcloud.feature.weex.adapter.widget.refresh.CircleLayout -> io.dcloud.feature.weex.adapter.widget.refresh.CircleLayout:
    9:10:void <init>(android.content.Context) -> <init>
io.dcloud.feature.weex.adapter.widget.refresh.DCWeexBaseRefreshLayout -> io.dcloud.feature.weex.adapter.widget.refresh.DCWeexBaseRefreshLayout:
    80:136:void <clinit>() -> <clinit>
    311:312:void <init>(android.content.Context) -> <init>
    108:1183:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    68:68:boolean access$000(io.dcloud.feature.weex.adapter.widget.refresh.DCWeexBaseRefreshLayout) -> access$000
    68:68:com.dcloud.android.v4.widget.MaterialProgressDrawable access$100(io.dcloud.feature.weex.adapter.widget.refresh.DCWeexBaseRefreshLayout) -> access$100
    68:68:boolean access$1000(io.dcloud.feature.weex.adapter.widget.refresh.DCWeexBaseRefreshLayout) -> access$1000
    68:68:void access$1100(io.dcloud.feature.weex.adapter.widget.refresh.DCWeexBaseRefreshLayout,android.view.animation.Animation$AnimationListener) -> access$1100
    68:68:boolean access$1200(io.dcloud.feature.weex.adapter.widget.refresh.DCWeexBaseRefreshLayout) -> access$1200
    68:68:void access$1300(io.dcloud.feature.weex.adapter.widget.refresh.DCWeexBaseRefreshLayout,int,boolean) -> access$1300
    68:68:void access$1400(io.dcloud.feature.weex.adapter.widget.refresh.DCWeexBaseRefreshLayout,float) -> access$1400
    68:68:float access$1500(io.dcloud.feature.weex.adapter.widget.refresh.DCWeexBaseRefreshLayout) -> access$1500
    68:68:boolean access$200(io.dcloud.feature.weex.adapter.widget.refresh.DCWeexBaseRefreshLayout) -> access$200
    68:68:io.dcloud.feature.weex.adapter.widget.refresh.DCWeexBaseRefreshLayout$OnRefreshListener access$300(io.dcloud.feature.weex.adapter.widget.refresh.DCWeexBaseRefreshLayout) -> access$300
    68:68:int access$402(io.dcloud.feature.weex.adapter.widget.refresh.DCWeexBaseRefreshLayout,int) -> access$402
    68:68:io.dcloud.feature.weex.adapter.widget.refresh.DCWeexCircleImageView access$500(io.dcloud.feature.weex.adapter.widget.refresh.DCWeexBaseRefreshLayout) -> access$500
    68:68:void access$600(io.dcloud.feature.weex.adapter.widget.refresh.DCWeexBaseRefreshLayout) -> access$600
    68:68:void access$700(io.dcloud.feature.weex.adapter.widget.refresh.DCWeexBaseRefreshLayout,float) -> access$700
    68:68:void access$800(io.dcloud.feature.weex.adapter.widget.refresh.DCWeexBaseRefreshLayout,boolean,boolean) -> access$800
    68:68:void access$900(io.dcloud.feature.weex.adapter.widget.refresh.DCWeexBaseRefreshLayout,float) -> access$900
    1131:1140:void animateOffsetToCorrectPosition(int,android.view.animation.Animation$AnimationListener) -> animateOffsetToCorrectPosition
    1143:1157:void animateOffsetToStartPosition(int,android.view.animation.Animation$AnimationListener) -> animateOffsetToStartPosition
    422:441:void beginRefresh() -> beginRefresh
    697:716:boolean canChildScrollUp() -> canChildScrollUp
    619:620:void clearTarget() -> clearTarget
    369:378:void createProgressView() -> createProgressView
    942:942:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    947:947:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    924:924:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    918:918:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    607:616:void ensureTarget() -> ensureTarget
    1004:1034:void finishSpinner(float) -> finishSpinner
    354:364:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    852:852:int getNestedScrollAxes() -> getNestedScrollAxes
    689:689:int getProgressCircleDiameter() -> getProgressCircleDiameter
    912:912:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    392:392:boolean isAlphaUsedForScale() -> isAlphaUsedForScale
    951:951:boolean isAnimationRunning(android.view.animation.Animation) -> isAnimationRunning
    897:897:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    601:601:boolean isRefreshing() -> isRefreshing
    955:1001:void moveSpinner(float) -> moveSpinner
    1177:1181:void moveToStart(float) -> moveToStart
    226:228:void onDetachedFromWindow() -> onDetachedFromWindow
    731:784:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    633:655:void onLayout(boolean,int,int,int,int) -> onLayout
    659:680:void onMeasure(int,int) -> onMeasure
    937:937:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    931:931:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    822:848:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    873:886:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    811:816:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    1224:1232:void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    804:804:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    857:867:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    1038:1118:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    792:798:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    202:214:void reset() -> reset
    470:476:void setAnimationProgress(float) -> setAnimationProgress
    565:566:void setColorScheme(int[]) -> setColorScheme
    592:594:void setColorSchemeColors(int[]) -> setColorSchemeColors
    576:582:void setColorSchemeResources(int[]) -> setColorSchemeResources
    231:233:void setColorViewAlpha(int) -> setColorViewAlpha
    628:629:void setDistanceToTriggerSync(int) -> setDistanceToTriggerSync
    218:222:void setEnabled(boolean) -> setEnabled
    892:893:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    726:727:void setOnChildScrollUpCallback(io.dcloud.feature.weex.adapter.widget.refresh.DCWeexBaseRefreshLayout$OnChildScrollUpCallback) -> setOnChildScrollUpCallback
    385:386:void setOnRefreshListener(io.dcloud.feature.weex.adapter.widget.refresh.DCWeexBaseRefreshLayout$OnRefreshListener) -> setOnRefreshListener
    538:539:void setProgressBackgroundColor(int) -> setProgressBackgroundColor
    556:558:void setProgressBackgroundColorSchemeColor(int) -> setProgressBackgroundColorSchemeColor
    547:548:void setProgressBackgroundColorSchemeResource(int) -> setProgressBackgroundColorSchemeResource
    279:282:void setProgressViewEndTarget(boolean,int) -> setProgressViewEndTarget
    255:263:void setProgressViewOffset(boolean,int,int,int,int) -> setProgressViewOffset
    402:418:void setRefreshing(boolean) -> setRefreshing
    479:489:void setRefreshing(boolean,boolean) -> setRefreshing
    288:303:void setSize(int) -> setSize
    1215:1221:void setTargetOffsetTopAndBottom(int,boolean) -> setTargetOffsetTopAndBottom
    515:530:android.view.animation.Animation startAlphaAnimation(int,int) -> startAlphaAnimation
    1122:1128:void startDragging(float) -> startDragging
    902:902:boolean startNestedScroll(int) -> startNestedScroll
    509:510:void startProgressAlphaMaxAnimation() -> startProgressAlphaMaxAnimation
    505:506:void startProgressAlphaStartAnimation() -> startProgressAlphaStartAnimation
    492:502:void startScaleDownAnimation(android.view.animation.Animation$AnimationListener) -> startScaleDownAnimation
    1192:1212:void startScaleDownReturnToStartAnimation(int,android.view.animation.Animation$AnimationListener) -> startScaleDownReturnToStartAnimation
    444:463:void startScaleUpAnimation(android.view.animation.Animation$AnimationListener) -> startScaleUpAnimation
    907:908:void stopNestedScroll() -> stopNestedScroll
io.dcloud.feature.weex.adapter.widget.refresh.DCWeexBaseRefreshLayout$1 -> io.dcloud.feature.weex.adapter.widget.refresh.DCWeexBaseRefreshLayout$1:
    174:174:void <init>(io.dcloud.feature.weex.adapter.widget.refresh.DCWeexBaseRefreshLayout) -> <init>
    185:198:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    181:181:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    177:177:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
io.dcloud.feature.weex.adapter.widget.refresh.DCWeexBaseRefreshLayout$2 -> io.dcloud.feature.weex.adapter.widget.refresh.DCWeexBaseRefreshLayout$2:
    423:424:void <init>(io.dcloud.feature.weex.adapter.widget.refresh.DCWeexBaseRefreshLayout) -> <init>
    428:436:void run() -> run
io.dcloud.feature.weex.adapter.widget.refresh.DCWeexBaseRefreshLayout$3 -> io.dcloud.feature.weex.adapter.widget.refresh.DCWeexBaseRefreshLayout$3:
    451:451:void <init>(io.dcloud.feature.weex.adapter.widget.refresh.DCWeexBaseRefreshLayout) -> <init>
    454:455:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
io.dcloud.feature.weex.adapter.widget.refresh.DCWeexBaseRefreshLayout$4 -> io.dcloud.feature.weex.adapter.widget.refresh.DCWeexBaseRefreshLayout$4:
    492:492:void <init>(io.dcloud.feature.weex.adapter.widget.refresh.DCWeexBaseRefreshLayout) -> <init>
    495:496:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
io.dcloud.feature.weex.adapter.widget.refresh.DCWeexBaseRefreshLayout$5 -> io.dcloud.feature.weex.adapter.widget.refresh.DCWeexBaseRefreshLayout$5:
    518:518:void <init>(io.dcloud.feature.weex.adapter.widget.refresh.DCWeexBaseRefreshLayout,int,int) -> <init>
    521:523:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
io.dcloud.feature.weex.adapter.widget.refresh.DCWeexBaseRefreshLayout$6 -> io.dcloud.feature.weex.adapter.widget.refresh.DCWeexBaseRefreshLayout$6:
    1012:1012:void <init>(io.dcloud.feature.weex.adapter.widget.refresh.DCWeexBaseRefreshLayout) -> <init>
    1020:1023:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    1027:1027:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    1016:1016:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
io.dcloud.feature.weex.adapter.widget.refresh.DCWeexBaseRefreshLayout$7 -> io.dcloud.feature.weex.adapter.widget.refresh.DCWeexBaseRefreshLayout$7:
    1159:1159:void <init>(io.dcloud.feature.weex.adapter.widget.refresh.DCWeexBaseRefreshLayout) -> <init>
    1162:1173:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
io.dcloud.feature.weex.adapter.widget.refresh.DCWeexBaseRefreshLayout$8 -> io.dcloud.feature.weex.adapter.widget.refresh.DCWeexBaseRefreshLayout$8:
    1183:1183:void <init>(io.dcloud.feature.weex.adapter.widget.refresh.DCWeexBaseRefreshLayout) -> <init>
    1186:1187:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
io.dcloud.feature.weex.adapter.widget.refresh.DCWeexBaseRefreshLayout$9 -> io.dcloud.feature.weex.adapter.widget.refresh.DCWeexBaseRefreshLayout$9:
    1198:1198:void <init>(io.dcloud.feature.weex.adapter.widget.refresh.DCWeexBaseRefreshLayout) -> <init>
    1201:1204:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
io.dcloud.feature.weex.adapter.widget.refresh.DCWeexCircleImageView -> io.dcloud.feature.weex.adapter.widget.refresh.DCWeexCircleImageView:
    53:76:void <init>(android.content.Context,int,float) -> <init>
    39:39:int access$000(io.dcloud.feature.weex.adapter.widget.refresh.DCWeexCircleImageView) -> access$000
    39:39:int access$002(io.dcloud.feature.weex.adapter.widget.refresh.DCWeexCircleImageView,int) -> access$002
    79:79:boolean elevationSupported() -> elevationSupported
    105:109:void onAnimationEnd() -> onAnimationEnd
    97:101:void onAnimationStart() -> onAnimationStart
    84:89:void onMeasure(int,int) -> onMeasure
    92:93:void setAnimationListener(android.view.animation.Animation$AnimationListener) -> setAnimationListener
    122:125:void setBackgroundColor(int) -> setBackgroundColor
    117:118:void setBackgroundColorRes(int) -> setBackgroundColorRes
io.dcloud.feature.weex.adapter.widget.refresh.DCWeexCircleImageView$OvalShadow -> io.dcloud.feature.weex.adapter.widget.refresh.DCWeexCircleImageView$OvalShadow:
    132:142:void <init>(io.dcloud.feature.weex.adapter.widget.refresh.DCWeexCircleImageView,int,int) -> <init>
    146:151:void draw(android.graphics.Canvas,android.graphics.Paint) -> draw
io.dcloud.feature.weex.adapter.widget.refresh.WeexDcRefreshLayout -> io.dcloud.feature.weex.adapter.widget.refresh.WeexDcRefreshLayout:
    19:21:void <init>(android.content.Context) -> <init>
    87:100:boolean canScrollVertically(android.view.View) -> canScrollVertically
    72:78:boolean isViewRefresh() -> isViewRefresh
    25:64:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
io.dcloud.feature.weex.config.AndroidTlsConfig -> io.dcloud.feature.weex.config.AndroidTlsConfig:
    6:6:void <init>() -> <init>
    67:77:boolean equals(java.lang.Object) -> equals
    46:46:java.lang.String[] getCa() -> getCa
    24:24:java.lang.String getKeystore() -> getKeystore
    35:35:java.lang.String getStorePass() -> getStorePass
    82:84:int hashCode() -> hashCode
    50:54:void setCa(java.lang.String[]) -> setCa
    28:32:void setKeystore(java.lang.String) -> setKeystore
    39:43:void setStorePass(java.lang.String) -> setStorePass
    58:61:java.lang.String toString() -> toString
io.dcloud.feature.weex.config.MimeInfoParser -> io.dcloud.feature.weex.config.MimeInfoParser:
    34:197:void <init>() -> <init>
    56:85:java.io.InputStream getFilePathStream(com.taobao.weex.WXSDKInstance,java.lang.String) -> getFilePathStream
    30:30:io.dcloud.feature.weex.config.MimeInfoParser getInstance() -> getInstance
    200:206:io.dcloud.feature.weex.config.MimeInfoParser$MimeInfo obtainMimeInfo(java.lang.String) -> obtainMimeInfo
    211:248:io.dcloud.feature.weex.config.MimeInfoParser$MimeInfo parseMimeInfo(java.lang.String) -> parseMimeInfo
io.dcloud.feature.weex.config.MimeInfoParser$MimeInfo -> io.dcloud.feature.weex.config.MimeInfoParser$MimeInfo:
    91:91:void <init>() -> <init>
    91:91:boolean access$000(io.dcloud.feature.weex.config.MimeInfoParser$MimeInfo,io.dcloud.feature.weex.config.MimeInfoParser) -> access$000
    91:91:java.lang.String access$102(io.dcloud.feature.weex.config.MimeInfoParser$MimeInfo,java.lang.String) -> access$102
    91:91:java.lang.String access$202(io.dcloud.feature.weex.config.MimeInfoParser$MimeInfo,java.lang.String) -> access$202
    91:91:java.lang.String access$302(io.dcloud.feature.weex.config.MimeInfoParser$MimeInfo,java.lang.String) -> access$302
    91:91:java.lang.String access$402(io.dcloud.feature.weex.config.MimeInfoParser$MimeInfo,java.lang.String) -> access$402
    103:135:java.io.InputStream getDataBytes(com.taobao.weex.WXSDKInstance) -> getDataBytes
    182:182:java.lang.String getDataContent() -> getDataContent
    174:174:java.lang.String getEncodeFormat() -> getEncodeFormat
    166:166:java.lang.String getFileFormat() -> getFileFormat
    158:158:java.lang.String getFileType() -> getFileType
    139:153:boolean isValid(io.dcloud.feature.weex.config.MimeInfoParser) -> isValid
    186:187:void setDataContent(java.lang.String) -> setDataContent
    178:179:void setEncodeFormat(java.lang.String) -> setEncodeFormat
    170:171:void setFileFormat(java.lang.String) -> setFileFormat
    162:163:void setFileType(java.lang.String) -> setFileType
io.dcloud.feature.weex.config.UniPathParser -> io.dcloud.feature.weex.config.UniPathParser:
    7:7:void <init>() -> <init>
    16:27:java.lang.String getAndroidPath(java.lang.String) -> getAndroidPath
io.dcloud.feature.weex.config.UserCustomTrustManager -> io.dcloud.feature.weex.config.UserCustomTrustManager:
    31:32:void <clinit>() -> <clinit>
    28:29:void <init>() -> <init>
    37:133:javax.net.ssl.SSLSocketFactory getSSLSocketFactory(io.dcloud.feature.weex.config.AndroidTlsConfig,com.taobao.weex.WXSDKInstance) -> getSSLSocketFactory
    140:247:javax.net.ssl.SSLSocketFactory getSSLSocketFactory(com.taobao.weex.http.CertDTO,com.taobao.weex.WXSDKInstance) -> getSSLSocketFactory
io.dcloud.feature.weex.extend.DCCoverViewComponent -> io.dcloud.feature.weex.extend.DCCoverViewComponent:
    17:18:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    14:14:android.view.View getRealView() -> getRealView
    44:44:android.view.ViewGroup getRealView() -> getRealView
    14:14:android.view.View initComponentHostView(android.content.Context) -> initComponentHostView
    23:36:android.view.ViewGroup initComponentHostView(android.content.Context) -> initComponentHostView
io.dcloud.feature.weex.extend.DCTabBarModule -> io.dcloud.feature.weex.extend.DCTabBarModule:
    16:16:void <init>() -> <init>
    20:32:void append(com.alibaba.fastjson.JSONObject,com.taobao.weex.bridge.JSCallback) -> append
    158:159:java.lang.String getTabBarHeight() -> getTabBarHeight
    49:53:void hideTabBar(com.alibaba.fastjson.JSONObject) -> hideTabBar
    129:133:void hideTabBarRedDot(com.alibaba.fastjson.JSONObject) -> hideTabBarRedDot
    149:153:boolean isTabBarVisible() -> isTabBarVisible
    40:44:boolean isValid() -> isValid
    195:207:void onClick(com.taobao.weex.bridge.JSCallback) -> onClick
    211:223:void onDoubleClick(com.taobao.weex.bridge.JSCallback) -> onDoubleClick
    243:254:void onMaskClick(com.taobao.weex.bridge.JSCallback) -> onMaskClick
    227:239:void onMidButtonClick(com.taobao.weex.bridge.JSCallback) -> onMidButtonClick
    105:109:void removeTabBarBadge(com.alibaba.fastjson.JSONObject) -> removeTabBarBadge
    141:145:void setMask(com.alibaba.fastjson.JSONObject) -> setMask
    93:97:void setTabBarBadge(com.alibaba.fastjson.JSONObject) -> setTabBarBadge
    81:85:void setTabBarItem(com.alibaba.fastjson.JSONObject) -> setTabBarItem
    177:191:void setTabBarItems(com.alibaba.fastjson.JSONArray) -> setTabBarItems
    69:73:void setTabBarStyle(com.alibaba.fastjson.JSONObject) -> setTabBarStyle
    57:61:void showTabBar(com.alibaba.fastjson.JSONObject) -> showTabBar
    117:121:void showTabBarRedDot(com.alibaba.fastjson.JSONObject) -> showTabBarRedDot
    164:168:void switchSelect(com.alibaba.fastjson.JSONObject) -> switchSelect
io.dcloud.feature.weex.extend.DCTabBarModule$1 -> io.dcloud.feature.weex.extend.DCTabBarModule$1:
    22:22:void <init>(io.dcloud.feature.weex.extend.DCTabBarModule,com.taobao.weex.bridge.JSCallback) -> <init>
    25:28:java.lang.Object onCallBack(int,java.lang.Object) -> onCallBack
io.dcloud.feature.weex.extend.DCTabBarModule$2 -> io.dcloud.feature.weex.extend.DCTabBarModule$2:
    197:197:void <init>(io.dcloud.feature.weex.extend.DCTabBarModule,com.taobao.weex.bridge.JSCallback) -> <init>
    200:203:java.lang.Object onCallBack(int,java.lang.Object) -> onCallBack
io.dcloud.feature.weex.extend.DCTabBarModule$3 -> io.dcloud.feature.weex.extend.DCTabBarModule$3:
    213:213:void <init>(io.dcloud.feature.weex.extend.DCTabBarModule,com.taobao.weex.bridge.JSCallback) -> <init>
    216:219:java.lang.Object onCallBack(int,java.lang.Object) -> onCallBack
io.dcloud.feature.weex.extend.DCTabBarModule$4 -> io.dcloud.feature.weex.extend.DCTabBarModule$4:
    229:229:void <init>(io.dcloud.feature.weex.extend.DCTabBarModule,com.taobao.weex.bridge.JSCallback) -> <init>
    232:235:java.lang.Object onCallBack(int,java.lang.Object) -> onCallBack
io.dcloud.feature.weex.extend.DCTabBarModule$5 -> io.dcloud.feature.weex.extend.DCTabBarModule$5:
    245:245:void <init>(io.dcloud.feature.weex.extend.DCTabBarModule,com.taobao.weex.bridge.JSCallback) -> <init>
    248:250:java.lang.Object onCallBack(int,java.lang.Object) -> onCallBack
io.dcloud.feature.weex.extend.DCUniMPModule -> io.dcloud.feature.weex.extend.DCUniMPModule:
    21:21:void <init>() -> <init>
    143:188:void getUniMPVersion(java.lang.String,com.taobao.weex.bridge.JSCallback) -> getUniMPVersion
    88:139:void installUniMP(java.lang.String,com.taobao.weex.bridge.JSCallback) -> installUniMP
    25:84:void openUniMP(java.lang.String,com.taobao.weex.bridge.JSCallback) -> openUniMP
io.dcloud.feature.weex.extend.DCUniMPModule$1 -> io.dcloud.feature.weex.extend.DCUniMPModule$1:
    25:25:void <init>(io.dcloud.feature.weex.extend.DCUniMPModule,java.lang.String,com.taobao.weex.bridge.JSCallback) -> <init>
    29:82:void run() -> run
io.dcloud.feature.weex.extend.DCUniMPModule$1$1 -> io.dcloud.feature.weex.extend.DCUniMPModule$1$1:
    55:55:void <init>(io.dcloud.feature.weex.extend.DCUniMPModule$1,java.util.Map) -> <init>
    58:71:java.lang.Object onCallBack(int,java.lang.Object) -> onCallBack
io.dcloud.feature.weex.extend.DCUniMPModule$2 -> io.dcloud.feature.weex.extend.DCUniMPModule$2:
    105:105:void <init>(io.dcloud.feature.weex.extend.DCUniMPModule,java.util.Map,com.taobao.weex.bridge.JSCallback) -> <init>
    108:122:java.lang.Object onCallBack(int,java.lang.Object) -> onCallBack
io.dcloud.feature.weex.extend.DCUniMPModule$3 -> io.dcloud.feature.weex.extend.DCUniMPModule$3:
    162:162:void <init>(io.dcloud.feature.weex.extend.DCUniMPModule,java.util.Map,com.taobao.weex.bridge.JSCallback) -> <init>
    165:181:java.lang.Object onCallBack(int,java.lang.Object) -> onCallBack
io.dcloud.feature.weex.extend.DCWXCircleViewPager -> io.dcloud.feature.weex.extend.DCWXCircleViewPager:
    19:83:void <init>(android.content.Context) -> <init>
    24:83:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    80:80:int getPointCounr() -> getPointCounr
    40:40:boolean isVertical() -> isVertical
    64:76:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    87:109:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    46:59:void setVertical(boolean) -> setVertical
    28:36:android.view.MotionEvent swapTouchEvent(android.view.MotionEvent) -> swapTouchEvent
io.dcloud.feature.weex.extend.DCWXCircleViewPager$1 -> io.dcloud.feature.weex.extend.DCWXCircleViewPager$1:
    48:48:void <init>(io.dcloud.feature.weex.extend.DCWXCircleViewPager) -> <init>
    51:54:void transformPage(android.view.View,float) -> transformPage
io.dcloud.feature.weex.extend.DCWXSlider -> io.dcloud.feature.weex.extend.DCWXSlider:
    106:107:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,java.lang.String,boolean,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    67:111:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    61:61:int access$000(io.dcloud.feature.weex.extend.DCWXSlider) -> access$000
    61:61:int access$002(io.dcloud.feature.weex.extend.DCWXSlider,int) -> access$002
    61:61:int access$100(io.dcloud.feature.weex.extend.DCWXSlider) -> access$100
    61:61:int access$200(io.dcloud.feature.weex.extend.DCWXSlider,int) -> access$200
    61:61:java.lang.Runnable access$302(io.dcloud.feature.weex.extend.DCWXSlider,java.lang.Runnable) -> access$302
    61:61:java.util.ArrayList access$400(io.dcloud.feature.weex.extend.DCWXSlider) -> access$400
    61:61:java.util.ArrayList access$500(io.dcloud.feature.weex.extend.DCWXSlider) -> access$500
    166:173:void addEvent(java.lang.String) -> addEvent
    275:288:void addIndicator(com.taobao.weex.ui.component.WXIndicator) -> addIndicator
    188:220:void addSubView(android.view.View,int) -> addSubView
    178:178:boolean containsGesture(com.taobao.weex.ui.view.gesture.WXGestureType) -> containsGesture
    243:249:void destroy() -> destroy
    144:160:android.view.ViewGroup$LayoutParams getChildLayoutParams(com.taobao.weex.ui.component.WXComponent,android.view.View,int,int,int,int,int,int) -> getChildLayoutParams
    268:271:int getCurrentIndex() -> getCurrentIndex
    292:304:int getInitIndex() -> getInitIndex
    308:317:int getRealIndex(int) -> getRealIndex
    59:59:android.view.View getRealView() -> getRealView
    183:183:android.view.ViewGroup getRealView() -> getRealView
    651:667:void hackTwoItemsInfiniteScroll() -> hackTwoItemsInfiniteScroll
    59:59:android.view.View initComponentHostView(android.content.Context) -> initComponentHostView
    115:136:com.taobao.weex.ui.view.BaseFrameLayout initComponentHostView(android.content.Context) -> initComponentHostView
    253:257:void onActivityResume() -> onActivityResume
    261:265:void onActivityStop() -> onActivityStop
    232:239:void remove(com.taobao.weex.ui.component.WXComponent,boolean) -> remove
    389:395:void setAutoPlay(java.lang.String) -> setAutoPlay
    427:446:void setIndex(int) -> setIndex
    420:423:void setInterval(int) -> setInterval
    224:228:void setLayout(com.taobao.weex.ui.component.WXComponent) -> setLayout
    456:457:void setOffsetXAccuracy(float) -> setOffsetXAccuracy
    322:367:boolean setProperty(java.lang.String,java.lang.Object) -> setProperty
    449:452:void setScrollable(boolean) -> setScrollable
    406:416:void setShowIndicators(java.lang.String) -> setShowIndicators
    373:385:void setValue(java.lang.String) -> setValue
    399:402:void setVertical(boolean) -> setVertical
io.dcloud.feature.weex.extend.DCWXSlider$1 -> io.dcloud.feature.weex.extend.DCWXSlider$1:
    199:199:void <init>(io.dcloud.feature.weex.extend.DCWXSlider) -> <init>
    202:206:void run() -> run
io.dcloud.feature.weex.extend.DCWXSlider$2 -> io.dcloud.feature.weex.extend.DCWXSlider$2:
    657:657:void <init>(io.dcloud.feature.weex.extend.DCWXSlider,android.view.GestureDetector) -> <init>
    660:660:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
io.dcloud.feature.weex.extend.DCWXSlider$Creator -> io.dcloud.feature.weex.extend.DCWXSlider$Creator:
    76:76:void <init>() -> <init>
    78:78:com.taobao.weex.ui.component.WXComponent createInstance(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,com.taobao.weex.ui.action.BasicComponentData) -> createInstance
io.dcloud.feature.weex.extend.DCWXSlider$FlingGestureListener -> io.dcloud.feature.weex.extend.DCWXSlider$FlingGestureListener:
    670:672:void <clinit>() -> <clinit>
    675:677:void <init>(com.taobao.weex.ui.view.WXCircleViewPager) -> <init>
    681:707:boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
io.dcloud.feature.weex.extend.DCWXSlider$SliderOnScrollListener -> io.dcloud.feature.weex.extend.DCWXSlider$SliderOnScrollListener:
    519:532:void <init>(io.dcloud.feature.weex.extend.DCWXSlider) -> <init>
    626:647:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    543:609:void onPageScrolled(int,float,int) -> onPageScrolled
    613:615:void onPageSelected(int) -> onPageSelected
io.dcloud.feature.weex.extend.DCWXSlider$SliderPageChangeListener -> io.dcloud.feature.weex.extend.DCWXSlider$SliderPageChangeListener:
    459:461:void <init>(io.dcloud.feature.weex.extend.DCWXSlider) -> <init>
    511:515:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    466:466:void onPageScrolled(int,float,int) -> onPageScrolled
    470:507:void onPageSelected(int) -> onPageSelected
io.dcloud.feature.weex.extend.DCWXView -> io.dcloud.feature.weex.extend.DCWXView:
    13:14:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,java.lang.String,boolean,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    17:18:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,com.taobao.weex.ui.action.BasicComponentData) -> <init>
io.dcloud.feature.weex.extend.DCWXView$Ceator -> io.dcloud.feature.weex.extend.DCWXView$Ceator:
    20:20:void <init>() -> <init>
    22:22:com.taobao.weex.ui.component.WXComponent createInstance(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,com.taobao.weex.ui.action.BasicComponentData) -> createInstance
io.dcloud.feature.weex.extend.PlusModule -> io.dcloud.feature.weex.extend.PlusModule:
    62:106:void <init>() -> <init>
    331:416:void evalJSFiles(java.lang.String,com.taobao.weex.bridge.JSCallback) -> evalJSFiles
    109:116:void exec(java.lang.String,java.lang.String) -> exec
    129:136:java.lang.String execSync(java.lang.String,java.lang.String) -> execSync
    226:230:java.lang.Object getConfigInfo() -> getConfigInfo
    301:310:com.alibaba.fastjson.JSONObject getDotData() -> getDotData
    420:464:void getHostInfo(com.taobao.weex.bridge.JSCallback) -> getHostInfo
    176:180:java.lang.String getLanguage() -> getLanguage
    235:252:java.lang.Object getRedirectInfo() -> getRedirectInfo
    272:273:java.lang.String getValue(java.lang.String) -> getValue
    265:267:void log(java.lang.String) -> log
    69:105:void postMessage(java.lang.String,java.lang.String) -> postMessage
    323:327:void preloadReady(java.lang.String) -> preloadReady
    316:318:com.alibaba.fastjson.JSONObject pushDebugData(java.lang.Object) -> pushDebugData
    213:222:void runChData() -> runChData
    278:296:void sendNativeEvent(java.lang.String,java.lang.Object,com.taobao.weex.bridge.JSCallback) -> sendNativeEvent
    257:261:void setDefaultFontSize(java.lang.String) -> setDefaultFontSize
    152:170:void setLanguage(java.lang.String) -> setLanguage
    141:145:void uniReady() -> uniReady
io.dcloud.feature.weex.extend.PlusModule$1 -> io.dcloud.feature.weex.extend.PlusModule$1:
    342:342:void <init>(io.dcloud.feature.weex.extend.PlusModule,com.taobao.weex.bridge.JSCallback,java.util.Map,com.alibaba.fastjson.JSONArray) -> <init>
    345:407:void run() -> run
io.dcloud.feature.weex.extend.PlusModule$JsData -> io.dcloud.feature.weex.extend.PlusModule$JsData:
    121:124:void <init>(io.dcloud.feature.weex.extend.PlusModule,java.lang.String,java.lang.String) -> <init>
io.dcloud.feature.weex.extend.PlusStorageModule -> io.dcloud.feature.weex.extend.PlusStorageModule:
    23:26:void <init>() -> <init>
    100:109:void getAllKeys(com.taobao.weex.bridge.JSCallback) -> getAllKeys
    151:161:android.content.SharedPreferences getAppNStorage() -> getAppNStorage
    127:131:int getBundleDataSize(android.content.SharedPreferences) -> getBundleDataSize
    135:140:java.util.List getBundleKeys(android.content.SharedPreferences) -> getBundleKeys
    49:64:void getItem(java.lang.String,com.taobao.weex.bridge.JSCallback) -> getItem
    147:147:android.content.SharedPreferences initAppNStorages(java.lang.String) -> initAppNStorages
    87:96:void length(com.taobao.weex.bridge.JSCallback) -> length
    68:83:void removeItem(java.lang.String,com.taobao.weex.bridge.JSCallback) -> removeItem
    30:45:void setItem(java.lang.String,java.lang.String,com.taobao.weex.bridge.JSCallback) -> setItem
io.dcloud.feature.weex.extend.RandomBytesModule -> io.dcloud.feature.weex.extend.RandomBytesModule:
    13:14:void <init>() -> <init>
    23:26:java.lang.String getRandomBytes(int) -> getRandomBytes
    19:19:java.lang.String getRandomValues(int) -> getRandomValues
io.dcloud.feature.weex.extend.WXEventModule -> io.dcloud.feature.weex.extend.WXEventModule:
    36:36:void <init>() -> <init>
    103:112:void fireNativeGlobalEvent(java.lang.String,com.taobao.weex.bridge.JSCallback) -> fireNativeGlobalEvent
    124:124:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    43:81:void openURL(java.lang.String) -> openURL
io.dcloud.feature.weex_barcode.BarcodeComponent -> io.dcloud.feature.weex_barcode.BarcodeComponent:
    23:80:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    23:80:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,int,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    21:21:boolean access$002(io.dcloud.feature.weex_barcode.BarcodeComponent,boolean) -> access$002
    125:126:void cancel() -> cancel
    131:131:void close() -> close
    144:147:void destroy() -> destroy
    21:21:android.view.View initComponentHostView(android.content.Context) -> initComponentHostView
    34:34:io.dcloud.feature.weex_barcode.BarcodeView initComponentHostView(android.content.Context) -> initComponentHostView
    157:159:void onActivityPause() -> onActivityPause
    151:153:void onActivityResume() -> onActivityResume
    61:62:void setAutoDecodeCharset(boolean) -> setAutoDecodeCharset
    67:68:void setBackground(java.lang.String) -> setBackground
    77:78:void setFilters(com.alibaba.fastjson.JSONArray) -> setFilters
    135:137:void setFlash(boolean) -> setFlash
    52:53:void setFrameColor(java.lang.String) -> setFrameColor
    21:21:void setHostLayoutParams(android.view.View,int,int,int,int,int,int) -> setHostLayoutParams
    113:121:void setHostLayoutParams(io.dcloud.feature.weex_barcode.BarcodeView,int,int,int,int,int,int) -> setHostLayoutParams
    72:73:void setScanbarColor(java.lang.String) -> setScanbarColor
    83:98:void setSutoStart(boolean) -> setSutoStart
    102:109:void start(com.alibaba.fastjson.JSONObject) -> start
    39:43:void updateProperties(java.util.Map) -> updateProperties
io.dcloud.feature.weex_barcode.BarcodeComponent$1 -> io.dcloud.feature.weex_barcode.BarcodeComponent$1:
    84:84:void <init>(io.dcloud.feature.weex_barcode.BarcodeComponent,boolean) -> <init>
    87:91:void onShowAnimationEnd() -> onShowAnimationEnd
io.dcloud.feature.weex_barcode.BarcodeModule -> io.dcloud.feature.weex_barcode.BarcodeModule:
    21:21:void <init>() -> <init>
    26:58:void scan(java.lang.String,com.taobao.weex.bridge.JSCallback,com.alibaba.fastjson.JSONArray,boolean) -> scan
io.dcloud.feature.weex_barcode.BarcodePlugin -> io.dcloud.feature.weex_barcode.BarcodePlugin:
    10:10:void <init>() -> <init>
    13:19:void initPlugin(android.content.Context) -> initPlugin
io.dcloud.feature.weex_barcode.BarcodeView -> io.dcloud.feature.weex_barcode.BarcodeView:
    71:717:void <init>(android.content.Context,com.taobao.weex.ui.component.WXComponent,com.taobao.weex.WXSDKInstance) -> <init>
    62:62:android.view.TextureView access$000(io.dcloud.feature.weex_barcode.BarcodeView) -> access$000
    62:62:io.dcloud.feature.barcode2.view.ViewfinderView access$100(io.dcloud.feature.weex_barcode.BarcodeView) -> access$100
    62:62:void access$200(io.dcloud.feature.weex_barcode.BarcodeView) -> access$200
    62:62:void access$300(io.dcloud.feature.weex_barcode.BarcodeView) -> access$300
    62:62:android.widget.AbsoluteLayout$LayoutParams access$400(io.dcloud.feature.weex_barcode.BarcodeView) -> access$400
    62:62:boolean access$500(io.dcloud.feature.weex_barcode.BarcodeView) -> access$500
    62:62:boolean access$602(io.dcloud.feature.weex_barcode.BarcodeView,boolean) -> access$602
    198:205:void addBarcodeView() -> addBarcodeView
    651:652:void autoFocus() -> autoFocus
    328:342:android.graphics.Bitmap byte2bitmap(byte[],android.hardware.Camera) -> byte2bitmap
    686:692:void cancel() -> cancel
    273:289:void cancelScan() -> cancelScan
    292:305:void closeScan() -> closeScan
    537:604:com.dcloud.zxing2.BarcodeFormat convertNumToBarcodeFormat(int) -> convertNumToBarcodeFormat
    608:641:int convertTypestrToNum(com.dcloud.zxing2.BarcodeFormat) -> convertTypestrToNum
    741:742:void drawViewfinder() -> drawViewfinder
    812:817:void fireEvent(java.lang.String,java.util.Map) -> fireEvent
    751:751:android.os.Handler getHandler() -> getHandler
    646:646:io.dcloud.feature.barcode2.view.ViewfinderView getViewfinderView() -> getViewfinderView
    656:683:void handleDecode(com.dcloud.zxing2.Result,android.graphics.Bitmap) -> handleDecode
    170:178:void initBarcodeView(int,int) -> initBarcodeView
    695:712:void initBeepSound() -> initBeepSound
    208:223:void initCamera() -> initCamera
    497:516:void initDecodeFormats(com.alibaba.fastjson.JSONArray) -> initDecodeFormats
    746:746:boolean isRunning() -> isRunning
    320:325:void onDestory() -> onDestory
    783:808:void onDraw(android.graphics.Canvas) -> onDraw
    308:317:void onPause() -> onPause
    414:428:void onResume(boolean) -> onResume
    756:763:void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureAvailable
    772:773:boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture) -> onSurfaceTextureDestroyed
    768:768:void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureSizeChanged
    779:779:void onSurfaceTextureUpdated(android.graphics.SurfaceTexture) -> onSurfaceTextureUpdated
    726:737:void playBeepSoundAndVibrate() -> playBeepSoundAndVibrate
    166:167:void resumeOrientationState() -> resumeOrientationState
    162:163:void saveOrientationState() -> saveOrientationState
    235:236:void setAutoDecodeCharset(boolean) -> setAutoDecodeCharset
    239:241:void setBackground(int) -> setBackground
    257:258:void setConserve(boolean) -> setConserve
    261:262:void setFilename(java.lang.String) -> setFilename
    265:266:void setFlash(boolean) -> setFlash
    226:228:void setFrameColor(int) -> setFrameColor
    431:488:android.widget.AbsoluteLayout$LayoutParams setLayoutParams() -> setLayoutParams
    249:250:void setPlayBeep(boolean) -> setPlayBeep
    244:246:void setScanBarColor(int) -> setScanBarColor
    253:254:void setVibrate(boolean) -> setVibrate
    347:375:void start() -> start
    379:411:void startP() -> startP
    181:195:void updateStyles(int,int) -> updateStyles
io.dcloud.feature.weex_barcode.BarcodeView$1 -> io.dcloud.feature.weex_barcode.BarcodeView$1:
    100:100:void <init>(io.dcloud.feature.weex_barcode.BarcodeView) -> <init>
    103:125:void handleMessage(android.os.Message) -> handleMessage
io.dcloud.feature.weex_barcode.BarcodeView$2 -> io.dcloud.feature.weex_barcode.BarcodeView$2:
    172:172:void <init>(io.dcloud.feature.weex_barcode.BarcodeView) -> <init>
    175:176:void run() -> run
io.dcloud.feature.weex_barcode.BarcodeView$3 -> io.dcloud.feature.weex_barcode.BarcodeView$3:
    184:184:void <init>(io.dcloud.feature.weex_barcode.BarcodeView) -> <init>
    187:193:void run() -> run
io.dcloud.feature.weex_barcode.BarcodeView$4 -> io.dcloud.feature.weex_barcode.BarcodeView$4:
    347:347:void <init>(io.dcloud.feature.weex_barcode.BarcodeView) -> <init>
    370:373:void onDenied(java.lang.String) -> onDenied
    350:366:void onGranted(java.lang.String) -> onGranted
io.dcloud.feature.weex_barcode.BarcodeView$4$1 -> io.dcloud.feature.weex_barcode.BarcodeView$4$1:
    351:351:void <init>(io.dcloud.feature.weex_barcode.BarcodeView$4) -> <init>
    354:364:void run() -> run
io.dcloud.feature.weex_barcode.BarcodeView$5 -> io.dcloud.feature.weex_barcode.BarcodeView$5:
    717:717:void <init>(io.dcloud.feature.weex_barcode.BarcodeView) -> <init>
    719:720:void onCompletion(android.media.MediaPlayer) -> onCompletion
io.dcloud.feature.weex_input.DCWXInputRegister -> io.dcloud.feature.weex_input.DCWXInputRegister:
    12:12:void <init>() -> <init>
    15:22:void initPlugin(android.content.Context) -> initPlugin
io.dcloud.feature.weex_scroller.DCScrollerPluginImpl -> io.dcloud.feature.weex_scroller.DCScrollerPluginImpl:
    12:12:void <init>() -> <init>
    15:20:void initPlugin(android.content.Context) -> initPlugin
io.dcloud.feature.weex_scroller.helper.DCScrollStartEndHelper -> io.dcloud.feature.weex_scroller.helper.DCScrollStartEndHelper:
    5:5:void <init>() -> <init>
    7:19:boolean isScrollEvent(java.lang.String) -> isScrollEvent
io.dcloud.feature.weex_scroller.view.DCBounceScrollerView -> io.dcloud.feature.weex_scroller.view.DCBounceScrollerView:
    30:34:void <init>(android.content.Context,int,com.taobao.weex.ui.component.DCWXScroller) -> <init>
    49:49:void onLoadmoreComplete() -> onLoadmoreComplete
    44:44:void onRefreshingComplete() -> onRefreshingComplete
    27:27:android.view.View setInnerView(android.content.Context) -> setInnerView
    38:38:io.dcloud.feature.weex_scroller.view.DCWXScrollView setInnerView(android.content.Context) -> setInnerView
io.dcloud.feature.weex_scroller.view.DCWXHorizontalScrollView -> io.dcloud.feature.weex_scroller.view.DCWXHorizontalScrollView:
    44:131:void <init>(android.content.Context) -> <init>
    44:131:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    163:169:void addScrollViewListener(io.dcloud.feature.weex_scroller.view.DCWXHorizontalScrollView$ScrollViewListener) -> addScrollViewListener
    158:160:void destroy() -> destroy
    187:191:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    229:229:android.graphics.Rect getContentFrame() -> getContentFrame
    182:182:com.taobao.weex.ui.view.gesture.WXGesture getGestureListener() -> getGestureListener
    54:60:void init() -> init
    221:221:boolean isScrollable() -> isScrollable
    75:105:void onScrollChanged(int,int,int,int) -> onScrollChanged
    196:208:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    177:178:void registerGestureListener(com.taobao.weex.ui.view.gesture.WXGesture) -> registerGestureListener
    172:173:void removeScrollViewListener(io.dcloud.feature.weex_scroller.view.DCWXHorizontalScrollView$ScrollViewListener) -> removeScrollViewListener
    142:150:void scrollToBottom() -> scrollToBottom
    108:116:void scrollToTop() -> scrollToTop
    138:139:void setLowwerLength(float) -> setLowwerLength
    153:154:void setScrollViewListener(io.dcloud.feature.weex_scroller.view.DCWXHorizontalScrollView$ScrollViewListener) -> setScrollViewListener
    225:226:void setScrollable(boolean) -> setScrollable
    134:135:void setUpperLength(float) -> setUpperLength
    232:234:void setWAScroller(com.taobao.weex.ui.component.DCWXScroller) -> setWAScroller
    119:128:void stopScroll() -> stopScroll
io.dcloud.feature.weex_scroller.view.DCWXScrollView -> io.dcloud.feature.weex_scroller.view.DCWXScrollView:
    65:423:void <init>(android.content.Context) -> <init>
    65:423:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    65:423:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    158:161:void addScrollViewListener(io.dcloud.feature.weex_scroller.view.DCWXScrollView$WXScrollViewListener) -> addScrollViewListener
    537:541:void destroy() -> destroy
    221:232:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    352:352:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    357:357:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    347:347:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    342:342:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    190:216:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    380:385:void fling(int) -> fling
    554:554:android.graphics.Rect getContentFrame() -> getContentFrame
    550:550:com.taobao.weex.ui.view.gesture.WXGesture getGestureListener() -> getGestureListener
    505:525:boolean handleMessage(android.os.Message) -> handleMessage
    329:329:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    109:119:void init() -> init
    314:314:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    333:333:boolean isScrollable() -> isScrollable
    169:172:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    369:369:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    363:363:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    434:438:void onScroll(io.dcloud.feature.weex_scroller.view.DCWXScrollView,int,int) -> onScroll
    392:420:void onScrollChanged(int,int,int,int) -> onScrollChanged
    529:533:void onScrollStopped(io.dcloud.feature.weex_scroller.view.DCWXScrollView,int,int) -> onScrollStopped
    441:445:void onScrollToBottom(int,int) -> onScrollToBottom
    448:452:void onScrollToTop(int,int) -> onScrollToTop
    236:304:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    468:500:android.view.View procSticky(java.util.Map) -> procSticky
    545:546:void registerGestureListener(com.taobao.weex.ui.view.gesture.WXGesture) -> registerGestureListener
    164:165:void removeScrollViewListener(io.dcloud.feature.weex_scroller.view.DCWXScrollView$WXScrollViewListener) -> removeScrollViewListener
    430:431:void setLowwerLength(float) -> setLowwerLength
    309:310:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    373:374:void setRate(float) -> setRate
    337:338:void setScrollable(boolean) -> setScrollable
    426:427:void setUpperLength(float) -> setUpperLength
    571:574:void setWAScroller(com.taobao.weex.ui.component.DCWXScroller) -> setWAScroller
    455:465:void showStickyView() -> showStickyView
    319:319:boolean startNestedScroll(int) -> startNestedScroll
    135:142:void startScrollerTask() -> startScrollerTask
    324:325:void stopNestedScroll() -> stopNestedScroll
    122:131:void stopScroll() -> stopScroll
io.dcloud.feature.weex_scroller.view.WXStickyHelper -> io.dcloud.feature.weex_scroller.view.WXStickyHelper:
    35:37:void <init>(com.taobao.weex.ui.component.Scrollable) -> <init>
    40:54:void bindStickStyle(com.taobao.weex.ui.component.WXComponent,java.util.Map) -> bindStickStyle
    57:67:void unbindStickStyle(com.taobao.weex.ui.component.WXComponent,java.util.Map) -> unbindStickStyle
io.dcloud.feature.weex_switch.DCWXSwitch -> io.dcloud.feature.weex_switch.DCWXSwitch:
    23:49:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    76:89:void addEvent(java.lang.String) -> addEvent
    20:20:android.view.View initComponentHostView(android.content.Context) -> initComponentHostView
    53:56:io.dcloud.feature.weex_switch.SwitchButton initComponentHostView(android.content.Context) -> initComponentHostView
    93:97:void removeEventFromView(java.lang.String) -> removeEventFromView
    61:62:void setChecked(boolean) -> setChecked
    71:72:void setColor(java.lang.String) -> setColor
    66:67:void setDisabled(boolean) -> setDisabled
io.dcloud.feature.weex_switch.DCWXSwitch$1 -> io.dcloud.feature.weex_switch.DCWXSwitch$1:
    24:24:void <init>(io.dcloud.feature.weex_switch.DCWXSwitch) -> <init>
    47:47:void layoutAfter(float,float) -> layoutAfter
    43:43:void layoutBefore() -> layoutBefore
    31:39:void measureInternal(float,float,int,int) -> measureInternal
io.dcloud.feature.weex_switch.DCWXSwitch$2 -> io.dcloud.feature.weex_switch.DCWXSwitch$2:
    78:78:void <init>(io.dcloud.feature.weex_switch.DCWXSwitch) -> <init>
    81:86:void onCheckedChanged(io.dcloud.feature.weex_switch.SwitchButton,boolean) -> onCheckedChanged
io.dcloud.feature.weex_switch.DCWXSwitchGroup -> io.dcloud.feature.weex_switch.DCWXSwitchGroup:
    23:49:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    74:87:void addEvent(java.lang.String) -> addEvent
    20:20:android.view.View initComponentHostView(android.content.Context) -> initComponentHostView
    53:54:io.dcloud.feature.weex_switch.SwitchGroup initComponentHostView(android.content.Context) -> initComponentHostView
    91:95:void removeEventFromView(java.lang.String) -> removeEventFromView
    59:60:void setChecked(boolean) -> setChecked
    69:70:void setColor(java.lang.String) -> setColor
    64:65:void setDisabled(boolean) -> setDisabled
io.dcloud.feature.weex_switch.DCWXSwitchGroup$1 -> io.dcloud.feature.weex_switch.DCWXSwitchGroup$1:
    24:24:void <init>(io.dcloud.feature.weex_switch.DCWXSwitchGroup) -> <init>
    47:47:void layoutAfter(float,float) -> layoutAfter
    43:43:void layoutBefore() -> layoutBefore
    31:39:void measureInternal(float,float,int,int) -> measureInternal
io.dcloud.feature.weex_switch.DCWXSwitchGroup$2 -> io.dcloud.feature.weex_switch.DCWXSwitchGroup$2:
    76:76:void <init>(io.dcloud.feature.weex_switch.DCWXSwitchGroup) -> <init>
    79:84:void onCheckedChanged(io.dcloud.feature.weex_switch.SwitchButton,boolean) -> onCheckedChanged
io.dcloud.feature.weex_switch.DCWXSwitchPlugin -> io.dcloud.feature.weex_switch.DCWXSwitchPlugin:
    10:10:void <init>() -> <init>
    13:18:void initPlugin(android.content.Context) -> initPlugin
io.dcloud.feature.weex_switch.SwitchButton -> io.dcloud.feature.weex_switch.SwitchButton:
    29:30:void <clinit>() -> <clinit>
    41:1118:void <init>(android.content.Context) -> <init>
    41:1118:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    41:1118:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    41:1118:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    28:28:boolean access$100(io.dcloud.feature.weex_switch.SwitchButton) -> access$100
    28:28:int access$1000(io.dcloud.feature.weex_switch.SwitchButton) -> access$1000
    28:28:int access$1100(io.dcloud.feature.weex_switch.SwitchButton) -> access$1100
    28:28:float access$1200(io.dcloud.feature.weex_switch.SwitchButton) -> access$1200
    28:28:int access$1300(io.dcloud.feature.weex_switch.SwitchButton) -> access$1300
    28:28:void access$1400(io.dcloud.feature.weex_switch.SwitchButton) -> access$1400
    28:28:boolean access$1500(io.dcloud.feature.weex_switch.SwitchButton) -> access$1500
    28:28:boolean access$1502(io.dcloud.feature.weex_switch.SwitchButton,boolean) -> access$1502
    28:28:void access$200(io.dcloud.feature.weex_switch.SwitchButton) -> access$200
    28:28:int access$300(io.dcloud.feature.weex_switch.SwitchButton) -> access$300
    28:28:int access$302(io.dcloud.feature.weex_switch.SwitchButton,int) -> access$302
    28:28:io.dcloud.feature.weex_switch.SwitchButton$ViewState access$400(io.dcloud.feature.weex_switch.SwitchButton) -> access$400
    28:28:io.dcloud.feature.weex_switch.SwitchButton$ViewState access$500(io.dcloud.feature.weex_switch.SwitchButton) -> access$500
    28:28:io.dcloud.feature.weex_switch.SwitchButton$ViewState access$600(io.dcloud.feature.weex_switch.SwitchButton) -> access$600
    28:28:android.animation.ArgbEvaluator access$700(io.dcloud.feature.weex_switch.SwitchButton) -> access$700
    28:28:float access$800(io.dcloud.feature.weex_switch.SwitchButton) -> access$800
    28:28:float access$900(io.dcloud.feature.weex_switch.SwitchButton) -> access$900
    592:597:void broadcastEvent() -> broadcastEvent
    829:830:float dp2px(float) -> dp2px
    834:834:int dp2pxInt(float) -> dp2pxInt
    442:450:void drawArc(android.graphics.Canvas,float,float,float,float,float,float,android.graphics.Paint) -> drawArc
    483:495:void drawButton(android.graphics.Canvas,float,float) -> drawButton
    358:364:void drawCheckedIndicator(android.graphics.Canvas) -> drawCheckedIndicator
    383:389:void drawCheckedIndicator(android.graphics.Canvas,int,float,float,float,float,float,android.graphics.Paint) -> drawCheckedIndicator
    466:474:void drawRoundRect(android.graphics.Canvas,float,float,float,float,float,android.graphics.Paint) -> drawRoundRect
    396:402:void drawUncheckIndicator(android.graphics.Canvas) -> drawUncheckIndicator
    421:425:void drawUncheckIndicator(android.graphics.Canvas,int,float,float,float,float,android.graphics.Paint) -> drawUncheckIndicator
    224:224:float getShadowBottomSize() -> getShadowBottomSize
    232:232:float getShadowLeftSize() -> getShadowLeftSize
    80:201:void init(android.content.Context,android.util.AttributeSet) -> init
    512:512:boolean isChecked() -> isChecked
    713:713:boolean isDragState() -> isDragState
    696:696:boolean isInAnimating() -> isInAnimating
    704:704:boolean isPendingDragState() -> isPendingDragState
    301:350:void onDraw(android.graphics.Canvas) -> onDraw
    205:217:void onMeasure(int,int) -> onMeasure
    237:277:void onSizeChanged(int,int,int,int) -> onSizeChanged
    602:687:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    869:870:boolean optBoolean(android.content.res.TypedArray,int,boolean) -> optBoolean
    862:863:int optColor(android.content.res.TypedArray,int,int) -> optColor
    840:841:int optInt(android.content.res.TypedArray,int,int) -> optInt
    848:849:float optPixelSize(android.content.res.TypedArray,int,float) -> optPixelSize
    855:856:int optPixelSize(android.content.res.TypedArray,int,int) -> optPixelSize
    775:790:void pendingCancelDragState() -> pendingCancelDragState
    745:768:void pendingDragState() -> pendingDragState
    797:810:void pendingSettleState() -> pendingSettleState
    499:508:void setChecked(boolean) -> setChecked
    533:534:void setCheckedColor(int) -> setCheckedColor
    293:297:void setCheckedViewState(io.dcloud.feature.weex_switch.SwitchButton$ViewState) -> setCheckedViewState
    738:739:void setEnableEffect(boolean) -> setEnableEffect
    820:821:void setOnCheckedChangeListener(io.dcloud.feature.weex_switch.SwitchButton$OnCheckedChangeListener) -> setOnCheckedChangeListener
    814:814:void setOnClickListener(android.view.View$OnClickListener) -> setOnClickListener
    817:817:void setOnLongClickListener(android.view.View$OnLongClickListener) -> setOnLongClickListener
    73:74:void setPadding(int,int,int,int) -> setPadding
    721:735:void setShadowEffect(boolean) -> setShadowEffect
    283:287:void setUncheckViewState(io.dcloud.feature.weex_switch.SwitchButton$ViewState) -> setUncheckViewState
    517:518:void toggle() -> toggle
    525:526:void toggle(boolean) -> toggle
    537:586:void toggle(boolean,boolean) -> toggle
io.dcloud.feature.weex_switch.SwitchButton$1 -> io.dcloud.feature.weex_switch.SwitchButton$1:
    1045:1045:void <init>(io.dcloud.feature.weex_switch.SwitchButton) -> <init>
    1048:1051:void run() -> run
io.dcloud.feature.weex_switch.SwitchButton$2 -> io.dcloud.feature.weex_switch.SwitchButton$2:
    1055:1055:void <init>(io.dcloud.feature.weex_switch.SwitchButton) -> <init>
    1058:1115:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
io.dcloud.feature.weex_switch.SwitchButton$3 -> io.dcloud.feature.weex_switch.SwitchButton$3:
    1119:1119:void <init>(io.dcloud.feature.weex_switch.SwitchButton) -> <init>
    1165:1165:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    1126:1161:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    1169:1169:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    1122:1122:void onAnimationStart(android.animation.Animator) -> onAnimationStart
io.dcloud.feature.weex_switch.SwitchButton$ViewState -> io.dcloud.feature.weex_switch.SwitchButton$ViewState:
    1194:1194:void <init>() -> <init>
    1177:1177:void access$000(io.dcloud.feature.weex_switch.SwitchButton$ViewState,io.dcloud.feature.weex_switch.SwitchButton$ViewState) -> access$000
    1196:1200:void copy(io.dcloud.feature.weex_switch.SwitchButton$ViewState) -> copy
io.dcloud.feature.weex_switch.SwitchGroup -> io.dcloud.feature.weex_switch.SwitchGroup:
    13:14:void <clinit>() -> <clinit>
    17:49:void <init>(android.content.Context) -> <init>
    25:49:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    29:49:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    51:63:void disableClipOnParents(android.view.View) -> disableClipOnParents
    97:98:float dp2px(float) -> dp2px
    93:93:int dp2pxInt(float) -> dp2pxInt
    83:84:void onDraw(android.graphics.Canvas) -> onDraw
    34:47:void onLayout(boolean,int,int,int,int) -> onLayout
    67:79:void onMeasure(int,int) -> onMeasure
    88:90:void onSizeChanged(int,int,int,int) -> onSizeChanged
io.dcloud.feature.weex_text.DCTextContentBoxMeasurement -> io.dcloud.feature.weex_text.DCTextContentBoxMeasurement:
    22:27:void <init>(com.taobao.weex.ui.component.WXComponent) -> <init>
    43:51:android.text.Spanned createSpanned(java.lang.String) -> createSpanned
    31:35:void layoutBefore() -> layoutBefore
    56:80:void updateSpannable(android.text.Spannable,int) -> updateSpannable
io.dcloud.feature.weex_text.DCWXRichText -> io.dcloud.feature.weex_text.DCWXRichText:
    27:29:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    24:24:com.taobao.weex.layout.ContentBoxMeasurement access$000(io.dcloud.feature.weex_text.DCWXRichText) -> access$000
    24:24:com.taobao.weex.layout.ContentBoxMeasurement access$100(io.dcloud.feature.weex_text.DCWXRichText) -> access$100
    24:24:android.view.View initComponentHostView(android.content.Context) -> initComponentHostView
    24:24:com.taobao.weex.ui.view.WXTextView initComponentHostView(android.content.Context) -> initComponentHostView
    64:64:com.taobao.weex.ui.component.richtext.WXRichTextView initComponentHostView(android.content.Context) -> initComponentHostView
    69:80:void updateAttrs(java.util.Map) -> updateAttrs
    84:92:void updateExtra(java.lang.Object) -> updateExtra
io.dcloud.feature.weex_text.DCWXRichText$1 -> io.dcloud.feature.weex_text.DCWXRichText$1:
    71:71:void <init>(io.dcloud.feature.weex_text.DCWXRichText) -> <init>
    74:77:void run() -> run
io.dcloud.feature.weex_text.DCWXRichText$Creator -> io.dcloud.feature.weex_text.DCWXRichText$Creator:
    55:55:void <init>() -> <init>
    58:58:com.taobao.weex.ui.component.WXComponent createInstance(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,com.taobao.weex.ui.action.BasicComponentData) -> createInstance
io.dcloud.feature.weex_text.DCWXRichText$RichTextContentBoxMeasurement -> io.dcloud.feature.weex_text.DCWXRichText$RichTextContentBoxMeasurement:
    34:35:void <init>(com.taobao.weex.ui.component.WXComponent) -> <init>
    40:50:android.text.Spanned createSpanned(java.lang.String) -> createSpanned
io.dcloud.feature.weex_text.DCWXText -> io.dcloud.feature.weex_text.DCWXText:
    38:40:void <init>(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,com.taobao.weex.ui.action.BasicComponentData) -> <init>
    50:51:void setSelectable(boolean) -> setSelectable
io.dcloud.feature.weex_text.DCWXText$Creator -> io.dcloud.feature.weex_text.DCWXText$Creator:
    42:42:void <init>() -> <init>
    44:44:com.taobao.weex.ui.component.WXComponent createInstance(com.taobao.weex.WXSDKInstance,com.taobao.weex.ui.component.WXVContainer,com.taobao.weex.ui.action.BasicComponentData) -> createInstance
io.dcloud.feature.weex_text.DCWXTextPlugin -> io.dcloud.feature.weex_text.DCWXTextPlugin:
    11:11:void <init>() -> <init>
    14:21:void initPlugin(android.content.Context) -> initPlugin
io.dcloud.feature.weex_websocket.UniWebSocketModule -> io.dcloud.feature.weex_websocket.UniWebSocketModule:
    55:57:void <init>() -> <init>
    61:96:void WebSocket(java.lang.String) -> WebSocket
    38:38:java.util.Map access$400(io.dcloud.feature.weex_websocket.UniWebSocketModule) -> access$400
    38:38:java.util.Map access$402(io.dcloud.feature.weex_websocket.UniWebSocketModule,java.util.Map) -> access$402
    38:38:java.util.Map access$500(io.dcloud.feature.weex_websocket.UniWebSocketModule) -> access$500
    38:38:java.util.Map access$502(io.dcloud.feature.weex_websocket.UniWebSocketModule,java.util.Map) -> access$502
    118:139:void close(java.lang.String) -> close
    184:204:void destroy() -> destroy
    164:170:void onclose(com.taobao.weex.bridge.JSCallback) -> onclose
    174:180:void onerror(com.taobao.weex.bridge.JSCallback) -> onerror
    153:160:void onmessage(com.taobao.weex.bridge.JSCallback) -> onmessage
    143:149:void onopen(com.taobao.weex.bridge.JSCallback) -> onopen
    100:114:void send(java.lang.String) -> send
io.dcloud.feature.weex_websocket.UniWebSocketModule$1 -> io.dcloud.feature.weex_websocket.UniWebSocketModule$1:
    184:184:void <init>(io.dcloud.feature.weex_websocket.UniWebSocketModule) -> <init>
    187:196:void run() -> run
io.dcloud.feature.weex_websocket.UniWebSocketModule$WebSocketEventListener -> io.dcloud.feature.weex_websocket.UniWebSocketModule$WebSocketEventListener:
    214:216:void <init>(io.dcloud.feature.weex_websocket.UniWebSocketModule,java.lang.String) -> <init>
    206:206:com.taobao.weex.bridge.JSCallback access$002(io.dcloud.feature.weex_websocket.UniWebSocketModule$WebSocketEventListener,com.taobao.weex.bridge.JSCallback) -> access$002
    206:206:com.taobao.weex.bridge.JSCallback access$102(io.dcloud.feature.weex_websocket.UniWebSocketModule$WebSocketEventListener,com.taobao.weex.bridge.JSCallback) -> access$102
    206:206:com.taobao.weex.bridge.JSCallback access$202(io.dcloud.feature.weex_websocket.UniWebSocketModule$WebSocketEventListener,com.taobao.weex.bridge.JSCallback) -> access$202
    206:206:com.taobao.weex.bridge.JSCallback access$302(io.dcloud.feature.weex_websocket.UniWebSocketModule$WebSocketEventListener,com.taobao.weex.bridge.JSCallback) -> access$302
    249:261:void onClose(int,java.lang.String,boolean) -> onClose
    265:275:void onError(java.lang.String) -> onError
    230:245:void onMessage(java.lang.String) -> onMessage
    220:226:void onOpen() -> onOpen
io.dcloud.g.a.a -> io.dcloud.g.a.a:
    1:50:void <init>(io.dcloud.common.DHInterface.ICore) -> <init>
    1:1:java.lang.String a(java.lang.String) -> a
    2:2:android.app.AlertDialog a(io.dcloud.g.a.a) -> a
    3:3:void a(io.dcloud.g.a.a,io.dcloud.g.a.e,java.lang.String,java.lang.String,boolean) -> a
    4:7:void a() -> a
    8:9:void a(android.content.Context) -> a
    10:34:void a(io.dcloud.g.a.e,java.lang.String,boolean) -> a
    35:36:void a(io.dcloud.g.a.e) -> a
    37:149:void a(android.app.Activity,java.lang.String,java.lang.String,io.dcloud.g.a.e,io.dcloud.g.a.e,io.dcloud.g.a.e,boolean) -> a
    150:161:void a(io.dcloud.g.a.e,java.lang.String,java.lang.String,boolean) -> a
    162:162:io.dcloud.g.a.e a(android.app.Activity,java.lang.String) -> a
    163:163:io.dcloud.g.a.e a(java.lang.String,boolean) -> a
    164:199:io.dcloud.g.a.e a(android.app.Activity,java.lang.String,boolean) -> a
    200:210:io.dcloud.g.a.e a(java.lang.String,java.lang.String,java.lang.String,byte) -> a
    211:211:io.dcloud.g.a.e a(java.lang.String,java.lang.String) -> a
    212:377:io.dcloud.g.a.e a(java.lang.String,java.lang.String,org.json.JSONObject) -> a
    1:14:void b() -> b
    15:16:void b(io.dcloud.g.a.e) -> b
    17:17:boolean b(java.lang.String) -> b
    18:18:io.dcloud.g.a.e b(java.lang.String,java.lang.String) -> b
    1:1:io.dcloud.g.a.e c(java.lang.String) -> c
    2:3:void c(io.dcloud.g.a.e) -> c
    4:28:void c() -> c
    1:7:void d(io.dcloud.g.a.e) -> d
    8:21:void d() -> d
    1:12:void dispose() -> dispose
    1:2:void e(io.dcloud.g.a.e) -> e
    1:1941:java.lang.Object processEvent(io.dcloud.common.DHInterface.IMgr$MgrType,int,java.lang.Object) -> processEvent
io.dcloud.g.a.a$a -> io.dcloud.g.a.a$a:
    1:1:void <init>(io.dcloud.g.a.a) -> <init>
    1:1:java.lang.Object onCallBack(int,java.lang.Object) -> onCallBack
io.dcloud.g.a.a$b -> io.dcloud.g.a.a$b:
    1:1:void <init>(io.dcloud.g.a.a,android.content.Context) -> <init>
    1:10:void run() -> run
io.dcloud.g.a.a$c -> io.dcloud.g.a.a$c:
    1:1:void <init>(io.dcloud.g.a.a,android.app.Activity,java.lang.String,io.dcloud.g.a.e,android.widget.CheckBox,java.lang.String,io.dcloud.g.a.e,io.dcloud.g.a.e,boolean) -> <init>
    1:23:void onClick(android.content.DialogInterface,int) -> onClick
io.dcloud.g.a.a$d -> io.dcloud.g.a.a$d:
    1:1:void <init>(io.dcloud.g.a.a,android.app.Activity) -> <init>
    1:5:void onClick(android.content.DialogInterface,int) -> onClick
io.dcloud.g.a.a$e -> io.dcloud.g.a.a$e:
    1:1:void <init>(io.dcloud.g.a.a,android.app.Activity) -> <init>
    1:5:void onClick(android.content.DialogInterface,int) -> onClick
io.dcloud.g.a.a$f -> io.dcloud.g.a.a$f:
    1:1:void <init>(io.dcloud.g.a.a,io.dcloud.g.a.e,boolean,java.lang.String) -> <init>
    1:2:java.lang.Object onCallBack(int,java.lang.Object) -> onCallBack
io.dcloud.g.a.a$g -> io.dcloud.g.a.a$g:
    1:1:void <init>(io.dcloud.g.a.a,io.dcloud.g.a.e,java.lang.String,java.lang.String,boolean) -> <init>
    1:11:java.lang.Object onCallBack(int,java.lang.Object) -> onCallBack
io.dcloud.g.a.a$g$a -> io.dcloud.g.a.a$g$a:
    1:1:void <init>(io.dcloud.g.a.a$g) -> <init>
    1:1:java.lang.Object onCallBack(int,java.lang.Object) -> onCallBack
io.dcloud.g.a.a$h -> io.dcloud.g.a.a$h:
    1:1:void <init>(io.dcloud.g.a.a) -> <init>
    1:3:void run() -> run
io.dcloud.g.a.b -> io.dcloud.g.a.b:
    1:3:void <init>(android.app.Application) -> <init>
    1:2:void a(android.app.Application) -> a
    3:5:void a(io.dcloud.common.DHInterface.IConfusionMgr) -> a
    1:2:android.app.Application getApplication() -> getApplication
    1:1:io.dcloud.common.DHInterface.IConfusionMgr getCofusionMgr() -> getCofusionMgr
io.dcloud.g.a.c -> io.dcloud.g.a.c:
    1:7:void <init>(io.dcloud.g.a.a) -> <init>
    1:21:boolean a(io.dcloud.g.a.e,io.dcloud.common.DHInterface.ISysEventListener$SysEventType,java.lang.Object) -> a
    22:23:io.dcloud.g.a.e a(java.lang.String) -> a
    24:25:void a(java.lang.String,io.dcloud.g.a.e) -> a
    26:31:io.dcloud.g.a.e a(android.app.Activity,io.dcloud.g.a.e) -> a
    32:33:void a() -> a
    1:9:io.dcloud.g.a.e b(java.lang.String) -> b
    10:12:io.dcloud.g.a.e b() -> b
    1:9:io.dcloud.g.a.e c() -> c
    1:4:io.dcloud.g.a.e d() -> d
    1:1:int e() -> e
io.dcloud.g.a.d -> io.dcloud.g.a.d:
    1:43:void <init>(io.dcloud.common.DHInterface.AbsMgr) -> <init>
    0:6:void a(java.lang.String) -> a
    6:11:void a() -> a
    12:12:void a(io.dcloud.g.a.d$c) -> a
    12:64:void a(java.lang.String,io.dcloud.common.DHInterface.ICallBack) -> a
    1:29:java.util.ArrayList b(java.lang.String) -> b
io.dcloud.g.a.d$a -> io.dcloud.g.a.d$a:
    1:1:void <init>(io.dcloud.g.a.d,io.dcloud.g.a.d$c) -> <init>
    1:113:void execute(java.lang.Object) -> execute
io.dcloud.g.a.d$a$a -> io.dcloud.g.a.d$a$a:
    1:1:void <init>(io.dcloud.g.a.d$a) -> <init>
    1:10:java.lang.Object onCallBack(int,java.lang.Object) -> onCallBack
io.dcloud.g.a.d$a$b -> io.dcloud.g.a.d$a$b:
    1:1:void <init>(io.dcloud.g.a.d$a,java.lang.String) -> <init>
    1:7:void run() -> run
io.dcloud.g.a.d$b -> io.dcloud.g.a.d$b:
    1:1:void <init>(io.dcloud.g.a.d,java.lang.String,java.lang.String,java.io.File,io.dcloud.common.DHInterface.ICallBack) -> <init>
    1:10:void run() -> run
io.dcloud.g.a.d$c -> io.dcloud.g.a.d$c:
    1:1:void <init>(io.dcloud.g.a.d) -> <init>
io.dcloud.g.a.e -> io.dcloud.g.a.e:
    1:3427:void <init>(io.dcloud.g.a.a,java.lang.String,byte) -> <init>
    1:1:java.lang.String a(io.dcloud.g.a.e) -> a
    2:2:byte a(io.dcloud.g.a.e,byte) -> a
    3:3:void a(io.dcloud.g.a.e,byte[]) -> a
    4:4:void a(io.dcloud.g.a.e,org.json.JSONObject) -> a
    5:622:boolean a(java.io.InputStream,java.lang.String,org.json.JSONObject) -> a
    623:631:org.json.JSONObject a(java.io.InputStream) -> a
    632:705:void a(android.app.Activity) -> a
    706:706:java.lang.String a(java.lang.String) -> a
    707:735:void a(io.dcloud.common.DHInterface.ICallBack) -> a
    736:782:boolean a(int) -> a
    783:783:boolean a(io.dcloud.common.DHInterface.IApp) -> a
    784:800:boolean a(boolean) -> a
    801:808:void a() -> a
    809:846:void a(org.json.JSONObject) -> a
    847:897:void a(byte[]) -> a
    898:899:io.dcloud.common.DHInterface.IFrameView a(io.dcloud.common.DHInterface.IWebviewStateListener) -> a
    900:901:io.dcloud.common.DHInterface.IFrameView a(io.dcloud.common.DHInterface.IWebviewStateListener,io.dcloud.common.DHInterface.IDCloudWebviewClientListener) -> a
    902:903:boolean a(io.dcloud.common.DHInterface.ISysEventListener,io.dcloud.common.DHInterface.ISysEventListener$SysEventType) -> a
    904:904:boolean a(io.dcloud.common.DHInterface.ISysEventListener$SysEventType) -> a
    905:1323:boolean a(java.lang.String,org.json.JSONObject) -> a
    1324:1327:java.lang.String a(byte) -> a
    1328:1336:void a(java.lang.String,int) -> a
    1337:1348:boolean a(org.json.JSONObject,io.dcloud.g.a.g) -> a
    1:1:void addAllFeaturePermission() -> addAllFeaturePermission
    1:1:void addFeaturePermission(java.lang.String) -> addFeaturePermission
    1:4:void applyMani() -> applyMani
    1:1:void applySmartUpdate() -> applySmartUpdate
    1:1:io.dcloud.common.DHInterface.IConfusionMgr b(io.dcloud.g.a.e) -> b
    2:2:void b(io.dcloud.g.a.e,org.json.JSONObject) -> b
    3:157:boolean b(java.lang.String,org.json.JSONObject) -> b
    158:158:void b(byte) -> b
    159:160:java.lang.String b(java.lang.String) -> b
    161:167:void b(boolean) -> b
    168:170:void b() -> b
    171:171:void b(org.json.JSONObject) -> b
    1:8:void c() -> c
    9:12:void c(org.json.JSONObject) -> c
    13:58:boolean c(java.lang.String,org.json.JSONObject) -> c
    59:59:java.lang.String c(java.lang.String) -> c
    1:18:boolean callSysEventListener(io.dcloud.common.DHInterface.ISysEventListener$SysEventType,java.lang.Object) -> callSysEventListener
    1:1:boolean checkIsCustomPath() -> checkIsCustomPath
    1:6:void checkOrLoadlaunchWebview() -> checkOrLoadlaunchWebview
    1:3:boolean checkPrivateDir(java.lang.String) -> checkPrivateDir
    1:10:java.lang.String checkPrivateDirAndCopy2Temp(java.lang.String) -> checkPrivateDirAndCopy2Temp
    1:6:boolean checkSchemeWhite(java.lang.String) -> checkSchemeWhite
    1:1:boolean checkWhiteUrl(java.lang.String) -> checkWhiteUrl
    1:77:java.lang.String convert2AbsFullPath(java.lang.String,java.lang.String) -> convert2AbsFullPath
    78:78:java.lang.String convert2AbsFullPath(java.lang.String) -> convert2AbsFullPath
    1:15:java.lang.String convert2LocalFullPath(java.lang.String,java.lang.String) -> convert2LocalFullPath
    1:30:java.lang.String convert2RelPath(java.lang.String) -> convert2RelPath
    1:39:java.lang.String convert2WebviewFullPath(java.lang.String,java.lang.String) -> convert2WebviewFullPath
    1:5:org.json.JSONObject d(java.lang.String) -> d
    1:1:void deleteAppTemp() -> deleteAppTemp
    1:26:void diyStatusBarState() -> diyStatusBarState
    1:24:void e() -> e
    1:16:void f() -> f
    17:32:boolean f(java.lang.String) -> f
    1:1:java.lang.String forceShortCut() -> forceShortCut
    1:5:boolean g(java.lang.String) -> g
    6:17:void g() -> g
    1:1:io.dcloud.common.DHInterface.IConfusionMgr getConfusionMgr() -> getConfusionMgr
    1:1:java.lang.String getDirectPage() -> getDirectPage
    1:1:io.dcloud.common.DHInterface.IApp$IAppStatusListener getIAppStatusListener() -> getIAppStatusListener
    1:1:java.lang.String getOriginalDirectPage() -> getOriginalDirectPage
    1:9:java.lang.String getPathByType(byte) -> getPathByType
    1:1:java.lang.String getPopGesture() -> getPopGesture
    1:1:int getQuitModel() -> getQuitModel
    1:8:org.json.JSONObject i() -> i
    1:1:boolean isOnAppRunningMode() -> isOnAppRunningMode
    1:68:org.json.JSONObject j() -> j
    1:2:float k() -> k
    1:10:void l() -> l
    1:11:void m() -> m
    1:1:boolean manifestBeParsed() -> manifestBeParsed
    1:17:void n() -> n
    1:1:boolean needRefreshApp() -> needRefreshApp
    1:1:boolean needReload() -> needReload
    1:1:boolean o() -> o
    1:9:java.lang.String obtainAdaptationJs() -> obtainAdaptationJs
    1:1:java.lang.String obtainAppDataPath() -> obtainAppDataPath
    1:1:java.lang.String obtainAppDocPath() -> obtainAppDocPath
    1:1:java.lang.String obtainAppId() -> obtainAppId
    1:10:java.lang.String obtainAppInfo() -> obtainAppInfo
    1:1:java.lang.String obtainAppLog() -> obtainAppLog
    1:1:java.lang.String obtainAppName() -> obtainAppName
    1:1:byte obtainAppStatus() -> obtainAppStatus
    1:1:java.lang.String obtainAppTempPath() -> obtainAppTempPath
    1:1:java.lang.String obtainAppVersionName() -> obtainAppVersionName
    1:1:java.lang.String obtainAppWebCachePath() -> obtainAppWebCachePath
    1:10:java.lang.String obtainAuthority(java.lang.String) -> obtainAuthority
    1:98:java.lang.String obtainConfigProperty(java.lang.String) -> obtainConfigProperty
    1:1:io.dcloud.common.DHInterface.IWebviewStateListener obtainLaunchPageStateListener() -> obtainLaunchPageStateListener
    1:1:java.lang.Object obtainMgrData(io.dcloud.common.DHInterface.IMgr$MgrType,int,java.lang.Object[]) -> obtainMgrData
    1:1:java.lang.String obtainOriginalAppId() -> obtainOriginalAppId
    1:16:java.io.InputStream obtainResInStream(java.lang.String,java.lang.String) -> obtainResInStream
    17:17:java.io.InputStream obtainResInStream(java.lang.String) -> obtainResInStream
    1:1:byte obtainRunningAppMode() -> obtainRunningAppMode
    1:3:java.lang.String obtainRuntimeArgs(boolean) -> obtainRuntimeArgs
    1:1:io.dcloud.common.util.AppStatusBarManager obtainStatusBarMgr() -> obtainStatusBarMgr
    1:29:org.json.JSONObject obtainThridInfo(io.dcloud.common.DHInterface.IApp$ConfigProperty$ThridInfo) -> obtainThridInfo
    1:1:java.lang.String obtainVersionSitemap() -> obtainVersionSitemap
    1:1:android.content.Intent obtainWebAppIntent() -> obtainWebAppIntent
    1:1:java.lang.String obtainWebviewBaseUrl() -> obtainWebviewBaseUrl
    1:4:boolean onExecute(io.dcloud.common.DHInterface.ISysEventListener$SysEventType,java.lang.Object) -> onExecute
    1:1:void onSplashClosed() -> onSplashClosed
    1:20:boolean p() -> p
    1:1:boolean q() -> q
    1:6:boolean r() -> r
    1:9:void registerSysEventListener(io.dcloud.common.DHInterface.ISysEventListener,io.dcloud.common.DHInterface.ISysEventListener$SysEventType) -> registerSysEventListener
    1:2:boolean s() -> s
    1:13:void setAppDataPath(java.lang.String) -> setAppDataPath
    1:1:void setAppDocPath(java.lang.String) -> setAppDocPath
    1:60:void setConfigProperty(java.lang.String,java.lang.String) -> setConfigProperty
    1:1:void setDirectPage(java.lang.String) -> setDirectPage
    1:1:void setHideNavBarState(boolean) -> setHideNavBarState
    1:1:void setIAppStatusListener(io.dcloud.common.DHInterface.IApp$IAppStatusListener) -> setIAppStatusListener
    1:1:void setLaunchPageStateListener(io.dcloud.common.DHInterface.IWebviewStateListener) -> setLaunchPageStateListener
    1:1:void setNeedRefreshApp(boolean) -> setNeedRefreshApp
    1:1:void setQuitModel(int) -> setQuitModel
    1:2:void setRuntimeArgs(java.lang.String) -> setRuntimeArgs
    1:3:void setStatus(byte) -> setStatus
    1:2:void setWebAppActivity(android.app.Activity) -> setWebAppActivity
    1:100:void setWebAppIntent(android.content.Intent) -> setWebAppIntent
    1:1:java.lang.String shortcutQuit() -> shortcutQuit
    1:5:void showSplash() -> showSplash
    1:1:boolean startFromShortCut() -> startFromShortCut
    1:20:void t() -> t
    1:1:java.lang.String toString() -> toString
    1:1:void u() -> u
    1:6:void unregisterSysEventListener(io.dcloud.common.DHInterface.ISysEventListener,io.dcloud.common.DHInterface.ISysEventListener$SysEventType) -> unregisterSysEventListener
    1:10:void updateDirectPage(java.lang.String) -> updateDirectPage
    1:14:void v() -> v
    1:16:java.lang.String w() -> w
    1:1:void x() -> x
    1:78:void y() -> y
io.dcloud.g.a.e$a -> io.dcloud.g.a.e$a:
    1:1:void <clinit>() -> <clinit>
io.dcloud.g.a.e$b -> io.dcloud.g.a.e$b:
    1:1:void <init>(io.dcloud.g.a.e) -> <init>
    1:3:void run() -> run
io.dcloud.g.a.e$c -> io.dcloud.g.a.e$c:
    1:1:void <init>(io.dcloud.g.a.e) -> <init>
    1:4:void run() -> run
io.dcloud.g.a.e$d -> io.dcloud.g.a.e$d:
    1:1:void <init>(io.dcloud.g.a.e,io.dcloud.common.DHInterface.ICallBack) -> <init>
    1:14:void run() -> run
io.dcloud.g.a.e$d$a -> io.dcloud.g.a.e$d$a:
    1:1:void <init>(io.dcloud.g.a.e$d) -> <init>
    1:1:void execute(java.lang.Object) -> execute
io.dcloud.g.a.e$e -> io.dcloud.g.a.e$e:
    1:1:void <init>(io.dcloud.g.a.e,java.lang.String) -> <init>
    1:1:void run() -> run
io.dcloud.g.a.e$f -> io.dcloud.g.a.e$f:
    1:1:void <init>(io.dcloud.g.a.e,io.dcloud.common.DHInterface.IApp,java.util.HashMap) -> <init>
    1:42:void run() -> run
io.dcloud.g.a.e$f$a -> io.dcloud.g.a.e$f$a:
    1:1:void <init>(io.dcloud.g.a.e$f,java.lang.String,java.util.HashMap,android.content.SharedPreferences) -> <init>
    1:12:boolean doRequest(io.dcloud.common.util.hostpicker.HostPicker$Host) -> doRequest
io.dcloud.g.a.e$g -> io.dcloud.g.a.e$g:
    1:1:void <init>(io.dcloud.g.a.e,org.json.JSONObject) -> <init>
    1:1:void onLoadingCancelled(java.lang.String,android.view.View) -> onLoadingCancelled
    1:16:void onLoadingComplete(java.lang.String,android.view.View,android.graphics.Bitmap) -> onLoadingComplete
    1:1:void onLoadingFailed(java.lang.String,android.view.View,com.nostra13.dcloudimageloader.core.assist.FailReason) -> onLoadingFailed
    1:1:void onLoadingStarted(java.lang.String,android.view.View) -> onLoadingStarted
io.dcloud.g.a.e$h -> io.dcloud.g.a.e$h:
    1:1:void <init>(io.dcloud.g.a.e,org.json.JSONObject) -> <init>
    1:1:void run() -> run
io.dcloud.g.a.e$i -> io.dcloud.g.a.e$i:
    1:1:void <init>(io.dcloud.g.a.e,org.json.JSONObject) -> <init>
    1:1:void run() -> run
io.dcloud.g.a.e$j -> io.dcloud.g.a.e$j:
    1:1:void <init>(io.dcloud.g.a.e) -> <init>
    1:3:void run() -> run
io.dcloud.g.a.f -> io.dcloud.g.a.f:
    1:31:void <init>() -> <init>
    1:4:void a(android.app.Activity) -> a
    1:1:int checkSelfPermission(java.lang.String,java.lang.String) -> checkSelfPermission
    1:1:void clearMaskLayerCount() -> clearMaskLayerCount
    1:1:android.app.Activity getActivity() -> getActivity
    1:1:io.dcloud.common.adapter.util.ViewRect getAppViewRect() -> getAppViewRect
    1:3:int getInt(int) -> getInt
    1:1:int getMaskLayerCount() -> getMaskLayerCount
    1:1:io.dcloud.common.DHInterface.IOnCreateSplashView getOnCreateSplashView() -> getOnCreateSplashView
    1:1:int getRequestedOrientation() -> getRequestedOrientation
    1:1:boolean isFullScreen() -> isFullScreen
    1:1:boolean isVerticalScreen() -> isVerticalScreen
    1:1:io.dcloud.common.DHInterface.IWebAppRootView obtainWebAppRootView() -> obtainWebAppRootView
    1:1:void requestPermissions(java.lang.String[],int) -> requestPermissions
    1:8:void setFullScreen(boolean) -> setFullScreen
    1:4:void setMaskLayer(boolean) -> setMaskLayer
    1:1:void setOnCreateSplashView(io.dcloud.common.DHInterface.IOnCreateSplashView) -> setOnCreateSplashView
    1:22:void setRequestedOrientation(java.lang.String) -> setRequestedOrientation
    23:23:void setRequestedOrientation(int) -> setRequestedOrientation
    1:1:void setWebAppRootView(io.dcloud.common.DHInterface.IWebAppRootView) -> setWebAppRootView
    1:62:void updateScreenInfo(int) -> updateScreenInfo
io.dcloud.g.a.f$a -> io.dcloud.g.a.f$a:
    1:1:void <init>(io.dcloud.g.a.f,java.lang.String) -> <init>
    1:14:void execute(java.lang.Object) -> execute
io.dcloud.g.a.g -> io.dcloud.g.a.g:
    1:8:void <init>() -> <init>
    1:4:void a() -> a
io.dcloud.g.b.a -> io.dcloud.g.b.a:
    1:21:void <init>() -> <init>
    1:1:void a(io.dcloud.g.b.a) -> a
    2:28:void a(android.content.Context) -> a
    29:98:void a() -> a
    99:101:boolean a(java.lang.String,org.json.JSONArray) -> a
    102:115:java.lang.String a(java.lang.String,java.lang.String) -> a
    116:129:org.json.JSONArray a(java.lang.String) -> a
    130:152:void a(int) -> a
    1:34:java.lang.String b() -> b
    1:19:java.lang.String c() -> c
    1:14:java.lang.String d() -> d
    1:9:java.util.List e() -> e
    1:8:io.dcloud.g.b.a f() -> f
    1:4:void g() -> g
io.dcloud.g.b.a$a -> io.dcloud.g.b.a$a:
    1:1:void <init>(io.dcloud.g.b.a) -> <init>
    1:4:void handleMessage(android.os.Message) -> handleMessage
io.dcloud.g.b.a$b -> io.dcloud.g.b.a$b:
    1:1:void <init>(io.dcloud.g.b.a) -> <init>
    1:6:void handleMessage(android.os.Message) -> handleMessage
io.dcloud.g.b.b -> io.dcloud.g.b.b:
    1:382:void <init>() -> <init>
    1:5:java.lang.String a(java.lang.String) -> a
    6:10:java.lang.String a(java.lang.String,byte) -> a
    1:4:io.dcloud.common.DHInterface.IConfusionMgr c() -> c
    1:6:java.lang.String decodeString(java.lang.String) -> decodeString
    7:42:java.lang.String decodeString(java.lang.String,boolean,int) -> decodeString
    1:3:java.lang.String decryptStr(java.lang.String) -> decryptStr
    4:6:java.lang.String decryptStr(java.lang.String,byte) -> decryptStr
    1:12:java.lang.String encodeString(java.lang.String,boolean,int) -> encodeString
    1:8:java.lang.String getCSJClassName() -> getCSJClassName
    1:3:java.util.Map getData(java.lang.String) -> getData
    1:46:java.io.InputStream getEncryptionInputStream(java.lang.String,io.dcloud.common.DHInterface.IApp) -> getEncryptionInputStream
    1:8:java.lang.String getGDTClassName() -> getGDTClassName
    1:8:java.lang.String getKSClassName() -> getKSClassName
    1:8:java.lang.String getSIV() -> getSIV
    1:8:java.lang.String getSK() -> getSK
    1:8:java.lang.String getSQK() -> getSQK
    1:3:java.lang.String handleEncryption(android.content.Context,byte[]) -> handleEncryption
    1:1:boolean isV3Encryption() -> isV3Encryption
    1:1:void recordEncryptionResources(java.lang.String,org.json.JSONObject) -> recordEncryptionResources
    1:4:boolean recordEncryptionV3Resources(java.lang.String,java.lang.String) -> recordEncryptionV3Resources
    1:1:void removeData(java.lang.String) -> removeData
io.dcloud.g.b.c -> io.dcloud.g.b.c:
    1:16:void <init>() -> <init>
    1:1:void a(io.dcloud.g.b.c,android.app.Activity,io.dcloud.common.DHInterface.IApp) -> a
    2:6:io.dcloud.g.b.c a(android.content.Context,io.dcloud.common.DHInterface.ICore$ICoreStatusListener) -> a
    7:33:void a(android.app.Activity,android.os.Bundle,io.dcloud.feature.internal.sdk.SDK$IntegratedMode) -> a
    34:40:void a(android.content.Context) -> a
    41:41:void a(android.app.Activity,io.dcloud.common.DHInterface.IApp) -> a
    42:84:void a(android.app.Activity,android.content.Intent,io.dcloud.common.DHInterface.IApp,java.lang.String) -> a
    85:85:io.dcloud.common.DHInterface.IApp a(android.app.Activity,java.lang.String,java.lang.String,io.dcloud.common.DHInterface.IOnCreateSplashView) -> a
    86:97:boolean a(android.content.Intent,java.lang.String) -> a
    98:128:io.dcloud.common.DHInterface.IApp a(android.app.Activity,java.lang.String,java.lang.String,io.dcloud.common.DHInterface.IOnCreateSplashView,boolean) -> a
    129:129:void a(android.app.Activity,java.lang.String,java.lang.String) -> a
    130:166:void a(android.content.Context,io.dcloud.common.DHInterface.ISysEventListener$SysEventType,java.lang.Object) -> a
    167:174:void a(android.app.Activity) -> a
    175:202:java.lang.Object a(int,java.lang.Object) -> a
    203:206:void a() -> a
    1:18:void b(android.content.Context) -> b
    19:34:void b(android.app.Activity) -> b
    1:21:boolean c(android.app.Activity) -> c
    1:42:java.lang.Object dispatchEvent(io.dcloud.common.DHInterface.IMgr$MgrType,int,java.lang.Object) -> dispatchEvent
    1:1:android.content.Context obtainContext() -> obtainContext
    1:28:boolean onActivityExecute(android.app.Activity,io.dcloud.common.DHInterface.ISysEventListener$SysEventType,java.lang.Object) -> onActivityExecute
    1:1:void setmCoreListener(io.dcloud.common.DHInterface.ICore$ICoreStatusListener) -> setmCoreListener
io.dcloud.g.b.c$a -> io.dcloud.g.b.c$a:
    1:1:void <init>(io.dcloud.g.b.c,android.content.Context) -> <init>
    1:7:void run() -> run
io.dcloud.g.b.c$b -> io.dcloud.g.b.c$b:
    1:1:void <init>(io.dcloud.g.b.c,io.dcloud.common.DHInterface.IApp,android.app.Activity,java.lang.String) -> <init>
    1:8:void execute(java.lang.Object) -> execute
io.dcloud.g.b.c$c -> io.dcloud.g.b.c$c:
    1:1:void <init>(io.dcloud.g.b.c,java.lang.String,android.app.Activity,java.lang.String) -> <init>
    1:6:void onExecuteEnd(java.lang.Object) -> onExecuteEnd
    1:13:java.lang.Object onExecuting() -> onExecuting
io.dcloud.g.b.c$c$a -> io.dcloud.g.b.c$c$a:
    1:1:void <init>(io.dcloud.g.b.c$c) -> <init>
    1:1:void execute(java.lang.Object) -> execute
io.dcloud.g.b.c$d -> io.dcloud.g.b.c$d:
    1:2:void <clinit>() -> <clinit>
io.dcloud.g.b.d -> io.dcloud.g.b.d:
    1:106:void <init>(android.content.Context,io.dcloud.common.DHInterface.ICore$ICoreStatusListener) -> <init>
    1:21:void a(android.app.Activity,android.os.Bundle,io.dcloud.feature.internal.sdk.SDK$IntegratedMode,io.dcloud.common.DHInterface.IOnCreateSplashView) -> a
    22:35:boolean a(android.content.Intent,java.lang.String) -> a
    36:42:io.dcloud.common.DHInterface.IApp a(android.app.Activity,android.content.Intent,io.dcloud.common.DHInterface.IOnCreateSplashView,java.lang.String) -> a
    43:46:boolean a(android.app.Activity,io.dcloud.common.DHInterface.ISysEventListener$SysEventType,java.lang.Object) -> a
    47:49:void a(android.app.Activity) -> a
    50:57:void a(android.app.Activity,android.content.Intent) -> a
    58:59:void a(android.app.Activity,int) -> a
    60:60:io.dcloud.common.DHInterface.ICore a() -> a
    1:3:void b(android.app.Activity) -> b
    4:4:android.content.Context b() -> b
    1:3:boolean c(android.app.Activity) -> c
io.dcloud.g.b.f.a -> io.dcloud.g.b.f.a:
    1:90:java.util.HashMap a(io.dcloud.common.DHInterface.IApp,android.content.SharedPreferences) -> a
    91:119:void a(io.dcloud.common.DHInterface.IApp,java.util.HashMap) -> a
    120:235:void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,org.json.JSONObject,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.util.HashMap) -> a
    236:261:void a(android.content.Context,java.lang.String,java.lang.String,int,java.lang.String,java.util.HashMap) -> a
    262:264:void a(android.app.Activity) -> a
    265:269:boolean a(java.lang.String) -> a
    270:306:java.util.HashMap a(android.app.Activity,android.content.SharedPreferences,io.dcloud.common.DHInterface.IApp) -> a
    307:307:void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    1:54:java.util.Map b(android.content.Context,java.lang.String,java.lang.String,int,java.lang.String,java.util.HashMap) -> b
io.dcloud.g.b.f.a$a -> io.dcloud.g.b.f.a$a:
    1:1:void <init>(java.lang.String,java.util.HashMap) -> <init>
    1:14:boolean doRequest(io.dcloud.common.util.hostpicker.HostPicker$Host) -> doRequest
io.dcloud.g.b.f.a$b -> io.dcloud.g.b.f.a$b:
    1:1:void <init>(java.lang.String,java.util.HashMap) -> <init>
    1:9:boolean doRequest(io.dcloud.common.util.hostpicker.HostPicker$Host) -> doRequest
io.dcloud.g.b.f.a$c -> io.dcloud.g.b.f.a$c:
    1:1:void <init>(android.app.Activity,java.util.HashMap) -> <init>
    1:57:void run() -> run
io.dcloud.g.c.a -> io.dcloud.g.c.a:
    1:2:void <init>(io.dcloud.g.c.a$b) -> <init>
    1:1:io.dcloud.g.c.a$b a(io.dcloud.g.c.a) -> a
    2:23:int a(android.content.Context) -> a
    1:1:boolean b(android.content.Context) -> b
io.dcloud.g.c.a$c -> io.dcloud.g.c.a$c:
    1:1:void <init>(io.dcloud.g.c.a) -> <init>
    2:2:void <init>(io.dcloud.g.c.a,io.dcloud.g.c.a$a) -> <init>
    1:25:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
io.dcloud.g.c.b -> io.dcloud.g.c.b:
    1:1:void <clinit>() -> <clinit>
    1:1:java.util.List a() -> a
    2:3:java.lang.String a(int) -> a
io.dcloud.g.c.b$a -> io.dcloud.g.c.b$a:
    1:5:void <init>() -> <init>
io.dcloud.g.d.a -> io.dcloud.g.d.a:
    1:1:void <clinit>() -> <clinit>
    1:19:io.dcloud.g.d.a$c a(java.lang.String) -> a
    20:39:io.dcloud.g.d.a$c a(java.lang.String,byte[],int) -> a
    40:43:byte[] a(int) -> a
    44:44:io.dcloud.g.d.a$a a(java.lang.String,io.dcloud.g.d.a$c) -> a
    45:45:io.dcloud.g.d.a$a a(java.lang.String,io.dcloud.g.d.a$c,java.lang.String) -> a
    46:59:io.dcloud.g.d.a$a a(byte[],io.dcloud.g.d.a$c) -> a
    60:66:void a() -> a
    67:67:java.lang.String a(io.dcloud.g.d.a$a,io.dcloud.g.d.a$c,java.lang.String) -> a
    68:78:byte[] a(io.dcloud.g.d.a$a,io.dcloud.g.d.a$c) -> a
    79:81:byte[] a(byte[],javax.crypto.SecretKey) -> a
    82:87:boolean a(byte[],byte[]) -> a
    88:89:byte[] a(byte[],int,int) -> a
    1:1:byte[] b() -> b
    2:2:java.lang.String b(io.dcloud.g.d.a$a,io.dcloud.g.d.a$c) -> b
    1:12:io.dcloud.g.d.a$c c() -> c
io.dcloud.g.d.a$a -> io.dcloud.g.d.a$a:
    1:7:void <init>(byte[],byte[],byte[]) -> <init>
    8:16:void <init>(java.lang.String) -> <init>
    1:1:byte[] a() -> a
    2:4:byte[] a(byte[],byte[]) -> a
    1:1:byte[] b() -> b
    1:1:byte[] c() -> c
    1:8:boolean equals(java.lang.Object) -> equals
    1:3:int hashCode() -> hashCode
    1:4:java.lang.String toString() -> toString
io.dcloud.g.d.a$b -> io.dcloud.g.d.a$b:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:1:byte[] a() -> a
    1:2:void b() -> b
    1:30:void c() -> c
    1:11:byte[] d() -> d
    1:13:byte[] e() -> e
    1:1:java.lang.String f() -> f
    1:94:void g() -> g
io.dcloud.g.d.a$b$a -> io.dcloud.g.d.a$b$a:
    1:3:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:15:java.io.DataInputStream a() -> a
    1:6:java.io.OutputStream b() -> b
    1:2:byte[] engineGenerateSeed(int) -> engineGenerateSeed
    1:19:void engineNextBytes(byte[]) -> engineNextBytes
    1:22:void engineSetSeed(byte[]) -> engineSetSeed
io.dcloud.g.d.a$b$b -> io.dcloud.g.d.a$b$b:
    1:8:void <init>() -> <init>
io.dcloud.g.d.a$c -> io.dcloud.g.d.a$c:
    1:3:void <init>(javax.crypto.SecretKey,javax.crypto.SecretKey) -> <init>
    1:1:javax.crypto.SecretKey a() -> a
    2:2:void a(javax.crypto.SecretKey) -> a
    1:1:javax.crypto.SecretKey b() -> b
    2:2:void b(javax.crypto.SecretKey) -> b
    1:6:boolean equals(java.lang.Object) -> equals
    1:2:int hashCode() -> hashCode
    1:2:java.lang.String toString() -> toString
io.dcloud.g.d.b -> io.dcloud.g.d.b:
    1:13:void <init>(android.content.Context,java.lang.String) -> <init>
    1:7:io.dcloud.g.d.b a(android.content.Context,java.lang.String) -> a
    8:11:java.lang.String a(android.content.Context) -> a
    12:13:boolean a(java.lang.String) -> a
    14:28:java.lang.String a(java.lang.String,java.lang.String) -> a
    1:22:void b(java.lang.String,java.lang.String) -> b
    23:28:java.lang.String b(java.lang.String) -> b
    1:5:java.lang.String c(java.lang.String) -> c
    1:4:java.lang.String d(java.lang.String) -> d
io.dcloud.h.a -> io.dcloud.h.a:
    1:1:void a(io.dcloud.common.DHInterface.INativeAppInfo) -> a
    2:3:java.lang.String a(java.lang.String,boolean,int) -> a
    4:5:java.lang.String a(android.content.Context,byte[]) -> a
    6:7:java.lang.String a(java.lang.String) -> a
    8:9:java.lang.String a() -> a
    1:2:java.lang.String b(java.lang.String,boolean,int) -> b
    3:4:java.lang.String b(java.lang.String) -> b
    5:6:java.lang.String b() -> b
    1:2:java.lang.String c() -> c
io.dcloud.i.b -> io.dcloud.i.b:
    1:492:void <init>(io.dcloud.common.DHInterface.ICore) -> <init>
    1:6:java.lang.String a(io.dcloud.common.DHInterface.IApp,io.dcloud.common.DHInterface.IFrameView) -> a
    7:19:java.lang.String a(io.dcloud.common.DHInterface.IWebview) -> a
    20:100:java.lang.String a(io.dcloud.common.DHInterface.IApp,io.dcloud.common.DHInterface.IWebview) -> a
    101:105:java.lang.String a(io.dcloud.common.DHInterface.IApp) -> a
    106:113:java.lang.String a() -> a
    114:148:java.lang.String a(java.lang.Object[]) -> a
    149:149:java.lang.Object a(java.lang.String,android.app.Activity) -> a
    150:163:java.util.HashMap a(java.util.HashMap) -> a
    164:168:void a(java.util.Iterator) -> a
    169:190:void a(java.lang.String) -> a
    191:194:void a(io.dcloud.common.DHInterface.IWebview,java.lang.String) -> a
    1:2:java.lang.String b(io.dcloud.common.DHInterface.IApp) -> b
    3:3:java.lang.String b(java.lang.Object[]) -> b
    4:75:io.dcloud.common.DHInterface.IFeature b(java.lang.String,android.app.Activity) -> b
    76:80:void b() -> b
    81:81:boolean b(java.lang.String) -> b
    1:6:void c(java.lang.String) -> c
    7:14:boolean c() -> c
    1:45:java.util.HashMap d() -> d
    1:9:void dispose() -> dispose
    1:249:java.lang.Object processEvent(io.dcloud.common.DHInterface.IMgr$MgrType,int,java.lang.Object) -> processEvent
io.dcloud.invocation.Invocation -> io.dcloud.invocation.Invocation:
    1:1:void <init>() -> <init>
    1:1:void dispose(java.lang.String) -> dispose
    1:1:java.lang.String execute(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String[]) -> execute
    1:1:void init(io.dcloud.common.DHInterface.AbsMgr,java.lang.String) -> init
io.dcloud.invocation.a -> io.dcloud.invocation.a:
    1:2:void <clinit>() -> <clinit>
    1:9:void <init>(io.dcloud.common.DHInterface.AbsMgr) -> <init>
    1:1:void a(io.dcloud.invocation.a,io.dcloud.common.DHInterface.IWebview,java.lang.String[],org.json.JSONArray,org.json.JSONArray,org.json.JSONArray,org.json.JSONArray) -> a
    2:226:java.lang.String a(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String[]) -> a
    227:236:void a(io.dcloud.common.DHInterface.IWebview,java.lang.String[],org.json.JSONArray,org.json.JSONArray,org.json.JSONArray,org.json.JSONArray) -> a
    237:237:java.lang.String a(java.lang.Exception,java.lang.String) -> a
    238:263:void a(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String) -> a
    264:292:java.lang.String a(io.dcloud.common.DHInterface.IWebview,java.lang.Object) -> a
    293:302:java.lang.String a(java.lang.Class) -> a
    303:312:void a(java.lang.Class,org.json.JSONStringer,java.util.ArrayList) -> a
    313:332:void a(io.dcloud.common.DHInterface.IWebview,java.lang.Object,java.lang.Class,java.lang.StringBuffer) -> a
    333:336:java.util.HashMap a(io.dcloud.common.DHInterface.IWebview) -> a
    337:337:io.dcloud.invocation.c a(java.util.HashMap,java.lang.String) -> a
    338:338:io.dcloud.invocation.c a(io.dcloud.common.DHInterface.IWebview,java.lang.String) -> a
    339:340:void a(io.dcloud.common.DHInterface.IWebview,java.lang.String,io.dcloud.invocation.c) -> a
    341:344:io.dcloud.invocation.c a(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.Object) -> a
    345:345:java.lang.String a(java.lang.Object) -> a
    346:359:boolean a(java.lang.String,java.lang.String,io.dcloud.common.DHInterface.IWebview) -> a
    360:360:void a(java.lang.String) -> a
    1:10:void b(java.lang.Class,org.json.JSONStringer,java.util.ArrayList) -> b
    11:23:java.lang.String b(io.dcloud.common.DHInterface.IWebview,java.lang.Object) -> b
    1:18:java.lang.Object onCallBack(java.lang.String,java.lang.Object) -> onCallBack
io.dcloud.invocation.a$a -> io.dcloud.invocation.a$a:
    1:1:void <init>(io.dcloud.invocation.a,org.json.JSONArray,io.dcloud.common.DHInterface.IWebview,java.lang.String[],org.json.JSONArray,org.json.JSONArray,org.json.JSONArray) -> <init>
    1:10:void onDenied(java.lang.String) -> onDenied
    1:3:void onGranted(java.lang.String) -> onGranted
io.dcloud.invocation.a$b -> io.dcloud.invocation.a$b:
    1:1:void <init>(io.dcloud.invocation.a,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> <init>
    1:13:boolean onExecute(io.dcloud.common.DHInterface.ISysEventListener$SysEventType,java.lang.Object) -> onExecute
io.dcloud.invocation.a$c -> io.dcloud.invocation.a$c:
    1:1:void <init>(io.dcloud.invocation.a,io.dcloud.common.DHInterface.IWebview,io.dcloud.common.DHInterface.ISysEventListener) -> <init>
    1:3:java.lang.Object onCallBack(java.lang.String,java.lang.Object) -> onCallBack
io.dcloud.invocation.a$d -> io.dcloud.invocation.a$d:
    1:1:void <clinit>() -> <clinit>
io.dcloud.invocation.b -> io.dcloud.invocation.b:
    1:22:void <init>(io.dcloud.common.DHInterface.IWebview,java.lang.String,org.json.JSONArray,java.lang.String) -> <init>
    1:1:java.lang.Object a(org.json.JSONArray) -> a
    1:47:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
io.dcloud.invocation.c -> io.dcloud.invocation.c:
    1:12:void <init>(io.dcloud.common.DHInterface.IWebview,io.dcloud.invocation.a,java.lang.Class,java.lang.String,org.json.JSONArray) -> <init>
    13:32:void <init>(io.dcloud.invocation.a,java.lang.Class,java.lang.String,java.lang.Object) -> <init>
    1:25:java.lang.Object a(io.dcloud.common.DHInterface.IWebview,io.dcloud.invocation.a,java.lang.Class,org.json.JSONArray) -> a
    26:32:java.lang.Object a(java.lang.Class,java.lang.Object,java.lang.String) -> a
    33:39:java.lang.String a(io.dcloud.common.DHInterface.IWebview,io.dcloud.invocation.a) -> a
    40:40:java.lang.Object a(io.dcloud.common.DHInterface.IWebview,java.lang.String,org.json.JSONArray) -> a
    41:47:java.lang.Object a(io.dcloud.common.DHInterface.IWebview,io.dcloud.invocation.a,java.lang.Class,java.lang.Object,java.lang.String,org.json.JSONArray) -> a
    48:73:java.lang.Object a(java.lang.Object,java.lang.reflect.Method,java.lang.Object[],boolean) -> a
    74:90:java.lang.reflect.Method a(java.lang.Class,java.lang.String,java.lang.Class[],java.lang.Object[]) -> a
    91:107:boolean a(java.lang.Class[],java.lang.Class[],java.lang.Object[]) -> a
    108:126:boolean a(java.lang.Class,java.lang.Class[],java.lang.Object[],int) -> a
    127:150:java.lang.Object a(java.lang.Object,java.lang.Class,int,io.dcloud.invocation.c$a) -> a
    151:151:boolean a(java.lang.Class,java.lang.Class) -> a
    152:153:boolean a(java.lang.Class,java.lang.Class[],int) -> a
    154:180:java.lang.Object a(java.lang.Object,java.lang.Class) -> a
    181:184:java.lang.Class a(java.lang.Class) -> a
    185:258:java.lang.Object[] a(io.dcloud.common.DHInterface.IWebview,io.dcloud.invocation.a,java.lang.Object) -> a
    259:276:java.lang.Object[] a(io.dcloud.common.DHInterface.IWebview,io.dcloud.invocation.a,org.json.JSONArray) -> a
    277:279:void a() -> a
    1:9:void b(io.dcloud.common.DHInterface.IWebview,io.dcloud.invocation.a,java.lang.Class,java.lang.Object,java.lang.String,org.json.JSONArray) -> b
    10:31:java.lang.reflect.Method b(java.lang.Class,java.lang.String,java.lang.Class[],java.lang.Object[]) -> b
    32:74:java.lang.Object[] b(java.lang.Class) -> b
    75:75:boolean b(java.lang.Class,java.lang.Class) -> b
    76:77:boolean b(java.lang.Class,java.lang.Class[],int) -> b
    1:2:boolean c(java.lang.Class,java.lang.Class[],int) -> c
    3:3:boolean c(java.lang.Class,java.lang.Class) -> c
    4:4:boolean c(java.lang.Class) -> c
    1:1:boolean d(java.lang.Class) -> d
    1:6:boolean e(java.lang.Class) -> e
    1:1:boolean equals(java.lang.Object) -> equals
io.dcloud.invocation.c$a -> io.dcloud.invocation.c$a:
    1:4:void <init>(int) -> <init>
    1:2:int[] a(int) -> a
    3:4:void a(int,int) -> a
io.dcloud.invocation.d -> io.dcloud.invocation.d:
    1:2:void <clinit>() -> <clinit>
    1:5:java.lang.Class a(java.lang.String) -> a
    6:28:void a(java.lang.StringBuffer,java.util.ArrayList,java.lang.StringBuffer,java.util.ArrayList,java.lang.Class) -> a
    29:41:void a(io.dcloud.common.DHInterface.IWebview,io.dcloud.invocation.a,java.lang.Object,java.lang.reflect.Field,boolean,java.lang.StringBuffer,java.lang.StringBuffer) -> a
    42:50:void a(io.dcloud.common.DHInterface.IWebview,io.dcloud.invocation.a,java.lang.Class,java.lang.Object,java.lang.String,boolean,java.lang.StringBuffer,java.lang.StringBuffer) -> a
    51:77:void a(io.dcloud.common.DHInterface.IWebview,io.dcloud.invocation.a,java.lang.Object,java.lang.Class,java.lang.StringBuffer) -> a
    78:103:int a(java.lang.Object) -> a
    104:143:java.lang.String a(io.dcloud.common.DHInterface.IWebview,io.dcloud.invocation.a,java.lang.String) -> a
    144:154:void a(java.lang.Class,java.lang.String,java.lang.StringBuffer,java.lang.StringBuffer) -> a
    155:156:void a(java.lang.StringBuffer) -> a
    157:157:boolean a(java.lang.Class) -> a
    158:166:java.lang.Object a(java.lang.Object,java.lang.Class) -> a
    1:2:java.lang.String b(java.lang.String) -> b
    3:3:java.lang.String b(java.lang.Class) -> b
    1:19:java.lang.String c(java.lang.Class) -> c
io.dcloud.js.camera.CameraFeatureImpl -> io.dcloud.js.camera.CameraFeatureImpl:
    1:1:void <init>() -> <init>
    1:271:java.lang.String execute(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String[]) -> execute
io.dcloud.js.camera.CameraFeatureImpl$a -> io.dcloud.js.camera.CameraFeatureImpl$a:
    1:1:void <init>(io.dcloud.js.camera.CameraFeatureImpl,io.dcloud.common.DHInterface.IApp,io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String,io.dcloud.js.camera.a$a,io.dcloud.common.DHInterface.IApp) -> <init>
    1:2:void onDenied(java.lang.String) -> onDenied
    1:154:void onGranted(java.lang.String) -> onGranted
io.dcloud.js.camera.CameraFeatureImpl$a$a -> io.dcloud.js.camera.CameraFeatureImpl$a$a:
    1:1:void <init>(io.dcloud.js.camera.CameraFeatureImpl$a,io.dcloud.common.util.DCFileUriData) -> <init>
    1:127:boolean onExecute(io.dcloud.common.DHInterface.ISysEventListener$SysEventType,java.lang.Object) -> onExecute
io.dcloud.js.camera.CameraFeatureImpl$a$a$a -> io.dcloud.js.camera.CameraFeatureImpl$a$a$a:
    1:1:void <init>(io.dcloud.js.camera.CameraFeatureImpl$a$a) -> <init>
    1:101:void run() -> run
io.dcloud.js.camera.CameraFeatureImpl$a$a$a$a -> io.dcloud.js.camera.CameraFeatureImpl$a$a$a$a:
    1:1:void <init>(io.dcloud.js.camera.CameraFeatureImpl$a$a$a) -> <init>
    1:2:void run() -> run
io.dcloud.js.camera.CameraFeatureImpl$a$a$a$b -> io.dcloud.js.camera.CameraFeatureImpl$a$a$a$b:
    1:1:void <init>(io.dcloud.js.camera.CameraFeatureImpl$a$a$a) -> <init>
    1:2:void run() -> run
io.dcloud.js.camera.CameraFeatureImpl$a$a$a$c -> io.dcloud.js.camera.CameraFeatureImpl$a$a$a$c:
    1:1:void <init>(io.dcloud.js.camera.CameraFeatureImpl$a$a$a,java.lang.String) -> <init>
    1:27:boolean onExecute(io.dcloud.common.DHInterface.ISysEventListener$SysEventType,java.lang.Object) -> onExecute
io.dcloud.js.camera.CameraFeatureImpl$a$a$a$c$a -> io.dcloud.js.camera.CameraFeatureImpl$a$a$a$c$a:
    1:1:void <init>(io.dcloud.js.camera.CameraFeatureImpl$a$a$a$c) -> <init>
    1:1:void run() -> run
io.dcloud.js.camera.CameraFeatureImpl$a$a$a$c$a$a -> io.dcloud.js.camera.CameraFeatureImpl$a$a$a$c$a$a:
    1:1:void <init>(io.dcloud.js.camera.CameraFeatureImpl$a$a$a$c$a) -> <init>
    1:1:void run() -> run
io.dcloud.js.camera.CameraFeatureImpl$a$a$a$d -> io.dcloud.js.camera.CameraFeatureImpl$a$a$a$d:
    1:1:void <init>(io.dcloud.js.camera.CameraFeatureImpl$a$a$a,java.lang.String) -> <init>
    1:1:void run() -> run
io.dcloud.js.camera.CameraFeatureImpl$b -> io.dcloud.js.camera.CameraFeatureImpl$b:
    1:1:void <init>(io.dcloud.js.camera.CameraFeatureImpl,io.dcloud.common.DHInterface.IApp,java.lang.String[],io.dcloud.common.DHInterface.IApp,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> <init>
    1:2:void onDenied(java.lang.String) -> onDenied
    1:63:void onGranted(java.lang.String) -> onGranted
io.dcloud.js.camera.CameraFeatureImpl$b$a -> io.dcloud.js.camera.CameraFeatureImpl$b$a:
    1:1:void <init>(io.dcloud.js.camera.CameraFeatureImpl$b,java.lang.String) -> <init>
    1:22:boolean onExecute(io.dcloud.common.DHInterface.ISysEventListener$SysEventType,java.lang.Object) -> onExecute
io.dcloud.js.camera.CameraFeatureImpl$c -> io.dcloud.js.camera.CameraFeatureImpl$c:
    1:1:void <init>(io.dcloud.js.camera.CameraFeatureImpl,io.dcloud.common.DHInterface.IApp,io.dcloud.js.camera.a,java.lang.String[],io.dcloud.common.DHInterface.IWebview) -> <init>
    1:3:void onGranted(java.lang.String) -> onGranted
io.dcloud.js.camera.a -> io.dcloud.js.camera.a:
    1:14:void <init>(int) -> <init>
    1:2:java.lang.String a() -> a
    3:5:java.lang.String[] a(java.util.List) -> a
    6:29:io.dcloud.js.camera.a$a a(java.lang.String,boolean) -> a
    1:23:void b() -> b
    24:35:java.lang.String b(java.util.List) -> b
    1:3:java.lang.String c() -> c
    1:8:java.lang.String[] d() -> d
    1:3:java.lang.String e() -> e
io.dcloud.js.camera.a$a -> io.dcloud.js.camera.a$a:
    1:9:void <init>() -> <init>
    1:1:java.lang.String a() -> a
    1:1:int b() -> b
io.dcloud.js.camera.b -> io.dcloud.js.camera.b:
    1:39:java.lang.String a(android.graphics.Bitmap,java.lang.String) -> a
    40:52:java.lang.String a(java.lang.String) -> a
    53:64:android.graphics.Bitmap a(int,android.graphics.Bitmap) -> a
    1:2:android.graphics.Bitmap b(java.lang.String) -> b
    1:15:int c(java.lang.String) -> c
io.dcloud.js.file.FileFeatureImpl -> io.dcloud.js.file.FileFeatureImpl:
    1:1:void <init>() -> <init>
    1:1:void a(io.dcloud.js.file.FileFeatureImpl,int,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> a
    2:2:void a(io.dcloud.js.file.FileFeatureImpl,java.lang.String,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> a
    3:15:void a(io.dcloud.common.DHInterface.IWebview,io.dcloud.common.DHInterface.IApp,java.lang.String[],java.lang.String) -> a
    16:122:void a(java.lang.String,java.lang.String,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> a
    123:147:org.json.JSONObject a(java.lang.String) -> a
    148:148:void a(int,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> a
    149:163:java.lang.String a(android.content.Context,int) -> a
    164:231:void a(java.lang.String,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> a
    232:237:java.lang.String[] a(io.dcloud.common.DHInterface.IWebview,java.lang.String[],java.lang.String) -> a
    1:50:void b(io.dcloud.common.DHInterface.IWebview,java.lang.String[],java.lang.String) -> b
    51:54:java.lang.String b(java.lang.String) -> b
    1:8:java.lang.String c(java.lang.String) -> c
    1:15:java.lang.String d(java.lang.String) -> d
    1:4:boolean e(java.lang.String) -> e
    1:4490:java.lang.String execute(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String[]) -> execute
io.dcloud.js.file.FileFeatureImpl$a -> io.dcloud.js.file.FileFeatureImpl$a:
    1:1:void <init>(io.dcloud.js.file.FileFeatureImpl,java.lang.String,int,int,java.lang.String,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> <init>
    1:3:void onExecuteEnd(java.lang.Object) -> onExecuteEnd
    1:71:java.lang.Object onExecuting() -> onExecuting
io.dcloud.js.file.FileFeatureImpl$b -> io.dcloud.js.file.FileFeatureImpl$b:
    1:1:void <init>(io.dcloud.js.file.FileFeatureImpl,java.lang.String,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> <init>
    1:7:void a(java.io.File,com.bumptech.glide.request.transition.Transition) -> a
    1:1:void onLoadFailed(android.graphics.drawable.Drawable) -> onLoadFailed
    1:1:void onResourceReady(java.lang.Object,com.bumptech.glide.request.transition.Transition) -> onResourceReady
io.dcloud.js.file.FileFeatureImpl$c -> io.dcloud.js.file.FileFeatureImpl$c:
    1:1:void <init>(io.dcloud.js.file.FileFeatureImpl,java.io.File,java.lang.String,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> <init>
    1:9:void run() -> run
io.dcloud.js.file.FileFeatureImpl$d -> io.dcloud.js.file.FileFeatureImpl$d:
    1:1:void <init>(io.dcloud.js.file.FileFeatureImpl,int,io.dcloud.common.DHInterface.IApp,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> <init>
    1:37:boolean onExecute(io.dcloud.common.DHInterface.ISysEventListener$SysEventType,java.lang.Object) -> onExecute
io.dcloud.js.file.FileFeatureImpl$e -> io.dcloud.js.file.FileFeatureImpl$e:
    1:1:void <init>(io.dcloud.js.file.FileFeatureImpl,java.lang.String[],io.dcloud.common.DHInterface.IWebview,java.lang.String,int,java.lang.String) -> <init>
    1:10:java.lang.Object onExecuting() -> onExecuting
io.dcloud.js.file.FileFeatureImpl$f -> io.dcloud.js.file.FileFeatureImpl$f:
    1:1:void <init>(io.dcloud.js.file.FileFeatureImpl,java.lang.String,int,int,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> <init>
    1:3:void onExecuteEnd(java.lang.Object) -> onExecuteEnd
    1:73:java.lang.Object onExecuting() -> onExecuting
io.dcloud.js.file.a -> io.dcloud.js.file.a:
    1:9:org.json.JSONObject a(java.lang.String,long,long,java.lang.String,java.lang.String) -> a
    10:22:org.json.JSONObject a(java.lang.String,int,java.lang.String,java.lang.String,java.lang.String) -> a
    23:31:org.json.JSONObject a(java.lang.String,java.lang.String,java.lang.String,boolean) -> a
    32:43:org.json.JSONObject a(java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.String,int,org.json.JSONObject) -> a
    44:45:org.json.JSONObject a(java.lang.String,java.lang.String) -> a
    46:62:org.json.JSONObject a(java.lang.String,boolean) -> a
    63:75:void a(java.io.File,io.dcloud.js.file.a$a,boolean) -> a
    1:25:org.json.JSONArray b(java.lang.String,java.lang.String) -> b
io.dcloud.js.file.a$a -> io.dcloud.js.file.a$a:
    1:11:void <init>() -> <init>
    1:7:org.json.JSONObject a() -> a
io.dcloud.js.gallery.GalleryFeatureImpl -> io.dcloud.js.gallery.GalleryFeatureImpl:
    1:7:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:17:java.util.ArrayList JSONArrayToMedias(int,org.json.JSONArray) -> JSONArrayToMedias
    1:1:void a(io.dcloud.js.gallery.GalleryFeatureImpl,io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String[]) -> a
    2:2:java.lang.String a() -> a
    3:3:void a(io.dcloud.js.gallery.GalleryFeatureImpl,io.dcloud.common.DHInterface.IApp,io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String[],boolean) -> a
    4:4:java.util.ArrayList a(io.dcloud.js.gallery.GalleryFeatureImpl) -> a
    5:127:void a(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String[]) -> a
    128:149:void a(android.app.Activity,java.lang.String) -> a
    150:187:void a(io.dcloud.common.DHInterface.IApp,io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String[],boolean) -> a
    1:1:void b(io.dcloud.js.gallery.GalleryFeatureImpl,io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String[]) -> b
    2:2:int b() -> b
    3:77:void b(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String[]) -> b
    1:1:int c() -> c
    1:1:int d() -> d
    1:7:void dispose(java.lang.String) -> dispose
    1:1:int e() -> e
    1:38:java.lang.String execute(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String[]) -> execute
    1:44:android.content.Intent getMediaPickerIntent(android.content.Context,java.lang.String,int,org.json.JSONArray,java.lang.String,boolean,java.lang.String,org.json.JSONObject,java.lang.String,java.lang.String) -> getMediaPickerIntent
    1:6:java.lang.String[] mediasToJSONArray(java.util.ArrayList) -> mediasToJSONArray
    1:6:void onMaxed(android.content.Context,java.lang.String) -> onMaxed
io.dcloud.js.gallery.GalleryFeatureImpl$a -> io.dcloud.js.gallery.GalleryFeatureImpl$a:
    1:1:void <init>(io.dcloud.js.gallery.GalleryFeatureImpl,java.lang.String[],io.dcloud.common.DHInterface.IWebview,java.lang.String) -> <init>
    1:3:void onDenied(java.lang.String) -> onDenied
    1:17:void onGranted(java.lang.String) -> onGranted
io.dcloud.js.gallery.GalleryFeatureImpl$b -> io.dcloud.js.gallery.GalleryFeatureImpl$b:
    1:1:void <init>(io.dcloud.js.gallery.GalleryFeatureImpl,io.dcloud.common.DHInterface.IApp,java.lang.String,io.dcloud.common.DHInterface.IApp,io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String[]) -> <init>
    1:2:void onDenied(java.lang.String) -> onDenied
    1:197:void onGranted(java.lang.String) -> onGranted
io.dcloud.js.gallery.GalleryFeatureImpl$b$a -> io.dcloud.js.gallery.GalleryFeatureImpl$b$a:
    1:1:void <init>(io.dcloud.js.gallery.GalleryFeatureImpl$b) -> <init>
    1:36:void a(byte[],com.bumptech.glide.request.transition.Transition) -> a
    1:2:void onLoadFailed(android.graphics.drawable.Drawable) -> onLoadFailed
    1:1:void onResourceReady(java.lang.Object,com.bumptech.glide.request.transition.Transition) -> onResourceReady
io.dcloud.js.gallery.GalleryFeatureImpl$c -> io.dcloud.js.gallery.GalleryFeatureImpl$c:
    1:1:void <init>(io.dcloud.js.gallery.GalleryFeatureImpl,io.dcloud.common.DHInterface.IApp,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> <init>
    1:45:boolean onExecute(io.dcloud.common.DHInterface.ISysEventListener$SysEventType,java.lang.Object) -> onExecute
io.dcloud.js.gallery.GalleryFeatureImpl$d -> io.dcloud.js.gallery.GalleryFeatureImpl$d:
    1:1:void <init>(io.dcloud.js.gallery.GalleryFeatureImpl,android.app.Activity) -> <init>
    1:8:void onReceive(android.content.Context,android.content.Intent) -> onReceive
io.dcloud.js.gallery.GalleryFeatureImpl$e -> io.dcloud.js.gallery.GalleryFeatureImpl$e:
    1:1:void <init>(io.dcloud.js.gallery.GalleryFeatureImpl,io.dcloud.common.DHInterface.IApp,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> <init>
    1:32:boolean onExecute(io.dcloud.common.DHInterface.ISysEventListener$SysEventType,java.lang.Object) -> onExecute
io.dcloud.js.geolocation.GeoManagerBase -> io.dcloud.js.geolocation.GeoManagerBase:
    1:10:void <init>(android.content.Context) -> <init>
    1:1:boolean hasKey(java.lang.String) -> hasKey
io.dcloud.js.geolocation.GeolocationFeatureImpl -> io.dcloud.js.geolocation.GeolocationFeatureImpl:
    1:4:void <init>() -> <init>
    1:1:boolean a(io.dcloud.js.geolocation.GeolocationFeatureImpl) -> a
    2:2:boolean a(io.dcloud.js.geolocation.GeolocationFeatureImpl,boolean) -> a
    1:1:io.dcloud.js.geolocation.a b(io.dcloud.js.geolocation.GeolocationFeatureImpl) -> b
    1:2:void dispose(java.lang.String) -> dispose
    1:5:java.lang.String execute(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String[]) -> execute
    1:1:void init(io.dcloud.common.DHInterface.AbsMgr,java.lang.String) -> init
io.dcloud.js.geolocation.GeolocationFeatureImpl$a -> io.dcloud.js.geolocation.GeolocationFeatureImpl$a:
    1:1:void <init>(io.dcloud.js.geolocation.GeolocationFeatureImpl,io.dcloud.common.DHInterface.IApp,io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String[]) -> <init>
    1:2:void onDenied(java.lang.String) -> onDenied
    1:5:void onGranted(java.lang.String) -> onGranted
io.dcloud.js.geolocation.a -> io.dcloud.js.geolocation.a:
    1:8:void <init>(io.dcloud.common.DHInterface.AbsMgr) -> <init>
    1:18:java.lang.String a(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String[]) -> a
    19:31:io.dcloud.js.geolocation.GeoManagerBase a(java.lang.String) -> a
    32:39:void a() -> a
    1:12:io.dcloud.js.geolocation.GeoManagerBase b(java.lang.String) -> b
io.dcloud.js.geolocation.system.LocalGeoManager -> io.dcloud.js.geolocation.system.LocalGeoManager:
    1:1:void <init>(android.content.Context) -> <init>
    1:1:io.dcloud.js.geolocation.system.a a(io.dcloud.js.geolocation.system.LocalGeoManager) -> a
    1:4:io.dcloud.js.geolocation.system.a b() -> b
    1:43:java.lang.String execute(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String[]) -> execute
    1:1:void getCurrentLocation(io.dcloud.common.DHInterface.IWebview,java.lang.String,boolean,int) -> getCurrentLocation
    1:4:void onDestroy() -> onDestroy
    1:2:void start(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String,boolean,int,int) -> start
    1:3:void stop(java.lang.String) -> stop
io.dcloud.js.geolocation.system.LocalGeoManager$a -> io.dcloud.js.geolocation.system.LocalGeoManager$a:
    1:1:void <init>(io.dcloud.js.geolocation.system.LocalGeoManager) -> <init>
    1:3:java.lang.Object onCallBack(java.lang.String,java.lang.Object) -> onCallBack
io.dcloud.js.geolocation.system.a -> io.dcloud.js.geolocation.system.a:
    1:117:void <init>(android.content.Context,java.lang.String) -> <init>
    1:1:void a() -> a
    2:11:java.lang.String a(android.location.Location,java.lang.String) -> a
    12:24:void a(android.location.Location,int) -> a
    25:44:void a(int,java.lang.String,int) -> a
    45:47:void a(io.dcloud.common.DHInterface.IWebview,int,java.lang.String) -> a
    48:49:void a(int) -> a
    50:82:boolean a(int,int) -> a
    83:86:boolean a(io.dcloud.common.DHInterface.IWebview,int,java.lang.String,int) -> a
    1:6:void b(int) -> b
    1:26:void c(int) -> c
io.dcloud.js.geolocation.system.a$a -> io.dcloud.js.geolocation.system.a$a:
    1:1:void <init>(io.dcloud.js.geolocation.system.a) -> <init>
    1:4:void run() -> run
io.dcloud.js.geolocation.system.b -> io.dcloud.js.geolocation.system.b:
    1:45:void <init>(android.content.Context,io.dcloud.js.geolocation.system.a) -> <init>
    1:3:void a(boolean) -> a
    4:8:boolean a() -> a
    9:11:void a(int) -> a
    1:4:void b() -> b
    1:4:void onLocationChanged(android.location.Location) -> onLocationChanged
    1:4:void onProviderDisabled(java.lang.String) -> onProviderDisabled
    1:1:void onProviderEnabled(java.lang.String) -> onProviderEnabled
    1:10:void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
io.dcloud.js.geolocation.system.c -> io.dcloud.js.geolocation.system.c:
    1:20:void <init>(android.content.Context,io.dcloud.js.geolocation.system.a) -> <init>
    1:3:void a(int) -> a
    4:7:void a() -> a
    1:8:void onLocationChanged(android.location.Location) -> onLocationChanged
    1:5:void onProviderDisabled(java.lang.String) -> onProviderDisabled
    1:1:void onProviderEnabled(java.lang.String) -> onProviderEnabled
    1:9:void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
io.dcloud.net.DownloadJSMgr -> io.dcloud.net.DownloadJSMgr:
    1:303:void <init>() -> <init>
    1:1:io.dcloud.net.DownloadJSMgr$AppDownloadInfo access$000(io.dcloud.net.DownloadJSMgr,java.lang.String) -> access$000
    1:1:io.dcloud.net.JsDownload createDownloadTask(io.dcloud.common.DHInterface.IWebview,org.json.JSONObject) -> createDownloadTask
    1:4:void deleteDownloadTaskInfo(java.lang.String,java.lang.String) -> deleteDownloadTaskInfo
    1:6:void dispose() -> dispose
    1:54:void enumerate(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String,java.lang.String) -> enumerate
    1:15:java.lang.String enumerateArr(io.dcloud.common.DHInterface.IWebview,java.util.ArrayList) -> enumerateArr
    1:184:java.lang.String execute(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String[]) -> execute
    1:8:io.dcloud.net.JsDownload findDownloadTask(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String) -> findDownloadTask
    1:1:io.dcloud.net.DownloadJSMgr$AppDownloadInfo getAppTaskList(java.lang.String) -> getAppTaskList
    1:4:io.dcloud.net.DownloadJSMgr getInstance() -> getInstance
    1:4:void initAppDownloadList(io.dcloud.common.DHInterface.IWebview,java.lang.String) -> initAppDownloadList
    1:6:void pushDownloadTask(io.dcloud.common.DHInterface.IWebview,java.lang.String,io.dcloud.net.JsDownload) -> pushDownloadTask
    1:4:void saveDownloadTaskInfo(java.lang.String,java.lang.String,java.lang.String) -> saveDownloadTaskInfo
io.dcloud.net.DownloadJSMgr$1 -> io.dcloud.net.DownloadJSMgr$1:
    1:1:void <init>(io.dcloud.net.DownloadJSMgr,android.os.Looper) -> <init>
    1:18:void handleMessage(android.os.Message) -> handleMessage
io.dcloud.net.DownloadJSMgr$AppDownloadInfo -> io.dcloud.net.DownloadJSMgr$AppDownloadInfo:
    1:30:void <init>(io.dcloud.net.DownloadJSMgr,android.content.Context,io.dcloud.common.DHInterface.IWebview,java.lang.String) -> <init>
io.dcloud.net.DownloadNetWork -> io.dcloud.net.DownloadNetWork:
    1:29:void <init>(int,io.dcloud.common.util.net.RequestData,io.dcloud.common.DHInterface.IReqListener,io.dcloud.common.DHInterface.IResponseListener) -> <init>
    1:10:void cancelWork() -> cancelWork
    1:80:void connect(java.net.URL) -> connect
    1:9:void dispose() -> dispose
    1:6:java.util.Map getHttpResponseHeader(java.net.HttpURLConnection) -> getHttpResponseHeader
    1:10:java.lang.String getResponseHeader(java.lang.String) -> getResponseHeader
    1:6:java.lang.String getResponseHeaders() -> getResponseHeaders
    1:10:void initUploadData() -> initUploadData
    1:2:int onReceiveing(java.io.InputStream) -> onReceiveing
    1:2:void onStateChanged(io.dcloud.common.DHInterface.IReqListener$NetState) -> onStateChanged
    1:7:void response(java.io.InputStream) -> response
    1:1:void run() -> run
    1:1:void setHeaders() -> setHeaders
io.dcloud.net.DownloaderBootImpl -> io.dcloud.net.DownloaderBootImpl:
    1:1:void <init>() -> <init>
    1:1:void onPause() -> onPause
io.dcloud.net.DownloaderFeatureImpl -> io.dcloud.net.DownloaderFeatureImpl:
    1:8:void <init>() -> <init>
    1:2:void dispose(java.lang.String) -> dispose
    1:1:java.lang.String execute(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String[]) -> execute
    1:1:void init(io.dcloud.common.DHInterface.AbsMgr,java.lang.String) -> init
io.dcloud.net.JsDownload -> io.dcloud.net.JsDownload:
    1:274:void <init>(io.dcloud.net.DownloadJSMgr,io.dcloud.common.DHInterface.IWebview,org.json.JSONObject) -> <init>
    1:26:void abort() -> abort
    1:1:java.io.File access$000(io.dcloud.net.JsDownload) -> access$000
    1:1:java.util.ArrayList access$100(io.dcloud.net.JsDownload) -> access$100
    1:2:void addRelWebview(io.dcloud.common.DHInterface.IWebview) -> addRelWebview
    1:21:void checkSpecialFile(java.lang.String) -> checkSpecialFile
    1:31:java.io.File createDownloadFile(boolean) -> createDownloadFile
    1:2:void deleteDownloadData() -> deleteDownloadData
    1:15:java.lang.String getRealPath(java.lang.String) -> getRealPath
    1:34:void initPath(java.lang.String) -> initPath
    1:1:boolean justDirPath() -> justDirPath
    1:128:void onNetStateChanged(io.dcloud.common.DHInterface.IReqListener$NetState,boolean) -> onNetStateChanged
    1:26:int onReceiving(java.io.InputStream) -> onReceiving
    1:6:void onResponsing(java.io.InputStream) -> onResponsing
    1:17:void onStateChanged(int) -> onStateChanged
    1:56:void parseJson(org.json.JSONObject) -> parseJson
    1:10:void saveDownloadState() -> saveDownloadState
    1:1:void saveInDatabase() -> saveInDatabase
    1:1:void setRequestHeader(java.lang.String,java.lang.String) -> setRequestHeader
    1:4:void start() -> start
    1:4:boolean startsWith(java.lang.String,java.lang.String,boolean) -> startsWith
    1:5:java.lang.String toJSON() -> toJSON
    1:1:java.lang.String toSaveJSON() -> toSaveJSON
io.dcloud.net.JsDownload$1 -> io.dcloud.net.JsDownload$1:
    1:1:void <init>(io.dcloud.net.JsDownload) -> <init>
    1:14:void run() -> run
io.dcloud.net.JsUpload -> io.dcloud.net.JsUpload:
    1:36:void <init>(io.dcloud.common.DHInterface.IWebview,org.json.JSONObject) -> <init>
    1:1:boolean addData(java.lang.String,java.lang.String) -> addData
    1:41:boolean addFile(io.dcloud.common.DHInterface.IWebview,java.lang.String,org.json.JSONObject) -> addFile
    1:22:void onNetStateChanged(io.dcloud.common.DHInterface.IReqListener$NetState,boolean) -> onNetStateChanged
    1:1:void setRequestHeader(java.lang.String,java.lang.String) -> setRequestHeader
    1:3:java.lang.String toJsonUpload() -> toJsonUpload
io.dcloud.net.JsUpload$UploadFile -> io.dcloud.net.JsUpload$UploadFile:
    1:1:void <init>(io.dcloud.net.JsUpload) -> <init>
io.dcloud.net.JsUpload$UploadString -> io.dcloud.net.JsUpload$UploadString:
    1:2:void <init>(java.lang.String) -> <init>
io.dcloud.net.JsUploadMgr -> io.dcloud.net.JsUploadMgr:
    1:7:void <init>() -> <init>
    1:1:io.dcloud.net.JsUpload createUploadTask(io.dcloud.common.DHInterface.IWebview,org.json.JSONObject) -> createUploadTask
    1:10:org.json.JSONArray enumerate(java.lang.String,java.util.ArrayList) -> enumerate
    1:99:java.lang.String execute(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String[]) -> execute
    1:6:io.dcloud.net.JsUpload findUploadTask(java.lang.String,java.lang.String) -> findUploadTask
    1:6:void pushUploadTask(java.lang.String,io.dcloud.net.JsUpload) -> pushUploadTask
io.dcloud.net.UploadFeature -> io.dcloud.net.UploadFeature:
    1:1:void <init>() -> <init>
    1:1:java.lang.String execute(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String[]) -> execute
    1:1:void init(io.dcloud.common.DHInterface.AbsMgr,java.lang.String) -> init
io.dcloud.net.UploadNetWork -> io.dcloud.net.UploadNetWork:
    1:6:void <clinit>() -> <clinit>
    1:47:void <init>(int,io.dcloud.common.util.net.RequestData,io.dcloud.common.DHInterface.IReqListener,io.dcloud.common.DHInterface.IResponseListener) -> <init>
    1:1:void addCutoffLine(java.lang.String) -> addCutoffLine
    1:2:boolean addFile(java.lang.String,io.dcloud.net.JsUpload$UploadFile) -> addFile
    1:8:void addFileInputStream(java.lang.String,io.dcloud.net.JsUpload$UploadFile) -> addFileInputStream
    1:2:boolean addParemeter(java.lang.String,java.lang.String) -> addParemeter
    1:2:void addPropertyInputStream(java.lang.String,java.lang.String) -> addPropertyInputStream
    1:4:long appendPostParemeter(java.lang.String,long) -> appendPostParemeter
    1:15:void connet(boolean) -> connet
    1:5:void dispose() -> dispose
    1:18:java.lang.String getResponseHeaders() -> getResponseHeaders
    1:18:void initContentLength() -> initContentLength
    1:80:void initUploadData() -> initUploadData
    1:39:void responseUpload() -> responseUpload
    1:1:void run() -> run
    1:3:void uploadContent() -> uploadContent
io.dcloud.net.XMLHttpRequest -> io.dcloud.net.XMLHttpRequest:
    1:22:void <init>(java.lang.String,java.lang.String,java.lang.String,io.dcloud.common.DHInterface.IWebview) -> <init>
    1:1:io.dcloud.common.util.net.NetWork getNetWork() -> getNetWork
    1:1:io.dcloud.common.util.net.RequestData getRequestData() -> getRequestData
    1:10:org.json.JSONObject headersToJSON(java.util.Map) -> headersToJSON
    1:28:void onNetStateChanged(io.dcloud.common.DHInterface.IReqListener$NetState,boolean) -> onNetStateChanged
    1:3:void onResponseState(int,java.lang.String) -> onResponseState
    1:1:void setCallbackId(java.lang.String) -> setCallbackId
    1:16:org.json.JSONObject toJSON() -> toJSON
    1:1:java.lang.String toJsResponseText(java.lang.String) -> toJsResponseText
io.dcloud.net.XMLHttpRequest$1 -> io.dcloud.net.XMLHttpRequest$1:
    1:1:void <clinit>() -> <clinit>
io.dcloud.net.XMLHttpRequestFeature -> io.dcloud.net.XMLHttpRequestFeature:
    1:1:void <init>() -> <init>
    1:1:java.lang.String execute(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String[]) -> execute
    1:1:void init(io.dcloud.common.DHInterface.AbsMgr,java.lang.String) -> init
io.dcloud.net.XMLHttpRequestMgr -> io.dcloud.net.XMLHttpRequestMgr:
    1:7:void <init>() -> <init>
    1:45:java.lang.String execute(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String[]) -> execute
    1:6:io.dcloud.net.XMLHttpRequest findXMLHttpRequest(java.lang.String,java.lang.String) -> findXMLHttpRequest
    1:6:void pushXMLHttpRequest(java.lang.String,io.dcloud.net.XMLHttpRequest) -> pushXMLHttpRequest
io.dcloud.nineoldandroids.animation.Animator -> io.dcloud.nineoldandroids.animation.Animator:
    1:7:void <init>() -> <init>
    1:4:void addListener(io.dcloud.nineoldandroids.animation.Animator$AnimatorListener) -> addListener
    1:1:java.lang.Object clone() -> clone
    2:13:io.dcloud.nineoldandroids.animation.Animator clone() -> clone
    1:1:java.util.ArrayList getListeners() -> getListeners
    1:1:boolean isStarted() -> isStarted
    1:3:void removeAllListeners() -> removeAllListeners
    1:6:void removeListener(io.dcloud.nineoldandroids.animation.Animator$AnimatorListener) -> removeListener
io.dcloud.nineoldandroids.animation.AnimatorInflater -> io.dcloud.nineoldandroids.animation.AnimatorInflater:
    1:24:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:1:io.dcloud.nineoldandroids.animation.Animator createAnimatorFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser) -> createAnimatorFromXml
    2:79:io.dcloud.nineoldandroids.animation.Animator createAnimatorFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,io.dcloud.nineoldandroids.animation.AnimatorSet,int) -> createAnimatorFromXml
    1:37:io.dcloud.nineoldandroids.animation.Animator loadAnimator(android.content.Context,int) -> loadAnimator
    38:165:io.dcloud.nineoldandroids.animation.ValueAnimator loadAnimator(android.content.Context,android.util.AttributeSet,io.dcloud.nineoldandroids.animation.ValueAnimator) -> loadAnimator
    1:12:io.dcloud.nineoldandroids.animation.ObjectAnimator loadObjectAnimator(android.content.Context,android.util.AttributeSet) -> loadObjectAnimator
io.dcloud.nineoldandroids.animation.AnimatorListenerAdapter -> io.dcloud.nineoldandroids.animation.AnimatorListenerAdapter:
    1:1:void <init>() -> <init>
io.dcloud.nineoldandroids.animation.AnimatorSet -> io.dcloud.nineoldandroids.animation.AnimatorSet:
    1:72:void <init>() -> <init>
    1:1:java.util.ArrayList access$2(io.dcloud.nineoldandroids.animation.AnimatorSet) -> access$2
    1:1:java.util.HashMap access$3(io.dcloud.nineoldandroids.animation.AnimatorSet) -> access$3
    1:1:java.util.ArrayList access$4(io.dcloud.nineoldandroids.animation.AnimatorSet) -> access$4
    1:1:void access$5(io.dcloud.nineoldandroids.animation.AnimatorSet,boolean) -> access$5
    1:1:java.util.ArrayList access$6(io.dcloud.nineoldandroids.animation.AnimatorSet) -> access$6
    1:24:void cancel() -> cancel
    1:1:io.dcloud.nineoldandroids.animation.Animator clone() -> clone
    2:96:io.dcloud.nineoldandroids.animation.AnimatorSet clone() -> clone
    1:28:void end() -> end
    1:3:java.util.ArrayList getChildAnimations() -> getChildAnimations
    1:1:long getDuration() -> getDuration
    1:1:long getStartDelay() -> getStartDelay
    1:2:boolean isRunning() -> isRunning
    1:1:boolean isStarted() -> isStarted
    1:2:io.dcloud.nineoldandroids.animation.AnimatorSet$Builder play(io.dcloud.nineoldandroids.animation.Animator) -> play
    1:6:void playSequentially(io.dcloud.nineoldandroids.animation.Animator[]) -> playSequentially
    7:13:void playSequentially(java.util.List) -> playSequentially
    1:4:void playTogether(io.dcloud.nineoldandroids.animation.Animator[]) -> playTogether
    5:12:void playTogether(java.util.Collection) -> playTogether
    1:1:io.dcloud.nineoldandroids.animation.Animator setDuration(long) -> setDuration
    2:12:io.dcloud.nineoldandroids.animation.AnimatorSet setDuration(long) -> setDuration
    1:2:void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    1:1:void setStartDelay(long) -> setStartDelay
    1:6:void setTarget(java.lang.Object) -> setTarget
    1:2:void setupEndValues() -> setupEndValues
    1:2:void setupStartValues() -> setupStartValues
    1:114:void sortNodes() -> sortNodes
    1:135:void start() -> start
io.dcloud.nineoldandroids.animation.AnimatorSet$1 -> io.dcloud.nineoldandroids.animation.AnimatorSet$1:
    1:509:void <init>(io.dcloud.nineoldandroids.animation.AnimatorSet,java.util.ArrayList) -> <init>
    1:1:void onAnimationCancel(io.dcloud.nineoldandroids.animation.Animator) -> onAnimationCancel
    1:6:void onAnimationEnd(io.dcloud.nineoldandroids.animation.Animator) -> onAnimationEnd
io.dcloud.nineoldandroids.animation.AnimatorSet$AnimatorSetListener -> io.dcloud.nineoldandroids.animation.AnimatorSet$AnimatorSetListener:
    1:2:void <init>(io.dcloud.nineoldandroids.animation.AnimatorSet,io.dcloud.nineoldandroids.animation.AnimatorSet) -> <init>
    1:8:void onAnimationCancel(io.dcloud.nineoldandroids.animation.Animator) -> onAnimationCancel
    1:28:void onAnimationEnd(io.dcloud.nineoldandroids.animation.Animator) -> onAnimationEnd
io.dcloud.nineoldandroids.animation.AnimatorSet$Builder -> io.dcloud.nineoldandroids.animation.AnimatorSet$Builder:
    1:6:void <init>(io.dcloud.nineoldandroids.animation.AnimatorSet,io.dcloud.nineoldandroids.animation.Animator) -> <init>
    1:8:io.dcloud.nineoldandroids.animation.AnimatorSet$Builder after(io.dcloud.nineoldandroids.animation.Animator) -> after
    9:11:io.dcloud.nineoldandroids.animation.AnimatorSet$Builder after(long) -> after
    1:8:io.dcloud.nineoldandroids.animation.AnimatorSet$Builder before(io.dcloud.nineoldandroids.animation.Animator) -> before
    1:8:io.dcloud.nineoldandroids.animation.AnimatorSet$Builder with(io.dcloud.nineoldandroids.animation.Animator) -> with
io.dcloud.nineoldandroids.animation.AnimatorSet$Dependency -> io.dcloud.nineoldandroids.animation.AnimatorSet$Dependency:
    1:3:void <init>(io.dcloud.nineoldandroids.animation.AnimatorSet$Node,int) -> <init>
io.dcloud.nineoldandroids.animation.AnimatorSet$DependencyListener -> io.dcloud.nineoldandroids.animation.AnimatorSet$DependencyListener:
    1:4:void <init>(io.dcloud.nineoldandroids.animation.AnimatorSet,io.dcloud.nineoldandroids.animation.AnimatorSet$Node,int) -> <init>
    1:2:void onAnimationEnd(io.dcloud.nineoldandroids.animation.Animator) -> onAnimationEnd
    1:2:void onAnimationStart(io.dcloud.nineoldandroids.animation.Animator) -> onAnimationStart
    1:22:void startIfReady(io.dcloud.nineoldandroids.animation.Animator) -> startIfReady
io.dcloud.nineoldandroids.animation.AnimatorSet$Node -> io.dcloud.nineoldandroids.animation.AnimatorSet$Node:
    1:43:void <init>(io.dcloud.nineoldandroids.animation.Animator) -> <init>
    1:13:void addDependency(io.dcloud.nineoldandroids.animation.AnimatorSet$Dependency) -> addDependency
    1:1:java.lang.Object clone() -> clone
    2:6:io.dcloud.nineoldandroids.animation.AnimatorSet$Node clone() -> clone
io.dcloud.nineoldandroids.animation.ArgbEvaluator -> io.dcloud.nineoldandroids.animation.ArgbEvaluator:
    1:1:void <init>() -> <init>
    1:13:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
io.dcloud.nineoldandroids.animation.FloatEvaluator -> io.dcloud.nineoldandroids.animation.FloatEvaluator:
    1:1:void <init>() -> <init>
    1:1:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    2:3:java.lang.Float evaluate(float,java.lang.Number,java.lang.Number) -> evaluate
io.dcloud.nineoldandroids.animation.FloatKeyframeSet -> io.dcloud.nineoldandroids.animation.FloatKeyframeSet:
    1:2:void <init>(io.dcloud.nineoldandroids.animation.Keyframe$FloatKeyframe[]) -> <init>
    1:1:io.dcloud.nineoldandroids.animation.KeyframeSet clone() -> clone
    2:9:io.dcloud.nineoldandroids.animation.FloatKeyframeSet clone() -> clone
    1:84:float getFloatValue(float) -> getFloatValue
    1:1:java.lang.Object getValue(float) -> getValue
io.dcloud.nineoldandroids.animation.IntEvaluator -> io.dcloud.nineoldandroids.animation.IntEvaluator:
    1:1:void <init>() -> <init>
    1:1:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    2:3:java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer) -> evaluate
io.dcloud.nineoldandroids.animation.IntKeyframeSet -> io.dcloud.nineoldandroids.animation.IntKeyframeSet:
    1:2:void <init>(io.dcloud.nineoldandroids.animation.Keyframe$IntKeyframe[]) -> <init>
    1:1:io.dcloud.nineoldandroids.animation.KeyframeSet clone() -> clone
    2:9:io.dcloud.nineoldandroids.animation.IntKeyframeSet clone() -> clone
    1:83:int getIntValue(float) -> getIntValue
    1:1:java.lang.Object getValue(float) -> getValue
io.dcloud.nineoldandroids.animation.Keyframe -> io.dcloud.nineoldandroids.animation.Keyframe:
    1:24:void <init>() -> <init>
    1:1:java.lang.Object clone() -> clone
    1:1:float getFraction() -> getFraction
    1:1:android.view.animation.Interpolator getInterpolator() -> getInterpolator
    1:1:java.lang.Class getType() -> getType
    1:1:boolean hasValue() -> hasValue
    1:1:io.dcloud.nineoldandroids.animation.Keyframe ofFloat(float,float) -> ofFloat
    2:2:io.dcloud.nineoldandroids.animation.Keyframe ofFloat(float) -> ofFloat
    1:1:io.dcloud.nineoldandroids.animation.Keyframe ofInt(float,int) -> ofInt
    2:2:io.dcloud.nineoldandroids.animation.Keyframe ofInt(float) -> ofInt
    1:1:io.dcloud.nineoldandroids.animation.Keyframe ofObject(float,java.lang.Object) -> ofObject
    2:2:io.dcloud.nineoldandroids.animation.Keyframe ofObject(float) -> ofObject
    1:1:void setFraction(float) -> setFraction
    1:1:void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
io.dcloud.nineoldandroids.animation.Keyframe$FloatKeyframe -> io.dcloud.nineoldandroids.animation.Keyframe$FloatKeyframe:
    1:5:void <init>(float,float) -> <init>
    6:8:void <init>(float) -> <init>
    1:1:io.dcloud.nineoldandroids.animation.Keyframe clone() -> clone
    2:3:io.dcloud.nineoldandroids.animation.Keyframe$FloatKeyframe clone() -> clone
    1:1:float getFloatValue() -> getFloatValue
    1:1:java.lang.Object getValue() -> getValue
    1:3:void setValue(java.lang.Object) -> setValue
io.dcloud.nineoldandroids.animation.Keyframe$IntKeyframe -> io.dcloud.nineoldandroids.animation.Keyframe$IntKeyframe:
    1:5:void <init>(float,int) -> <init>
    6:8:void <init>(float) -> <init>
    1:1:io.dcloud.nineoldandroids.animation.Keyframe clone() -> clone
    2:3:io.dcloud.nineoldandroids.animation.Keyframe$IntKeyframe clone() -> clone
    1:1:int getIntValue() -> getIntValue
    1:1:java.lang.Object getValue() -> getValue
    1:3:void setValue(java.lang.Object) -> setValue
io.dcloud.nineoldandroids.animation.Keyframe$ObjectKeyframe -> io.dcloud.nineoldandroids.animation.Keyframe$ObjectKeyframe:
    1:5:void <init>(float,java.lang.Object) -> <init>
    1:1:io.dcloud.nineoldandroids.animation.Keyframe clone() -> clone
    2:3:io.dcloud.nineoldandroids.animation.Keyframe$ObjectKeyframe clone() -> clone
    1:1:java.lang.Object getValue() -> getValue
    1:2:void setValue(java.lang.Object) -> setValue
io.dcloud.nineoldandroids.animation.KeyframeSet -> io.dcloud.nineoldandroids.animation.KeyframeSet:
    1:7:void <init>(io.dcloud.nineoldandroids.animation.Keyframe[]) -> <init>
    1:1:java.lang.Object clone() -> clone
    2:9:io.dcloud.nineoldandroids.animation.KeyframeSet clone() -> clone
    1:66:java.lang.Object getValue(float) -> getValue
    1:13:io.dcloud.nineoldandroids.animation.KeyframeSet ofFloat(float[]) -> ofFloat
    1:13:io.dcloud.nineoldandroids.animation.KeyframeSet ofInt(int[]) -> ofInt
    1:36:io.dcloud.nineoldandroids.animation.KeyframeSet ofKeyframe(io.dcloud.nineoldandroids.animation.Keyframe[]) -> ofKeyframe
    1:13:io.dcloud.nineoldandroids.animation.KeyframeSet ofObject(java.lang.Object[]) -> ofObject
    1:1:void setEvaluator(io.dcloud.nineoldandroids.animation.TypeEvaluator) -> setEvaluator
    1:2:java.lang.String toString() -> toString
io.dcloud.nineoldandroids.animation.ObjectAnimator -> io.dcloud.nineoldandroids.animation.ObjectAnimator:
    1:17:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    2:4:void <init>(java.lang.Object,java.lang.String) -> <init>
    5:7:void <init>(java.lang.Object,io.dcloud.nineoldandroids.util.Property) -> <init>
    1:4:void animateValue(float) -> animateValue
    1:1:io.dcloud.nineoldandroids.animation.ValueAnimator clone() -> clone
    2:2:io.dcloud.nineoldandroids.animation.ObjectAnimator clone() -> clone
    1:1:java.lang.String getPropertyName() -> getPropertyName
    1:1:java.lang.Object getTarget() -> getTarget
    1:12:void initAnimation() -> initAnimation
    1:2:io.dcloud.nineoldandroids.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[]) -> ofFloat
    3:4:io.dcloud.nineoldandroids.animation.ObjectAnimator ofFloat(java.lang.Object,io.dcloud.nineoldandroids.util.Property,float[]) -> ofFloat
    1:2:io.dcloud.nineoldandroids.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,int[]) -> ofInt
    3:4:io.dcloud.nineoldandroids.animation.ObjectAnimator ofInt(java.lang.Object,io.dcloud.nineoldandroids.util.Property,int[]) -> ofInt
    1:3:io.dcloud.nineoldandroids.animation.ObjectAnimator ofObject(java.lang.Object,java.lang.String,io.dcloud.nineoldandroids.animation.TypeEvaluator,java.lang.Object[]) -> ofObject
    4:6:io.dcloud.nineoldandroids.animation.ObjectAnimator ofObject(java.lang.Object,io.dcloud.nineoldandroids.util.Property,io.dcloud.nineoldandroids.animation.TypeEvaluator,java.lang.Object[]) -> ofObject
    1:3:io.dcloud.nineoldandroids.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,io.dcloud.nineoldandroids.animation.PropertyValuesHolder[]) -> ofPropertyValuesHolder
    1:1:io.dcloud.nineoldandroids.animation.ValueAnimator setDuration(long) -> setDuration
    2:2:io.dcloud.nineoldandroids.animation.ObjectAnimator setDuration(long) -> setDuration
    1:14:void setFloatValues(float[]) -> setFloatValues
    1:14:void setIntValues(int[]) -> setIntValues
    1:14:void setObjectValues(java.lang.Object[]) -> setObjectValues
    1:13:void setProperty(io.dcloud.nineoldandroids.util.Property) -> setProperty
    1:10:void setPropertyName(java.lang.String) -> setPropertyName
    1:8:void setTarget(java.lang.Object) -> setTarget
    1:4:void setupEndValues() -> setupEndValues
    1:4:void setupStartValues() -> setupStartValues
    1:1:void start() -> start
    1:7:java.lang.String toString() -> toString
io.dcloud.nineoldandroids.animation.PreHoneycombCompat -> io.dcloud.nineoldandroids.animation.PreHoneycombCompat:
    1:144:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
io.dcloud.nineoldandroids.animation.PreHoneycombCompat$1 -> io.dcloud.nineoldandroids.animation.PreHoneycombCompat$1:
    1:1:void <init>(java.lang.String) -> <init>
    1:1:java.lang.Object get(java.lang.Object) -> get
    2:2:java.lang.Float get(android.view.View) -> get
    1:1:void setValue(java.lang.Object,float) -> setValue
    2:2:void setValue(android.view.View,float) -> setValue
io.dcloud.nineoldandroids.animation.PreHoneycombCompat$10 -> io.dcloud.nineoldandroids.animation.PreHoneycombCompat$10:
    1:1:void <init>(java.lang.String) -> <init>
    1:1:java.lang.Object get(java.lang.Object) -> get
    2:2:java.lang.Float get(android.view.View) -> get
    1:1:void setValue(java.lang.Object,float) -> setValue
    2:2:void setValue(android.view.View,float) -> setValue
io.dcloud.nineoldandroids.animation.PreHoneycombCompat$11 -> io.dcloud.nineoldandroids.animation.PreHoneycombCompat$11:
    1:1:void <init>(java.lang.String) -> <init>
    1:1:java.lang.Object get(java.lang.Object) -> get
    2:2:java.lang.Integer get(android.view.View) -> get
    1:1:void setValue(java.lang.Object,int) -> setValue
    2:2:void setValue(android.view.View,int) -> setValue
io.dcloud.nineoldandroids.animation.PreHoneycombCompat$12 -> io.dcloud.nineoldandroids.animation.PreHoneycombCompat$12:
    1:1:void <init>(java.lang.String) -> <init>
    1:1:java.lang.Object get(java.lang.Object) -> get
    2:2:java.lang.Integer get(android.view.View) -> get
    1:1:void setValue(java.lang.Object,int) -> setValue
    2:2:void setValue(android.view.View,int) -> setValue
io.dcloud.nineoldandroids.animation.PreHoneycombCompat$13 -> io.dcloud.nineoldandroids.animation.PreHoneycombCompat$13:
    1:1:void <init>(java.lang.String) -> <init>
    1:1:java.lang.Object get(java.lang.Object) -> get
    2:2:java.lang.Float get(android.view.View) -> get
    1:1:void setValue(java.lang.Object,float) -> setValue
    2:2:void setValue(android.view.View,float) -> setValue
io.dcloud.nineoldandroids.animation.PreHoneycombCompat$14 -> io.dcloud.nineoldandroids.animation.PreHoneycombCompat$14:
    1:1:void <init>(java.lang.String) -> <init>
    1:1:java.lang.Object get(java.lang.Object) -> get
    2:2:java.lang.Float get(android.view.View) -> get
    1:1:void setValue(java.lang.Object,float) -> setValue
    2:2:void setValue(android.view.View,float) -> setValue
io.dcloud.nineoldandroids.animation.PreHoneycombCompat$2 -> io.dcloud.nineoldandroids.animation.PreHoneycombCompat$2:
    1:1:void <init>(java.lang.String) -> <init>
    1:1:java.lang.Object get(java.lang.Object) -> get
    2:2:java.lang.Float get(android.view.View) -> get
    1:1:void setValue(java.lang.Object,float) -> setValue
    2:2:void setValue(android.view.View,float) -> setValue
io.dcloud.nineoldandroids.animation.PreHoneycombCompat$3 -> io.dcloud.nineoldandroids.animation.PreHoneycombCompat$3:
    1:1:void <init>(java.lang.String) -> <init>
    1:1:java.lang.Object get(java.lang.Object) -> get
    2:2:java.lang.Float get(android.view.View) -> get
    1:1:void setValue(java.lang.Object,float) -> setValue
    2:2:void setValue(android.view.View,float) -> setValue
io.dcloud.nineoldandroids.animation.PreHoneycombCompat$4 -> io.dcloud.nineoldandroids.animation.PreHoneycombCompat$4:
    1:1:void <init>(java.lang.String) -> <init>
    1:1:java.lang.Object get(java.lang.Object) -> get
    2:2:java.lang.Float get(android.view.View) -> get
    1:1:void setValue(java.lang.Object,float) -> setValue
    2:2:void setValue(android.view.View,float) -> setValue
io.dcloud.nineoldandroids.animation.PreHoneycombCompat$5 -> io.dcloud.nineoldandroids.animation.PreHoneycombCompat$5:
    1:1:void <init>(java.lang.String) -> <init>
    1:1:java.lang.Object get(java.lang.Object) -> get
    2:2:java.lang.Float get(android.view.View) -> get
    1:1:void setValue(java.lang.Object,float) -> setValue
    2:2:void setValue(android.view.View,float) -> setValue
io.dcloud.nineoldandroids.animation.PreHoneycombCompat$6 -> io.dcloud.nineoldandroids.animation.PreHoneycombCompat$6:
    1:1:void <init>(java.lang.String) -> <init>
    1:1:java.lang.Object get(java.lang.Object) -> get
    2:2:java.lang.Float get(android.view.View) -> get
    1:1:void setValue(java.lang.Object,float) -> setValue
    2:2:void setValue(android.view.View,float) -> setValue
io.dcloud.nineoldandroids.animation.PreHoneycombCompat$7 -> io.dcloud.nineoldandroids.animation.PreHoneycombCompat$7:
    1:1:void <init>(java.lang.String) -> <init>
    1:1:java.lang.Object get(java.lang.Object) -> get
    2:2:java.lang.Float get(android.view.View) -> get
    1:1:void setValue(java.lang.Object,float) -> setValue
    2:2:void setValue(android.view.View,float) -> setValue
io.dcloud.nineoldandroids.animation.PreHoneycombCompat$8 -> io.dcloud.nineoldandroids.animation.PreHoneycombCompat$8:
    1:1:void <init>(java.lang.String) -> <init>
    1:1:java.lang.Object get(java.lang.Object) -> get
    2:2:java.lang.Float get(android.view.View) -> get
    1:1:void setValue(java.lang.Object,float) -> setValue
    2:2:void setValue(android.view.View,float) -> setValue
io.dcloud.nineoldandroids.animation.PreHoneycombCompat$9 -> io.dcloud.nineoldandroids.animation.PreHoneycombCompat$9:
    1:1:void <init>(java.lang.String) -> <init>
    1:1:java.lang.Object get(java.lang.Object) -> get
    2:2:java.lang.Float get(android.view.View) -> get
    1:1:void setValue(java.lang.Object,float) -> setValue
    2:2:void setValue(android.view.View,float) -> setValue
io.dcloud.nineoldandroids.animation.PropertyValuesHolder -> io.dcloud.nineoldandroids.animation.PropertyValuesHolder:
    1:33:void <clinit>() -> <clinit>
    1:78:void <init>(java.lang.String) -> <init>
    79:79:void <init>(java.lang.String,io.dcloud.nineoldandroids.animation.PropertyValuesHolder) -> <init>
    80:167:void <init>(io.dcloud.nineoldandroids.util.Property) -> <init>
    168:168:void <init>(io.dcloud.nineoldandroids.util.Property,io.dcloud.nineoldandroids.animation.PropertyValuesHolder) -> <init>
    1:1:void calculateValue(float) -> calculateValue
    1:1:java.lang.Object clone() -> clone
    2:6:io.dcloud.nineoldandroids.animation.PropertyValuesHolder clone() -> clone
    1:1:java.lang.Object getAnimatedValue() -> getAnimatedValue
    1:7:java.lang.String getMethodName(java.lang.String,java.lang.String) -> getMethodName
    1:76:java.lang.reflect.Method getPropertyFunction(java.lang.Class,java.lang.String,java.lang.Class) -> getPropertyFunction
    1:1:java.lang.String getPropertyName() -> getPropertyName
    1:13:void init() -> init
    1:1:io.dcloud.nineoldandroids.animation.PropertyValuesHolder ofFloat(java.lang.String,float[]) -> ofFloat
    2:2:io.dcloud.nineoldandroids.animation.PropertyValuesHolder ofFloat(io.dcloud.nineoldandroids.util.Property,float[]) -> ofFloat
    1:1:io.dcloud.nineoldandroids.animation.PropertyValuesHolder ofInt(java.lang.String,int[]) -> ofInt
    2:2:io.dcloud.nineoldandroids.animation.PropertyValuesHolder ofInt(io.dcloud.nineoldandroids.util.Property,int[]) -> ofInt
    1:10:io.dcloud.nineoldandroids.animation.PropertyValuesHolder ofKeyframe(java.lang.String,io.dcloud.nineoldandroids.animation.Keyframe[]) -> ofKeyframe
    11:20:io.dcloud.nineoldandroids.animation.PropertyValuesHolder ofKeyframe(io.dcloud.nineoldandroids.util.Property,io.dcloud.nineoldandroids.animation.Keyframe[]) -> ofKeyframe
    1:3:io.dcloud.nineoldandroids.animation.PropertyValuesHolder ofObject(java.lang.String,io.dcloud.nineoldandroids.animation.TypeEvaluator,java.lang.Object[]) -> ofObject
    4:6:io.dcloud.nineoldandroids.animation.PropertyValuesHolder ofObject(io.dcloud.nineoldandroids.util.Property,io.dcloud.nineoldandroids.animation.TypeEvaluator,java.lang.Object[]) -> ofObject
    1:12:void setAnimatedValue(java.lang.Object) -> setAnimatedValue
    1:2:void setEvaluator(io.dcloud.nineoldandroids.animation.TypeEvaluator) -> setEvaluator
    1:2:void setFloatValues(float[]) -> setFloatValues
    1:2:void setIntValues(int[]) -> setIntValues
    1:8:void setKeyframes(io.dcloud.nineoldandroids.animation.Keyframe[]) -> setKeyframes
    1:2:void setObjectValues(java.lang.Object[]) -> setObjectValues
    1:1:void setProperty(io.dcloud.nineoldandroids.util.Property) -> setProperty
    1:1:void setPropertyName(java.lang.String) -> setPropertyName
    1:1:void setupEndValue(java.lang.Object) -> setupEndValue
    1:1:void setupGetter(java.lang.Class) -> setupGetter
    1:1:void setupSetter(java.lang.Class) -> setupSetter
    1:34:void setupSetterAndGetter(java.lang.Object) -> setupSetterAndGetter
    1:16:java.lang.reflect.Method setupSetterOrGetter(java.lang.Class,java.util.HashMap,java.lang.String,java.lang.Class) -> setupSetterOrGetter
    1:1:void setupStartValue(java.lang.Object) -> setupStartValue
    1:14:void setupValue(java.lang.Object,io.dcloud.nineoldandroids.animation.Keyframe) -> setupValue
    1:1:java.lang.String toString() -> toString
io.dcloud.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder -> io.dcloud.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder:
    1:4:void <init>(java.lang.String,io.dcloud.nineoldandroids.animation.FloatKeyframeSet) -> <init>
    5:10:void <init>(io.dcloud.nineoldandroids.util.Property,io.dcloud.nineoldandroids.animation.FloatKeyframeSet) -> <init>
    11:12:void <init>(java.lang.String,float[]) -> <init>
    13:16:void <init>(io.dcloud.nineoldandroids.util.Property,float[]) -> <init>
    1:1:void calculateValue(float) -> calculateValue
    1:1:io.dcloud.nineoldandroids.animation.PropertyValuesHolder clone() -> clone
    2:3:io.dcloud.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder clone() -> clone
    1:1:java.lang.Object getAnimatedValue() -> getAnimatedValue
    1:21:void setAnimatedValue(java.lang.Object) -> setAnimatedValue
    1:2:void setFloatValues(float[]) -> setFloatValues
    1:33:void setupSetter(java.lang.Class) -> setupSetter
io.dcloud.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder -> io.dcloud.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder:
    1:4:void <init>(java.lang.String,io.dcloud.nineoldandroids.animation.IntKeyframeSet) -> <init>
    5:10:void <init>(io.dcloud.nineoldandroids.util.Property,io.dcloud.nineoldandroids.animation.IntKeyframeSet) -> <init>
    11:12:void <init>(java.lang.String,int[]) -> <init>
    13:16:void <init>(io.dcloud.nineoldandroids.util.Property,int[]) -> <init>
    1:1:void calculateValue(float) -> calculateValue
    1:1:io.dcloud.nineoldandroids.animation.PropertyValuesHolder clone() -> clone
    2:3:io.dcloud.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder clone() -> clone
    1:1:java.lang.Object getAnimatedValue() -> getAnimatedValue
    1:21:void setAnimatedValue(java.lang.Object) -> setAnimatedValue
    1:2:void setIntValues(int[]) -> setIntValues
    1:33:void setupSetter(java.lang.Class) -> setupSetter
io.dcloud.nineoldandroids.animation.TimeAnimator -> io.dcloud.nineoldandroids.animation.TimeAnimator:
    1:4:void <init>() -> <init>
    1:15:boolean animationFrame(long) -> animationFrame
    1:1:void setTimeListener(io.dcloud.nineoldandroids.animation.TimeAnimator$TimeListener) -> setTimeListener
io.dcloud.nineoldandroids.animation.ValueAnimator -> io.dcloud.nineoldandroids.animation.ValueAnimator:
    1:142:void <clinit>() -> <clinit>
    1:162:void <init>() -> <init>
    1:1:void access$10(io.dcloud.nineoldandroids.animation.ValueAnimator,boolean) -> access$10
    1:1:void access$11(io.dcloud.nineoldandroids.animation.ValueAnimator) -> access$11
    1:1:long access$12() -> access$12
    1:1:java.lang.ThreadLocal access$2() -> access$2
    1:1:java.lang.ThreadLocal access$3() -> access$3
    1:1:java.lang.ThreadLocal access$4() -> access$4
    1:1:long access$5(io.dcloud.nineoldandroids.animation.ValueAnimator) -> access$5
    1:1:void access$6(io.dcloud.nineoldandroids.animation.ValueAnimator) -> access$6
    1:1:java.lang.ThreadLocal access$7() -> access$7
    1:1:java.lang.ThreadLocal access$8() -> access$8
    1:1:boolean access$9(io.dcloud.nineoldandroids.animation.ValueAnimator,long) -> access$9
    1:4:void addUpdateListener(io.dcloud.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener) -> addUpdateListener
    1:11:void animateValue(float) -> animateValue
    1:53:boolean animationFrame(long) -> animationFrame
    1:11:void cancel() -> cancel
    1:3:void clearAllAnimations() -> clearAllAnimations
    1:1:io.dcloud.nineoldandroids.animation.Animator clone() -> clone
    2:25:io.dcloud.nineoldandroids.animation.ValueAnimator clone() -> clone
    1:10:boolean delayedAnimationFrame(long) -> delayedAnimationFrame
    1:15:void end() -> end
    1:14:void endAnimation() -> endAnimation
    1:1:float getAnimatedFraction() -> getAnimatedFraction
    1:2:java.lang.Object getAnimatedValue() -> getAnimatedValue
    3:5:java.lang.Object getAnimatedValue(java.lang.String) -> getAnimatedValue
    1:1:int getCurrentAnimationsCount() -> getCurrentAnimationsCount
    1:4:long getCurrentPlayTime() -> getCurrentPlayTime
    1:1:long getDuration() -> getDuration
    1:1:long getFrameDelay() -> getFrameDelay
    1:1:android.view.animation.Interpolator getInterpolator() -> getInterpolator
    1:1:int getRepeatCount() -> getRepeatCount
    1:1:int getRepeatMode() -> getRepeatMode
    1:1:long getStartDelay() -> getStartDelay
    1:1:io.dcloud.nineoldandroids.animation.PropertyValuesHolder[] getValues() -> getValues
    1:7:void initAnimation() -> initAnimation
    1:1:boolean isRunning() -> isRunning
    1:1:boolean isStarted() -> isStarted
    1:2:io.dcloud.nineoldandroids.animation.ValueAnimator ofFloat(float[]) -> ofFloat
    1:2:io.dcloud.nineoldandroids.animation.ValueAnimator ofInt(int[]) -> ofInt
    1:3:io.dcloud.nineoldandroids.animation.ValueAnimator ofObject(io.dcloud.nineoldandroids.animation.TypeEvaluator,java.lang.Object[]) -> ofObject
    1:2:io.dcloud.nineoldandroids.animation.ValueAnimator ofPropertyValuesHolder(io.dcloud.nineoldandroids.animation.PropertyValuesHolder[]) -> ofPropertyValuesHolder
    1:5:void removeAllUpdateListeners() -> removeAllUpdateListeners
    1:6:void removeUpdateListener(io.dcloud.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener) -> removeUpdateListener
    1:8:void reverse() -> reverse
    1:8:void setCurrentPlayTime(long) -> setCurrentPlayTime
    1:1:io.dcloud.nineoldandroids.animation.Animator setDuration(long) -> setDuration
    2:5:io.dcloud.nineoldandroids.animation.ValueAnimator setDuration(long) -> setDuration
    1:2:void setEvaluator(io.dcloud.nineoldandroids.animation.TypeEvaluator) -> setEvaluator
    1:15:void setFloatValues(float[]) -> setFloatValues
    1:1:void setFrameDelay(long) -> setFrameDelay
    1:15:void setIntValues(int[]) -> setIntValues
    1:3:void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    1:17:void setObjectValues(java.lang.Object[]) -> setObjectValues
    1:1:void setRepeatCount(int) -> setRepeatCount
    1:1:void setRepeatMode(int) -> setRepeatMode
    1:1:void setStartDelay(long) -> setStartDelay
    1:11:void setValues(io.dcloud.nineoldandroids.animation.PropertyValuesHolder[]) -> setValues
    1:31:void start(boolean) -> start
    32:32:void start() -> start
    1:10:void startAnimation() -> startAnimation
    1:4:java.lang.String toString() -> toString
io.dcloud.nineoldandroids.animation.ValueAnimator$1 -> io.dcloud.nineoldandroids.animation.ValueAnimator$1:
    1:1:void <init>() -> <init>
    1:1:java.lang.Object initialValue() -> initialValue
    2:2:java.util.ArrayList initialValue() -> initialValue
io.dcloud.nineoldandroids.animation.ValueAnimator$2 -> io.dcloud.nineoldandroids.animation.ValueAnimator$2:
    1:1:void <init>() -> <init>
    1:1:java.lang.Object initialValue() -> initialValue
    2:2:java.util.ArrayList initialValue() -> initialValue
io.dcloud.nineoldandroids.animation.ValueAnimator$3 -> io.dcloud.nineoldandroids.animation.ValueAnimator$3:
    1:1:void <init>() -> <init>
    1:1:java.lang.Object initialValue() -> initialValue
    2:2:java.util.ArrayList initialValue() -> initialValue
io.dcloud.nineoldandroids.animation.ValueAnimator$4 -> io.dcloud.nineoldandroids.animation.ValueAnimator$4:
    1:1:void <init>() -> <init>
    1:1:java.lang.Object initialValue() -> initialValue
    2:2:java.util.ArrayList initialValue() -> initialValue
io.dcloud.nineoldandroids.animation.ValueAnimator$5 -> io.dcloud.nineoldandroids.animation.ValueAnimator$5:
    1:1:void <init>() -> <init>
    1:1:java.lang.Object initialValue() -> initialValue
    2:2:java.util.ArrayList initialValue() -> initialValue
io.dcloud.nineoldandroids.animation.ValueAnimator$AnimationHandler -> io.dcloud.nineoldandroids.animation.ValueAnimator$AnimationHandler:
    1:1:void <init>() -> <init>
    2:2:void <init>(io.dcloud.nineoldandroids.animation.ValueAnimator$AnimationHandler) -> <init>
    1:132:void handleMessage(android.os.Message) -> handleMessage
io.dcloud.nineoldandroids.util.FloatProperty -> io.dcloud.nineoldandroids.util.FloatProperty:
    1:1:void <init>(java.lang.String) -> <init>
    1:1:void set(java.lang.Object,java.lang.Object) -> set
    2:2:void set(java.lang.Object,java.lang.Float) -> set
io.dcloud.nineoldandroids.util.IntProperty -> io.dcloud.nineoldandroids.util.IntProperty:
    1:1:void <init>(java.lang.String) -> <init>
    1:1:void set(java.lang.Object,java.lang.Object) -> set
    2:2:void set(java.lang.Object,java.lang.Integer) -> set
io.dcloud.nineoldandroids.util.NoSuchPropertyException -> io.dcloud.nineoldandroids.util.NoSuchPropertyException:
    1:1:void <init>(java.lang.String) -> <init>
io.dcloud.nineoldandroids.util.Property -> io.dcloud.nineoldandroids.util.Property:
    1:3:void <init>(java.lang.Class,java.lang.String) -> <init>
    1:1:java.lang.String getName() -> getName
    1:1:java.lang.Class getType() -> getType
    1:1:io.dcloud.nineoldandroids.util.Property of(java.lang.Class,java.lang.Class,java.lang.String) -> of
    1:1:void set(java.lang.Object,java.lang.Object) -> set
io.dcloud.nineoldandroids.util.ReflectiveProperty -> io.dcloud.nineoldandroids.util.ReflectiveProperty:
    1:74:void <init>(java.lang.Class,java.lang.Class,java.lang.String) -> <init>
    1:20:java.lang.Object get(java.lang.Object) -> get
    1:1:boolean isReadOnly() -> isReadOnly
    1:19:void set(java.lang.Object,java.lang.Object) -> set
    1:9:boolean typesMatch(java.lang.Class,java.lang.Class) -> typesMatch
io.dcloud.nineoldandroids.view.ViewHelper -> io.dcloud.nineoldandroids.view.ViewHelper:
    1:1:void <init>() -> <init>
    1:1:float getAlpha(android.view.View) -> getAlpha
    1:1:float getPivotX(android.view.View) -> getPivotX
    1:1:float getPivotY(android.view.View) -> getPivotY
    1:1:float getRotation(android.view.View) -> getRotation
    1:1:float getRotationX(android.view.View) -> getRotationX
    1:1:float getRotationY(android.view.View) -> getRotationY
    1:1:float getScaleX(android.view.View) -> getScaleX
    1:1:float getScaleY(android.view.View) -> getScaleY
    1:1:float getScrollX(android.view.View) -> getScrollX
    1:1:float getScrollY(android.view.View) -> getScrollY
    1:1:float getTranslationX(android.view.View) -> getTranslationX
    1:1:float getTranslationY(android.view.View) -> getTranslationY
    1:1:float getX(android.view.View) -> getX
    1:1:float getY(android.view.View) -> getY
    1:4:void setAlpha(android.view.View,float) -> setAlpha
    1:4:void setPivotX(android.view.View,float) -> setPivotX
    1:4:void setPivotY(android.view.View,float) -> setPivotY
    1:4:void setRotation(android.view.View,float) -> setRotation
    1:4:void setRotationX(android.view.View,float) -> setRotationX
    1:4:void setRotationY(android.view.View,float) -> setRotationY
    1:4:void setScaleX(android.view.View,float) -> setScaleX
    1:4:void setScaleY(android.view.View,float) -> setScaleY
    1:4:void setScrollX(android.view.View,int) -> setScrollX
    1:4:void setScrollY(android.view.View,int) -> setScrollY
    1:4:void setTranslationX(android.view.View,float) -> setTranslationX
    1:4:void setTranslationY(android.view.View,float) -> setTranslationY
    1:4:void setX(android.view.View,float) -> setX
    1:4:void setY(android.view.View,float) -> setY
io.dcloud.nineoldandroids.view.ViewHelper$Honeycomb -> io.dcloud.nineoldandroids.view.ViewHelper$Honeycomb:
    1:1:void <init>() -> <init>
    1:1:float getAlpha(android.view.View) -> getAlpha
    1:1:float getPivotX(android.view.View) -> getPivotX
    1:1:float getPivotY(android.view.View) -> getPivotY
    1:1:float getRotation(android.view.View) -> getRotation
    1:1:float getRotationX(android.view.View) -> getRotationX
    1:1:float getRotationY(android.view.View) -> getRotationY
    1:1:float getScaleX(android.view.View) -> getScaleX
    1:1:float getScaleY(android.view.View) -> getScaleY
    1:1:float getScrollX(android.view.View) -> getScrollX
    1:1:float getScrollY(android.view.View) -> getScrollY
    1:1:float getTranslationX(android.view.View) -> getTranslationX
    1:1:float getTranslationY(android.view.View) -> getTranslationY
    1:1:float getX(android.view.View) -> getX
    1:1:float getY(android.view.View) -> getY
    1:1:void setAlpha(android.view.View,float) -> setAlpha
    1:1:void setPivotX(android.view.View,float) -> setPivotX
    1:1:void setPivotY(android.view.View,float) -> setPivotY
    1:1:void setRotation(android.view.View,float) -> setRotation
    1:1:void setRotationX(android.view.View,float) -> setRotationX
    1:1:void setRotationY(android.view.View,float) -> setRotationY
    1:1:void setScaleX(android.view.View,float) -> setScaleX
    1:1:void setScaleY(android.view.View,float) -> setScaleY
    1:1:void setScrollX(android.view.View,int) -> setScrollX
    1:1:void setScrollY(android.view.View,int) -> setScrollY
    1:1:void setTranslationX(android.view.View,float) -> setTranslationX
    1:1:void setTranslationY(android.view.View,float) -> setTranslationY
    1:1:void setX(android.view.View,float) -> setX
    1:1:void setY(android.view.View,float) -> setY
io.dcloud.nineoldandroids.view.ViewPropertyAnimator -> io.dcloud.nineoldandroids.view.ViewPropertyAnimator:
    1:2:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
    1:11:io.dcloud.nineoldandroids.view.ViewPropertyAnimator animate(android.view.View) -> animate
io.dcloud.nineoldandroids.view.ViewPropertyAnimatorHC -> io.dcloud.nineoldandroids.view.ViewPropertyAnimatorHC:
    1:162:void <init>(android.view.View) -> <init>
    1:1:void access$0(io.dcloud.nineoldandroids.view.ViewPropertyAnimatorHC) -> access$0
    1:1:io.dcloud.nineoldandroids.animation.Animator$AnimatorListener access$1(io.dcloud.nineoldandroids.view.ViewPropertyAnimatorHC) -> access$1
    1:1:java.util.HashMap access$2(io.dcloud.nineoldandroids.view.ViewPropertyAnimatorHC) -> access$2
    1:1:void access$3(io.dcloud.nineoldandroids.view.ViewPropertyAnimatorHC,io.dcloud.nineoldandroids.animation.Animator$AnimatorListener) -> access$3
    1:1:java.lang.ref.WeakReference access$4(io.dcloud.nineoldandroids.view.ViewPropertyAnimatorHC) -> access$4
    1:1:void access$5(io.dcloud.nineoldandroids.view.ViewPropertyAnimatorHC,int,float) -> access$5
    1:1:io.dcloud.nineoldandroids.view.ViewPropertyAnimator alpha(float) -> alpha
    1:1:io.dcloud.nineoldandroids.view.ViewPropertyAnimator alphaBy(float) -> alphaBy
    1:3:void animateProperty(int,float) -> animateProperty
    1:2:void animatePropertyBy(int,float) -> animatePropertyBy
    3:30:void animatePropertyBy(int,float,float) -> animatePropertyBy
    1:12:void cancel() -> cancel
    1:6:long getDuration() -> getDuration
    1:2:long getStartDelay() -> getStartDelay
    1:53:float getValue(int) -> getValue
    1:1:io.dcloud.nineoldandroids.view.ViewPropertyAnimator rotation(float) -> rotation
    1:1:io.dcloud.nineoldandroids.view.ViewPropertyAnimator rotationBy(float) -> rotationBy
    1:1:io.dcloud.nineoldandroids.view.ViewPropertyAnimator rotationX(float) -> rotationX
    1:1:io.dcloud.nineoldandroids.view.ViewPropertyAnimator rotationXBy(float) -> rotationXBy
    1:1:io.dcloud.nineoldandroids.view.ViewPropertyAnimator rotationY(float) -> rotationY
    1:1:io.dcloud.nineoldandroids.view.ViewPropertyAnimator rotationYBy(float) -> rotationYBy
    1:1:io.dcloud.nineoldandroids.view.ViewPropertyAnimator scaleX(float) -> scaleX
    1:1:io.dcloud.nineoldandroids.view.ViewPropertyAnimator scaleXBy(float) -> scaleXBy
    1:1:io.dcloud.nineoldandroids.view.ViewPropertyAnimator scaleY(float) -> scaleY
    1:1:io.dcloud.nineoldandroids.view.ViewPropertyAnimator scaleYBy(float) -> scaleYBy
    1:5:io.dcloud.nineoldandroids.view.ViewPropertyAnimator setDuration(long) -> setDuration
    1:2:io.dcloud.nineoldandroids.view.ViewPropertyAnimator setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    1:1:io.dcloud.nineoldandroids.view.ViewPropertyAnimator setListener(io.dcloud.nineoldandroids.animation.Animator$AnimatorListener) -> setListener
    1:5:io.dcloud.nineoldandroids.view.ViewPropertyAnimator setStartDelay(long) -> setStartDelay
    1:66:void setValue(int,float) -> setValue
    1:1:void start() -> start
    1:25:void startAnimation() -> startAnimation
    1:1:io.dcloud.nineoldandroids.view.ViewPropertyAnimator translationX(float) -> translationX
    1:1:io.dcloud.nineoldandroids.view.ViewPropertyAnimator translationXBy(float) -> translationXBy
    1:1:io.dcloud.nineoldandroids.view.ViewPropertyAnimator translationY(float) -> translationY
    1:1:io.dcloud.nineoldandroids.view.ViewPropertyAnimator translationYBy(float) -> translationYBy
    1:1:io.dcloud.nineoldandroids.view.ViewPropertyAnimator x(float) -> x
    1:1:io.dcloud.nineoldandroids.view.ViewPropertyAnimator xBy(float) -> xBy
    1:1:io.dcloud.nineoldandroids.view.ViewPropertyAnimator y(float) -> y
    1:1:io.dcloud.nineoldandroids.view.ViewPropertyAnimator yBy(float) -> yBy
io.dcloud.nineoldandroids.view.ViewPropertyAnimatorHC$1 -> io.dcloud.nineoldandroids.view.ViewPropertyAnimatorHC$1:
    1:125:void <init>(io.dcloud.nineoldandroids.view.ViewPropertyAnimatorHC) -> <init>
    1:1:void run() -> run
io.dcloud.nineoldandroids.view.ViewPropertyAnimatorHC$AnimatorEventListener -> io.dcloud.nineoldandroids.view.ViewPropertyAnimatorHC$AnimatorEventListener:
    1:1:void <init>(io.dcloud.nineoldandroids.view.ViewPropertyAnimatorHC) -> <init>
    2:2:void <init>(io.dcloud.nineoldandroids.view.ViewPropertyAnimatorHC,io.dcloud.nineoldandroids.view.ViewPropertyAnimatorHC$AnimatorEventListener) -> <init>
    1:2:void onAnimationCancel(io.dcloud.nineoldandroids.animation.Animator) -> onAnimationCancel
    1:9:void onAnimationEnd(io.dcloud.nineoldandroids.animation.Animator) -> onAnimationEnd
    1:2:void onAnimationRepeat(io.dcloud.nineoldandroids.animation.Animator) -> onAnimationRepeat
    1:2:void onAnimationStart(io.dcloud.nineoldandroids.animation.Animator) -> onAnimationStart
    1:31:void onAnimationUpdate(io.dcloud.nineoldandroids.animation.ValueAnimator) -> onAnimationUpdate
io.dcloud.nineoldandroids.view.ViewPropertyAnimatorHC$NameValuesHolder -> io.dcloud.nineoldandroids.view.ViewPropertyAnimatorHC$NameValuesHolder:
    1:4:void <init>(int,float,float) -> <init>
io.dcloud.nineoldandroids.view.ViewPropertyAnimatorHC$PropertyBundle -> io.dcloud.nineoldandroids.view.ViewPropertyAnimatorHC$PropertyBundle:
    1:3:void <init>(int,java.util.ArrayList) -> <init>
    1:7:boolean cancel(int) -> cancel
io.dcloud.nineoldandroids.view.ViewPropertyAnimatorICS -> io.dcloud.nineoldandroids.view.ViewPropertyAnimatorICS:
    1:2:void <init>(android.view.View) -> <init>
    1:3:io.dcloud.nineoldandroids.view.ViewPropertyAnimator alpha(float) -> alpha
    1:3:io.dcloud.nineoldandroids.view.ViewPropertyAnimator alphaBy(float) -> alphaBy
    1:3:void cancel() -> cancel
    1:3:long getDuration() -> getDuration
    1:3:long getStartDelay() -> getStartDelay
    1:3:io.dcloud.nineoldandroids.view.ViewPropertyAnimator rotation(float) -> rotation
    1:3:io.dcloud.nineoldandroids.view.ViewPropertyAnimator rotationBy(float) -> rotationBy
    1:3:io.dcloud.nineoldandroids.view.ViewPropertyAnimator rotationX(float) -> rotationX
    1:3:io.dcloud.nineoldandroids.view.ViewPropertyAnimator rotationXBy(float) -> rotationXBy
    1:3:io.dcloud.nineoldandroids.view.ViewPropertyAnimator rotationY(float) -> rotationY
    1:3:io.dcloud.nineoldandroids.view.ViewPropertyAnimator rotationYBy(float) -> rotationYBy
    1:3:io.dcloud.nineoldandroids.view.ViewPropertyAnimator scaleX(float) -> scaleX
    1:3:io.dcloud.nineoldandroids.view.ViewPropertyAnimator scaleXBy(float) -> scaleXBy
    1:3:io.dcloud.nineoldandroids.view.ViewPropertyAnimator scaleY(float) -> scaleY
    1:3:io.dcloud.nineoldandroids.view.ViewPropertyAnimator scaleYBy(float) -> scaleYBy
    1:3:io.dcloud.nineoldandroids.view.ViewPropertyAnimator setDuration(long) -> setDuration
    1:3:io.dcloud.nineoldandroids.view.ViewPropertyAnimator setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    1:6:io.dcloud.nineoldandroids.view.ViewPropertyAnimator setListener(io.dcloud.nineoldandroids.animation.Animator$AnimatorListener) -> setListener
    1:3:io.dcloud.nineoldandroids.view.ViewPropertyAnimator setStartDelay(long) -> setStartDelay
    1:3:void start() -> start
    1:3:io.dcloud.nineoldandroids.view.ViewPropertyAnimator translationX(float) -> translationX
    1:3:io.dcloud.nineoldandroids.view.ViewPropertyAnimator translationXBy(float) -> translationXBy
    1:3:io.dcloud.nineoldandroids.view.ViewPropertyAnimator translationY(float) -> translationY
    1:3:io.dcloud.nineoldandroids.view.ViewPropertyAnimator translationYBy(float) -> translationYBy
    1:3:io.dcloud.nineoldandroids.view.ViewPropertyAnimator x(float) -> x
    1:3:io.dcloud.nineoldandroids.view.ViewPropertyAnimator xBy(float) -> xBy
    1:3:io.dcloud.nineoldandroids.view.ViewPropertyAnimator y(float) -> y
    1:3:io.dcloud.nineoldandroids.view.ViewPropertyAnimator yBy(float) -> yBy
io.dcloud.nineoldandroids.view.ViewPropertyAnimatorICS$1 -> io.dcloud.nineoldandroids.view.ViewPropertyAnimatorICS$1:
    1:78:void <init>(io.dcloud.nineoldandroids.view.ViewPropertyAnimatorICS,io.dcloud.nineoldandroids.animation.Animator$AnimatorListener) -> <init>
    1:1:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    1:1:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    1:1:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    1:1:void onAnimationStart(android.animation.Animator) -> onAnimationStart
io.dcloud.nineoldandroids.view.ViewPropertyAnimatorPreHC -> io.dcloud.nineoldandroids.view.ViewPropertyAnimatorPreHC:
    1:163:void <init>(android.view.View) -> <init>
    1:1:void access$0(io.dcloud.nineoldandroids.view.ViewPropertyAnimatorPreHC) -> access$0
    1:1:io.dcloud.nineoldandroids.animation.Animator$AnimatorListener access$1(io.dcloud.nineoldandroids.view.ViewPropertyAnimatorPreHC) -> access$1
    1:1:java.util.HashMap access$2(io.dcloud.nineoldandroids.view.ViewPropertyAnimatorPreHC) -> access$2
    1:1:void access$3(io.dcloud.nineoldandroids.view.ViewPropertyAnimatorPreHC,io.dcloud.nineoldandroids.animation.Animator$AnimatorListener) -> access$3
    1:1:java.lang.ref.WeakReference access$4(io.dcloud.nineoldandroids.view.ViewPropertyAnimatorPreHC) -> access$4
    1:1:void access$5(io.dcloud.nineoldandroids.view.ViewPropertyAnimatorPreHC,int,float) -> access$5
    1:1:io.dcloud.nineoldandroids.view.ViewPropertyAnimator alpha(float) -> alpha
    1:1:io.dcloud.nineoldandroids.view.ViewPropertyAnimator alphaBy(float) -> alphaBy
    1:3:void animateProperty(int,float) -> animateProperty
    1:2:void animatePropertyBy(int,float) -> animatePropertyBy
    3:30:void animatePropertyBy(int,float,float) -> animatePropertyBy
    1:12:void cancel() -> cancel
    1:6:long getDuration() -> getDuration
    1:2:long getStartDelay() -> getStartDelay
    1:21:float getValue(int) -> getValue
    1:1:io.dcloud.nineoldandroids.view.ViewPropertyAnimator rotation(float) -> rotation
    1:1:io.dcloud.nineoldandroids.view.ViewPropertyAnimator rotationBy(float) -> rotationBy
    1:1:io.dcloud.nineoldandroids.view.ViewPropertyAnimator rotationX(float) -> rotationX
    1:1:io.dcloud.nineoldandroids.view.ViewPropertyAnimator rotationXBy(float) -> rotationXBy
    1:1:io.dcloud.nineoldandroids.view.ViewPropertyAnimator rotationY(float) -> rotationY
    1:1:io.dcloud.nineoldandroids.view.ViewPropertyAnimator rotationYBy(float) -> rotationYBy
    1:1:io.dcloud.nineoldandroids.view.ViewPropertyAnimator scaleX(float) -> scaleX
    1:1:io.dcloud.nineoldandroids.view.ViewPropertyAnimator scaleXBy(float) -> scaleXBy
    1:1:io.dcloud.nineoldandroids.view.ViewPropertyAnimator scaleY(float) -> scaleY
    1:1:io.dcloud.nineoldandroids.view.ViewPropertyAnimator scaleYBy(float) -> scaleYBy
    1:5:io.dcloud.nineoldandroids.view.ViewPropertyAnimator setDuration(long) -> setDuration
    1:2:io.dcloud.nineoldandroids.view.ViewPropertyAnimator setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    1:1:io.dcloud.nineoldandroids.view.ViewPropertyAnimator setListener(io.dcloud.nineoldandroids.animation.Animator$AnimatorListener) -> setListener
    1:5:io.dcloud.nineoldandroids.view.ViewPropertyAnimator setStartDelay(long) -> setStartDelay
    1:25:void setValue(int,float) -> setValue
    1:1:void start() -> start
    1:25:void startAnimation() -> startAnimation
    1:1:io.dcloud.nineoldandroids.view.ViewPropertyAnimator translationX(float) -> translationX
    1:1:io.dcloud.nineoldandroids.view.ViewPropertyAnimator translationXBy(float) -> translationXBy
    1:1:io.dcloud.nineoldandroids.view.ViewPropertyAnimator translationY(float) -> translationY
    1:1:io.dcloud.nineoldandroids.view.ViewPropertyAnimator translationYBy(float) -> translationYBy
    1:1:io.dcloud.nineoldandroids.view.ViewPropertyAnimator x(float) -> x
    1:1:io.dcloud.nineoldandroids.view.ViewPropertyAnimator xBy(float) -> xBy
    1:1:io.dcloud.nineoldandroids.view.ViewPropertyAnimator y(float) -> y
    1:1:io.dcloud.nineoldandroids.view.ViewPropertyAnimator yBy(float) -> yBy
io.dcloud.nineoldandroids.view.ViewPropertyAnimatorPreHC$1 -> io.dcloud.nineoldandroids.view.ViewPropertyAnimatorPreHC$1:
    1:131:void <init>(io.dcloud.nineoldandroids.view.ViewPropertyAnimatorPreHC) -> <init>
    1:1:void run() -> run
io.dcloud.nineoldandroids.view.ViewPropertyAnimatorPreHC$AnimatorEventListener -> io.dcloud.nineoldandroids.view.ViewPropertyAnimatorPreHC$AnimatorEventListener:
    1:1:void <init>(io.dcloud.nineoldandroids.view.ViewPropertyAnimatorPreHC) -> <init>
    2:2:void <init>(io.dcloud.nineoldandroids.view.ViewPropertyAnimatorPreHC,io.dcloud.nineoldandroids.view.ViewPropertyAnimatorPreHC$AnimatorEventListener) -> <init>
    1:2:void onAnimationCancel(io.dcloud.nineoldandroids.animation.Animator) -> onAnimationCancel
    1:9:void onAnimationEnd(io.dcloud.nineoldandroids.animation.Animator) -> onAnimationEnd
    1:2:void onAnimationRepeat(io.dcloud.nineoldandroids.animation.Animator) -> onAnimationRepeat
    1:2:void onAnimationStart(io.dcloud.nineoldandroids.animation.Animator) -> onAnimationStart
    1:31:void onAnimationUpdate(io.dcloud.nineoldandroids.animation.ValueAnimator) -> onAnimationUpdate
io.dcloud.nineoldandroids.view.ViewPropertyAnimatorPreHC$NameValuesHolder -> io.dcloud.nineoldandroids.view.ViewPropertyAnimatorPreHC$NameValuesHolder:
    1:4:void <init>(int,float,float) -> <init>
io.dcloud.nineoldandroids.view.ViewPropertyAnimatorPreHC$PropertyBundle -> io.dcloud.nineoldandroids.view.ViewPropertyAnimatorPreHC$PropertyBundle:
    1:3:void <init>(int,java.util.ArrayList) -> <init>
    1:7:boolean cancel(int) -> cancel
io.dcloud.nineoldandroids.view.animation.AnimatorProxy -> io.dcloud.nineoldandroids.view.animation.AnimatorProxy:
    1:5:void <clinit>() -> <clinit>
    1:24:void <init>(android.view.View) -> <init>
    1:4:void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
    1:23:void computeRect(android.graphics.RectF,android.view.View) -> computeRect
    1:1:float getAlpha() -> getAlpha
    1:1:float getPivotX() -> getPivotX
    1:1:float getPivotY() -> getPivotY
    1:1:float getRotation() -> getRotation
    1:1:float getRotationX() -> getRotationX
    1:1:float getRotationY() -> getRotationY
    1:1:float getScaleX() -> getScaleX
    1:1:float getScaleY() -> getScaleY
    1:5:int getScrollX() -> getScrollX
    1:5:int getScrollY() -> getScrollY
    1:1:float getTranslationX() -> getTranslationX
    1:1:float getTranslationY() -> getTranslationY
    1:5:float getX() -> getX
    1:5:float getY() -> getY
    1:15:void invalidateAfterUpdate() -> invalidateAfterUpdate
    1:3:void prepareForUpdate() -> prepareForUpdate
    1:5:void setAlpha(float) -> setAlpha
    1:5:void setPivotX(float) -> setPivotX
    1:5:void setPivotY(float) -> setPivotY
    1:4:void setRotation(float) -> setRotation
    1:4:void setRotationX(float) -> setRotationX
    1:4:void setRotationY(float) -> setRotationY
    1:4:void setScaleX(float) -> setScaleX
    1:4:void setScaleY(float) -> setScaleY
    1:3:void setScrollX(int) -> setScrollX
    1:3:void setScrollY(int) -> setScrollY
    1:4:void setTranslationX(float) -> setTranslationX
    1:4:void setTranslationY(float) -> setTranslationY
    1:3:void setX(float) -> setX
    1:3:void setY(float) -> setY
    1:31:void transformMatrix(android.graphics.Matrix,android.view.View) -> transformMatrix
    1:5:io.dcloud.nineoldandroids.view.animation.AnimatorProxy wrap(android.view.View) -> wrap
io.dcloud.share.AbsWebviewClient -> io.dcloud.share.AbsWebviewClient:
    1:1:void <init>() -> <init>
io.dcloud.share.ShareAuthorizeView -> io.dcloud.share.ShareAuthorizeView:
    1:6:void <init>(io.dcloud.common.DHInterface.IWebview,java.lang.String) -> <init>
    1:13:void a(android.webkit.WebView) -> a
    1:4:void load(io.dcloud.share.a,java.lang.String) -> load
    1:2:void onauthenticated(java.lang.String) -> onauthenticated
    1:1:void onerror(java.lang.String) -> onerror
    1:1:void onloaded() -> onloaded
io.dcloud.share.ShareFeatureImpl -> io.dcloud.share.ShareFeatureImpl:
    1:1:void <init>() -> <init>
    1:2:void dispose(java.lang.String) -> dispose
    1:1:java.lang.String execute(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String[]) -> execute
    1:1:void init(io.dcloud.common.DHInterface.AbsMgr,java.lang.String) -> init
io.dcloud.share.a -> io.dcloud.share.a:
    1:5:void <init>(io.dcloud.common.DHInterface.AbsMgr,java.lang.String) -> <init>
    1:160:java.lang.String a(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String[]) -> a
    161:164:java.lang.String a(java.lang.String) -> a
    165:198:java.lang.String a(io.dcloud.common.DHInterface.IWebview) -> a
    199:239:void a(io.dcloud.common.DHInterface.IWebview,java.lang.String,java.lang.String) -> a
    240:257:android.content.Intent a(android.content.Intent,java.lang.String,java.lang.String,java.util.ArrayList) -> a
    258:281:android.net.Uri a(android.content.Context,java.io.File,android.content.Intent) -> a
    282:299:void a() -> a
io.dcloud.weex.ConsoleLogUtils -> io.dcloud.weex.ConsoleLogUtils:
    26:26:void <init>() -> <init>
    65:71:boolean checkLog(java.lang.String) -> checkLog
    33:62:void consoleLog(java.lang.String,java.lang.String,io.dcloud.feature.uniapp.utils.AbsLogLevel) -> consoleLog
io.dcloud.weex.DCFileUtils -> io.dcloud.weex.DCFileUtils:
    40:40:void <init>() -> <init>
    83:102:java.lang.String getAssetPath(java.lang.String) -> getAssetPath
    42:79:java.io.InputStream loadWeexAsset(java.lang.String,android.content.Context) -> loadWeexAsset
io.dcloud.weex.FlingHelper -> io.dcloud.weex.FlingHelper:
    25:26:void <clinit>() -> <clinit>
    29:31:void <init>(android.content.Context) -> <init>
    34:34:double getSplineDeceleration(int) -> getSplineDeceleration
    38:38:double getSplineDecelerationByDistance(double) -> getSplineDecelerationByDistance
    42:42:double getSplineFlingDistance(int) -> getSplineFlingDistance
    46:46:int getVelocityByDistance(double) -> getVelocityByDistance
io.dcloud.weex.MoudlesLoader -> io.dcloud.weex.MoudlesLoader:
    34:34:void <init>() -> <init>
    85:107:void createAppMoudle(java.lang.String,android.app.Application,boolean) -> createAppMoudle
    39:46:io.dcloud.weex.MoudlesLoader getInstance() -> getInstance
    125:130:com.alibaba.fastjson.JSONObject getPluginsValue(android.app.Application) -> getPluginsValue
    63:81:void initMoudle(com.alibaba.fastjson.JSONObject,android.app.Application) -> initMoudle
    50:60:void onCreate(android.app.Application) -> onCreate
    139:150:void onSubProcess(android.app.Application) -> onSubProcess
    111:122:void registerMoudle(java.lang.String,java.lang.String,java.lang.String) -> registerMoudle
io.dcloud.weex.ViewHover -> io.dcloud.weex.ViewHover:
    44:45:void <init>(com.taobao.weex.ui.component.WXComponent) -> <init>
    33:65:void <init>(com.taobao.weex.ui.component.WXComponent,com.alibaba.fastjson.JSONObject) -> <init>
    31:31:boolean access$000(io.dcloud.weex.ViewHover) -> access$000
    31:31:boolean access$002(io.dcloud.weex.ViewHover,boolean) -> access$002
    31:31:com.taobao.weex.ui.component.WXComponent access$100(io.dcloud.weex.ViewHover) -> access$100
    31:31:java.util.Map access$202(io.dcloud.weex.ViewHover,java.util.Map) -> access$202
    165:167:void destroy() -> destroy
    96:96:int getHoverStartTime() -> getHoverStartTime
    104:104:int getHoverStayTime() -> getHoverStayTime
    112:138:void handleMotionEvent(com.taobao.weex.ui.view.gesture.WXGestureType,android.view.MotionEvent) -> handleMotionEvent
    88:88:boolean isHoverStopPropagation() -> isHoverStopPropagation
    100:101:void setHoverStartTime(int) -> setHoverStartTime
    108:109:void setHoverStayTime(int) -> setHoverStayTime
    92:93:void setHoverStopPropagation(boolean) -> setHoverStopPropagation
    161:162:void setReceiveTouch(boolean) -> setReceiveTouch
    77:85:void update(com.alibaba.fastjson.JSONObject) -> update
    141:157:java.util.Map updateStatusAndGetUpdateStyles(boolean) -> updateStatusAndGetUpdateStyles
io.dcloud.weex.ViewHover$1 -> io.dcloud.weex.ViewHover$1:
    51:51:void <init>(io.dcloud.weex.ViewHover) -> <init>
    55:62:void run() -> run
io.dcloud.weex.ViewHover$2 -> io.dcloud.weex.ViewHover$2:
    65:65:void <init>(io.dcloud.weex.ViewHover) -> <init>
    69:73:void run() -> run
io.dcloud.weex.WXDotDataUtil -> io.dcloud.weex.WXDotDataUtil:
    26:26:void <clinit>() -> <clinit>
    25:25:void <init>() -> <init>
    35:35:com.alibaba.fastjson.JSONObject getDeviceInfo() -> getDeviceInfo
    29:32:void setValue(java.lang.String,java.lang.Object) -> setValue
io.src.dcloud.adapter.DCloudAdapterUtil -> io.src.dcloud.adapter.DCloudAdapterUtil:
    1:1:void <init>() -> <init>
    1:3:java.lang.Class getDownloadServiceClass() -> getDownloadServiceClass
    1:2:io.dcloud.common.DHInterface.IActivityHandler getIActivityHandler(android.app.Activity) -> getIActivityHandler
    1:2:io.dcloud.common.DHInterface.IOnCreateSplashView getIOnCreateSplashView(android.app.Activity) -> getIOnCreateSplashView
    1:1:int getImageOnLoadingId(android.content.Context) -> getImageOnLoadingId
    1:1:java.lang.String getRuntimeJsPath() -> getRuntimeJsPath
io.src.dcloud.adapter.DCloudBaseActivity -> io.src.dcloud.adapter.DCloudBaseActivity:
    1:26:void <init>() -> <init>
    1:1:void access$000(io.src.dcloud.adapter.DCloudBaseActivity,java.lang.String,boolean) -> access$000
    1:1:android.app.Dialog access$100(io.src.dcloud.adapter.DCloudBaseActivity) -> access$100
    1:1:int access$200(io.src.dcloud.adapter.DCloudBaseActivity) -> access$200
    1:1:int access$202(io.src.dcloud.adapter.DCloudBaseActivity,int) -> access$202
    1:1:int access$208(io.src.dcloud.adapter.DCloudBaseActivity) -> access$208
    1:1:void access$300(io.src.dcloud.adapter.DCloudBaseActivity,java.lang.String,boolean,boolean) -> access$300
    1:1:void access$400(io.src.dcloud.adapter.DCloudBaseActivity) -> access$400
    1:1:android.app.AlertDialog access$500(io.src.dcloud.adapter.DCloudBaseActivity) -> access$500
    1:1:android.app.AlertDialog access$502(io.src.dcloud.adapter.DCloudBaseActivity,android.app.AlertDialog) -> access$502
    1:3:void debugSocketAlert(java.lang.String,boolean,boolean) -> debugSocketAlert
    4:21:void debugSocketAlert(java.lang.String,boolean) -> debugSocketAlert
    1:3:void dismissDebugLoading() -> dismissDebugLoading
    1:4:boolean isWeexDebuging() -> isWeexDebuging
    1:9:void onCreate(android.os.Bundle) -> onCreate
    1:4:void onDestroy() -> onDestroy
    1:2:void onNewIntent(android.content.Intent) -> onNewIntent
    1:31:void showDebugLoading() -> showDebugLoading
io.src.dcloud.adapter.DCloudBaseActivity$DebugSocketStatusReceiver -> io.src.dcloud.adapter.DCloudBaseActivity$DebugSocketStatusReceiver:
    1:1:void <init>(io.src.dcloud.adapter.DCloudBaseActivity) -> <init>
    1:3:void onReceive(android.content.Context,android.content.Intent) -> onReceive
io.src.dcloud.adapter.DCloudBaseActivity$SocketCheckReceiver -> io.src.dcloud.adapter.DCloudBaseActivity$SocketCheckReceiver:
    1:1:void <init>(io.src.dcloud.adapter.DCloudBaseActivity) -> <init>
    1:5:void onReceive(android.content.Context,android.content.Intent) -> onReceive
io.src.dcloud.adapter.DCloudBaseActivity$a -> io.src.dcloud.adapter.DCloudBaseActivity$a:
    1:1:void <init>(io.src.dcloud.adapter.DCloudBaseActivity) -> <init>
    1:11:void run() -> run
io.src.dcloud.adapter.DCloudBaseActivity$b -> io.src.dcloud.adapter.DCloudBaseActivity$b:
    1:1:void <init>(io.src.dcloud.adapter.DCloudBaseActivity,java.lang.String) -> <init>
    1:70:void run() -> run
io.src.dcloud.adapter.DCloudBaseActivity$b$a -> io.src.dcloud.adapter.DCloudBaseActivity$b$a:
    1:1:void <init>(io.src.dcloud.adapter.DCloudBaseActivity$b) -> <init>
    1:12:void onClick(android.content.DialogInterface,int) -> onClick
io.src.dcloud.adapter.DCloudBaseActivity$b$b -> io.src.dcloud.adapter.DCloudBaseActivity$b$b:
    1:1:void <init>(io.src.dcloud.adapter.DCloudBaseActivity$b) -> <init>
    1:6:void onClick(android.content.DialogInterface,int) -> onClick
io.src.dcloud.adapter.DCloudBaseService -> io.src.dcloud.adapter.DCloudBaseService:
    1:2:void <init>() -> <init>
    1:1:android.os.IBinder onBind(android.content.Intent) -> onBind
    1:2:void onCreate() -> onCreate
    1:2:void onDestroy() -> onDestroy
    1:1:int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    1:1:int onStartCommandImpl(android.content.Intent,int,int) -> onStartCommandImpl
org.mozilla.universalchardet.Constants -> org.mozilla.universalchardet.Constants:
    1:30:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
org.mozilla.universalchardet.EncodingDetectorInputStream -> org.mozilla.universalchardet.EncodingDetectorInputStream:
    1:9:void <init>(java.io.InputStream) -> <init>
    1:1:int available() -> available
    1:1:void close() -> close
    1:1:java.lang.String getDetectedCharset() -> getDetectedCharset
    1:1:void mark(int) -> mark
    1:1:boolean markSupported() -> markSupported
    1:4:int read() -> read
    5:10:int read(byte[],int,int) -> read
    11:11:int read(byte[]) -> read
    1:1:void reset() -> reset
    1:8:long skip(long) -> skip
org.mozilla.universalchardet.EncodingDetectorOutputStream -> org.mozilla.universalchardet.EncodingDetectorOutputStream:
    1:6:void <init>(java.io.OutputStream) -> <init>
    1:2:void close() -> close
    1:1:void flush() -> flush
    1:1:java.lang.String getDetectedCharset() -> getDetectedCharset
    1:3:void write(byte[],int,int) -> write
    4:4:void write(byte[]) -> write
    5:5:void write(int) -> write
org.mozilla.universalchardet.ReaderFactory -> org.mozilla.universalchardet.ReaderFactory:
    1:2:void <init>() -> <init>
    1:9:java.io.Reader createReaderFromFile(java.io.File,java.nio.charset.Charset) -> createReaderFromFile
    10:10:java.io.Reader createReaderFromFile(java.io.File) -> createReaderFromFile
org.mozilla.universalchardet.UnicodeBOMInputStream -> org.mozilla.universalchardet.UnicodeBOMInputStream:
    1:1:void <init>(java.io.InputStream) -> <init>
    2:84:void <init>(java.io.InputStream,boolean) -> <init>
    1:1:int available() -> available
    1:1:void close() -> close
    1:1:org.mozilla.universalchardet.UnicodeBOMInputStream$BOM getBOM() -> getBOM
    1:1:void mark(int) -> mark
    1:1:boolean markSupported() -> markSupported
    1:2:int read() -> read
    3:4:int read(byte[]) -> read
    5:6:int read(byte[],int,int) -> read
    1:1:void reset() -> reset
    1:2:long skip(long) -> skip
    0:7:org.mozilla.universalchardet.UnicodeBOMInputStream skipBOM() -> skipBOM
org.mozilla.universalchardet.UnicodeBOMInputStream$BOM -> org.mozilla.universalchardet.UnicodeBOMInputStream$BOM:
    1:34:void <clinit>() -> <clinit>
    1:7:void <init>(byte[],java.lang.String) -> <init>
    1:5:byte[] getBytes() -> getBytes
    1:1:java.lang.String toString() -> toString
org.mozilla.universalchardet.UniversalDetector -> org.mozilla.universalchardet.UniversalDetector:
    1:1:void <init>() -> <init>
    2:7:void <init>(org.mozilla.universalchardet.CharsetListener) -> <init>
    1:32:void dataEnd() -> dataEnd
    1:34:java.lang.String detectCharset(java.io.File) -> detectCharset
    1:1:java.lang.String getDetectedCharset() -> getDetectedCharset
    1:1:org.mozilla.universalchardet.CharsetListener getListener() -> getListener
    1:1:void handleData(byte[]) -> handleData
    2:126:void handleData(byte[],int,int) -> handleData
    1:1:boolean isDone() -> isDone
    1:14:void reset() -> reset
    1:1:void setListener(org.mozilla.universalchardet.CharsetListener) -> setListener
org.mozilla.universalchardet.UniversalDetector$InputState -> org.mozilla.universalchardet.UniversalDetector$InputState:
    1:4:void <clinit>() -> <clinit>
    1:1:void <init>(java.lang.String,int) -> <init>
    1:1:org.mozilla.universalchardet.UniversalDetector$InputState valueOf(java.lang.String) -> valueOf
    1:1:org.mozilla.universalchardet.UniversalDetector$InputState[] values() -> values
org.mozilla.universalchardet.prober.Big5Prober -> org.mozilla.universalchardet.prober.Big5Prober:
    1:1:void <clinit>() -> <clinit>
    1:5:void <init>() -> <init>
    1:1:java.lang.String getCharSetName() -> getCharSetName
    1:1:float getConfidence() -> getConfidence
    1:1:org.mozilla.universalchardet.prober.CharsetProber$ProbingState getState() -> getState
    1:29:org.mozilla.universalchardet.prober.CharsetProber$ProbingState handleData(byte[],int,int) -> handleData
    1:4:void reset() -> reset
org.mozilla.universalchardet.prober.CharsetProber -> org.mozilla.universalchardet.prober.CharsetProber:
    1:2:void <init>() -> <init>
    1:35:java.nio.ByteBuffer filterWithEnglishLetters(byte[],int,int) -> filterWithEnglishLetters
    1:33:java.nio.ByteBuffer filterWithoutEnglishLetters(byte[],int,int) -> filterWithoutEnglishLetters
    1:1:boolean isActive() -> isActive
    1:1:void setActive(boolean) -> setActive
org.mozilla.universalchardet.prober.CharsetProber$ProbingState -> org.mozilla.universalchardet.prober.CharsetProber$ProbingState:
    1:4:void <clinit>() -> <clinit>
    1:1:void <init>(java.lang.String,int) -> <init>
    1:1:org.mozilla.universalchardet.prober.CharsetProber$ProbingState valueOf(java.lang.String) -> valueOf
    1:1:org.mozilla.universalchardet.prober.CharsetProber$ProbingState[] values() -> values
org.mozilla.universalchardet.prober.EUCJPProber -> org.mozilla.universalchardet.prober.EUCJPProber:
    1:1:void <clinit>() -> <clinit>
    1:6:void <init>() -> <init>
    1:1:java.lang.String getCharSetName() -> getCharSetName
    1:4:float getConfidence() -> getConfidence
    1:1:org.mozilla.universalchardet.prober.CharsetProber$ProbingState getState() -> getState
    1:32:org.mozilla.universalchardet.prober.CharsetProber$ProbingState handleData(byte[],int,int) -> handleData
    1:5:void reset() -> reset
org.mozilla.universalchardet.prober.EUCKRProber -> org.mozilla.universalchardet.prober.EUCKRProber:
    1:1:void <clinit>() -> <clinit>
    1:5:void <init>() -> <init>
    1:1:java.lang.String getCharSetName() -> getCharSetName
    1:1:float getConfidence() -> getConfidence
    1:1:org.mozilla.universalchardet.prober.CharsetProber$ProbingState getState() -> getState
    1:29:org.mozilla.universalchardet.prober.CharsetProber$ProbingState handleData(byte[],int,int) -> handleData
    1:4:void reset() -> reset
org.mozilla.universalchardet.prober.EUCTWProber -> org.mozilla.universalchardet.prober.EUCTWProber:
    1:1:void <clinit>() -> <clinit>
    1:5:void <init>() -> <init>
    1:1:java.lang.String getCharSetName() -> getCharSetName
    1:1:float getConfidence() -> getConfidence
    1:1:org.mozilla.universalchardet.prober.CharsetProber$ProbingState getState() -> getState
    1:29:org.mozilla.universalchardet.prober.CharsetProber$ProbingState handleData(byte[],int,int) -> handleData
    1:4:void reset() -> reset
org.mozilla.universalchardet.prober.EscCharsetProber -> org.mozilla.universalchardet.prober.EscCharsetProber:
    1:4:void <clinit>() -> <clinit>
    1:9:void <init>() -> <init>
    1:1:java.lang.String getCharSetName() -> getCharSetName
    1:1:org.mozilla.universalchardet.prober.CharsetProber$ProbingState getState() -> getState
    1:23:org.mozilla.universalchardet.prober.CharsetProber$ProbingState handleData(byte[],int,int) -> handleData
    1:6:void reset() -> reset
org.mozilla.universalchardet.prober.HebrewProber -> org.mozilla.universalchardet.prober.HebrewProber:
    1:4:void <init>() -> <init>
    1:24:java.lang.String getCharSetName() -> getCharSetName
    1:6:org.mozilla.universalchardet.prober.CharsetProber$ProbingState getState() -> getState
    1:28:org.mozilla.universalchardet.prober.CharsetProber$ProbingState handleData(byte[],int,int) -> handleData
    1:7:void reset() -> reset
    1:2:void setModalProbers(org.mozilla.universalchardet.prober.CharsetProber,org.mozilla.universalchardet.prober.CharsetProber) -> setModalProbers
org.mozilla.universalchardet.prober.Latin1Prober -> org.mozilla.universalchardet.prober.Latin1Prober:
    1:36:void <clinit>() -> <clinit>
    1:3:void <init>() -> <init>
    1:1:java.lang.String getCharSetName() -> getCharSetName
    1:15:float getConfidence() -> getConfidence
    1:1:org.mozilla.universalchardet.prober.CharsetProber$ProbingState getState() -> getState
    1:21:org.mozilla.universalchardet.prober.CharsetProber$ProbingState handleData(byte[],int,int) -> handleData
    1:4:void reset() -> reset
org.mozilla.universalchardet.prober.MBCSGroupProber -> org.mozilla.universalchardet.prober.MBCSGroupProber:
    1:21:void <init>() -> <init>
    1:7:java.lang.String getCharSetName() -> getCharSetName
    1:13:float getConfidence() -> getConfidence
    1:1:org.mozilla.universalchardet.prober.CharsetProber$ProbingState getState() -> getState
    1:37:org.mozilla.universalchardet.prober.CharsetProber$ProbingState handleData(byte[],int,int) -> handleData
    1:8:void reset() -> reset
org.mozilla.universalchardet.prober.SBCSGroupProber -> org.mozilla.universalchardet.prober.SBCSGroupProber:
    1:31:void <init>() -> <init>
    1:8:java.lang.String getCharSetName() -> getCharSetName
    1:13:float getConfidence() -> getConfidence
    1:1:org.mozilla.universalchardet.prober.CharsetProber$ProbingState getState() -> getState
    1:26:org.mozilla.universalchardet.prober.CharsetProber$ProbingState handleData(byte[],int,int) -> handleData
    1:8:void reset() -> reset
org.mozilla.universalchardet.prober.SJISProber -> org.mozilla.universalchardet.prober.SJISProber:
    1:1:void <clinit>() -> <clinit>
    1:6:void <init>() -> <init>
    1:1:java.lang.String getCharSetName() -> getCharSetName
    1:4:float getConfidence() -> getConfidence
    1:1:org.mozilla.universalchardet.prober.CharsetProber$ProbingState getState() -> getState
    1:31:org.mozilla.universalchardet.prober.CharsetProber$ProbingState handleData(byte[],int,int) -> handleData
    1:5:void reset() -> reset
org.mozilla.universalchardet.prober.SingleByteCharsetProber -> org.mozilla.universalchardet.prober.SingleByteCharsetProber:
    1:6:void <init>(org.mozilla.universalchardet.prober.sequence.SequenceModel) -> <init>
    7:12:void <init>(org.mozilla.universalchardet.prober.sequence.SequenceModel,boolean,org.mozilla.universalchardet.prober.CharsetProber) -> <init>
    1:4:java.lang.String getCharSetName() -> getCharSetName
    1:3:float getConfidence() -> getConfidence
    1:1:org.mozilla.universalchardet.prober.CharsetProber$ProbingState getState() -> getState
    1:31:org.mozilla.universalchardet.prober.CharsetProber$ProbingState handleData(byte[],int,int) -> handleData
    1:1:boolean keepEnglishLetters() -> keepEnglishLetters
    1:8:void reset() -> reset
org.mozilla.universalchardet.prober.UTF8Prober -> org.mozilla.universalchardet.prober.UTF8Prober:
    1:1:void <clinit>() -> <clinit>
    1:5:void <init>() -> <init>
    1:1:java.lang.String getCharSetName() -> getCharSetName
    1:2:float getConfidence() -> getConfidence
    1:1:org.mozilla.universalchardet.prober.CharsetProber$ProbingState getState() -> getState
    1:23:org.mozilla.universalchardet.prober.CharsetProber$ProbingState handleData(byte[],int,int) -> handleData
    1:3:void reset() -> reset
org.mozilla.universalchardet.prober.contextanalysis.EUCJPContextAnalysis -> org.mozilla.universalchardet.prober.contextanalysis.EUCJPContextAnalysis:
    1:1:void <init>() -> <init>
    1:20:void getOrder(org.mozilla.universalchardet.prober.contextanalysis.JapaneseContextAnalysis$Order,byte[],int) -> getOrder
    21:23:int getOrder(byte[],int) -> getOrder
org.mozilla.universalchardet.prober.contextanalysis.JapaneseContextAnalysis -> org.mozilla.universalchardet.prober.contextanalysis.JapaneseContextAnalysis:
    1:1:void <clinit>() -> <clinit>
    1:17:void <init>() -> <init>
    1:2:float getConfidence() -> getConfidence
    1:1:boolean gotEnoughData() -> gotEnoughData
    1:27:void handleData(byte[],int,int) -> handleData
    1:17:void handleOneChar(byte[],int,int) -> handleOneChar
    1:7:void reset() -> reset
org.mozilla.universalchardet.prober.contextanalysis.JapaneseContextAnalysis$Order -> org.mozilla.universalchardet.prober.contextanalysis.JapaneseContextAnalysis$Order:
    1:3:void <init>() -> <init>
org.mozilla.universalchardet.prober.contextanalysis.SJISContextAnalysis -> org.mozilla.universalchardet.prober.contextanalysis.SJISContextAnalysis:
    1:1:void <init>() -> <init>
    1:14:void getOrder(org.mozilla.universalchardet.prober.contextanalysis.JapaneseContextAnalysis$Order,byte[],int) -> getOrder
    15:17:int getOrder(byte[],int) -> getOrder
org.mozilla.universalchardet.prober.distributionanalysis.Big5DistributionAnalysis -> org.mozilla.universalchardet.prober.distributionanalysis.Big5DistributionAnalysis:
    1:1:void <clinit>() -> <clinit>
    1:3:void <init>() -> <init>
    1:3:int getOrder(byte[],int) -> getOrder
org.mozilla.universalchardet.prober.distributionanalysis.CharDistributionAnalysis -> org.mozilla.universalchardet.prober.distributionanalysis.CharDistributionAnalysis:
    1:2:void <init>() -> <init>
    1:6:float getConfidence() -> getConfidence
    1:1:boolean gotEnoughData() -> gotEnoughData
    0:8:void handleOneChar(byte[],int,int) -> handleOneChar
    1:2:void reset() -> reset
org.mozilla.universalchardet.prober.distributionanalysis.EUCJPDistributionAnalysis -> org.mozilla.universalchardet.prober.distributionanalysis.EUCJPDistributionAnalysis:
    1:1:void <init>() -> <init>
    1:3:int getOrder(byte[],int) -> getOrder
org.mozilla.universalchardet.prober.distributionanalysis.EUCKRDistributionAnalysis -> org.mozilla.universalchardet.prober.distributionanalysis.EUCKRDistributionAnalysis:
    1:1:void <clinit>() -> <clinit>
    1:3:void <init>() -> <init>
    1:3:int getOrder(byte[],int) -> getOrder
org.mozilla.universalchardet.prober.distributionanalysis.EUCTWDistributionAnalysis -> org.mozilla.universalchardet.prober.distributionanalysis.EUCTWDistributionAnalysis:
    1:1:void <clinit>() -> <clinit>
    1:3:void <init>() -> <init>
    1:3:int getOrder(byte[],int) -> getOrder
org.mozilla.universalchardet.prober.distributionanalysis.JISDistributionAnalysis -> org.mozilla.universalchardet.prober.distributionanalysis.JISDistributionAnalysis:
    1:1:void <clinit>() -> <clinit>
    1:3:void <init>() -> <init>
org.mozilla.universalchardet.prober.distributionanalysis.SJISDistributionAnalysis -> org.mozilla.universalchardet.prober.distributionanalysis.SJISDistributionAnalysis:
    1:1:void <init>() -> <init>
    1:9:int getOrder(byte[],int) -> getOrder
org.mozilla.universalchardet.prober.sequence.BulgarianModel -> org.mozilla.universalchardet.prober.sequence.BulgarianModel:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>(short[],java.lang.String) -> <init>
org.mozilla.universalchardet.prober.sequence.CyrillicModel -> org.mozilla.universalchardet.prober.sequence.CyrillicModel:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>(short[],java.lang.String) -> <init>
org.mozilla.universalchardet.prober.sequence.GreekModel -> org.mozilla.universalchardet.prober.sequence.GreekModel:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>(short[],java.lang.String) -> <init>
org.mozilla.universalchardet.prober.sequence.HebrewModel -> org.mozilla.universalchardet.prober.sequence.HebrewModel:
    1:20:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
org.mozilla.universalchardet.prober.sequence.Ibm855Model -> org.mozilla.universalchardet.prober.sequence.Ibm855Model:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
org.mozilla.universalchardet.prober.sequence.Ibm866Model -> org.mozilla.universalchardet.prober.sequence.Ibm866Model:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
org.mozilla.universalchardet.prober.sequence.Koi8rModel -> org.mozilla.universalchardet.prober.sequence.Koi8rModel:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
org.mozilla.universalchardet.prober.sequence.Latin5BulgarianModel -> org.mozilla.universalchardet.prober.sequence.Latin5BulgarianModel:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
org.mozilla.universalchardet.prober.sequence.Latin5Model -> org.mozilla.universalchardet.prober.sequence.Latin5Model:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
org.mozilla.universalchardet.prober.sequence.Latin7Model -> org.mozilla.universalchardet.prober.sequence.Latin7Model:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
org.mozilla.universalchardet.prober.sequence.MacCyrillicModel -> org.mozilla.universalchardet.prober.sequence.MacCyrillicModel:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
org.mozilla.universalchardet.prober.sequence.SequenceModel -> org.mozilla.universalchardet.prober.sequence.SequenceModel:
    1:6:void <init>(short[],byte[],float,boolean,java.lang.String) -> <init>
    1:1:java.lang.String getCharsetName() -> getCharsetName
    1:1:boolean getKeepEnglishLetter() -> getKeepEnglishLetter
    1:1:short getOrder(byte) -> getOrder
    1:1:byte getPrecedence(int) -> getPrecedence
    1:1:float getTypicalPositiveRatio() -> getTypicalPositiveRatio
org.mozilla.universalchardet.prober.sequence.ThaiModel -> org.mozilla.universalchardet.prober.sequence.ThaiModel:
    1:57:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
org.mozilla.universalchardet.prober.sequence.Win1251BulgarianModel -> org.mozilla.universalchardet.prober.sequence.Win1251BulgarianModel:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
org.mozilla.universalchardet.prober.sequence.Win1251Model -> org.mozilla.universalchardet.prober.sequence.Win1251Model:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
org.mozilla.universalchardet.prober.sequence.Win1253Model -> org.mozilla.universalchardet.prober.sequence.Win1253Model:
    1:1:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
org.mozilla.universalchardet.prober.statemachine.Big5SMModel -> org.mozilla.universalchardet.prober.statemachine.Big5SMModel:
    1:43:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
org.mozilla.universalchardet.prober.statemachine.CodingStateMachine -> org.mozilla.universalchardet.prober.statemachine.CodingStateMachine:
    1:3:void <init>(org.mozilla.universalchardet.prober.statemachine.SMModel) -> <init>
    1:1:java.lang.String getCodingStateMachine() -> getCodingStateMachine
    1:1:int getCurrentCharLen() -> getCurrentCharLen
    1:8:int nextState(byte) -> nextState
    1:1:void reset() -> reset
org.mozilla.universalchardet.prober.statemachine.EUCJPSMModel -> org.mozilla.universalchardet.prober.statemachine.EUCJPSMModel:
    1:45:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
org.mozilla.universalchardet.prober.statemachine.EUCKRSMModel -> org.mozilla.universalchardet.prober.statemachine.EUCKRSMModel:
    1:42:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
org.mozilla.universalchardet.prober.statemachine.EUCTWSMModel -> org.mozilla.universalchardet.prober.statemachine.EUCTWSMModel:
    1:46:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
org.mozilla.universalchardet.prober.statemachine.HZSMModel -> org.mozilla.universalchardet.prober.statemachine.HZSMModel:
    1:45:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
org.mozilla.universalchardet.prober.statemachine.ISO2022CNSMModel -> org.mozilla.universalchardet.prober.statemachine.ISO2022CNSMModel:
    1:47:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
org.mozilla.universalchardet.prober.statemachine.ISO2022JPSMModel -> org.mozilla.universalchardet.prober.statemachine.ISO2022JPSMModel:
    1:48:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
org.mozilla.universalchardet.prober.statemachine.ISO2022KRSMModel -> org.mozilla.universalchardet.prober.statemachine.ISO2022KRSMModel:
    1:44:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
org.mozilla.universalchardet.prober.statemachine.PkgInt -> org.mozilla.universalchardet.prober.statemachine.PkgInt:
    1:6:void <init>(int,int,int,int,int[]) -> <init>
    1:1:int pack4bits(int,int,int,int,int,int,int,int) -> pack4bits
    1:1:int pack8bits(int,int,int,int) -> pack8bits
    1:1:int unpack(int) -> unpack
org.mozilla.universalchardet.prober.statemachine.SJISSMModel -> org.mozilla.universalchardet.prober.statemachine.SJISSMModel:
    1:45:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
org.mozilla.universalchardet.prober.statemachine.SMModel -> org.mozilla.universalchardet.prober.statemachine.SMModel:
    1:6:void <init>(org.mozilla.universalchardet.prober.statemachine.PkgInt,int,org.mozilla.universalchardet.prober.statemachine.PkgInt,int[],java.lang.String) -> <init>
    1:1:int getCharLen(int) -> getCharLen
    1:1:int getClass(byte) -> getClass
    1:1:java.lang.String getName() -> getName
    1:1:int getNextState(int,int) -> getNextState
org.mozilla.universalchardet.prober.statemachine.UCS2BESMModel -> org.mozilla.universalchardet.prober.statemachine.UCS2BESMModel:
    1:46:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
org.mozilla.universalchardet.prober.statemachine.UTF8SMModel -> org.mozilla.universalchardet.prober.statemachine.UTF8SMModel:
    1:66:void <clinit>() -> <clinit>
    1:1:void <init>() -> <init>
pl.droidsonroids.gif.BuildConfig -> pl.droidsonroids.gif.BuildConfig:
    6:6:void <init>() -> <init>
pl.droidsonroids.gif.ConditionVariable -> pl.droidsonroids.gif.ConditionVariable:
    19:19:void <init>() -> <init>
    42:46:void block() -> block
    38:40:void close() -> close
    30:36:void open() -> open
    22:28:void set(boolean) -> set
pl.droidsonroids.gif.GifAnimationMetaData -> pl.droidsonroids.gif.GifAnimationMetaData:
    306:306:void <clinit>() -> <clinit>
    30:30:void <init>(android.os.Parcel,pl.droidsonroids.gif.GifAnimationMetaData$1) -> <init>
    51:52:void <init>(android.content.res.Resources,int) -> <init>
    63:64:void <init>(android.content.res.AssetManager,java.lang.String) -> <init>
    77:78:void <init>(java.lang.String) -> <init>
    88:89:void <init>(java.io.File) -> <init>
    101:102:void <init>(java.io.InputStream) -> <init>
    113:114:void <init>(android.content.res.AssetFileDescriptor) -> <init>
    124:125:void <init>(java.io.FileDescriptor) -> <init>
    136:137:void <init>(byte[]) -> <init>
    148:149:void <init>(java.nio.ByteBuffer) -> <init>
    161:162:void <init>(android.content.ContentResolver,android.net.Uri) -> <init>
    164:173:void <init>(pl.droidsonroids.gif.GifInfoHandle) -> <init>
    296:304:void <init>(android.os.Parcel) -> <init>
    282:282:int describeContents() -> describeContents
    232:232:long getAllocationByteCount() -> getAllocationByteCount
    245:260:long getDrawableAllocationByteCount(pl.droidsonroids.gif.GifDrawable,int) -> getDrawableAllocationByteCount
    211:211:int getDuration() -> getDuration
    186:186:int getHeight() -> getHeight
    202:202:int getLoopCount() -> getLoopCount
    269:269:long getMetadataAllocationByteCount() -> getMetadataAllocationByteCount
    193:193:int getNumberOfFrames() -> getNumberOfFrames
    179:179:int getWidth() -> getWidth
    218:218:boolean isAnimated() -> isAnimated
    275:277:java.lang.String toString() -> toString
    287:294:void writeToParcel(android.os.Parcel,int) -> writeToParcel
pl.droidsonroids.gif.GifAnimationMetaData$1 -> pl.droidsonroids.gif.GifAnimationMetaData$1:
    306:306:void <init>() -> <init>
    306:306:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    308:308:pl.droidsonroids.gif.GifAnimationMetaData createFromParcel(android.os.Parcel) -> createFromParcel
    306:306:java.lang.Object[] newArray(int) -> newArray
    312:312:pl.droidsonroids.gif.GifAnimationMetaData[] newArray(int) -> newArray
pl.droidsonroids.gif.GifDecoder -> pl.droidsonroids.gif.GifDecoder:
    28:29:void <init>(pl.droidsonroids.gif.InputSource) -> <init>
    38:43:void <init>(pl.droidsonroids.gif.InputSource,pl.droidsonroids.gif.GifOptions) -> <init>
    161:170:void checkBuffer(android.graphics.Bitmap) -> checkBuffer
    102:102:long getAllocationByteCount() -> getAllocationByteCount
    51:51:java.lang.String getComment() -> getComment
    122:122:int getDuration() -> getDuration
    113:113:int getFrameDuration(int) -> getFrameDuration
    136:136:int getHeight() -> getHeight
    60:60:int getLoopCount() -> getLoopCount
    143:143:int getNumberOfFrames() -> getNumberOfFrames
    69:69:long getSourceLength() -> getSourceLength
    129:129:int getWidth() -> getWidth
    150:150:boolean isAnimated() -> isAnimated
    157:158:void recycle() -> recycle
    92:94:void seekToFrame(int,android.graphics.Bitmap) -> seekToFrame
    80:82:void seekToTime(int,android.graphics.Bitmap) -> seekToTime
pl.droidsonroids.gif.GifDrawable -> pl.droidsonroids.gif.GifDrawable:
    96:100:void <init>(android.content.res.Resources,int) -> <init>
    111:112:void <init>(android.content.res.AssetManager,java.lang.String) -> <init>
    125:126:void <init>(java.lang.String) -> <init>
    136:137:void <init>(java.io.File) -> <init>
    149:150:void <init>(java.io.InputStream) -> <init>
    161:162:void <init>(android.content.res.AssetFileDescriptor) -> <init>
    172:173:void <init>(java.io.FileDescriptor) -> <init>
    184:185:void <init>(byte[]) -> <init>
    196:197:void <init>(java.nio.ByteBuffer) -> <init>
    209:210:void <init>(android.content.ContentResolver,android.net.Uri) -> <init>
    228:229:void <init>(pl.droidsonroids.gif.InputSource,pl.droidsonroids.gif.GifDrawable,java.util.concurrent.ScheduledThreadPoolExecutor,boolean,pl.droidsonroids.gif.GifOptions) -> <init>
    59:259:void <init>(pl.droidsonroids.gif.GifInfoHandle,pl.droidsonroids.gif.GifDrawable,java.util.concurrent.ScheduledThreadPoolExecutor,boolean) -> <init>
    839:840:void addAnimationListener(pl.droidsonroids.gif.AnimationListener) -> addAnimationListener
    647:647:boolean canPause() -> canPause
    657:657:boolean canSeekBackward() -> canSeekBackward
    667:667:boolean canSeekForward() -> canSeekForward
    387:391:void cancelPendingRenderTask() -> cancelPendingRenderTask
    465:467:pl.droidsonroids.gif.GifDrawable createFromResource(android.content.res.Resources,int) -> createFromResource
    780:795:void draw(android.graphics.Canvas) -> draw
    701:707:long getAllocationByteCount() -> getAllocationByteCount
    816:816:int getAlpha() -> getAlpha
    678:678:int getAudioSessionId() -> getAudioSessionId
    637:637:int getBufferPercentage() -> getBufferPercentage
    854:854:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    405:405:java.lang.String getComment() -> getComment
    999:1002:float getCornerRadius() -> getCornerRadius
    863:865:android.graphics.Bitmap getCurrentFrame() -> getCurrentFrame
    943:943:int getCurrentFrameIndex() -> getCurrentFrameIndex
    953:957:int getCurrentLoop() -> getCurrentLoop
    513:513:int getCurrentPosition() -> getCurrentPosition
    502:502:int getDuration() -> getDuration
    451:451:pl.droidsonroids.gif.GifError getError() -> getError
    690:690:int getFrameByteCount() -> getFrameByteCount
    979:979:int getFrameDuration(int) -> getFrameDuration
    730:730:long getInputSourceByteCount() -> getInputSourceByteCount
    294:294:int getIntrinsicHeight() -> getIntrinsicHeight
    299:299:int getIntrinsicWidth() -> getIntrinsicWidth
    415:415:int getLoopCount() -> getLoopCount
    717:717:long getMetadataAllocationByteCount() -> getMetadataAllocationByteCount
    441:441:int getNumberOfFrames() -> getNumberOfFrames
    321:324:int getOpacity() -> getOpacity
    811:811:android.graphics.Paint getPaint() -> getPaint
    755:761:int getPixel(int,int) -> getPixel
    740:741:void getPixels(int[]) -> getPixels
    1023:1023:pl.droidsonroids.gif.transforms.Transform getTransform() -> getTransform
    288:290:void invalidateSelf() -> invalidateSelf
    967:967:boolean isAnimationCompleted() -> isAnimationCompleted
    626:626:boolean isPlaying() -> isPlaying
    283:283:boolean isRecycled() -> isRecycled
    395:395:boolean isRunning() -> isRunning
    902:902:boolean isStateful() -> isStateful
    766:770:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    893:897:boolean onStateChange(int[]) -> onStateChange
    489:490:void pause() -> pause
    269:271:void recycle() -> recycle
    849:849:boolean removeAnimationListener(pl.droidsonroids.gif.AnimationListener) -> removeAnimationListener
    359:367:void reset() -> reset
    798:804:void scheduleNextRender() -> scheduleNextRender
    530:540:void seekTo(int) -> seekTo
    549:557:void seekToBlocking(int) -> seekToBlocking
    567:577:void seekToFrame(int) -> seekToFrame
    587:596:android.graphics.Bitmap seekToFrameAndGet(int) -> seekToFrameAndGet
    607:616:android.graphics.Bitmap seekToPositionAndGet(int) -> seekToPositionAndGet
    304:305:void setAlpha(int) -> setAlpha
    309:310:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    990:992:void setCornerRadius(float) -> setCornerRadius
    828:830:void setDither(boolean) -> setDither
    821:823:void setFilterBitmap(boolean) -> setFilterBitmap
    424:425:void setLoopCount(int) -> setLoopCount
    481:482:void setSpeed(float) -> setSpeed
    879:882:void setTintList(android.content.res.ColorStateList) -> setTintList
    886:889:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    1011:1015:void setTransform(pl.droidsonroids.gif.transforms.Transform) -> setTransform
    921:934:boolean setVisible(boolean,boolean) -> setVisible
    274:277:void shutdown() -> shutdown
    333:341:void start() -> start
    344:351:void startAnimation(long) -> startAnimation
    375:384:void stop() -> stop
    433:434:java.lang.String toString() -> toString
    869:874:android.graphics.PorterDuffColorFilter updateTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> updateTintFilter
pl.droidsonroids.gif.GifDrawable$1 -> pl.droidsonroids.gif.GifDrawable$1:
    359:359:void <init>(pl.droidsonroids.gif.GifDrawable,pl.droidsonroids.gif.GifDrawable) -> <init>
    362:365:void doWork() -> doWork
pl.droidsonroids.gif.GifDrawable$2 -> pl.droidsonroids.gif.GifDrawable$2:
    533:533:void <init>(pl.droidsonroids.gif.GifDrawable,pl.droidsonroids.gif.GifDrawable,int) -> <init>
    536:538:void doWork() -> doWork
pl.droidsonroids.gif.GifDrawable$3 -> pl.droidsonroids.gif.GifDrawable$3:
    570:570:void <init>(pl.droidsonroids.gif.GifDrawable,pl.droidsonroids.gif.GifDrawable,int) -> <init>
    573:575:void doWork() -> doWork
pl.droidsonroids.gif.GifDrawableBuilder -> pl.droidsonroids.gif.GifDrawableBuilder:
    7:7:void <init>() -> <init>
    7:7:pl.droidsonroids.gif.GifDrawableInit self() -> self
    11:11:pl.droidsonroids.gif.GifDrawableBuilder self() -> self
pl.droidsonroids.gif.GifDrawableInit -> pl.droidsonroids.gif.GifDrawableInit:
    26:32:void <init>() -> <init>
    61:64:pl.droidsonroids.gif.GifDrawable build() -> build
    157:158:pl.droidsonroids.gif.GifDrawableInit from(java.io.InputStream) -> from
    168:169:pl.droidsonroids.gif.GifDrawableInit from(android.content.res.AssetFileDescriptor) -> from
    179:180:pl.droidsonroids.gif.GifDrawableInit from(java.io.FileDescriptor) -> from
    191:192:pl.droidsonroids.gif.GifDrawableInit from(android.content.res.AssetManager,java.lang.String) -> from
    203:204:pl.droidsonroids.gif.GifDrawableInit from(android.content.ContentResolver,android.net.Uri) -> from
    214:215:pl.droidsonroids.gif.GifDrawableInit from(java.io.File) -> from
    225:226:pl.droidsonroids.gif.GifDrawableInit from(java.lang.String) -> from
    236:237:pl.droidsonroids.gif.GifDrawableInit from(byte[]) -> from
    247:248:pl.droidsonroids.gif.GifDrawableInit from(java.nio.ByteBuffer) -> from
    259:260:pl.droidsonroids.gif.GifDrawableInit from(android.content.res.Resources,int) -> from
    287:287:java.util.concurrent.ScheduledThreadPoolExecutor getExecutor() -> getExecutor
    269:269:pl.droidsonroids.gif.InputSource getInputSource() -> getInputSource
    278:278:pl.droidsonroids.gif.GifDrawable getOldDrawable() -> getOldDrawable
    303:303:pl.droidsonroids.gif.GifOptions getOptions() -> getOptions
    294:294:boolean isRenderingTriggeredOnDraw() -> isRenderingTriggeredOnDraw
    146:147:pl.droidsonroids.gif.GifDrawableInit options(pl.droidsonroids.gif.GifOptions) -> options
    117:118:pl.droidsonroids.gif.GifDrawableInit renderingTriggeredOnDraw(boolean) -> renderingTriggeredOnDraw
    50:51:pl.droidsonroids.gif.GifDrawableInit sampleSize(int) -> sampleSize
    130:130:pl.droidsonroids.gif.GifDrawableInit setRenderingTriggeredOnDraw(boolean) -> setRenderingTriggeredOnDraw
    99:100:pl.droidsonroids.gif.GifDrawableInit taskExecutor(java.util.concurrent.ScheduledThreadPoolExecutor) -> taskExecutor
    87:88:pl.droidsonroids.gif.GifDrawableInit threadPoolSize(int) -> threadPoolSize
    74:75:pl.droidsonroids.gif.GifDrawableInit with(pl.droidsonroids.gif.GifDrawable) -> with
pl.droidsonroids.gif.GifError -> pl.droidsonroids.gif.GifError:
    13:103:void <clinit>() -> <clinit>
    111:114:void <init>(java.lang.String,int,int,java.lang.String) -> <init>
    117:123:pl.droidsonroids.gif.GifError fromCode(int) -> fromCode
    130:130:int getErrorCode() -> getErrorCode
    134:134:java.lang.String getFormattedDescription() -> getFormattedDescription
    13:13:pl.droidsonroids.gif.GifError valueOf(java.lang.String) -> valueOf
    13:13:pl.droidsonroids.gif.GifError[] values() -> values
pl.droidsonroids.gif.GifIOException -> pl.droidsonroids.gif.GifIOException:
    30:33:void <init>(int,java.lang.String) -> <init>
    36:39:pl.droidsonroids.gif.GifIOException fromCode(int) -> fromCode
    24:27:java.lang.String getMessage() -> getMessage
pl.droidsonroids.gif.GifImageButton -> pl.droidsonroids.gif.GifImageButton:
    28:29:void <init>(android.content.Context) -> <init>
    40:42:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    54:56:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    70:72:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    122:130:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    115:117:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    75:82:void postInit(pl.droidsonroids.gif.GifViewUtils$GifImageViewAttributes) -> postInit
    108:111:void setBackgroundResource(int) -> setBackgroundResource
    139:140:void setFreezesAnimation(boolean) -> setFreezesAnimation
    101:104:void setImageResource(int) -> setImageResource
    94:97:void setImageURI(android.net.Uri) -> setImageURI
pl.droidsonroids.gif.GifImageView -> pl.droidsonroids.gif.GifImageView:
    28:29:void <init>(android.content.Context) -> <init>
    40:42:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    54:56:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    70:72:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    122:130:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    115:117:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    75:82:void postInit(pl.droidsonroids.gif.GifViewUtils$GifImageViewAttributes) -> postInit
    108:111:void setBackgroundResource(int) -> setBackgroundResource
    139:140:void setFreezesAnimation(boolean) -> setFreezesAnimation
    101:104:void setImageResource(int) -> setImageResource
    94:97:void setImageURI(android.net.Uri) -> setImageURI
pl.droidsonroids.gif.GifInfoHandle -> pl.droidsonroids.gif.GifInfoHandle:
    27:28:void <clinit>() -> <clinit>
    36:37:void <init>() -> <init>
    39:41:void <init>(java.io.FileDescriptor) -> <init>
    43:45:void <init>(byte[]) -> <init>
    47:49:void <init>(java.nio.ByteBuffer) -> <init>
    51:53:void <init>(java.lang.String) -> <init>
    55:60:void <init>(java.io.InputStream) -> <init>
    62:72:void <init>(android.content.res.AssetFileDescriptor) -> <init>
    203:204:void bindSurface(android.view.Surface,long[]) -> bindSurface
    300:304:void finalize() -> finalize
    286:286:long getAllocationByteCount() -> getAllocationByteCount
    224:224:java.lang.String getComment() -> getComment
    269:269:int getCurrentFrameIndex() -> getCurrentFrameIndex
    273:273:int getCurrentLoop() -> getCurrentLoop
    265:265:int getCurrentPosition() -> getCurrentPosition
    261:261:int getDuration() -> getDuration
    322:324:int getFrameDuration(int) -> getFrameDuration
    336:336:int getHeight() -> getHeight
    228:228:int getLoopCount() -> getLoopCount
    290:290:long getMetadataByteCount() -> getMetadataByteCount
    245:245:int getNativeErrorCode() -> getNativeErrorCode
    91:98:int getNativeFileDescriptor(java.io.FileDescriptor,boolean) -> getNativeFileDescriptor
    340:340:int getNumberOfFrames() -> getNumberOfFrames
    315:315:long[] getSavedState() -> getSavedState
    241:241:long getSourceLength() -> getSourceLength
    332:332:int getWidth() -> getWidth
    348:349:void glTexImage2D(int,int) -> glTexImage2D
    352:353:void glTexSubImage2D(int,int) -> glTexSubImage2D
    364:365:void initTexImageDescriptor() -> initTexImageDescriptor
    311:311:boolean isAnimationCompleted() -> isAnimationCompleted
    344:344:boolean isOpaque() -> isOpaque
    294:294:boolean isRecycled() -> isRecycled
    76:85:long openFileDescriptor(java.io.FileDescriptor,long,boolean) -> openFileDescriptor
    102:109:pl.droidsonroids.gif.GifInfoHandle openUri(android.content.ContentResolver,android.net.Uri) -> openUri
    306:308:void postUnbindSurface() -> postUnbindSurface
    206:209:void recycle() -> recycle
    199:199:long renderFrame(android.graphics.Bitmap) -> renderFrame
    216:216:boolean reset() -> reset
    212:212:long restoreRemainder() -> restoreRemainder
    319:319:int restoreSavedState(long[],android.graphics.Bitmap) -> restoreSavedState
    219:221:void saveRemainder() -> saveRemainder
    281:283:void seekToFrame(int,android.graphics.Bitmap) -> seekToFrame
    368:370:void seekToFrameGL(int) -> seekToFrameGL
    276:278:void seekToTime(int,android.graphics.Bitmap) -> seekToTime
    232:238:void setLoopCount(int) -> setLoopCount
    328:329:void setOptions(char,boolean) -> setOptions
    249:258:void setSpeedFactor(float) -> setSpeedFactor
    356:357:void startDecoderThread() -> startDecoderThread
    360:361:void stopDecoderThread() -> stopDecoderThread
    373:377:void throwIfFrameIndexOutOfBounds(int) -> throwIfFrameIndexOutOfBounds
pl.droidsonroids.gif.GifOptions -> pl.droidsonroids.gif.GifOptions:
    15:17:void <init>() -> <init>
    20:22:void reset() -> reset
    63:69:void setFrom(pl.droidsonroids.gif.GifOptions) -> setFrom
    59:60:void setInIsOpaque(boolean) -> setInIsOpaque
    38:43:void setInSampleSize(int) -> setInSampleSize
pl.droidsonroids.gif.GifRenderingExecutor -> pl.droidsonroids.gif.GifRenderingExecutor:
    9:9:void <init>(pl.droidsonroids.gif.GifRenderingExecutor$1) -> <init>
    21:22:void <init>() -> <init>
    17:17:pl.droidsonroids.gif.GifRenderingExecutor getInstance() -> getInstance
pl.droidsonroids.gif.GifRenderingExecutor$InstanceHolder -> pl.droidsonroids.gif.GifRenderingExecutor$InstanceHolder:
    13:13:void <clinit>() -> <clinit>
    12:12:void <init>() -> <init>
    12:12:pl.droidsonroids.gif.GifRenderingExecutor access$100() -> access$100
pl.droidsonroids.gif.GifTexImage2D -> pl.droidsonroids.gif.GifTexImage2D:
    33:40:void <init>(pl.droidsonroids.gif.InputSource,pl.droidsonroids.gif.GifOptions) -> <init>
    158:162:void finalize() -> finalize
    74:74:int getCurrentFrameIndex() -> getCurrentFrameIndex
    152:152:int getDuration() -> getDuration
    50:50:int getFrameDuration(int) -> getFrameDuration
    143:143:int getHeight() -> getHeight
    67:67:int getNumberOfFrames() -> getNumberOfFrames
    136:136:int getWidth() -> getWidth
    95:96:void glTexImage2D(int,int) -> glTexImage2D
    106:107:void glTexSubImage2D(int,int) -> glTexSubImage2D
    127:130:void recycle() -> recycle
    60:61:void seekToFrame(int) -> seekToFrame
    84:85:void setSpeed(float) -> setSpeed
    113:114:void startDecoderThread() -> startDecoderThread
    120:121:void stopDecoderThread() -> stopDecoderThread
pl.droidsonroids.gif.GifTextView -> pl.droidsonroids.gif.GifTextView:
    33:34:void <init>(android.content.Context) -> <init>
    45:47:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    59:61:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    75:77:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    120:130:void applyGifViewAttributes() -> applyGifViewAttributes
    134:149:android.graphics.drawable.Drawable getGifOrDefaultDrawable(int) -> getGifOrDefaultDrawable
    88:117:void init(android.util.AttributeSet,int,int) -> init
    200:202:void onAttachedToWindow() -> onAttachedToWindow
    206:208:void onDetachedFromWindow() -> onDetachedFromWindow
    180:196:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    165:175:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    212:213:void setBackgroundResource(int) -> setBackgroundResource
    160:161:void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    216:218:void setCompoundDrawablesVisible(boolean) -> setCompoundDrawablesVisible
    155:156:void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesWithIntrinsicBounds
    80:85:void setDrawablesVisible(android.graphics.drawable.Drawable[],boolean) -> setDrawablesVisible
    227:228:void setFreezesAnimation(boolean) -> setFreezesAnimation
pl.droidsonroids.gif.GifTextureView -> pl.droidsonroids.gif.GifTextureView:
    47:47:void <clinit>() -> <clinit>
    57:67:void <init>(android.content.Context) -> <init>
    57:72:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    57:77:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    57:83:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    45:45:pl.droidsonroids.gif.InputSource access$000(pl.droidsonroids.gif.GifTextureView) -> access$000
    45:45:pl.droidsonroids.gif.GifViewUtils$GifViewAttributes access$100(pl.droidsonroids.gif.GifTextureView) -> access$100
    45:45:void access$200(pl.droidsonroids.gif.GifTextureView,android.view.TextureView$SurfaceTextureListener) -> access$200
    45:45:void access$400(pl.droidsonroids.gif.GifTextureView,pl.droidsonroids.gif.GifInfoHandle) -> access$400
    45:45:float access$500(pl.droidsonroids.gif.GifTextureView) -> access$500
    142:157:pl.droidsonroids.gif.InputSource findSource(android.content.res.TypedArray) -> findSource
    356:359:java.io.IOException getIOException() -> getIOException
    379:379:android.widget.ImageView$ScaleType getScaleType() -> getScaleType
    127:127:android.view.TextureView$SurfaceTextureListener getSurfaceTextureListener() -> getSurfaceTextureListener
    462:466:android.graphics.Matrix getTransform(android.graphics.Matrix) -> getTransform
    86:107:void init(android.util.AttributeSet,int,int) -> init
    295:301:void onDetachedFromWindow() -> onDetachedFromWindow
    478:485:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    471:472:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    494:495:void setFreezesAnimation(boolean) -> setFreezesAnimation
    436:437:void setImageMatrix(android.graphics.Matrix) -> setImageMatrix
    309:311:void setInputSource(pl.droidsonroids.gif.InputSource) -> setInputSource
    321:333:void setInputSource(pl.droidsonroids.gif.InputSource,pl.droidsonroids.gif.GifTextureView$PlaceholderDrawListener) -> setInputSource
    287:291:void setOpaque(boolean) -> setOpaque
    370:372:void setScaleType(android.widget.ImageView$ScaleType) -> setScaleType
    343:345:void setSpeed(float) -> setSpeed
    273:274:void setSuperSurfaceTextureListener(android.view.TextureView$SurfaceTextureListener) -> setSuperSurfaceTextureListener
    138:138:void setSurfaceTexture(android.graphics.SurfaceTexture) -> setSurfaceTexture
    117:117:void setSurfaceTextureListener(android.view.TextureView$SurfaceTextureListener) -> setSurfaceTextureListener
    447:449:void setTransform(android.graphics.Matrix) -> setTransform
    383:427:void updateTextureViewSize(pl.droidsonroids.gif.GifInfoHandle) -> updateTextureViewSize
pl.droidsonroids.gif.GifTextureView$1 -> pl.droidsonroids.gif.GifTextureView$1:
    391:391:void <clinit>() -> <clinit>
pl.droidsonroids.gif.GifTextureView$RenderThread -> pl.droidsonroids.gif.GifTextureView$RenderThread:
    162:171:void <init>(pl.droidsonroids.gif.GifTextureView) -> <init>
    160:160:pl.droidsonroids.gif.GifInfoHandle access$300(pl.droidsonroids.gif.GifTextureView$RenderThread) -> access$300
    160:160:java.io.IOException access$600(pl.droidsonroids.gif.GifTextureView$RenderThread) -> access$600
    263:269:void dispose(pl.droidsonroids.gif.GifTextureView,pl.droidsonroids.gif.GifTextureView$PlaceholderDrawListener) -> dispose
    237:242:void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureAvailable
    251:254:boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture) -> onSurfaceTextureDestroyed
    247:247:void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureSizeChanged
    260:260:void onSurfaceTextureUpdated(android.graphics.SurfaceTexture) -> onSurfaceTextureUpdated
    176:233:void run() -> run
pl.droidsonroids.gif.GifTextureView$RenderThread$1 -> pl.droidsonroids.gif.GifTextureView$RenderThread$1:
    200:200:void <init>(pl.droidsonroids.gif.GifTextureView$RenderThread,pl.droidsonroids.gif.GifTextureView) -> <init>
    203:204:void run() -> run
pl.droidsonroids.gif.GifViewSavedState -> pl.droidsonroids.gif.GifViewSavedState:
    47:47:void <clinit>() -> <clinit>
    9:9:void <init>(android.os.Parcel,pl.droidsonroids.gif.GifViewSavedState$1) -> <init>
    14:24:void <init>(android.os.Parcelable,android.graphics.drawable.Drawable[]) -> <init>
    27:31:void <init>(android.os.Parcel) -> <init>
    34:37:void <init>(android.os.Parcelable,long[]) -> <init>
    59:63:void restoreState(android.graphics.drawable.Drawable,int) -> restoreState
    41:45:void writeToParcel(android.os.Parcel,int) -> writeToParcel
pl.droidsonroids.gif.GifViewSavedState$1 -> pl.droidsonroids.gif.GifViewSavedState$1:
    47:47:void <init>() -> <init>
    47:47:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    50:50:pl.droidsonroids.gif.GifViewSavedState createFromParcel(android.os.Parcel) -> createFromParcel
    47:47:java.lang.Object[] newArray(int) -> newArray
    54:54:pl.droidsonroids.gif.GifViewSavedState[] newArray(int) -> newArray
pl.droidsonroids.gif.GifViewUtils -> pl.droidsonroids.gif.GifViewUtils:
    22:22:void <clinit>() -> <clinit>
    24:25:void <init>() -> <init>
    41:44:void applyLoopCount(int,android.graphics.drawable.Drawable) -> applyLoopCount
    82:98:float getDensityScale(android.content.res.Resources,int) -> getDensityScale
    28:37:pl.droidsonroids.gif.GifViewUtils$GifImageViewAttributes initImageView(android.widget.ImageView,android.util.AttributeSet,int,int) -> initImageView
    70:78:boolean setGifImageUri(android.widget.ImageView,android.net.Uri) -> setGifImageUri
    48:66:boolean setResource(android.widget.ImageView,boolean,int) -> setResource
pl.droidsonroids.gif.GifViewUtils$GifImageViewAttributes -> pl.droidsonroids.gif.GifViewUtils$GifImageViewAttributes:
    123:126:void <init>(android.widget.ImageView,android.util.AttributeSet,int,int) -> <init>
    129:132:void <init>() -> <init>
    135:142:int getResourceId(android.widget.ImageView,android.util.AttributeSet,boolean) -> getResourceId
pl.droidsonroids.gif.GifViewUtils$GifViewAttributes -> pl.droidsonroids.gif.GifViewUtils$GifViewAttributes:
    105:110:void <init>(android.view.View,android.util.AttributeSet,int,int) -> <init>
    112:115:void <init>() -> <init>
pl.droidsonroids.gif.InputSource -> pl.droidsonroids.gif.InputSource:
    24:24:void <init>(pl.droidsonroids.gif.InputSource$1) -> <init>
    25:26:void <init>() -> <init>
    33:33:pl.droidsonroids.gif.GifDrawable createGifDrawable(pl.droidsonroids.gif.GifDrawable,java.util.concurrent.ScheduledThreadPoolExecutor,boolean,pl.droidsonroids.gif.GifOptions) -> createGifDrawable
    37:39:pl.droidsonroids.gif.GifInfoHandle createHandleWith(pl.droidsonroids.gif.GifOptions) -> createHandleWith
pl.droidsonroids.gif.InputSource$AssetFileDescriptorSource -> pl.droidsonroids.gif.InputSource$AssetFileDescriptorSource:
    241:243:void <init>(android.content.res.AssetFileDescriptor) -> <init>
    247:247:pl.droidsonroids.gif.GifInfoHandle open() -> open
pl.droidsonroids.gif.InputSource$AssetSource -> pl.droidsonroids.gif.InputSource$AssetSource:
    153:156:void <init>(android.content.res.AssetManager,java.lang.String) -> <init>
    160:160:pl.droidsonroids.gif.GifInfoHandle open() -> open
pl.droidsonroids.gif.InputSource$ByteArraySource -> pl.droidsonroids.gif.InputSource$ByteArraySource:
    76:78:void <init>(byte[]) -> <init>
    82:82:pl.droidsonroids.gif.GifInfoHandle open() -> open
pl.droidsonroids.gif.InputSource$DirectByteBufferSource -> pl.droidsonroids.gif.InputSource$DirectByteBufferSource:
    54:56:void <init>(java.nio.ByteBuffer) -> <init>
    60:60:pl.droidsonroids.gif.GifInfoHandle open() -> open
pl.droidsonroids.gif.InputSource$FileDescriptorSource -> pl.droidsonroids.gif.InputSource$FileDescriptorSource:
    175:177:void <init>(java.io.FileDescriptor) -> <init>
    181:181:pl.droidsonroids.gif.GifInfoHandle open() -> open
pl.droidsonroids.gif.InputSource$FileSource -> pl.droidsonroids.gif.InputSource$FileSource:
    97:99:void <init>(java.io.File) -> <init>
    106:108:void <init>(java.lang.String) -> <init>
    112:112:pl.droidsonroids.gif.GifInfoHandle open() -> open
pl.droidsonroids.gif.InputSource$InputStreamSource -> pl.droidsonroids.gif.InputSource$InputStreamSource:
    196:198:void <init>(java.io.InputStream) -> <init>
    202:202:pl.droidsonroids.gif.GifInfoHandle open() -> open
pl.droidsonroids.gif.InputSource$ResourcesSource -> pl.droidsonroids.gif.InputSource$ResourcesSource:
    219:222:void <init>(android.content.res.Resources,int) -> <init>
    226:226:pl.droidsonroids.gif.GifInfoHandle open() -> open
pl.droidsonroids.gif.InputSource$UriSource -> pl.droidsonroids.gif.InputSource$UriSource:
    129:132:void <init>(android.content.ContentResolver,android.net.Uri) -> <init>
    136:136:pl.droidsonroids.gif.GifInfoHandle open() -> open
pl.droidsonroids.gif.InvalidationHandler -> pl.droidsonroids.gif.InvalidationHandler:
    18:20:void <init>(pl.droidsonroids.gif.GifDrawable) -> <init>
    24:35:void handleMessage(android.os.Message) -> handleMessage
pl.droidsonroids.gif.LibraryLoader -> pl.droidsonroids.gif.LibraryLoader:
    21:22:void <init>() -> <init>
    35:45:android.content.Context getContext() -> getContext
    31:32:void initialize(android.content.Context) -> initialize
    50:54:void loadLibrary() -> loadLibrary
pl.droidsonroids.gif.MultiCallback -> pl.droidsonroids.gif.MultiCallback:
    31:32:void <init>() -> <init>
    24:43:void <init>(boolean) -> <init>
    97:106:void addView(android.graphics.drawable.Drawable$Callback) -> addView
    47:61:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    114:122:void removeView(android.graphics.drawable.Drawable$Callback) -> removeView
    65:75:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    79:89:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
pl.droidsonroids.gif.MultiCallback$CallbackWeakReference -> pl.droidsonroids.gif.MultiCallback$CallbackWeakReference:
    126:127:void <init>(android.graphics.drawable.Drawable$Callback) -> <init>
    131:138:boolean equals(java.lang.Object) -> equals
    143:144:int hashCode() -> hashCode
pl.droidsonroids.gif.PlaceholderDrawingSurfaceTextureListener -> pl.droidsonroids.gif.PlaceholderDrawingSurfaceTextureListener:
    11:13:void <init>(pl.droidsonroids.gif.GifTextureView$PlaceholderDrawListener) -> <init>
    17:22:void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureAvailable
    31:31:boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture) -> onSurfaceTextureDestroyed
    27:27:void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int) -> onSurfaceTextureSizeChanged
    37:37:void onSurfaceTextureUpdated(android.graphics.SurfaceTexture) -> onSurfaceTextureUpdated
pl.droidsonroids.gif.RenderTask -> pl.droidsonroids.gif.RenderTask:
    12:13:void <init>(pl.droidsonroids.gif.GifDrawable) -> <init>
    17:34:void doWork() -> doWork
pl.droidsonroids.gif.SafeRunnable -> pl.droidsonroids.gif.SafeRunnable:
    10:12:void <init>(pl.droidsonroids.gif.GifDrawable) -> <init>
    17:27:void run() -> run
pl.droidsonroids.gif.transforms.CornerRadiusTransform -> pl.droidsonroids.gif.transforms.CornerRadiusTransform:
    22:29:void <init>(float) -> <init>
    63:63:android.graphics.RectF getBounds() -> getBounds
    53:53:float getCornerRadius() -> getCornerRadius
    68:70:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    74:87:void onDraw(android.graphics.Canvas,android.graphics.Paint,android.graphics.Bitmap) -> onDraw
    37:38:void setCornerRadius(float) -> setCornerRadius
    41:46:void setCornerRadiusSafely(float) -> setCornerRadiusSafely
